; ModuleID = '../../components/omnibox/browser/keyword_provider.cc'
source_filename = "../../components/omnibox/browser/keyword_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%class.KeywordProvider = type { %class.AutocompleteProvider, %class.AutocompleteProviderListener*, %class.AutocompleteInput, %class.TemplateURLService*, %"class.std::__1::unique_ptr.201" }
%class.AutocompleteProvider = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i64, %"class.std::__1::vector", i8, i32 }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.AutocompleteMatch*, %struct.AutocompleteMatch*, %"class.std::__1::__compressed_pair" }
%struct.AutocompleteMatch = type { %class.AutocompleteProvider*, i32, i32, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %struct.SplitAutocompletion, i8, %class.GURL, %class.GURL, %"class.std::__1::basic_string.7", %class.GURL, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.214", %"class.std::__1::basic_string", %"class.std::__1::vector.214", %"class.std::__1::basic_string", %"class.std::__1::vector.214", %"class.absl::optional.221", i8, [7 x i8], %"class.absl::optional.226", i32, i32, i8, %"class.base::internal::flat_tree", %"class.std::__1::unique_ptr.250", %"class.std::__1::basic_string", i8, %class.scoped_refptr.255, i8, %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.262", %"class.std::__1::map.269", %"class.std::__1::vector", %"class.std::__1::vector.278", %"class.std::__1::vector.300" }
%struct.SplitAutocompletion = type { %"class.std::__1::basic_string", %"class.std::__1::vector.207" }
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.209" }
%"class.gfx::Range" = type { i32, i32 }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.gfx::Range"* }
%"class.std::__1::basic_string.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.10 }
%union.anon.10 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.7", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.GURL* }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"*, %"class.std::__1::__compressed_pair.216" }
%"struct.AutocompleteMatch::ACMatchClassification" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.AutocompleteMatch::ACMatchClassification"* }
%"class.absl::optional.221" = type { %"class.absl::optional_internal::optional_data.222" }
%"class.absl::optional_internal::optional_data.222" = type { %"class.absl::optional_internal::optional_data_base.223" }
%"class.absl::optional_internal::optional_data_base.223" = type { %"class.absl::optional_internal::optional_data_dtor_base.224" }
%"class.absl::optional_internal::optional_data_dtor_base.224" = type { i8, %union.anon.225 }
%union.anon.225 = type { i32 }
%"class.absl::optional.226" = type { %"class.absl::optional_internal::optional_data.227" }
%"class.absl::optional_internal::optional_data.227" = type { %"class.absl::optional_internal::optional_data_base.228" }
%"class.absl::optional_internal::optional_data_base.228" = type { %"class.absl::optional_internal::optional_data_dtor_base.229" }
%"class.absl::optional_internal::optional_data_dtor_base.229" = type { i8, [7 x i8], %union.anon.230 }
%union.anon.230 = type { %class.SuggestionAnswer }
%class.SuggestionAnswer = type <{ %class.GURL, %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine", i32, [4 x i8] }>
%"class.SuggestionAnswer::ImageLine" = type { %"class.std::__1::vector.231", i32, %"class.absl::optional.238", %"class.absl::optional.238", %class.GURL }
%"class.std::__1::vector.231" = type { %"class.std::__1::__vector_base.232" }
%"class.std::__1::__vector_base.232" = type { %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"*, %"class.std::__1::__compressed_pair.233" }
%"class.SuggestionAnswer::TextField" = type { %"class.std::__1::basic_string", i32, i8, i32, i32 }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.SuggestionAnswer::TextField"* }
%"class.absl::optional.238" = type { %"class.absl::optional_internal::optional_data.239" }
%"class.absl::optional_internal::optional_data.239" = type { %"class.absl::optional_internal::optional_data_base.240" }
%"class.absl::optional_internal::optional_data_base.240" = type { %"class.absl::optional_internal::optional_data_dtor_base.241" }
%"class.absl::optional_internal::optional_data_dtor_base.241" = type { i8, %union.anon.242 }
%union.anon.242 = type { %"class.SuggestionAnswer::TextField" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.243" }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { i32*, i32*, %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { i32* }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.AutocompleteMatch* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.scoped_refptr.255 = type { %class.OmniboxAction* }
%class.OmniboxAction = type opaque
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.TemplateURLRef::SearchTermsArgs"* }
%"struct.TemplateURLRef::SearchTermsArgs" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string.7", i32, i64, %"class.std::__1::basic_string.7", i32, %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", i8, %"class.std::__1::basic_string.7", %class.GURL, %"class.gfx::Size", i32, i8, %"struct.TemplateURLRef::SearchTermsArgs::ContextualSearchParams" }
%"class.gfx::Size" = type { i32, i32 }
%"struct.TemplateURLRef::SearchTermsArgs::ContextualSearchParams" = type { i32, i32, %"class.std::__1::basic_string.7", i64, i32, i8, %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7" }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::pair.265"* }
%"struct.std::__1::pair.265" = type opaque
%"class.std::__1::map.269" = type { %"class.std::__1::__tree.270" }
%"class.std::__1::__tree.270" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { i64 }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { %"struct.query_tiles::Tile"*, %"struct.query_tiles::Tile"*, %"class.std::__1::__compressed_pair.295" }
%"struct.query_tiles::Tile" = type { %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.std::__1::vector.90" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"struct.query_tiles::ImageMetadata"*, %"struct.query_tiles::ImageMetadata"*, %"class.std::__1::__compressed_pair.282" }
%"struct.query_tiles::ImageMetadata" = type { %class.GURL }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.query_tiles::ImageMetadata"* }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"class.std::__1::unique_ptr.289"*, %"class.std::__1::unique_ptr.289"*, %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::unique_ptr.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::unique_ptr.289"* }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"class.std::__1::basic_string.7"*, %"class.std::__1::basic_string.7"*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.std::__1::basic_string.7"* }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"struct.query_tiles::Tile"* }
%"class.std::__1::vector.300" = type { %"class.std::__1::__vector_base.301" }
%"class.std::__1::__vector_base.301" = type { %"struct.AutocompleteMatch::NavsuggestTile"*, %"struct.AutocompleteMatch::NavsuggestTile"*, %"class.std::__1::__compressed_pair.302" }
%"struct.AutocompleteMatch::NavsuggestTile" = type { %class.GURL, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.AutocompleteMatch::NavsuggestTile"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%class.AutocompleteInput = type { %"class.std::__1::basic_string", i64, %class.GURL, %"class.std::__1::basic_string", i32, i32, %"struct.url::Parsed", %"class.std::__1::basic_string", %class.GURL, %"class.std::__1::basic_string.7", i8, i8, i8, i32, i8, i32, %"class.std::__1::vector.19", %"class.absl::optional", i8, i8, i32 }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"class.std::__1::basic_string.7" }
%class.TemplateURLService = type { %class.WebDataServiceConsumer, %class.KeyedService, %"class.syncer::SyncableService", %class.PrefService*, %"class.std::__1::unique_ptr.33", %class.scoped_refptr.39, %"class.std::__1::unique_ptr.52", %"class.base::RepeatingCallback", %class.PrefChangeRegistrar, %"class.std::__1::multimap", %"class.std::__1::map.76", %"class.std::__1::vector.85", %"class.base::ObserverList", %"class.std::__1::unique_ptr.141", i8, i8, i8, i32, %"class.std::__1::vector.157", %class.TemplateURL*, %"class.std::__1::unique_ptr.87", i32, i64, %"class.std::__1::unique_ptr.164", i8, i8, i8, %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.176", %"class.std::__1::set", i32, %"class.base::OnceCallbackList", %"class.base::OnceCallback", %class.DefaultSearchManager, i32, i8, %"class.std::__1::basic_string.7", %"class.base::TimeTicks" }
%class.WebDataServiceConsumer = type { i32 (...)** }
%class.KeyedService = type { i32 (...)** }
%"class.syncer::SyncableService" = type { i32 (...)**, %"class.base::SupportsWeakPtr" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.27", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.27" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i8 }
%class.PrefService = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.SearchTermsData* }
%class.SearchTermsData = type { i32 (...)** }
%class.scoped_refptr.39 = type { %class.KeywordWebDataService* }
%class.KeywordWebDataService = type { %class.WebDataServiceBase, i64, %"class.std::__1::vector.43", %"class.base::RetainingOneShotTimer" }
%class.WebDataServiceBase = type { i32 (...)**, %"class.base::RefCountedDeleteOnSequence", %class.scoped_refptr.42 }
%"class.base::RefCountedDeleteOnSequence" = type { %"class.base::subtle::RefCountedThreadSafeBase", %class.scoped_refptr.40 }
%class.scoped_refptr.40 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.41" }>
%"class.base::RefCountedThreadSafe.41" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.42 = type { %class.WebDatabaseService* }
%class.WebDatabaseService = type opaque
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.45" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::pair"* }
%"class.base::RetainingOneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.40, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %class.TemplateURLServiceClient* }
%class.TemplateURLServiceClient = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.51", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.51" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.66" }
%"class.std::__1::__tree.66" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.std::__1::map.76" = type { %"class.std::__1::__tree.77" }
%"class.std::__1::__tree.77" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.std::__1::unique_ptr.87"*, %"class.std::__1::unique_ptr.87"*, %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.std::__1::unique_ptr.87"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.133", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.136" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.135 }
%class.scoped_refptr.135 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %class.SearchHostToURLsMap* }
%class.SearchHostToURLsMap = type <{ %"class.std::__1::map.144", %"class.std::__1::basic_string.7", i8, [7 x i8] }>
%"class.std::__1::map.144" = type { %"class.std::__1::__tree.145" }
%"class.std::__1::__tree.145" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.146", %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"struct.TemplateURLService::URLVisitedDetails"*, %"struct.TemplateURLService::URLVisitedDetails"*, %"class.std::__1::__compressed_pair.159" }
%"struct.TemplateURLService::URLVisitedDetails" = type <{ %class.GURL, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.TemplateURLService::URLVisitedDetails"* }
%class.TemplateURL = type { %struct.TemplateURLData, %"class.std::__1::vector.98", %class.TemplateURLRef, %class.TemplateURLRef, %class.TemplateURLRef, %class.TemplateURLRef, %"class.std::__1::unique_ptr.119", i32, i32 }
%struct.TemplateURLData = type { %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %class.GURL, %class.GURL, %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %class.GURL, %class.GURL, i8, %"class.std::__1::vector.90", i64, %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, %"class.std::__1::basic_string.7", %"class.std::__1::vector.90", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.7" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.97" }
%"class.base::time_internal::TimeBase.97" = type { i64 }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %class.TemplateURLRef*, %class.TemplateURLRef*, %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %class.TemplateURLRef* }
%class.TemplateURLRef = type <{ %class.TemplateURL*, i32, [4 x i8], i64, i8, i8, [6 x i8], %"class.std::__1::basic_string.7", i8, [7 x i8], %"class.std::__1::vector.100", i8, [7 x i8], %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", i32, [4 x i8], %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::vector.107", i8, [7 x i8] }>
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"struct.TemplateURLRef::Replacement"*, %"struct.TemplateURLRef::Replacement"*, %"class.std::__1::__compressed_pair.102" }
%"struct.TemplateURLRef::Replacement" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.TemplateURLRef::Replacement"* }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { %"struct.TemplateURLRef::PostParam"*, %"struct.TemplateURLRef::PostParam"*, %"class.std::__1::__compressed_pair.109" }
%"struct.TemplateURLRef::PostParam" = type { %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.TemplateURLRef::PostParam"* }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.TemplateURL::AssociatedExtensionInfo"* }
%"struct.TemplateURL::AssociatedExtensionInfo" = type <{ %"class.std::__1::basic_string.7", %"class.base::Time", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %class.TemplateURL* }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.base::Clock"* }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.syncer::SyncChangeProcessor"* }
%"class.syncer::SyncChangeProcessor" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.syncer::SyncErrorFactory"* }
%"class.syncer::SyncErrorFactory" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.182" }
%"class.std::__1::__tree.182" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.183", %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.base::OnceCallbackList" = type { %"class.base::internal::CallbackListBase", %"class.std::__1::list" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.193" }
%"class.base::WeakPtrFactory.193" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.189" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%class.DefaultSearchManager = type <{ %class.PrefService*, %"class.base::RepeatingCallback.194", %class.PrefChangeRegistrar, %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.195", i8, [7 x i8] }>
%"class.base::RepeatingCallback.194" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %struct.TemplateURLData* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %class.KeywordExtensionsDelegate* }
%class.KeywordExtensionsDelegate = type { i32 (...)** }
%class.AutocompleteProviderClient = type { i32 (...)** }
%class.AutocompleteProviderListener = type { i32 (...)** }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::allocator.5" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.11 }
%struct.anon.11 = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.7", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.307" = type { %"class.std::__1::__vector_base.308" }
%"class.std::__1::__vector_base.308" = type { %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"*, %"class.std::__1::__compressed_pair.310" }
%"struct.std::__1::pair.309" = type { %class.TemplateURL*, i64 }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.std::__1::pair.309"* }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.321" = type opaque

$_ZN17AutocompleteInputaSERKS_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

$_ZNSt3__16vectorI17AutocompleteMatchNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_ = comdat any

@_ZTV15KeywordProvider = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.KeywordProvider*, %class.AutocompleteInput*, i1)* @_ZN15KeywordProvider5StartERK17AutocompleteInputb to i8*), i8* bitcast (void (%class.KeywordProvider*, i1, i1)* @_ZN15KeywordProvider4StopEbb to i8*), i8* bitcast (void (%class.KeywordProvider*, %struct.AutocompleteMatch*)* @_ZN15KeywordProvider11DeleteMatchERK17AutocompleteMatch to i8*), i8* bitcast (void (%class.AutocompleteProvider*, %"class.std::__1::vector.321"*)* @_ZNK20AutocompleteProvider15AddProviderInfoEPNSt3__16vectorIN7metrics30OmniboxEventProto_ProviderInfoENS0_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%class.AutocompleteProvider*)* @_ZN20AutocompleteProvider12ResetSessionEv to i8*), i8* bitcast (i64 (%class.AutocompleteProvider*)* @_ZNK20AutocompleteProvider19EstimateMemoryUsageEv to i8*), i8* bitcast (void (%class.KeywordProvider*)* @_ZN15KeywordProviderD2Ev to i8*), i8* bitcast (void (%class.KeywordProvider*)* @_ZN15KeywordProviderD0Ev to i8*)] }, align 8
@_ZN4base16kWhitespaceUTF16E = external constant [0 x i16], align 2
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [23 x i8] c"KeywordProvider::Start\00", align 1
@_ZN3url11kHttpSchemeE = external constant [0 x i8], align 1
@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@.str.4 = private unnamed_addr constant [47 x i8] c"../../components/search_engines/template_url.h\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"!url_refs_.empty()\00", align 1

@_ZN15KeywordProviderC1EP26AutocompleteProviderClientP28AutocompleteProviderListener = hidden unnamed_addr alias void (%class.KeywordProvider*, %class.AutocompleteProviderClient*, %class.AutocompleteProviderListener*), void (%class.KeywordProvider*, %class.AutocompleteProviderClient*, %class.AutocompleteProviderListener*)* @_ZN15KeywordProviderC2EP26AutocompleteProviderClientP28AutocompleteProviderListener
@_ZN15KeywordProviderD1Ev = hidden unnamed_addr alias void (%class.KeywordProvider*), void (%class.KeywordProvider*)* @_ZN15KeywordProviderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15KeywordProviderC2EP26AutocompleteProviderClientP28AutocompleteProviderListener(%class.KeywordProvider*, %class.AutocompleteProviderClient*, %class.AutocompleteProviderListener*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 0
  tail call void @_ZN20AutocompleteProviderC2ENS_4TypeE(%class.AutocompleteProvider* %4, i32 16) #12
  %5 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV15KeywordProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 1
  store %class.AutocompleteProviderListener* %2, %class.AutocompleteProviderListener** %6, align 8
  %7 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 2
  tail call void @_ZN17AutocompleteInputC1Ev(%class.AutocompleteInput* %7) #12
  %8 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 3
  %9 = bitcast %class.AutocompleteProviderClient* %1 to %class.TemplateURLService* (%class.AutocompleteProviderClient*)***
  %10 = load %class.TemplateURLService* (%class.AutocompleteProviderClient*)**, %class.TemplateURLService* (%class.AutocompleteProviderClient*)*** %9, align 8
  %11 = getelementptr inbounds %class.TemplateURLService* (%class.AutocompleteProviderClient*)*, %class.TemplateURLService* (%class.AutocompleteProviderClient*)** %10, i64 13
  %12 = load %class.TemplateURLService* (%class.AutocompleteProviderClient*)*, %class.TemplateURLService* (%class.AutocompleteProviderClient*)** %11, align 8
  %13 = tail call %class.TemplateURLService* %12(%class.AutocompleteProviderClient* %1) #12
  store %class.TemplateURLService* %13, %class.TemplateURLService** %8, align 8
  %14 = bitcast %class.AutocompleteProviderClient* %1 to %class.KeywordExtensionsDelegate* (%class.AutocompleteProviderClient*, %class.KeywordProvider*)***
  %15 = load %class.KeywordExtensionsDelegate* (%class.AutocompleteProviderClient*, %class.KeywordProvider*)**, %class.KeywordExtensionsDelegate* (%class.AutocompleteProviderClient*, %class.KeywordProvider*)*** %14, align 8
  %16 = getelementptr inbounds %class.KeywordExtensionsDelegate* (%class.AutocompleteProviderClient*, %class.KeywordProvider*)*, %class.KeywordExtensionsDelegate* (%class.AutocompleteProviderClient*, %class.KeywordProvider*)** %15, i64 20
  %17 = load %class.KeywordExtensionsDelegate* (%class.AutocompleteProviderClient*, %class.KeywordProvider*)*, %class.KeywordExtensionsDelegate* (%class.AutocompleteProviderClient*, %class.KeywordProvider*)** %16, align 8
  %18 = tail call %class.KeywordExtensionsDelegate* %17(%class.AutocompleteProviderClient* %1, %class.KeywordProvider* %0) #12
  %19 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store %class.KeywordExtensionsDelegate* %18, %class.KeywordExtensionsDelegate** %19, align 8
  ret void
}

declare void @_ZN20AutocompleteProviderC2ENS_4TypeE(%class.AutocompleteProvider*, i32) unnamed_addr #1

declare void @_ZN17AutocompleteInputC1Ev(%class.AutocompleteInput*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15KeywordProvider21SplitKeywordFromInputERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEbPS6_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i16* %10, i16* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), align 2
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %54, label %19

19:                                               ; preds = %4, %19
  %20 = phi i64 [ %22, %19 ], [ 0, %4 ]
  %21 = phi i16* [ %23, %19 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %4 ]
  %22 = add i64 %20, 1
  %23 = getelementptr inbounds i16, i16* %21, i64 1
  %24 = load i16, i16* %23, align 2
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %26, label %19

26:                                               ; preds = %19
  %27 = icmp eq i64 %16, 0
  %28 = icmp eq i64 %22, 0
  %29 = or i1 %27, %28
  br i1 %29, label %54, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds i16, i16* %15, i64 %16
  %32 = getelementptr inbounds [0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 %22
  br label %33

33:                                               ; preds = %43, %30
  %34 = phi i16* [ %15, %30 ], [ %44, %43 ]
  %35 = load i16, i16* %34, align 2
  br label %38

36:                                               ; preds = %38
  %37 = icmp eq i16* %42, %32
  br i1 %37, label %43, label %38

38:                                               ; preds = %36, %33
  %39 = phi i16* [ %42, %36 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %33 ]
  %40 = load i16, i16* %39, align 2
  %41 = icmp eq i16 %35, %40
  %42 = getelementptr inbounds i16, i16* %39, i64 1
  br i1 %41, label %46, label %36

43:                                               ; preds = %36
  %44 = getelementptr inbounds i16, i16* %34, i64 1
  %45 = icmp eq i16* %44, %31
  br i1 %45, label %54, label %33

46:                                               ; preds = %38
  %47 = icmp eq i16* %34, %31
  %48 = ptrtoint i16* %34 to i64
  %49 = ptrtoint i16* %15 to i64
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 1
  %52 = icmp eq i64 %50, -2
  %53 = or i1 %47, %52
  br i1 %53, label %54, label %229

54:                                               ; preds = %43, %46, %4, %26
  br i1 %8, label %58, label %55

55:                                               ; preds = %54
  %56 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #12
  br label %477

58:                                               ; preds = %54
  %59 = icmp ult i64 %12, 11
  br i1 %59, label %60, label %65

60:                                               ; preds = %58
  %61 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %62 = trunc i64 %12 to i8
  %63 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  store i8 %62, i8* %64, align 1
  br label %82

65:                                               ; preds = %58
  %66 = icmp ugt i64 %12, 9223372036854775791
  br i1 %66, label %67, label %69

67:                                               ; preds = %65
  %68 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %68) #13
  unreachable

69:                                               ; preds = %65
  %70 = add nuw nsw i64 %12, 8
  %71 = and i64 %70, -8
  %72 = icmp slt i64 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %69
  tail call void @abort() #13
  unreachable

74:                                               ; preds = %69
  %75 = shl i64 %71, 1
  %76 = tail call i8* @_Znwm(i64 %75) #14
  %77 = bitcast i8* %76 to i16*
  %78 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %76, i8** %78, align 8
  %79 = or i64 %71, -9223372036854775808
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %12, i64* %81, align 8
  br label %82

82:                                               ; preds = %74, %60
  %83 = phi i16* [ %61, %60 ], [ %77, %74 ]
  %84 = add nuw nsw i64 %12, 1
  %85 = add i64 %12, 1
  %86 = icmp ult i64 %85, 16
  br i1 %86, label %176, label %87

87:                                               ; preds = %82
  %88 = add i64 %12, 1
  %89 = getelementptr i16, i16* %83, i64 %88
  %90 = getelementptr i16, i16* %10, i64 %88
  %91 = icmp ult i16* %83, %90
  %92 = icmp ult i16* %10, %89
  %93 = and i1 %91, %92
  br i1 %93, label %176, label %94

94:                                               ; preds = %87
  %95 = and i64 %85, -16
  %96 = sub i64 %84, %95
  %97 = getelementptr i16, i16* %10, i64 %95
  %98 = getelementptr i16, i16* %83, i64 %95
  %99 = add i64 %95, -16
  %100 = lshr exact i64 %99, 4
  %101 = add nuw nsw i64 %100, 1
  %102 = and i64 %101, 3
  %103 = icmp ult i64 %99, 48
  br i1 %103, label %155, label %104

104:                                              ; preds = %94
  %105 = sub nsw i64 %101, %102
  br label %106

106:                                              ; preds = %106, %104
  %107 = phi i64 [ 0, %104 ], [ %152, %106 ]
  %108 = phi i64 [ %105, %104 ], [ %153, %106 ]
  %109 = getelementptr i16, i16* %10, i64 %107
  %110 = getelementptr i16, i16* %83, i64 %107
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !2
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !2
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !5, !noalias !2
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !5, !noalias !2
  %119 = or i64 %107, 16
  %120 = getelementptr i16, i16* %10, i64 %119
  %121 = getelementptr i16, i16* %83, i64 %119
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !2
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !5, !noalias !2
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = or i64 %107, 32
  %131 = getelementptr i16, i16* %10, i64 %130
  %132 = getelementptr i16, i16* %83, i64 %130
  %133 = bitcast i16* %131 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !2
  %135 = getelementptr i16, i16* %131, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !2
  %138 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !5, !noalias !2
  %139 = getelementptr i16, i16* %132, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !5, !noalias !2
  %141 = or i64 %107, 48
  %142 = getelementptr i16, i16* %10, i64 %141
  %143 = getelementptr i16, i16* %83, i64 %141
  %144 = bitcast i16* %142 to <8 x i16>*
  %145 = load <8 x i16>, <8 x i16>* %144, align 2, !alias.scope !2
  %146 = getelementptr i16, i16* %142, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  %148 = load <8 x i16>, <8 x i16>* %147, align 2, !alias.scope !2
  %149 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %145, <8 x i16>* %149, align 2, !alias.scope !5, !noalias !2
  %150 = getelementptr i16, i16* %143, i64 8
  %151 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> %148, <8 x i16>* %151, align 2, !alias.scope !5, !noalias !2
  %152 = add i64 %107, 64
  %153 = add i64 %108, -4
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %106, !llvm.loop !7

155:                                              ; preds = %106, %94
  %156 = phi i64 [ 0, %94 ], [ %152, %106 ]
  %157 = icmp eq i64 %102, 0
  br i1 %157, label %174, label %158

158:                                              ; preds = %155, %158
  %159 = phi i64 [ %171, %158 ], [ %156, %155 ]
  %160 = phi i64 [ %172, %158 ], [ %102, %155 ]
  %161 = getelementptr i16, i16* %10, i64 %159
  %162 = getelementptr i16, i16* %83, i64 %159
  %163 = bitcast i16* %161 to <8 x i16>*
  %164 = load <8 x i16>, <8 x i16>* %163, align 2, !alias.scope !2
  %165 = getelementptr i16, i16* %161, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  %167 = load <8 x i16>, <8 x i16>* %166, align 2, !alias.scope !2
  %168 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> %164, <8 x i16>* %168, align 2, !alias.scope !5, !noalias !2
  %169 = getelementptr i16, i16* %162, i64 8
  %170 = bitcast i16* %169 to <8 x i16>*
  store <8 x i16> %167, <8 x i16>* %170, align 2, !alias.scope !5, !noalias !2
  %171 = add i64 %159, 16
  %172 = add i64 %160, -1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %158, !llvm.loop !9

174:                                              ; preds = %158, %155
  %175 = icmp eq i64 %85, %95
  br i1 %175, label %477, label %176

176:                                              ; preds = %174, %87, %82
  %177 = phi i64 [ %84, %87 ], [ %84, %82 ], [ %96, %174 ]
  %178 = phi i16* [ %10, %87 ], [ %10, %82 ], [ %97, %174 ]
  %179 = phi i16* [ %83, %87 ], [ %83, %82 ], [ %98, %174 ]
  %180 = add i64 %177, -1
  %181 = and i64 %177, 7
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %194, label %183

183:                                              ; preds = %176, %183
  %184 = phi i64 [ %189, %183 ], [ %177, %176 ]
  %185 = phi i16* [ %191, %183 ], [ %178, %176 ]
  %186 = phi i16* [ %190, %183 ], [ %179, %176 ]
  %187 = phi i64 [ %192, %183 ], [ %181, %176 ]
  %188 = load i16, i16* %185, align 2
  store i16 %188, i16* %186, align 2
  %189 = add i64 %184, -1
  %190 = getelementptr inbounds i16, i16* %186, i64 1
  %191 = getelementptr inbounds i16, i16* %185, i64 1
  %192 = add i64 %187, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %183, !llvm.loop !11

194:                                              ; preds = %183, %176
  %195 = phi i64 [ %177, %176 ], [ %189, %183 ]
  %196 = phi i16* [ %178, %176 ], [ %191, %183 ]
  %197 = phi i16* [ %179, %176 ], [ %190, %183 ]
  %198 = icmp ult i64 %180, 7
  br i1 %198, label %477, label %199

199:                                              ; preds = %194, %199
  %200 = phi i64 [ %225, %199 ], [ %195, %194 ]
  %201 = phi i16* [ %227, %199 ], [ %196, %194 ]
  %202 = phi i16* [ %226, %199 ], [ %197, %194 ]
  %203 = load i16, i16* %201, align 2
  store i16 %203, i16* %202, align 2
  %204 = getelementptr inbounds i16, i16* %202, i64 1
  %205 = getelementptr inbounds i16, i16* %201, i64 1
  %206 = load i16, i16* %205, align 2
  store i16 %206, i16* %204, align 2
  %207 = getelementptr inbounds i16, i16* %202, i64 2
  %208 = getelementptr inbounds i16, i16* %201, i64 2
  %209 = load i16, i16* %208, align 2
  store i16 %209, i16* %207, align 2
  %210 = getelementptr inbounds i16, i16* %202, i64 3
  %211 = getelementptr inbounds i16, i16* %201, i64 3
  %212 = load i16, i16* %211, align 2
  store i16 %212, i16* %210, align 2
  %213 = getelementptr inbounds i16, i16* %202, i64 4
  %214 = getelementptr inbounds i16, i16* %201, i64 4
  %215 = load i16, i16* %214, align 2
  store i16 %215, i16* %213, align 2
  %216 = getelementptr inbounds i16, i16* %202, i64 5
  %217 = getelementptr inbounds i16, i16* %201, i64 5
  %218 = load i16, i16* %217, align 2
  store i16 %218, i16* %216, align 2
  %219 = getelementptr inbounds i16, i16* %202, i64 6
  %220 = getelementptr inbounds i16, i16* %201, i64 6
  %221 = load i16, i16* %220, align 2
  store i16 %221, i16* %219, align 2
  %222 = getelementptr inbounds i16, i16* %202, i64 7
  %223 = getelementptr inbounds i16, i16* %201, i64 7
  %224 = load i16, i16* %223, align 2
  store i16 %224, i16* %222, align 2
  %225 = add i64 %200, -8
  %226 = getelementptr inbounds i16, i16* %202, i64 8
  %227 = getelementptr inbounds i16, i16* %201, i64 8
  %228 = icmp eq i64 %225, 0
  br i1 %228, label %477, label %199, !llvm.loop !12

229:                                              ; preds = %46
  %230 = icmp eq %"class.std::__1::basic_string"* %3, null
  br i1 %230, label %475, label %231

231:                                              ; preds = %229
  br i1 %2, label %232, label %266

232:                                              ; preds = %231, %232
  %233 = phi i64 [ %235, %232 ], [ 0, %231 ]
  %234 = phi i16* [ %236, %232 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %231 ]
  %235 = add i64 %233, 1
  %236 = getelementptr inbounds i16, i16* %234, i64 1
  %237 = load i16, i16* %236, align 2
  %238 = icmp eq i16 %237, 0
  br i1 %238, label %239, label %232

239:                                              ; preds = %232
  %240 = icmp ugt i64 %16, %51
  br i1 %240, label %241, label %475

241:                                              ; preds = %239
  %242 = icmp eq i64 %235, 0
  br label %243

243:                                              ; preds = %258, %241
  %244 = phi i16* [ %34, %241 ], [ %259, %258 ]
  br i1 %242, label %261, label %245

245:                                              ; preds = %243
  %246 = load i16, i16* %244, align 2
  br label %247

247:                                              ; preds = %252, %245
  %248 = phi i64 [ %235, %245 ], [ %254, %252 ]
  %249 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %245 ], [ %253, %252 ]
  %250 = load i16, i16* %249, align 2
  %251 = icmp eq i16 %250, %246
  br i1 %251, label %256, label %252

252:                                              ; preds = %247
  %253 = getelementptr inbounds i16, i16* %249, i64 1
  %254 = add i64 %248, -1
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %261, label %247

256:                                              ; preds = %247
  %257 = icmp eq i16* %249, null
  br i1 %257, label %261, label %258

258:                                              ; preds = %256
  %259 = getelementptr inbounds i16, i16* %244, i64 1
  %260 = icmp eq i16* %259, %31
  br i1 %260, label %475, label %243

261:                                              ; preds = %256, %243, %252
  %262 = phi i16* [ %244, %252 ], [ %34, %243 ], [ %244, %256 ]
  %263 = ptrtoint i16* %262 to i64
  %264 = sub i64 %263, %49
  %265 = ashr exact i64 %264, 1
  br label %268

266:                                              ; preds = %231
  %267 = add nsw i64 %51, 1
  br label %268

268:                                              ; preds = %261, %266
  %269 = phi i64 [ %267, %266 ], [ %265, %261 ]
  %270 = icmp ult i64 %269, %16
  br i1 %270, label %271, label %475

271:                                              ; preds = %268
  %272 = getelementptr inbounds i16, i16* %15, i64 %269
  %273 = ptrtoint i16* %272 to i64
  %274 = ptrtoint i16* %31 to i64
  %275 = sub i64 %274, %273
  %276 = ashr exact i64 %275, 1
  %277 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %278 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %277, i64 0, i32 1, i32 1
  %279 = load i8, i8* %278, align 1
  %280 = icmp slt i8 %279, 0
  br i1 %280, label %281, label %286

281:                                              ; preds = %271
  %282 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %283 = load i64, i64* %282, align 8
  %284 = and i64 %283, 9223372036854775807
  %285 = add nsw i64 %284, -1
  br label %286

286:                                              ; preds = %281, %271
  %287 = phi i64 [ %285, %281 ], [ 10, %271 ]
  %288 = icmp ugt i64 %276, %287
  br i1 %288, label %289, label %299

289:                                              ; preds = %286
  br i1 %280, label %290, label %293

290:                                              ; preds = %289
  %291 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %292 = load i64, i64* %291, align 8
  br label %295

293:                                              ; preds = %289
  %294 = zext i8 %279 to i64
  br label %295

295:                                              ; preds = %293, %290
  %296 = phi i64 [ %292, %290 ], [ %294, %293 ]
  %297 = sub i64 %276, %287
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* nonnull %3, i64 %287, i64 %297, i64 %296, i64 0, i64 %296, i64 0) #12
  %298 = load i8, i8* %278, align 1
  br label %299

299:                                              ; preds = %295, %286
  %300 = phi i8 [ %279, %286 ], [ %298, %295 ]
  %301 = icmp slt i8 %300, 0
  br i1 %301, label %302, label %305

302:                                              ; preds = %299
  %303 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load i16*, i16** %303, align 8
  br label %307

305:                                              ; preds = %299
  %306 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  br label %307

307:                                              ; preds = %305, %302
  %308 = phi i16* [ %304, %302 ], [ %306, %305 ]
  %309 = icmp eq i64 %269, %16
  br i1 %309, label %467, label %310

310:                                              ; preds = %307
  %311 = shl nsw i64 %16, 1
  %312 = add i64 %311, -2
  %313 = shl nsw i64 %269, 1
  %314 = sub i64 %312, %313
  %315 = lshr exact i64 %314, 1
  %316 = add nuw i64 %315, 1
  %317 = icmp ult i64 %316, 16
  br i1 %317, label %413, label %318

318:                                              ; preds = %310
  %319 = shl nsw i64 %16, 1
  %320 = add i64 %319, -2
  %321 = shl nsw i64 %269, 1
  %322 = sub i64 %320, %321
  %323 = lshr exact i64 %322, 1
  %324 = add nuw i64 %323, 1
  %325 = getelementptr i16, i16* %308, i64 %324
  %326 = add i64 %269, %323
  %327 = add i64 %326, 1
  %328 = getelementptr i16, i16* %15, i64 %327
  %329 = icmp ult i16* %308, %328
  %330 = icmp ult i16* %272, %325
  %331 = and i1 %329, %330
  br i1 %331, label %413, label %332

332:                                              ; preds = %318
  %333 = and i64 %316, -16
  %334 = getelementptr i16, i16* %308, i64 %333
  %335 = getelementptr i16, i16* %272, i64 %333
  %336 = add i64 %333, -16
  %337 = lshr exact i64 %336, 4
  %338 = add nuw nsw i64 %337, 1
  %339 = and i64 %338, 3
  %340 = icmp ult i64 %336, 48
  br i1 %340, label %392, label %341

341:                                              ; preds = %332
  %342 = sub nsw i64 %338, %339
  br label %343

343:                                              ; preds = %343, %341
  %344 = phi i64 [ 0, %341 ], [ %389, %343 ]
  %345 = phi i64 [ %342, %341 ], [ %390, %343 ]
  %346 = getelementptr i16, i16* %308, i64 %344
  %347 = getelementptr i16, i16* %272, i64 %344
  %348 = bitcast i16* %347 to <8 x i16>*
  %349 = load <8 x i16>, <8 x i16>* %348, align 2, !alias.scope !13
  %350 = getelementptr i16, i16* %347, i64 8
  %351 = bitcast i16* %350 to <8 x i16>*
  %352 = load <8 x i16>, <8 x i16>* %351, align 2, !alias.scope !13
  %353 = bitcast i16* %346 to <8 x i16>*
  store <8 x i16> %349, <8 x i16>* %353, align 2, !alias.scope !16, !noalias !13
  %354 = getelementptr i16, i16* %346, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  store <8 x i16> %352, <8 x i16>* %355, align 2, !alias.scope !16, !noalias !13
  %356 = or i64 %344, 16
  %357 = getelementptr i16, i16* %308, i64 %356
  %358 = getelementptr i16, i16* %272, i64 %356
  %359 = bitcast i16* %358 to <8 x i16>*
  %360 = load <8 x i16>, <8 x i16>* %359, align 2, !alias.scope !13
  %361 = getelementptr i16, i16* %358, i64 8
  %362 = bitcast i16* %361 to <8 x i16>*
  %363 = load <8 x i16>, <8 x i16>* %362, align 2, !alias.scope !13
  %364 = bitcast i16* %357 to <8 x i16>*
  store <8 x i16> %360, <8 x i16>* %364, align 2, !alias.scope !16, !noalias !13
  %365 = getelementptr i16, i16* %357, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  store <8 x i16> %363, <8 x i16>* %366, align 2, !alias.scope !16, !noalias !13
  %367 = or i64 %344, 32
  %368 = getelementptr i16, i16* %308, i64 %367
  %369 = getelementptr i16, i16* %272, i64 %367
  %370 = bitcast i16* %369 to <8 x i16>*
  %371 = load <8 x i16>, <8 x i16>* %370, align 2, !alias.scope !13
  %372 = getelementptr i16, i16* %369, i64 8
  %373 = bitcast i16* %372 to <8 x i16>*
  %374 = load <8 x i16>, <8 x i16>* %373, align 2, !alias.scope !13
  %375 = bitcast i16* %368 to <8 x i16>*
  store <8 x i16> %371, <8 x i16>* %375, align 2, !alias.scope !16, !noalias !13
  %376 = getelementptr i16, i16* %368, i64 8
  %377 = bitcast i16* %376 to <8 x i16>*
  store <8 x i16> %374, <8 x i16>* %377, align 2, !alias.scope !16, !noalias !13
  %378 = or i64 %344, 48
  %379 = getelementptr i16, i16* %308, i64 %378
  %380 = getelementptr i16, i16* %272, i64 %378
  %381 = bitcast i16* %380 to <8 x i16>*
  %382 = load <8 x i16>, <8 x i16>* %381, align 2, !alias.scope !13
  %383 = getelementptr i16, i16* %380, i64 8
  %384 = bitcast i16* %383 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !13
  %386 = bitcast i16* %379 to <8 x i16>*
  store <8 x i16> %382, <8 x i16>* %386, align 2, !alias.scope !16, !noalias !13
  %387 = getelementptr i16, i16* %379, i64 8
  %388 = bitcast i16* %387 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %388, align 2, !alias.scope !16, !noalias !13
  %389 = add i64 %344, 64
  %390 = add i64 %345, -4
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %392, label %343, !llvm.loop !18

392:                                              ; preds = %343, %332
  %393 = phi i64 [ 0, %332 ], [ %389, %343 ]
  %394 = icmp eq i64 %339, 0
  br i1 %394, label %411, label %395

395:                                              ; preds = %392, %395
  %396 = phi i64 [ %408, %395 ], [ %393, %392 ]
  %397 = phi i64 [ %409, %395 ], [ %339, %392 ]
  %398 = getelementptr i16, i16* %308, i64 %396
  %399 = getelementptr i16, i16* %272, i64 %396
  %400 = bitcast i16* %399 to <8 x i16>*
  %401 = load <8 x i16>, <8 x i16>* %400, align 2, !alias.scope !13
  %402 = getelementptr i16, i16* %399, i64 8
  %403 = bitcast i16* %402 to <8 x i16>*
  %404 = load <8 x i16>, <8 x i16>* %403, align 2, !alias.scope !13
  %405 = bitcast i16* %398 to <8 x i16>*
  store <8 x i16> %401, <8 x i16>* %405, align 2, !alias.scope !16, !noalias !13
  %406 = getelementptr i16, i16* %398, i64 8
  %407 = bitcast i16* %406 to <8 x i16>*
  store <8 x i16> %404, <8 x i16>* %407, align 2, !alias.scope !16, !noalias !13
  %408 = add i64 %396, 16
  %409 = add i64 %397, -1
  %410 = icmp eq i64 %409, 0
  br i1 %410, label %411, label %395, !llvm.loop !19

411:                                              ; preds = %395, %392
  %412 = icmp eq i64 %316, %333
  br i1 %412, label %467, label %413

413:                                              ; preds = %411, %318, %310
  %414 = phi i16* [ %308, %318 ], [ %308, %310 ], [ %334, %411 ]
  %415 = phi i16* [ %272, %318 ], [ %272, %310 ], [ %335, %411 ]
  %416 = ptrtoint i16* %415 to i64
  %417 = add i64 %16, -1
  %418 = getelementptr i16, i16* %15, i64 %417
  %419 = ptrtoint i16* %418 to i64
  %420 = sub i64 %419, %416
  %421 = lshr i64 %420, 1
  %422 = add nuw i64 %421, 1
  %423 = and i64 %422, 7
  %424 = icmp eq i64 %423, 0
  br i1 %424, label %434, label %425

425:                                              ; preds = %413, %425
  %426 = phi i16* [ %431, %425 ], [ %414, %413 ]
  %427 = phi i16* [ %430, %425 ], [ %415, %413 ]
  %428 = phi i64 [ %432, %425 ], [ %423, %413 ]
  %429 = load i16, i16* %427, align 2
  store i16 %429, i16* %426, align 2
  %430 = getelementptr inbounds i16, i16* %427, i64 1
  %431 = getelementptr inbounds i16, i16* %426, i64 1
  %432 = add i64 %428, -1
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %425, !llvm.loop !20

434:                                              ; preds = %425, %413
  %435 = phi i16* [ undef, %413 ], [ %431, %425 ]
  %436 = phi i16* [ %414, %413 ], [ %431, %425 ]
  %437 = phi i16* [ %415, %413 ], [ %430, %425 ]
  %438 = icmp ult i64 %420, 14
  br i1 %438, label %467, label %439

439:                                              ; preds = %434, %439
  %440 = phi i16* [ %465, %439 ], [ %436, %434 ]
  %441 = phi i16* [ %464, %439 ], [ %437, %434 ]
  %442 = load i16, i16* %441, align 2
  store i16 %442, i16* %440, align 2
  %443 = getelementptr inbounds i16, i16* %441, i64 1
  %444 = getelementptr inbounds i16, i16* %440, i64 1
  %445 = load i16, i16* %443, align 2
  store i16 %445, i16* %444, align 2
  %446 = getelementptr inbounds i16, i16* %441, i64 2
  %447 = getelementptr inbounds i16, i16* %440, i64 2
  %448 = load i16, i16* %446, align 2
  store i16 %448, i16* %447, align 2
  %449 = getelementptr inbounds i16, i16* %441, i64 3
  %450 = getelementptr inbounds i16, i16* %440, i64 3
  %451 = load i16, i16* %449, align 2
  store i16 %451, i16* %450, align 2
  %452 = getelementptr inbounds i16, i16* %441, i64 4
  %453 = getelementptr inbounds i16, i16* %440, i64 4
  %454 = load i16, i16* %452, align 2
  store i16 %454, i16* %453, align 2
  %455 = getelementptr inbounds i16, i16* %441, i64 5
  %456 = getelementptr inbounds i16, i16* %440, i64 5
  %457 = load i16, i16* %455, align 2
  store i16 %457, i16* %456, align 2
  %458 = getelementptr inbounds i16, i16* %441, i64 6
  %459 = getelementptr inbounds i16, i16* %440, i64 6
  %460 = load i16, i16* %458, align 2
  store i16 %460, i16* %459, align 2
  %461 = getelementptr inbounds i16, i16* %441, i64 7
  %462 = getelementptr inbounds i16, i16* %440, i64 7
  %463 = load i16, i16* %461, align 2
  store i16 %463, i16* %462, align 2
  %464 = getelementptr inbounds i16, i16* %441, i64 8
  %465 = getelementptr inbounds i16, i16* %440, i64 8
  %466 = icmp eq i16* %464, %31
  br i1 %466, label %467, label %439, !llvm.loop !21

467:                                              ; preds = %434, %439, %411, %307
  %468 = phi i16* [ %308, %307 ], [ %334, %411 ], [ %435, %434 ], [ %465, %439 ]
  store i16 0, i16* %468, align 2
  %469 = load i8, i8* %278, align 1
  %470 = icmp slt i8 %469, 0
  br i1 %470, label %471, label %473

471:                                              ; preds = %467
  %472 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %276, i64* %472, align 8
  br label %475

473:                                              ; preds = %467
  %474 = trunc i64 %276 to i8
  store i8 %474, i8* %278, align 1
  br label %475

475:                                              ; preds = %258, %239, %473, %471, %268, %229
  %476 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator.5"*
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 0, i64 %51, %"class.std::__1::allocator.5"* dereferenceable(1) %476) #12
  br label %477

477:                                              ; preds = %194, %199, %174, %55, %475
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15KeywordProvider31SplitReplacementStringFromInputERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEb(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #12
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %14 = select i1 %10, i16* %12, i16* %13
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %9 to i64
  %18 = select i1 %10, i64 %16, i64 %17
  %19 = call i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %14, i64 %18, i32 1, %"class.std::__1::basic_string"* nonnull %4) #12
  %20 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #12
  call void @_ZN15KeywordProvider21SplitKeywordFromInputERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEbPS6_(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i1 zeroext %2, %"class.std::__1::basic_string"* %0)
  %21 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %3
  %26 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #14
  br label %28

28:                                               ; preds = %3, %25
  %29 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %28, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void
}

declare i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16*, i64, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.TemplateURL* @_ZN15KeywordProvider34GetSubstitutingTemplateURLForInputEP18TemplateURLServiceP17AutocompleteInput(%class.TemplateURLService*, %class.AutocompleteInput*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 12
  %8 = load i8, i8* %7, align 2, !range !22
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %125, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #12
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #12
  %16 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 5
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %107, label %19

19:                                               ; preds = %10
  %20 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %21 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %22 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 0
  call void @_ZN15KeywordProvider21SplitKeywordFromInputERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEbPS6_(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_string"* dereferenceable(24) %22, i1 zeroext true, %"class.std::__1::basic_string"* nonnull %6) #12
  call void @_ZN15KeywordProvider21CleanUserInputKeywordEPK18TemplateURLServiceRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %class.TemplateURLService* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %23 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* nonnull align 8 %20, i64 24, i1 false) #12
  %29 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  store i8 0, i8* %30, align 1
  %31 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  store i16 0, i16* %31, align 8
  br i1 %28, label %32, label %35

32:                                               ; preds = %19
  %33 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %32, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  %36 = load i8, i8* %24, align 1
  %37 = icmp slt i8 %36, 0
  %38 = load i64, i64* %12, align 8
  %39 = zext i8 %36 to i64
  %40 = select i1 %37, i64 %38, i64 %39
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %107, label %42

42:                                               ; preds = %35
  %43 = call %class.TemplateURL* @_ZN18TemplateURLService24GetTemplateURLForKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.TemplateURLService* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #12
  %44 = icmp eq %class.TemplateURL* %43, null
  br i1 %44, label %107, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %class.TemplateURLService, %class.TemplateURLService* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %class.SearchTermsData*, %class.SearchTermsData** %46, align 8
  %48 = call zeroext i1 @_ZNK11TemplateURL19SupportsReplacementERK15SearchTermsData(%class.TemplateURL* nonnull %43, %class.SearchTermsData* dereferenceable(8) %47) #12
  br i1 %48, label %49, label %107

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, -1
  br i1 %52, label %104, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  %58 = load i64, i64* %15, align 8
  %59 = zext i8 %56 to i64
  %60 = select i1 %57, i64 %58, i64 %59
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %104, label %62

62:                                               ; preds = %53
  %63 = bitcast %class.AutocompleteInput* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i16*, i16** %67, align 8
  %69 = bitcast %class.AutocompleteInput* %1 to i16*
  %70 = select i1 %66, i16* %68, i16* %69
  %71 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = zext i8 %65 to i64
  %74 = select i1 %66, i64 %72, i64 %73
  %75 = load i16*, i16** %14, align 8
  %76 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %77 = select i1 %57, i16* %75, i16* %76
  %78 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %70, i64 %74, i16* %77, i64 %60, i32 0) #12
  br i1 %78, label %79, label %104

79:                                               ; preds = %62
  %80 = load i8, i8* %64, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %79
  %83 = load i64, i64* %71, align 8
  br label %86

84:                                               ; preds = %79
  %85 = zext i8 %80 to i64
  br label %86

86:                                               ; preds = %82, %84
  %87 = phi i64 [ %83, %82 ], [ %85, %84 ]
  %88 = load i64, i64* %50, align 8
  %89 = sub i64 %87, %88
  %90 = trunc i64 %89 to i32
  %91 = icmp slt i32 %90, 1
  %92 = load i8, i8* %55, align 1
  %93 = icmp slt i8 %92, 0
  %94 = load i64, i64* %15, align 8
  %95 = zext i8 %92 to i64
  %96 = select i1 %93, i64 %94, i64 %95
  br i1 %91, label %104, label %97

97:                                               ; preds = %86
  %98 = trunc i64 %96 to i32
  %99 = icmp sgt i32 %90, %98
  br i1 %99, label %104, label %100

100:                                              ; preds = %97
  %101 = shl i64 %89, 32
  %102 = ashr exact i64 %101, 32
  %103 = sub i64 %96, %102
  br label %104

104:                                              ; preds = %86, %97, %100, %49, %53, %62
  %105 = phi i64 [ -1, %53 ], [ -1, %62 ], [ -1, %49 ], [ %96, %86 ], [ %103, %100 ], [ 0, %97 ]
  %106 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 6
  call void @_ZN17AutocompleteInput10UpdateTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmRKN3url6ParsedE(%class.AutocompleteInput* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i64 %105, %"struct.url::Parsed"* dereferenceable(80) %106) #12
  br label %107

107:                                              ; preds = %35, %10, %104, %42, %45
  %108 = phi %class.TemplateURL* [ null, %35 ], [ %43, %104 ], [ null, %42 ], [ null, %45 ], [ null, %10 ]
  %109 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %109, i64 0, i32 1, i32 1
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %107
  %114 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %115 = load i8*, i8** %114, align 8
  call void @_ZdlPv(i8* %115) #14
  br label %116

116:                                              ; preds = %107, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  %117 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %117, i64 0, i32 1, i32 1
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %116
  %122 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %123 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %123) #14
  br label %124

124:                                              ; preds = %116, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br label %125

125:                                              ; preds = %2, %124
  %126 = phi %class.TemplateURL* [ %108, %124 ], [ null, %2 ]
  ret %class.TemplateURL* %126
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15KeywordProvider23ExtractKeywordFromInputERK17AutocompleteInputPK18TemplateURLServicePNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEESD_(%class.AutocompleteInput* dereferenceable(512), %class.TemplateURLService*, %"class.std::__1::basic_string"* nocapture, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %44, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  %13 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 0
  call void @_ZN15KeywordProvider21SplitKeywordFromInputERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEbPS6_(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %13, i1 zeroext true, %"class.std::__1::basic_string"* %3)
  call void @_ZN15KeywordProvider21CleanUserInputKeywordEPK18TemplateURLServiceRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %5, %class.TemplateURLService* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6)
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %10
  %19 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %20 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %18, %10
  %22 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* nonnull align 8 %11, i64 24, i1 false) #12
  %23 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 0, i8* %24, align 1
  %25 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  store i16 0, i16* %25, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #14
  br label %33

33:                                               ; preds = %21, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %34 = load i8, i8* %15, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  br label %41

39:                                               ; preds = %33
  %40 = zext i8 %34 to i64
  br label %41

41:                                               ; preds = %36, %39
  %42 = phi i64 [ %38, %36 ], [ %40, %39 ]
  %43 = icmp ne i64 %42, 0
  br label %44

44:                                               ; preds = %4, %41
  %45 = phi i1 [ %43, %41 ], [ false, %4 ]
  ret i1 %45
}

declare %class.TemplateURL* @_ZN18TemplateURLService24GetTemplateURLForKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.TemplateURLService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK11TemplateURL19SupportsReplacementERK15SearchTermsData(%class.TemplateURL*, %class.SearchTermsData* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16*, i64, i16*, i64, i32) local_unnamed_addr #1

declare void @_ZN17AutocompleteInput10UpdateTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmRKN3url6ParsedE(%class.AutocompleteInput*, %"class.std::__1::basic_string"* dereferenceable(24), i64, %"struct.url::Parsed"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15KeywordProvider17GetKeywordForTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* noalias nocapture sret, %class.KeywordProvider* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string.7", align 8
  %9 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %1, i64 0, i32 3
  %10 = load %class.TemplateURLService*, %class.TemplateURLService** %9, align 8
  tail call void @_ZN18TemplateURLService4LoadEv(%class.TemplateURLService* %10) #12
  %11 = load %class.TemplateURLService*, %class.TemplateURLService** %9, align 8
  %12 = icmp eq %class.TemplateURLService* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #12
  br label %106

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #12
  %18 = tail call zeroext i1 @_ZN17OmniboxFieldTrial28IsKeywordSearchButtonEnabledEv() #12
  br i1 %18, label %19, label %41

19:                                               ; preds = %15
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %21 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  call void @_ZN15KeywordProvider21SplitKeywordFromInputERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEbPS6_(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %2, i1 zeroext true, %"class.std::__1::basic_string"* null)
  call void @_ZN15KeywordProvider21CleanUserInputKeywordEPK18TemplateURLServiceRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %5, %class.TemplateURLService* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6)
  %22 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %26, %19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* nonnull align 8 %20, i64 24, i1 false) #12
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  store i8 0, i8* %31, align 1
  %32 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  store i16 0, i16* %32, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %29
  %38 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #14
  br label %40

40:                                               ; preds = %29, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  br label %51

41:                                               ; preds = %15
  %42 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #12
  call void @_ZN15KeywordProvider21CleanUserInputKeywordEPK18TemplateURLServiceRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %7, %class.TemplateURLService* nonnull %11, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  %43 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %41
  %48 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %47, %41
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* nonnull align 8 %42, i64 24, i1 false) #12
  br label %51

51:                                               ; preds = %50, %40
  %52 = phi i8* [ %42, %50 ], [ %20, %40 ]
  %53 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %43, %50 ], [ %22, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #12
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  %57 = load i64, i64* %17, align 8
  %58 = zext i8 %55 to i64
  %59 = select i1 %56, i64 %57, i64 %58
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %51
  %62 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %16, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #12
  br label %99

63:                                               ; preds = %51
  %64 = call %class.TemplateURL* @_ZN18TemplateURLService24GetTemplateURLForKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.TemplateURLService* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %65 = icmp eq %class.TemplateURL* %64, null
  br i1 %65, label %70, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %class.TemplateURLService, %class.TemplateURLService* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %68 = load %class.SearchTermsData*, %class.SearchTermsData** %67, align 8
  %69 = call zeroext i1 @_ZNK11TemplateURL19SupportsReplacementERK15SearchTermsData(%class.TemplateURL* nonnull %64, %class.SearchTermsData* dereferenceable(8) %68) #12
  br i1 %69, label %72, label %70

70:                                               ; preds = %63, %66
  %71 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #12
  br label %99

72:                                               ; preds = %66
  %73 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %64, i64 0, i32 7
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 3
  br i1 %75, label %76, label %97

76:                                               ; preds = %72
  %77 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %78 = load %class.KeywordExtensionsDelegate*, %class.KeywordExtensionsDelegate** %77, align 8
  %79 = icmp eq %class.KeywordExtensionsDelegate* %78, null
  br i1 %79, label %97, label %80

80:                                               ; preds = %76
  %81 = bitcast %"class.std::__1::basic_string.7"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #12
  call void @_ZNK11TemplateURL14GetExtensionIdEv(%"class.std::__1::basic_string.7"* nonnull sret %8, %class.TemplateURL* nonnull %64) #12
  %82 = bitcast %class.KeywordExtensionsDelegate* %78 to i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)***
  %83 = load i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)**, i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)*** %82, align 8
  %84 = getelementptr inbounds i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)*, i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)** %83, i64 3
  %85 = load i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)*, i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)** %84, align 8
  %86 = call zeroext i1 %85(%class.KeywordExtensionsDelegate* nonnull %78, %"class.std::__1::basic_string.7"* nonnull dereferenceable(24) %8) #12
  %87 = bitcast %"class.std::__1::basic_string.7"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %80
  %92 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %91, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #12
  br i1 %86, label %97, label %95

95:                                               ; preds = %94
  %96 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 24, i1 false) #12
  br label %99

97:                                               ; preds = %94, %76, %72
  %98 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* nonnull align 8 %16, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #12
  br label %99

99:                                               ; preds = %70, %95, %97, %61
  %100 = load i8, i8* %54, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %99
  %103 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %104 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %104) #14
  br label %105

105:                                              ; preds = %99, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  br label %106

106:                                              ; preds = %105, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.TemplateURLService* @_ZNK15KeywordProvider21GetTemplateURLServiceEv(%class.KeywordProvider* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 3
  %3 = load %class.TemplateURLService*, %class.TemplateURLService** %2, align 8
  tail call void @_ZN18TemplateURLService4LoadEv(%class.TemplateURLService* %3) #12
  %4 = load %class.TemplateURLService*, %class.TemplateURLService** %2, align 8
  ret %class.TemplateURLService* %4
}

declare zeroext i1 @_ZN17OmniboxFieldTrial28IsKeywordSearchButtonEnabledEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15KeywordProvider21CleanUserInputKeywordEPK18TemplateURLServiceRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* noalias sret, %class.TemplateURLService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.url::Component", align 4
  %5 = alloca %"class.std::__1::basic_string.7", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 -86, i64 24, i1 false)
  %16 = load i8, i8* %14, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %21 = select i1 %17, i16* %19, i16* %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %16 to i64
  %25 = select i1 %17, i64 %23, i64 %24
  tail call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret %0, i16* %21, i64 %25) #12
  %26 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = load i16*, i16** %11, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %32 = select i1 %29, i16* %30, i16* %31
  %33 = load i64, i64* %12, align 8
  %34 = zext i8 %28 to i64
  %35 = select i1 %29, i64 %33, i64 %34
  %36 = tail call i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %32, i64 %35, i32 3, %"class.std::__1::basic_string"* %0) #12
  %37 = tail call %class.TemplateURL* @_ZNK18TemplateURLService24GetTemplateURLForKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.TemplateURLService* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0) #12
  %38 = icmp eq %class.TemplateURL* %37, null
  br i1 %38, label %39, label %1160

39:                                               ; preds = %3
  %40 = bitcast %"struct.url::Component"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  %41 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  %42 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  store i32 0, i32* %41, align 4
  store i32 -1, i32* %42, align 4
  %43 = bitcast %"class.std::__1::basic_string.7"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #12
  %44 = load i8, i8* %27, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i16*, i16** %11, align 8
  %47 = select i1 %45, i16* %46, i16* %31
  %48 = load i64, i64* %12, align 8
  %49 = zext i8 %44 to i64
  %50 = select i1 %45, i64 %48, i64 %49
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.7"* nonnull sret %5, i16* %47, i64 %50) #12
  %51 = bitcast %"class.std::__1::basic_string.7"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = select i1 %54, i8* %56, i8* %43
  %58 = load i8, i8* %27, align 1
  %59 = icmp slt i8 %58, 0
  %60 = load i64, i64* %12, align 8
  %61 = zext i8 %58 to i64
  %62 = select i1 %59, i64 %60, i64 %61
  %63 = trunc i64 %62 to i32
  %64 = call zeroext i1 @_ZN3url13ExtractSchemeEPKciPNS_9ComponentE(i8* %57, i32 %63, %"struct.url::Component"* nonnull %4) #12
  br i1 %64, label %65, label %182

65:                                               ; preds = %39
  %66 = load i32, i32* %41, align 4
  %67 = load i32, i32* %42, align 4
  %68 = add nsw i32 %67, %66
  %69 = sext i32 %68 to i64
  %70 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #12
  %71 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0)) #12
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), i64 %71) #12
  %72 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %72, i64 0, i32 1, i32 1
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %74 to i64
  %79 = select i1 %75, i64 %77, i64 %78
  %80 = load i8, i8* %27, align 1
  %81 = icmp slt i8 %80, 0
  %82 = load i64, i64* %12, align 8
  %83 = zext i8 %80 to i64
  %84 = select i1 %81, i64 %82, i64 %83
  %85 = icmp eq i64 %79, -1
  br i1 %85, label %86, label %88

86:                                               ; preds = %65
  %87 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %87) #13
  unreachable

88:                                               ; preds = %65
  %89 = icmp ult i64 %84, %69
  %90 = select i1 %89, i64 %84, i64 %69
  %91 = icmp ugt i64 %90, %79
  %92 = select i1 %91, i64 %79, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %113, label %94

94:                                               ; preds = %88
  %95 = load i16*, i16** %11, align 8
  %96 = select i1 %81, i16* %95, i16* %31
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i16*, i16** %97, align 8
  %99 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %100 = select i1 %75, i16* %98, i16* %99
  br label %101

101:                                              ; preds = %94, %108
  %102 = phi i64 [ %109, %108 ], [ %92, %94 ]
  %103 = phi i16* [ %111, %108 ], [ %100, %94 ]
  %104 = phi i16* [ %110, %108 ], [ %96, %94 ]
  %105 = load i16, i16* %104, align 2
  %106 = load i16, i16* %103, align 2
  %107 = icmp eq i16 %106, %105
  br i1 %107, label %108, label %115

108:                                              ; preds = %101
  %109 = add i64 %102, -1
  %110 = getelementptr inbounds i16, i16* %104, i64 1
  %111 = getelementptr inbounds i16, i16* %103, i64 1
  %112 = icmp eq i64 %109, 0
  br i1 %112, label %113, label %101

113:                                              ; preds = %108, %88
  %114 = icmp eq i64 %90, %79
  br i1 %114, label %174, label %115

115:                                              ; preds = %101, %113
  %116 = load i32, i32* %41, align 4
  %117 = load i32, i32* %42, align 4
  %118 = add nsw i32 %117, %116
  %119 = sext i32 %118 to i64
  %120 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #12
  %121 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #12
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %121) #12
  %122 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %122, i64 0, i32 1, i32 1
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = zext i8 %124 to i64
  %129 = select i1 %125, i64 %127, i64 %128
  %130 = load i8, i8* %27, align 1
  %131 = icmp slt i8 %130, 0
  %132 = load i64, i64* %12, align 8
  %133 = zext i8 %130 to i64
  %134 = select i1 %131, i64 %132, i64 %133
  %135 = icmp eq i64 %129, -1
  br i1 %135, label %136, label %138

136:                                              ; preds = %115
  %137 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %137) #13
  unreachable

138:                                              ; preds = %115
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i16*, i16** %139, align 8
  %141 = icmp ult i64 %134, %119
  %142 = select i1 %141, i64 %134, i64 %119
  %143 = icmp ugt i64 %142, %129
  %144 = select i1 %143, i64 %129, i64 %142
  %145 = icmp eq i64 %144, 0
  %146 = bitcast i16* %140 to i8*
  br i1 %145, label %164, label %147

147:                                              ; preds = %138
  %148 = load i16*, i16** %11, align 8
  %149 = select i1 %131, i16* %148, i16* %31
  %150 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %151 = select i1 %125, i16* %140, i16* %150
  br label %152

152:                                              ; preds = %147, %159
  %153 = phi i64 [ %160, %159 ], [ %144, %147 ]
  %154 = phi i16* [ %162, %159 ], [ %151, %147 ]
  %155 = phi i16* [ %161, %159 ], [ %149, %147 ]
  %156 = load i16, i16* %155, align 2
  %157 = load i16, i16* %154, align 2
  %158 = icmp eq i16 %157, %156
  br i1 %158, label %159, label %168

159:                                              ; preds = %152
  %160 = add i64 %153, -1
  %161 = getelementptr inbounds i16, i16* %155, i64 1
  %162 = getelementptr inbounds i16, i16* %154, i64 1
  %163 = icmp eq i64 %160, 0
  br i1 %163, label %164, label %152

164:                                              ; preds = %159, %138
  %165 = icmp ult i64 %142, %129
  %166 = zext i1 %143 to i32
  %167 = select i1 %165, i32 -1, i32 %166
  br label %168

168:                                              ; preds = %152, %164
  %169 = phi i32 [ %167, %164 ], [ -1, %152 ]
  %170 = icmp eq i32 %169, 0
  br i1 %125, label %171, label %172

171:                                              ; preds = %168
  call void @_ZdlPv(i8* %146) #14
  br label %172

172:                                              ; preds = %171, %168
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #12
  %173 = load i8, i8* %73, align 1
  br label %174

174:                                              ; preds = %113, %172
  %175 = phi i8 [ %173, %172 ], [ %74, %113 ]
  %176 = phi i1 [ %170, %172 ], [ true, %113 ]
  %177 = icmp slt i8 %175, 0
  br i1 %177, label %178, label %181

178:                                              ; preds = %174
  %179 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %180 = load i8*, i8** %179, align 8
  call void @_ZdlPv(i8* %180) #14
  br label %181

181:                                              ; preds = %174, %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #12
  br label %182

182:                                              ; preds = %39, %181
  %183 = phi i1 [ %176, %181 ], [ false, %39 ]
  %184 = load i8, i8* %52, align 1
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %188

186:                                              ; preds = %182
  %187 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %187) #14
  br label %188

188:                                              ; preds = %182, %186
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #12
  br i1 %183, label %189, label %910

189:                                              ; preds = %188
  %190 = load i32, i32* %41, align 4
  %191 = load i32, i32* %42, align 4
  %192 = add i32 %190, 1
  %193 = add i32 %192, %191
  %194 = sext i32 %193 to i64
  %195 = load i8, i8* %27, align 1
  %196 = icmp slt i8 %195, 0
  switch i64 %194, label %201 [
    i64 -1, label %197
    i64 0, label %528
  ]

197:                                              ; preds = %189
  br i1 %196, label %198, label %200

198:                                              ; preds = %197
  %199 = load i16*, i16** %11, align 8
  store i16 0, i16* %199, align 2
  store i64 0, i64* %12, align 8
  br label %528

200:                                              ; preds = %197
  store i16 0, i16* %31, align 8
  store i8 0, i8* %27, align 1
  br label %528

201:                                              ; preds = %189
  %202 = load i64, i64* %12, align 8
  %203 = load i16*, i16** %11, align 8
  %204 = zext i8 %195 to i64
  %205 = select i1 %196, i64 %202, i64 %204
  %206 = select i1 %196, i16* %203, i16* %31
  %207 = icmp ult i64 %205, %194
  %208 = select i1 %207, i64 %205, i64 %194
  %209 = sub i64 %205, %208
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %520, label %211

211:                                              ; preds = %201
  %212 = icmp sgt i64 %208, 0
  br i1 %212, label %213, label %357

213:                                              ; preds = %211
  %214 = getelementptr inbounds i16, i16* %206, i64 %208
  %215 = icmp ult i64 %209, 16
  br i1 %215, label %304, label %216

216:                                              ; preds = %213
  %217 = getelementptr i16, i16* %206, i64 %209
  %218 = getelementptr i16, i16* %206, i64 %205
  %219 = icmp ult i16* %206, %218
  %220 = icmp ult i16* %214, %217
  %221 = and i1 %219, %220
  br i1 %221, label %304, label %222

222:                                              ; preds = %216
  %223 = and i64 %209, -16
  %224 = sub i64 %209, %223
  %225 = getelementptr i16, i16* %214, i64 %223
  %226 = getelementptr i16, i16* %206, i64 %223
  %227 = add i64 %223, -16
  %228 = lshr exact i64 %227, 4
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 48
  br i1 %231, label %283, label %232

232:                                              ; preds = %222
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr i16, i16* %214, i64 %235
  %238 = getelementptr i16, i16* %206, i64 %235
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !23
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !23
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !26, !noalias !23
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !26, !noalias !23
  %247 = or i64 %235, 16
  %248 = getelementptr i16, i16* %214, i64 %247
  %249 = getelementptr i16, i16* %206, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !23
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !23
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !26, !noalias !23
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !26, !noalias !23
  %258 = or i64 %235, 32
  %259 = getelementptr i16, i16* %214, i64 %258
  %260 = getelementptr i16, i16* %206, i64 %258
  %261 = bitcast i16* %259 to <8 x i16>*
  %262 = load <8 x i16>, <8 x i16>* %261, align 2, !alias.scope !23
  %263 = getelementptr i16, i16* %259, i64 8
  %264 = bitcast i16* %263 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !23
  %266 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %262, <8 x i16>* %266, align 2, !alias.scope !26, !noalias !23
  %267 = getelementptr i16, i16* %260, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %268, align 2, !alias.scope !26, !noalias !23
  %269 = or i64 %235, 48
  %270 = getelementptr i16, i16* %214, i64 %269
  %271 = getelementptr i16, i16* %206, i64 %269
  %272 = bitcast i16* %270 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !23
  %274 = getelementptr i16, i16* %270, i64 8
  %275 = bitcast i16* %274 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !23
  %277 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %277, align 2, !alias.scope !26, !noalias !23
  %278 = getelementptr i16, i16* %271, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %279, align 2, !alias.scope !26, !noalias !23
  %280 = add i64 %235, 64
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !28

283:                                              ; preds = %234, %222
  %284 = phi i64 [ 0, %222 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr i16, i16* %214, i64 %287
  %290 = getelementptr i16, i16* %206, i64 %287
  %291 = bitcast i16* %289 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !23
  %293 = getelementptr i16, i16* %289, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !23
  %296 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %296, align 2, !alias.scope !26, !noalias !23
  %297 = getelementptr i16, i16* %290, i64 8
  %298 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %298, align 2, !alias.scope !26, !noalias !23
  %299 = add i64 %287, 16
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !29

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %209, %223
  br i1 %303, label %520, label %304

304:                                              ; preds = %302, %216, %213
  %305 = phi i64 [ %209, %216 ], [ %209, %213 ], [ %224, %302 ]
  %306 = phi i16* [ %214, %216 ], [ %214, %213 ], [ %225, %302 ]
  %307 = phi i16* [ %206, %216 ], [ %206, %213 ], [ %226, %302 ]
  %308 = add i64 %305, -1
  %309 = and i64 %305, 7
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %322, label %311

311:                                              ; preds = %304, %311
  %312 = phi i64 [ %317, %311 ], [ %305, %304 ]
  %313 = phi i16* [ %319, %311 ], [ %306, %304 ]
  %314 = phi i16* [ %318, %311 ], [ %307, %304 ]
  %315 = phi i64 [ %320, %311 ], [ %309, %304 ]
  %316 = load i16, i16* %313, align 2
  store i16 %316, i16* %314, align 2
  %317 = add i64 %312, -1
  %318 = getelementptr inbounds i16, i16* %314, i64 1
  %319 = getelementptr inbounds i16, i16* %313, i64 1
  %320 = add i64 %315, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %311, !llvm.loop !30

322:                                              ; preds = %311, %304
  %323 = phi i64 [ %305, %304 ], [ %317, %311 ]
  %324 = phi i16* [ %306, %304 ], [ %319, %311 ]
  %325 = phi i16* [ %307, %304 ], [ %318, %311 ]
  %326 = icmp ult i64 %308, 7
  br i1 %326, label %520, label %327

327:                                              ; preds = %322, %327
  %328 = phi i64 [ %353, %327 ], [ %323, %322 ]
  %329 = phi i16* [ %355, %327 ], [ %324, %322 ]
  %330 = phi i16* [ %354, %327 ], [ %325, %322 ]
  %331 = load i16, i16* %329, align 2
  store i16 %331, i16* %330, align 2
  %332 = getelementptr inbounds i16, i16* %330, i64 1
  %333 = getelementptr inbounds i16, i16* %329, i64 1
  %334 = load i16, i16* %333, align 2
  store i16 %334, i16* %332, align 2
  %335 = getelementptr inbounds i16, i16* %330, i64 2
  %336 = getelementptr inbounds i16, i16* %329, i64 2
  %337 = load i16, i16* %336, align 2
  store i16 %337, i16* %335, align 2
  %338 = getelementptr inbounds i16, i16* %330, i64 3
  %339 = getelementptr inbounds i16, i16* %329, i64 3
  %340 = load i16, i16* %339, align 2
  store i16 %340, i16* %338, align 2
  %341 = getelementptr inbounds i16, i16* %330, i64 4
  %342 = getelementptr inbounds i16, i16* %329, i64 4
  %343 = load i16, i16* %342, align 2
  store i16 %343, i16* %341, align 2
  %344 = getelementptr inbounds i16, i16* %330, i64 5
  %345 = getelementptr inbounds i16, i16* %329, i64 5
  %346 = load i16, i16* %345, align 2
  store i16 %346, i16* %344, align 2
  %347 = getelementptr inbounds i16, i16* %330, i64 6
  %348 = getelementptr inbounds i16, i16* %329, i64 6
  %349 = load i16, i16* %348, align 2
  store i16 %349, i16* %347, align 2
  %350 = getelementptr inbounds i16, i16* %330, i64 7
  %351 = getelementptr inbounds i16, i16* %329, i64 7
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = add i64 %328, -8
  %354 = getelementptr inbounds i16, i16* %330, i64 8
  %355 = getelementptr inbounds i16, i16* %329, i64 8
  %356 = icmp eq i64 %353, 0
  br i1 %356, label %520, label %327, !llvm.loop !31

357:                                              ; preds = %211
  %358 = icmp slt i64 %208, 0
  br i1 %358, label %359, label %520

359:                                              ; preds = %357
  %360 = getelementptr inbounds i16, i16* %206, i64 %205
  %361 = getelementptr inbounds i16, i16* %206, i64 %209
  %362 = icmp ult i64 %209, 16
  br i1 %362, label %467, label %363

363:                                              ; preds = %359
  %364 = xor i64 %208, -1
  %365 = add i64 %205, %364
  %366 = getelementptr i16, i16* %206, i64 %365
  %367 = ptrtoint i16* %366 to i64
  %368 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %365, i64 2)
  %369 = extractvalue { i64, i1 } %368, 0
  %370 = extractvalue { i64, i1 } %368, 1
  %371 = icmp ugt i64 %369, %367
  %372 = or i1 %371, %370
  %373 = add i64 %205, -1
  %374 = getelementptr i16, i16* %206, i64 %373
  %375 = ptrtoint i16* %374 to i64
  %376 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %365, i64 2)
  %377 = extractvalue { i64, i1 } %376, 0
  %378 = extractvalue { i64, i1 } %376, 1
  %379 = icmp ugt i64 %377, %375
  %380 = or i1 %379, %378
  %381 = or i1 %372, %380
  br i1 %381, label %467, label %382

382:                                              ; preds = %363
  %383 = getelementptr i16, i16* %206, i64 %208
  %384 = icmp sgt i64 %205, 0
  %385 = icmp ult i16* %383, %361
  %386 = and i1 %384, %385
  br i1 %386, label %467, label %387

387:                                              ; preds = %382
  %388 = and i64 %209, -16
  %389 = sub i64 %209, %388
  %390 = sub i64 0, %388
  %391 = getelementptr i16, i16* %360, i64 %390
  %392 = sub i64 0, %388
  %393 = getelementptr i16, i16* %361, i64 %392
  %394 = add i64 %388, -16
  %395 = lshr exact i64 %394, 4
  %396 = add nuw nsw i64 %395, 1
  %397 = and i64 %396, 1
  %398 = icmp eq i64 %394, 0
  br i1 %398, label %443, label %399

399:                                              ; preds = %387
  %400 = sub nuw nsw i64 %396, %397
  %401 = getelementptr i16, i16* %360, i64 -1
  %402 = getelementptr i16, i16* %361, i64 -1
  %403 = getelementptr i16, i16* %360, i64 -1
  %404 = getelementptr i16, i16* %361, i64 -1
  br label %405

405:                                              ; preds = %405, %399
  %406 = phi i64 [ 0, %399 ], [ %440, %405 ]
  %407 = phi i64 [ %400, %399 ], [ %441, %405 ]
  %408 = sub i64 0, %406
  %409 = sub i64 0, %406
  %410 = getelementptr inbounds i16, i16* %402, i64 %409
  %411 = getelementptr inbounds i16, i16* %401, i64 %408
  %412 = getelementptr inbounds i16, i16* %411, i64 -7
  %413 = bitcast i16* %412 to <8 x i16>*
  %414 = load <8 x i16>, <8 x i16>* %413, align 2, !alias.scope !32
  %415 = getelementptr inbounds i16, i16* %411, i64 -8
  %416 = getelementptr inbounds i16, i16* %415, i64 -7
  %417 = bitcast i16* %416 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !32
  %419 = getelementptr inbounds i16, i16* %410, i64 -7
  %420 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %414, <8 x i16>* %420, align 2, !alias.scope !35, !noalias !32
  %421 = getelementptr inbounds i16, i16* %410, i64 -8
  %422 = getelementptr inbounds i16, i16* %421, i64 -7
  %423 = bitcast i16* %422 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %423, align 2, !alias.scope !35, !noalias !32
  %424 = sub nuw nsw i64 -16, %406
  %425 = sub nuw nsw i64 -16, %406
  %426 = getelementptr inbounds i16, i16* %404, i64 %425
  %427 = getelementptr inbounds i16, i16* %403, i64 %424
  %428 = getelementptr inbounds i16, i16* %427, i64 -7
  %429 = bitcast i16* %428 to <8 x i16>*
  %430 = load <8 x i16>, <8 x i16>* %429, align 2, !alias.scope !32
  %431 = getelementptr inbounds i16, i16* %427, i64 -8
  %432 = getelementptr inbounds i16, i16* %431, i64 -7
  %433 = bitcast i16* %432 to <8 x i16>*
  %434 = load <8 x i16>, <8 x i16>* %433, align 2, !alias.scope !32
  %435 = getelementptr inbounds i16, i16* %426, i64 -7
  %436 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %430, <8 x i16>* %436, align 2, !alias.scope !35, !noalias !32
  %437 = getelementptr inbounds i16, i16* %426, i64 -8
  %438 = getelementptr inbounds i16, i16* %437, i64 -7
  %439 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %434, <8 x i16>* %439, align 2, !alias.scope !35, !noalias !32
  %440 = add i64 %406, 32
  %441 = add i64 %407, -2
  %442 = icmp eq i64 %441, 0
  br i1 %442, label %443, label %405, !llvm.loop !37

443:                                              ; preds = %405, %387
  %444 = phi i64 [ 0, %387 ], [ %440, %405 ]
  %445 = icmp eq i64 %397, 0
  br i1 %445, label %465, label %446

446:                                              ; preds = %443
  %447 = sub i64 0, %444
  %448 = getelementptr i16, i16* %360, i64 -1
  %449 = sub i64 0, %444
  %450 = getelementptr i16, i16* %361, i64 -1
  %451 = getelementptr inbounds i16, i16* %450, i64 %449
  %452 = getelementptr inbounds i16, i16* %448, i64 %447
  %453 = getelementptr inbounds i16, i16* %452, i64 -7
  %454 = bitcast i16* %453 to <8 x i16>*
  %455 = load <8 x i16>, <8 x i16>* %454, align 2, !alias.scope !32
  %456 = getelementptr inbounds i16, i16* %452, i64 -8
  %457 = getelementptr inbounds i16, i16* %456, i64 -7
  %458 = bitcast i16* %457 to <8 x i16>*
  %459 = load <8 x i16>, <8 x i16>* %458, align 2, !alias.scope !32
  %460 = getelementptr inbounds i16, i16* %451, i64 -7
  %461 = bitcast i16* %460 to <8 x i16>*
  store <8 x i16> %455, <8 x i16>* %461, align 2, !alias.scope !35, !noalias !32
  %462 = getelementptr inbounds i16, i16* %451, i64 -8
  %463 = getelementptr inbounds i16, i16* %462, i64 -7
  %464 = bitcast i16* %463 to <8 x i16>*
  store <8 x i16> %459, <8 x i16>* %464, align 2, !alias.scope !35, !noalias !32
  br label %465

465:                                              ; preds = %443, %446
  %466 = icmp eq i64 %209, %388
  br i1 %466, label %520, label %467

467:                                              ; preds = %465, %382, %363, %359
  %468 = phi i64 [ %209, %382 ], [ %209, %363 ], [ %209, %359 ], [ %389, %465 ]
  %469 = phi i16* [ %360, %382 ], [ %360, %363 ], [ %360, %359 ], [ %391, %465 ]
  %470 = phi i16* [ %361, %382 ], [ %361, %363 ], [ %361, %359 ], [ %393, %465 ]
  %471 = add i64 %468, -1
  %472 = and i64 %468, 7
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %485, label %474

474:                                              ; preds = %467, %474
  %475 = phi i64 [ %482, %474 ], [ %468, %467 ]
  %476 = phi i16* [ %480, %474 ], [ %469, %467 ]
  %477 = phi i16* [ %479, %474 ], [ %470, %467 ]
  %478 = phi i64 [ %483, %474 ], [ %472, %467 ]
  %479 = getelementptr inbounds i16, i16* %477, i64 -1
  %480 = getelementptr inbounds i16, i16* %476, i64 -1
  %481 = load i16, i16* %480, align 2
  store i16 %481, i16* %479, align 2
  %482 = add i64 %475, -1
  %483 = add i64 %478, -1
  %484 = icmp eq i64 %483, 0
  br i1 %484, label %485, label %474, !llvm.loop !38

485:                                              ; preds = %474, %467
  %486 = phi i64 [ %468, %467 ], [ %482, %474 ]
  %487 = phi i16* [ %469, %467 ], [ %480, %474 ]
  %488 = phi i16* [ %470, %467 ], [ %479, %474 ]
  %489 = icmp ult i64 %471, 7
  br i1 %489, label %520, label %490

490:                                              ; preds = %485, %490
  %491 = phi i64 [ %518, %490 ], [ %486, %485 ]
  %492 = phi i16* [ %516, %490 ], [ %487, %485 ]
  %493 = phi i16* [ %515, %490 ], [ %488, %485 ]
  %494 = getelementptr inbounds i16, i16* %493, i64 -1
  %495 = getelementptr inbounds i16, i16* %492, i64 -1
  %496 = load i16, i16* %495, align 2
  store i16 %496, i16* %494, align 2
  %497 = getelementptr inbounds i16, i16* %493, i64 -2
  %498 = getelementptr inbounds i16, i16* %492, i64 -2
  %499 = load i16, i16* %498, align 2
  store i16 %499, i16* %497, align 2
  %500 = getelementptr inbounds i16, i16* %493, i64 -3
  %501 = getelementptr inbounds i16, i16* %492, i64 -3
  %502 = load i16, i16* %501, align 2
  store i16 %502, i16* %500, align 2
  %503 = getelementptr inbounds i16, i16* %493, i64 -4
  %504 = getelementptr inbounds i16, i16* %492, i64 -4
  %505 = load i16, i16* %504, align 2
  store i16 %505, i16* %503, align 2
  %506 = getelementptr inbounds i16, i16* %493, i64 -5
  %507 = getelementptr inbounds i16, i16* %492, i64 -5
  %508 = load i16, i16* %507, align 2
  store i16 %508, i16* %506, align 2
  %509 = getelementptr inbounds i16, i16* %493, i64 -6
  %510 = getelementptr inbounds i16, i16* %492, i64 -6
  %511 = load i16, i16* %510, align 2
  store i16 %511, i16* %509, align 2
  %512 = getelementptr inbounds i16, i16* %493, i64 -7
  %513 = getelementptr inbounds i16, i16* %492, i64 -7
  %514 = load i16, i16* %513, align 2
  store i16 %514, i16* %512, align 2
  %515 = getelementptr inbounds i16, i16* %493, i64 -8
  %516 = getelementptr inbounds i16, i16* %492, i64 -8
  %517 = load i16, i16* %516, align 2
  store i16 %517, i16* %515, align 2
  %518 = add i64 %491, -8
  %519 = icmp eq i64 %518, 0
  br i1 %519, label %520, label %490, !llvm.loop !39

520:                                              ; preds = %485, %490, %322, %327, %465, %302, %357, %201
  %521 = load i8, i8* %27, align 1
  %522 = icmp slt i8 %521, 0
  br i1 %522, label %523, label %524

523:                                              ; preds = %520
  store i64 %209, i64* %12, align 8
  br label %526

524:                                              ; preds = %520
  %525 = trunc i64 %209 to i8
  store i8 %525, i8* %27, align 1
  br label %526

526:                                              ; preds = %524, %523
  %527 = getelementptr inbounds i16, i16* %206, i64 %209
  store i16 0, i16* %527, align 2
  br label %528

528:                                              ; preds = %189, %198, %200, %526
  %529 = call %class.TemplateURL* @_ZNK18TemplateURLService24GetTemplateURLForKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.TemplateURLService* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0) #12
  %530 = icmp eq %class.TemplateURL* %529, null
  br i1 %530, label %531, label %1159

531:                                              ; preds = %528
  %532 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %532) #12
  %533 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %534 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %535 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %535, i8 -86, i64 24, i1 false)
  %536 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %537 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %536, i64 0, i32 1, i32 1
  store i8 2, i8* %537, align 1
  %538 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  store i16 47, i16* %538, align 8
  %539 = getelementptr inbounds i16, i16* %538, i64 1
  store i16 47, i16* %539, align 2
  %540 = getelementptr inbounds i16, i16* %538, i64 2
  store i16 0, i16* %540, align 4
  %541 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %536, i64 0, i32 1, i32 1
  %542 = load i8, i8* %541, align 1
  %543 = icmp slt i8 %542, 0
  %544 = load i64, i64* %534, align 8
  %545 = zext i8 %542 to i64
  %546 = select i1 %543, i64 %544, i64 %545
  %547 = load i8, i8* %27, align 1
  %548 = icmp slt i8 %547, 0
  %549 = load i64, i64* %12, align 8
  %550 = zext i8 %547 to i64
  %551 = select i1 %548, i64 %549, i64 %550
  %552 = icmp eq i64 %546, -1
  br i1 %552, label %553, label %555

553:                                              ; preds = %531
  %554 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %554) #13
  unreachable

555:                                              ; preds = %531
  %556 = icmp ult i64 %551, %546
  %557 = select i1 %556, i64 %551, i64 %546
  %558 = load i16*, i16** %11, align 8
  %559 = select i1 %548, i16* %558, i16* %31
  %560 = icmp eq i64 %557, 0
  br i1 %560, label %577, label %561

561:                                              ; preds = %555
  %562 = load i16*, i16** %533, align 8
  %563 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %564 = select i1 %543, i16* %562, i16* %563
  br label %565

565:                                              ; preds = %561, %572
  %566 = phi i64 [ %573, %572 ], [ %557, %561 ]
  %567 = phi i16* [ %575, %572 ], [ %564, %561 ]
  %568 = phi i16* [ %574, %572 ], [ %559, %561 ]
  %569 = load i16, i16* %568, align 2
  %570 = load i16, i16* %567, align 2
  %571 = icmp eq i16 %570, %569
  br i1 %571, label %572, label %901

572:                                              ; preds = %565
  %573 = add i64 %566, -1
  %574 = getelementptr inbounds i16, i16* %568, i64 1
  %575 = getelementptr inbounds i16, i16* %567, i64 1
  %576 = icmp eq i64 %573, 0
  br i1 %576, label %577, label %565

577:                                              ; preds = %572, %555
  %578 = icmp ult i64 %551, %546
  br i1 %578, label %901, label %579

579:                                              ; preds = %577
  switch i64 %546, label %583 [
    i64 -1, label %580
    i64 0, label %901
  ]

580:                                              ; preds = %579
  br i1 %548, label %581, label %582

581:                                              ; preds = %580
  store i16 0, i16* %558, align 2
  store i64 0, i64* %12, align 8
  br label %901

582:                                              ; preds = %580
  store i16 0, i16* %31, align 8
  store i8 0, i8* %27, align 1
  br label %901

583:                                              ; preds = %579
  %584 = sub i64 %551, %546
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %893, label %586

586:                                              ; preds = %583
  %587 = icmp sgt i64 %546, 0
  br i1 %587, label %588, label %732

588:                                              ; preds = %586
  %589 = getelementptr inbounds i16, i16* %559, i64 %546
  %590 = icmp ult i64 %584, 16
  br i1 %590, label %679, label %591

591:                                              ; preds = %588
  %592 = getelementptr i16, i16* %559, i64 %584
  %593 = getelementptr i16, i16* %559, i64 %551
  %594 = icmp ult i16* %559, %593
  %595 = icmp ult i16* %589, %592
  %596 = and i1 %594, %595
  br i1 %596, label %679, label %597

597:                                              ; preds = %591
  %598 = and i64 %584, -16
  %599 = sub i64 %584, %598
  %600 = getelementptr i16, i16* %589, i64 %598
  %601 = getelementptr i16, i16* %559, i64 %598
  %602 = add i64 %598, -16
  %603 = lshr exact i64 %602, 4
  %604 = add nuw nsw i64 %603, 1
  %605 = and i64 %604, 3
  %606 = icmp ult i64 %602, 48
  br i1 %606, label %658, label %607

607:                                              ; preds = %597
  %608 = sub nsw i64 %604, %605
  br label %609

609:                                              ; preds = %609, %607
  %610 = phi i64 [ 0, %607 ], [ %655, %609 ]
  %611 = phi i64 [ %608, %607 ], [ %656, %609 ]
  %612 = getelementptr i16, i16* %589, i64 %610
  %613 = getelementptr i16, i16* %559, i64 %610
  %614 = bitcast i16* %612 to <8 x i16>*
  %615 = load <8 x i16>, <8 x i16>* %614, align 2, !alias.scope !40
  %616 = getelementptr i16, i16* %612, i64 8
  %617 = bitcast i16* %616 to <8 x i16>*
  %618 = load <8 x i16>, <8 x i16>* %617, align 2, !alias.scope !40
  %619 = bitcast i16* %613 to <8 x i16>*
  store <8 x i16> %615, <8 x i16>* %619, align 2, !alias.scope !43, !noalias !40
  %620 = getelementptr i16, i16* %613, i64 8
  %621 = bitcast i16* %620 to <8 x i16>*
  store <8 x i16> %618, <8 x i16>* %621, align 2, !alias.scope !43, !noalias !40
  %622 = or i64 %610, 16
  %623 = getelementptr i16, i16* %589, i64 %622
  %624 = getelementptr i16, i16* %559, i64 %622
  %625 = bitcast i16* %623 to <8 x i16>*
  %626 = load <8 x i16>, <8 x i16>* %625, align 2, !alias.scope !40
  %627 = getelementptr i16, i16* %623, i64 8
  %628 = bitcast i16* %627 to <8 x i16>*
  %629 = load <8 x i16>, <8 x i16>* %628, align 2, !alias.scope !40
  %630 = bitcast i16* %624 to <8 x i16>*
  store <8 x i16> %626, <8 x i16>* %630, align 2, !alias.scope !43, !noalias !40
  %631 = getelementptr i16, i16* %624, i64 8
  %632 = bitcast i16* %631 to <8 x i16>*
  store <8 x i16> %629, <8 x i16>* %632, align 2, !alias.scope !43, !noalias !40
  %633 = or i64 %610, 32
  %634 = getelementptr i16, i16* %589, i64 %633
  %635 = getelementptr i16, i16* %559, i64 %633
  %636 = bitcast i16* %634 to <8 x i16>*
  %637 = load <8 x i16>, <8 x i16>* %636, align 2, !alias.scope !40
  %638 = getelementptr i16, i16* %634, i64 8
  %639 = bitcast i16* %638 to <8 x i16>*
  %640 = load <8 x i16>, <8 x i16>* %639, align 2, !alias.scope !40
  %641 = bitcast i16* %635 to <8 x i16>*
  store <8 x i16> %637, <8 x i16>* %641, align 2, !alias.scope !43, !noalias !40
  %642 = getelementptr i16, i16* %635, i64 8
  %643 = bitcast i16* %642 to <8 x i16>*
  store <8 x i16> %640, <8 x i16>* %643, align 2, !alias.scope !43, !noalias !40
  %644 = or i64 %610, 48
  %645 = getelementptr i16, i16* %589, i64 %644
  %646 = getelementptr i16, i16* %559, i64 %644
  %647 = bitcast i16* %645 to <8 x i16>*
  %648 = load <8 x i16>, <8 x i16>* %647, align 2, !alias.scope !40
  %649 = getelementptr i16, i16* %645, i64 8
  %650 = bitcast i16* %649 to <8 x i16>*
  %651 = load <8 x i16>, <8 x i16>* %650, align 2, !alias.scope !40
  %652 = bitcast i16* %646 to <8 x i16>*
  store <8 x i16> %648, <8 x i16>* %652, align 2, !alias.scope !43, !noalias !40
  %653 = getelementptr i16, i16* %646, i64 8
  %654 = bitcast i16* %653 to <8 x i16>*
  store <8 x i16> %651, <8 x i16>* %654, align 2, !alias.scope !43, !noalias !40
  %655 = add i64 %610, 64
  %656 = add i64 %611, -4
  %657 = icmp eq i64 %656, 0
  br i1 %657, label %658, label %609, !llvm.loop !45

658:                                              ; preds = %609, %597
  %659 = phi i64 [ 0, %597 ], [ %655, %609 ]
  %660 = icmp eq i64 %605, 0
  br i1 %660, label %677, label %661

661:                                              ; preds = %658, %661
  %662 = phi i64 [ %674, %661 ], [ %659, %658 ]
  %663 = phi i64 [ %675, %661 ], [ %605, %658 ]
  %664 = getelementptr i16, i16* %589, i64 %662
  %665 = getelementptr i16, i16* %559, i64 %662
  %666 = bitcast i16* %664 to <8 x i16>*
  %667 = load <8 x i16>, <8 x i16>* %666, align 2, !alias.scope !40
  %668 = getelementptr i16, i16* %664, i64 8
  %669 = bitcast i16* %668 to <8 x i16>*
  %670 = load <8 x i16>, <8 x i16>* %669, align 2, !alias.scope !40
  %671 = bitcast i16* %665 to <8 x i16>*
  store <8 x i16> %667, <8 x i16>* %671, align 2, !alias.scope !43, !noalias !40
  %672 = getelementptr i16, i16* %665, i64 8
  %673 = bitcast i16* %672 to <8 x i16>*
  store <8 x i16> %670, <8 x i16>* %673, align 2, !alias.scope !43, !noalias !40
  %674 = add i64 %662, 16
  %675 = add i64 %663, -1
  %676 = icmp eq i64 %675, 0
  br i1 %676, label %677, label %661, !llvm.loop !46

677:                                              ; preds = %661, %658
  %678 = icmp eq i64 %584, %598
  br i1 %678, label %893, label %679

679:                                              ; preds = %677, %591, %588
  %680 = phi i64 [ %584, %591 ], [ %584, %588 ], [ %599, %677 ]
  %681 = phi i16* [ %589, %591 ], [ %589, %588 ], [ %600, %677 ]
  %682 = phi i16* [ %559, %591 ], [ %559, %588 ], [ %601, %677 ]
  %683 = add i64 %680, -1
  %684 = and i64 %680, 7
  %685 = icmp eq i64 %684, 0
  br i1 %685, label %697, label %686

686:                                              ; preds = %679, %686
  %687 = phi i64 [ %692, %686 ], [ %680, %679 ]
  %688 = phi i16* [ %694, %686 ], [ %681, %679 ]
  %689 = phi i16* [ %693, %686 ], [ %682, %679 ]
  %690 = phi i64 [ %695, %686 ], [ %684, %679 ]
  %691 = load i16, i16* %688, align 2
  store i16 %691, i16* %689, align 2
  %692 = add i64 %687, -1
  %693 = getelementptr inbounds i16, i16* %689, i64 1
  %694 = getelementptr inbounds i16, i16* %688, i64 1
  %695 = add i64 %690, -1
  %696 = icmp eq i64 %695, 0
  br i1 %696, label %697, label %686, !llvm.loop !47

697:                                              ; preds = %686, %679
  %698 = phi i64 [ %680, %679 ], [ %692, %686 ]
  %699 = phi i16* [ %681, %679 ], [ %694, %686 ]
  %700 = phi i16* [ %682, %679 ], [ %693, %686 ]
  %701 = icmp ult i64 %683, 7
  br i1 %701, label %893, label %702

702:                                              ; preds = %697, %702
  %703 = phi i64 [ %728, %702 ], [ %698, %697 ]
  %704 = phi i16* [ %730, %702 ], [ %699, %697 ]
  %705 = phi i16* [ %729, %702 ], [ %700, %697 ]
  %706 = load i16, i16* %704, align 2
  store i16 %706, i16* %705, align 2
  %707 = getelementptr inbounds i16, i16* %705, i64 1
  %708 = getelementptr inbounds i16, i16* %704, i64 1
  %709 = load i16, i16* %708, align 2
  store i16 %709, i16* %707, align 2
  %710 = getelementptr inbounds i16, i16* %705, i64 2
  %711 = getelementptr inbounds i16, i16* %704, i64 2
  %712 = load i16, i16* %711, align 2
  store i16 %712, i16* %710, align 2
  %713 = getelementptr inbounds i16, i16* %705, i64 3
  %714 = getelementptr inbounds i16, i16* %704, i64 3
  %715 = load i16, i16* %714, align 2
  store i16 %715, i16* %713, align 2
  %716 = getelementptr inbounds i16, i16* %705, i64 4
  %717 = getelementptr inbounds i16, i16* %704, i64 4
  %718 = load i16, i16* %717, align 2
  store i16 %718, i16* %716, align 2
  %719 = getelementptr inbounds i16, i16* %705, i64 5
  %720 = getelementptr inbounds i16, i16* %704, i64 5
  %721 = load i16, i16* %720, align 2
  store i16 %721, i16* %719, align 2
  %722 = getelementptr inbounds i16, i16* %705, i64 6
  %723 = getelementptr inbounds i16, i16* %704, i64 6
  %724 = load i16, i16* %723, align 2
  store i16 %724, i16* %722, align 2
  %725 = getelementptr inbounds i16, i16* %705, i64 7
  %726 = getelementptr inbounds i16, i16* %704, i64 7
  %727 = load i16, i16* %726, align 2
  store i16 %727, i16* %725, align 2
  %728 = add i64 %703, -8
  %729 = getelementptr inbounds i16, i16* %705, i64 8
  %730 = getelementptr inbounds i16, i16* %704, i64 8
  %731 = icmp eq i64 %728, 0
  br i1 %731, label %893, label %702, !llvm.loop !48

732:                                              ; preds = %586
  %733 = getelementptr inbounds i16, i16* %559, i64 %551
  %734 = getelementptr inbounds i16, i16* %559, i64 %584
  %735 = icmp ult i64 %584, 16
  br i1 %735, label %840, label %736

736:                                              ; preds = %732
  %737 = xor i64 %546, -1
  %738 = add i64 %551, %737
  %739 = getelementptr i16, i16* %559, i64 %738
  %740 = ptrtoint i16* %739 to i64
  %741 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %738, i64 2)
  %742 = extractvalue { i64, i1 } %741, 0
  %743 = extractvalue { i64, i1 } %741, 1
  %744 = icmp ugt i64 %742, %740
  %745 = or i1 %744, %743
  %746 = add i64 %551, -1
  %747 = getelementptr i16, i16* %559, i64 %746
  %748 = ptrtoint i16* %747 to i64
  %749 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %738, i64 2)
  %750 = extractvalue { i64, i1 } %749, 0
  %751 = extractvalue { i64, i1 } %749, 1
  %752 = icmp ugt i64 %750, %748
  %753 = or i1 %752, %751
  %754 = or i1 %745, %753
  br i1 %754, label %840, label %755

755:                                              ; preds = %736
  %756 = getelementptr i16, i16* %559, i64 %546
  %757 = icmp sgt i64 %551, 0
  %758 = icmp ult i16* %756, %734
  %759 = and i1 %757, %758
  br i1 %759, label %840, label %760

760:                                              ; preds = %755
  %761 = and i64 %584, -16
  %762 = sub i64 %584, %761
  %763 = sub i64 0, %761
  %764 = getelementptr i16, i16* %733, i64 %763
  %765 = sub i64 0, %761
  %766 = getelementptr i16, i16* %734, i64 %765
  %767 = add i64 %761, -16
  %768 = lshr exact i64 %767, 4
  %769 = add nuw nsw i64 %768, 1
  %770 = and i64 %769, 1
  %771 = icmp eq i64 %767, 0
  br i1 %771, label %816, label %772

772:                                              ; preds = %760
  %773 = sub nuw nsw i64 %769, %770
  %774 = getelementptr i16, i16* %733, i64 -1
  %775 = getelementptr i16, i16* %734, i64 -1
  %776 = getelementptr i16, i16* %733, i64 -1
  %777 = getelementptr i16, i16* %734, i64 -1
  br label %778

778:                                              ; preds = %778, %772
  %779 = phi i64 [ 0, %772 ], [ %813, %778 ]
  %780 = phi i64 [ %773, %772 ], [ %814, %778 ]
  %781 = sub i64 0, %779
  %782 = sub i64 0, %779
  %783 = getelementptr inbounds i16, i16* %775, i64 %782
  %784 = getelementptr inbounds i16, i16* %774, i64 %781
  %785 = getelementptr inbounds i16, i16* %784, i64 -7
  %786 = bitcast i16* %785 to <8 x i16>*
  %787 = load <8 x i16>, <8 x i16>* %786, align 2, !alias.scope !49
  %788 = getelementptr inbounds i16, i16* %784, i64 -8
  %789 = getelementptr inbounds i16, i16* %788, i64 -7
  %790 = bitcast i16* %789 to <8 x i16>*
  %791 = load <8 x i16>, <8 x i16>* %790, align 2, !alias.scope !49
  %792 = getelementptr inbounds i16, i16* %783, i64 -7
  %793 = bitcast i16* %792 to <8 x i16>*
  store <8 x i16> %787, <8 x i16>* %793, align 2, !alias.scope !52, !noalias !49
  %794 = getelementptr inbounds i16, i16* %783, i64 -8
  %795 = getelementptr inbounds i16, i16* %794, i64 -7
  %796 = bitcast i16* %795 to <8 x i16>*
  store <8 x i16> %791, <8 x i16>* %796, align 2, !alias.scope !52, !noalias !49
  %797 = sub nuw nsw i64 -16, %779
  %798 = sub nuw nsw i64 -16, %779
  %799 = getelementptr inbounds i16, i16* %777, i64 %798
  %800 = getelementptr inbounds i16, i16* %776, i64 %797
  %801 = getelementptr inbounds i16, i16* %800, i64 -7
  %802 = bitcast i16* %801 to <8 x i16>*
  %803 = load <8 x i16>, <8 x i16>* %802, align 2, !alias.scope !49
  %804 = getelementptr inbounds i16, i16* %800, i64 -8
  %805 = getelementptr inbounds i16, i16* %804, i64 -7
  %806 = bitcast i16* %805 to <8 x i16>*
  %807 = load <8 x i16>, <8 x i16>* %806, align 2, !alias.scope !49
  %808 = getelementptr inbounds i16, i16* %799, i64 -7
  %809 = bitcast i16* %808 to <8 x i16>*
  store <8 x i16> %803, <8 x i16>* %809, align 2, !alias.scope !52, !noalias !49
  %810 = getelementptr inbounds i16, i16* %799, i64 -8
  %811 = getelementptr inbounds i16, i16* %810, i64 -7
  %812 = bitcast i16* %811 to <8 x i16>*
  store <8 x i16> %807, <8 x i16>* %812, align 2, !alias.scope !52, !noalias !49
  %813 = add i64 %779, 32
  %814 = add i64 %780, -2
  %815 = icmp eq i64 %814, 0
  br i1 %815, label %816, label %778, !llvm.loop !54

816:                                              ; preds = %778, %760
  %817 = phi i64 [ 0, %760 ], [ %813, %778 ]
  %818 = icmp eq i64 %770, 0
  br i1 %818, label %838, label %819

819:                                              ; preds = %816
  %820 = sub i64 0, %817
  %821 = getelementptr i16, i16* %733, i64 -1
  %822 = sub i64 0, %817
  %823 = getelementptr i16, i16* %734, i64 -1
  %824 = getelementptr inbounds i16, i16* %823, i64 %822
  %825 = getelementptr inbounds i16, i16* %821, i64 %820
  %826 = getelementptr inbounds i16, i16* %825, i64 -7
  %827 = bitcast i16* %826 to <8 x i16>*
  %828 = load <8 x i16>, <8 x i16>* %827, align 2, !alias.scope !49
  %829 = getelementptr inbounds i16, i16* %825, i64 -8
  %830 = getelementptr inbounds i16, i16* %829, i64 -7
  %831 = bitcast i16* %830 to <8 x i16>*
  %832 = load <8 x i16>, <8 x i16>* %831, align 2, !alias.scope !49
  %833 = getelementptr inbounds i16, i16* %824, i64 -7
  %834 = bitcast i16* %833 to <8 x i16>*
  store <8 x i16> %828, <8 x i16>* %834, align 2, !alias.scope !52, !noalias !49
  %835 = getelementptr inbounds i16, i16* %824, i64 -8
  %836 = getelementptr inbounds i16, i16* %835, i64 -7
  %837 = bitcast i16* %836 to <8 x i16>*
  store <8 x i16> %832, <8 x i16>* %837, align 2, !alias.scope !52, !noalias !49
  br label %838

838:                                              ; preds = %816, %819
  %839 = icmp eq i64 %584, %761
  br i1 %839, label %893, label %840

840:                                              ; preds = %838, %755, %736, %732
  %841 = phi i64 [ %584, %755 ], [ %584, %736 ], [ %584, %732 ], [ %762, %838 ]
  %842 = phi i16* [ %733, %755 ], [ %733, %736 ], [ %733, %732 ], [ %764, %838 ]
  %843 = phi i16* [ %734, %755 ], [ %734, %736 ], [ %734, %732 ], [ %766, %838 ]
  %844 = add i64 %841, -1
  %845 = and i64 %841, 7
  %846 = icmp eq i64 %845, 0
  br i1 %846, label %858, label %847

847:                                              ; preds = %840, %847
  %848 = phi i64 [ %855, %847 ], [ %841, %840 ]
  %849 = phi i16* [ %853, %847 ], [ %842, %840 ]
  %850 = phi i16* [ %852, %847 ], [ %843, %840 ]
  %851 = phi i64 [ %856, %847 ], [ %845, %840 ]
  %852 = getelementptr inbounds i16, i16* %850, i64 -1
  %853 = getelementptr inbounds i16, i16* %849, i64 -1
  %854 = load i16, i16* %853, align 2
  store i16 %854, i16* %852, align 2
  %855 = add i64 %848, -1
  %856 = add i64 %851, -1
  %857 = icmp eq i64 %856, 0
  br i1 %857, label %858, label %847, !llvm.loop !55

858:                                              ; preds = %847, %840
  %859 = phi i64 [ %841, %840 ], [ %855, %847 ]
  %860 = phi i16* [ %842, %840 ], [ %853, %847 ]
  %861 = phi i16* [ %843, %840 ], [ %852, %847 ]
  %862 = icmp ult i64 %844, 7
  br i1 %862, label %893, label %863

863:                                              ; preds = %858, %863
  %864 = phi i64 [ %891, %863 ], [ %859, %858 ]
  %865 = phi i16* [ %889, %863 ], [ %860, %858 ]
  %866 = phi i16* [ %888, %863 ], [ %861, %858 ]
  %867 = getelementptr inbounds i16, i16* %866, i64 -1
  %868 = getelementptr inbounds i16, i16* %865, i64 -1
  %869 = load i16, i16* %868, align 2
  store i16 %869, i16* %867, align 2
  %870 = getelementptr inbounds i16, i16* %866, i64 -2
  %871 = getelementptr inbounds i16, i16* %865, i64 -2
  %872 = load i16, i16* %871, align 2
  store i16 %872, i16* %870, align 2
  %873 = getelementptr inbounds i16, i16* %866, i64 -3
  %874 = getelementptr inbounds i16, i16* %865, i64 -3
  %875 = load i16, i16* %874, align 2
  store i16 %875, i16* %873, align 2
  %876 = getelementptr inbounds i16, i16* %866, i64 -4
  %877 = getelementptr inbounds i16, i16* %865, i64 -4
  %878 = load i16, i16* %877, align 2
  store i16 %878, i16* %876, align 2
  %879 = getelementptr inbounds i16, i16* %866, i64 -5
  %880 = getelementptr inbounds i16, i16* %865, i64 -5
  %881 = load i16, i16* %880, align 2
  store i16 %881, i16* %879, align 2
  %882 = getelementptr inbounds i16, i16* %866, i64 -6
  %883 = getelementptr inbounds i16, i16* %865, i64 -6
  %884 = load i16, i16* %883, align 2
  store i16 %884, i16* %882, align 2
  %885 = getelementptr inbounds i16, i16* %866, i64 -7
  %886 = getelementptr inbounds i16, i16* %865, i64 -7
  %887 = load i16, i16* %886, align 2
  store i16 %887, i16* %885, align 2
  %888 = getelementptr inbounds i16, i16* %866, i64 -8
  %889 = getelementptr inbounds i16, i16* %865, i64 -8
  %890 = load i16, i16* %889, align 2
  store i16 %890, i16* %888, align 2
  %891 = add i64 %864, -8
  %892 = icmp eq i64 %891, 0
  br i1 %892, label %893, label %863, !llvm.loop !56

893:                                              ; preds = %858, %863, %697, %702, %838, %677, %583
  %894 = load i8, i8* %27, align 1
  %895 = icmp slt i8 %894, 0
  br i1 %895, label %896, label %897

896:                                              ; preds = %893
  store i64 %584, i64* %12, align 8
  br label %899

897:                                              ; preds = %893
  %898 = trunc i64 %584 to i8
  store i8 %898, i8* %27, align 1
  br label %899

899:                                              ; preds = %897, %896
  %900 = getelementptr inbounds i16, i16* %559, i64 %584
  store i16 0, i16* %900, align 2
  br label %901

901:                                              ; preds = %565, %577, %899, %582, %581, %579
  %902 = call %class.TemplateURL* @_ZNK18TemplateURLService24GetTemplateURLForKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.TemplateURLService* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0) #12
  %903 = icmp eq %class.TemplateURL* %902, null
  %904 = load i8, i8* %541, align 1
  %905 = icmp slt i8 %904, 0
  br i1 %905, label %906, label %909

906:                                              ; preds = %901
  %907 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %908 = load i8*, i8** %907, align 8
  call void @_ZdlPv(i8* %908) #14
  br label %909

909:                                              ; preds = %901, %906
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %532) #12
  br i1 %903, label %910, label %1159

910:                                              ; preds = %909, %188
  %911 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %911) #12
  %912 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %913 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %914 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %914, i8 -86, i64 24, i1 false)
  %915 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %916 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %915, i64 0, i32 1, i32 1
  store i8 4, i8* %916, align 1
  %917 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  store i16 119, i16* %917, align 8
  %918 = getelementptr inbounds i16, i16* %917, i64 1
  store i16 119, i16* %918, align 2
  %919 = getelementptr inbounds i16, i16* %917, i64 2
  store i16 119, i16* %919, align 4
  %920 = getelementptr inbounds i16, i16* %917, i64 3
  store i16 46, i16* %920, align 2
  %921 = load i16*, i16** %912, align 8
  %922 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %923 = bitcast i64* %922 to i16*
  store i16 0, i16* %923, align 8
  %924 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %924) #12
  %925 = load i8, i8* %27, align 1
  %926 = icmp slt i8 %925, 0
  %927 = load i16*, i16** %11, align 8
  %928 = select i1 %926, i16* %927, i16* %31
  %929 = load i64, i64* %12, align 8
  %930 = zext i8 %925 to i64
  %931 = select i1 %926, i64 %929, i64 %930
  %932 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %915, i64 0, i32 1, i32 1
  %933 = load i8, i8* %932, align 1
  %934 = icmp slt i8 %933, 0
  %935 = select i1 %934, i16* %921, i16* %917
  %936 = load i64, i64* %913, align 8
  %937 = zext i8 %933 to i64
  %938 = select i1 %934, i64 %936, i64 %937
  %939 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %928, i64 %931, i16* %935, i64 %938, i32 0) #12
  br i1 %939, label %940, label %942

940:                                              ; preds = %910
  %941 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator.5"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %10, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 4, i64 -1, %"class.std::__1::allocator.5"* dereferenceable(1) %941) #12
  br label %1120

942:                                              ; preds = %910
  %943 = load i8, i8* %27, align 1
  %944 = icmp slt i8 %943, 0
  br i1 %944, label %947, label %945

945:                                              ; preds = %942
  %946 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %924, i8* align 8 %946, i64 24, i1 false) #12
  br label %1126

947:                                              ; preds = %942
  %948 = load i16*, i16** %11, align 8
  %949 = load i64, i64* %12, align 8
  %950 = icmp ult i64 %949, 11
  br i1 %950, label %951, label %956

951:                                              ; preds = %947
  %952 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %953 = trunc i64 %949 to i8
  %954 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %955 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %954, i64 0, i32 1, i32 1
  store i8 %953, i8* %955, align 1
  br label %973

956:                                              ; preds = %947
  %957 = icmp ugt i64 %949, 9223372036854775791
  br i1 %957, label %958, label %960

958:                                              ; preds = %956
  %959 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %959) #13
  unreachable

960:                                              ; preds = %956
  %961 = add nuw nsw i64 %949, 8
  %962 = and i64 %961, -8
  %963 = icmp slt i64 %962, 0
  br i1 %963, label %964, label %965

964:                                              ; preds = %960
  call void @abort() #13
  unreachable

965:                                              ; preds = %960
  %966 = shl i64 %962, 1
  %967 = call i8* @_Znwm(i64 %966) #14
  %968 = bitcast i8* %967 to i16*
  %969 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  store i8* %967, i8** %969, align 8
  %970 = or i64 %962, -9223372036854775808
  %971 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %970, i64* %971, align 8
  %972 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %949, i64* %972, align 8
  br label %973

973:                                              ; preds = %965, %951
  %974 = phi i16* [ %952, %951 ], [ %968, %965 ]
  %975 = add nuw nsw i64 %949, 1
  %976 = add i64 %949, 1
  %977 = icmp ult i64 %976, 16
  br i1 %977, label %1067, label %978

978:                                              ; preds = %973
  %979 = add i64 %949, 1
  %980 = getelementptr i16, i16* %974, i64 %979
  %981 = getelementptr i16, i16* %948, i64 %979
  %982 = icmp ult i16* %974, %981
  %983 = icmp ult i16* %948, %980
  %984 = and i1 %982, %983
  br i1 %984, label %1067, label %985

985:                                              ; preds = %978
  %986 = and i64 %976, -16
  %987 = sub i64 %975, %986
  %988 = getelementptr i16, i16* %948, i64 %986
  %989 = getelementptr i16, i16* %974, i64 %986
  %990 = add i64 %986, -16
  %991 = lshr exact i64 %990, 4
  %992 = add nuw nsw i64 %991, 1
  %993 = and i64 %992, 3
  %994 = icmp ult i64 %990, 48
  br i1 %994, label %1046, label %995

995:                                              ; preds = %985
  %996 = sub nsw i64 %992, %993
  br label %997

997:                                              ; preds = %997, %995
  %998 = phi i64 [ 0, %995 ], [ %1043, %997 ]
  %999 = phi i64 [ %996, %995 ], [ %1044, %997 ]
  %1000 = getelementptr i16, i16* %948, i64 %998
  %1001 = getelementptr i16, i16* %974, i64 %998
  %1002 = bitcast i16* %1000 to <8 x i16>*
  %1003 = load <8 x i16>, <8 x i16>* %1002, align 2, !alias.scope !57
  %1004 = getelementptr i16, i16* %1000, i64 8
  %1005 = bitcast i16* %1004 to <8 x i16>*
  %1006 = load <8 x i16>, <8 x i16>* %1005, align 2, !alias.scope !57
  %1007 = bitcast i16* %1001 to <8 x i16>*
  store <8 x i16> %1003, <8 x i16>* %1007, align 2, !alias.scope !60, !noalias !57
  %1008 = getelementptr i16, i16* %1001, i64 8
  %1009 = bitcast i16* %1008 to <8 x i16>*
  store <8 x i16> %1006, <8 x i16>* %1009, align 2, !alias.scope !60, !noalias !57
  %1010 = or i64 %998, 16
  %1011 = getelementptr i16, i16* %948, i64 %1010
  %1012 = getelementptr i16, i16* %974, i64 %1010
  %1013 = bitcast i16* %1011 to <8 x i16>*
  %1014 = load <8 x i16>, <8 x i16>* %1013, align 2, !alias.scope !57
  %1015 = getelementptr i16, i16* %1011, i64 8
  %1016 = bitcast i16* %1015 to <8 x i16>*
  %1017 = load <8 x i16>, <8 x i16>* %1016, align 2, !alias.scope !57
  %1018 = bitcast i16* %1012 to <8 x i16>*
  store <8 x i16> %1014, <8 x i16>* %1018, align 2, !alias.scope !60, !noalias !57
  %1019 = getelementptr i16, i16* %1012, i64 8
  %1020 = bitcast i16* %1019 to <8 x i16>*
  store <8 x i16> %1017, <8 x i16>* %1020, align 2, !alias.scope !60, !noalias !57
  %1021 = or i64 %998, 32
  %1022 = getelementptr i16, i16* %948, i64 %1021
  %1023 = getelementptr i16, i16* %974, i64 %1021
  %1024 = bitcast i16* %1022 to <8 x i16>*
  %1025 = load <8 x i16>, <8 x i16>* %1024, align 2, !alias.scope !57
  %1026 = getelementptr i16, i16* %1022, i64 8
  %1027 = bitcast i16* %1026 to <8 x i16>*
  %1028 = load <8 x i16>, <8 x i16>* %1027, align 2, !alias.scope !57
  %1029 = bitcast i16* %1023 to <8 x i16>*
  store <8 x i16> %1025, <8 x i16>* %1029, align 2, !alias.scope !60, !noalias !57
  %1030 = getelementptr i16, i16* %1023, i64 8
  %1031 = bitcast i16* %1030 to <8 x i16>*
  store <8 x i16> %1028, <8 x i16>* %1031, align 2, !alias.scope !60, !noalias !57
  %1032 = or i64 %998, 48
  %1033 = getelementptr i16, i16* %948, i64 %1032
  %1034 = getelementptr i16, i16* %974, i64 %1032
  %1035 = bitcast i16* %1033 to <8 x i16>*
  %1036 = load <8 x i16>, <8 x i16>* %1035, align 2, !alias.scope !57
  %1037 = getelementptr i16, i16* %1033, i64 8
  %1038 = bitcast i16* %1037 to <8 x i16>*
  %1039 = load <8 x i16>, <8 x i16>* %1038, align 2, !alias.scope !57
  %1040 = bitcast i16* %1034 to <8 x i16>*
  store <8 x i16> %1036, <8 x i16>* %1040, align 2, !alias.scope !60, !noalias !57
  %1041 = getelementptr i16, i16* %1034, i64 8
  %1042 = bitcast i16* %1041 to <8 x i16>*
  store <8 x i16> %1039, <8 x i16>* %1042, align 2, !alias.scope !60, !noalias !57
  %1043 = add i64 %998, 64
  %1044 = add i64 %999, -4
  %1045 = icmp eq i64 %1044, 0
  br i1 %1045, label %1046, label %997, !llvm.loop !62

1046:                                             ; preds = %997, %985
  %1047 = phi i64 [ 0, %985 ], [ %1043, %997 ]
  %1048 = icmp eq i64 %993, 0
  br i1 %1048, label %1065, label %1049

1049:                                             ; preds = %1046, %1049
  %1050 = phi i64 [ %1062, %1049 ], [ %1047, %1046 ]
  %1051 = phi i64 [ %1063, %1049 ], [ %993, %1046 ]
  %1052 = getelementptr i16, i16* %948, i64 %1050
  %1053 = getelementptr i16, i16* %974, i64 %1050
  %1054 = bitcast i16* %1052 to <8 x i16>*
  %1055 = load <8 x i16>, <8 x i16>* %1054, align 2, !alias.scope !57
  %1056 = getelementptr i16, i16* %1052, i64 8
  %1057 = bitcast i16* %1056 to <8 x i16>*
  %1058 = load <8 x i16>, <8 x i16>* %1057, align 2, !alias.scope !57
  %1059 = bitcast i16* %1053 to <8 x i16>*
  store <8 x i16> %1055, <8 x i16>* %1059, align 2, !alias.scope !60, !noalias !57
  %1060 = getelementptr i16, i16* %1053, i64 8
  %1061 = bitcast i16* %1060 to <8 x i16>*
  store <8 x i16> %1058, <8 x i16>* %1061, align 2, !alias.scope !60, !noalias !57
  %1062 = add i64 %1050, 16
  %1063 = add i64 %1051, -1
  %1064 = icmp eq i64 %1063, 0
  br i1 %1064, label %1065, label %1049, !llvm.loop !63

1065:                                             ; preds = %1049, %1046
  %1066 = icmp eq i64 %976, %986
  br i1 %1066, label %1120, label %1067

1067:                                             ; preds = %1065, %978, %973
  %1068 = phi i64 [ %975, %978 ], [ %975, %973 ], [ %987, %1065 ]
  %1069 = phi i16* [ %948, %978 ], [ %948, %973 ], [ %988, %1065 ]
  %1070 = phi i16* [ %974, %978 ], [ %974, %973 ], [ %989, %1065 ]
  %1071 = add i64 %1068, -1
  %1072 = and i64 %1068, 7
  %1073 = icmp eq i64 %1072, 0
  br i1 %1073, label %1085, label %1074

1074:                                             ; preds = %1067, %1074
  %1075 = phi i64 [ %1080, %1074 ], [ %1068, %1067 ]
  %1076 = phi i16* [ %1082, %1074 ], [ %1069, %1067 ]
  %1077 = phi i16* [ %1081, %1074 ], [ %1070, %1067 ]
  %1078 = phi i64 [ %1083, %1074 ], [ %1072, %1067 ]
  %1079 = load i16, i16* %1076, align 2
  store i16 %1079, i16* %1077, align 2
  %1080 = add i64 %1075, -1
  %1081 = getelementptr inbounds i16, i16* %1077, i64 1
  %1082 = getelementptr inbounds i16, i16* %1076, i64 1
  %1083 = add i64 %1078, -1
  %1084 = icmp eq i64 %1083, 0
  br i1 %1084, label %1085, label %1074, !llvm.loop !64

1085:                                             ; preds = %1074, %1067
  %1086 = phi i64 [ %1068, %1067 ], [ %1080, %1074 ]
  %1087 = phi i16* [ %1069, %1067 ], [ %1082, %1074 ]
  %1088 = phi i16* [ %1070, %1067 ], [ %1081, %1074 ]
  %1089 = icmp ult i64 %1071, 7
  br i1 %1089, label %1120, label %1090

1090:                                             ; preds = %1085, %1090
  %1091 = phi i64 [ %1116, %1090 ], [ %1086, %1085 ]
  %1092 = phi i16* [ %1118, %1090 ], [ %1087, %1085 ]
  %1093 = phi i16* [ %1117, %1090 ], [ %1088, %1085 ]
  %1094 = load i16, i16* %1092, align 2
  store i16 %1094, i16* %1093, align 2
  %1095 = getelementptr inbounds i16, i16* %1093, i64 1
  %1096 = getelementptr inbounds i16, i16* %1092, i64 1
  %1097 = load i16, i16* %1096, align 2
  store i16 %1097, i16* %1095, align 2
  %1098 = getelementptr inbounds i16, i16* %1093, i64 2
  %1099 = getelementptr inbounds i16, i16* %1092, i64 2
  %1100 = load i16, i16* %1099, align 2
  store i16 %1100, i16* %1098, align 2
  %1101 = getelementptr inbounds i16, i16* %1093, i64 3
  %1102 = getelementptr inbounds i16, i16* %1092, i64 3
  %1103 = load i16, i16* %1102, align 2
  store i16 %1103, i16* %1101, align 2
  %1104 = getelementptr inbounds i16, i16* %1093, i64 4
  %1105 = getelementptr inbounds i16, i16* %1092, i64 4
  %1106 = load i16, i16* %1105, align 2
  store i16 %1106, i16* %1104, align 2
  %1107 = getelementptr inbounds i16, i16* %1093, i64 5
  %1108 = getelementptr inbounds i16, i16* %1092, i64 5
  %1109 = load i16, i16* %1108, align 2
  store i16 %1109, i16* %1107, align 2
  %1110 = getelementptr inbounds i16, i16* %1093, i64 6
  %1111 = getelementptr inbounds i16, i16* %1092, i64 6
  %1112 = load i16, i16* %1111, align 2
  store i16 %1112, i16* %1110, align 2
  %1113 = getelementptr inbounds i16, i16* %1093, i64 7
  %1114 = getelementptr inbounds i16, i16* %1092, i64 7
  %1115 = load i16, i16* %1114, align 2
  store i16 %1115, i16* %1113, align 2
  %1116 = add i64 %1091, -8
  %1117 = getelementptr inbounds i16, i16* %1093, i64 8
  %1118 = getelementptr inbounds i16, i16* %1092, i64 8
  %1119 = icmp eq i64 %1116, 0
  br i1 %1119, label %1120, label %1090, !llvm.loop !65

1120:                                             ; preds = %1085, %1090, %1065, %940
  %1121 = load i8, i8* %27, align 1
  %1122 = icmp slt i8 %1121, 0
  br i1 %1122, label %1123, label %1126

1123:                                             ; preds = %1120
  %1124 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  %1125 = load i8*, i8** %1124, align 8
  call void @_ZdlPv(i8* %1125) #14
  br label %1126

1126:                                             ; preds = %1123, %1120, %945
  %1127 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1127, i8* nonnull align 8 %924, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %924) #12
  %1128 = call %class.TemplateURL* @_ZNK18TemplateURLService24GetTemplateURLForKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.TemplateURLService* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0) #12
  %1129 = icmp eq %class.TemplateURL* %1128, null
  br i1 %1129, label %1130, label %1152

1130:                                             ; preds = %1126
  %1131 = load i8, i8* %27, align 1
  %1132 = icmp slt i8 %1131, 0
  %1133 = load i64, i64* %12, align 8
  %1134 = zext i8 %1131 to i64
  %1135 = select i1 %1132, i64 %1133, i64 %1134
  %1136 = icmp eq i64 %1135, 0
  br i1 %1136, label %1152, label %1137

1137:                                             ; preds = %1130
  %1138 = load i16*, i16** %11, align 8
  %1139 = select i1 %1132, i16* %1138, i16* %31
  %1140 = getelementptr inbounds i16, i16* %1139, i64 %1135
  %1141 = getelementptr inbounds i16, i16* %1140, i64 -1
  %1142 = load i16, i16* %1141, align 2
  %1143 = icmp eq i16 %1142, 47
  br i1 %1143, label %1144, label %1152

1144:                                             ; preds = %1137
  br i1 %1132, label %1145, label %1148

1145:                                             ; preds = %1144
  %1146 = add i64 %1133, -1
  store i64 %1146, i64* %12, align 8
  %1147 = getelementptr inbounds i16, i16* %1138, i64 %1146
  store i16 0, i16* %1147, align 2
  br label %1152

1148:                                             ; preds = %1144
  %1149 = add nsw i64 %1134, -1
  %1150 = trunc i64 %1149 to i8
  store i8 %1150, i8* %27, align 1
  %1151 = getelementptr inbounds i16, i16* %31, i64 %1149
  store i16 0, i16* %1151, align 2
  br label %1152

1152:                                             ; preds = %1148, %1145, %1130, %1137, %1126
  %1153 = load i8, i8* %932, align 1
  %1154 = icmp slt i8 %1153, 0
  br i1 %1154, label %1155, label %1158

1155:                                             ; preds = %1152
  %1156 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %1157 = load i8*, i8** %1156, align 8
  call void @_ZdlPv(i8* %1157) #14
  br label %1158

1158:                                             ; preds = %1152, %1155
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %911) #12
  br label %1159

1159:                                             ; preds = %528, %909, %1158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  br label %1160

1160:                                             ; preds = %1159, %3
  ret void
}

declare void @_ZNK11TemplateURL14GetExtensionIdEv(%"class.std::__1::basic_string.7"* sret, %class.TemplateURL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15KeywordProvider19CreateVerbatimMatchERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_RK17AutocompleteInput(%struct.AutocompleteMatch* noalias sret, %class.KeywordProvider*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %class.AutocompleteInput* nocapture readonly dereferenceable(512)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %1, i64 0, i32 3
  %10 = load %class.TemplateURLService*, %class.TemplateURLService** %9, align 8
  tail call void @_ZN18TemplateURLService4LoadEv(%class.TemplateURLService* %10) #12
  %11 = load %class.TemplateURLService*, %class.TemplateURLService** %9, align 8
  %12 = tail call %class.TemplateURL* @_ZN18TemplateURLService24GetTemplateURLForKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.TemplateURLService* %11, %"class.std::__1::basic_string"* dereferenceable(24) %3) #12
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %22 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22)
  %23 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12, !noalias !66
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #12, !noalias !66
  %24 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1, !noalias !66
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i16*, i16** %28, align 8, !noalias !66
  %30 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %31 = select i1 %27, i16* %29, i16* %30
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8, !noalias !66
  %34 = zext i8 %26 to i64
  %35 = select i1 %27, i64 %33, i64 %34
  %36 = call i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %31, i64 %35, i32 1, %"class.std::__1::basic_string"* nonnull %6) #12, !noalias !66
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #12, !alias.scope !66
  call void @_ZN15KeywordProvider21SplitKeywordFromInputERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEbPS6_(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i1 zeroext true, %"class.std::__1::basic_string"* nonnull %8) #12
  %37 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1, !noalias !66
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %5
  %42 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %43 = load i8*, i8** %42, align 8, !noalias !66
  call void @_ZdlPv(i8* %43) #14
  br label %44

44:                                               ; preds = %41, %5
  %45 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  %47 = load i8, i8* %46, align 1, !noalias !66
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %51 = load i8*, i8** %50, align 8, !noalias !66
  call void @_ZdlPv(i8* %51) #14
  br label %52

52:                                               ; preds = %44, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12, !noalias !66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22)
  %53 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %4, i64 0, i32 12
  %54 = load i8, i8* %53, align 2, !range !22
  %55 = icmp ne i8 %54, 0
  call void @_ZN15KeywordProvider23CreateAutocompleteMatchEPK11TemplateURLmRK17AutocompleteInputmRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEbib(%struct.AutocompleteMatch* sret %0, %class.KeywordProvider* %1, %class.TemplateURL* %12, i64 %20, %class.AutocompleteInput* dereferenceable(512) %4, i64 %20, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i1 zeroext %55, i32 0, i1 zeroext false)
  %56 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %52
  %61 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #14
  br label %63

63:                                               ; preds = %52, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15KeywordProvider23CreateAutocompleteMatchEPK11TemplateURLmRK17AutocompleteInputmRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEbib(%struct.AutocompleteMatch* noalias sret, %class.KeywordProvider*, %class.TemplateURL*, i64, %class.AutocompleteInput* nocapture readonly dereferenceable(512), i64, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = zext i1 %7 to i8
  %13 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %2, i64 0, i32 1, i32 0, i32 0
  %14 = load %class.TemplateURLRef*, %class.TemplateURLRef** %13, align 8
  %15 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %2, i64 0, i32 1, i32 0, i32 1
  %16 = load %class.TemplateURLRef*, %class.TemplateURLRef** %15, align 8
  %17 = icmp eq %class.TemplateURLRef* %14, %16
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 729, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #12
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %21 = load %class.TemplateURLRef*, %class.TemplateURLRef** %15, align 8
  br label %22

22:                                               ; preds = %10, %18
  %23 = phi %class.TemplateURLRef* [ %16, %10 ], [ %21, %18 ]
  %24 = getelementptr inbounds %class.TemplateURLRef, %class.TemplateURLRef* %23, i64 -1
  %25 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %1, i64 0, i32 3
  %26 = load %class.TemplateURLService*, %class.TemplateURLService** %25, align 8
  call void @_ZN18TemplateURLService4LoadEv(%class.TemplateURLService* %26) #12
  %27 = load %class.TemplateURLService*, %class.TemplateURLService** %25, align 8
  %28 = getelementptr inbounds %class.TemplateURLService, %class.TemplateURLService* %27, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %class.SearchTermsData*, %class.SearchTermsData** %28, align 8
  %30 = call zeroext i1 @_ZNK14TemplateURLRef19SupportsReplacementERK15SearchTermsData(%class.TemplateURLRef* %24, %class.SearchTermsData* dereferenceable(8) %29) #12
  %31 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %2, i64 0, i32 0, i32 24
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %22
  %37 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %2, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  br label %41

39:                                               ; preds = %22
  %40 = zext i8 %34 to i64
  br label %41

41:                                               ; preds = %36, %39
  %42 = phi i64 [ %38, %36 ], [ %40, %39 ]
  %43 = icmp slt i32 %8, 0
  br i1 %43, label %44, label %65

44:                                               ; preds = %41
  %45 = icmp eq i64 %42, %5
  %46 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %4, i64 0, i32 5
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %4, i64 0, i32 11
  %49 = load i8, i8* %48, align 1, !range !22
  %50 = icmp ne i8 %49, 0
  %51 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %4, i64 0, i32 12
  %52 = load i8, i8* %51, align 2, !range !22
  %53 = icmp ne i8 %52, 0
  br i1 %45, label %62, label %54

54:                                               ; preds = %44
  %55 = icmp uge i64 %5, %3
  %56 = call i32 @_ZN17OmniboxFieldTrial40KeywordScoreForSufficientlyCompleteMatchEv() #12
  %57 = icmp sgt i32 %56, -1
  %58 = and i1 %55, %57
  %59 = icmp eq i32 %47, 3
  %60 = select i1 %59, i32 700, i32 450
  %61 = select i1 %58, i32 %56, i32 %60
  br label %65

62:                                               ; preds = %44
  br i1 %30, label %63, label %65

63:                                               ; preds = %62
  %64 = call i32 @_ZN14SearchProvider36CalculateRelevanceForKeywordVerbatimEN7metrics16OmniboxInputTypeEbb(i32 %47, i1 zeroext %53, i1 zeroext %50) #12
  br label %65

65:                                               ; preds = %63, %62, %54, %41
  %66 = phi i32 [ %8, %41 ], [ %64, %63 ], [ %61, %54 ], [ 1500, %62 ]
  %67 = bitcast %struct.AutocompleteMatch* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 -86, i64 1600, i1 false)
  %68 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %1, i64 0, i32 0
  %69 = select i1 %30, i32 13, i32 4
  call void @_ZN17AutocompleteMatchC1EP20AutocompleteProvideribN21AutocompleteMatchType4TypeE(%struct.AutocompleteMatch* %0, %class.AutocompleteProvider* %68, i32 %66, i1 zeroext %9, i32 %69) #12
  %70 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 10
  store i8 %12, i8* %70, align 8
  %71 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 4
  %72 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %71, %"class.std::__1::basic_string"* dereferenceable(24) %31)
  %73 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %75 to i64
  %80 = select i1 %76, i64 %78, i64 %79
  %81 = icmp ne i64 %80, 0
  %82 = or i1 %30, %81
  %83 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br i1 %82, label %84, label %121

84:                                               ; preds = %65
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %83, i64 0, i32 1, i32 1
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = zext i8 %86 to i64
  br label %97

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = and i64 %92, 9223372036854775807
  %94 = add nsw i64 %93, -1
  %95 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  br label %97

97:                                               ; preds = %90, %88
  %98 = phi i64 [ 10, %88 ], [ %94, %90 ]
  %99 = phi i64 [ %89, %88 ], [ %96, %90 ]
  %100 = icmp eq i64 %99, %98
  br i1 %100, label %101, label %104

101:                                              ; preds = %97
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %71, i64 %98, i64 1, i64 %98, i64 %98, i64 0, i64 0) #12
  %102 = load i8, i8* %85, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %109, label %105

104:                                              ; preds = %97
  br i1 %87, label %109, label %105

105:                                              ; preds = %104, %101
  %106 = bitcast %"class.std::__1::basic_string"* %71 to i16*
  %107 = trunc i64 %99 to i8
  %108 = add i8 %107, 1
  store i8 %108, i8* %85, align 1
  br label %114

109:                                              ; preds = %104, %101
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i16*, i16** %110, align 8
  %112 = add i64 %99, 1
  %113 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %112, i64* %113, align 8
  br label %114

114:                                              ; preds = %105, %109
  %115 = phi i16* [ %106, %105 ], [ %111, %109 ]
  %116 = getelementptr inbounds i16, i16* %115, i64 %99
  store i16 32, i16* %116, align 2
  %117 = getelementptr inbounds i16, i16* %116, i64 1
  store i16 0, i16* %117, align 2
  %118 = load i8, i8* %74, align 1
  %119 = load i64, i64* %77, align 8
  %120 = zext i8 %118 to i64
  br label %121

121:                                              ; preds = %65, %114
  %122 = phi i64 [ %120, %114 ], [ %79, %65 ]
  %123 = phi i64 [ %119, %114 ], [ %78, %65 ]
  %124 = phi i8 [ %118, %114 ], [ %75, %65 ]
  %125 = icmp slt i8 %124, 0
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i16*, i16** %126, align 8
  %128 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %129 = select i1 %125, i16* %127, i16* %128
  %130 = select i1 %125, i64 %123, i64 %122
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %83, i64 0, i32 1, i32 1
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %141

134:                                              ; preds = %121
  %135 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %136, 9223372036854775807
  %138 = add nsw i64 %137, -1
  %139 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  br label %143

141:                                              ; preds = %121
  %142 = zext i8 %132 to i64
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i64 [ %138, %134 ], [ 10, %141 ]
  %145 = phi i64 [ %140, %134 ], [ %142, %141 ]
  %146 = sub i64 %144, %145
  %147 = icmp ult i64 %146, %130
  br i1 %147, label %309, label %148

148:                                              ; preds = %143
  %149 = icmp eq i64 %130, 0
  br i1 %149, label %312, label %150

150:                                              ; preds = %148
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i16*, i16** %151, align 8
  %153 = bitcast %"class.std::__1::basic_string"* %71 to i16*
  %154 = select i1 %133, i16* %152, i16* %153
  %155 = getelementptr inbounds i16, i16* %154, i64 %145
  %156 = icmp ult i64 %130, 16
  br i1 %156, label %246, label %157

157:                                              ; preds = %150
  %158 = add i64 %130, %145
  %159 = getelementptr i16, i16* %154, i64 %158
  %160 = getelementptr i16, i16* %129, i64 %130
  %161 = icmp ult i16* %155, %160
  %162 = icmp ult i16* %129, %159
  %163 = and i1 %161, %162
  br i1 %163, label %246, label %164

164:                                              ; preds = %157
  %165 = and i64 %130, -16
  %166 = sub i64 %130, %165
  %167 = getelementptr i16, i16* %129, i64 %165
  %168 = getelementptr i16, i16* %155, i64 %165
  %169 = add i64 %165, -16
  %170 = lshr exact i64 %169, 4
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 3
  %173 = icmp ult i64 %169, 48
  br i1 %173, label %225, label %174

174:                                              ; preds = %164
  %175 = sub nsw i64 %171, %172
  br label %176

176:                                              ; preds = %176, %174
  %177 = phi i64 [ 0, %174 ], [ %222, %176 ]
  %178 = phi i64 [ %175, %174 ], [ %223, %176 ]
  %179 = getelementptr i16, i16* %129, i64 %177
  %180 = getelementptr i16, i16* %155, i64 %177
  %181 = bitcast i16* %179 to <8 x i16>*
  %182 = load <8 x i16>, <8 x i16>* %181, align 2, !alias.scope !69
  %183 = getelementptr i16, i16* %179, i64 8
  %184 = bitcast i16* %183 to <8 x i16>*
  %185 = load <8 x i16>, <8 x i16>* %184, align 2, !alias.scope !69
  %186 = bitcast i16* %180 to <8 x i16>*
  store <8 x i16> %182, <8 x i16>* %186, align 2, !alias.scope !72, !noalias !69
  %187 = getelementptr i16, i16* %180, i64 8
  %188 = bitcast i16* %187 to <8 x i16>*
  store <8 x i16> %185, <8 x i16>* %188, align 2, !alias.scope !72, !noalias !69
  %189 = or i64 %177, 16
  %190 = getelementptr i16, i16* %129, i64 %189
  %191 = getelementptr i16, i16* %155, i64 %189
  %192 = bitcast i16* %190 to <8 x i16>*
  %193 = load <8 x i16>, <8 x i16>* %192, align 2, !alias.scope !69
  %194 = getelementptr i16, i16* %190, i64 8
  %195 = bitcast i16* %194 to <8 x i16>*
  %196 = load <8 x i16>, <8 x i16>* %195, align 2, !alias.scope !69
  %197 = bitcast i16* %191 to <8 x i16>*
  store <8 x i16> %193, <8 x i16>* %197, align 2, !alias.scope !72, !noalias !69
  %198 = getelementptr i16, i16* %191, i64 8
  %199 = bitcast i16* %198 to <8 x i16>*
  store <8 x i16> %196, <8 x i16>* %199, align 2, !alias.scope !72, !noalias !69
  %200 = or i64 %177, 32
  %201 = getelementptr i16, i16* %129, i64 %200
  %202 = getelementptr i16, i16* %155, i64 %200
  %203 = bitcast i16* %201 to <8 x i16>*
  %204 = load <8 x i16>, <8 x i16>* %203, align 2, !alias.scope !69
  %205 = getelementptr i16, i16* %201, i64 8
  %206 = bitcast i16* %205 to <8 x i16>*
  %207 = load <8 x i16>, <8 x i16>* %206, align 2, !alias.scope !69
  %208 = bitcast i16* %202 to <8 x i16>*
  store <8 x i16> %204, <8 x i16>* %208, align 2, !alias.scope !72, !noalias !69
  %209 = getelementptr i16, i16* %202, i64 8
  %210 = bitcast i16* %209 to <8 x i16>*
  store <8 x i16> %207, <8 x i16>* %210, align 2, !alias.scope !72, !noalias !69
  %211 = or i64 %177, 48
  %212 = getelementptr i16, i16* %129, i64 %211
  %213 = getelementptr i16, i16* %155, i64 %211
  %214 = bitcast i16* %212 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2, !alias.scope !69
  %216 = getelementptr i16, i16* %212, i64 8
  %217 = bitcast i16* %216 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !69
  %219 = bitcast i16* %213 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %219, align 2, !alias.scope !72, !noalias !69
  %220 = getelementptr i16, i16* %213, i64 8
  %221 = bitcast i16* %220 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %221, align 2, !alias.scope !72, !noalias !69
  %222 = add i64 %177, 64
  %223 = add i64 %178, -4
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %176, !llvm.loop !74

225:                                              ; preds = %176, %164
  %226 = phi i64 [ 0, %164 ], [ %222, %176 ]
  %227 = icmp eq i64 %172, 0
  br i1 %227, label %244, label %228

228:                                              ; preds = %225, %228
  %229 = phi i64 [ %241, %228 ], [ %226, %225 ]
  %230 = phi i64 [ %242, %228 ], [ %172, %225 ]
  %231 = getelementptr i16, i16* %129, i64 %229
  %232 = getelementptr i16, i16* %155, i64 %229
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2, !alias.scope !69
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2, !alias.scope !69
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2, !alias.scope !72, !noalias !69
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2, !alias.scope !72, !noalias !69
  %241 = add i64 %229, 16
  %242 = add i64 %230, -1
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %228, !llvm.loop !75

244:                                              ; preds = %228, %225
  %245 = icmp eq i64 %130, %165
  br i1 %245, label %299, label %246

246:                                              ; preds = %244, %157, %150
  %247 = phi i64 [ %130, %157 ], [ %130, %150 ], [ %166, %244 ]
  %248 = phi i16* [ %129, %157 ], [ %129, %150 ], [ %167, %244 ]
  %249 = phi i16* [ %155, %157 ], [ %155, %150 ], [ %168, %244 ]
  %250 = add i64 %247, -1
  %251 = and i64 %247, 7
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %264, label %253

253:                                              ; preds = %246, %253
  %254 = phi i64 [ %259, %253 ], [ %247, %246 ]
  %255 = phi i16* [ %261, %253 ], [ %248, %246 ]
  %256 = phi i16* [ %260, %253 ], [ %249, %246 ]
  %257 = phi i64 [ %262, %253 ], [ %251, %246 ]
  %258 = load i16, i16* %255, align 2
  store i16 %258, i16* %256, align 2
  %259 = add i64 %254, -1
  %260 = getelementptr inbounds i16, i16* %256, i64 1
  %261 = getelementptr inbounds i16, i16* %255, i64 1
  %262 = add i64 %257, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %253, !llvm.loop !76

264:                                              ; preds = %253, %246
  %265 = phi i64 [ %247, %246 ], [ %259, %253 ]
  %266 = phi i16* [ %248, %246 ], [ %261, %253 ]
  %267 = phi i16* [ %249, %246 ], [ %260, %253 ]
  %268 = icmp ult i64 %250, 7
  br i1 %268, label %299, label %269

269:                                              ; preds = %264, %269
  %270 = phi i64 [ %295, %269 ], [ %265, %264 ]
  %271 = phi i16* [ %297, %269 ], [ %266, %264 ]
  %272 = phi i16* [ %296, %269 ], [ %267, %264 ]
  %273 = load i16, i16* %271, align 2
  store i16 %273, i16* %272, align 2
  %274 = getelementptr inbounds i16, i16* %272, i64 1
  %275 = getelementptr inbounds i16, i16* %271, i64 1
  %276 = load i16, i16* %275, align 2
  store i16 %276, i16* %274, align 2
  %277 = getelementptr inbounds i16, i16* %272, i64 2
  %278 = getelementptr inbounds i16, i16* %271, i64 2
  %279 = load i16, i16* %278, align 2
  store i16 %279, i16* %277, align 2
  %280 = getelementptr inbounds i16, i16* %272, i64 3
  %281 = getelementptr inbounds i16, i16* %271, i64 3
  %282 = load i16, i16* %281, align 2
  store i16 %282, i16* %280, align 2
  %283 = getelementptr inbounds i16, i16* %272, i64 4
  %284 = getelementptr inbounds i16, i16* %271, i64 4
  %285 = load i16, i16* %284, align 2
  store i16 %285, i16* %283, align 2
  %286 = getelementptr inbounds i16, i16* %272, i64 5
  %287 = getelementptr inbounds i16, i16* %271, i64 5
  %288 = load i16, i16* %287, align 2
  store i16 %288, i16* %286, align 2
  %289 = getelementptr inbounds i16, i16* %272, i64 6
  %290 = getelementptr inbounds i16, i16* %271, i64 6
  %291 = load i16, i16* %290, align 2
  store i16 %291, i16* %289, align 2
  %292 = getelementptr inbounds i16, i16* %272, i64 7
  %293 = getelementptr inbounds i16, i16* %271, i64 7
  %294 = load i16, i16* %293, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %270, -8
  %296 = getelementptr inbounds i16, i16* %272, i64 8
  %297 = getelementptr inbounds i16, i16* %271, i64 8
  %298 = icmp eq i64 %295, 0
  br i1 %298, label %299, label %269, !llvm.loop !77

299:                                              ; preds = %264, %269, %244
  %300 = add i64 %145, %130
  %301 = load i8, i8* %131, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %305

303:                                              ; preds = %299
  %304 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %300, i64* %304, align 8
  br label %307

305:                                              ; preds = %299
  %306 = trunc i64 %300 to i8
  store i8 %306, i8* %131, align 1
  br label %307

307:                                              ; preds = %305, %303
  %308 = getelementptr inbounds i16, i16* %154, i64 %300
  store i16 0, i16* %308, align 2
  br label %312

309:                                              ; preds = %143
  %310 = add i64 %145, %130
  %311 = sub i64 %310, %144
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %71, i64 %144, i64 %311, i64 %145, i64 %145, i64 0, i64 %130, i16* %129) #12
  br label %312

312:                                              ; preds = %148, %307, %309
  call void @_ZNK15KeywordProvider20FillInURLAndContentsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPK11TemplateURLP17AutocompleteMatch(%class.KeywordProvider* %1, %"class.std::__1::basic_string"* dereferenceable(24) %6, %class.TemplateURL* %2, %struct.AutocompleteMatch* %0)
  %313 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 32
  %314 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %313, %"class.std::__1::basic_string"* dereferenceable(24) %31)
  %315 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 33
  store i8 1, i8* %315, align 8
  %316 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 27
  store i32 9, i32* %316, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15KeywordProvider11DeleteMatchERK17AutocompleteMatch(%class.KeywordProvider*, %struct.AutocompleteMatch* dereferenceable(1600)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string.7", align 8
  %8 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %1, i64 0, i32 17
  %9 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %9, align 8
  %11 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %12 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %11, align 8
  %13 = icmp eq %struct.AutocompleteMatch* %10, %12
  br i1 %13, label %107, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %1, i64 0, i32 32
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %1, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::basic_string"* %15 to i16*
  %26 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %1, i64 0, i32 4
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::basic_string"* %26 to i16*
  %32 = icmp eq i64 %23, 0
  %33 = load i16*, i16** %24, align 8
  %34 = select i1 %19, i16* %33, i16* %25
  %35 = load i8, i8* %28, align 1
  %36 = icmp slt i8 %35, 0
  %37 = load i64, i64* %29, align 8
  %38 = zext i8 %35 to i64
  %39 = select i1 %36, i64 %37, i64 %38
  %40 = load i16*, i16** %30, align 8
  %41 = select i1 %36, i16* %40, i16* %31
  %42 = icmp eq i64 %39, 0
  br label %43

43:                                               ; preds = %102, %14
  %44 = phi %struct.AutocompleteMatch* [ %10, %14 ], [ %103, %102 ]
  %45 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %44, i64 0, i32 32
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %44, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %48 to i64
  %53 = select i1 %49, i64 %51, i64 %52
  %54 = icmp eq i64 %53, %23
  br i1 %54, label %55, label %102

55:                                               ; preds = %43
  br i1 %32, label %73, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i16*, i16** %57, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %45 to i16*
  %60 = select i1 %49, i16* %58, i16* %59
  br label %61

61:                                               ; preds = %68, %56
  %62 = phi i64 [ %69, %68 ], [ %23, %56 ]
  %63 = phi i16* [ %71, %68 ], [ %34, %56 ]
  %64 = phi i16* [ %70, %68 ], [ %60, %56 ]
  %65 = load i16, i16* %64, align 2
  %66 = load i16, i16* %63, align 2
  %67 = icmp eq i16 %66, %65
  br i1 %67, label %68, label %102

68:                                               ; preds = %61
  %69 = add i64 %62, -1
  %70 = getelementptr inbounds i16, i16* %64, i64 1
  %71 = getelementptr inbounds i16, i16* %63, i64 1
  %72 = icmp eq i64 %69, 0
  br i1 %72, label %73, label %61

73:                                               ; preds = %68, %55
  %74 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %44, i64 0, i32 4
  %75 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %44, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = zext i8 %77 to i64
  %82 = select i1 %78, i64 %80, i64 %81
  %83 = icmp eq i64 %82, %39
  br i1 %83, label %84, label %102

84:                                               ; preds = %73
  br i1 %42, label %107, label %85

85:                                               ; preds = %84
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i16*, i16** %86, align 8
  %88 = bitcast %"class.std::__1::basic_string"* %74 to i16*
  %89 = select i1 %78, i16* %87, i16* %88
  br label %90

90:                                               ; preds = %97, %85
  %91 = phi i64 [ %98, %97 ], [ %39, %85 ]
  %92 = phi i16* [ %100, %97 ], [ %41, %85 ]
  %93 = phi i16* [ %99, %97 ], [ %89, %85 ]
  %94 = load i16, i16* %93, align 2
  %95 = load i16, i16* %92, align 2
  %96 = icmp eq i16 %95, %94
  br i1 %96, label %97, label %102

97:                                               ; preds = %90
  %98 = add i64 %91, -1
  %99 = getelementptr inbounds i16, i16* %93, i64 1
  %100 = getelementptr inbounds i16, i16* %92, i64 1
  %101 = icmp eq i64 %98, 0
  br i1 %101, label %107, label %90

102:                                              ; preds = %61, %90, %73, %43
  %103 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %44, i64 1
  %104 = icmp eq %struct.AutocompleteMatch* %103, %12
  br i1 %104, label %105, label %43

105:                                              ; preds = %102
  %106 = ptrtoint %struct.AutocompleteMatch* %12 to i64
  br label %215

107:                                              ; preds = %84, %97, %2
  %108 = phi %struct.AutocompleteMatch* [ %10, %2 ], [ %44, %97 ], [ %44, %84 ]
  %109 = ptrtoint %struct.AutocompleteMatch* %108 to i64
  %110 = icmp eq %struct.AutocompleteMatch* %108, %12
  br i1 %110, label %215, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %108, i64 1
  %113 = icmp eq %struct.AutocompleteMatch* %112, %12
  br i1 %113, label %215, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %1, i64 0, i32 32
  %116 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %116, i64 0, i32 1, i32 1
  %118 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %1, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = bitcast %"class.std::__1::basic_string"* %115 to i16*
  %121 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %1, i64 0, i32 4
  %122 = bitcast %"class.std::__1::basic_string"* %121 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %122, i64 0, i32 1, i32 1
  %124 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = bitcast %"class.std::__1::basic_string"* %121 to i16*
  br label %127

127:                                              ; preds = %209, %114
  %128 = phi %struct.AutocompleteMatch* [ %112, %114 ], [ %211, %209 ]
  %129 = phi %struct.AutocompleteMatch* [ %108, %114 ], [ %128, %209 ]
  %130 = phi i64 [ %109, %114 ], [ %210, %209 ]
  %131 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %129, i64 1, i32 32
  %132 = bitcast %"class.std::__1::basic_string"* %131 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %132, i64 0, i32 1, i32 1
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  %136 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %129, i64 1, i32 32, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = zext i8 %134 to i64
  %139 = select i1 %135, i64 %137, i64 %138
  %140 = load i8, i8* %117, align 1
  %141 = icmp slt i8 %140, 0
  %142 = load i64, i64* %118, align 8
  %143 = zext i8 %140 to i64
  %144 = select i1 %141, i64 %142, i64 %143
  %145 = icmp eq i64 %139, %144
  br i1 %145, label %146, label %204

146:                                              ; preds = %127
  %147 = icmp eq i64 %139, 0
  br i1 %147, label %167, label %148

148:                                              ; preds = %146
  %149 = load i16*, i16** %119, align 8
  %150 = select i1 %141, i16* %149, i16* %120
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i16*, i16** %151, align 8
  %153 = bitcast %"class.std::__1::basic_string"* %131 to i16*
  %154 = select i1 %135, i16* %152, i16* %153
  br label %155

155:                                              ; preds = %162, %148
  %156 = phi i64 [ %163, %162 ], [ %139, %148 ]
  %157 = phi i16* [ %165, %162 ], [ %150, %148 ]
  %158 = phi i16* [ %164, %162 ], [ %154, %148 ]
  %159 = load i16, i16* %158, align 2
  %160 = load i16, i16* %157, align 2
  %161 = icmp eq i16 %160, %159
  br i1 %161, label %162, label %204

162:                                              ; preds = %155
  %163 = add i64 %156, -1
  %164 = getelementptr inbounds i16, i16* %158, i64 1
  %165 = getelementptr inbounds i16, i16* %157, i64 1
  %166 = icmp eq i64 %163, 0
  br i1 %166, label %167, label %155

167:                                              ; preds = %162, %146
  %168 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %129, i64 1, i32 4
  %169 = bitcast %"class.std::__1::basic_string"* %168 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %169, i64 0, i32 1, i32 1
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  %173 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %129, i64 1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %174 = load i64, i64* %173, align 8
  %175 = zext i8 %171 to i64
  %176 = select i1 %172, i64 %174, i64 %175
  %177 = load i8, i8* %123, align 1
  %178 = icmp slt i8 %177, 0
  %179 = load i64, i64* %124, align 8
  %180 = zext i8 %177 to i64
  %181 = select i1 %178, i64 %179, i64 %180
  %182 = icmp eq i64 %176, %181
  br i1 %182, label %183, label %204

183:                                              ; preds = %167
  %184 = icmp eq i64 %176, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %183
  %186 = load i16*, i16** %125, align 8
  %187 = select i1 %178, i16* %186, i16* %126
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i16*, i16** %188, align 8
  %190 = bitcast %"class.std::__1::basic_string"* %168 to i16*
  %191 = select i1 %172, i16* %189, i16* %190
  br label %192

192:                                              ; preds = %199, %185
  %193 = phi i64 [ %200, %199 ], [ %176, %185 ]
  %194 = phi i16* [ %202, %199 ], [ %187, %185 ]
  %195 = phi i16* [ %201, %199 ], [ %191, %185 ]
  %196 = load i16, i16* %195, align 2
  %197 = load i16, i16* %194, align 2
  %198 = icmp eq i16 %197, %196
  br i1 %198, label %199, label %204

199:                                              ; preds = %192
  %200 = add i64 %193, -1
  %201 = getelementptr inbounds i16, i16* %195, i64 1
  %202 = getelementptr inbounds i16, i16* %194, i64 1
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %209, label %192

204:                                              ; preds = %155, %192, %167, %127
  %205 = inttoptr i64 %130 to %struct.AutocompleteMatch*
  %206 = tail call dereferenceable(1600) %struct.AutocompleteMatch* @_ZN17AutocompleteMatchaSEOS_(%struct.AutocompleteMatch* %205, %struct.AutocompleteMatch* dereferenceable(1600) %128) #12
  %207 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %205, i64 1
  %208 = ptrtoint %struct.AutocompleteMatch* %207 to i64
  br label %209

209:                                              ; preds = %199, %204, %183
  %210 = phi i64 [ %208, %204 ], [ %130, %183 ], [ %130, %199 ]
  %211 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %128, i64 1
  %212 = icmp eq %struct.AutocompleteMatch* %211, %12
  br i1 %212, label %213, label %127

213:                                              ; preds = %209
  %214 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %11, align 8
  br label %215

215:                                              ; preds = %213, %111, %107, %105
  %216 = phi %struct.AutocompleteMatch* [ %12, %107 ], [ %12, %105 ], [ %12, %111 ], [ %214, %213 ]
  %217 = phi i64 [ %109, %107 ], [ %106, %105 ], [ %109, %111 ], [ %210, %213 ]
  %218 = inttoptr i64 %217 to %struct.AutocompleteMatch*
  %219 = icmp eq %struct.AutocompleteMatch* %216, %218
  br i1 %219, label %225, label %220

220:                                              ; preds = %215, %220
  %221 = phi %struct.AutocompleteMatch* [ %222, %220 ], [ %216, %215 ]
  %222 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %221, i64 -1
  tail call void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch* %222) #12
  %223 = icmp eq %struct.AutocompleteMatch* %222, %218
  br i1 %223, label %224, label %220

224:                                              ; preds = %220
  store %struct.AutocompleteMatch* %218, %struct.AutocompleteMatch** %11, align 8
  br label %225

225:                                              ; preds = %215, %224
  %226 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #12
  %227 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %226, i8 0, i64 24, i1 false) #12
  %228 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 0, i64 24, i1 false) #12
  %229 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 3
  %230 = load %class.TemplateURLService*, %class.TemplateURLService** %229, align 8
  tail call void @_ZN18TemplateURLService4LoadEv(%class.TemplateURLService* %230) #12
  %231 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 2, i32 5
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %290, label %234

234:                                              ; preds = %225
  %235 = load %class.TemplateURLService*, %class.TemplateURLService** %229, align 8
  %236 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #12
  %237 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %237) #12
  %238 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 2, i32 0
  call void @_ZN15KeywordProvider21SplitKeywordFromInputERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEbPS6_(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_string"* dereferenceable(24) %238, i1 zeroext true, %"class.std::__1::basic_string"* nonnull %6) #12
  call void @_ZN15KeywordProvider21CleanUserInputKeywordEPK18TemplateURLServiceRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %class.TemplateURLService* %235, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %239 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %239, i64 0, i32 1, i32 1
  %241 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %226, i8* nonnull align 8 %236, i64 24, i1 false) #12
  %245 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %246 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %245, i64 0, i32 1, i32 1
  store i8 0, i8* %246, align 1
  %247 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  store i16 0, i16* %247, align 8
  br i1 %244, label %248, label %251

248:                                              ; preds = %234
  %249 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %250 = load i8*, i8** %249, align 8
  call void @_ZdlPv(i8* %250) #14
  br label %251

251:                                              ; preds = %248, %234
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %237) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #12
  %252 = load i8, i8* %240, align 1
  %253 = icmp slt i8 %252, 0
  %254 = load i64, i64* %227, align 8
  %255 = zext i8 %252 to i64
  %256 = select i1 %253, i64 %254, i64 %255
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %290, label %258

258:                                              ; preds = %251
  %259 = load %class.TemplateURLService*, %class.TemplateURLService** %229, align 8
  call void @_ZN18TemplateURLService4LoadEv(%class.TemplateURLService* %259) #12
  %260 = load %class.TemplateURLService*, %class.TemplateURLService** %229, align 8
  %261 = call %class.TemplateURL* @_ZN18TemplateURLService24GetTemplateURLForKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.TemplateURLService* %260, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #12
  %262 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %261, i64 0, i32 7
  %263 = load i32, i32* %262, align 8
  %264 = icmp eq i32 %263, 3
  br i1 %264, label %265, label %290

265:                                              ; preds = %258
  %266 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %267 = load %class.KeywordExtensionsDelegate*, %class.KeywordExtensionsDelegate** %266, align 8
  %268 = icmp eq %class.KeywordExtensionsDelegate* %267, null
  br i1 %268, label %290, label %269

269:                                              ; preds = %265
  %270 = bitcast %"class.std::__1::basic_string.7"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %270) #12
  call void @_ZNK11TemplateURL14GetExtensionIdEv(%"class.std::__1::basic_string.7"* nonnull sret %7, %class.TemplateURL* %261) #12
  %271 = bitcast %class.KeywordExtensionsDelegate* %267 to i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)***
  %272 = load i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)**, i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)*** %271, align 8
  %273 = getelementptr inbounds i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)*, i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)** %272, i64 3
  %274 = load i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)*, i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)** %273, align 8
  %275 = call zeroext i1 %274(%class.KeywordExtensionsDelegate* nonnull %267, %"class.std::__1::basic_string.7"* nonnull dereferenceable(24) %7) #12
  %276 = bitcast %"class.std::__1::basic_string.7"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %277 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %276, i64 0, i32 1, i32 0
  %278 = load i8, i8* %277, align 1
  %279 = icmp slt i8 %278, 0
  br i1 %279, label %280, label %283

280:                                              ; preds = %269
  %281 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load i8*, i8** %281, align 8
  call void @_ZdlPv(i8* %282) #14
  br label %283

283:                                              ; preds = %280, %269
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %270) #12
  br i1 %275, label %284, label %290

284:                                              ; preds = %283
  %285 = load %class.KeywordExtensionsDelegate*, %class.KeywordExtensionsDelegate** %266, align 8
  %286 = bitcast %class.KeywordExtensionsDelegate* %285 to void (%class.KeywordExtensionsDelegate*, %class.TemplateURL*, %"class.std::__1::basic_string"*)***
  %287 = load void (%class.KeywordExtensionsDelegate*, %class.TemplateURL*, %"class.std::__1::basic_string"*)**, void (%class.KeywordExtensionsDelegate*, %class.TemplateURL*, %"class.std::__1::basic_string"*)*** %286, align 8
  %288 = getelementptr inbounds void (%class.KeywordExtensionsDelegate*, %class.TemplateURL*, %"class.std::__1::basic_string"*)*, void (%class.KeywordExtensionsDelegate*, %class.TemplateURL*, %"class.std::__1::basic_string"*)** %287, i64 7
  %289 = load void (%class.KeywordExtensionsDelegate*, %class.TemplateURL*, %"class.std::__1::basic_string"*)*, void (%class.KeywordExtensionsDelegate*, %class.TemplateURL*, %"class.std::__1::basic_string"*)** %288, align 8
  call void %289(%class.KeywordExtensionsDelegate* %285, %class.TemplateURL* %261, %"class.std::__1::basic_string"* dereferenceable(24) %8) #12
  br label %290

290:                                              ; preds = %265, %251, %258, %225, %283, %284
  %291 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %292 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %291, i64 0, i32 1, i32 1
  %293 = load i8, i8* %292, align 1
  %294 = icmp slt i8 %293, 0
  br i1 %294, label %295, label %298

295:                                              ; preds = %290
  %296 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %297 = load i8*, i8** %296, align 8
  call void @_ZdlPv(i8* %297) #14
  br label %298

298:                                              ; preds = %290, %295
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #12
  %299 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %300 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %299, i64 0, i32 1, i32 1
  %301 = load i8, i8* %300, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %306

303:                                              ; preds = %298
  %304 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %305 = load i8*, i8** %304, align 8
  call void @_ZdlPv(i8* %305) #14
  br label %306

306:                                              ; preds = %298, %303
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15KeywordProvider5StartERK17AutocompleteInputb(%class.KeywordProvider*, %class.AutocompleteInput* dereferenceable(512), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::vector.307", align 8
  %10 = alloca %"class.std::__1::basic_string.7", align 8
  %11 = alloca %struct.AutocompleteMatch, align 8
  %12 = alloca %struct.AutocompleteMatch, align 8
  %13 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 90, i32 0), align 16
  %14 = and i8 %13, 25
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %22, label %16, !prof !78

16:                                               ; preds = %3
  %17 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %18 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %20 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %20, i64* %19, align 8
  %21 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 90, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %17, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %22

22:                                               ; preds = %3, %16
  %23 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 90, i32 0), %16 ]
  %24 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), %16 ]
  %25 = phi i64 [ -6148914691236517206, %3 ], [ %21, %16 ]
  %26 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %class.KeywordExtensionsDelegate*, %class.KeywordExtensionsDelegate** %26, align 8
  %28 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 0, i32 3
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %28, i64 0, i32 0, i32 0
  %30 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %29, align 8
  %31 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %32 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %31, align 8
  %33 = icmp eq %struct.AutocompleteMatch* %32, %30
  br i1 %33, label %38, label %34

34:                                               ; preds = %22, %34
  %35 = phi %struct.AutocompleteMatch* [ %36, %34 ], [ %32, %22 ]
  %36 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %35, i64 -1
  call void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch* %36) #12
  %37 = icmp eq %struct.AutocompleteMatch* %36, %30
  br i1 %37, label %38, label %34

38:                                               ; preds = %34, %22
  store %struct.AutocompleteMatch* %30, %struct.AutocompleteMatch** %31, align 8
  br i1 %2, label %48, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 0, i32 4
  store i8 1, i8* %40, align 8
  %41 = load %class.KeywordExtensionsDelegate*, %class.KeywordExtensionsDelegate** %26, align 8
  %42 = icmp eq %class.KeywordExtensionsDelegate* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = bitcast %class.KeywordExtensionsDelegate* %41 to void (%class.KeywordExtensionsDelegate*)***
  %45 = load void (%class.KeywordExtensionsDelegate*)**, void (%class.KeywordExtensionsDelegate*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.KeywordExtensionsDelegate*)*, void (%class.KeywordExtensionsDelegate*)** %45, i64 2
  %47 = load void (%class.KeywordExtensionsDelegate*)*, void (%class.KeywordExtensionsDelegate*)** %46, align 8
  call void %47(%class.KeywordExtensionsDelegate* nonnull %41) #12
  br label %48

48:                                               ; preds = %39, %43, %38
  %49 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 15
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %527

52:                                               ; preds = %48
  %53 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 3
  %54 = load %class.TemplateURLService*, %class.TemplateURLService** %53, align 8
  call void @_ZN18TemplateURLService4LoadEv(%class.TemplateURLService* %54) #12
  %55 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #12
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 24, i1 false) #12
  %58 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #12
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #12
  %60 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 5
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %509, label %63

63:                                               ; preds = %52
  %64 = load %class.TemplateURLService*, %class.TemplateURLService** %53, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #12
  %66 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #12
  %67 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 0
  call void @_ZN15KeywordProvider21SplitKeywordFromInputERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEbPS6_(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_string"* dereferenceable(24) %67, i1 zeroext true, %"class.std::__1::basic_string"* nonnull %8) #12
  call void @_ZN15KeywordProvider21CleanUserInputKeywordEPK18TemplateURLServiceRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %4, %class.TemplateURLService* %64, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #12
  %68 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %63
  %73 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %72, %63
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* nonnull align 8 %65, i64 24, i1 false) #12
  %76 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %76, i64 0, i32 1, i32 1
  store i8 0, i8* %77, align 1
  %78 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  store i16 0, i16* %78, align 8
  %79 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %79, i64 0, i32 1, i32 1
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %75
  %84 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %85 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %85) #14
  br label %86

86:                                               ; preds = %83, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #12
  %87 = load i8, i8* %69, align 1
  %88 = icmp slt i8 %87, 0
  %89 = load i64, i64* %57, align 8
  %90 = zext i8 %87 to i64
  %91 = select i1 %88, i64 %89, i64 %90
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %509, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 2
  %95 = call dereferenceable(512) %class.AutocompleteInput* @_ZN17AutocompleteInputaSERKS_(%class.AutocompleteInput* %94, %class.AutocompleteInput* dereferenceable(512) %1)
  %96 = bitcast %"class.std::__1::vector.307"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #12
  %97 = getelementptr inbounds %"class.std::__1::vector.307", %"class.std::__1::vector.307"* %9, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.std::__1::vector.307", %"class.std::__1::vector.307"* %9, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 0, i64 24, i1 false) #12
  %99 = load %class.TemplateURLService*, %class.TemplateURLService** %53, align 8
  %100 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %100, i64 0, i32 1, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  %104 = load i64, i64* %59, align 8
  %105 = zext i8 %102 to i64
  %106 = select i1 %103, i64 %104, i64 %105
  %107 = icmp ne i64 %106, 0
  call void @_ZN18TemplateURLService19AddMatchingKeywordsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEbPNS0_6vectorINS0_4pairIP11TemplateURLmEENS4_ISD_EEEE(%class.TemplateURLService* %99, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i1 zeroext %107, %"class.std::__1::vector.307"* nonnull %9) #12
  %108 = bitcast %"class.std::__1::vector.307"* %9 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = load %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"** %98, align 8
  %111 = inttoptr i64 %109 to %"struct.std::__1::pair.309"*
  %112 = icmp eq %"struct.std::__1::pair.309"* %110, %111
  br i1 %112, label %500, label %113

113:                                              ; preds = %93
  %114 = bitcast %"class.std::__1::basic_string.7"* %10 to i8*
  %115 = bitcast %"class.std::__1::basic_string.7"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 12
  br label %122

119:                                              ; preds = %302
  %120 = load %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"** %97, align 8
  %121 = icmp eq %"struct.std::__1::pair.309"* %120, %303
  br i1 %121, label %500, label %307

122:                                              ; preds = %113, %302
  %123 = phi %"struct.std::__1::pair.309"* [ %111, %113 ], [ %305, %302 ]
  %124 = phi i64 [ %109, %113 ], [ %304, %302 ]
  %125 = ptrtoint %"struct.std::__1::pair.309"* %123 to i64
  %126 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %123, i64 0, i32 0
  %127 = load %class.TemplateURL*, %class.TemplateURL** %126, align 8
  %128 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %127, i64 0, i32 7
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 3
  br i1 %130, label %131, label %214

131:                                              ; preds = %122
  %132 = load %class.KeywordExtensionsDelegate*, %class.KeywordExtensionsDelegate** %26, align 8
  %133 = icmp eq %class.KeywordExtensionsDelegate* %132, null
  br i1 %133, label %214, label %134

134:                                              ; preds = %131
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #12
  call void @_ZNK11TemplateURL14GetExtensionIdEv(%"class.std::__1::basic_string.7"* nonnull sret %10, %class.TemplateURL* %127) #12
  %135 = bitcast %class.KeywordExtensionsDelegate* %132 to i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)***
  %136 = load i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)**, i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)*** %135, align 8
  %137 = getelementptr inbounds i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)*, i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)** %136, i64 3
  %138 = load i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)*, i1 (%class.KeywordExtensionsDelegate*, %"class.std::__1::basic_string.7"*)** %137, align 8
  %139 = call zeroext i1 %138(%class.KeywordExtensionsDelegate* nonnull %132, %"class.std::__1::basic_string.7"* nonnull dereferenceable(24) %10) #12
  %140 = load i8, i8* %116, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %134
  %143 = load i8*, i8** %117, align 8
  call void @_ZdlPv(i8* %143) #14
  br label %144

144:                                              ; preds = %142, %134
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #12
  br i1 %139, label %214, label %145

145:                                              ; preds = %144
  %146 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %123, i64 1
  %147 = load %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"** %98, align 8
  %148 = icmp eq %"struct.std::__1::pair.309"* %146, %147
  br i1 %148, label %212, label %149

149:                                              ; preds = %145
  %150 = getelementptr %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %147, i64 -2
  %151 = ptrtoint %"struct.std::__1::pair.309"* %150 to i64
  %152 = sub i64 %151, %125
  %153 = lshr i64 %152, 4
  %154 = add nuw nsw i64 %153, 1
  %155 = and i64 %154, 3
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %171, label %157

157:                                              ; preds = %149, %157
  %158 = phi %"struct.std::__1::pair.309"* [ %168, %157 ], [ %123, %149 ]
  %159 = phi %"struct.std::__1::pair.309"* [ %167, %157 ], [ %146, %149 ]
  %160 = phi i64 [ %169, %157 ], [ %155, %149 ]
  %161 = bitcast %"struct.std::__1::pair.309"* %159 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"struct.std::__1::pair.309"* %158 to i64*
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %159, i64 0, i32 1
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %158, i64 0, i32 1
  store i64 %165, i64* %166, align 8
  %167 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %159, i64 1
  %168 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %158, i64 1
  %169 = add i64 %160, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %157, !llvm.loop !79

171:                                              ; preds = %157, %149
  %172 = phi %"struct.std::__1::pair.309"* [ undef, %149 ], [ %168, %157 ]
  %173 = phi %"struct.std::__1::pair.309"* [ %123, %149 ], [ %168, %157 ]
  %174 = phi %"struct.std::__1::pair.309"* [ %146, %149 ], [ %167, %157 ]
  %175 = icmp ult i64 %152, 48
  br i1 %175, label %212, label %176

176:                                              ; preds = %171, %176
  %177 = phi %"struct.std::__1::pair.309"* [ %210, %176 ], [ %173, %171 ]
  %178 = phi %"struct.std::__1::pair.309"* [ %209, %176 ], [ %174, %171 ]
  %179 = bitcast %"struct.std::__1::pair.309"* %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"struct.std::__1::pair.309"* %177 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %178, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %177, i64 0, i32 1
  store i64 %183, i64* %184, align 8
  %185 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %178, i64 1
  %186 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %177, i64 1
  %187 = bitcast %"struct.std::__1::pair.309"* %185 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"struct.std::__1::pair.309"* %186 to i64*
  store i64 %188, i64* %189, align 8
  %190 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %178, i64 1, i32 1
  %191 = load i64, i64* %190, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %177, i64 1, i32 1
  store i64 %191, i64* %192, align 8
  %193 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %178, i64 2
  %194 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %177, i64 2
  %195 = bitcast %"struct.std::__1::pair.309"* %193 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"struct.std::__1::pair.309"* %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %178, i64 2, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %177, i64 2, i32 1
  store i64 %199, i64* %200, align 8
  %201 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %178, i64 3
  %202 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %177, i64 3
  %203 = bitcast %"struct.std::__1::pair.309"* %201 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = bitcast %"struct.std::__1::pair.309"* %202 to i64*
  store i64 %204, i64* %205, align 8
  %206 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %178, i64 3, i32 1
  %207 = load i64, i64* %206, align 8
  %208 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %177, i64 3, i32 1
  store i64 %207, i64* %208, align 8
  %209 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %178, i64 4
  %210 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %177, i64 4
  %211 = icmp eq %"struct.std::__1::pair.309"* %209, %147
  br i1 %211, label %212, label %176

212:                                              ; preds = %171, %176, %145
  %213 = phi %"struct.std::__1::pair.309"* [ %123, %145 ], [ %172, %171 ], [ %210, %176 ]
  store %"struct.std::__1::pair.309"* %213, %"struct.std::__1::pair.309"** %98, align 8
  br label %302

214:                                              ; preds = %144, %131, %122
  %215 = load %class.TemplateURLService*, %class.TemplateURLService** %53, align 8
  %216 = getelementptr inbounds %class.TemplateURLService, %class.TemplateURLService* %215, i64 0, i32 4, i32 0, i32 0, i32 0
  %217 = load %class.SearchTermsData*, %class.SearchTermsData** %216, align 8
  %218 = call zeroext i1 @_ZNK11TemplateURL19SupportsReplacementERK15SearchTermsData(%class.TemplateURL* %127, %class.SearchTermsData* dereferenceable(8) %217) #12
  br i1 %218, label %219, label %298

219:                                              ; preds = %214
  %220 = load i8, i8* %101, align 1
  %221 = icmp slt i8 %220, 0
  %222 = load i64, i64* %59, align 8
  %223 = zext i8 %220 to i64
  %224 = select i1 %221, i64 %222, i64 %223
  %225 = icmp eq i64 %224, 0
  %226 = load i8, i8* %118, align 2
  %227 = icmp eq i8 %226, 0
  %228 = and i1 %225, %227
  br i1 %228, label %229, label %298

229:                                              ; preds = %219
  %230 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %123, i64 1
  %231 = load %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"** %98, align 8
  %232 = icmp eq %"struct.std::__1::pair.309"* %230, %231
  br i1 %232, label %296, label %233

233:                                              ; preds = %229
  %234 = getelementptr %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %231, i64 -2
  %235 = ptrtoint %"struct.std::__1::pair.309"* %234 to i64
  %236 = sub i64 %235, %125
  %237 = lshr i64 %236, 4
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %255, label %241

241:                                              ; preds = %233, %241
  %242 = phi %"struct.std::__1::pair.309"* [ %252, %241 ], [ %123, %233 ]
  %243 = phi %"struct.std::__1::pair.309"* [ %251, %241 ], [ %230, %233 ]
  %244 = phi i64 [ %253, %241 ], [ %239, %233 ]
  %245 = bitcast %"struct.std::__1::pair.309"* %243 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"struct.std::__1::pair.309"* %242 to i64*
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %243, i64 0, i32 1
  %249 = load i64, i64* %248, align 8
  %250 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %242, i64 0, i32 1
  store i64 %249, i64* %250, align 8
  %251 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %243, i64 1
  %252 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %242, i64 1
  %253 = add i64 %244, -1
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %241, !llvm.loop !80

255:                                              ; preds = %241, %233
  %256 = phi %"struct.std::__1::pair.309"* [ undef, %233 ], [ %252, %241 ]
  %257 = phi %"struct.std::__1::pair.309"* [ %123, %233 ], [ %252, %241 ]
  %258 = phi %"struct.std::__1::pair.309"* [ %230, %233 ], [ %251, %241 ]
  %259 = icmp ult i64 %236, 48
  br i1 %259, label %296, label %260

260:                                              ; preds = %255, %260
  %261 = phi %"struct.std::__1::pair.309"* [ %294, %260 ], [ %257, %255 ]
  %262 = phi %"struct.std::__1::pair.309"* [ %293, %260 ], [ %258, %255 ]
  %263 = bitcast %"struct.std::__1::pair.309"* %262 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = bitcast %"struct.std::__1::pair.309"* %261 to i64*
  store i64 %264, i64* %265, align 8
  %266 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %262, i64 0, i32 1
  %267 = load i64, i64* %266, align 8
  %268 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %261, i64 0, i32 1
  store i64 %267, i64* %268, align 8
  %269 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %262, i64 1
  %270 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %261, i64 1
  %271 = bitcast %"struct.std::__1::pair.309"* %269 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = bitcast %"struct.std::__1::pair.309"* %270 to i64*
  store i64 %272, i64* %273, align 8
  %274 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %262, i64 1, i32 1
  %275 = load i64, i64* %274, align 8
  %276 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %261, i64 1, i32 1
  store i64 %275, i64* %276, align 8
  %277 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %262, i64 2
  %278 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %261, i64 2
  %279 = bitcast %"struct.std::__1::pair.309"* %277 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = bitcast %"struct.std::__1::pair.309"* %278 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %262, i64 2, i32 1
  %283 = load i64, i64* %282, align 8
  %284 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %261, i64 2, i32 1
  store i64 %283, i64* %284, align 8
  %285 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %262, i64 3
  %286 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %261, i64 3
  %287 = bitcast %"struct.std::__1::pair.309"* %285 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = bitcast %"struct.std::__1::pair.309"* %286 to i64*
  store i64 %288, i64* %289, align 8
  %290 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %262, i64 3, i32 1
  %291 = load i64, i64* %290, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %261, i64 3, i32 1
  store i64 %291, i64* %292, align 8
  %293 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %262, i64 4
  %294 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %261, i64 4
  %295 = icmp eq %"struct.std::__1::pair.309"* %293, %231
  br i1 %295, label %296, label %260

296:                                              ; preds = %255, %260, %229
  %297 = phi %"struct.std::__1::pair.309"* [ %123, %229 ], [ %256, %255 ], [ %294, %260 ]
  store %"struct.std::__1::pair.309"* %297, %"struct.std::__1::pair.309"** %98, align 8
  br label %302

298:                                              ; preds = %219, %214
  %299 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %123, i64 1
  %300 = ptrtoint %"struct.std::__1::pair.309"* %299 to i64
  %301 = load %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"** %98, align 8
  br label %302

302:                                              ; preds = %298, %296, %212
  %303 = phi %"struct.std::__1::pair.309"* [ %213, %212 ], [ %301, %298 ], [ %297, %296 ]
  %304 = phi i64 [ %124, %212 ], [ %300, %298 ], [ %124, %296 ]
  %305 = inttoptr i64 %304 to %"struct.std::__1::pair.309"*
  %306 = icmp eq %"struct.std::__1::pair.309"* %303, %305
  br i1 %306, label %119, label %122

307:                                              ; preds = %119
  call fastcc void @_ZNSt3__16__sortIRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEvT0_S9_T_(%"struct.std::__1::pair.309"* %120, %"struct.std::__1::pair.309"* %303) #12
  %308 = load %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"** %97, align 8
  %309 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %308, i64 0, i32 0
  %310 = load %class.TemplateURL*, %class.TemplateURL** %309, align 8
  %311 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %310, i64 0, i32 0, i32 24
  %312 = bitcast %"class.std::__1::basic_string"* %311 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %313 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %312, i64 0, i32 1, i32 1
  %314 = load i8, i8* %313, align 1
  %315 = icmp slt i8 %314, 0
  %316 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %310, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %317 = load i64, i64* %316, align 8
  %318 = zext i8 %314 to i64
  %319 = select i1 %315, i64 %317, i64 %318
  %320 = load i8, i8* %69, align 1
  %321 = icmp slt i8 %320, 0
  %322 = load i64, i64* %57, align 8
  %323 = zext i8 %320 to i64
  %324 = select i1 %321, i64 %322, i64 %323
  %325 = icmp eq i64 %319, %324
  br i1 %325, label %326, label %397

326:                                              ; preds = %307
  %327 = icmp eq i64 %319, 0
  br i1 %327, label %348, label %328

328:                                              ; preds = %326
  %329 = load i16*, i16** %56, align 8
  %330 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %331 = select i1 %321, i16* %329, i16* %330
  %332 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %311, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load i16*, i16** %332, align 8
  %334 = bitcast %"class.std::__1::basic_string"* %311 to i16*
  %335 = select i1 %315, i16* %333, i16* %334
  br label %336

336:                                              ; preds = %343, %328
  %337 = phi i64 [ %344, %343 ], [ %319, %328 ]
  %338 = phi i16* [ %346, %343 ], [ %331, %328 ]
  %339 = phi i16* [ %345, %343 ], [ %335, %328 ]
  %340 = load i16, i16* %339, align 2
  %341 = load i16, i16* %338, align 2
  %342 = icmp eq i16 %341, %340
  br i1 %342, label %343, label %397

343:                                              ; preds = %336
  %344 = add i64 %337, -1
  %345 = getelementptr inbounds i16, i16* %339, i64 1
  %346 = getelementptr inbounds i16, i16* %338, i64 1
  %347 = icmp eq i64 %344, 0
  br i1 %347, label %348, label %336

348:                                              ; preds = %343, %326
  %349 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %308, i64 0, i32 1
  %350 = load i64, i64* %349, align 8
  %351 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %310, i64 0, i32 7
  %352 = load i32, i32* %351, align 8
  %353 = icmp eq i32 %352, 3
  %354 = load i8, i8* %101, align 1
  %355 = icmp slt i8 %354, 0
  %356 = load i64, i64* %59, align 8
  %357 = zext i8 %354 to i64
  %358 = select i1 %355, i64 %356, i64 %357
  %359 = icmp eq i64 %358, 0
  %360 = or i1 %353, %359
  br i1 %360, label %361, label %497

361:                                              ; preds = %348
  %362 = bitcast %struct.AutocompleteMatch* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1600, i8* nonnull %362) #12
  %363 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 12
  %364 = load i8, i8* %363, align 2, !range !22
  %365 = icmp eq i8 %364, 0
  br i1 %365, label %366, label %372

366:                                              ; preds = %361
  %367 = load %class.TemplateURLService*, %class.TemplateURLService** %53, align 8
  %368 = getelementptr inbounds %class.TemplateURLService, %class.TemplateURLService* %367, i64 0, i32 4, i32 0, i32 0, i32 0
  %369 = load %class.SearchTermsData*, %class.SearchTermsData** %368, align 8
  %370 = call zeroext i1 @_ZNK11TemplateURL19SupportsReplacementERK15SearchTermsData(%class.TemplateURL* %310, %class.SearchTermsData* dereferenceable(8) %369) #12
  %371 = xor i1 %370, true
  br label %372

372:                                              ; preds = %361, %366
  %373 = phi i1 [ true, %361 ], [ %371, %366 ]
  call void @_ZN15KeywordProvider23CreateAutocompleteMatchEPK11TemplateURLmRK17AutocompleteInputmRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEbib(%struct.AutocompleteMatch* nonnull sret %11, %class.KeywordProvider* %0, %class.TemplateURL* %310, i64 %350, %class.AutocompleteInput* dereferenceable(512) %1, i64 %319, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i1 zeroext %373, i32 -1, i1 zeroext false)
  %374 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %31, align 8
  %375 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %376 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %375, align 8
  %377 = icmp ult %struct.AutocompleteMatch* %374, %376
  br i1 %377, label %378, label %382

378:                                              ; preds = %372
  call void @_ZN17AutocompleteMatchC1EOS_(%struct.AutocompleteMatch* %374, %struct.AutocompleteMatch* nonnull dereferenceable(1600) %11) #12
  %379 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %374, i64 1
  %380 = ptrtoint %struct.AutocompleteMatch* %379 to i64
  %381 = bitcast %struct.AutocompleteMatch** %31 to i64*
  store i64 %380, i64* %381, align 8
  br label %383

382:                                              ; preds = %372
  call void @_ZNSt3__16vectorI17AutocompleteMatchNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector"* %28, %struct.AutocompleteMatch* nonnull dereferenceable(1600) %11) #12
  br label %383

383:                                              ; preds = %378, %382
  call void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 1600, i8* nonnull %362) #12
  br i1 %353, label %384, label %497

384:                                              ; preds = %383
  %385 = load %class.KeywordExtensionsDelegate*, %class.KeywordExtensionsDelegate** %26, align 8
  %386 = icmp ne %class.KeywordExtensionsDelegate* %385, null
  %387 = load i8, i8* %363, align 2
  %388 = icmp ne i8 %387, 0
  %389 = and i1 %386, %388
  br i1 %389, label %390, label %497

390:                                              ; preds = %384
  %391 = bitcast %class.KeywordExtensionsDelegate* %385 to i1 (%class.KeywordExtensionsDelegate*, %class.AutocompleteInput*, i1, %class.TemplateURL*, %"class.std::__1::basic_string"*)***
  %392 = load i1 (%class.KeywordExtensionsDelegate*, %class.AutocompleteInput*, i1, %class.TemplateURL*, %"class.std::__1::basic_string"*)**, i1 (%class.KeywordExtensionsDelegate*, %class.AutocompleteInput*, i1, %class.TemplateURL*, %"class.std::__1::basic_string"*)*** %391, align 8
  %393 = getelementptr inbounds i1 (%class.KeywordExtensionsDelegate*, %class.AutocompleteInput*, i1, %class.TemplateURL*, %"class.std::__1::basic_string"*)*, i1 (%class.KeywordExtensionsDelegate*, %class.AutocompleteInput*, i1, %class.TemplateURL*, %"class.std::__1::basic_string"*)** %392, i64 4
  %394 = load i1 (%class.KeywordExtensionsDelegate*, %class.AutocompleteInput*, i1, %class.TemplateURL*, %"class.std::__1::basic_string"*)*, i1 (%class.KeywordExtensionsDelegate*, %class.AutocompleteInput*, i1, %class.TemplateURL*, %"class.std::__1::basic_string"*)** %393, align 8
  %395 = call zeroext i1 %394(%class.KeywordExtensionsDelegate* nonnull %385, %class.AutocompleteInput* dereferenceable(512) %1, i1 zeroext %2, %class.TemplateURL* %310, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #12
  %396 = select i1 %395, %class.KeywordExtensionsDelegate* null, %class.KeywordExtensionsDelegate* %27
  br label %497

397:                                              ; preds = %336, %307
  %398 = bitcast %struct.AutocompleteMatch** %31 to i64*
  %399 = load %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"** %98, align 8
  %400 = icmp eq %"struct.std::__1::pair.309"* %308, %399
  br i1 %400, label %497, label %401

401:                                              ; preds = %397
  %402 = bitcast %"class.std::__1::vector"* %28 to i64*
  %403 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 0, i32 2
  %404 = bitcast %struct.AutocompleteMatch* %12 to i8*
  %405 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 0, i32 3, i32 0, i32 2, i32 0, i32 0
  br label %406

406:                                              ; preds = %401, %493
  %407 = phi %"struct.std::__1::pair.309"* [ %399, %401 ], [ %494, %493 ]
  %408 = phi %"struct.std::__1::pair.309"* [ %308, %401 ], [ %495, %493 ]
  %409 = load i64, i64* %398, align 8
  %410 = load i64, i64* %402, align 8
  %411 = sub i64 %409, %410
  %412 = sdiv exact i64 %411, 1600
  %413 = load i64, i64* %403, align 8
  %414 = icmp ult i64 %412, %413
  %415 = inttoptr i64 %410 to %struct.AutocompleteMatch*
  %416 = inttoptr i64 %409 to %struct.AutocompleteMatch*
  br i1 %414, label %417, label %497

417:                                              ; preds = %406
  %418 = icmp eq %struct.AutocompleteMatch* %415, %416
  br i1 %418, label %469, label %419

419:                                              ; preds = %417
  %420 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %408, i64 0, i32 0
  %421 = load %class.TemplateURL*, %class.TemplateURL** %420, align 8
  %422 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %421, i64 0, i32 0, i32 24
  %423 = bitcast %"class.std::__1::basic_string"* %422 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %424 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %423, i64 0, i32 1, i32 1
  %425 = load i8, i8* %424, align 1
  %426 = icmp slt i8 %425, 0
  %427 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %421, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %428 = load i64, i64* %427, align 8
  %429 = zext i8 %425 to i64
  %430 = select i1 %426, i64 %428, i64 %429
  %431 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %422, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = bitcast %"class.std::__1::basic_string"* %422 to i16*
  %433 = icmp eq i64 %430, 0
  br label %434

434:                                              ; preds = %466, %419
  %435 = phi %struct.AutocompleteMatch* [ %415, %419 ], [ %467, %466 ]
  %436 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %435, i64 0, i32 32
  %437 = bitcast %"class.std::__1::basic_string"* %436 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %438 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %437, i64 0, i32 1, i32 1
  %439 = load i8, i8* %438, align 1
  %440 = icmp slt i8 %439, 0
  %441 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %435, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %442 = load i64, i64* %441, align 8
  %443 = zext i8 %439 to i64
  %444 = select i1 %440, i64 %442, i64 %443
  %445 = icmp eq i64 %444, %430
  br i1 %445, label %446, label %466

446:                                              ; preds = %434
  br i1 %433, label %469, label %447

447:                                              ; preds = %446
  %448 = load i16*, i16** %431, align 8
  %449 = select i1 %426, i16* %448, i16* %432
  %450 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %436, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %451 = load i16*, i16** %450, align 8
  %452 = bitcast %"class.std::__1::basic_string"* %436 to i16*
  %453 = select i1 %440, i16* %451, i16* %452
  br label %454

454:                                              ; preds = %461, %447
  %455 = phi i64 [ %462, %461 ], [ %430, %447 ]
  %456 = phi i16* [ %464, %461 ], [ %449, %447 ]
  %457 = phi i16* [ %463, %461 ], [ %453, %447 ]
  %458 = load i16, i16* %457, align 2
  %459 = load i16, i16* %456, align 2
  %460 = icmp eq i16 %459, %458
  br i1 %460, label %461, label %466

461:                                              ; preds = %454
  %462 = add i64 %455, -1
  %463 = getelementptr inbounds i16, i16* %457, i64 1
  %464 = getelementptr inbounds i16, i16* %456, i64 1
  %465 = icmp eq i64 %462, 0
  br i1 %465, label %469, label %454

466:                                              ; preds = %454, %434
  %467 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %435, i64 1
  %468 = icmp eq %struct.AutocompleteMatch* %467, %416
  br i1 %468, label %475, label %434

469:                                              ; preds = %446, %461, %417
  %470 = phi %struct.AutocompleteMatch* [ %415, %417 ], [ %435, %461 ], [ %435, %446 ]
  %471 = icmp eq %struct.AutocompleteMatch* %470, %416
  br i1 %471, label %472, label %493

472:                                              ; preds = %469
  %473 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %408, i64 0, i32 0
  %474 = load %class.TemplateURL*, %class.TemplateURL** %473, align 8
  br label %475

475:                                              ; preds = %466, %472
  %476 = phi %class.TemplateURL* [ %474, %472 ], [ %421, %466 ]
  call void @llvm.lifetime.start.p0i8(i64 1600, i8* nonnull %404) #12
  %477 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %408, i64 0, i32 1
  %478 = load i64, i64* %477, align 8
  %479 = load i8, i8* %69, align 1
  %480 = icmp slt i8 %479, 0
  %481 = load i64, i64* %57, align 8
  %482 = zext i8 %479 to i64
  %483 = select i1 %480, i64 %481, i64 %482
  call void @_ZN15KeywordProvider23CreateAutocompleteMatchEPK11TemplateURLmRK17AutocompleteInputmRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEbib(%struct.AutocompleteMatch* nonnull sret %12, %class.KeywordProvider* %0, %class.TemplateURL* %476, i64 %478, %class.AutocompleteInput* dereferenceable(512) %1, i64 %483, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i1 zeroext false, i32 -1, i1 zeroext false)
  %484 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %31, align 8
  %485 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %405, align 8
  %486 = icmp ult %struct.AutocompleteMatch* %484, %485
  br i1 %486, label %487, label %490

487:                                              ; preds = %475
  call void @_ZN17AutocompleteMatchC1EOS_(%struct.AutocompleteMatch* %484, %struct.AutocompleteMatch* nonnull dereferenceable(1600) %12) #12
  %488 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %484, i64 1
  %489 = ptrtoint %struct.AutocompleteMatch* %488 to i64
  store i64 %489, i64* %398, align 8
  br label %491

490:                                              ; preds = %475
  call void @_ZNSt3__16vectorI17AutocompleteMatchNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector"* %28, %struct.AutocompleteMatch* nonnull dereferenceable(1600) %12) #12
  br label %491

491:                                              ; preds = %487, %490
  call void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 1600, i8* nonnull %404) #12
  %492 = load %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"** %98, align 8
  br label %493

493:                                              ; preds = %491, %469
  %494 = phi %"struct.std::__1::pair.309"* [ %492, %491 ], [ %407, %469 ]
  %495 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %408, i64 1
  %496 = icmp eq %"struct.std::__1::pair.309"* %495, %494
  br i1 %496, label %497, label %406

497:                                              ; preds = %406, %493, %397, %390, %384, %383, %348
  %498 = phi %class.KeywordExtensionsDelegate* [ %27, %348 ], [ %27, %383 ], [ %27, %384 ], [ %396, %390 ], [ %27, %397 ], [ %27, %493 ], [ %27, %406 ]
  %499 = load %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"** %97, align 8
  br label %500

500:                                              ; preds = %93, %497, %119
  %501 = phi %"struct.std::__1::pair.309"* [ %499, %497 ], [ %120, %119 ], [ %110, %93 ]
  %502 = phi %class.KeywordExtensionsDelegate* [ %498, %497 ], [ %27, %119 ], [ %27, %93 ]
  %503 = icmp eq %"struct.std::__1::pair.309"* %501, null
  br i1 %503, label %508, label %504

504:                                              ; preds = %500
  %505 = ptrtoint %"struct.std::__1::pair.309"* %501 to i64
  %506 = bitcast %"struct.std::__1::pair.309"** %98 to i64*
  store i64 %505, i64* %506, align 8
  %507 = bitcast %"struct.std::__1::pair.309"* %501 to i8*
  call void @_ZdlPv(i8* %507) #14
  br label %508

508:                                              ; preds = %500, %504
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #12
  br label %509

509:                                              ; preds = %86, %52, %508
  %510 = phi %class.KeywordExtensionsDelegate* [ %502, %508 ], [ %27, %86 ], [ %27, %52 ]
  %511 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %512 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %511, i64 0, i32 1, i32 1
  %513 = load i8, i8* %512, align 1
  %514 = icmp slt i8 %513, 0
  br i1 %514, label %515, label %518

515:                                              ; preds = %509
  %516 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %517 = load i8*, i8** %516, align 8
  call void @_ZdlPv(i8* %517) #14
  br label %518

518:                                              ; preds = %509, %515
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #12
  %519 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %520 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %519, i64 0, i32 1, i32 1
  %521 = load i8, i8* %520, align 1
  %522 = icmp slt i8 %521, 0
  br i1 %522, label %523, label %526

523:                                              ; preds = %518
  %524 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %525 = load i8*, i8** %524, align 8
  call void @_ZdlPv(i8* %525) #14
  br label %526

526:                                              ; preds = %518, %523
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #12
  br label %527

527:                                              ; preds = %48, %526
  %528 = phi %class.KeywordExtensionsDelegate* [ %510, %526 ], [ %27, %48 ]
  %529 = icmp eq %class.KeywordExtensionsDelegate* %528, null
  br i1 %529, label %535, label %530

530:                                              ; preds = %527
  %531 = bitcast %class.KeywordExtensionsDelegate* %528 to void (%class.KeywordExtensionsDelegate*)***
  %532 = load void (%class.KeywordExtensionsDelegate*)**, void (%class.KeywordExtensionsDelegate*)*** %531, align 8
  %533 = getelementptr inbounds void (%class.KeywordExtensionsDelegate*)*, void (%class.KeywordExtensionsDelegate*)** %532, i64 6
  %534 = load void (%class.KeywordExtensionsDelegate*)*, void (%class.KeywordExtensionsDelegate*)** %533, align 8
  call void %534(%class.KeywordExtensionsDelegate* nonnull %528) #12
  br label %535

535:                                              ; preds = %527, %530
  %536 = icmp eq i8* %23, null
  br i1 %536, label %541, label %537

537:                                              ; preds = %535
  %538 = load i8, i8* %23, align 1
  %539 = icmp eq i8 %538, 0
  br i1 %539, label %541, label %540

540:                                              ; preds = %537
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %23, i8* %24, i64 %25) #12
  br label %541

541:                                              ; preds = %535, %537, %540
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(512) %class.AutocompleteInput* @_ZN17AutocompleteInputaSERKS_(%class.AutocompleteInput*, %class.AutocompleteInput* dereferenceable(512)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 0
  %5 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %4)
  %6 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 1
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 2
  %10 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 2
  %11 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %9, %class.GURL* dereferenceable(120) %10) #12
  %12 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 3
  %13 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 3
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"* dereferenceable(24) %13)
  %15 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 4
  %16 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 4
  %17 = bitcast i32* %16 to i64*
  %18 = bitcast i32* %15 to i64*
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6
  %21 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 6
  %22 = tail call dereferenceable(80) %"struct.url::Parsed"* @_ZN3url6ParsedaSERKS0_(%"struct.url::Parsed"* %20, %"struct.url::Parsed"* dereferenceable(80) %21) #12
  %23 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 7
  %24 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 7
  %25 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %23, %"class.std::__1::basic_string"* dereferenceable(24) %24)
  %26 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 8
  %27 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 8
  %28 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %26, %class.GURL* dereferenceable(120) %27) #12
  %29 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 9
  %30 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 9
  %31 = icmp eq %class.AutocompleteInput* %0, %1
  br i1 %31, label %61, label %32

32:                                               ; preds = %2
  %33 = bitcast %"class.std::__1::basic_string.7"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = bitcast %"class.std::__1::basic_string.7"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %36, label %51, label %41

41:                                               ; preds = %32
  br i1 %40, label %45, label %42

42:                                               ; preds = %41
  %43 = bitcast %"class.std::__1::basic_string.7"* %29 to i8*
  %44 = bitcast %"class.std::__1::basic_string.7"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #12
  br label %64

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string.7"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.7"* %29, i8* %47, i64 %49) #12
  br label %64

51:                                               ; preds = %32
  %52 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.std::__1::basic_string.7"* %30 to i8*
  %57 = zext i8 %39 to i64
  %58 = select i1 %40, i8* %53, i8* %56
  %59 = select i1 %40, i64 %55, i64 %57
  %60 = tail call dereferenceable(24) %"class.std::__1::basic_string.7"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.7"* %29, i8* %58, i64 %59) #12
  br label %64

61:                                               ; preds = %2
  %62 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 10
  %63 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 16, i1 false)
  br label %72

64:                                               ; preds = %42, %45, %51
  %65 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 10
  %66 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 16, i1 false)
  %67 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 16
  %68 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 16, i32 0, i32 0
  %69 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %68, align 8
  %70 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 16, i32 0, i32 1
  %71 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %70, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.19"* %67, %"class.std::__1::basic_string"* %69, %"class.std::__1::basic_string"* %71) #12
  br label %72

72:                                               ; preds = %61, %64
  %73 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17
  %74 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %75 = load i8, i8* %74, align 8, !range !22
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %127, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8, i8* %79, align 8, !range !22
  %81 = icmp eq i8 %80, 0
  %82 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %81, label %113, label %83

83:                                               ; preds = %77
  br i1 %31, label %141, label %84

84:                                               ; preds = %83
  %85 = bitcast %"class.std::__1::basic_string.7"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  %89 = bitcast %"class.std::__1::basic_string.7"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %88, label %103, label %93

93:                                               ; preds = %84
  br i1 %92, label %97, label %94

94:                                               ; preds = %93
  %95 = bitcast %"class.std::__1::basic_string.7"* %82 to i8*
  %96 = bitcast %"class.std::__1::basic_string.7"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 24, i1 false) #12
  br label %141

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = tail call dereferenceable(24) %"class.std::__1::basic_string.7"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.7"* %82, i8* %99, i64 %101) #12
  br label %141

103:                                              ; preds = %84
  %104 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.std::__1::basic_string.7"* %78 to i8*
  %109 = zext i8 %91 to i64
  %110 = select i1 %92, i8* %105, i8* %108
  %111 = select i1 %92, i64 %107, i64 %109
  %112 = tail call dereferenceable(24) %"class.std::__1::basic_string.7"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.7"* %82, i8* %110, i64 %111) #12
  br label %141

113:                                              ; preds = %77
  %114 = bitcast %"class.std::__1::basic_string.7"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %113
  %119 = bitcast %"class.std::__1::basic_string.7"* %82 to i8*
  %120 = bitcast %"class.std::__1::basic_string.7"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 24, i1 false) #12
  br label %126

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = load i64, i64* %124, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.7"* %82, i8* %123, i64 %125) #12
  br label %126

126:                                              ; preds = %121, %118
  store i8 1, i8* %79, align 8
  br label %141

127:                                              ; preds = %72
  %128 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8, i8* %128, align 8, !range !22
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %141, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %133 = bitcast %"class.std::__1::basic_string.7"* %132 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %137, %131
  store i8 0, i8* %128, align 8
  br label %141

141:                                              ; preds = %126, %103, %97, %94, %83, %127, %140
  %142 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 18
  %143 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 18
  %144 = bitcast i8* %143 to i64*
  %145 = bitcast i8* %142 to i64*
  %146 = load i64, i64* %144, align 8
  store i64 %146, i64* %145, align 8
  ret %class.AutocompleteInput* %0
}

declare void @_ZN18TemplateURLService19AddMatchingKeywordsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEbPNS0_6vectorINS0_4pairIP11TemplateURLmEENS4_ISD_EEEE(%class.TemplateURLService*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.std::__1::vector.307"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15KeywordProvider4StopEbb(%class.KeywordProvider* nocapture, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 0, i32 4
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %class.KeywordExtensionsDelegate*, %class.KeywordExtensionsDelegate** %5, align 8
  %7 = icmp eq %class.KeywordExtensionsDelegate* %6, null
  %8 = or i1 %7, %2
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = bitcast %class.KeywordExtensionsDelegate* %6 to void (%class.KeywordExtensionsDelegate*)***
  %11 = load void (%class.KeywordExtensionsDelegate*)**, void (%class.KeywordExtensionsDelegate*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.KeywordExtensionsDelegate*)*, void (%class.KeywordExtensionsDelegate*)** %11, i64 6
  %13 = load void (%class.KeywordExtensionsDelegate*)*, void (%class.KeywordExtensionsDelegate*)** %12, align 8
  tail call void %13(%class.KeywordExtensionsDelegate* nonnull %6) #12
  br label %14

14:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15KeywordProviderD2Ev(%class.KeywordProvider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV15KeywordProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %class.KeywordExtensionsDelegate*, %class.KeywordExtensionsDelegate** %3, align 8
  store %class.KeywordExtensionsDelegate* null, %class.KeywordExtensionsDelegate** %3, align 8
  %5 = icmp eq %class.KeywordExtensionsDelegate* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.KeywordExtensionsDelegate* %4 to void (%class.KeywordExtensionsDelegate*)***
  %8 = load void (%class.KeywordExtensionsDelegate*)**, void (%class.KeywordExtensionsDelegate*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.KeywordExtensionsDelegate*)*, void (%class.KeywordExtensionsDelegate*)** %8, i64 1
  %10 = load void (%class.KeywordExtensionsDelegate*)*, void (%class.KeywordExtensionsDelegate*)** %9, align 8
  tail call void %10(%class.KeywordExtensionsDelegate* nonnull %4) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 2
  tail call void @_ZN17AutocompleteInputD1Ev(%class.AutocompleteInput* %12) #12
  %13 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 0
  tail call void @_ZN20AutocompleteProviderD2Ev(%class.AutocompleteProvider* %13) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN17AutocompleteInputD1Ev(%class.AutocompleteInput*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN20AutocompleteProviderD2Ev(%class.AutocompleteProvider*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15KeywordProviderD0Ev(%class.KeywordProvider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV15KeywordProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %class.KeywordExtensionsDelegate*, %class.KeywordExtensionsDelegate** %3, align 8
  store %class.KeywordExtensionsDelegate* null, %class.KeywordExtensionsDelegate** %3, align 8
  %5 = icmp eq %class.KeywordExtensionsDelegate* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.KeywordExtensionsDelegate* %4 to void (%class.KeywordExtensionsDelegate*)***
  %8 = load void (%class.KeywordExtensionsDelegate*)**, void (%class.KeywordExtensionsDelegate*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.KeywordExtensionsDelegate*)*, void (%class.KeywordExtensionsDelegate*)** %8, i64 1
  %10 = load void (%class.KeywordExtensionsDelegate*)*, void (%class.KeywordExtensionsDelegate*)** %9, align 8
  tail call void %10(%class.KeywordExtensionsDelegate* nonnull %4) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 2
  tail call void @_ZN17AutocompleteInputD1Ev(%class.AutocompleteInput* %12) #12
  %13 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 0
  tail call void @_ZN20AutocompleteProviderD2Ev(%class.AutocompleteProvider* %13) #12
  %14 = bitcast %class.KeywordProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN15KeywordProvider18CalculateRelevanceEN7metrics16OmniboxInputTypeEbbbbb(i32, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %1, label %14, label %7

7:                                                ; preds = %6
  %8 = tail call i32 @_ZN17OmniboxFieldTrial40KeywordScoreForSufficientlyCompleteMatchEv() #12
  %9 = icmp sgt i32 %8, -1
  %10 = and i1 %9, %2
  %11 = icmp eq i32 %0, 3
  %12 = select i1 %11, i32 700, i32 450
  %13 = select i1 %10, i32 %8, i32 %12
  br label %17

14:                                               ; preds = %6
  br i1 %3, label %15, label %17

15:                                               ; preds = %14
  %16 = tail call i32 @_ZN14SearchProvider36CalculateRelevanceForKeywordVerbatimEN7metrics16OmniboxInputTypeEbb(i32 %0, i1 zeroext %5, i1 zeroext %4) #12
  br label %17

17:                                               ; preds = %14, %7, %15
  %18 = phi i32 [ %16, %15 ], [ %13, %7 ], [ 1500, %14 ]
  ret i32 %18
}

declare i32 @_ZN17OmniboxFieldTrial40KeywordScoreForSufficientlyCompleteMatchEv() local_unnamed_addr #1

declare i32 @_ZN14SearchProvider36CalculateRelevanceForKeywordVerbatimEN7metrics16OmniboxInputTypeEbb(i32, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK14TemplateURLRef19SupportsReplacementERK15SearchTermsData(%class.TemplateURLRef*, %class.SearchTermsData* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN17AutocompleteMatchC1EP20AutocompleteProvideribN21AutocompleteMatchType4TypeE(%struct.AutocompleteMatch*, %class.AutocompleteProvider*, i32, i1 zeroext, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !81
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !81
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !84, !noalias !81
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !84, !noalias !81
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !81
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !81
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !84, !noalias !81
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !84, !noalias !81
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !81
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !81
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !84, !noalias !81
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !84, !noalias !81
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !81
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !81
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !84, !noalias !81
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !84, !noalias !81
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !86

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !81
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !81
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !84, !noalias !81
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !84, !noalias !81
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !87

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !88

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !89

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #14
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !90
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !90
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !93, !noalias !90
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !93, !noalias !90
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !90
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !90
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !93, !noalias !90
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !93, !noalias !90
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !90
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !90
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !93, !noalias !90
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !93, !noalias !90
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !90
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !90
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !93, !noalias !90
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !93, !noalias !90
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !95

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !90
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !90
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !93, !noalias !90
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !93, !noalias !90
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !96

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !97

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !98

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !99
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !99
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !102, !noalias !99
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !102, !noalias !99
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !99
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !99
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !102, !noalias !99
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !102, !noalias !99
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !99
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !99
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !102, !noalias !99
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !102, !noalias !99
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !99
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !99
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !102, !noalias !99
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !102, !noalias !99
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !104

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !99
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !99
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !102, !noalias !99
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !102, !noalias !99
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !105

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !106

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !107

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #12
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15KeywordProvider20FillInURLAndContentsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPK11TemplateURLP17AutocompleteMatch(%class.KeywordProvider* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), %class.TemplateURL*, %struct.AutocompleteMatch*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %class.GURL, align 8
  %8 = alloca %"struct.TemplateURLRef::SearchTermsArgs", align 8
  %9 = alloca %class.GURL, align 8
  %10 = alloca %"class.std::__1::basic_string.7", align 8
  %11 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %2, i64 0, i32 1, i32 0, i32 0
  %12 = load %class.TemplateURLRef*, %class.TemplateURLRef** %11, align 8
  %13 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %2, i64 0, i32 1, i32 0, i32 1
  %14 = load %class.TemplateURLRef*, %class.TemplateURLRef** %13, align 8
  %15 = icmp eq %class.TemplateURLRef* %12, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %4
  %17 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 729, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %19 = load %class.TemplateURLRef*, %class.TemplateURLRef** %13, align 8
  br label %20

20:                                               ; preds = %4, %16
  %21 = phi %class.TemplateURLRef* [ %14, %4 ], [ %19, %16 ]
  %22 = getelementptr inbounds %class.TemplateURLRef, %class.TemplateURLRef* %21, i64 -1
  %23 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %230

32:                                               ; preds = %20
  %33 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 3
  %34 = load %class.TemplateURLService*, %class.TemplateURLService** %33, align 8
  call void @_ZN18TemplateURLService4LoadEv(%class.TemplateURLService* %34) #12
  %35 = load %class.TemplateURLService*, %class.TemplateURLService** %33, align 8
  %36 = getelementptr inbounds %class.TemplateURLService, %class.TemplateURLService* %35, i64 0, i32 4, i32 0, i32 0, i32 0
  %37 = load %class.SearchTermsData*, %class.SearchTermsData** %36, align 8
  %38 = call zeroext i1 @_ZNK14TemplateURLRef19SupportsReplacementERK15SearchTermsData(%class.TemplateURLRef* %22, %class.SearchTermsData* dereferenceable(8) %37) #12
  br i1 %38, label %39, label %126

39:                                               ; preds = %32
  %40 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %2, i64 0, i32 7
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 3
  br i1 %42, label %126, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %3, i64 0, i32 17
  %45 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #12
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* nonnull sret %6, i32 19655) #12
  %46 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = bitcast %"class.std::__1::basic_string"* %44 to i8**
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %50, %43
  %54 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* nonnull align 8 %45, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #12
  %55 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %3, i64 0, i32 18
  %56 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %3, i64 0, i32 18, i32 0, i32 1
  %57 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %56, align 8
  %58 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %3, i64 0, i32 18, i32 0, i32 2, i32 0, i32 0
  %59 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %58, align 8
  %60 = icmp ult %"struct.AutocompleteMatch::ACMatchClassification"* %57, %59
  %61 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %59 to i64
  br i1 %60, label %62, label %68

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %57, i64 0, i32 0
  store i64 0, i64* %63, align 8
  %64 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %57, i64 0, i32 1
  store i32 4, i32* %64, align 8
  %65 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %57, i64 1
  %66 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %65 to i64
  %67 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %56 to i64*
  store i64 %66, i64* %67, align 8
  br label %337

68:                                               ; preds = %53
  %69 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %57 to i64
  %70 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %56 to i64*
  %71 = bitcast %"class.std::__1::vector.214"* %55 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %69, %72
  %74 = ashr exact i64 %73, 4
  %75 = add nsw i64 %74, 1
  %76 = icmp ugt i64 %75, 1152921504606846975
  br i1 %76, label %77, label %79

77:                                               ; preds = %68
  %78 = bitcast %"class.std::__1::vector.214"* %55 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %78) #13
  unreachable

79:                                               ; preds = %68
  %80 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %58 to i64*
  %81 = sub i64 %61, %72
  %82 = ashr exact i64 %81, 4
  %83 = icmp ult i64 %82, 576460752303423487
  br i1 %83, label %84, label %92

84:                                               ; preds = %79
  %85 = ashr exact i64 %81, 3
  %86 = icmp ult i64 %85, %75
  %87 = select i1 %86, i64 %75, i64 %85
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %84
  %90 = icmp ugt i64 %87, 1152921504606846975
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  call void @abort() #13
  unreachable

92:                                               ; preds = %89, %79
  %93 = phi i64 [ %87, %89 ], [ 1152921504606846975, %79 ]
  %94 = shl i64 %93, 4
  %95 = call i8* @_Znwm(i64 %94) #14
  %96 = bitcast i8* %95 to %"struct.AutocompleteMatch::ACMatchClassification"*
  br label %97

97:                                               ; preds = %92, %84
  %98 = phi i64 [ %93, %92 ], [ 0, %84 ]
  %99 = phi %"struct.AutocompleteMatch::ACMatchClassification"* [ %96, %92 ], [ null, %84 ]
  %100 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %99, i64 %74
  %101 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %99, i64 %98
  %102 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %101 to i64
  %103 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %100, i64 0, i32 0
  store i64 0, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %99, i64 %74, i32 1
  store i32 4, i32* %104, align 8
  %105 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %100, i64 1
  %106 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %105 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.214", %"class.std::__1::vector.214"* %55, i64 0, i32 0, i32 0
  %108 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %107, align 8
  %109 = load i64, i64* %70, align 8
  %110 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %108 to i64
  %111 = sub i64 %109, %110
  %112 = ashr exact i64 %111, 4
  %113 = sub nsw i64 0, %112
  %114 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %100, i64 %113
  %115 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %114 to i64
  %116 = icmp sgt i64 %111, 0
  br i1 %116, label %117, label %121

117:                                              ; preds = %97
  %118 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %114 to i8*
  %119 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 %111, i1 false) #12
  %120 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %107, align 8
  br label %121

121:                                              ; preds = %117, %97
  %122 = phi %"struct.AutocompleteMatch::ACMatchClassification"* [ %108, %97 ], [ %120, %117 ]
  store i64 %115, i64* %71, align 8
  store i64 %106, i64* %70, align 8
  store i64 %102, i64* %80, align 8
  %123 = icmp eq %"struct.AutocompleteMatch::ACMatchClassification"* %122, null
  br i1 %123, label %337, label %124

124:                                              ; preds = %121
  %125 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %122 to i8*
  call void @_ZdlPv(i8* %125) #14
  br label %337

126:                                              ; preds = %39, %32
  %127 = bitcast %class.GURL* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %127) #12
  %128 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %2, i64 0, i32 0, i32 25
  %129 = bitcast %"class.std::__1::basic_string.7"* %128 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  %133 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = bitcast %"class.std::__1::basic_string.7"* %128 to i8*
  %136 = select i1 %132, i8* %134, i8* %135
  %137 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %2, i64 0, i32 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = zext i8 %131 to i64
  %140 = select i1 %132, i64 %138, i64 %139
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %7, i8* %136, i64 %140) #12
  %141 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %3, i64 0, i32 11
  %142 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %141, %class.GURL* nonnull dereferenceable(120) %7) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %127) #12
  %143 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %3, i64 0, i32 17
  %144 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %2, i64 0, i32 0, i32 23
  %145 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %143, %"class.std::__1::basic_string"* dereferenceable(24) %144) #12
  %146 = bitcast %"class.std::__1::basic_string"* %144 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %146, i64 0, i32 1, i32 1
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %126
  %151 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %2, i64 0, i32 0, i32 23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %152 = load i64, i64* %151, align 8
  br label %155

153:                                              ; preds = %126
  %154 = zext i8 %148 to i64
  br label %155

155:                                              ; preds = %150, %153
  %156 = phi i64 [ %152, %150 ], [ %154, %153 ]
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %337, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %3, i64 0, i32 18
  %160 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %3, i64 0, i32 18, i32 0, i32 1
  %161 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %160, align 8
  %162 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %3, i64 0, i32 18, i32 0, i32 2, i32 0, i32 0
  %163 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %162, align 8
  %164 = icmp ult %"struct.AutocompleteMatch::ACMatchClassification"* %161, %163
  %165 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %163 to i64
  br i1 %164, label %166, label %172

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %161, i64 0, i32 0
  store i64 0, i64* %167, align 8
  %168 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %161, i64 0, i32 1
  store i32 2, i32* %168, align 8
  %169 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %161, i64 1
  %170 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %169 to i64
  %171 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %160 to i64*
  store i64 %170, i64* %171, align 8
  br label %337

172:                                              ; preds = %158
  %173 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %161 to i64
  %174 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %160 to i64*
  %175 = bitcast %"class.std::__1::vector.214"* %159 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %173, %176
  %178 = ashr exact i64 %177, 4
  %179 = add nsw i64 %178, 1
  %180 = icmp ugt i64 %179, 1152921504606846975
  br i1 %180, label %181, label %183

181:                                              ; preds = %172
  %182 = bitcast %"class.std::__1::vector.214"* %159 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %182) #13
  unreachable

183:                                              ; preds = %172
  %184 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %162 to i64*
  %185 = sub i64 %165, %176
  %186 = ashr exact i64 %185, 4
  %187 = icmp ult i64 %186, 576460752303423487
  br i1 %187, label %188, label %196

188:                                              ; preds = %183
  %189 = ashr exact i64 %185, 3
  %190 = icmp ult i64 %189, %179
  %191 = select i1 %190, i64 %179, i64 %189
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %201, label %193

193:                                              ; preds = %188
  %194 = icmp ugt i64 %191, 1152921504606846975
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  call void @abort() #13
  unreachable

196:                                              ; preds = %193, %183
  %197 = phi i64 [ %191, %193 ], [ 1152921504606846975, %183 ]
  %198 = shl i64 %197, 4
  %199 = call i8* @_Znwm(i64 %198) #14
  %200 = bitcast i8* %199 to %"struct.AutocompleteMatch::ACMatchClassification"*
  br label %201

201:                                              ; preds = %196, %188
  %202 = phi i64 [ %197, %196 ], [ 0, %188 ]
  %203 = phi %"struct.AutocompleteMatch::ACMatchClassification"* [ %200, %196 ], [ null, %188 ]
  %204 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %203, i64 %178
  %205 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %203, i64 %202
  %206 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %205 to i64
  %207 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %204, i64 0, i32 0
  store i64 0, i64* %207, align 8
  %208 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %203, i64 %178, i32 1
  store i32 2, i32* %208, align 8
  %209 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %204, i64 1
  %210 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %209 to i64
  %211 = getelementptr inbounds %"class.std::__1::vector.214", %"class.std::__1::vector.214"* %159, i64 0, i32 0, i32 0
  %212 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %211, align 8
  %213 = load i64, i64* %174, align 8
  %214 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %212 to i64
  %215 = sub i64 %213, %214
  %216 = ashr exact i64 %215, 4
  %217 = sub nsw i64 0, %216
  %218 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %204, i64 %217
  %219 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %218 to i64
  %220 = icmp sgt i64 %215, 0
  br i1 %220, label %221, label %225

221:                                              ; preds = %201
  %222 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %218 to i8*
  %223 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %212 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 %215, i1 false) #12
  %224 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %211, align 8
  br label %225

225:                                              ; preds = %221, %201
  %226 = phi %"struct.AutocompleteMatch::ACMatchClassification"* [ %212, %201 ], [ %224, %221 ]
  store i64 %219, i64* %175, align 8
  store i64 %210, i64* %174, align 8
  store i64 %206, i64* %184, align 8
  %227 = icmp eq %"struct.AutocompleteMatch::ACMatchClassification"* %226, null
  br i1 %227, label %337, label %228

228:                                              ; preds = %225
  %229 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %226 to i8*
  call void @_ZdlPv(i8* %229) #14
  br label %337

230:                                              ; preds = %20
  %231 = bitcast %"struct.TemplateURLRef::SearchTermsArgs"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %231) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %231, i8 -86, i64 536, i1 false)
  call void @_ZN14TemplateURLRef15SearchTermsArgsC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"struct.TemplateURLRef::SearchTermsArgs"* nonnull %8, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  %232 = getelementptr inbounds %class.KeywordProvider, %class.KeywordProvider* %0, i64 0, i32 3
  %233 = load %class.TemplateURLService*, %class.TemplateURLService** %232, align 8
  call void @_ZN18TemplateURLService4LoadEv(%class.TemplateURLService* %233) #12
  %234 = load %class.TemplateURLService*, %class.TemplateURLService** %232, align 8
  %235 = call %class.TemplateURL* @_ZNK18TemplateURLService24GetDefaultSearchProviderEv(%class.TemplateURLService* %234) #12
  %236 = icmp eq %class.TemplateURL* %235, %2
  %237 = getelementptr inbounds %"struct.TemplateURLRef::SearchTermsArgs", %"struct.TemplateURLRef::SearchTermsArgs"* %8, i64 0, i32 13
  %238 = zext i1 %236 to i8
  store i8 %238, i8* %237, align 8
  %239 = bitcast %class.GURL* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %239) #12
  %240 = bitcast %"class.std::__1::basic_string.7"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %240) #12
  %241 = load %class.TemplateURLService*, %class.TemplateURLService** %232, align 8
  call void @_ZN18TemplateURLService4LoadEv(%class.TemplateURLService* %241) #12
  %242 = load %class.TemplateURLService*, %class.TemplateURLService** %232, align 8
  %243 = getelementptr inbounds %class.TemplateURLService, %class.TemplateURLService* %242, i64 0, i32 4, i32 0, i32 0, i32 0
  %244 = load %class.SearchTermsData*, %class.SearchTermsData** %243, align 8
  call void @_ZNK14TemplateURLRef18ReplaceSearchTermsERKNS_15SearchTermsArgsERK15SearchTermsDataPNSt3__14pairINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESD_EE(%"class.std::__1::basic_string.7"* nonnull sret %10, %class.TemplateURLRef* %22, %"struct.TemplateURLRef::SearchTermsArgs"* nonnull dereferenceable(536) %8, %class.SearchTermsData* dereferenceable(8) %244, %"struct.std::__1::pair.265"* null) #12
  %245 = bitcast %"class.std::__1::basic_string.7"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %246 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %245, i64 0, i32 1, i32 0
  %247 = load i8, i8* %246, align 1
  %248 = icmp slt i8 %247, 0
  %249 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load i8*, i8** %249, align 8
  %251 = select i1 %248, i8* %250, i8* %240
  %252 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %253 = load i64, i64* %252, align 8
  %254 = zext i8 %247 to i64
  %255 = select i1 %248, i64 %253, i64 %254
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %9, i8* %251, i64 %255) #12
  %256 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %3, i64 0, i32 11
  %257 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %256, %class.GURL* nonnull dereferenceable(120) %9) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %9) #12
  %258 = load i8, i8* %246, align 1
  %259 = icmp slt i8 %258, 0
  br i1 %259, label %260, label %262

260:                                              ; preds = %230
  %261 = load i8*, i8** %249, align 8
  call void @_ZdlPv(i8* %261) #14
  br label %262

262:                                              ; preds = %230, %260
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %240) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %239) #12
  %263 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %3, i64 0, i32 17
  %264 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %263, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %265 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %3, i64 0, i32 18
  %266 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %3, i64 0, i32 18, i32 0, i32 1
  %267 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %266, align 8
  %268 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %3, i64 0, i32 18, i32 0, i32 2, i32 0, i32 0
  %269 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %268, align 8
  %270 = icmp ult %"struct.AutocompleteMatch::ACMatchClassification"* %267, %269
  %271 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %269 to i64
  br i1 %270, label %272, label %278

272:                                              ; preds = %262
  %273 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %267, i64 0, i32 0
  store i64 0, i64* %273, align 8
  %274 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %267, i64 0, i32 1
  store i32 0, i32* %274, align 8
  %275 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %267, i64 1
  %276 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %275 to i64
  %277 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %266 to i64*
  store i64 %276, i64* %277, align 8
  br label %336

278:                                              ; preds = %262
  %279 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %267 to i64
  %280 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %266 to i64*
  %281 = bitcast %"class.std::__1::vector.214"* %265 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = sub i64 %279, %282
  %284 = ashr exact i64 %283, 4
  %285 = add nsw i64 %284, 1
  %286 = icmp ugt i64 %285, 1152921504606846975
  br i1 %286, label %287, label %289

287:                                              ; preds = %278
  %288 = bitcast %"class.std::__1::vector.214"* %265 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %288) #13
  unreachable

289:                                              ; preds = %278
  %290 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %268 to i64*
  %291 = sub i64 %271, %282
  %292 = ashr exact i64 %291, 4
  %293 = icmp ult i64 %292, 576460752303423487
  br i1 %293, label %294, label %302

294:                                              ; preds = %289
  %295 = ashr exact i64 %291, 3
  %296 = icmp ult i64 %295, %285
  %297 = select i1 %296, i64 %285, i64 %295
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %307, label %299

299:                                              ; preds = %294
  %300 = icmp ugt i64 %297, 1152921504606846975
  br i1 %300, label %301, label %302

301:                                              ; preds = %299
  call void @abort() #13
  unreachable

302:                                              ; preds = %299, %289
  %303 = phi i64 [ %297, %299 ], [ 1152921504606846975, %289 ]
  %304 = shl i64 %303, 4
  %305 = call i8* @_Znwm(i64 %304) #14
  %306 = bitcast i8* %305 to %"struct.AutocompleteMatch::ACMatchClassification"*
  br label %307

307:                                              ; preds = %302, %294
  %308 = phi i64 [ %303, %302 ], [ 0, %294 ]
  %309 = phi %"struct.AutocompleteMatch::ACMatchClassification"* [ %306, %302 ], [ null, %294 ]
  %310 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %309, i64 %284
  %311 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %309, i64 %308
  %312 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %311 to i64
  %313 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %310, i64 0, i32 0
  store i64 0, i64* %313, align 8
  %314 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %309, i64 %284, i32 1
  store i32 0, i32* %314, align 8
  %315 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %310, i64 1
  %316 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %315 to i64
  %317 = getelementptr inbounds %"class.std::__1::vector.214", %"class.std::__1::vector.214"* %265, i64 0, i32 0, i32 0
  %318 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %317, align 8
  %319 = load i64, i64* %280, align 8
  %320 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %318 to i64
  %321 = sub i64 %319, %320
  %322 = ashr exact i64 %321, 4
  %323 = sub nsw i64 0, %322
  %324 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %310, i64 %323
  %325 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %324 to i64
  %326 = icmp sgt i64 %321, 0
  br i1 %326, label %327, label %331

327:                                              ; preds = %307
  %328 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %324 to i8*
  %329 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %318 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %328, i8* align 8 %329, i64 %321, i1 false) #12
  %330 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %317, align 8
  br label %331

331:                                              ; preds = %327, %307
  %332 = phi %"struct.AutocompleteMatch::ACMatchClassification"* [ %318, %307 ], [ %330, %327 ]
  store i64 %325, i64* %281, align 8
  store i64 %316, i64* %280, align 8
  store i64 %312, i64* %290, align 8
  %333 = icmp eq %"struct.AutocompleteMatch::ACMatchClassification"* %332, null
  br i1 %333, label %336, label %334

334:                                              ; preds = %331
  %335 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %332 to i8*
  call void @_ZdlPv(i8* %335) #14
  br label %336

336:                                              ; preds = %272, %331, %334
  call void @_ZN14TemplateURLRef15SearchTermsArgsD1Ev(%"struct.TemplateURLRef::SearchTermsArgs"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %231) #12
  br label %337

337:                                              ; preds = %228, %225, %166, %124, %121, %62, %155, %336
  ret void
}

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

declare void @_ZN14TemplateURLRef15SearchTermsArgsC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"struct.TemplateURLRef::SearchTermsArgs"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

declare %class.TemplateURL* @_ZNK18TemplateURLService24GetDefaultSearchProviderEv(%class.TemplateURLService*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN14TemplateURLRef15SearchTermsArgsD1Ev(%"struct.TemplateURLRef::SearchTermsArgs"*) unnamed_addr #4

declare void @_ZN18TemplateURLService4LoadEv(%class.TemplateURLService*) local_unnamed_addr #1

declare void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #1

declare %class.TemplateURL* @_ZNK18TemplateURLService24GetTemplateURLForKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.TemplateURLService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZN3url13ExtractSchemeEPKciPNS_9ComponentE(i8*, i32, %"struct.url::Component"*) local_unnamed_addr #1

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.7"* sret, i16*, i64) local_unnamed_addr #1

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16*, i64, i16*, i64, i32) local_unnamed_addr #1

declare void @_ZNK20AutocompleteProvider15AddProviderInfoEPNSt3__16vectorIN7metrics30OmniboxEventProto_ProviderInfoENS0_9allocatorIS3_EEEE(%class.AutocompleteProvider*, %"class.std::__1::vector.321"*) unnamed_addr #1

declare void @_ZN20AutocompleteProvider12ResetSessionEv(%class.AutocompleteProvider*) unnamed_addr #1

declare i64 @_ZNK20AutocompleteProvider19EstimateMemoryUsageEv(%class.AutocompleteProvider*) unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare dereferenceable(80) %"struct.url::Parsed"* @_ZN3url6ParsedaSERKS0_(%"struct.url::Parsed"*, %"struct.url::Parsed"* dereferenceable(80)) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.7"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.7"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.7"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.7"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.19"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.19"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %251, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"class.std::__1::basic_string"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %28, %"class.std::__1::basic_string"* dereferenceable(24) %29) #12
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %33 = icmp eq %"class.std::__1::basic_string"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %235

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %38, label %233, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"class.std::__1::basic_string"*
  br label %41

41:                                               ; preds = %227, %39
  %42 = phi %"class.std::__1::basic_string"* [ %229, %227 ], [ %40, %39 ]
  %43 = phi %"class.std::__1::basic_string"* [ %228, %227 ], [ %24, %39 ]
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #12
  br label %227

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %55, 11
  br i1 %56, label %57, label %62

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string"* %42 to i16*
  %59 = trunc i64 %55 to i8
  %60 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  store i8 %59, i8* %61, align 1
  br label %79

62:                                               ; preds = %51
  %63 = icmp ugt i64 %55, 9223372036854775791
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::basic_string"* %42 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %65) #13
  unreachable

66:                                               ; preds = %62
  %67 = add nuw nsw i64 %55, 8
  %68 = and i64 %67, -8
  %69 = icmp slt i64 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  tail call void @abort() #13
  unreachable

71:                                               ; preds = %66
  %72 = shl i64 %68, 1
  %73 = tail call i8* @_Znwm(i64 %72) #14
  %74 = bitcast i8* %73 to i16*
  %75 = bitcast %"class.std::__1::basic_string"* %42 to i8**
  store i8* %73, i8** %75, align 8
  %76 = or i64 %68, -9223372036854775808
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %78, align 8
  br label %79

79:                                               ; preds = %71, %57
  %80 = phi i16* [ %58, %57 ], [ %74, %71 ]
  %81 = add nuw nsw i64 %55, 1
  %82 = add i64 %55, 1
  %83 = icmp ult i64 %82, 16
  br i1 %83, label %174, label %84

84:                                               ; preds = %79
  %85 = getelementptr i16, i16* %80, i64 1
  %86 = getelementptr i16, i16* %85, i64 %55
  %87 = getelementptr i16, i16* %53, i64 1
  %88 = getelementptr i16, i16* %87, i64 %55
  %89 = icmp ult i16* %80, %88
  %90 = icmp ult i16* %53, %86
  %91 = and i1 %89, %90
  br i1 %91, label %174, label %92

92:                                               ; preds = %84
  %93 = and i64 %82, -16
  %94 = sub i64 %81, %93
  %95 = getelementptr i16, i16* %53, i64 %93
  %96 = getelementptr i16, i16* %80, i64 %93
  %97 = add i64 %93, -16
  %98 = lshr exact i64 %97, 4
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 3
  %101 = icmp ult i64 %97, 48
  br i1 %101, label %153, label %102

102:                                              ; preds = %92
  %103 = sub nsw i64 %99, %100
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i64 [ 0, %102 ], [ %150, %104 ]
  %106 = phi i64 [ %103, %102 ], [ %151, %104 ]
  %107 = getelementptr i16, i16* %53, i64 %105
  %108 = getelementptr i16, i16* %80, i64 %105
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !108
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !108
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !111, !noalias !108
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !111, !noalias !108
  %117 = or i64 %105, 16
  %118 = getelementptr i16, i16* %53, i64 %117
  %119 = getelementptr i16, i16* %80, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !108
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !108
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !111, !noalias !108
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !111, !noalias !108
  %128 = or i64 %105, 32
  %129 = getelementptr i16, i16* %53, i64 %128
  %130 = getelementptr i16, i16* %80, i64 %128
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !108
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !108
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !111, !noalias !108
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !111, !noalias !108
  %139 = or i64 %105, 48
  %140 = getelementptr i16, i16* %53, i64 %139
  %141 = getelementptr i16, i16* %80, i64 %139
  %142 = bitcast i16* %140 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !108
  %144 = getelementptr i16, i16* %140, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !108
  %147 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !111, !noalias !108
  %148 = getelementptr i16, i16* %141, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !111, !noalias !108
  %150 = add i64 %105, 64
  %151 = add i64 %106, -4
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %104, !llvm.loop !113

153:                                              ; preds = %104, %92
  %154 = phi i64 [ 0, %92 ], [ %150, %104 ]
  %155 = icmp eq i64 %100, 0
  br i1 %155, label %172, label %156

156:                                              ; preds = %153, %156
  %157 = phi i64 [ %169, %156 ], [ %154, %153 ]
  %158 = phi i64 [ %170, %156 ], [ %100, %153 ]
  %159 = getelementptr i16, i16* %53, i64 %157
  %160 = getelementptr i16, i16* %80, i64 %157
  %161 = bitcast i16* %159 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !108
  %163 = getelementptr i16, i16* %159, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !108
  %166 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %166, align 2, !alias.scope !111, !noalias !108
  %167 = getelementptr i16, i16* %160, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %168, align 2, !alias.scope !111, !noalias !108
  %169 = add i64 %157, 16
  %170 = add i64 %158, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %156, !llvm.loop !114

172:                                              ; preds = %156, %153
  %173 = icmp eq i64 %82, %93
  br i1 %173, label %227, label %174

174:                                              ; preds = %172, %84, %79
  %175 = phi i64 [ %81, %84 ], [ %81, %79 ], [ %94, %172 ]
  %176 = phi i16* [ %53, %84 ], [ %53, %79 ], [ %95, %172 ]
  %177 = phi i16* [ %80, %84 ], [ %80, %79 ], [ %96, %172 ]
  %178 = add i64 %175, -1
  %179 = and i64 %175, 7
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %192, label %181

181:                                              ; preds = %174, %181
  %182 = phi i64 [ %187, %181 ], [ %175, %174 ]
  %183 = phi i16* [ %189, %181 ], [ %176, %174 ]
  %184 = phi i16* [ %188, %181 ], [ %177, %174 ]
  %185 = phi i64 [ %190, %181 ], [ %179, %174 ]
  %186 = load i16, i16* %183, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %182, -1
  %188 = getelementptr inbounds i16, i16* %184, i64 1
  %189 = getelementptr inbounds i16, i16* %183, i64 1
  %190 = add i64 %185, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %181, !llvm.loop !115

192:                                              ; preds = %181, %174
  %193 = phi i64 [ %175, %174 ], [ %187, %181 ]
  %194 = phi i16* [ %176, %174 ], [ %189, %181 ]
  %195 = phi i16* [ %177, %174 ], [ %188, %181 ]
  %196 = icmp ult i64 %178, 7
  br i1 %196, label %227, label %197

197:                                              ; preds = %192, %197
  %198 = phi i64 [ %223, %197 ], [ %193, %192 ]
  %199 = phi i16* [ %225, %197 ], [ %194, %192 ]
  %200 = phi i16* [ %224, %197 ], [ %195, %192 ]
  %201 = load i16, i16* %199, align 2
  store i16 %201, i16* %200, align 2
  %202 = getelementptr inbounds i16, i16* %200, i64 1
  %203 = getelementptr inbounds i16, i16* %199, i64 1
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %200, i64 2
  %206 = getelementptr inbounds i16, i16* %199, i64 2
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %200, i64 3
  %209 = getelementptr inbounds i16, i16* %199, i64 3
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %200, i64 4
  %212 = getelementptr inbounds i16, i16* %199, i64 4
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %200, i64 5
  %215 = getelementptr inbounds i16, i16* %199, i64 5
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %200, i64 6
  %218 = getelementptr inbounds i16, i16* %199, i64 6
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %200, i64 7
  %221 = getelementptr inbounds i16, i16* %199, i64 7
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = add i64 %198, -8
  %224 = getelementptr inbounds i16, i16* %200, i64 8
  %225 = getelementptr inbounds i16, i16* %199, i64 8
  %226 = icmp eq i64 %223, 0
  br i1 %226, label %227, label %197, !llvm.loop !116

227:                                              ; preds = %192, %197, %172, %48
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 1
  %229 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 1
  %230 = icmp eq %"class.std::__1::basic_string"* %228, %2
  br i1 %230, label %231, label %41

231:                                              ; preds = %227
  %232 = ptrtoint %"class.std::__1::basic_string"* %229 to i64
  br label %233

233:                                              ; preds = %36, %231
  %234 = phi i64 [ %37, %36 ], [ %232, %231 ]
  store i64 %234, i64* %19, align 8
  br label %494

235:                                              ; preds = %34
  %236 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %237 = icmp eq %"class.std::__1::basic_string"* %236, %35
  br i1 %237, label %250, label %238

238:                                              ; preds = %235, %248
  %239 = phi %"class.std::__1::basic_string"* [ %240, %248 ], [ %236, %235 ]
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %239, i64 -1
  %241 = bitcast %"class.std::__1::basic_string"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %238
  %246 = bitcast %"class.std::__1::basic_string"* %240 to i8**
  %247 = load i8*, i8** %246, align 8
  tail call void @_ZdlPv(i8* %247) #14
  br label %248

248:                                              ; preds = %245, %238
  %249 = icmp eq %"class.std::__1::basic_string"* %240, %35
  br i1 %249, label %250, label %238

250:                                              ; preds = %248, %235
  store %"class.std::__1::basic_string"* %35, %"class.std::__1::basic_string"** %18, align 8
  br label %494

251:                                              ; preds = %3
  %252 = icmp eq i64 %12, 0
  br i1 %252, label %276, label %253

253:                                              ; preds = %251
  %254 = inttoptr i64 %12 to i8*
  %255 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %256 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %255, align 8
  %257 = icmp eq %"class.std::__1::basic_string"* %256, %16
  br i1 %257, label %273, label %258

258:                                              ; preds = %253, %268
  %259 = phi %"class.std::__1::basic_string"* [ %260, %268 ], [ %256, %253 ]
  %260 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %259, i64 -1
  %261 = bitcast %"class.std::__1::basic_string"* %260 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %261, i64 0, i32 1, i32 1
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %258
  %266 = bitcast %"class.std::__1::basic_string"* %260 to i8**
  %267 = load i8*, i8** %266, align 8
  tail call void @_ZdlPv(i8* %267) #14
  br label %268

268:                                              ; preds = %265, %258
  %269 = icmp eq %"class.std::__1::basic_string"* %260, %16
  br i1 %269, label %270, label %258

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector.19"* %0 to i8**
  %272 = load i8*, i8** %271, align 8
  br label %273

273:                                              ; preds = %270, %253
  %274 = phi i8* [ %272, %270 ], [ %254, %253 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %255, align 8
  tail call void @_ZdlPv(i8* %274) #14
  %275 = bitcast %"class.std::__1::vector.19"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #12
  br label %276

276:                                              ; preds = %251, %273
  %277 = phi i64 [ %10, %251 ], [ 0, %273 ]
  %278 = icmp ugt i64 %7, 768614336404564650
  br i1 %278, label %279, label %281

279:                                              ; preds = %276
  %280 = bitcast %"class.std::__1::vector.19"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %280) #13
  unreachable

281:                                              ; preds = %276
  %282 = sdiv exact i64 %277, 24
  %283 = icmp ult i64 %282, 384307168202282325
  br i1 %283, label %284, label %288

284:                                              ; preds = %281
  %285 = shl nsw i64 %282, 1
  %286 = icmp ult i64 %285, %7
  %287 = select i1 %286, i64 %7, i64 %285
  br label %288

288:                                              ; preds = %284, %281
  %289 = phi i64 [ %287, %284 ], [ 768614336404564650, %281 ]
  %290 = mul i64 %289, 24
  %291 = tail call i8* @_Znwm(i64 %290) #14
  %292 = bitcast i8* %291 to %"class.std::__1::basic_string"*
  %293 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %294 = bitcast %"class.std::__1::basic_string"** %293 to i8**
  store i8* %291, i8** %294, align 8
  %295 = bitcast %"class.std::__1::vector.19"* %0 to i8**
  store i8* %291, i8** %295, align 8
  %296 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %292, i64 %289
  store %"class.std::__1::basic_string"* %296, %"class.std::__1::basic_string"** %8, align 8
  %297 = bitcast %"class.std::__1::basic_string"** %293 to i64*
  %298 = ptrtoint i8* %291 to i64
  %299 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %299, label %492, label %300

300:                                              ; preds = %288, %486
  %301 = phi %"class.std::__1::basic_string"* [ %488, %486 ], [ %292, %288 ]
  %302 = phi %"class.std::__1::basic_string"* [ %487, %486 ], [ %1, %288 ]
  %303 = bitcast %"class.std::__1::basic_string"* %302 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %303, i64 0, i32 1, i32 1
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %300
  %308 = bitcast %"class.std::__1::basic_string"* %301 to i8*
  %309 = bitcast %"class.std::__1::basic_string"* %302 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* align 8 %309, i64 24, i1 false) #12
  br label %486

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i16*, i16** %311, align 8
  %313 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = icmp ult i64 %314, 11
  br i1 %315, label %316, label %321

316:                                              ; preds = %310
  %317 = bitcast %"class.std::__1::basic_string"* %301 to i16*
  %318 = trunc i64 %314 to i8
  %319 = bitcast %"class.std::__1::basic_string"* %301 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %319, i64 0, i32 1, i32 1
  store i8 %318, i8* %320, align 1
  br label %338

321:                                              ; preds = %310
  %322 = icmp ugt i64 %314, 9223372036854775791
  br i1 %322, label %323, label %325

323:                                              ; preds = %321
  %324 = bitcast %"class.std::__1::basic_string"* %301 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %324) #13
  unreachable

325:                                              ; preds = %321
  %326 = add nuw nsw i64 %314, 8
  %327 = and i64 %326, -8
  %328 = icmp slt i64 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %325
  tail call void @abort() #13
  unreachable

330:                                              ; preds = %325
  %331 = shl i64 %327, 1
  %332 = tail call i8* @_Znwm(i64 %331) #14
  %333 = bitcast i8* %332 to i16*
  %334 = bitcast %"class.std::__1::basic_string"* %301 to i8**
  store i8* %332, i8** %334, align 8
  %335 = or i64 %327, -9223372036854775808
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %335, i64* %336, align 8
  %337 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %314, i64* %337, align 8
  br label %338

338:                                              ; preds = %330, %316
  %339 = phi i16* [ %317, %316 ], [ %333, %330 ]
  %340 = add nuw nsw i64 %314, 1
  %341 = add i64 %314, 1
  %342 = icmp ult i64 %341, 16
  br i1 %342, label %433, label %343

343:                                              ; preds = %338
  %344 = getelementptr i16, i16* %339, i64 1
  %345 = getelementptr i16, i16* %344, i64 %314
  %346 = getelementptr i16, i16* %312, i64 1
  %347 = getelementptr i16, i16* %346, i64 %314
  %348 = icmp ult i16* %339, %347
  %349 = icmp ult i16* %312, %345
  %350 = and i1 %348, %349
  br i1 %350, label %433, label %351

351:                                              ; preds = %343
  %352 = and i64 %341, -16
  %353 = sub i64 %340, %352
  %354 = getelementptr i16, i16* %312, i64 %352
  %355 = getelementptr i16, i16* %339, i64 %352
  %356 = add i64 %352, -16
  %357 = lshr exact i64 %356, 4
  %358 = add nuw nsw i64 %357, 1
  %359 = and i64 %358, 3
  %360 = icmp ult i64 %356, 48
  br i1 %360, label %412, label %361

361:                                              ; preds = %351
  %362 = sub nsw i64 %358, %359
  br label %363

363:                                              ; preds = %363, %361
  %364 = phi i64 [ 0, %361 ], [ %409, %363 ]
  %365 = phi i64 [ %362, %361 ], [ %410, %363 ]
  %366 = getelementptr i16, i16* %312, i64 %364
  %367 = getelementptr i16, i16* %339, i64 %364
  %368 = bitcast i16* %366 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !117
  %370 = getelementptr i16, i16* %366, i64 8
  %371 = bitcast i16* %370 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !117
  %373 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %373, align 2, !alias.scope !120, !noalias !117
  %374 = getelementptr i16, i16* %367, i64 8
  %375 = bitcast i16* %374 to <8 x i16>*
  store <8 x i16> %372, <8 x i16>* %375, align 2, !alias.scope !120, !noalias !117
  %376 = or i64 %364, 16
  %377 = getelementptr i16, i16* %312, i64 %376
  %378 = getelementptr i16, i16* %339, i64 %376
  %379 = bitcast i16* %377 to <8 x i16>*
  %380 = load <8 x i16>, <8 x i16>* %379, align 2, !alias.scope !117
  %381 = getelementptr i16, i16* %377, i64 8
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !117
  %384 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %380, <8 x i16>* %384, align 2, !alias.scope !120, !noalias !117
  %385 = getelementptr i16, i16* %378, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %386, align 2, !alias.scope !120, !noalias !117
  %387 = or i64 %364, 32
  %388 = getelementptr i16, i16* %312, i64 %387
  %389 = getelementptr i16, i16* %339, i64 %387
  %390 = bitcast i16* %388 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !117
  %392 = getelementptr i16, i16* %388, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 2, !alias.scope !117
  %395 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %395, align 2, !alias.scope !120, !noalias !117
  %396 = getelementptr i16, i16* %389, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %397, align 2, !alias.scope !120, !noalias !117
  %398 = or i64 %364, 48
  %399 = getelementptr i16, i16* %312, i64 %398
  %400 = getelementptr i16, i16* %339, i64 %398
  %401 = bitcast i16* %399 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !117
  %403 = getelementptr i16, i16* %399, i64 8
  %404 = bitcast i16* %403 to <8 x i16>*
  %405 = load <8 x i16>, <8 x i16>* %404, align 2, !alias.scope !117
  %406 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %406, align 2, !alias.scope !120, !noalias !117
  %407 = getelementptr i16, i16* %400, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %405, <8 x i16>* %408, align 2, !alias.scope !120, !noalias !117
  %409 = add i64 %364, 64
  %410 = add i64 %365, -4
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %412, label %363, !llvm.loop !122

412:                                              ; preds = %363, %351
  %413 = phi i64 [ 0, %351 ], [ %409, %363 ]
  %414 = icmp eq i64 %359, 0
  br i1 %414, label %431, label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %428, %415 ], [ %413, %412 ]
  %417 = phi i64 [ %429, %415 ], [ %359, %412 ]
  %418 = getelementptr i16, i16* %312, i64 %416
  %419 = getelementptr i16, i16* %339, i64 %416
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !117
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !117
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !120, !noalias !117
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !120, !noalias !117
  %428 = add i64 %416, 16
  %429 = add i64 %417, -1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %415, !llvm.loop !123

431:                                              ; preds = %415, %412
  %432 = icmp eq i64 %341, %352
  br i1 %432, label %486, label %433

433:                                              ; preds = %431, %343, %338
  %434 = phi i64 [ %340, %343 ], [ %340, %338 ], [ %353, %431 ]
  %435 = phi i16* [ %312, %343 ], [ %312, %338 ], [ %354, %431 ]
  %436 = phi i16* [ %339, %343 ], [ %339, %338 ], [ %355, %431 ]
  %437 = add i64 %434, -1
  %438 = and i64 %434, 7
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %451, label %440

440:                                              ; preds = %433, %440
  %441 = phi i64 [ %446, %440 ], [ %434, %433 ]
  %442 = phi i16* [ %448, %440 ], [ %435, %433 ]
  %443 = phi i16* [ %447, %440 ], [ %436, %433 ]
  %444 = phi i64 [ %449, %440 ], [ %438, %433 ]
  %445 = load i16, i16* %442, align 2
  store i16 %445, i16* %443, align 2
  %446 = add i64 %441, -1
  %447 = getelementptr inbounds i16, i16* %443, i64 1
  %448 = getelementptr inbounds i16, i16* %442, i64 1
  %449 = add i64 %444, -1
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %451, label %440, !llvm.loop !124

451:                                              ; preds = %440, %433
  %452 = phi i64 [ %434, %433 ], [ %446, %440 ]
  %453 = phi i16* [ %435, %433 ], [ %448, %440 ]
  %454 = phi i16* [ %436, %433 ], [ %447, %440 ]
  %455 = icmp ult i64 %437, 7
  br i1 %455, label %486, label %456

456:                                              ; preds = %451, %456
  %457 = phi i64 [ %482, %456 ], [ %452, %451 ]
  %458 = phi i16* [ %484, %456 ], [ %453, %451 ]
  %459 = phi i16* [ %483, %456 ], [ %454, %451 ]
  %460 = load i16, i16* %458, align 2
  store i16 %460, i16* %459, align 2
  %461 = getelementptr inbounds i16, i16* %459, i64 1
  %462 = getelementptr inbounds i16, i16* %458, i64 1
  %463 = load i16, i16* %462, align 2
  store i16 %463, i16* %461, align 2
  %464 = getelementptr inbounds i16, i16* %459, i64 2
  %465 = getelementptr inbounds i16, i16* %458, i64 2
  %466 = load i16, i16* %465, align 2
  store i16 %466, i16* %464, align 2
  %467 = getelementptr inbounds i16, i16* %459, i64 3
  %468 = getelementptr inbounds i16, i16* %458, i64 3
  %469 = load i16, i16* %468, align 2
  store i16 %469, i16* %467, align 2
  %470 = getelementptr inbounds i16, i16* %459, i64 4
  %471 = getelementptr inbounds i16, i16* %458, i64 4
  %472 = load i16, i16* %471, align 2
  store i16 %472, i16* %470, align 2
  %473 = getelementptr inbounds i16, i16* %459, i64 5
  %474 = getelementptr inbounds i16, i16* %458, i64 5
  %475 = load i16, i16* %474, align 2
  store i16 %475, i16* %473, align 2
  %476 = getelementptr inbounds i16, i16* %459, i64 6
  %477 = getelementptr inbounds i16, i16* %458, i64 6
  %478 = load i16, i16* %477, align 2
  store i16 %478, i16* %476, align 2
  %479 = getelementptr inbounds i16, i16* %459, i64 7
  %480 = getelementptr inbounds i16, i16* %458, i64 7
  %481 = load i16, i16* %480, align 2
  store i16 %481, i16* %479, align 2
  %482 = add i64 %457, -8
  %483 = getelementptr inbounds i16, i16* %459, i64 8
  %484 = getelementptr inbounds i16, i16* %458, i64 8
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %486, label %456, !llvm.loop !125

486:                                              ; preds = %451, %456, %431, %307
  %487 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 1
  %488 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 1
  %489 = icmp eq %"class.std::__1::basic_string"* %487, %2
  br i1 %489, label %490, label %300

490:                                              ; preds = %486
  %491 = ptrtoint %"class.std::__1::basic_string"* %488 to i64
  br label %492

492:                                              ; preds = %288, %490
  %493 = phi i64 [ %298, %288 ], [ %491, %490 ]
  store i64 %493, i64* %297, align 8
  br label %494

494:                                              ; preds = %233, %250, %492
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.7"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare void @_ZNK14TemplateURLRef18ReplaceSearchTermsERKNS_15SearchTermsArgsERK15SearchTermsDataPNSt3__14pairINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESD_EE(%"class.std::__1::basic_string.7"* sret, %class.TemplateURLRef*, %"struct.TemplateURLRef::SearchTermsArgs"* dereferenceable(536), %class.SearchTermsData* dereferenceable(8), %"struct.std::__1::pair.265"*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !126
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !126
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !129, !noalias !126
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !129, !noalias !126
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !126
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !126
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !129, !noalias !126
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !129, !noalias !126
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !126
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !126
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !129, !noalias !126
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !129, !noalias !126
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !126
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !126
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !129, !noalias !126
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !129, !noalias !126
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !131

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !126
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !126
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !129, !noalias !126
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !129, !noalias !126
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !132

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !133

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !134

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !135

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !136

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !137

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !139
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !139
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !142, !noalias !139
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !142, !noalias !139
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !139
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !139
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !142, !noalias !139
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !142, !noalias !139
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !139
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !139
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !142, !noalias !139
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !142, !noalias !139
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !139
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !139
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !142, !noalias !139
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !142, !noalias !139
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !144

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !139
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !139
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !142, !noalias !139
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !142, !noalias !139
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !145

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !146

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !147

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #14
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #13
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #13
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #14
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !148
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !148
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !151, !noalias !148
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !151, !noalias !148
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !148
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !148
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !151, !noalias !148
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !151, !noalias !148
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !148
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !148
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !151, !noalias !148
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !151, !noalias !148
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !148
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !148
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !151, !noalias !148
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !151, !noalias !148
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !153

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !148
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !148
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !151, !noalias !148
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !151, !noalias !148
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !154

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !155

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !156

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !157
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !157
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !160, !noalias !157
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !160, !noalias !157
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !157
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !157
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !160, !noalias !157
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !160, !noalias !157
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !157
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !157
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !160, !noalias !157
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !160, !noalias !157
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !157
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !157
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !160, !noalias !157
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !160, !noalias !157
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !162

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !157
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !157
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !160, !noalias !157
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !160, !noalias !157
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !163

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !164

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !165

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #14
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.5"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #13
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #13
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #13
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #14
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !166
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !166
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !169, !noalias !166
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !169, !noalias !166
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !166
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !166
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !169, !noalias !166
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !169, !noalias !166
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !166
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !166
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !169, !noalias !166
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !169, !noalias !166
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !166
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !166
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !169, !noalias !166
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !169, !noalias !166
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !171

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !166
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !166
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !169, !noalias !166
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !169, !noalias !166
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !172

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !173

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !174

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare dereferenceable(1600) %struct.AutocompleteMatch* @_ZN17AutocompleteMatchaSEOS_(%struct.AutocompleteMatch*, %struct.AutocompleteMatch* dereferenceable(1600)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__sortIRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEvT0_S9_T_(%"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %269, %2
  %4 = phi %"struct.std::__1::pair.309"* [ %1, %2 ], [ %243, %269 ]
  %5 = phi %"struct.std::__1::pair.309"* [ %0, %2 ], [ %14, %269 ]
  %6 = ptrtoint %"struct.std::__1::pair.309"* %4 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %4, i64 -1
  %8 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %4, i64 -1, i32 1
  %9 = bitcast %"struct.std::__1::pair.309"* %7 to i64*
  %10 = ptrtoint %"struct.std::__1::pair.309"* %4 to i64
  br label %11

11:                                               ; preds = %278, %3
  %12 = phi %"struct.std::__1::pair.309"* [ %5, %3 ], [ %279, %278 ]
  br label %13

13:                                               ; preds = %179, %11
  %14 = phi %"struct.std::__1::pair.309"* [ %12, %11 ], [ %166, %179 ]
  %15 = ptrtoint %"struct.std::__1::pair.309"* %14 to i64
  %16 = sub i64 %6, %15
  %17 = ashr exact i64 %16, 4
  switch i64 %17, label %73 [
    i64 0, label %282
    i64 1, label %282
    i64 2, label %18
    i64 3, label %32
    i64 4, label %36
    i64 5, label %67
  ]

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %4, i64 -1, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %20, %22
  br i1 %23, label %24, label %282

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %4, i64 -1
  %26 = bitcast %"struct.std::__1::pair.309"* %14 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"struct.std::__1::pair.309"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  store i64 %27, i64* %28, align 8
  %30 = load i64, i64* %21, align 8
  %31 = load i64, i64* %19, align 8
  store i64 %31, i64* %21, align 8
  store i64 %30, i64* %19, align 8
  br label %282

32:                                               ; preds = %13
  %33 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 1
  %34 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %4, i64 -1
  %35 = tail call fastcc i32 @_ZNSt3__17__sort3IRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEjT0_S9_S9_T_(%"struct.std::__1::pair.309"* %14, %"struct.std::__1::pair.309"* %33, %"struct.std::__1::pair.309"* %34)
  br label %282

36:                                               ; preds = %13
  %37 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 1
  %38 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 2
  %39 = tail call fastcc i32 @_ZNSt3__17__sort3IRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEjT0_S9_S9_T_(%"struct.std::__1::pair.309"* %14, %"struct.std::__1::pair.309"* %37, %"struct.std::__1::pair.309"* %38) #12
  %40 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %4, i64 -1, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 2, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = icmp ult i64 %41, %43
  br i1 %44, label %45, label %282

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %4, i64 -1
  %47 = bitcast %"struct.std::__1::pair.309"* %38 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"struct.std::__1::pair.309"* %46 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %47, align 8
  store i64 %48, i64* %49, align 8
  %51 = load i64, i64* %42, align 8
  %52 = load i64, i64* %40, align 8
  store i64 %52, i64* %42, align 8
  store i64 %51, i64* %40, align 8
  %53 = load i64, i64* %42, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 1, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %53, %55
  br i1 %56, label %57, label %282

57:                                               ; preds = %45
  %58 = bitcast %"struct.std::__1::pair.309"* %37 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = load i64, i64* %47, align 8
  store i64 %60, i64* %58, align 8
  store i64 %59, i64* %47, align 8
  store i64 %53, i64* %54, align 8
  store i64 %55, i64* %42, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = icmp ult i64 %53, %62
  br i1 %63, label %64, label %282

64:                                               ; preds = %57
  %65 = bitcast %"struct.std::__1::pair.309"* %14 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %60, i64* %65, align 8
  store i64 %66, i64* %58, align 8
  store i64 %53, i64* %61, align 8
  store i64 %62, i64* %54, align 8
  br label %282

67:                                               ; preds = %13
  %68 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 1
  %69 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 2
  %70 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 3
  %71 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %4, i64 -1
  %72 = tail call fastcc i32 @_ZNSt3__17__sort5IRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEjT0_S9_S9_S9_S9_T_(%"struct.std::__1::pair.309"* %14, %"struct.std::__1::pair.309"* %68, %"struct.std::__1::pair.309"* %69, %"struct.std::__1::pair.309"* %70, %"struct.std::__1::pair.309"* %71)
  br label %282

73:                                               ; preds = %13
  %74 = icmp slt i64 %16, 112
  br i1 %74, label %75, label %114

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 2
  %77 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 1
  %78 = tail call fastcc i32 @_ZNSt3__17__sort3IRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEjT0_S9_S9_T_(%"struct.std::__1::pair.309"* %14, %"struct.std::__1::pair.309"* %77, %"struct.std::__1::pair.309"* %76) #12
  %79 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 3
  %80 = icmp eq %"struct.std::__1::pair.309"* %79, %4
  br i1 %80, label %282, label %81

81:                                               ; preds = %75, %111
  %82 = phi %"struct.std::__1::pair.309"* [ %83, %111 ], [ %76, %75 ]
  %83 = phi %"struct.std::__1::pair.309"* [ %112, %111 ], [ %79, %75 ]
  %84 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %83, i64 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %82, i64 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = icmp ult i64 %85, %87
  br i1 %88, label %89, label %111

89:                                               ; preds = %81
  %90 = bitcast %"struct.std::__1::pair.309"* %83 to i64*
  %91 = load i64, i64* %90, align 8
  br label %92

92:                                               ; preds = %102, %89
  %93 = phi %"struct.std::__1::pair.309"* [ %82, %89 ], [ %103, %102 ]
  %94 = phi %"struct.std::__1::pair.309"* [ %83, %89 ], [ %93, %102 ]
  %95 = bitcast %"struct.std::__1::pair.309"* %93 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"struct.std::__1::pair.309"* %94 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %93, i64 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %94, i64 0, i32 1
  store i64 %99, i64* %100, align 8
  %101 = icmp eq %"struct.std::__1::pair.309"* %93, %14
  br i1 %101, label %107, label %102

102:                                              ; preds = %92
  %103 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %93, i64 -1
  %104 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %93, i64 -1, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = icmp ult i64 %85, %105
  br i1 %106, label %92, label %107

107:                                              ; preds = %92, %102
  %108 = phi %"struct.std::__1::pair.309"* [ %93, %102 ], [ %14, %92 ]
  %109 = bitcast %"struct.std::__1::pair.309"* %108 to i64*
  %110 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %108, i64 0, i32 1
  store i64 %91, i64* %109, align 8
  store i64 %85, i64* %110, align 8
  br label %111

111:                                              ; preds = %107, %81
  %112 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %83, i64 1
  %113 = icmp eq %"struct.std::__1::pair.309"* %112, %4
  br i1 %113, label %282, label %81

114:                                              ; preds = %73
  %115 = icmp sgt i64 %16, 15984
  %116 = sdiv i64 %17, 2
  %117 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 %116
  br i1 %115, label %118, label %123

118:                                              ; preds = %114
  %119 = sdiv i64 %17, 4
  %120 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 %119
  %121 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %117, i64 %119
  %122 = tail call fastcc i32 @_ZNSt3__17__sort5IRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEjT0_S9_S9_S9_S9_T_(%"struct.std::__1::pair.309"* %14, %"struct.std::__1::pair.309"* %120, %"struct.std::__1::pair.309"* %117, %"struct.std::__1::pair.309"* %121, %"struct.std::__1::pair.309"* %7)
  br label %125

123:                                              ; preds = %114
  %124 = tail call fastcc i32 @_ZNSt3__17__sort3IRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEjT0_S9_S9_T_(%"struct.std::__1::pair.309"* %14, %"struct.std::__1::pair.309"* %117, %"struct.std::__1::pair.309"* %7)
  br label %125

125:                                              ; preds = %123, %118
  %126 = phi i32 [ %122, %118 ], [ %124, %123 ]
  %127 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 0, i32 1
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 %116, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = icmp ult i64 %128, %130
  br i1 %131, label %202, label %132

132:                                              ; preds = %125, %189
  %133 = phi %"struct.std::__1::pair.309"* [ %134, %189 ], [ %7, %125 ]
  %134 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %133, i64 -1
  %135 = icmp eq %"struct.std::__1::pair.309"* %14, %134
  br i1 %135, label %136, label %189

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 1
  %138 = load i64, i64* %8, align 8
  %139 = icmp ult i64 %128, %138
  br i1 %139, label %158, label %140

140:                                              ; preds = %136
  %141 = icmp eq %"struct.std::__1::pair.309"* %137, %7
  br i1 %141, label %282, label %142

142:                                              ; preds = %140, %155
  %143 = phi %"struct.std::__1::pair.309"* [ %156, %155 ], [ %137, %140 ]
  %144 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %143, i64 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = icmp ult i64 %128, %145
  br i1 %146, label %147, label %155

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %143, i64 0, i32 1
  %149 = bitcast %"struct.std::__1::pair.309"* %143 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = load i64, i64* %9, align 8
  store i64 %151, i64* %149, align 8
  store i64 %150, i64* %9, align 8
  %152 = load i64, i64* %148, align 8
  %153 = load i64, i64* %8, align 8
  store i64 %153, i64* %148, align 8
  store i64 %152, i64* %8, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %143, i64 1
  br label %158

155:                                              ; preds = %142
  %156 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %143, i64 1
  %157 = icmp eq %"struct.std::__1::pair.309"* %156, %7
  br i1 %157, label %282, label %142

158:                                              ; preds = %147, %136
  %159 = phi %"struct.std::__1::pair.309"* [ %137, %136 ], [ %154, %147 ]
  %160 = icmp eq %"struct.std::__1::pair.309"* %159, %7
  br i1 %160, label %282, label %161

161:                                              ; preds = %158, %182
  %162 = phi %"struct.std::__1::pair.309"* [ %175, %182 ], [ %7, %158 ]
  %163 = phi %"struct.std::__1::pair.309"* [ %170, %182 ], [ %159, %158 ]
  %164 = load i64, i64* %127, align 8
  br label %165

165:                                              ; preds = %165, %161
  %166 = phi %"struct.std::__1::pair.309"* [ %163, %161 ], [ %170, %165 ]
  %167 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %166, i64 0, i32 1
  %168 = load i64, i64* %167, align 8
  %169 = icmp ult i64 %164, %168
  %170 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %166, i64 1
  br i1 %169, label %171, label %165

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %166, i64 0, i32 1
  br label %173

173:                                              ; preds = %171, %173
  %174 = phi %"struct.std::__1::pair.309"* [ %175, %173 ], [ %162, %171 ]
  %175 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %174, i64 -1
  %176 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %174, i64 -1, i32 1
  %177 = load i64, i64* %176, align 8
  %178 = icmp ult i64 %164, %177
  br i1 %178, label %173, label %179

179:                                              ; preds = %173
  %180 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %174, i64 -1, i32 1
  %181 = icmp ult %"struct.std::__1::pair.309"* %166, %175
  br i1 %181, label %182, label %13

182:                                              ; preds = %179
  %183 = bitcast %"struct.std::__1::pair.309"* %166 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = bitcast %"struct.std::__1::pair.309"* %175 to i64*
  %186 = load i64, i64* %185, align 8
  store i64 %186, i64* %183, align 8
  store i64 %184, i64* %185, align 8
  %187 = load i64, i64* %172, align 8
  %188 = load i64, i64* %180, align 8
  store i64 %188, i64* %172, align 8
  store i64 %187, i64* %180, align 8
  br label %161

189:                                              ; preds = %132
  %190 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %133, i64 -1, i32 1
  %191 = load i64, i64* %190, align 8
  %192 = icmp ult i64 %191, %130
  br i1 %192, label %193, label %132

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %133, i64 -1, i32 1
  %195 = bitcast %"struct.std::__1::pair.309"* %14 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"struct.std::__1::pair.309"* %134 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %195, align 8
  store i64 %196, i64* %197, align 8
  %199 = load i64, i64* %127, align 8
  %200 = load i64, i64* %194, align 8
  store i64 %200, i64* %127, align 8
  store i64 %199, i64* %194, align 8
  %201 = add i32 %126, 1
  br label %202

202:                                              ; preds = %125, %193
  %203 = phi %"struct.std::__1::pair.309"* [ %134, %193 ], [ %7, %125 ]
  %204 = phi i32 [ %201, %193 ], [ %126, %125 ]
  %205 = ptrtoint %"struct.std::__1::pair.309"* %14 to i64
  %206 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %14, i64 1
  %207 = icmp ult %"struct.std::__1::pair.309"* %206, %203
  br i1 %207, label %208, label %242

208:                                              ; preds = %202, %232
  %209 = phi %"struct.std::__1::pair.309"* [ %225, %232 ], [ %203, %202 ]
  %210 = phi %"struct.std::__1::pair.309"* [ %220, %232 ], [ %206, %202 ]
  %211 = phi i32 [ %239, %232 ], [ %204, %202 ]
  %212 = phi %"struct.std::__1::pair.309"* [ %241, %232 ], [ %117, %202 ]
  %213 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %212, i64 0, i32 1
  %214 = load i64, i64* %213, align 8
  br label %215

215:                                              ; preds = %215, %208
  %216 = phi %"struct.std::__1::pair.309"* [ %210, %208 ], [ %220, %215 ]
  %217 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %216, i64 0, i32 1
  %218 = load i64, i64* %217, align 8
  %219 = icmp ult i64 %218, %214
  %220 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %216, i64 1
  br i1 %219, label %215, label %221

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %216, i64 0, i32 1
  br label %223

223:                                              ; preds = %221, %223
  %224 = phi %"struct.std::__1::pair.309"* [ %225, %223 ], [ %209, %221 ]
  %225 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %224, i64 -1
  %226 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %224, i64 -1, i32 1
  %227 = load i64, i64* %226, align 8
  %228 = icmp ult i64 %227, %214
  br i1 %228, label %229, label %223

229:                                              ; preds = %223
  %230 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %224, i64 -1, i32 1
  %231 = icmp ugt %"struct.std::__1::pair.309"* %216, %225
  br i1 %231, label %242, label %232

232:                                              ; preds = %229
  %233 = bitcast %"struct.std::__1::pair.309"* %216 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"struct.std::__1::pair.309"* %225 to i64*
  %236 = load i64, i64* %235, align 8
  store i64 %236, i64* %233, align 8
  store i64 %234, i64* %235, align 8
  %237 = load i64, i64* %222, align 8
  %238 = load i64, i64* %230, align 8
  store i64 %238, i64* %222, align 8
  store i64 %237, i64* %230, align 8
  %239 = add i32 %211, 1
  %240 = icmp eq %"struct.std::__1::pair.309"* %212, %216
  %241 = select i1 %240, %"struct.std::__1::pair.309"* %225, %"struct.std::__1::pair.309"* %212
  br label %208

242:                                              ; preds = %229, %202
  %243 = phi %"struct.std::__1::pair.309"* [ %206, %202 ], [ %216, %229 ]
  %244 = phi i32 [ %204, %202 ], [ %211, %229 ]
  %245 = phi %"struct.std::__1::pair.309"* [ %117, %202 ], [ %212, %229 ]
  %246 = icmp eq %"struct.std::__1::pair.309"* %243, %245
  br i1 %246, label %261, label %247

247:                                              ; preds = %242
  %248 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %245, i64 0, i32 1
  %249 = load i64, i64* %248, align 8
  %250 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %243, i64 0, i32 1
  %251 = load i64, i64* %250, align 8
  %252 = icmp ult i64 %249, %251
  br i1 %252, label %253, label %261

253:                                              ; preds = %247
  %254 = bitcast %"struct.std::__1::pair.309"* %243 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast %"struct.std::__1::pair.309"* %245 to i64*
  %257 = load i64, i64* %256, align 8
  store i64 %257, i64* %254, align 8
  store i64 %255, i64* %256, align 8
  %258 = load i64, i64* %250, align 8
  %259 = load i64, i64* %248, align 8
  store i64 %259, i64* %250, align 8
  store i64 %258, i64* %248, align 8
  %260 = add i32 %244, 1
  br label %261

261:                                              ; preds = %242, %253, %247
  %262 = phi i32 [ %260, %253 ], [ %244, %247 ], [ %244, %242 ]
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %271

264:                                              ; preds = %261
  %265 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEbT0_S9_T_(%"struct.std::__1::pair.309"* %14, %"struct.std::__1::pair.309"* %243)
  %266 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %243, i64 1
  %267 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEbT0_S9_T_(%"struct.std::__1::pair.309"* %266, %"struct.std::__1::pair.309"* %4)
  br i1 %267, label %268, label %270

268:                                              ; preds = %264
  br i1 %265, label %282, label %269

269:                                              ; preds = %268, %280
  br label %3

270:                                              ; preds = %264
  br i1 %265, label %278, label %271

271:                                              ; preds = %270, %261
  %272 = ptrtoint %"struct.std::__1::pair.309"* %243 to i64
  %273 = sub i64 %272, %205
  %274 = sub i64 %10, %272
  %275 = icmp slt i64 %273, %274
  br i1 %275, label %276, label %280

276:                                              ; preds = %271
  tail call fastcc void @_ZNSt3__16__sortIRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEvT0_S9_T_(%"struct.std::__1::pair.309"* %14, %"struct.std::__1::pair.309"* %243)
  %277 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %243, i64 1
  br label %278

278:                                              ; preds = %276, %270
  %279 = phi %"struct.std::__1::pair.309"* [ %266, %270 ], [ %277, %276 ]
  br label %11

280:                                              ; preds = %271
  %281 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %243, i64 1
  tail call fastcc void @_ZNSt3__16__sortIRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEvT0_S9_T_(%"struct.std::__1::pair.309"* %281, %"struct.std::__1::pair.309"* %4)
  br label %269

282:                                              ; preds = %268, %158, %13, %13, %140, %155, %111, %75, %64, %57, %45, %36, %18, %24, %32, %67
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort3IRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEjT0_S9_S9_T_(%"struct.std::__1::pair.309"* nocapture, %"struct.std::__1::pair.309"* nocapture, %"struct.std::__1::pair.309"* nocapture) unnamed_addr #10 {
  %4 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %1, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  %9 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %2, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, %5
  br i1 %8, label %29, label %12

12:                                               ; preds = %3
  br i1 %11, label %13, label %50

13:                                               ; preds = %12
  %14 = bitcast %"struct.std::__1::pair.309"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"struct.std::__1::pair.309"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 %15, i64* %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = load i64, i64* %9, align 8
  store i64 %19, i64* %4, align 8
  store i64 %18, i64* %9, align 8
  %20 = load i64, i64* %4, align 8
  %21 = load i64, i64* %6, align 8
  %22 = icmp ult i64 %20, %21
  br i1 %22, label %23, label %50

23:                                               ; preds = %13
  %24 = bitcast %"struct.std::__1::pair.309"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = load i64, i64* %14, align 8
  store i64 %26, i64* %24, align 8
  store i64 %25, i64* %14, align 8
  %27 = load i64, i64* %6, align 8
  %28 = load i64, i64* %4, align 8
  store i64 %28, i64* %6, align 8
  store i64 %27, i64* %4, align 8
  br label %50

29:                                               ; preds = %3
  %30 = bitcast %"struct.std::__1::pair.309"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  br i1 %11, label %32, label %37

32:                                               ; preds = %29
  %33 = bitcast %"struct.std::__1::pair.309"* %2 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %30, align 8
  store i64 %31, i64* %33, align 8
  %35 = load i64, i64* %6, align 8
  %36 = load i64, i64* %9, align 8
  store i64 %36, i64* %6, align 8
  store i64 %35, i64* %9, align 8
  br label %50

37:                                               ; preds = %29
  %38 = bitcast %"struct.std::__1::pair.309"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %30, align 8
  store i64 %31, i64* %38, align 8
  %40 = load i64, i64* %6, align 8
  %41 = load i64, i64* %4, align 8
  store i64 %41, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  %42 = load i64, i64* %9, align 8
  %43 = icmp ult i64 %42, %40
  br i1 %43, label %44, label %50

44:                                               ; preds = %37
  %45 = load i64, i64* %38, align 8
  %46 = bitcast %"struct.std::__1::pair.309"* %2 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %38, align 8
  store i64 %45, i64* %46, align 8
  %48 = load i64, i64* %4, align 8
  %49 = load i64, i64* %9, align 8
  store i64 %49, i64* %4, align 8
  store i64 %48, i64* %9, align 8
  br label %50

50:                                               ; preds = %37, %44, %13, %23, %12, %32
  %51 = phi i32 [ 1, %32 ], [ 0, %12 ], [ 2, %23 ], [ 1, %13 ], [ 2, %44 ], [ 1, %37 ]
  ret i32 %51
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort5IRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEjT0_S9_S9_S9_S9_T_(%"struct.std::__1::pair.309"* nocapture, %"struct.std::__1::pair.309"* nocapture, %"struct.std::__1::pair.309"* nocapture, %"struct.std::__1::pair.309"* nocapture, %"struct.std::__1::pair.309"* nocapture) unnamed_addr #10 {
  %6 = tail call fastcc i32 @_ZNSt3__17__sort3IRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEjT0_S9_S9_T_(%"struct.std::__1::pair.309"* %0, %"struct.std::__1::pair.309"* %1, %"struct.std::__1::pair.309"* %2) #12
  %7 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %3, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %2, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %12, label %42

12:                                               ; preds = %5
  %13 = bitcast %"struct.std::__1::pair.309"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"struct.std::__1::pair.309"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  %17 = load i64, i64* %9, align 8
  %18 = load i64, i64* %7, align 8
  store i64 %18, i64* %9, align 8
  store i64 %17, i64* %7, align 8
  %19 = add i32 %6, 1
  %20 = load i64, i64* %9, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %1, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %20, %22
  br i1 %23, label %24, label %42

24:                                               ; preds = %12
  %25 = bitcast %"struct.std::__1::pair.309"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %13, align 8
  store i64 %27, i64* %25, align 8
  store i64 %26, i64* %13, align 8
  %28 = load i64, i64* %21, align 8
  %29 = load i64, i64* %9, align 8
  store i64 %29, i64* %21, align 8
  store i64 %28, i64* %9, align 8
  %30 = add i32 %6, 2
  %31 = load i64, i64* %21, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %35, label %42

35:                                               ; preds = %24
  %36 = bitcast %"struct.std::__1::pair.309"* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = load i64, i64* %25, align 8
  store i64 %38, i64* %36, align 8
  store i64 %37, i64* %25, align 8
  %39 = load i64, i64* %32, align 8
  %40 = load i64, i64* %21, align 8
  store i64 %40, i64* %32, align 8
  store i64 %39, i64* %21, align 8
  %41 = add i32 %6, 3
  br label %42

42:                                               ; preds = %5, %12, %24, %35
  %43 = phi i32 [ %41, %35 ], [ %30, %24 ], [ %19, %12 ], [ %6, %5 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %4, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = load i64, i64* %7, align 8
  %47 = icmp ult i64 %45, %46
  br i1 %47, label %48, label %88

48:                                               ; preds = %42
  %49 = bitcast %"struct.std::__1::pair.309"* %3 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"struct.std::__1::pair.309"* %4 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  store i64 %50, i64* %51, align 8
  %53 = load i64, i64* %7, align 8
  %54 = load i64, i64* %44, align 8
  store i64 %54, i64* %7, align 8
  store i64 %53, i64* %44, align 8
  %55 = add i32 %43, 1
  %56 = load i64, i64* %7, align 8
  %57 = load i64, i64* %9, align 8
  %58 = icmp ult i64 %56, %57
  br i1 %58, label %59, label %88

59:                                               ; preds = %48
  %60 = bitcast %"struct.std::__1::pair.309"* %2 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = load i64, i64* %49, align 8
  store i64 %62, i64* %60, align 8
  store i64 %61, i64* %49, align 8
  %63 = load i64, i64* %9, align 8
  %64 = load i64, i64* %7, align 8
  store i64 %64, i64* %9, align 8
  store i64 %63, i64* %7, align 8
  %65 = add i32 %43, 2
  %66 = load i64, i64* %9, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %1, i64 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = icmp ult i64 %66, %68
  br i1 %69, label %70, label %88

70:                                               ; preds = %59
  %71 = bitcast %"struct.std::__1::pair.309"* %1 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = load i64, i64* %60, align 8
  store i64 %73, i64* %71, align 8
  store i64 %72, i64* %60, align 8
  %74 = load i64, i64* %67, align 8
  %75 = load i64, i64* %9, align 8
  store i64 %75, i64* %67, align 8
  store i64 %74, i64* %9, align 8
  %76 = add i32 %43, 3
  %77 = load i64, i64* %67, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = icmp ult i64 %77, %79
  br i1 %80, label %81, label %88

81:                                               ; preds = %70
  %82 = bitcast %"struct.std::__1::pair.309"* %0 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = load i64, i64* %71, align 8
  store i64 %84, i64* %82, align 8
  store i64 %83, i64* %71, align 8
  %85 = load i64, i64* %78, align 8
  %86 = load i64, i64* %67, align 8
  store i64 %86, i64* %78, align 8
  store i64 %85, i64* %67, align 8
  %87 = add i32 %43, 4
  br label %88

88:                                               ; preds = %48, %70, %81, %59, %42
  %89 = phi i32 [ %87, %81 ], [ %76, %70 ], [ %65, %59 ], [ %55, %48 ], [ %43, %42 ]
  ret i32 %89
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEbT0_S9_T_(%"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"*) unnamed_addr #0 {
  %3 = ptrtoint %"struct.std::__1::pair.309"* %1 to i64
  %4 = ptrtoint %"struct.std::__1::pair.309"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 4
  switch i64 %6, label %62 [
    i64 0, label %108
    i64 1, label %108
    i64 2, label %7
    i64 3, label %21
    i64 4, label %25
    i64 5, label %56
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %1, i64 -1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %9, %11
  br i1 %12, label %13, label %108

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %1, i64 -1
  %15 = bitcast %"struct.std::__1::pair.309"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"struct.std::__1::pair.309"* %14 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  %19 = load i64, i64* %10, align 8
  %20 = load i64, i64* %8, align 8
  store i64 %20, i64* %10, align 8
  store i64 %19, i64* %8, align 8
  br label %108

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 1
  %23 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %1, i64 -1
  %24 = tail call fastcc i32 @_ZNSt3__17__sort3IRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEjT0_S9_S9_T_(%"struct.std::__1::pair.309"* %0, %"struct.std::__1::pair.309"* %22, %"struct.std::__1::pair.309"* %23)
  br label %108

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 1
  %27 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 2
  %28 = tail call fastcc i32 @_ZNSt3__17__sort3IRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEjT0_S9_S9_T_(%"struct.std::__1::pair.309"* %0, %"struct.std::__1::pair.309"* %26, %"struct.std::__1::pair.309"* %27) #12
  %29 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %1, i64 -1, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 2, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %30, %32
  br i1 %33, label %34, label %108

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %1, i64 -1
  %36 = bitcast %"struct.std::__1::pair.309"* %27 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"struct.std::__1::pair.309"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %36, align 8
  store i64 %37, i64* %38, align 8
  %40 = load i64, i64* %31, align 8
  %41 = load i64, i64* %29, align 8
  store i64 %41, i64* %31, align 8
  store i64 %40, i64* %29, align 8
  %42 = load i64, i64* %31, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 1, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = icmp ult i64 %42, %44
  br i1 %45, label %46, label %108

46:                                               ; preds = %34
  %47 = bitcast %"struct.std::__1::pair.309"* %26 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = load i64, i64* %36, align 8
  store i64 %49, i64* %47, align 8
  store i64 %48, i64* %36, align 8
  store i64 %42, i64* %43, align 8
  store i64 %44, i64* %31, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %42, %51
  br i1 %52, label %53, label %108

53:                                               ; preds = %46
  %54 = bitcast %"struct.std::__1::pair.309"* %0 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %49, i64* %54, align 8
  store i64 %55, i64* %47, align 8
  store i64 %42, i64* %50, align 8
  store i64 %51, i64* %43, align 8
  br label %108

56:                                               ; preds = %2
  %57 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 1
  %58 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 2
  %59 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 3
  %60 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %1, i64 -1
  %61 = tail call fastcc i32 @_ZNSt3__17__sort5IRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEjT0_S9_S9_S9_S9_T_(%"struct.std::__1::pair.309"* %0, %"struct.std::__1::pair.309"* %57, %"struct.std::__1::pair.309"* %58, %"struct.std::__1::pair.309"* %59, %"struct.std::__1::pair.309"* %60)
  br label %108

62:                                               ; preds = %2
  %63 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 2
  %64 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 1
  %65 = tail call fastcc i32 @_ZNSt3__17__sort3IRN12_GLOBAL__N_114CompareQualityEPNS_4pairIP11TemplateURLmEEEEjT0_S9_S9_T_(%"struct.std::__1::pair.309"* %0, %"struct.std::__1::pair.309"* %64, %"struct.std::__1::pair.309"* %63)
  %66 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %0, i64 3
  %67 = icmp eq %"struct.std::__1::pair.309"* %66, %1
  br i1 %67, label %108, label %68

68:                                               ; preds = %62, %101
  %69 = phi %"struct.std::__1::pair.309"* [ %71, %101 ], [ %63, %62 ]
  %70 = phi i32 [ %102, %101 ], [ 0, %62 ]
  %71 = phi %"struct.std::__1::pair.309"* [ %103, %101 ], [ %66, %62 ]
  %72 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %71, i64 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %69, i64 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = icmp ult i64 %73, %75
  br i1 %76, label %77, label %101

77:                                               ; preds = %68
  %78 = bitcast %"struct.std::__1::pair.309"* %71 to i64*
  %79 = load i64, i64* %78, align 8
  br label %80

80:                                               ; preds = %90, %77
  %81 = phi %"struct.std::__1::pair.309"* [ %69, %77 ], [ %91, %90 ]
  %82 = phi %"struct.std::__1::pair.309"* [ %71, %77 ], [ %81, %90 ]
  %83 = bitcast %"struct.std::__1::pair.309"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"struct.std::__1::pair.309"* %82 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %81, i64 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %82, i64 0, i32 1
  store i64 %87, i64* %88, align 8
  %89 = icmp eq %"struct.std::__1::pair.309"* %81, %0
  br i1 %89, label %95, label %90

90:                                               ; preds = %80
  %91 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %81, i64 -1
  %92 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %81, i64 -1, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = icmp ult i64 %73, %93
  br i1 %94, label %80, label %95

95:                                               ; preds = %80, %90
  %96 = phi %"struct.std::__1::pair.309"* [ %81, %90 ], [ %0, %80 ]
  %97 = bitcast %"struct.std::__1::pair.309"* %96 to i64*
  %98 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %96, i64 0, i32 1
  store i64 %79, i64* %97, align 8
  store i64 %73, i64* %98, align 8
  %99 = add i32 %70, 1
  %100 = icmp eq i32 %99, 8
  br i1 %100, label %105, label %101

101:                                              ; preds = %95, %68
  %102 = phi i32 [ %99, %95 ], [ %70, %68 ]
  %103 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %71, i64 1
  %104 = icmp eq %"struct.std::__1::pair.309"* %103, %1
  br i1 %104, label %108, label %68

105:                                              ; preds = %95
  %106 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %71, i64 1
  %107 = icmp eq %"struct.std::__1::pair.309"* %106, %1
  br label %108

108:                                              ; preds = %101, %105, %62, %53, %46, %34, %25, %7, %13, %2, %2, %56, %21
  %109 = phi i1 [ true, %56 ], [ true, %21 ], [ true, %2 ], [ true, %2 ], [ true, %13 ], [ true, %7 ], [ true, %25 ], [ true, %34 ], [ true, %46 ], [ true, %53 ], [ true, %62 ], [ %107, %105 ], [ true, %101 ]
  ret i1 %109
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI17AutocompleteMatchNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector"*, %struct.AutocompleteMatch* dereferenceable(1600)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.AutocompleteMatch** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 1600
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 11529215046068469
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %struct.AutocompleteMatch** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 1600
  %20 = icmp ult i64 %19, 5764607523034234
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 11529215046068469, %14 ]
  %28 = mul i64 %27, 1600
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %struct.AutocompleteMatch*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %struct.AutocompleteMatch* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %33, i64 %9
  %35 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %33, i64 %32
  %36 = ptrtoint %struct.AutocompleteMatch* %35 to i64
  tail call void @_ZN17AutocompleteMatchC1EOS_(%struct.AutocompleteMatch* %34, %struct.AutocompleteMatch* dereferenceable(1600) %1) #12
  %37 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %34, i64 1
  %38 = ptrtoint %struct.AutocompleteMatch* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %39, align 8
  %41 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %3, align 8
  %42 = icmp eq %struct.AutocompleteMatch* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %struct.AutocompleteMatch* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %struct.AutocompleteMatch* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %struct.AutocompleteMatch* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %46, i64 -1
  %49 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %47, i64 -1
  tail call void @_ZN17AutocompleteMatchC1EOS_(%struct.AutocompleteMatch* %48, %struct.AutocompleteMatch* dereferenceable(1600) %49) #12
  %50 = icmp eq %struct.AutocompleteMatch* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %struct.AutocompleteMatch* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %struct.AutocompleteMatch* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %struct.AutocompleteMatch* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %struct.AutocompleteMatch*
  %60 = icmp eq %struct.AutocompleteMatch* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %struct.AutocompleteMatch* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %62, i64 -1
  tail call void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch* %63) #12
  %64 = icmp eq %struct.AutocompleteMatch* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #14
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: nounwind
declare void @_ZN17AutocompleteMatchC1EOS_(%struct.AutocompleteMatch*, %struct.AutocompleteMatch* dereferenceable(1600)) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{i8 0, i8 2}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !8}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !8}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !8}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !8}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !8}
!49 = !{!50}
!50 = distinct !{!50, !51}
!51 = distinct !{!51, !"LVerDomain"}
!52 = !{!53}
!53 = distinct !{!53, !51}
!54 = distinct !{!54, !8}
!55 = distinct !{!55, !10}
!56 = distinct !{!56, !8}
!57 = !{!58}
!58 = distinct !{!58, !59}
!59 = distinct !{!59, !"LVerDomain"}
!60 = !{!61}
!61 = distinct !{!61, !59}
!62 = distinct !{!62, !8}
!63 = distinct !{!63, !10}
!64 = distinct !{!64, !10}
!65 = distinct !{!65, !8}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN15KeywordProvider31SplitReplacementStringFromInputERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEb: argument 0"}
!68 = distinct !{!68, !"_ZN15KeywordProvider31SplitReplacementStringFromInputERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEb"}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !8}
!75 = distinct !{!75, !10}
!76 = distinct !{!76, !10}
!77 = distinct !{!77, !8}
!78 = !{!"branch_weights", i32 2000, i32 1}
!79 = distinct !{!79, !10}
!80 = distinct !{!80, !10}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85}
!85 = distinct !{!85, !83}
!86 = distinct !{!86, !8}
!87 = distinct !{!87, !10}
!88 = distinct !{!88, !10}
!89 = distinct !{!89, !8}
!90 = !{!91}
!91 = distinct !{!91, !92}
!92 = distinct !{!92, !"LVerDomain"}
!93 = !{!94}
!94 = distinct !{!94, !92}
!95 = distinct !{!95, !8}
!96 = distinct !{!96, !10}
!97 = distinct !{!97, !10}
!98 = distinct !{!98, !8}
!99 = !{!100}
!100 = distinct !{!100, !101}
!101 = distinct !{!101, !"LVerDomain"}
!102 = !{!103}
!103 = distinct !{!103, !101}
!104 = distinct !{!104, !8}
!105 = distinct !{!105, !10}
!106 = distinct !{!106, !10}
!107 = distinct !{!107, !8}
!108 = !{!109}
!109 = distinct !{!109, !110}
!110 = distinct !{!110, !"LVerDomain"}
!111 = !{!112}
!112 = distinct !{!112, !110}
!113 = distinct !{!113, !8}
!114 = distinct !{!114, !10}
!115 = distinct !{!115, !10}
!116 = distinct !{!116, !8}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !8}
!123 = distinct !{!123, !10}
!124 = distinct !{!124, !10}
!125 = distinct !{!125, !8}
!126 = !{!127}
!127 = distinct !{!127, !128}
!128 = distinct !{!128, !"LVerDomain"}
!129 = !{!130}
!130 = distinct !{!130, !128}
!131 = distinct !{!131, !8}
!132 = distinct !{!132, !10}
!133 = distinct !{!133, !10}
!134 = distinct !{!134, !8}
!135 = distinct !{!135, !8}
!136 = distinct !{!136, !10}
!137 = distinct !{!137, !138, !8}
!138 = !{!"llvm.loop.unroll.runtime.disable"}
!139 = !{!140}
!140 = distinct !{!140, !141}
!141 = distinct !{!141, !"LVerDomain"}
!142 = !{!143}
!143 = distinct !{!143, !141}
!144 = distinct !{!144, !8}
!145 = distinct !{!145, !10}
!146 = distinct !{!146, !10}
!147 = distinct !{!147, !8}
!148 = !{!149}
!149 = distinct !{!149, !150}
!150 = distinct !{!150, !"LVerDomain"}
!151 = !{!152}
!152 = distinct !{!152, !150}
!153 = distinct !{!153, !8}
!154 = distinct !{!154, !10}
!155 = distinct !{!155, !10}
!156 = distinct !{!156, !8}
!157 = !{!158}
!158 = distinct !{!158, !159}
!159 = distinct !{!159, !"LVerDomain"}
!160 = !{!161}
!161 = distinct !{!161, !159}
!162 = distinct !{!162, !8}
!163 = distinct !{!163, !10}
!164 = distinct !{!164, !10}
!165 = distinct !{!165, !8}
!166 = !{!167}
!167 = distinct !{!167, !168}
!168 = distinct !{!168, !"LVerDomain"}
!169 = !{!170}
!170 = distinct !{!170, !168}
!171 = distinct !{!171, !8}
!172 = distinct !{!172, !10}
!173 = distinct !{!173, !10}
!174 = distinct !{!174, !8}
