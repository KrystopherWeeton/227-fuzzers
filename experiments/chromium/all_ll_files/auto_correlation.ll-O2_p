; ModuleID = '../../third_party/webrtc/modules/audio_processing/agc2/rnn_vad/auto_correlation.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/agc2/rnn_vad/auto_correlation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::rnn_vad::AutoCorrelationCalculator" = type { %"class.webrtc::Pffft", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr" }
%"class.webrtc::Pffft" = type { i64, i32, %struct.PFFFT_Setup*, float* }
%struct.PFFFT_Setup = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::Pffft::FloatBuffer"* }
%"class.webrtc::Pffft::FloatBuffer" = type { i64, float* }

@_ZN6webrtc7rnn_vad25AutoCorrelationCalculatorC1Ev = hidden unnamed_addr alias void (%"class.webrtc::rnn_vad::AutoCorrelationCalculator"*), void (%"class.webrtc::rnn_vad::AutoCorrelationCalculator"*)* @_ZN6webrtc7rnn_vad25AutoCorrelationCalculatorC2Ev
@_ZN6webrtc7rnn_vad25AutoCorrelationCalculatorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::rnn_vad::AutoCorrelationCalculator"*), void (%"class.webrtc::rnn_vad::AutoCorrelationCalculator"*)* @_ZN6webrtc7rnn_vad25AutoCorrelationCalculatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7rnn_vad25AutoCorrelationCalculatorC2Ev(%"class.webrtc::rnn_vad::AutoCorrelationCalculator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rnn_vad::AutoCorrelationCalculator", %"class.webrtc::rnn_vad::AutoCorrelationCalculator"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc5PffftC1EmNS0_7FftTypeE(%"class.webrtc::Pffft"* %2, i64 512, i32 0) #5
  %3 = tail call %"class.webrtc::Pffft::FloatBuffer"* @_ZNK6webrtc5Pffft12CreateBufferEv(%"class.webrtc::Pffft"* %2) #5
  %4 = getelementptr inbounds %"class.webrtc::rnn_vad::AutoCorrelationCalculator", %"class.webrtc::rnn_vad::AutoCorrelationCalculator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.webrtc::Pffft::FloatBuffer"* %3, %"class.webrtc::Pffft::FloatBuffer"** %4, align 8
  %5 = tail call %"class.webrtc::Pffft::FloatBuffer"* @_ZNK6webrtc5Pffft12CreateBufferEv(%"class.webrtc::Pffft"* %2) #5
  %6 = getelementptr inbounds %"class.webrtc::rnn_vad::AutoCorrelationCalculator", %"class.webrtc::rnn_vad::AutoCorrelationCalculator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.webrtc::Pffft::FloatBuffer"* %5, %"class.webrtc::Pffft::FloatBuffer"** %6, align 8
  %7 = tail call %"class.webrtc::Pffft::FloatBuffer"* @_ZNK6webrtc5Pffft12CreateBufferEv(%"class.webrtc::Pffft"* %2) #5
  %8 = getelementptr inbounds %"class.webrtc::rnn_vad::AutoCorrelationCalculator", %"class.webrtc::rnn_vad::AutoCorrelationCalculator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.webrtc::Pffft::FloatBuffer"* %7, %"class.webrtc::Pffft::FloatBuffer"** %8, align 8
  ret void
}

declare void @_ZN6webrtc5PffftC1EmNS0_7FftTypeE(%"class.webrtc::Pffft"*, i64, i32) unnamed_addr #1

declare %"class.webrtc::Pffft::FloatBuffer"* @_ZNK6webrtc5Pffft12CreateBufferEv(%"class.webrtc::Pffft"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7rnn_vad25AutoCorrelationCalculatorD2Ev(%"class.webrtc::rnn_vad::AutoCorrelationCalculator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rnn_vad::AutoCorrelationCalculator", %"class.webrtc::rnn_vad::AutoCorrelationCalculator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::Pffft::FloatBuffer"*, %"class.webrtc::Pffft::FloatBuffer"** %2, align 8
  store %"class.webrtc::Pffft::FloatBuffer"* null, %"class.webrtc::Pffft::FloatBuffer"** %2, align 8
  %4 = icmp eq %"class.webrtc::Pffft::FloatBuffer"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN6webrtc5Pffft11FloatBufferD1Ev(%"class.webrtc::Pffft::FloatBuffer"* nonnull %3) #5
  %6 = bitcast %"class.webrtc::Pffft::FloatBuffer"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #6
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.webrtc::rnn_vad::AutoCorrelationCalculator", %"class.webrtc::rnn_vad::AutoCorrelationCalculator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.webrtc::Pffft::FloatBuffer"*, %"class.webrtc::Pffft::FloatBuffer"** %8, align 8
  store %"class.webrtc::Pffft::FloatBuffer"* null, %"class.webrtc::Pffft::FloatBuffer"** %8, align 8
  %10 = icmp eq %"class.webrtc::Pffft::FloatBuffer"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN6webrtc5Pffft11FloatBufferD1Ev(%"class.webrtc::Pffft::FloatBuffer"* nonnull %9) #5
  %12 = bitcast %"class.webrtc::Pffft::FloatBuffer"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #6
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.webrtc::rnn_vad::AutoCorrelationCalculator", %"class.webrtc::rnn_vad::AutoCorrelationCalculator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.webrtc::Pffft::FloatBuffer"*, %"class.webrtc::Pffft::FloatBuffer"** %14, align 8
  store %"class.webrtc::Pffft::FloatBuffer"* null, %"class.webrtc::Pffft::FloatBuffer"** %14, align 8
  %16 = icmp eq %"class.webrtc::Pffft::FloatBuffer"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  tail call void @_ZN6webrtc5Pffft11FloatBufferD1Ev(%"class.webrtc::Pffft::FloatBuffer"* nonnull %15) #5
  %18 = bitcast %"class.webrtc::Pffft::FloatBuffer"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #6
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.webrtc::rnn_vad::AutoCorrelationCalculator", %"class.webrtc::rnn_vad::AutoCorrelationCalculator"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc5PffftD1Ev(%"class.webrtc::Pffft"* %20) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6webrtc5PffftD1Ev(%"class.webrtc::Pffft"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7rnn_vad25AutoCorrelationCalculator20ComputeOnPitchBufferEN3rtc9ArrayViewIKfLl432EEENS3_IfLl147EEE(%"class.webrtc::rnn_vad::AutoCorrelationCalculator"*, float*, float*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::rnn_vad::AutoCorrelationCalculator", %"class.webrtc::rnn_vad::AutoCorrelationCalculator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.webrtc::Pffft::FloatBuffer"*, %"class.webrtc::Pffft::FloatBuffer"** %4, align 8
  %6 = tail call { float*, i64 } @_ZN6webrtc5Pffft11FloatBuffer7GetViewEv(%"class.webrtc::Pffft::FloatBuffer"* %5) #5
  %7 = extractvalue { float*, i64 } %6, 0
  %8 = bitcast float* %7 to i8*
  %9 = getelementptr float, float* %7, i64 240
  %10 = getelementptr float, float* %1, i64 192
  %11 = getelementptr float, float* %1, i64 432
  %12 = icmp ult float* %7, %11
  %13 = icmp ult float* %10, %9
  %14 = and i1 %12, %13
  br i1 %14, label %66, label %15

15:                                               ; preds = %3, %15
  %16 = phi i64 [ %64, %15 ], [ 0, %3 ]
  %17 = getelementptr float, float* %7, i64 %16
  %18 = sub nuw nsw i64 431, %16
  %19 = getelementptr inbounds float, float* %1, i64 %18
  %20 = getelementptr inbounds float, float* %19, i64 -3
  %21 = bitcast float* %20 to <4 x i32>*
  %22 = load <4 x i32>, <4 x i32>* %21, align 4, !alias.scope !2
  %23 = shufflevector <4 x i32> %22, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %24 = getelementptr inbounds float, float* %19, i64 -4
  %25 = getelementptr inbounds float, float* %24, i64 -3
  %26 = bitcast float* %25 to <4 x i32>*
  %27 = load <4 x i32>, <4 x i32>* %26, align 4, !alias.scope !2
  %28 = shufflevector <4 x i32> %27, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %29 = bitcast float* %17 to <4 x i32>*
  store <4 x i32> %23, <4 x i32>* %29, align 4, !alias.scope !5, !noalias !2
  %30 = getelementptr float, float* %17, i64 4
  %31 = bitcast float* %30 to <4 x i32>*
  store <4 x i32> %28, <4 x i32>* %31, align 4, !alias.scope !5, !noalias !2
  %32 = add nuw nsw i64 %16, 8
  %33 = getelementptr float, float* %7, i64 %32
  %34 = sub nsw i64 423, %16
  %35 = getelementptr inbounds float, float* %1, i64 %34
  %36 = getelementptr inbounds float, float* %35, i64 -3
  %37 = bitcast float* %36 to <4 x i32>*
  %38 = load <4 x i32>, <4 x i32>* %37, align 4, !alias.scope !2
  %39 = shufflevector <4 x i32> %38, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %40 = getelementptr inbounds float, float* %35, i64 -4
  %41 = getelementptr inbounds float, float* %40, i64 -3
  %42 = bitcast float* %41 to <4 x i32>*
  %43 = load <4 x i32>, <4 x i32>* %42, align 4, !alias.scope !2
  %44 = shufflevector <4 x i32> %43, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %45 = bitcast float* %33 to <4 x i32>*
  store <4 x i32> %39, <4 x i32>* %45, align 4, !alias.scope !5, !noalias !2
  %46 = getelementptr float, float* %33, i64 4
  %47 = bitcast float* %46 to <4 x i32>*
  store <4 x i32> %44, <4 x i32>* %47, align 4, !alias.scope !5, !noalias !2
  %48 = add nuw nsw i64 %16, 16
  %49 = getelementptr float, float* %7, i64 %48
  %50 = sub nsw i64 415, %16
  %51 = getelementptr inbounds float, float* %1, i64 %50
  %52 = getelementptr inbounds float, float* %51, i64 -3
  %53 = bitcast float* %52 to <4 x i32>*
  %54 = load <4 x i32>, <4 x i32>* %53, align 4, !alias.scope !2
  %55 = shufflevector <4 x i32> %54, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %56 = getelementptr inbounds float, float* %51, i64 -4
  %57 = getelementptr inbounds float, float* %56, i64 -3
  %58 = bitcast float* %57 to <4 x i32>*
  %59 = load <4 x i32>, <4 x i32>* %58, align 4, !alias.scope !2
  %60 = shufflevector <4 x i32> %59, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %61 = bitcast float* %49 to <4 x i32>*
  store <4 x i32> %55, <4 x i32>* %61, align 4, !alias.scope !5, !noalias !2
  %62 = getelementptr float, float* %49, i64 4
  %63 = bitcast float* %62 to <4 x i32>*
  store <4 x i32> %60, <4 x i32>* %63, align 4, !alias.scope !5, !noalias !2
  %64 = add nuw nsw i64 %16, 24
  %65 = icmp eq i64 %64, 240
  br i1 %65, label %118, label %15, !llvm.loop !7

66:                                               ; preds = %3, %66
  %67 = phi float* [ %116, %66 ], [ %7, %3 ]
  %68 = phi i64 [ %111, %66 ], [ 432, %3 ]
  %69 = add nsw i64 %68, -1
  %70 = getelementptr inbounds float, float* %1, i64 %69
  %71 = bitcast float* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = bitcast float* %67 to i32*
  store i32 %72, i32* %73, align 4
  %74 = getelementptr inbounds float, float* %67, i64 1
  %75 = add nsw i64 %68, -2
  %76 = getelementptr inbounds float, float* %1, i64 %75
  %77 = bitcast float* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = bitcast float* %74 to i32*
  store i32 %78, i32* %79, align 4
  %80 = getelementptr inbounds float, float* %67, i64 2
  %81 = add nsw i64 %68, -3
  %82 = getelementptr inbounds float, float* %1, i64 %81
  %83 = bitcast float* %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = bitcast float* %80 to i32*
  store i32 %84, i32* %85, align 4
  %86 = getelementptr inbounds float, float* %67, i64 3
  %87 = add nsw i64 %68, -4
  %88 = getelementptr inbounds float, float* %1, i64 %87
  %89 = bitcast float* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = bitcast float* %86 to i32*
  store i32 %90, i32* %91, align 4
  %92 = getelementptr inbounds float, float* %67, i64 4
  %93 = add nsw i64 %68, -5
  %94 = getelementptr inbounds float, float* %1, i64 %93
  %95 = bitcast float* %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = bitcast float* %92 to i32*
  store i32 %96, i32* %97, align 4
  %98 = getelementptr inbounds float, float* %67, i64 5
  %99 = add nsw i64 %68, -6
  %100 = getelementptr inbounds float, float* %1, i64 %99
  %101 = bitcast float* %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = bitcast float* %98 to i32*
  store i32 %102, i32* %103, align 4
  %104 = getelementptr inbounds float, float* %67, i64 6
  %105 = add nsw i64 %68, -7
  %106 = getelementptr inbounds float, float* %1, i64 %105
  %107 = bitcast float* %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = bitcast float* %104 to i32*
  store i32 %108, i32* %109, align 4
  %110 = getelementptr inbounds float, float* %67, i64 7
  %111 = add nsw i64 %68, -8
  %112 = getelementptr inbounds float, float* %1, i64 %111
  %113 = bitcast float* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = bitcast float* %110 to i32*
  store i32 %114, i32* %115, align 4
  %116 = getelementptr inbounds float, float* %67, i64 8
  %117 = icmp eq i64 %111, 192
  br i1 %117, label %118, label %66, !llvm.loop !9

118:                                              ; preds = %15, %66
  %119 = extractvalue { float*, i64 } %6, 1
  %120 = shl i64 %119, 2
  %121 = add i64 %120, -960
  %122 = icmp sgt i64 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %118
  %124 = getelementptr inbounds float, float* %7, i64 240
  %125 = bitcast float* %124 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %125, i8 0, i64 %121, i1 false)
  br label %126

126:                                              ; preds = %123, %118
  %127 = getelementptr inbounds %"class.webrtc::rnn_vad::AutoCorrelationCalculator", %"class.webrtc::rnn_vad::AutoCorrelationCalculator"* %0, i64 0, i32 0
  %128 = load %"class.webrtc::Pffft::FloatBuffer"*, %"class.webrtc::Pffft::FloatBuffer"** %4, align 8
  %129 = getelementptr inbounds %"class.webrtc::rnn_vad::AutoCorrelationCalculator", %"class.webrtc::rnn_vad::AutoCorrelationCalculator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %130 = load %"class.webrtc::Pffft::FloatBuffer"*, %"class.webrtc::Pffft::FloatBuffer"** %129, align 8
  tail call void @_ZN6webrtc5Pffft16ForwardTransformERKNS0_11FloatBufferEPS1_b(%"class.webrtc::Pffft"* %127, %"class.webrtc::Pffft::FloatBuffer"* dereferenceable(16) %128, %"class.webrtc::Pffft::FloatBuffer"* %130, i1 zeroext false) #5
  %131 = bitcast float* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %131, i64 1548, i1 false) #5
  %132 = add i64 %120, -1548
  %133 = icmp sgt i64 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %126
  %135 = getelementptr inbounds float, float* %7, i64 387
  %136 = bitcast float* %135 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %136, i8 0, i64 %132, i1 false)
  br label %137

137:                                              ; preds = %134, %126
  %138 = load %"class.webrtc::Pffft::FloatBuffer"*, %"class.webrtc::Pffft::FloatBuffer"** %4, align 8
  %139 = getelementptr inbounds %"class.webrtc::rnn_vad::AutoCorrelationCalculator", %"class.webrtc::rnn_vad::AutoCorrelationCalculator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %140 = load %"class.webrtc::Pffft::FloatBuffer"*, %"class.webrtc::Pffft::FloatBuffer"** %139, align 8
  tail call void @_ZN6webrtc5Pffft16ForwardTransformERKNS0_11FloatBufferEPS1_b(%"class.webrtc::Pffft"* %127, %"class.webrtc::Pffft::FloatBuffer"* dereferenceable(16) %138, %"class.webrtc::Pffft::FloatBuffer"* %140, i1 zeroext false) #5
  %141 = icmp sgt i64 %120, 0
  br i1 %141, label %142, label %148

142:                                              ; preds = %137
  %143 = icmp slt i64 %119, 1
  %144 = select i1 %143, i64 %119, i64 1
  %145 = shl i64 %144, 2
  %146 = add i64 %145, -4
  %147 = sub i64 %120, %146
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 %147, i1 false)
  br label %148

148:                                              ; preds = %142, %137
  %149 = load %"class.webrtc::Pffft::FloatBuffer"*, %"class.webrtc::Pffft::FloatBuffer"** %139, align 8
  %150 = load %"class.webrtc::Pffft::FloatBuffer"*, %"class.webrtc::Pffft::FloatBuffer"** %129, align 8
  %151 = load %"class.webrtc::Pffft::FloatBuffer"*, %"class.webrtc::Pffft::FloatBuffer"** %4, align 8
  tail call void @_ZN6webrtc5Pffft23FrequencyDomainConvolveERKNS0_11FloatBufferES3_PS1_f(%"class.webrtc::Pffft"* %127, %"class.webrtc::Pffft::FloatBuffer"* dereferenceable(16) %149, %"class.webrtc::Pffft::FloatBuffer"* dereferenceable(16) %150, %"class.webrtc::Pffft::FloatBuffer"* %151, float 0x3F60000000000000) #5
  %152 = load %"class.webrtc::Pffft::FloatBuffer"*, %"class.webrtc::Pffft::FloatBuffer"** %4, align 8
  tail call void @_ZN6webrtc5Pffft17BackwardTransformERKNS0_11FloatBufferEPS1_b(%"class.webrtc::Pffft"* %127, %"class.webrtc::Pffft::FloatBuffer"* dereferenceable(16) %152, %"class.webrtc::Pffft::FloatBuffer"* %152, i1 zeroext false) #5
  %153 = getelementptr inbounds float, float* %7, i64 239
  %154 = bitcast float* %2 to i8*
  %155 = bitcast float* %153 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %154, i8* align 4 %155, i64 588, i1 false) #5
  ret void
}

declare { float*, i64 } @_ZN6webrtc5Pffft11FloatBuffer7GetViewEv(%"class.webrtc::Pffft::FloatBuffer"*) local_unnamed_addr #1

declare void @_ZN6webrtc5Pffft16ForwardTransformERKNS0_11FloatBufferEPS1_b(%"class.webrtc::Pffft"*, %"class.webrtc::Pffft::FloatBuffer"* dereferenceable(16), %"class.webrtc::Pffft::FloatBuffer"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN6webrtc5Pffft23FrequencyDomainConvolveERKNS0_11FloatBufferES3_PS1_f(%"class.webrtc::Pffft"*, %"class.webrtc::Pffft::FloatBuffer"* dereferenceable(16), %"class.webrtc::Pffft::FloatBuffer"* dereferenceable(16), %"class.webrtc::Pffft::FloatBuffer"*, float) local_unnamed_addr #1

declare void @_ZN6webrtc5Pffft17BackwardTransformERKNS0_11FloatBufferEPS1_b(%"class.webrtc::Pffft"*, %"class.webrtc::Pffft::FloatBuffer"* dereferenceable(16), %"class.webrtc::Pffft::FloatBuffer"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6webrtc5Pffft11FloatBufferD1Ev(%"class.webrtc::Pffft::FloatBuffer"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !8}
