; ModuleID = '../../third_party/libpng/pngwtran.c'
source_filename = "../../third_party/libpng/pngwtran.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.png_struct_def = type { [1 x %struct.__jmp_buf_tag], void (%struct.__jmp_buf_tag*, i32)*, [1 x %struct.__jmp_buf_tag]*, i64, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*, i8*, void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)*, i8*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, i8*, i8, i8, i32, i32, i32, i32, %struct.z_stream_s, %struct.png_compression_buffer*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i32, i32, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i32, %struct.png_color_16_struct, %struct.png_color_16_struct, void (%struct.png_struct_def*)*, i32, i32, i32, i32, i8*, i16**, i8*, i8*, i16**, i16**, %struct.png_color_8_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, i8*, i8*, i8*, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i32, i32, i8*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32, i32, i8*, i8, i8, i16, i16, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*, i8*, i8, i32, i32, i32, i64, %struct.png_unknown_chunk_t, i64, i8*, i64, i32, i8*, [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], %struct.png_colorspace }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%struct.png_compression_buffer = type { %struct.png_compression_buffer*, [1 x i8] }
%struct.png_color_struct = type { i8, i8, i8 }
%struct.png_color_8_struct = type { i8, i8, i8, i8, i8 }
%struct.png_color_16_struct = type { i8, i16, i16, i16, i16 }
%struct.png_info_def = type { i32, i32, i32, i64, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], %struct.png_colorspace, i8*, i8*, i32, i32, i32, %struct.png_text_struct*, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, %struct.png_color_16_struct, i32, %struct.png_unknown_chunk_t*, i32, i8** }
%struct.png_text_struct = type { i32, i8*, i8*, i64, i64, i8*, i8* }
%struct.png_unknown_chunk_t = type { [5 x i8], i8*, i64, i8 }
%struct.png_colorspace = type { i32, %struct.png_xy, %struct.png_XYZ, i16, i16 }
%struct.png_xy = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_XYZ = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_row_info_struct = type { i32, i64, i8, i8, i8, i8 }

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_do_write_transformations(%struct.png_struct_def* noalias, %struct.png_row_info_struct*) local_unnamed_addr #0 {
  %3 = alloca [4 x i32], align 16
  %4 = alloca [4 x i32], align 16
  %5 = icmp eq %struct.png_struct_def* %0, null
  br i1 %5, label %631, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1048576
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 11
  %13 = load void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %12, align 8
  %14 = icmp eq void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 46
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 1
  tail call void %13(%struct.png_struct_def* nonnull %0, %struct.png_row_info_struct* %1, i8* %18) #3
  %19 = load i32, i32* %7, align 4
  br label %20

20:                                               ; preds = %11, %6, %15
  %21 = phi i32 [ %8, %11 ], [ %8, %6 ], [ %19, %15 ]
  %22 = trunc i32 %21 to i16
  %23 = icmp slt i16 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 46
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %29 = load i32, i32* %28, align 8
  %30 = lshr i32 %29, 7
  %31 = and i32 %30, 1
  %32 = xor i32 %31, 1
  tail call void @cr_png_do_strip_channel(%struct.png_row_info_struct* %1, i8* %27, i32 %32) #3
  %33 = load i32, i32* %7, align 4
  br label %34

34:                                               ; preds = %24, %20
  %35 = phi i32 [ %33, %24 ], [ %21, %20 ]
  %36 = and i32 %35, 65536
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 46
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 1
  tail call void @cr_png_do_packswap(%struct.png_row_info_struct* %1, i8* %41) #3
  %42 = load i32, i32* %7, align 4
  br label %43

43:                                               ; preds = %34, %38
  %44 = phi i32 [ %35, %34 ], [ %42, %38 ]
  %45 = and i32 %44, 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %274, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 46
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 1
  %51 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 61
  %52 = load i8, i8* %51, align 2
  %53 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 8
  br i1 %55, label %56, label %274

56:                                               ; preds = %47
  %57 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  %58 = load i8, i8* %57, align 2
  %59 = icmp eq i8 %58, 1
  br i1 %59, label %60, label %274

60:                                               ; preds = %56
  switch i8 %52, label %254 [
    i8 1, label %61
    i8 2, label %124
    i8 4, label %189
  ]

61:                                               ; preds = %60
  %62 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %254, label %65

65:                                               ; preds = %61
  %66 = and i32 %63, 1
  %67 = icmp eq i32 %63, 1
  br i1 %67, label %97, label %68

68:                                               ; preds = %65
  %69 = sub i32 %63, %66
  br label %70

70:                                               ; preds = %637, %68
  %71 = phi i8* [ %50, %68 ], [ %95, %637 ]
  %72 = phi i8* [ %50, %68 ], [ %640, %637 ]
  %73 = phi i32 [ 0, %68 ], [ %639, %637 ]
  %74 = phi i32 [ 128, %68 ], [ %638, %637 ]
  %75 = phi i32 [ %69, %68 ], [ %641, %637 ]
  %76 = load i8, i8* %71, align 1
  %77 = icmp eq i8 %76, 0
  %78 = select i1 %77, i32 0, i32 %74
  %79 = or i32 %78, %73
  %80 = getelementptr inbounds i8, i8* %71, i64 1
  %81 = icmp ugt i32 %74, 1
  br i1 %81, label %82, label %84

82:                                               ; preds = %70
  %83 = lshr i32 %74, 1
  br label %87

84:                                               ; preds = %70
  %85 = trunc i32 %79 to i8
  store i8 %85, i8* %72, align 1
  %86 = getelementptr inbounds i8, i8* %72, i64 1
  br label %87

87:                                               ; preds = %84, %82
  %88 = phi i32 [ %83, %82 ], [ 128, %84 ]
  %89 = phi i32 [ %79, %82 ], [ 0, %84 ]
  %90 = phi i8* [ %72, %82 ], [ %86, %84 ]
  %91 = load i8, i8* %80, align 1
  %92 = icmp eq i8 %91, 0
  %93 = select i1 %92, i32 0, i32 %88
  %94 = or i32 %93, %89
  %95 = getelementptr inbounds i8, i8* %71, i64 2
  %96 = icmp ugt i32 %88, 1
  br i1 %96, label %635, label %632

97:                                               ; preds = %637, %65
  %98 = phi i32 [ undef, %65 ], [ %638, %637 ]
  %99 = phi i32 [ undef, %65 ], [ %639, %637 ]
  %100 = phi i8* [ undef, %65 ], [ %640, %637 ]
  %101 = phi i8* [ %50, %65 ], [ %95, %637 ]
  %102 = phi i8* [ %50, %65 ], [ %640, %637 ]
  %103 = phi i32 [ 0, %65 ], [ %639, %637 ]
  %104 = phi i32 [ 128, %65 ], [ %638, %637 ]
  %105 = icmp eq i32 %66, 0
  br i1 %105, label %117, label %106

106:                                              ; preds = %97
  %107 = load i8, i8* %101, align 1
  %108 = icmp eq i8 %107, 0
  %109 = select i1 %108, i32 0, i32 %104
  %110 = or i32 %109, %103
  %111 = icmp ugt i32 %104, 1
  br i1 %111, label %115, label %112

112:                                              ; preds = %106
  %113 = trunc i32 %110 to i8
  store i8 %113, i8* %102, align 1
  %114 = getelementptr inbounds i8, i8* %102, i64 1
  br label %117

115:                                              ; preds = %106
  %116 = lshr i32 %104, 1
  br label %117

117:                                              ; preds = %115, %112, %97
  %118 = phi i32 [ %98, %97 ], [ %116, %115 ], [ 128, %112 ]
  %119 = phi i32 [ %99, %97 ], [ %110, %115 ], [ 0, %112 ]
  %120 = phi i8* [ %100, %97 ], [ %102, %115 ], [ %114, %112 ]
  %121 = icmp eq i32 %118, 128
  br i1 %121, label %254, label %122

122:                                              ; preds = %117
  %123 = trunc i32 %119 to i8
  store i8 %123, i8* %120, align 1
  br label %254

124:                                              ; preds = %60
  %125 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %254, label %128

128:                                              ; preds = %124
  %129 = and i32 %126, 1
  %130 = icmp eq i32 %126, 1
  br i1 %130, label %161, label %131

131:                                              ; preds = %128
  %132 = sub i32 %126, %129
  br label %133

133:                                              ; preds = %648, %131
  %134 = phi i32 [ 0, %131 ], [ %651, %648 ]
  %135 = phi i32 [ 6, %131 ], [ %650, %648 ]
  %136 = phi i8* [ %50, %131 ], [ %649, %648 ]
  %137 = phi i8* [ %50, %131 ], [ %652, %648 ]
  %138 = phi i32 [ %132, %131 ], [ %653, %648 ]
  %139 = load i8, i8* %137, align 1
  %140 = and i8 %139, 3
  %141 = zext i8 %140 to i32
  %142 = shl i32 %141, %135
  %143 = or i32 %142, %134
  %144 = icmp eq i32 %135, 0
  br i1 %144, label %145, label %148

145:                                              ; preds = %133
  %146 = trunc i32 %143 to i8
  store i8 %146, i8* %136, align 1
  %147 = getelementptr inbounds i8, i8* %136, i64 1
  br label %150

148:                                              ; preds = %133
  %149 = add i32 %135, -2
  br label %150

150:                                              ; preds = %148, %145
  %151 = phi i8* [ %147, %145 ], [ %136, %148 ]
  %152 = phi i32 [ 6, %145 ], [ %149, %148 ]
  %153 = phi i32 [ 0, %145 ], [ %143, %148 ]
  %154 = getelementptr inbounds i8, i8* %137, i64 1
  %155 = load i8, i8* %154, align 1
  %156 = and i8 %155, 3
  %157 = zext i8 %156 to i32
  %158 = shl i32 %157, %152
  %159 = or i32 %158, %153
  %160 = icmp eq i32 %152, 0
  br i1 %160, label %645, label %643

161:                                              ; preds = %648, %128
  %162 = phi i8* [ undef, %128 ], [ %649, %648 ]
  %163 = phi i32 [ undef, %128 ], [ %650, %648 ]
  %164 = phi i32 [ undef, %128 ], [ %651, %648 ]
  %165 = phi i32 [ 0, %128 ], [ %651, %648 ]
  %166 = phi i32 [ 6, %128 ], [ %650, %648 ]
  %167 = phi i8* [ %50, %128 ], [ %649, %648 ]
  %168 = phi i8* [ %50, %128 ], [ %652, %648 ]
  %169 = icmp eq i32 %129, 0
  br i1 %169, label %182, label %170

170:                                              ; preds = %161
  %171 = load i8, i8* %168, align 1
  %172 = and i8 %171, 3
  %173 = zext i8 %172 to i32
  %174 = shl i32 %173, %166
  %175 = or i32 %174, %165
  %176 = icmp eq i32 %166, 0
  br i1 %176, label %179, label %177

177:                                              ; preds = %170
  %178 = add i32 %166, -2
  br label %182

179:                                              ; preds = %170
  %180 = trunc i32 %175 to i8
  store i8 %180, i8* %167, align 1
  %181 = getelementptr inbounds i8, i8* %167, i64 1
  br label %182

182:                                              ; preds = %179, %177, %161
  %183 = phi i8* [ %162, %161 ], [ %181, %179 ], [ %167, %177 ]
  %184 = phi i32 [ %163, %161 ], [ 6, %179 ], [ %178, %177 ]
  %185 = phi i32 [ %164, %161 ], [ 0, %179 ], [ %175, %177 ]
  %186 = icmp eq i32 %184, 6
  br i1 %186, label %254, label %187

187:                                              ; preds = %182
  %188 = trunc i32 %185 to i8
  store i8 %188, i8* %183, align 1
  br label %254

189:                                              ; preds = %60
  %190 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %191 = load i32, i32* %190, align 8
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %254, label %193

193:                                              ; preds = %189
  %194 = and i32 %191, 1
  %195 = icmp eq i32 %191, 1
  br i1 %195, label %226, label %196

196:                                              ; preds = %193
  %197 = sub i32 %191, %194
  br label %198

198:                                              ; preds = %660, %196
  %199 = phi i32 [ 0, %196 ], [ %663, %660 ]
  %200 = phi i32 [ 4, %196 ], [ %662, %660 ]
  %201 = phi i8* [ %50, %196 ], [ %661, %660 ]
  %202 = phi i8* [ %50, %196 ], [ %664, %660 ]
  %203 = phi i32 [ %197, %196 ], [ %665, %660 ]
  %204 = load i8, i8* %202, align 1
  %205 = and i8 %204, 15
  %206 = zext i8 %205 to i32
  %207 = shl i32 %206, %200
  %208 = or i32 %207, %199
  %209 = icmp eq i32 %200, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %198
  %211 = trunc i32 %208 to i8
  store i8 %211, i8* %201, align 1
  %212 = getelementptr inbounds i8, i8* %201, i64 1
  br label %215

213:                                              ; preds = %198
  %214 = add i32 %200, -4
  br label %215

215:                                              ; preds = %213, %210
  %216 = phi i8* [ %212, %210 ], [ %201, %213 ]
  %217 = phi i32 [ 4, %210 ], [ %214, %213 ]
  %218 = phi i32 [ 0, %210 ], [ %208, %213 ]
  %219 = getelementptr inbounds i8, i8* %202, i64 1
  %220 = load i8, i8* %219, align 1
  %221 = and i8 %220, 15
  %222 = zext i8 %221 to i32
  %223 = shl i32 %222, %217
  %224 = or i32 %223, %218
  %225 = icmp eq i32 %217, 0
  br i1 %225, label %657, label %655

226:                                              ; preds = %660, %193
  %227 = phi i8* [ undef, %193 ], [ %661, %660 ]
  %228 = phi i32 [ undef, %193 ], [ %662, %660 ]
  %229 = phi i32 [ undef, %193 ], [ %663, %660 ]
  %230 = phi i32 [ 0, %193 ], [ %663, %660 ]
  %231 = phi i32 [ 4, %193 ], [ %662, %660 ]
  %232 = phi i8* [ %50, %193 ], [ %661, %660 ]
  %233 = phi i8* [ %50, %193 ], [ %664, %660 ]
  %234 = icmp eq i32 %194, 0
  br i1 %234, label %247, label %235

235:                                              ; preds = %226
  %236 = load i8, i8* %233, align 1
  %237 = and i8 %236, 15
  %238 = zext i8 %237 to i32
  %239 = shl i32 %238, %231
  %240 = or i32 %239, %230
  %241 = icmp eq i32 %231, 0
  br i1 %241, label %244, label %242

242:                                              ; preds = %235
  %243 = add i32 %231, -4
  br label %247

244:                                              ; preds = %235
  %245 = trunc i32 %240 to i8
  store i8 %245, i8* %232, align 1
  %246 = getelementptr inbounds i8, i8* %232, i64 1
  br label %247

247:                                              ; preds = %244, %242, %226
  %248 = phi i8* [ %227, %226 ], [ %246, %244 ], [ %232, %242 ]
  %249 = phi i32 [ %228, %226 ], [ 4, %244 ], [ %243, %242 ]
  %250 = phi i32 [ %229, %226 ], [ 0, %244 ], [ %240, %242 ]
  %251 = icmp eq i32 %249, 4
  br i1 %251, label %254, label %252

252:                                              ; preds = %247
  %253 = trunc i32 %250 to i8
  store i8 %253, i8* %248, align 1
  br label %254

254:                                              ; preds = %252, %247, %189, %187, %182, %124, %122, %117, %61, %60
  store i8 %52, i8* %53, align 1
  %255 = load i8, i8* %57, align 2
  %256 = mul i8 %255, %52
  %257 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 %256, i8* %257, align 1
  %258 = icmp ugt i8 %256, 7
  %259 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %260 = load i32, i32* %259, align 8
  %261 = zext i32 %260 to i64
  %262 = zext i8 %256 to i64
  br i1 %258, label %263, label %266

263:                                              ; preds = %254
  %264 = lshr i64 %262, 3
  %265 = mul nuw nsw i64 %264, %261
  br label %270

266:                                              ; preds = %254
  %267 = mul nuw nsw i64 %261, %262
  %268 = add nuw nsw i64 %267, 7
  %269 = lshr i64 %268, 3
  br label %270

270:                                              ; preds = %266, %263
  %271 = phi i64 [ %265, %263 ], [ %269, %266 ]
  %272 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  store i64 %271, i64* %272, align 8
  %273 = load i32, i32* %7, align 4
  br label %274

274:                                              ; preds = %270, %56, %47, %43
  %275 = phi i32 [ %273, %270 ], [ %44, %56 ], [ %44, %47 ], [ %44, %43 ]
  %276 = and i32 %275, 16
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %283, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 46
  %280 = load i8*, i8** %279, align 8
  %281 = getelementptr inbounds i8, i8* %280, i64 1
  tail call void @cr_png_do_swap(%struct.png_row_info_struct* %1, i8* %281) #3
  %282 = load i32, i32* %7, align 4
  br label %283

283:                                              ; preds = %274, %278
  %284 = phi i32 [ %275, %274 ], [ %282, %278 ]
  %285 = and i32 %284, 8
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %461, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 46
  %289 = load i8*, i8** %288, align 8
  %290 = getelementptr inbounds i8, i8* %289, i64 1
  %291 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 2
  %292 = load i8, i8* %291, align 8
  %293 = icmp eq i8 %292, 3
  br i1 %293, label %461, label %294

294:                                              ; preds = %287
  %295 = bitcast [4 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %295) #3
  %296 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 0
  %297 = bitcast [4 x i32]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %295, i8 -86, i64 16, i1 false) #3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %297) #3
  %298 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 0
  %299 = and i8 %292, 2
  %300 = icmp eq i8 %299, 0
  %301 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %297, i8 -86, i64 16, i1 false) #3
  %302 = load i8, i8* %301, align 1
  %303 = zext i8 %302 to i32
  br i1 %300, label %321, label %304

304:                                              ; preds = %294
  %305 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 2
  %306 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 1
  %307 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 2
  %308 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 1
  %309 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 87, i32 0
  %310 = load i8, i8* %309, align 1
  %311 = zext i8 %310 to i32
  %312 = sub nsw i32 %303, %311
  store i32 %312, i32* %296, align 16
  store i32 %311, i32* %298, align 16
  %313 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 87, i32 1
  %314 = load i8, i8* %313, align 1
  %315 = zext i8 %314 to i32
  %316 = sub nsw i32 %303, %315
  store i32 %316, i32* %308, align 4
  store i32 %315, i32* %306, align 4
  %317 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 87, i32 2
  %318 = load i8, i8* %317, align 1
  %319 = zext i8 %318 to i32
  %320 = sub nsw i32 %303, %319
  store i32 %320, i32* %307, align 8
  store i32 %319, i32* %305, align 8
  br label %326

321:                                              ; preds = %294
  %322 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 87, i32 3
  %323 = load i8, i8* %322, align 1
  %324 = zext i8 %323 to i32
  %325 = sub nsw i32 %303, %324
  store i32 %325, i32* %296, align 16
  store i32 %324, i32* %298, align 16
  br label %326

326:                                              ; preds = %321, %304
  %327 = phi i32 [ 3, %304 ], [ 1, %321 ]
  %328 = and i8 %292, 4
  %329 = icmp eq i8 %328, 0
  br i1 %329, label %339, label %330

330:                                              ; preds = %326
  %331 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 87, i32 4
  %332 = load i8, i8* %331, align 1
  %333 = zext i8 %332 to i32
  %334 = sub nsw i32 %303, %333
  %335 = zext i32 %327 to i64
  %336 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 %335
  store i32 %334, i32* %336, align 4
  %337 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 %335
  store i32 %333, i32* %337, align 4
  %338 = add nuw nsw i32 %327, 1
  br label %339

339:                                              ; preds = %330, %326
  %340 = phi i32 [ %338, %330 ], [ %327, %326 ]
  %341 = icmp ult i8 %302, 8
  br i1 %341, label %342, label %388

342:                                              ; preds = %339
  %343 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  %344 = load i64, i64* %343, align 8
  %345 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 87, i32 3
  %346 = load i8, i8* %345, align 1
  %347 = icmp eq i8 %346, 1
  %348 = icmp eq i8 %302, 2
  %349 = and i1 %348, %347
  br i1 %349, label %355, label %350

350:                                              ; preds = %342
  %351 = icmp eq i8 %302, 4
  %352 = icmp eq i8 %346, 3
  %353 = and i1 %351, %352
  %354 = select i1 %353, i32 17, i32 255
  br label %355

355:                                              ; preds = %350, %342
  %356 = phi i32 [ 85, %342 ], [ %354, %350 ]
  %357 = icmp eq i64 %344, 0
  br i1 %357, label %459, label %358

358:                                              ; preds = %355, %382
  %359 = phi i64 [ %385, %382 ], [ 0, %355 ]
  %360 = phi i8* [ %386, %382 ], [ %290, %355 ]
  %361 = load i8, i8* %360, align 1
  %362 = zext i8 %361 to i32
  %363 = load i32, i32* %296, align 16
  %364 = load i32, i32* %298, align 16
  %365 = sub nsw i32 0, %364
  %366 = icmp sgt i32 %363, %365
  br i1 %366, label %367, label %382

367:                                              ; preds = %358, %377
  %368 = phi i32 [ %379, %377 ], [ 0, %358 ]
  %369 = phi i32 [ %380, %377 ], [ %363, %358 ]
  %370 = icmp sgt i32 %369, 0
  br i1 %370, label %371, label %373

371:                                              ; preds = %367
  %372 = shl i32 %362, %369
  br label %377

373:                                              ; preds = %367
  %374 = sub nsw i32 0, %369
  %375 = lshr i32 %362, %374
  %376 = and i32 %375, %356
  br label %377

377:                                              ; preds = %373, %371
  %378 = phi i32 [ %372, %371 ], [ %376, %373 ]
  %379 = or i32 %378, %368
  %380 = sub nsw i32 %369, %364
  %381 = icmp sgt i32 %380, %365
  br i1 %381, label %367, label %382

382:                                              ; preds = %377, %358
  %383 = phi i32 [ 0, %358 ], [ %379, %377 ]
  %384 = trunc i32 %383 to i8
  store i8 %384, i8* %360, align 1
  %385 = add nuw i64 %359, 1
  %386 = getelementptr inbounds i8, i8* %360, i64 1
  %387 = icmp eq i64 %385, %344
  br i1 %387, label %459, label %358

388:                                              ; preds = %339
  %389 = icmp eq i8 %302, 8
  %390 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %391 = load i32, i32* %390, align 8
  %392 = mul i32 %391, %340
  %393 = icmp ne i32 %392, 0
  br i1 %389, label %395, label %394

394:                                              ; preds = %388
  br i1 %393, label %426, label %459

395:                                              ; preds = %388
  br i1 %393, label %396, label %459

396:                                              ; preds = %395, %420
  %397 = phi i32 [ %423, %420 ], [ 0, %395 ]
  %398 = phi i8* [ %424, %420 ], [ %290, %395 ]
  %399 = urem i32 %397, %340
  %400 = load i8, i8* %398, align 1
  %401 = zext i8 %400 to i32
  %402 = zext i32 %399 to i64
  %403 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 %402
  %404 = load i32, i32* %403, align 4
  %405 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 %402
  %406 = load i32, i32* %405, align 4
  %407 = sub nsw i32 0, %406
  %408 = icmp sgt i32 %404, %407
  br i1 %408, label %409, label %420

409:                                              ; preds = %396, %409
  %410 = phi i32 [ %417, %409 ], [ 0, %396 ]
  %411 = phi i32 [ %418, %409 ], [ %404, %396 ]
  %412 = icmp sgt i32 %411, 0
  %413 = shl i32 %401, %411
  %414 = sub nsw i32 0, %411
  %415 = lshr i32 %401, %414
  %416 = select i1 %412, i32 %413, i32 %415
  %417 = or i32 %416, %410
  %418 = sub nsw i32 %411, %406
  %419 = icmp sgt i32 %418, %407
  br i1 %419, label %409, label %420

420:                                              ; preds = %409, %396
  %421 = phi i32 [ 0, %396 ], [ %417, %409 ]
  %422 = trunc i32 %421 to i8
  store i8 %422, i8* %398, align 1
  %423 = add nuw i32 %397, 1
  %424 = getelementptr inbounds i8, i8* %398, i64 1
  %425 = icmp eq i32 %423, %392
  br i1 %425, label %459, label %396

426:                                              ; preds = %394, %450
  %427 = phi i32 [ %457, %450 ], [ 0, %394 ]
  %428 = phi i8* [ %456, %450 ], [ %290, %394 ]
  %429 = urem i32 %427, %340
  %430 = tail call zeroext i16 @cr_png_get_uint_16(i8* %428) #3
  %431 = zext i16 %430 to i32
  %432 = zext i32 %429 to i64
  %433 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 %432
  %434 = load i32, i32* %433, align 4
  %435 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 %432
  %436 = load i32, i32* %435, align 4
  %437 = sub nsw i32 0, %436
  %438 = icmp sgt i32 %434, %437
  br i1 %438, label %439, label %450

439:                                              ; preds = %426, %439
  %440 = phi i32 [ %447, %439 ], [ 0, %426 ]
  %441 = phi i32 [ %448, %439 ], [ %434, %426 ]
  %442 = icmp sgt i32 %441, 0
  %443 = shl i32 %431, %441
  %444 = sub nsw i32 0, %441
  %445 = lshr i32 %431, %444
  %446 = select i1 %442, i32 %443, i32 %445
  %447 = or i32 %446, %440
  %448 = sub nsw i32 %441, %436
  %449 = icmp sgt i32 %448, %437
  br i1 %449, label %439, label %450

450:                                              ; preds = %439, %426
  %451 = phi i32 [ 0, %426 ], [ %447, %439 ]
  %452 = lshr i32 %451, 8
  %453 = trunc i32 %452 to i8
  %454 = getelementptr inbounds i8, i8* %428, i64 1
  store i8 %453, i8* %428, align 1
  %455 = trunc i32 %451 to i8
  %456 = getelementptr inbounds i8, i8* %428, i64 2
  store i8 %455, i8* %454, align 1
  %457 = add nuw i32 %427, 1
  %458 = icmp eq i32 %457, %392
  br i1 %458, label %459, label %426

459:                                              ; preds = %450, %420, %382, %395, %394, %355
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %297) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %295) #3
  %460 = load i32, i32* %7, align 4
  br label %461

461:                                              ; preds = %459, %287, %283
  %462 = phi i32 [ %460, %459 ], [ %284, %287 ], [ %284, %283 ]
  %463 = and i32 %462, 131072
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %623, label %465

465:                                              ; preds = %461
  %466 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 46
  %467 = load i8*, i8** %466, align 8
  %468 = getelementptr inbounds i8, i8* %467, i64 1
  %469 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 2
  %470 = load i8, i8* %469, align 8
  switch i8 %470, label %623 [
    i8 6, label %471
    i8 4, label %527
  ]

471:                                              ; preds = %465
  %472 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %473 = load i8, i8* %472, align 1
  %474 = icmp eq i8 %473, 8
  %475 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %476 = load i32, i32* %475, align 8
  %477 = icmp ne i32 %476, 0
  br i1 %474, label %479, label %478

478:                                              ; preds = %471
  br i1 %477, label %506, label %623

479:                                              ; preds = %471
  br i1 %477, label %480, label %623

480:                                              ; preds = %479
  %481 = and i32 %476, 1
  %482 = icmp eq i32 %476, 1
  br i1 %482, label %589, label %483

483:                                              ; preds = %480
  %484 = sub i32 %476, %481
  br label %485

485:                                              ; preds = %485, %483
  %486 = phi i8* [ %468, %483 ], [ %502, %485 ]
  %487 = phi i32 [ %484, %483 ], [ %504, %485 ]
  %488 = getelementptr inbounds i8, i8* %486, i64 1
  %489 = load i8, i8* %486, align 1
  %490 = getelementptr inbounds i8, i8* %486, i64 2
  %491 = load i8, i8* %488, align 1
  store i8 %491, i8* %486, align 1
  %492 = getelementptr inbounds i8, i8* %486, i64 3
  %493 = load i8, i8* %490, align 1
  store i8 %493, i8* %488, align 1
  %494 = getelementptr inbounds i8, i8* %486, i64 4
  %495 = load i8, i8* %492, align 1
  store i8 %495, i8* %490, align 1
  store i8 %489, i8* %492, align 1
  %496 = getelementptr inbounds i8, i8* %486, i64 5
  %497 = load i8, i8* %494, align 1
  %498 = getelementptr inbounds i8, i8* %486, i64 6
  %499 = load i8, i8* %496, align 1
  store i8 %499, i8* %494, align 1
  %500 = getelementptr inbounds i8, i8* %486, i64 7
  %501 = load i8, i8* %498, align 1
  store i8 %501, i8* %496, align 1
  %502 = getelementptr inbounds i8, i8* %486, i64 8
  %503 = load i8, i8* %500, align 1
  store i8 %503, i8* %498, align 1
  store i8 %497, i8* %500, align 1
  %504 = add i32 %487, -2
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %589, label %485

506:                                              ; preds = %478, %506
  %507 = phi i8* [ %523, %506 ], [ %468, %478 ]
  %508 = phi i32 [ %525, %506 ], [ 0, %478 ]
  %509 = getelementptr inbounds i8, i8* %507, i64 1
  %510 = load i8, i8* %507, align 1
  %511 = getelementptr inbounds i8, i8* %507, i64 2
  %512 = load i8, i8* %509, align 1
  %513 = getelementptr inbounds i8, i8* %507, i64 3
  %514 = load i8, i8* %511, align 1
  store i8 %514, i8* %507, align 1
  %515 = getelementptr inbounds i8, i8* %507, i64 4
  %516 = load i8, i8* %513, align 1
  store i8 %516, i8* %509, align 1
  %517 = getelementptr inbounds i8, i8* %507, i64 5
  %518 = load i8, i8* %515, align 1
  store i8 %518, i8* %511, align 1
  %519 = getelementptr inbounds i8, i8* %507, i64 6
  %520 = load i8, i8* %517, align 1
  store i8 %520, i8* %513, align 1
  %521 = getelementptr inbounds i8, i8* %507, i64 7
  %522 = load i8, i8* %519, align 1
  store i8 %522, i8* %515, align 1
  %523 = getelementptr inbounds i8, i8* %507, i64 8
  %524 = load i8, i8* %521, align 1
  store i8 %524, i8* %517, align 1
  store i8 %510, i8* %519, align 1
  store i8 %512, i8* %521, align 1
  %525 = add nuw i32 %508, 1
  %526 = icmp eq i32 %525, %476
  br i1 %526, label %623, label %506

527:                                              ; preds = %465
  %528 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %529 = load i8, i8* %528, align 1
  %530 = icmp eq i8 %529, 8
  %531 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %532 = load i32, i32* %531, align 8
  %533 = icmp ne i32 %532, 0
  br i1 %530, label %540, label %534

534:                                              ; preds = %527
  br i1 %533, label %535, label %623

535:                                              ; preds = %534
  %536 = and i32 %532, 1
  %537 = icmp eq i32 %532, 1
  br i1 %537, label %612, label %538

538:                                              ; preds = %535
  %539 = sub i32 %532, %536
  br label %568

540:                                              ; preds = %527
  br i1 %533, label %541, label %623

541:                                              ; preds = %540
  %542 = add i32 %532, -1
  %543 = and i32 %532, 3
  %544 = icmp ult i32 %542, 3
  br i1 %544, label %600, label %545

545:                                              ; preds = %541
  %546 = sub i32 %532, %543
  br label %547

547:                                              ; preds = %547, %545
  %548 = phi i8* [ %468, %545 ], [ %564, %547 ]
  %549 = phi i32 [ %546, %545 ], [ %566, %547 ]
  %550 = getelementptr inbounds i8, i8* %548, i64 1
  %551 = load i8, i8* %548, align 1
  %552 = getelementptr inbounds i8, i8* %548, i64 2
  %553 = load i8, i8* %550, align 1
  store i8 %553, i8* %548, align 1
  store i8 %551, i8* %550, align 1
  %554 = getelementptr inbounds i8, i8* %548, i64 3
  %555 = load i8, i8* %552, align 1
  %556 = getelementptr inbounds i8, i8* %548, i64 4
  %557 = load i8, i8* %554, align 1
  store i8 %557, i8* %552, align 1
  store i8 %555, i8* %554, align 1
  %558 = getelementptr inbounds i8, i8* %548, i64 5
  %559 = load i8, i8* %556, align 1
  %560 = getelementptr inbounds i8, i8* %548, i64 6
  %561 = load i8, i8* %558, align 1
  store i8 %561, i8* %556, align 1
  store i8 %559, i8* %558, align 1
  %562 = getelementptr inbounds i8, i8* %548, i64 7
  %563 = load i8, i8* %560, align 1
  %564 = getelementptr inbounds i8, i8* %548, i64 8
  %565 = load i8, i8* %562, align 1
  store i8 %565, i8* %560, align 1
  store i8 %563, i8* %562, align 1
  %566 = add i32 %549, -4
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %600, label %547

568:                                              ; preds = %568, %538
  %569 = phi i8* [ %468, %538 ], [ %585, %568 ]
  %570 = phi i32 [ %539, %538 ], [ %587, %568 ]
  %571 = getelementptr inbounds i8, i8* %569, i64 1
  %572 = load i8, i8* %569, align 1
  %573 = getelementptr inbounds i8, i8* %569, i64 2
  %574 = load i8, i8* %571, align 1
  %575 = getelementptr inbounds i8, i8* %569, i64 3
  %576 = load i8, i8* %573, align 1
  store i8 %576, i8* %569, align 1
  %577 = getelementptr inbounds i8, i8* %569, i64 4
  %578 = load i8, i8* %575, align 1
  store i8 %578, i8* %571, align 1
  store i8 %572, i8* %573, align 1
  store i8 %574, i8* %575, align 1
  %579 = getelementptr inbounds i8, i8* %569, i64 5
  %580 = load i8, i8* %577, align 1
  %581 = getelementptr inbounds i8, i8* %569, i64 6
  %582 = load i8, i8* %579, align 1
  %583 = getelementptr inbounds i8, i8* %569, i64 7
  %584 = load i8, i8* %581, align 1
  store i8 %584, i8* %577, align 1
  %585 = getelementptr inbounds i8, i8* %569, i64 8
  %586 = load i8, i8* %583, align 1
  store i8 %586, i8* %579, align 1
  store i8 %580, i8* %581, align 1
  store i8 %582, i8* %583, align 1
  %587 = add i32 %570, -2
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %612, label %568

589:                                              ; preds = %485, %480
  %590 = phi i8* [ %468, %480 ], [ %502, %485 ]
  %591 = icmp eq i32 %481, 0
  br i1 %591, label %623, label %592

592:                                              ; preds = %589
  %593 = getelementptr inbounds i8, i8* %590, i64 1
  %594 = load i8, i8* %590, align 1
  %595 = getelementptr inbounds i8, i8* %590, i64 2
  %596 = load i8, i8* %593, align 1
  store i8 %596, i8* %590, align 1
  %597 = getelementptr inbounds i8, i8* %590, i64 3
  %598 = load i8, i8* %595, align 1
  store i8 %598, i8* %593, align 1
  %599 = load i8, i8* %597, align 1
  store i8 %599, i8* %595, align 1
  store i8 %594, i8* %597, align 1
  br label %623

600:                                              ; preds = %547, %541
  %601 = phi i8* [ %468, %541 ], [ %564, %547 ]
  %602 = icmp eq i32 %543, 0
  br i1 %602, label %623, label %603

603:                                              ; preds = %600, %603
  %604 = phi i8* [ %608, %603 ], [ %601, %600 ]
  %605 = phi i32 [ %610, %603 ], [ %543, %600 ]
  %606 = getelementptr inbounds i8, i8* %604, i64 1
  %607 = load i8, i8* %604, align 1
  %608 = getelementptr inbounds i8, i8* %604, i64 2
  %609 = load i8, i8* %606, align 1
  store i8 %609, i8* %604, align 1
  store i8 %607, i8* %606, align 1
  %610 = add i32 %605, -1
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %623, label %603, !llvm.loop !2

612:                                              ; preds = %568, %535
  %613 = phi i8* [ %468, %535 ], [ %585, %568 ]
  %614 = icmp eq i32 %536, 0
  br i1 %614, label %623, label %615

615:                                              ; preds = %612
  %616 = getelementptr inbounds i8, i8* %613, i64 1
  %617 = load i8, i8* %613, align 1
  %618 = getelementptr inbounds i8, i8* %613, i64 2
  %619 = load i8, i8* %616, align 1
  %620 = getelementptr inbounds i8, i8* %613, i64 3
  %621 = load i8, i8* %618, align 1
  store i8 %621, i8* %613, align 1
  %622 = load i8, i8* %620, align 1
  store i8 %622, i8* %616, align 1
  store i8 %617, i8* %618, align 1
  store i8 %619, i8* %620, align 1
  br label %623

623:                                              ; preds = %615, %612, %600, %603, %506, %592, %589, %540, %534, %479, %478, %465, %461
  %624 = load i32, i32* %7, align 4
  %625 = and i32 %624, 1
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %631, label %627

627:                                              ; preds = %623
  %628 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 46
  %629 = load i8*, i8** %628, align 8
  %630 = getelementptr inbounds i8, i8* %629, i64 1
  tail call void @cr_png_do_bgr(%struct.png_row_info_struct* %1, i8* %630) #3
  br label %631

631:                                              ; preds = %623, %2, %627
  ret void

632:                                              ; preds = %87
  %633 = trunc i32 %94 to i8
  store i8 %633, i8* %90, align 1
  %634 = getelementptr inbounds i8, i8* %90, i64 1
  br label %637

635:                                              ; preds = %87
  %636 = lshr i32 %88, 1
  br label %637

637:                                              ; preds = %635, %632
  %638 = phi i32 [ %636, %635 ], [ 128, %632 ]
  %639 = phi i32 [ %94, %635 ], [ 0, %632 ]
  %640 = phi i8* [ %90, %635 ], [ %634, %632 ]
  %641 = add i32 %75, -2
  %642 = icmp eq i32 %641, 0
  br i1 %642, label %97, label %70

643:                                              ; preds = %150
  %644 = add i32 %152, -2
  br label %648

645:                                              ; preds = %150
  %646 = trunc i32 %159 to i8
  store i8 %646, i8* %151, align 1
  %647 = getelementptr inbounds i8, i8* %151, i64 1
  br label %648

648:                                              ; preds = %645, %643
  %649 = phi i8* [ %647, %645 ], [ %151, %643 ]
  %650 = phi i32 [ 6, %645 ], [ %644, %643 ]
  %651 = phi i32 [ 0, %645 ], [ %159, %643 ]
  %652 = getelementptr inbounds i8, i8* %137, i64 2
  %653 = add i32 %138, -2
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %161, label %133

655:                                              ; preds = %215
  %656 = add i32 %217, -4
  br label %660

657:                                              ; preds = %215
  %658 = trunc i32 %224 to i8
  store i8 %658, i8* %216, align 1
  %659 = getelementptr inbounds i8, i8* %216, i64 1
  br label %660

660:                                              ; preds = %657, %655
  %661 = phi i8* [ %659, %657 ], [ %216, %655 ]
  %662 = phi i32 [ 4, %657 ], [ %656, %655 ]
  %663 = phi i32 [ 0, %657 ], [ %224, %655 ]
  %664 = getelementptr inbounds i8, i8* %202, i64 2
  %665 = add i32 %203, -2
  %666 = icmp eq i32 %665, 0
  br i1 %666, label %226, label %198
}

declare void @cr_png_do_strip_channel(%struct.png_row_info_struct*, i8*, i32) local_unnamed_addr #1

declare void @cr_png_do_packswap(%struct.png_row_info_struct*, i8*) local_unnamed_addr #1

declare void @cr_png_do_swap(%struct.png_row_info_struct*, i8*) local_unnamed_addr #1

declare void @cr_png_do_bgr(%struct.png_row_info_struct*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i16 @cr_png_get_uint_16(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
