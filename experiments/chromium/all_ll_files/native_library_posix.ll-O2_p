; ModuleID = '../../base/native_library_posix.cc'
source_filename = "../../base/native_library_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.base::NativeLibraryLoadError" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"struct.base::NativeLibraryOptions" = type { i8 }
%"class.base::ScopedBlockingCall" = type { %"class.base::internal::UncheckedScopedBlockingCall" }
%"class.base::internal::UncheckedScopedBlockingCall" = type { %"class.base::internal::BlockingObserver"*, %"class.base::internal::UncheckedScopedBlockingCall"*, i8, [7 x i8], %"class.base::debug::ScopedActivity", %"class.absl::optional" }
%"class.base::internal::BlockingObserver" = type { i32 (...)** }
%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.2 }
%struct.anon.2 = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i64 }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic", i32, i64, i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.20 }
%union.anon.20 = type { %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" }
%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" = type { %"class.base::TimeTicks", %class.scoped_refptr }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr = type { %"class.base::internal::IOJankMonitoringWindow"* }
%"class.base::internal::IOJankMonitoringWindow" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::Lock", [60 x i64], %"class.base::TimeTicks", %class.scoped_refptr, i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.21" }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::BasicStringPiece" = type { i8*, i64 }

@.str = private unnamed_addr constant [29 x i8] c"LoadNativeLibraryWithOptions\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"../../base/native_library_posix.cc\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"lib\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c".so\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base22NativeLibraryLoadError8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"struct.base::NativeLibraryLoadError"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.base::NativeLibraryLoadError"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %9 = bitcast %"struct.base::NativeLibraryLoadError"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #6
  br label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.base::NativeLibraryLoadError", %"struct.base::NativeLibraryLoadError"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"struct.base::NativeLibraryLoadError", %"struct.base::NativeLibraryLoadError"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %12, i64 %14) #6
  br label %15

15:                                               ; preds = %7, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4base28LoadNativeLibraryWithOptionsERKNS_8FilePathERKNS_20NativeLibraryOptionsEPNS_22NativeLibraryLoadErrorE(%"class.base::FilePath"* dereferenceable(24), %"struct.base::NativeLibraryOptions"* nocapture readonly dereferenceable(1), %"struct.base::NativeLibraryLoadError"*) local_unnamed_addr #0 {
  %4 = alloca %"class.base::ScopedBlockingCall", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = bitcast %"class.base::ScopedBlockingCall"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 80, i1 false)
  %7 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 27) #6
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %5, i32 0) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"struct.base::NativeLibraryOptions", %"struct.base::NativeLibraryOptions"* %1, i64 0, i32 0
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, i32 1, i32 9
  %12 = bitcast %"class.base::FilePath"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.base::FilePath"* %0 to i8*
  %19 = select i1 %15, i8* %17, i8* %18
  %20 = call i8* @dlopen(i8* %19, i32 %11) #6
  %21 = icmp eq i8* %20, null
  %22 = icmp ne %"struct.base::NativeLibraryLoadError"* %2, null
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %54

24:                                               ; preds = %3
  %25 = call i8* @dlerror() #6
  %26 = getelementptr inbounds %"struct.base::NativeLibraryLoadError", %"struct.base::NativeLibraryLoadError"* %2, i64 0, i32 0
  %27 = load i8, i8* %25, align 1
  %28 = call i1 @llvm.is.constant.i8(i8 %27) #6
  br i1 %28, label %29, label %52

29:                                               ; preds = %24
  %30 = call i64 @strlen(i8* %25) #6
  %31 = icmp ult i64 %30, 23
  br i1 %31, label %32, label %50

32:                                               ; preds = %29
  %33 = bitcast %"struct.base::NativeLibraryLoadError"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.base::NativeLibraryLoadError", %"struct.base::NativeLibraryLoadError"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %30, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.base::NativeLibraryLoadError", %"struct.base::NativeLibraryLoadError"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  br label %44

41:                                               ; preds = %32
  %42 = trunc i64 %30 to i8
  store i8 %42, i8* %34, align 1
  %43 = bitcast %"struct.base::NativeLibraryLoadError"* %2 to i8*
  br label %44

44:                                               ; preds = %41, %37
  %45 = phi i8* [ %40, %37 ], [ %43, %41 ]
  %46 = icmp eq i64 %30, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %44
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %25, i64 %30, i1 false) #6
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds i8, i8* %45, i64 %30
  store i8 0, i8* %49, align 1
  br label %54

50:                                               ; preds = %29
  %51 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %26, i8* %25, i64 %30) #6
  br label %54

52:                                               ; preds = %24
  %53 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %26, i8* %25) #6
  br label %54

54:                                               ; preds = %52, %50, %48, %3
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #6
  ret i8* %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"*, %"class.base::Location"* dereferenceable(32), i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare i8* @dlopen(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare i8* @dlerror() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19UnloadNativeLibraryEPv(i8*) local_unnamed_addr #0 {
  %2 = tail call i32 @dlclose(i8* %0) #6
  ret void
}

; Function Attrs: nounwind
declare i32 @dlclose(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4base35GetFunctionPointerFromNativeLibraryEPvNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i8*, i64) local_unnamed_addr #0 {
  %4 = tail call i8* @dlsym(i8* %0, i8* %1) #6
  ret i8* %4
}

; Function Attrs: nounwind
declare i8* @dlsym(i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20GetNativeLibraryNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca [3 x %"class.base::BasicStringPiece"], align 8
  %5 = bitcast [3 x %"class.base::BasicStringPiece"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #6
  %6 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0
  %7 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %7, align 8
  %8 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0, i32 1
  store i64 3, i64* %8, align 8
  %9 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 1, i32 0
  store i8* %1, i8** %9, align 8
  %10 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 1, i32 1
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 2, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 2, i32 1
  store i64 3, i64* %12, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret %0, i64 3, %"class.base::BasicStringPiece"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21GetLoadableModuleNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca [3 x %"class.base::BasicStringPiece"], align 8
  %5 = bitcast [3 x %"class.base::BasicStringPiece"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #6, !noalias !3
  %6 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0
  %7 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %7, align 8, !noalias !3
  %8 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0, i32 1
  store i64 3, i64* %8, align 8, !noalias !3
  %9 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 1, i32 0
  store i8* %1, i8** %9, align 8, !noalias !3
  %10 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 1, i32 1
  store i64 %2, i64* %10, align 8, !noalias !3
  %11 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 2, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8** %11, align 8, !noalias !3
  %12 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 2, i32 1
  store i64 3, i64* %12, align 8, !noalias !3
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret %0, i64 3, %"class.base::BasicStringPiece"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #6, !noalias !3
  ret void
}

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4base20GetNativeLibraryNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE: argument 0"}
!5 = distinct !{!5, !"_ZN4base20GetNativeLibraryNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE"}
