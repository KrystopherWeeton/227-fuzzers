; ModuleID = '../../third_party/skia/src/gpu/GrWritePixelsRenderTask.cpp'
source_filename = "../../third_party/skia/src/gpu/GrWritePixelsRenderTask.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrWritePixelsTask = type { %class.GrRenderTask, %class.SkAutoSTArray, %struct.SkIRect, i32, i32 }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.160, i32, i32, %class.SkSTArray.167, %class.SkSTArray.167, %class.GrTextureResolveRenderTask* }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.58 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.58 = type { %class.sk_sp.59*, i64 }
%class.SkTArray.160 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.161", %class.GrSurfaceProxy }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.61, i8* }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.sk_sp.61 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.62, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.62 = type { %"struct.std::__1::atomic" }
%class.GrProxyProvider = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.60, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.155" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.60 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.151 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.63, %"class.std::__1::unique_ptr.65", i32, %class.GrDirectContext*, %class.SkSTArray.148, i8, i32 }
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.63 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.64, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.64 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.77", %class.sk_sp.83, %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.123", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.6, %class.SkTArray.15, %class.SkTArray.17, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.1"*, i64 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.17, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.18 }
%class.sk_sp.18 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.6 = type { %class.SkTHashTable.7 }
%class.SkTHashTable.7 = type { i32, i32, %class.SkAutoTArray.8 }
%class.SkAutoTArray.8 = type { %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.261" }
%"struct.std::__1::pair.261" = type { i32, %class.SkTArray.262* }
%class.SkTArray.262 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.15 = type { %"class.std::__1::unique_ptr.16"*, i64 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.262, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%class.SkTArray.17 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.31 }
%class.SkFibBlockSizes.31 = type { i32 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.GrDrawingManager* }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.GrProxyProvider* }
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.83 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.95, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.111, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.87 }
%class.SkTHashTable.87 = type { i32, i32, %class.SkAutoTArray.88 }
%class.SkAutoTArray.88 = type { %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.95 = type { %class.SkTHashTable.96 }
%class.SkTHashTable.96 = type { i32, i32, %class.SkAutoTArray.97 }
%class.SkAutoTArray.97 = type { %"class.std::__1::unique_ptr.98" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.104, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.104 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.105" }
%"struct.std::__1::atomic.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__cxx_atomic_impl.108" }
%"struct.std::__1::__cxx_atomic_impl.108" = type { %"struct.std::__1::__cxx_atomic_base_impl.109" }
%"struct.std::__1::__cxx_atomic_base_impl.109" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.110, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.110 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.111 = type { %class.SkTHashTable.112 }
%class.SkTHashTable.112 = type { i32, i32, %class.SkAutoTArray.113 }
%class.SkAutoTArray.113 = type { %"class.std::__1::unique_ptr.114" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.63, %class.sk_sp.126, %class.sk_sp.126 }
%class.sk_sp.126 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray.148 = type { %class.SkAlignedSTStorage.149, %class.SkTArray.150 }
%class.SkAlignedSTStorage.149 = type { [64 x i8] }
%class.SkTArray.150 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.151 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.152, void (i8*)*, i8* }
%class.SkNVRefCnt.152 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.153, i32, [4 x i8] }
%union.anon.153 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.60, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.155" = type { %"struct.std::__1::__atomic_base.156" }
%"struct.std::__1::__atomic_base.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i64 }
%class.SkSTArray.167 = type { %class.SkAlignedSTStorage.168, %class.SkTArray.169 }
%class.SkAlignedSTStorage.168 = type { [8 x i8] }
%class.SkTArray.169 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.SkAutoSTArray = type { i32, %struct.GrMipLevel*, [384 x i8] }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.47, %class.SkTArray.56, %class.GrOpsTask*, %class.SkSTArray.170, %class.SkSTArray.173, %"class.std::__1::unique_ptr.175", %class.sk_sp.191, %class.GrTokenTracker, i8, i8, %class.SkTArray.192, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.47 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.48", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.51, i8, [7 x i8] }>
%class.sk_sp.51 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.52, i8*, i64 }
%class.GrNonAtomicRef.52 = type { i32 }
%class.SkTArray.56 = type { %class.sk_sp.57*, i64 }
%class.sk_sp.57 = type { %class.GrRenderTask* }
%class.GrOpsTask = type opaque
%class.SkSTArray.170 = type { %class.SkAlignedSTStorage.171, %class.SkTArray.172 }
%class.SkAlignedSTStorage.171 = type { [32 x i8] }
%class.SkTArray.172 = type { i32*, i64 }
%class.SkSTArray.173 = type { %class.SkAlignedSTStorage.174, %class.SkTArray.56 }
%class.SkAlignedSTStorage.174 = type { [32 x i8] }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.178, %"class.std::__1::unique_ptr.182", %class.GrPathRenderer* }
%class.SkSTArray.178 = type { %class.SkAlignedSTStorage.179, %class.SkTArray.180 }
%class.SkAlignedSTStorage.179 = type { [64 x i8] }
%class.SkTArray.180 = type { %class.sk_sp.181*, i64 }
%class.sk_sp.181 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.191 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.192 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.193, i32, %class.GrRenderTask** }
%class.SkTHashMap.193 = type { %class.SkTHashTable.194 }
%class.SkTHashTable.194 = type { i32, i32, %class.SkAutoTArray.195 }
%class.SkAutoTArray.195 = type { %"class.std::__1::unique_ptr.196" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%class.sk_sp.59 = type { %class.GrSurfaceProxy* }
%struct.GrMipLevel = type { i8*, i64, %class.sk_sp.61 }
%class.GrResourceAllocator = type <{ %class.GrDirectContext*, %class.SkTMultiMap.202, %class.SkTHashMap.213, %"class.GrResourceAllocator::IntervalList", %"class.GrResourceAllocator::IntervalList", %"class.GrResourceAllocator::IntervalList", %class.SkTHashMap.222, i32, [4 x i8], %class.SkSTArenaAllocWithReset, i8, [7 x i8] }>
%class.SkTMultiMap.202 = type <{ %class.SkTDynamicHash.203, i32, [4 x i8] }>
%class.SkTDynamicHash.203 = type { %class.SkTHashTable.204 }
%class.SkTHashTable.204 = type { i32, i32, %class.SkAutoTArray.205 }
%class.SkAutoTArray.205 = type { %"class.std::__1::unique_ptr.206" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"struct.SkTHashTable<SkTMultiMap<GrResourceAllocator::Register, GrScratchKey, GrResourceAllocator::FreePoolTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrResourceAllocator::Register, GrScratchKey, GrResourceAllocator::FreePoolTraits>::ValueList, GrScratchKey, SkTMultiMap<GrResourceAllocator::Register, GrScratchKey, GrResourceAllocator::FreePoolTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrResourceAllocator::Register, GrScratchKey, GrResourceAllocator::FreePoolTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrResourceAllocator::Register, GrScratchKey, GrResourceAllocator::FreePoolTraits>::ValueList, GrScratchKey, SkTMultiMap<GrResourceAllocator::Register, GrScratchKey, GrResourceAllocator::FreePoolTraits>::ValueList>::AdaptedTraits>::Slot" = type <{ %"struct.SkTMultiMap<GrResourceAllocator::Register, GrScratchKey, GrResourceAllocator::FreePoolTraits>::ValueList"*, i32, [4 x i8] }>
%"struct.SkTMultiMap<GrResourceAllocator::Register, GrScratchKey, GrResourceAllocator::FreePoolTraits>::ValueList" = type { %"class.GrResourceAllocator::Register"*, %"struct.SkTMultiMap<GrResourceAllocator::Register, GrScratchKey, GrResourceAllocator::FreePoolTraits>::ValueList"* }
%"class.GrResourceAllocator::Register" = type <{ %class.GrSurfaceProxy*, %class.GrScratchKey, %class.sk_sp.60, i8, [7 x i8] }>
%class.SkTHashMap.213 = type { %class.SkTHashTable.214 }
%class.SkTHashTable.214 = type { i32, i32, %class.SkAutoTArray.215 }
%class.SkAutoTArray.215 = type { %"class.std::__1::unique_ptr.216" }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceAllocator::Interval *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceAllocator::Interval *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceAllocator::Interval *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceAllocator::Interval *, GrCheapHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, GrResourceAllocator::Interval *, GrCheapHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, GrResourceAllocator::Interval *, GrCheapHash>::Pair" = type { %"struct.std::__1::pair.268" }
%"struct.std::__1::pair.268" = type { i32, %"class.GrResourceAllocator::Interval"* }
%"class.GrResourceAllocator::Interval" = type { %class.GrSurfaceProxy*, i32, i32, %"class.GrResourceAllocator::Interval"*, i32, %"class.GrResourceAllocator::Register"* }
%"class.GrResourceAllocator::IntervalList" = type { %"class.GrResourceAllocator::Interval"*, %"class.GrResourceAllocator::Interval"* }
%class.SkTHashMap.222 = type { %class.SkTHashTable.223 }
%class.SkTHashTable.223 = type { i32, i32, %class.SkAutoTArray.224 }
%class.SkAutoTArray.224 = type { %"class.std::__1::unique_ptr.225" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.SkTHashTable<SkTHashMap<GrUniqueKey, GrResourceAllocator::Register *, GrResourceAllocator::UniqueKeyHash>::Pair, GrUniqueKey, SkTHashMap<GrUniqueKey, GrResourceAllocator::Register *, GrResourceAllocator::UniqueKeyHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<GrUniqueKey, GrResourceAllocator::Register *, GrResourceAllocator::UniqueKeyHash>::Pair, GrUniqueKey, SkTHashMap<GrUniqueKey, GrResourceAllocator::Register *, GrResourceAllocator::UniqueKeyHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<GrUniqueKey, GrResourceAllocator::Register *, GrResourceAllocator::UniqueKeyHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<GrUniqueKey, GrResourceAllocator::Register *, GrResourceAllocator::UniqueKeyHash>::Pair" = type { %"struct.std::__1::pair.269" }
%"struct.std::__1::pair.269" = type { %class.GrUniqueKey, %"class.GrResourceAllocator::Register"* }
%class.SkSTArenaAllocWithReset = type { %"struct.std::__1::array", %class.SkArenaAllocWithReset }
%"struct.std::__1::array" = type { [5120 x i8] }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.GrOpFlushState = type { %class.GrDeferredUploadTarget, %"class.GrMeshDrawOp::Target", %class.SkArenaAllocWithReset, %class.GrVertexBufferAllocPool, %class.GrIndexBufferAllocPool, %class.GrDrawIndirectBufferAllocPool, %class.SkArenaAllocList, %class.SkArenaAllocList.233, %class.SkArenaAllocList.234, %class.GrDeferredUploadToken, %"struct.GrOpFlushState::OpArgs"*, %class.SkTArray.254*, %class.GrGpu*, %class.GrResourceProvider*, %class.GrTokenTracker*, %class.GrOpsRenderPass*, %"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter", %"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray.231, %class.sk_sp.47, %class.sk_sp.51, %class.GrGpu*, i32, i8* }
%class.SkTArray.231 = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.232 }
%class.sk_sp.232 = type { %class.GrBuffer* }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrDrawIndirectBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkArenaAllocList = type { %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"*, %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"* }
%"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node" = type opaque
%class.SkArenaAllocList.233 = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node" = type opaque
%class.SkArenaAllocList.234 = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node" = type opaque
%"struct.GrOpFlushState::OpArgs" = type { %class.GrOp*, %class.GrSurfaceProxyView*, %class.GrRenderTargetProxy*, i8, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView", i32, i32 }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.235", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %class.GrOp* }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.59, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSwizzle = type { i16 }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.241, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.sk_sp.241 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.242, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.242 = type { %"struct.std::__1::atomic" }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.245" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.243 }
%union.anon.243 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.244, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.244 = type { i32 }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.248, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.248 = type { %class.SkAlignedSTStorage.249, %class.SkTArray.250 }
%class.SkAlignedSTStorage.249 = type { [8 x i8] }
%class.SkTArray.250 = type { %"class.std::__1::unique_ptr.245"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%struct.SkIPoint = type { i32, i32 }
%class.SkTArray.254 = type opaque
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.255, %class.sk_sp.255, %class.sk_sp.255, i32, i32 }
%class.GrRenderTarget = type opaque
%class.sk_sp.255 = type { %class.GrBuffer* }
%"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

$_ZN13SkAutoSTArrayILi16E10GrMipLevelE5resetEi = comdat any

$_ZN17GrWritePixelsTaskD2Ev = comdat any

$_ZN17GrWritePixelsTaskD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK12GrRenderTask23requiresExplicitCleanupEv = comdat any

$_ZN12GrRenderTask8endFlushEP16GrDrawingManager = comdat any

$_ZNK12GrRenderTask9gatherIDsEP9SkSTArrayILi8EjLb1EE = comdat any

$_ZN12GrRenderTask9asOpsTaskEv = comdat any

$_ZNK17GrWritePixelsTask8onIsUsedEP14GrSurfaceProxy = comdat any

$_ZN12GrRenderTask15onMakeSkippableEv = comdat any

$_ZN12GrRenderTask12onPrePrepareEP18GrRecordingContext = comdat any

$_ZN12GrRenderTask9onPrepareEP14GrOpFlushState = comdat any

$_ZN12GrRenderTaskD2Ev = comdat any

$_ZN8SkTArrayIjLb1EE12checkReallocEiNS0_11ReallocTypeE = comdat any

@_ZTV17GrWritePixelsTask = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrWritePixelsTask*)* @_ZN17GrWritePixelsTaskD2Ev to i8*), i8* bitcast (void (%class.GrWritePixelsTask*)* @_ZN17GrWritePixelsTaskD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%class.GrRenderTask*)* @_ZNK12GrRenderTask23requiresExplicitCleanupEv to i8*), i8* bitcast (void (%class.GrRenderTask*, %class.GrDrawingManager*)* @_ZN12GrRenderTask8endFlushEP16GrDrawingManager to i8*), i8* bitcast (void (%class.GrRenderTask*, %class.GrDrawingManager*)* @_ZN12GrRenderTask6disownEP16GrDrawingManager to i8*), i8* bitcast (void (%class.GrRenderTask*, %class.SkSTArray.170*)* @_ZNK12GrRenderTask9gatherIDsEP9SkSTArrayILi8EjLb1EE to i8*), i8* bitcast (%class.GrOpsTask* (%class.GrRenderTask*)* @_ZN12GrRenderTask9asOpsTaskEv to i8*), i8* bitcast (void (%class.GrWritePixelsTask*, %class.GrResourceAllocator*)* @_ZNK17GrWritePixelsTask20gatherProxyIntervalsEP19GrResourceAllocator to i8*), i8* bitcast (i1 (%class.GrWritePixelsTask*, %class.GrCaps*, %struct.SkIRect*)* @_ZN17GrWritePixelsTask12onMakeClosedERK6GrCapsP7SkIRect to i8*), i8* bitcast (i1 (%class.GrWritePixelsTask*, %class.GrSurfaceProxy*)* @_ZNK17GrWritePixelsTask8onIsUsedEP14GrSurfaceProxy to i8*), i8* bitcast (void (%class.GrRenderTask*)* @_ZN12GrRenderTask15onMakeSkippableEv to i8*), i8* bitcast (void (%class.GrRenderTask*, %class.GrRecordingContext*)* @_ZN12GrRenderTask12onPrePrepareEP18GrRecordingContext to i8*), i8* bitcast (void (%class.GrRenderTask*, %class.GrOpFlushState*)* @_ZN12GrRenderTask9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (i1 (%class.GrWritePixelsTask*, %class.GrOpFlushState*)* @_ZN17GrWritePixelsTask9onExecuteEP14GrOpFlushState to i8*)] }, align 8
@_ZTV12GrRenderTask = external unnamed_addr constant { [17 x i8*] }, align 8

@_ZN17GrWritePixelsTaskC1EP16GrDrawingManager5sk_spI14GrSurfaceProxyE7SkIRect11GrColorTypeS6_PK10GrMipLeveli = hidden unnamed_addr alias void (%class.GrWritePixelsTask*, %class.GrDrawingManager*, %class.sk_sp.59*, i64, i64, i32, i32, %struct.GrMipLevel*, i32), void (%class.GrWritePixelsTask*, %class.GrDrawingManager*, %class.sk_sp.59*, i64, i64, i32, i32, %struct.GrMipLevel*, i32)* @_ZN17GrWritePixelsTaskC2EP16GrDrawingManager5sk_spI14GrSurfaceProxyE7SkIRect11GrColorTypeS6_PK10GrMipLeveli

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrWritePixelsTask4MakeEP16GrDrawingManager5sk_spI14GrSurfaceProxyE7SkIRect11GrColorTypeS6_PK10GrMipLeveli(%class.sk_sp.57* noalias nocapture sret, %class.GrDrawingManager*, %class.sk_sp.59* nocapture, i64, i64, i32, i32, %struct.GrMipLevel* readonly, i32) local_unnamed_addr #0 align 2 {
  %10 = alloca %class.sk_sp.59, align 8
  %11 = tail call i8* @_Znwm(i64 560) #7
  %12 = bitcast i8* %11 to %class.GrWritePixelsTask*
  %13 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %2, i64 0, i32 0
  %14 = bitcast %class.sk_sp.59* %2 to i64*
  %15 = load i64, i64* %14, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %13, align 8
  %16 = bitcast %class.sk_sp.59* %10 to i64*
  store i64 %15, i64* %16, align 8
  call void @_ZN17GrWritePixelsTaskC2EP16GrDrawingManager5sk_spI14GrSurfaceProxyE7SkIRect11GrColorTypeS6_PK10GrMipLeveli(%class.GrWritePixelsTask* nonnull %12, %class.GrDrawingManager* %1, %class.sk_sp.59* nonnull %10, i64 %3, i64 %4, i32 %5, i32 %6, %struct.GrMipLevel* %7, i32 %8)
  %17 = bitcast %class.sk_sp.57* %0 to i8**
  store i8* %11, i8** %17, align 8
  %18 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %10, i64 0, i32 0
  %19 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %18, align 8
  %20 = icmp eq %class.GrSurfaceProxy* %19, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %9
  %22 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %19, i64 0, i32 1
  %23 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %33

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %22, i64 -2
  %28 = bitcast %class.SkNVRefCnt* %27 to %class.GrSurfaceProxy*
  %29 = bitcast %class.SkNVRefCnt* %27 to void (%class.GrSurfaceProxy*)***
  %30 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %30, i64 1
  %32 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %31, align 8
  tail call void %32(%class.GrSurfaceProxy* nonnull %28) #8
  br label %33

33:                                               ; preds = %9, %21, %26
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrWritePixelsTaskC2EP16GrDrawingManager5sk_spI14GrSurfaceProxyE7SkIRect11GrColorTypeS6_PK10GrMipLeveli(%class.GrWritePixelsTask*, %class.GrDrawingManager*, %class.sk_sp.59* nocapture, i64, i64, i32, i32, %struct.GrMipLevel* readonly, i32) unnamed_addr #0 align 2 {
  %10 = alloca %class.sk_sp.59, align 8
  %11 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 0
  tail call void @_ZN12GrRenderTaskC2Ev(%class.GrRenderTask* %11) #8
  %12 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV17GrWritePixelsTask, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 1
  %14 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 1, i32 1
  store %struct.GrMipLevel* null, %struct.GrMipLevel** %14, align 8
  %15 = getelementptr inbounds %class.SkAutoSTArray, %class.SkAutoSTArray* %13, i64 0, i32 0
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 2
  %17 = bitcast %struct.SkIRect* %16 to i64*
  store i64 %3, i64* %17, align 8
  %18 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 2, i32 2
  %19 = bitcast i32* %18 to i64*
  store i64 %4, i64* %19, align 8
  %20 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 3
  store i32 %5, i32* %20, align 8
  %21 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 4
  store i32 %6, i32* %21, align 4
  %22 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %2, i64 0, i32 0
  %23 = bitcast %class.sk_sp.59* %2 to i64*
  %24 = load i64, i64* %23, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %22, align 8
  %25 = bitcast %class.sk_sp.59* %10 to i64*
  store i64 %24, i64* %25, align 8
  call void @_ZN12GrRenderTask9addTargetEP16GrDrawingManager5sk_spI14GrSurfaceProxyE(%class.GrRenderTask* %11, %class.GrDrawingManager* %1, %class.sk_sp.59* nonnull %10) #8
  %26 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %10, i64 0, i32 0
  %27 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %26, align 8
  %28 = icmp eq %class.GrSurfaceProxy* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %9
  %30 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %27, i64 0, i32 1
  %31 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %41

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %30, i64 -2
  %36 = bitcast %class.SkNVRefCnt* %35 to %class.GrSurfaceProxy*
  %37 = bitcast %class.SkNVRefCnt* %35 to void (%class.GrSurfaceProxy*)***
  %38 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %38, i64 1
  %40 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %39, align 8
  call void %40(%class.GrSurfaceProxy* nonnull %36) #8
  br label %41

41:                                               ; preds = %9, %29, %34
  call void @_ZN13SkAutoSTArrayILi16E10GrMipLevelE5resetEi(%class.SkAutoSTArray* %13, i32 %8)
  %42 = sext i32 %8 to i64
  %43 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %7, i64 %42
  %44 = icmp eq i32 %8, 0
  br i1 %44, label %74, label %45

45:                                               ; preds = %41
  %46 = load %struct.GrMipLevel*, %struct.GrMipLevel** %14, align 8
  br label %47

47:                                               ; preds = %45, %70
  %48 = phi %struct.GrMipLevel* [ %72, %70 ], [ %46, %45 ]
  %49 = phi %struct.GrMipLevel* [ %71, %70 ], [ %7, %45 ]
  %50 = bitcast %struct.GrMipLevel* %48 to i8*
  %51 = bitcast %struct.GrMipLevel* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false) #8
  %52 = icmp eq %struct.GrMipLevel* %48, %49
  br i1 %52, label %70, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %49, i64 0, i32 2, i32 0
  %55 = load %class.SkData*, %class.SkData** %54, align 8
  %56 = icmp eq %class.SkData* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.SkData, %class.SkData* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 1 monotonic
  br label %60

60:                                               ; preds = %57, %53
  %61 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %48, i64 0, i32 2, i32 0
  %62 = load %class.SkData*, %class.SkData** %61, align 8
  store %class.SkData* %55, %class.SkData** %61, align 8
  %63 = icmp eq %class.SkData* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.SkData, %class.SkData* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %62) #8
  %69 = bitcast %class.SkData* %62 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %69) #8
  br label %70

70:                                               ; preds = %68, %64, %60, %47
  %71 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %49, i64 1
  %72 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %48, i64 1
  %73 = icmp eq %struct.GrMipLevel* %71, %43
  br i1 %73, label %74, label %47

74:                                               ; preds = %70, %41
  ret void
}

declare void @_ZN12GrRenderTaskC2Ev(%class.GrRenderTask*) unnamed_addr #3

declare void @_ZN12GrRenderTask9addTargetEP16GrDrawingManager5sk_spI14GrSurfaceProxyE(%class.GrRenderTask*, %class.GrDrawingManager*, %class.sk_sp.59*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkAutoSTArrayILi16E10GrMipLevelE5resetEi(%class.SkAutoSTArray*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkAutoSTArray, %class.SkAutoSTArray* %0, i64 0, i32 1
  %4 = load %struct.GrMipLevel*, %struct.GrMipLevel** %3, align 8
  %5 = getelementptr inbounds %class.SkAutoSTArray, %class.SkAutoSTArray* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %27

8:                                                ; preds = %2
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %4, i64 %9
  br label %11

11:                                               ; preds = %8, %23
  %12 = phi %struct.GrMipLevel* [ %13, %23 ], [ %10, %8 ]
  %13 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %12, i64 -1
  %14 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %12, i64 -1, i32 2, i32 0
  %15 = load %class.SkData*, %class.SkData** %14, align 8
  %16 = icmp eq %class.SkData* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %class.SkData, %class.SkData* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %15) #8
  %22 = bitcast %class.SkData* %15 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %22) #8
  br label %23

23:                                               ; preds = %11, %17, %21
  %24 = icmp ugt %struct.GrMipLevel* %13, %4
  br i1 %24, label %11, label %25

25:                                               ; preds = %23
  %26 = load i32, i32* %5, align 8
  br label %27

27:                                               ; preds = %25, %2
  %28 = phi i32 [ %26, %25 ], [ %6, %2 ]
  %29 = icmp eq i32 %28, %1
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = load %struct.GrMipLevel*, %struct.GrMipLevel** %3, align 8
  %32 = bitcast %struct.GrMipLevel* %31 to i8*
  br label %55

33:                                               ; preds = %27
  %34 = icmp sgt i32 %28, 16
  br i1 %34, label %35, label %38

35:                                               ; preds = %33
  %36 = bitcast %struct.GrMipLevel** %3 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @_Z7sk_freePv(i8* %37) #8
  br label %38

38:                                               ; preds = %35, %33
  %39 = icmp sgt i32 %1, 16
  br i1 %39, label %40, label %45

40:                                               ; preds = %38
  %41 = sext i32 %1 to i64
  %42 = tail call i8* @_Z15sk_malloc_throwmm(i64 %41, i64 24) #8
  %43 = bitcast %struct.GrMipLevel** %3 to i8**
  store i8* %42, i8** %43, align 8
  %44 = bitcast i8* %42 to %struct.GrMipLevel*
  br label %52

45:                                               ; preds = %38
  %46 = icmp sgt i32 %1, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %45
  %48 = getelementptr inbounds %class.SkAutoSTArray, %class.SkAutoSTArray* %0, i64 0, i32 2, i64 0
  %49 = bitcast %struct.GrMipLevel** %3 to i8**
  store i8* %48, i8** %49, align 8
  %50 = bitcast i8* %48 to %struct.GrMipLevel*
  br label %52

51:                                               ; preds = %45
  store %struct.GrMipLevel* null, %struct.GrMipLevel** %3, align 8
  br label %52

52:                                               ; preds = %47, %51, %40
  %53 = phi i8* [ %48, %47 ], [ null, %51 ], [ %42, %40 ]
  %54 = phi %struct.GrMipLevel* [ %50, %47 ], [ null, %51 ], [ %44, %40 ]
  store i32 %1, i32* %5, align 8
  br label %55

55:                                               ; preds = %30, %52
  %56 = phi i8* [ %32, %30 ], [ %53, %52 ]
  %57 = phi %struct.GrMipLevel* [ %31, %30 ], [ %54, %52 ]
  %58 = sext i32 %1 to i64
  %59 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %57, i64 %58
  %60 = icmp sgt i32 %1, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %55
  %62 = ptrtoint %struct.GrMipLevel* %57 to i64
  %63 = getelementptr %struct.GrMipLevel, %struct.GrMipLevel* %57, i64 1
  %64 = icmp ugt %struct.GrMipLevel* %59, %63
  %65 = select i1 %64, %struct.GrMipLevel* %59, %struct.GrMipLevel* %63
  %66 = bitcast %struct.GrMipLevel* %65 to i8*
  %67 = xor i64 %62, -1
  %68 = getelementptr i8, i8* %66, i64 %67
  %69 = ptrtoint i8* %68 to i64
  %70 = urem i64 %69, 24
  %71 = sub i64 %69, %70
  %72 = add i64 %71, 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %72, i1 false)
  br label %73

73:                                               ; preds = %61, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17GrWritePixelsTask20gatherProxyIntervalsEP19GrResourceAllocator(%class.GrWritePixelsTask* nocapture readonly, %class.GrResourceAllocator*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 8
  %4 = bitcast i8* %3 to %class.sk_sp.59**
  %5 = load %class.sk_sp.59*, %class.sk_sp.59** %4, align 8
  %6 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %5, i64 0, i32 0
  %7 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %6, align 8
  %8 = getelementptr inbounds %class.GrResourceAllocator, %class.GrResourceAllocator* %1, i64 0, i32 7
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN19GrResourceAllocator11addIntervalEP14GrSurfaceProxyjjNS_9ActualUseE(%class.GrResourceAllocator* %1, %class.GrSurfaceProxy* %7, i32 %9, i32 %9, i1 zeroext true) #8
  %10 = load i32, i32* %8, align 8
  %11 = add i32 %10, 1
  store i32 %11, i32* %8, align 8
  ret void
}

declare void @_ZN19GrResourceAllocator11addIntervalEP14GrSurfaceProxyjjNS_9ActualUseE(%class.GrResourceAllocator*, %class.GrSurfaceProxy*, i32, i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17GrWritePixelsTask12onMakeClosedERK6GrCapsP7SkIRect(%class.GrWritePixelsTask* nocapture readonly, %class.GrCaps* nocapture readnone dereferenceable(232), %struct.SkIRect* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 2
  %5 = bitcast %struct.SkIRect* %2 to i8*
  %6 = bitcast %struct.SkIRect* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 16, i1 false)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17GrWritePixelsTask9onExecuteEP14GrOpFlushState(%class.GrWritePixelsTask* nocapture readonly, %class.GrOpFlushState* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 8
  %4 = bitcast i8* %3 to %class.sk_sp.59**
  %5 = load %class.sk_sp.59*, %class.sk_sp.59** %4, align 8
  %6 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %5, i64 0, i32 0
  %7 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %6, align 8
  %8 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %7, i64 0, i32 2, i32 0
  %9 = load %class.GrSurface*, %class.GrSurface** %8, align 8
  %10 = icmp eq %class.GrSurface* %9, null
  br i1 %10, label %29, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 12
  %13 = load %class.GrGpu*, %class.GrGpu** %12, align 8
  %14 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 2
  %15 = bitcast %struct.SkIRect* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 2, i32 2
  %18 = bitcast i32* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 1, i32 1
  %25 = load %struct.GrMipLevel*, %struct.GrMipLevel** %24, align 8
  %26 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 1, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = tail call zeroext i1 @_ZN5GrGpu11writePixelsEP9GrSurface7SkIRect11GrColorTypeS3_PK10GrMipLevelib(%class.GrGpu* %13, %class.GrSurface* nonnull %9, i64 %16, i64 %19, i32 %21, i32 %23, %struct.GrMipLevel* %25, i32 %27, i1 zeroext false) #8
  br label %29

29:                                               ; preds = %2, %11
  %30 = phi i1 [ %28, %11 ], [ false, %2 ]
  ret i1 %30
}

declare zeroext i1 @_ZN5GrGpu11writePixelsEP9GrSurface7SkIRect11GrColorTypeS3_PK10GrMipLevelib(%class.GrGpu*, %class.GrSurface*, i64, i64, i32, i32, %struct.GrMipLevel*, i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GrWritePixelsTaskD2Ev(%class.GrWritePixelsTask*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV17GrWritePixelsTask, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 1, i32 1
  %4 = load %struct.GrMipLevel*, %struct.GrMipLevel** %3, align 8
  %5 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %27

8:                                                ; preds = %1
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %4, i64 %9
  br label %11

11:                                               ; preds = %23, %8
  %12 = phi %struct.GrMipLevel* [ %13, %23 ], [ %10, %8 ]
  %13 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %12, i64 -1
  %14 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %12, i64 -1, i32 2, i32 0
  %15 = load %class.SkData*, %class.SkData** %14, align 8
  %16 = icmp eq %class.SkData* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %class.SkData, %class.SkData* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %15) #8
  %22 = bitcast %class.SkData* %15 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %22) #8
  br label %23

23:                                               ; preds = %21, %17, %11
  %24 = icmp ugt %struct.GrMipLevel* %13, %4
  br i1 %24, label %11, label %25

25:                                               ; preds = %23
  %26 = load i32, i32* %5, align 8
  br label %27

27:                                               ; preds = %25, %1
  %28 = phi i32 [ %26, %25 ], [ %6, %1 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %27
  %31 = icmp sgt i32 %28, 16
  br i1 %31, label %32, label %35

32:                                               ; preds = %30
  %33 = bitcast %struct.GrMipLevel** %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #8
  br label %35

35:                                               ; preds = %32, %30
  store %struct.GrMipLevel* null, %struct.GrMipLevel** %3, align 8
  store i32 0, i32* %5, align 8
  br label %36

36:                                               ; preds = %27, %35
  %37 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 0
  tail call void @_ZN12GrRenderTaskD2Ev(%class.GrRenderTask* %37) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GrWritePixelsTaskD0Ev(%class.GrWritePixelsTask*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV17GrWritePixelsTask, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 1, i32 1
  %4 = load %struct.GrMipLevel*, %struct.GrMipLevel** %3, align 8
  %5 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %27

8:                                                ; preds = %1
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %4, i64 %9
  br label %11

11:                                               ; preds = %23, %8
  %12 = phi %struct.GrMipLevel* [ %13, %23 ], [ %10, %8 ]
  %13 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %12, i64 -1
  %14 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %12, i64 -1, i32 2, i32 0
  %15 = load %class.SkData*, %class.SkData** %14, align 8
  %16 = icmp eq %class.SkData* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %class.SkData, %class.SkData* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %15) #8
  %22 = bitcast %class.SkData* %15 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %22) #8
  br label %23

23:                                               ; preds = %21, %17, %11
  %24 = icmp ugt %struct.GrMipLevel* %13, %4
  br i1 %24, label %11, label %25

25:                                               ; preds = %23
  %26 = load i32, i32* %5, align 8
  br label %27

27:                                               ; preds = %25, %1
  %28 = phi i32 [ %26, %25 ], [ %6, %1 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %27
  %31 = icmp sgt i32 %28, 16
  br i1 %31, label %32, label %35

32:                                               ; preds = %30
  %33 = bitcast %struct.GrMipLevel** %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #8
  br label %35

35:                                               ; preds = %32, %30
  store %struct.GrMipLevel* null, %struct.GrMipLevel** %3, align 8
  store i32 0, i32* %5, align 8
  br label %36

36:                                               ; preds = %27, %35
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV12GrRenderTask, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %37 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 0, i32 8, i32 0, i32 0, i64 16
  %38 = bitcast i8* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 0, i32 8, i32 0, i32 0, i64 8
  %44 = bitcast i8* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  tail call void @_Z7sk_freePv(i8* %45) #8
  br label %46

46:                                               ; preds = %42, %36
  %47 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 0, i32 7, i32 0, i32 0, i64 16
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 0, i32 7, i32 0, i32 0, i64 8
  %54 = bitcast i8* %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_Z7sk_freePv(i8* %55) #8
  br label %56

56:                                               ; preds = %52, %46
  %57 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 0, i32 4, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 0, i32 4
  %63 = bitcast %class.SkTArray.160* %62 to i8**
  %64 = load i8*, i8** %63, align 8
  tail call void @_Z7sk_freePv(i8* %64) #8
  br label %65

65:                                               ; preds = %61, %56
  %66 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 8
  %67 = getelementptr inbounds %class.GrWritePixelsTask, %class.GrWritePixelsTask* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 16
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = and i64 %69, 4294967294
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %65
  %73 = bitcast i8* %66 to %class.sk_sp.59**
  br label %78

74:                                               ; preds = %96, %65
  %75 = phi i64 [ %69, %65 ], [ %98, %96 ]
  %76 = and i64 %75, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %105, label %102

78:                                               ; preds = %96, %72
  %79 = phi i64 [ 0, %72 ], [ %97, %96 ]
  %80 = load %class.sk_sp.59*, %class.sk_sp.59** %73, align 8
  %81 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %80, i64 %79, i32 0
  %82 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %81, align 8
  %83 = icmp eq %class.GrSurfaceProxy* %82, null
  br i1 %83, label %96, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %82, i64 0, i32 1
  %86 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %96

89:                                               ; preds = %84
  %90 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %85, i64 -2
  %91 = bitcast %class.SkNVRefCnt* %90 to %class.GrSurfaceProxy*
  %92 = bitcast %class.SkNVRefCnt* %90 to void (%class.GrSurfaceProxy*)***
  %93 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %92, align 8
  %94 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %93, i64 1
  %95 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %94, align 8
  tail call void %95(%class.GrSurfaceProxy* nonnull %91) #8
  br label %96

96:                                               ; preds = %89, %84, %78
  %97 = add nuw nsw i64 %79, 1
  %98 = load i64, i64* %68, align 8
  %99 = lshr i64 %98, 1
  %100 = and i64 %99, 2147483647
  %101 = icmp ult i64 %97, %100
  br i1 %101, label %78, label %74

102:                                              ; preds = %74
  %103 = bitcast i8* %66 to i8**
  %104 = load i8*, i8** %103, align 8
  tail call void @_Z7sk_freePv(i8* %104) #8
  br label %105

105:                                              ; preds = %74, %102
  %106 = bitcast %class.GrWritePixelsTask* %0 to i8*
  tail call void @_ZdlPv(i8* %106) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #8
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrRenderTask23requiresExplicitCleanupEv(%class.GrRenderTask*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrRenderTask8endFlushEP16GrDrawingManager(%class.GrRenderTask*, %class.GrDrawingManager*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12GrRenderTask6disownEP16GrDrawingManager(%class.GrRenderTask*, %class.GrDrawingManager*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12GrRenderTask9gatherIDsEP9SkSTArrayILi8EjLb1EE(%class.GrRenderTask*, %class.SkSTArray.170*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkSTArray.170, %class.SkSTArray.170* %1, i64 0, i32 0, i32 0, i64 32
  %4 = bitcast i8* %3 to %class.SkTArray.172*
  %5 = getelementptr inbounds %class.GrRenderTask, %class.GrRenderTask* %0, i64 0, i32 5
  tail call void @_ZN8SkTArrayIjLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.172* %4, i32 1, i32 1) #8
  %6 = bitcast i8* %3 to i32**
  %7 = load i32*, i32** %6, align 8
  %8 = getelementptr inbounds %class.SkSTArray.170, %class.SkSTArray.170* %1, i64 0, i32 0, i32 0, i64 40
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = lshr i64 %10, 1
  %12 = and i64 %11, 2147483647
  %13 = getelementptr inbounds i32, i32* %7, i64 %12
  %14 = add i64 %10, 2
  %15 = and i64 %14, 4294967294
  %16 = and i64 %10, -4294967295
  %17 = or i64 %15, %16
  store i64 %17, i64* %9, align 8
  %18 = load i32, i32* %5, align 4
  store i32 %18, i32* %13, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrOpsTask* @_ZN12GrRenderTask9asOpsTaskEv(%class.GrRenderTask*) unnamed_addr #0 comdat align 2 {
  ret %class.GrOpsTask* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK17GrWritePixelsTask8onIsUsedEP14GrSurfaceProxy(%class.GrWritePixelsTask*, %class.GrSurfaceProxy*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrRenderTask15onMakeSkippableEv(%class.GrRenderTask*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrRenderTask12onPrePrepareEP18GrRecordingContext(%class.GrRenderTask*, %class.GrRecordingContext*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrRenderTask9onPrepareEP14GrOpFlushState(%class.GrRenderTask*, %class.GrOpFlushState*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrRenderTaskD2Ev(%class.GrRenderTask*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.GrRenderTask, %class.GrRenderTask* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV12GrRenderTask, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrRenderTask, %class.GrRenderTask* %0, i64 0, i32 8, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.GrRenderTask, %class.GrRenderTask* %0, i64 0, i32 8, i32 0, i32 0, i64 8
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %8
  %13 = getelementptr inbounds %class.GrRenderTask, %class.GrRenderTask* %0, i64 0, i32 7, i32 0, i32 0, i64 16
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.GrRenderTask, %class.GrRenderTask* %0, i64 0, i32 7, i32 0, i32 0, i64 8
  %20 = bitcast i8* %19 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_Z7sk_freePv(i8* %21) #8
  br label %22

22:                                               ; preds = %12, %18
  %23 = getelementptr inbounds %class.GrRenderTask, %class.GrRenderTask* %0, i64 0, i32 4, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.GrRenderTask, %class.GrRenderTask* %0, i64 0, i32 4
  %29 = bitcast %class.SkTArray.160* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_Z7sk_freePv(i8* %30) #8
  br label %31

31:                                               ; preds = %22, %27
  %32 = getelementptr inbounds %class.GrRenderTask, %class.GrRenderTask* %0, i64 0, i32 3, i32 0, i32 0, i64 8
  %33 = getelementptr inbounds %class.GrRenderTask, %class.GrRenderTask* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 4294967294
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %31
  %39 = bitcast i8* %32 to %class.sk_sp.59**
  br label %44

40:                                               ; preds = %62, %31
  %41 = phi i64 [ %35, %31 ], [ %64, %62 ]
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %71, label %68

44:                                               ; preds = %62, %38
  %45 = phi i64 [ 0, %38 ], [ %63, %62 ]
  %46 = load %class.sk_sp.59*, %class.sk_sp.59** %39, align 8
  %47 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %46, i64 %45, i32 0
  %48 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %47, align 8
  %49 = icmp eq %class.GrSurfaceProxy* %48, null
  br i1 %49, label %62, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %48, i64 0, i32 1
  %52 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %62

55:                                               ; preds = %50
  %56 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %51, i64 -2
  %57 = bitcast %class.SkNVRefCnt* %56 to %class.GrSurfaceProxy*
  %58 = bitcast %class.SkNVRefCnt* %56 to void (%class.GrSurfaceProxy*)***
  %59 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %59, i64 1
  %61 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %60, align 8
  tail call void %61(%class.GrSurfaceProxy* nonnull %57) #8
  br label %62

62:                                               ; preds = %55, %50, %44
  %63 = add nuw nsw i64 %45, 1
  %64 = load i64, i64* %34, align 8
  %65 = lshr i64 %64, 1
  %66 = and i64 %65, 2147483647
  %67 = icmp ult i64 %63, %66
  br i1 %67, label %44, label %40

68:                                               ; preds = %40
  %69 = bitcast i8* %32 to i8**
  %70 = load i8*, i8** %69, align 8
  tail call void @_Z7sk_freePv(i8* %70) #8
  br label %71

71:                                               ; preds = %40, %68
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIjLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.172*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.172, %class.SkTArray.172* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %65

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %65, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 4) #8
  %45 = load i64, i64* %4, align 8
  %46 = shl i64 %45, 1
  %47 = and i64 %46, 8589934588
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = bitcast %class.SkTArray.172* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #8
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  %57 = bitcast %class.SkTArray.172* %0 to i8**
  br i1 %56, label %61, label %58

58:                                               ; preds = %53
  %59 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %59) #8
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %60, %58 ], [ %54, %53 ]
  store i8* %44, i8** %57, align 8
  %63 = and i64 %62, -4294967298
  %64 = or i64 %63, 1
  store i64 %64, i64* %4, align 8
  br label %65

65:                                               ; preds = %61, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
