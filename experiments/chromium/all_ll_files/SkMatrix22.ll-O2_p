; ModuleID = '../../third_party/skia/src/utils/SkMatrix22.cpp'
source_filename = "../../third_party/skia/src/utils/SkMatrix22.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkPoint = type { float, float }
%class.SkMatrix = type { [9 x float], i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z23SkComputeGivensRotationRK7SkPointP8SkMatrix(%struct.SkPoint* nocapture readonly dereferenceable(8), %class.SkMatrix*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %5 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = extractelement <2 x float> %6, i32 1
  %8 = fcmp oeq float %7, 0.000000e+00
  %9 = extractelement <2 x float> %6, i32 0
  br i1 %8, label %10, label %12

10:                                               ; preds = %2
  %11 = tail call float @llvm.copysign.f32(float 1.000000e+00, float %9)
  br label %42

12:                                               ; preds = %2
  %13 = fcmp oeq float %9, 0.000000e+00
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = tail call float @llvm.copysign.f32(float 1.000000e+00, float %7)
  %16 = fsub float -0.000000e+00, %15
  br label %42

17:                                               ; preds = %12
  %18 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %6)
  %19 = extractelement <2 x float> %18, i32 0
  %20 = extractelement <2 x float> %18, i32 1
  %21 = fcmp ogt float %20, %19
  br i1 %21, label %22, label %32

22:                                               ; preds = %17
  %23 = fdiv float %9, %7
  %24 = fmul float %23, %23
  %25 = fadd float %24, 1.000000e+00
  %26 = tail call float @sqrtf(float %25) #4
  %27 = load float, float* %4, align 4
  %28 = tail call float @llvm.copysign.f32(float %26, float %27)
  %29 = fdiv float -1.000000e+00, %28
  %30 = fmul float %23, %29
  %31 = fsub float -0.000000e+00, %30
  br label %42

32:                                               ; preds = %17
  %33 = fdiv float %7, %9
  %34 = fmul float %33, %33
  %35 = fadd float %34, 1.000000e+00
  %36 = tail call float @sqrtf(float %35) #4
  %37 = load float, float* %3, align 4
  %38 = tail call float @llvm.copysign.f32(float %36, float %37)
  %39 = fdiv float 1.000000e+00, %38
  %40 = fmul float %33, %39
  %41 = fsub float -0.000000e+00, %40
  br label %42

42:                                               ; preds = %14, %32, %22, %10
  %43 = phi float [ 0.000000e+00, %10 ], [ %16, %14 ], [ %29, %22 ], [ %41, %32 ]
  %44 = phi float [ %11, %10 ], [ 0.000000e+00, %14 ], [ %31, %22 ], [ %39, %32 ]
  %45 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setSinCosEff(%class.SkMatrix* %1, float %43, float %44) #4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.copysign.f32(float, float) #1

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setSinCosEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
