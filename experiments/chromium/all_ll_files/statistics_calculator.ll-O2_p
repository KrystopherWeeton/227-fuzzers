; ModuleID = '../../third_party/webrtc/modules/audio_coding/neteq/statistics_calculator.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/neteq/statistics_calculator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::metrics::Histogram" = type opaque
%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger" = type <{ i32 (...)**, %"class.std::__1::basic_string", i32, i32, i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webrtc::StatisticsCalculator::PeriodicUmaCount" = type { %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger.base", i32 }
%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger.base" = type <{ i32 (...)**, %"class.std::__1::basic_string", i32, i32, i32 }>
%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage" = type <{ %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger.base", [4 x i8], double, i32, [4 x i8] }>
%"class.webrtc::StatisticsCalculator" = type <{ i32 (...)**, %"struct.webrtc::NetEqLifetimeStatistics", %"struct.webrtc::NetEqOperationsAndState", i64, i64, i64, i64, i64, i64, i64, i32, [4 x i8], %"class.std::__1::deque", i32, [4 x i8], i64, %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", i8, [7 x i8] }>
%"struct.webrtc::NetEqLifetimeStatistics" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32 }
%"struct.webrtc::NetEqOperationsAndState" = type <{ i64, i64, i64, i64, i64, i64, i64, i8, [7 x i8] }>
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.6" }
%"struct.std::__1::__split_buffer" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32** }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.webrtc::NetEqNetworkStatistics" = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%"struct.std::__1::__less.24" = type { i8 }
%"struct.std::__1::__split_buffer.18" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::allocator.4"* }
%"class.std::__1::allocator.4" = type { i8 }
%"class.std::__1::__deque_iterator" = type { i32**, i32* }

$_ZNSt3__15dequeIiNS_9allocatorIiEEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPiRNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZNSt3__16__sortIRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEvT0_S9_T_ = comdat any

$_ZNSt3__17__sort5IRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEjT0_S9_S9_S9_S9_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEvT0_S9_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEbT0_S9_T_ = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t = comdat any

@_ZN6webrtc20StatisticsCalculator16kLenWaitingTimesE = hidden local_unnamed_addr constant i64 100, align 8
@_ZTVN6webrtc20StatisticsCalculator17PeriodicUmaLoggerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)* @_ZN6webrtc20StatisticsCalculator17PeriodicUmaLoggerD2Ev to i8*), i8* bitcast (void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)* @_ZN6webrtc20StatisticsCalculator17PeriodicUmaLoggerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN6webrtc20StatisticsCalculator16PeriodicUmaCountE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::StatisticsCalculator::PeriodicUmaCount"*)* @_ZN6webrtc20StatisticsCalculator16PeriodicUmaCountD2Ev to i8*), i8* bitcast (void (%"class.webrtc::StatisticsCalculator::PeriodicUmaCount"*)* @_ZN6webrtc20StatisticsCalculator16PeriodicUmaCountD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaCount"*)* @_ZNK6webrtc20StatisticsCalculator16PeriodicUmaCount6MetricEv to i8*), i8* bitcast (void (%"class.webrtc::StatisticsCalculator::PeriodicUmaCount"*)* @_ZN6webrtc20StatisticsCalculator16PeriodicUmaCount5ResetEv to i8*)] }, align 8
@_ZTVN6webrtc20StatisticsCalculator18PeriodicUmaAverageE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"*)* @_ZN6webrtc20StatisticsCalculator18PeriodicUmaAverageD2Ev to i8*), i8* bitcast (void (%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"*)* @_ZN6webrtc20StatisticsCalculator18PeriodicUmaAverageD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"*)* @_ZNK6webrtc20StatisticsCalculator18PeriodicUmaAverage6MetricEv to i8*), i8* bitcast (void (%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"*)* @_ZN6webrtc20StatisticsCalculator18PeriodicUmaAverage5ResetEv to i8*)] }, align 8
@_ZTVN6webrtc20StatisticsCalculatorE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::StatisticsCalculator"*)* @_ZN6webrtc20StatisticsCalculatorD2Ev to i8*), i8* bitcast (void (%"class.webrtc::StatisticsCalculator"*)* @_ZN6webrtc20StatisticsCalculatorD0Ev to i8*), i8* bitcast (void (%"class.webrtc::StatisticsCalculator"*, i64)* @_ZN6webrtc20StatisticsCalculator16PacketsDiscardedEm to i8*), i8* bitcast (void (%"class.webrtc::StatisticsCalculator"*, i64)* @_ZN6webrtc20StatisticsCalculator25SecondaryPacketsDiscardedEm to i8*), i8* bitcast (void (%"class.webrtc::StatisticsCalculator"*, i64)* @_ZN6webrtc20StatisticsCalculator24SecondaryPacketsReceivedEm to i8*), i8* bitcast (void (%"class.webrtc::StatisticsCalculator"*, i64)* @_ZN6webrtc20StatisticsCalculator26RelativePacketArrivalDelayEm to i8*), i8* bitcast (void (%"class.webrtc::StatisticsCalculator"*, i32, i32)* @_ZN6webrtc20StatisticsCalculator27LogDelayedPacketOutageEventEii to i8*)] }, align 8
@.str = private unnamed_addr constant [48 x i8] c"WebRTC.Audio.DelayedPacketOutageEventsPerMinute\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"WebRTC.Audio.AverageExcessBufferDelayMs\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"WebRTC.Audio.JitterBufferFullPerMinute\00", align 1
@_ZZN6webrtc20StatisticsCalculator14EndExpandEventEiE24atomic_histogram_pointer = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.3 = private unnamed_addr constant [33 x i8] c"WebRTC.Audio.AudioInterruptionMs\00", align 1
@_ZZN6webrtc20StatisticsCalculator27LogDelayedPacketOutageEventEiiE24atomic_histogram_pointer = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.4 = private unnamed_addr constant [40 x i8] c"WebRTC.Audio.DelayedPacketOutageEventMs\00", align 1
@.str.6 = private unnamed_addr constant [43 x i8] c"../../third_party/webrtc/rtc_base/checks.h\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"a % b == 0\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c" is not evenly divisible by \00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t = linkonce_odr hidden constant [7 x i8] c"\0D\01\01\01\09\01\00", comdat, align 1

@_ZN6webrtc20StatisticsCalculator17PeriodicUmaLoggerD1Ev = hidden unnamed_addr alias void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*), void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)* @_ZN6webrtc20StatisticsCalculator17PeriodicUmaLoggerD2Ev
@_ZN6webrtc20StatisticsCalculator16PeriodicUmaCountC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEii = hidden unnamed_addr alias void (%"class.webrtc::StatisticsCalculator::PeriodicUmaCount"*, %"class.std::__1::basic_string"*, i32, i32), void (%"class.webrtc::StatisticsCalculator::PeriodicUmaCount"*, %"class.std::__1::basic_string"*, i32, i32)* @_ZN6webrtc20StatisticsCalculator16PeriodicUmaCountC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEii
@_ZN6webrtc20StatisticsCalculator16PeriodicUmaCountD1Ev = hidden unnamed_addr alias void (%"class.webrtc::StatisticsCalculator::PeriodicUmaCount"*), void (%"class.webrtc::StatisticsCalculator::PeriodicUmaCount"*)* @_ZN6webrtc20StatisticsCalculator16PeriodicUmaCountD2Ev
@_ZN6webrtc20StatisticsCalculator18PeriodicUmaAverageC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEii = hidden unnamed_addr alias void (%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"*, %"class.std::__1::basic_string"*, i32, i32), void (%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"*, %"class.std::__1::basic_string"*, i32, i32)* @_ZN6webrtc20StatisticsCalculator18PeriodicUmaAverageC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEii
@_ZN6webrtc20StatisticsCalculator18PeriodicUmaAverageD1Ev = hidden unnamed_addr alias void (%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"*), void (%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"*)* @_ZN6webrtc20StatisticsCalculator18PeriodicUmaAverageD2Ev
@_ZN6webrtc20StatisticsCalculatorC1Ev = hidden unnamed_addr alias void (%"class.webrtc::StatisticsCalculator"*), void (%"class.webrtc::StatisticsCalculator"*)* @_ZN6webrtc20StatisticsCalculatorC2Ev
@_ZN6webrtc20StatisticsCalculatorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::StatisticsCalculator"*), void (%"class.webrtc::StatisticsCalculator"*)* @_ZN6webrtc20StatisticsCalculatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator17PeriodicUmaLoggerC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEii(%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger", %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator17PeriodicUmaLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger", %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #13
  br label %19

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %6, i8* %16, i64 %18) #13
  br label %19

19:                                               ; preds = %11, %14
  %20 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger", %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0, i64 0, i32 2
  store i32 %2, i32* %20, align 8
  %21 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger", %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0, i64 0, i32 3
  store i32 %3, i32* %21, align 4
  %22 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger", %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0, i64 0, i32 4
  store i32 0, i32* %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator17PeriodicUmaLoggerD2Ev(%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger", %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator17PeriodicUmaLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger", %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator17PeriodicUmaLoggerD0Ev(%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator17PeriodicUmaLogger12AdvanceClockEi(%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger", %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, %1
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger", %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %29, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0 to i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)***
  %11 = load i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)**, i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %11, i64 2
  %13 = load i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %12, align 8
  %14 = tail call i32 %13(%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0) #13
  %15 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger", %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger", %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = tail call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24) %15, i32 1, i32 %17, i32 50) #13
  %19 = icmp eq %"class.webrtc::metrics::Histogram"* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %9
  tail call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %18, i32 %14) #13
  br label %21

21:                                               ; preds = %9, %20
  %22 = bitcast %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0 to void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)***
  %23 = load void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)**, void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %23, i64 3
  %25 = load void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %24, align 8
  tail call void %25(%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0) #13
  %26 = load i32, i32* %6, align 8
  %27 = load i32, i32* %3, align 8
  %28 = sub nsw i32 %27, %26
  store i32 %28, i32* %3, align 8
  br label %29

29:                                               ; preds = %2, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc20StatisticsCalculator17PeriodicUmaLogger8LogToUmaEi(%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger", %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger", %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = tail call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24) %3, i32 1, i32 %5, i32 50) #13
  %7 = icmp eq %"class.webrtc::metrics::Histogram"* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %6, i32 %1) #13
  br label %9

9:                                                ; preds = %2, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32) local_unnamed_addr #4

declare void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator16PeriodicUmaCountC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEii(%"class.webrtc::StatisticsCalculator::PeriodicUmaCount"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator17PeriodicUmaLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #13
  br label %19

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %6, i8* %16, i64 %18) #13
  br label %19

19:                                               ; preds = %11, %14
  %20 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 0, i32 2
  store i32 %2, i32* %20, align 8
  %21 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 0, i32 3
  store i32 %3, i32* %21, align 4
  %22 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 0, i32 4
  store i32 0, i32* %22, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator16PeriodicUmaCountE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %23 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 1
  store i32 0, i32* %23, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator16PeriodicUmaCountD2Ev(%"class.webrtc::StatisticsCalculator::PeriodicUmaCount"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator16PeriodicUmaCountE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = tail call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24) %5, i32 1, i32 %7, i32 50) #13
  %9 = icmp eq %"class.webrtc::metrics::Histogram"* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  tail call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %8, i32 %4) #13
  br label %11

11:                                               ; preds = %1, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator17PeriodicUmaLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %11, %16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6webrtc20StatisticsCalculator16PeriodicUmaCount6MetricEv(%"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator16PeriodicUmaCountD0Ev(%"class.webrtc::StatisticsCalculator::PeriodicUmaCount"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator16PeriodicUmaCountE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = tail call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24) %5, i32 1, i32 %7, i32 50) #13
  %9 = icmp eq %"class.webrtc::metrics::Histogram"* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  tail call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %8, i32 %4) #13
  br label %11

11:                                               ; preds = %10, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator17PeriodicUmaLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %11, %16
  %20 = bitcast %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator16PeriodicUmaCount14RegisterSampleEv(%"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc20StatisticsCalculator16PeriodicUmaCount5ResetEv(%"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* nocapture) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %0, i64 0, i32 1
  store i32 0, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator18PeriodicUmaAverageC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEii(%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator17PeriodicUmaLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #13
  br label %19

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %6, i8* %16, i64 %18) #13
  br label %19

19:                                               ; preds = %11, %14
  %20 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 0, i32 2
  store i32 %2, i32* %20, align 8
  %21 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 0, i32 3
  store i32 %3, i32* %21, align 4
  %22 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 0, i32 4
  store i32 0, i32* %22, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator18PeriodicUmaAverageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %23 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %23, align 8
  %24 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 3
  store i32 0, i32* %24, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator18PeriodicUmaAverageD2Ev(%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator18PeriodicUmaAverageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 2
  %8 = load double, double* %7, align 8
  %9 = sitofp i32 %4 to double
  %10 = fdiv double %8, %9
  %11 = fptosi double %10 to i32
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i32 [ %11, %6 ], [ 0, %1 ]
  %14 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = tail call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24) %14, i32 1, i32 %16, i32 50) #13
  %18 = icmp eq %"class.webrtc::metrics::Histogram"* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %12
  tail call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %17, i32 %13) #13
  br label %20

20:                                               ; preds = %12, %19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator17PeriodicUmaLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #14
  br label %28

28:                                               ; preds = %20, %25
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6webrtc20StatisticsCalculator18PeriodicUmaAverage6MetricEv(%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 2
  %7 = load double, double* %6, align 8
  %8 = sitofp i32 %3 to double
  %9 = fdiv double %7, %8
  %10 = fptosi double %9 to i32
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i32 [ %10, %5 ], [ 0, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator18PeriodicUmaAverageD0Ev(%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator18PeriodicUmaAverageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 2
  %8 = load double, double* %7, align 8
  %9 = sitofp i32 %4 to double
  %10 = fdiv double %8, %9
  %11 = fptosi double %10 to i32
  br label %12

12:                                               ; preds = %6, %1
  %13 = phi i32 [ %11, %6 ], [ 0, %1 ]
  %14 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = tail call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24) %14, i32 1, i32 %16, i32 50) #13
  %18 = icmp eq %"class.webrtc::metrics::Histogram"* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %12
  tail call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %17, i32 %13) #13
  br label %20

20:                                               ; preds = %19, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator17PeriodicUmaLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #14
  br label %28

28:                                               ; preds = %20, %25
  %29 = bitcast %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0 to i8*
  tail call void @_ZdlPv(i8* %29) #14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator18PeriodicUmaAverage14RegisterSampleEi(%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = sitofp i32 %1 to double
  %4 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 2
  %5 = load double, double* %4, align 8
  %6 = fadd double %5, %3
  store double %6, double* %4, align 8
  %7 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc20StatisticsCalculator18PeriodicUmaAverage5ResetEv(%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* nocapture) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %0, i64 0, i32 3
  store i32 0, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculatorC2Ev(%"class.webrtc::StatisticsCalculator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6webrtc20StatisticsCalculatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12
  %6 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 15
  store i64 0, i64* %6, align 8
  %7 = bitcast %"struct.webrtc::NetEqLifetimeStatistics"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 177, i1 false)
  %8 = bitcast i64* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 60, i1 false)
  %9 = bitcast %"class.std::__1::deque"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 52, i1 false)
  %10 = tail call i8* @_Znwm(i64 48) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %10, i8* align 1 getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i64 47, i1 false) #13
  %11 = getelementptr inbounds i8, i8* %10, i64 47
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 16, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator17PeriodicUmaLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 16, i32 0, i32 1
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %13, i8* nonnull %10, i64 47) #13
  %14 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 16, i32 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator16PeriodicUmaCountE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %15 = bitcast i32* %14 to <4 x i32>*
  store <4 x i32> <i32 60000, i32 100, i32 0, i32 0>, <4 x i32>* %15, align 8
  tail call void @_ZdlPv(i8* nonnull %10) #14
  %16 = tail call i8* @_Znwm(i64 48) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %16, i8* align 1 getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i64 39, i1 false) #13
  %17 = getelementptr inbounds i8, i8* %16, i64 39
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator17PeriodicUmaLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 0, i32 1
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %19, i8* nonnull %16, i64 39) #13
  %20 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 0, i32 2
  store i32 60000, i32* %20, align 8
  %21 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 0, i32 3
  store i32 1000, i32* %21, align 4
  %22 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 0, i32 4
  store i32 0, i32* %22, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator18PeriodicUmaAverageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %23 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 2
  store double 0.000000e+00, double* %23, align 8
  %24 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 3
  store i32 0, i32* %24, align 8
  tail call void @_ZdlPv(i8* nonnull %16) #14
  %25 = tail call i8* @_Znwm(i64 48) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %25, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0), i64 38, i1 false) #13
  %26 = getelementptr inbounds i8, i8* %25, i64 38
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 18, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator17PeriodicUmaLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 18, i32 0, i32 1
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %28, i8* nonnull %25, i64 38) #13
  %29 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 18, i32 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator16PeriodicUmaCountE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %30 = bitcast i32* %29 to <4 x i32>*
  store <4 x i32> <i32 60000, i32 100, i32 0, i32 0>, <4 x i32>* %30, align 8
  tail call void @_ZdlPv(i8* nonnull %25) #14
  %31 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 19
  store i8 0, i8* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculatorD2Ev(%"class.webrtc::StatisticsCalculator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6webrtc20StatisticsCalculatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 18, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator16PeriodicUmaCountE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 18, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 18, i32 0, i32 1
  %7 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 18, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = tail call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24) %6, i32 1, i32 %8, i32 50) #13
  %10 = icmp eq %"class.webrtc::metrics::Histogram"* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %1
  tail call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %9, i32 %5) #13
  br label %12

12:                                               ; preds = %11, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator17PeriodicUmaLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %12, %17
  %21 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator18PeriodicUmaAverageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 2
  %27 = load double, double* %26, align 8
  %28 = sitofp i32 %23 to double
  %29 = fdiv double %27, %28
  %30 = fptosi double %29 to i32
  br label %31

31:                                               ; preds = %25, %20
  %32 = phi i32 [ %30, %25 ], [ 0, %20 ]
  %33 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 0, i32 1
  %34 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = tail call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24) %33, i32 1, i32 %35, i32 50) #13
  %37 = icmp eq %"class.webrtc::metrics::Histogram"* %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %31
  tail call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %36, i32 %32) #13
  br label %39

39:                                               ; preds = %38, %31
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator17PeriodicUmaLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #14
  br label %47

47:                                               ; preds = %39, %44
  %48 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 16, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator16PeriodicUmaCountE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 16, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 16, i32 0, i32 1
  %52 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 16, i32 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = tail call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24) %51, i32 1, i32 %53, i32 50) #13
  %55 = icmp eq %"class.webrtc::metrics::Histogram"* %54, null
  br i1 %55, label %57, label %56

56:                                               ; preds = %47
  tail call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %54, i32 %50) #13
  br label %57

57:                                               ; preds = %56, %47
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc20StatisticsCalculator17PeriodicUmaLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  tail call void @_ZdlPv(i8* %64) #14
  br label %65

65:                                               ; preds = %57, %62
  %66 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %67 = load i32**, i32*** %66, align 8
  %68 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = lshr i64 %69, 10
  %71 = getelementptr inbounds i32*, i32** %67, i64 %70
  %72 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %73 = load i32**, i32*** %72, align 8
  %74 = icmp eq i32** %73, %67
  %75 = ptrtoint i32** %73 to i64
  %76 = ptrtoint i32** %67 to i64
  br i1 %74, label %77, label %79

77:                                               ; preds = %65
  %78 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  br label %92

79:                                               ; preds = %65
  %80 = load i32*, i32** %71, align 8
  %81 = and i64 %69, 1023
  %82 = getelementptr inbounds i32, i32* %80, i64 %81
  %83 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, %69
  %86 = lshr i64 %85, 10
  %87 = getelementptr inbounds i32*, i32** %67, i64 %86
  %88 = load i32*, i32** %87, align 8
  %89 = and i64 %85, 1023
  %90 = getelementptr inbounds i32, i32* %88, i64 %89
  %91 = icmp eq i32* %90, %82
  br i1 %91, label %92, label %98

92:                                               ; preds = %111, %79, %77
  %93 = phi i64* [ %78, %77 ], [ %83, %79 ], [ %83, %111 ]
  store i64 0, i64* %93, align 8
  %94 = bitcast i32*** %72 to i64*
  %95 = sub i64 %75, %76
  %96 = ashr exact i64 %95, 3
  %97 = icmp ugt i64 %96, 2
  br i1 %97, label %116, label %129

98:                                               ; preds = %79, %111
  %99 = phi i32* [ %114, %111 ], [ %82, %79 ]
  %100 = phi i32** [ %113, %111 ], [ %71, %79 ]
  %101 = getelementptr inbounds i32, i32* %99, i64 1
  %102 = ptrtoint i32* %101 to i64
  %103 = bitcast i32** %100 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = sub i64 %102, %104
  %106 = icmp eq i64 %105, 4096
  br i1 %106, label %107, label %111

107:                                              ; preds = %98
  %108 = getelementptr inbounds i32*, i32** %100, i64 1
  %109 = bitcast i32** %108 to i64*
  %110 = load i64, i64* %109, align 8
  br label %111

111:                                              ; preds = %107, %98
  %112 = phi i64 [ %110, %107 ], [ %102, %98 ]
  %113 = phi i32** [ %108, %107 ], [ %100, %98 ]
  %114 = inttoptr i64 %112 to i32*
  %115 = icmp eq i32* %90, %114
  br i1 %115, label %92, label %98

116:                                              ; preds = %92, %116
  %117 = phi i32** [ %121, %116 ], [ %67, %92 ]
  %118 = bitcast i32** %117 to i8**
  %119 = load i8*, i8** %118, align 8
  tail call void @_ZdlPv(i8* %119) #14
  %120 = load i32**, i32*** %66, align 8
  %121 = getelementptr inbounds i32*, i32** %120, i64 1
  store i32** %121, i32*** %66, align 8
  %122 = load i64, i64* %94, align 8
  %123 = ptrtoint i32** %121 to i64
  %124 = sub i64 %122, %123
  %125 = ashr exact i64 %124, 3
  %126 = icmp ugt i64 %125, 2
  br i1 %126, label %116, label %127

127:                                              ; preds = %116
  %128 = inttoptr i64 %122 to i32**
  br label %129

129:                                              ; preds = %127, %92
  %130 = phi i32** [ %73, %92 ], [ %128, %127 ]
  %131 = phi i32** [ %67, %92 ], [ %121, %127 ]
  %132 = phi i64 [ %96, %92 ], [ %125, %127 ]
  switch i64 %132, label %136 [
    i64 1, label %134
    i64 2, label %133
  ]

133:                                              ; preds = %129
  br label %134

134:                                              ; preds = %129, %133
  %135 = phi i64 [ 1024, %133 ], [ 512, %129 ]
  store i64 %135, i64* %68, align 8
  br label %136

136:                                              ; preds = %134, %129
  %137 = icmp eq i32** %131, %130
  br i1 %137, label %156, label %138

138:                                              ; preds = %136, %138
  %139 = phi i32** [ %142, %138 ], [ %131, %136 ]
  %140 = bitcast i32** %139 to i8**
  %141 = load i8*, i8** %140, align 8
  tail call void @_ZdlPv(i8* %141) #14
  %142 = getelementptr inbounds i32*, i32** %139, i64 1
  %143 = icmp eq i32** %142, %130
  br i1 %143, label %144, label %138

144:                                              ; preds = %138
  %145 = load i32**, i32*** %66, align 8
  %146 = load i32**, i32*** %72, align 8
  %147 = icmp eq i32** %146, %145
  br i1 %147, label %156, label %148

148:                                              ; preds = %144
  %149 = ptrtoint i32** %145 to i64
  %150 = getelementptr i32*, i32** %146, i64 -1
  %151 = ptrtoint i32** %150 to i64
  %152 = sub i64 %151, %149
  %153 = lshr i64 %152, 3
  %154 = xor i64 %153, -1
  %155 = getelementptr i32*, i32** %146, i64 %154
  store i32** %155, i32*** %72, align 8
  br label %156

156:                                              ; preds = %148, %144, %136
  %157 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %158 = load i32**, i32*** %157, align 8
  %159 = icmp eq i32** %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %156
  %161 = bitcast i32** %158 to i8*
  tail call void @_ZdlPv(i8* %161) #14
  br label %162

162:                                              ; preds = %156, %160
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculatorD0Ev(%"class.webrtc::StatisticsCalculator"*) unnamed_addr #0 align 2 {
  tail call void @_ZN6webrtc20StatisticsCalculatorD2Ev(%"class.webrtc::StatisticsCalculator"* %0) #13
  %2 = bitcast %"class.webrtc::StatisticsCalculator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator5ResetEv(%"class.webrtc::StatisticsCalculator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 13
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 15
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %6 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false)
  %7 = load i32**, i32*** %5, align 8
  %8 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = lshr i64 %9, 10
  %11 = getelementptr inbounds i32*, i32** %7, i64 %10
  %12 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp eq i32** %13, %7
  %15 = ptrtoint i32** %13 to i64
  %16 = ptrtoint i32** %7 to i64
  br i1 %14, label %17, label %19

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  br label %32

19:                                               ; preds = %1
  %20 = load i32*, i32** %11, align 8
  %21 = and i64 %9, 1023
  %22 = getelementptr inbounds i32, i32* %20, i64 %21
  %23 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, %9
  %26 = lshr i64 %25, 10
  %27 = getelementptr inbounds i32*, i32** %7, i64 %26
  %28 = load i32*, i32** %27, align 8
  %29 = and i64 %25, 1023
  %30 = getelementptr inbounds i32, i32* %28, i64 %29
  %31 = icmp eq i32* %30, %22
  br i1 %31, label %32, label %38

32:                                               ; preds = %51, %19, %17
  %33 = phi i64* [ %18, %17 ], [ %23, %19 ], [ %23, %51 ]
  store i64 0, i64* %33, align 8
  %34 = bitcast i32*** %12 to i64*
  %35 = sub i64 %15, %16
  %36 = ashr exact i64 %35, 3
  %37 = icmp ugt i64 %36, 2
  br i1 %37, label %56, label %67

38:                                               ; preds = %19, %51
  %39 = phi i32* [ %54, %51 ], [ %22, %19 ]
  %40 = phi i32** [ %53, %51 ], [ %11, %19 ]
  %41 = getelementptr inbounds i32, i32* %39, i64 1
  %42 = ptrtoint i32* %41 to i64
  %43 = bitcast i32** %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = icmp eq i64 %45, 4096
  br i1 %46, label %47, label %51

47:                                               ; preds = %38
  %48 = getelementptr inbounds i32*, i32** %40, i64 1
  %49 = bitcast i32** %48 to i64*
  %50 = load i64, i64* %49, align 8
  br label %51

51:                                               ; preds = %47, %38
  %52 = phi i64 [ %50, %47 ], [ %42, %38 ]
  %53 = phi i32** [ %48, %47 ], [ %40, %38 ]
  %54 = inttoptr i64 %52 to i32*
  %55 = icmp eq i32* %30, %54
  br i1 %55, label %32, label %38

56:                                               ; preds = %32, %56
  %57 = phi i32** [ %61, %56 ], [ %7, %32 ]
  %58 = bitcast i32** %57 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @_ZdlPv(i8* %59) #14
  %60 = load i32**, i32*** %5, align 8
  %61 = getelementptr inbounds i32*, i32** %60, i64 1
  store i32** %61, i32*** %5, align 8
  %62 = load i64, i64* %34, align 8
  %63 = ptrtoint i32** %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 3
  %66 = icmp ugt i64 %65, 2
  br i1 %66, label %56, label %67

67:                                               ; preds = %56, %32
  %68 = phi i64 [ %36, %32 ], [ %65, %56 ]
  switch i64 %68, label %72 [
    i64 1, label %70
    i64 2, label %69
  ]

69:                                               ; preds = %67
  br label %70

70:                                               ; preds = %67, %69
  %71 = phi i64 [ 1024, %69 ], [ 512, %67 ]
  store i64 %71, i64* %8, align 8
  br label %72

72:                                               ; preds = %70, %67
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc20StatisticsCalculator8ResetMcuEv(%"class.webrtc::StatisticsCalculator"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 10
  store i32 0, i32* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator20ExpandedVoiceSamplesEmb(%"class.webrtc::StatisticsCalculator"* nocapture, i64, i1 zeroext) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 7
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %1
  store i64 %6, i64* %4, align 8
  %7 = trunc i64 %1 to i32
  %8 = icmp slt i32 %7, 0
  %9 = shl i64 %1, 32
  %10 = ashr exact i64 %9, 32
  %11 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  br i1 %8, label %13, label %15

13:                                               ; preds = %3
  %14 = sub i64 %12, %10
  store i64 %14, i64* %11, align 8
  br label %23

15:                                               ; preds = %3
  %16 = icmp ult i64 %12, %10
  %17 = select i1 %16, i64 %12, i64 %10
  %18 = sub i64 %12, %17
  store i64 %18, i64* %11, align 8
  %19 = sub i64 %10, %17
  %20 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %19, %21
  store i64 %22, i64* %20, align 8
  br label %23

23:                                               ; preds = %13, %15
  %24 = zext i1 %2 to i64
  %25 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, %24
  store i64 %27, i64* %25, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator26ConcealedSamplesCorrectionEib(%"class.webrtc::StatisticsCalculator"* nocapture, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = icmp slt i32 %1, 0
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  br i1 %4, label %8, label %14

8:                                                ; preds = %3
  %9 = sub i64 %7, %5
  store i64 %9, i64* %6, align 8
  br i1 %2, label %32, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %5
  store i64 %13, i64* %11, align 8
  br label %32

14:                                               ; preds = %3
  %15 = icmp ult i64 %7, %5
  %16 = select i1 %15, i64 %7, i64 %5
  %17 = sub i64 %7, %16
  store i64 %17, i64* %6, align 8
  %18 = sub i64 %5, %16
  %19 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %18, %20
  store i64 %21, i64* %19, align 8
  br i1 %2, label %32, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, %5
  %26 = select i1 %25, i64 %24, i64 %5
  %27 = sub i64 %24, %26
  store i64 %27, i64* %23, align 8
  %28 = sub i64 %5, %26
  %29 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 8
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %28, %30
  store i64 %31, i64* %29, align 8
  br label %32

32:                                               ; preds = %14, %22, %8, %10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator20ExpandedNoiseSamplesEmb(%"class.webrtc::StatisticsCalculator"* nocapture, i64, i1 zeroext) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 8
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %1
  store i64 %6, i64* %4, align 8
  %7 = trunc i64 %1 to i32
  %8 = icmp slt i32 %7, 0
  %9 = shl i64 %1, 32
  %10 = ashr exact i64 %9, 32
  %11 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  br i1 %8, label %13, label %18

13:                                               ; preds = %3
  %14 = sub i64 %12, %10
  store i64 %14, i64* %11, align 8
  %15 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %10
  store i64 %17, i64* %15, align 8
  br label %35

18:                                               ; preds = %3
  %19 = icmp ult i64 %12, %10
  %20 = select i1 %19, i64 %12, i64 %10
  %21 = sub i64 %12, %20
  store i64 %21, i64* %11, align 8
  %22 = sub i64 %10, %20
  %23 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %22, %24
  store i64 %25, i64* %23, align 8
  %26 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 4
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, %10
  %29 = select i1 %28, i64 %27, i64 %10
  %30 = sub i64 %27, %29
  store i64 %30, i64* %26, align 8
  %31 = sub i64 %10, %29
  %32 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 8
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %31, %33
  store i64 %34, i64* %32, align 8
  br label %35

35:                                               ; preds = %13, %18
  %36 = zext i1 %2 to i64
  %37 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, %36
  store i64 %39, i64* %37, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator30ExpandedVoiceSamplesCorrectionEi(%"class.webrtc::StatisticsCalculator"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 7
  %4 = load i64, i64* %3, align 8
  %5 = sext i32 %1 to i64
  %6 = add i64 %4, %5
  %7 = icmp slt i32 %1, 0
  %8 = icmp ugt i64 %6, %4
  %9 = and i1 %7, %8
  %10 = select i1 %9, i64 0, i64 %6
  store i64 %10, i64* %3, align 8
  %11 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  br i1 %7, label %13, label %15

13:                                               ; preds = %2
  %14 = sub i64 %12, %5
  store i64 %14, i64* %11, align 8
  br label %23

15:                                               ; preds = %2
  %16 = icmp ult i64 %12, %5
  %17 = select i1 %16, i64 %12, i64 %5
  %18 = sub i64 %12, %17
  store i64 %18, i64* %11, align 8
  %19 = sub i64 %5, %17
  %20 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %19, %21
  store i64 %22, i64* %20, align 8
  br label %23

23:                                               ; preds = %13, %15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator30ExpandedNoiseSamplesCorrectionEi(%"class.webrtc::StatisticsCalculator"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 8
  %4 = load i64, i64* %3, align 8
  %5 = sext i32 %1 to i64
  %6 = add i64 %4, %5
  %7 = icmp slt i32 %1, 0
  %8 = icmp ugt i64 %6, %4
  %9 = and i1 %7, %8
  %10 = select i1 %9, i64 0, i64 %6
  store i64 %10, i64* %3, align 8
  %11 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  br i1 %7, label %13, label %18

13:                                               ; preds = %2
  %14 = sub i64 %12, %5
  store i64 %14, i64* %11, align 8
  %15 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %5
  store i64 %17, i64* %15, align 8
  br label %35

18:                                               ; preds = %2
  %19 = icmp ult i64 %12, %5
  %20 = select i1 %19, i64 %12, i64 %5
  %21 = sub i64 %12, %20
  store i64 %21, i64* %11, align 8
  %22 = sub i64 %5, %20
  %23 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %22, %24
  store i64 %25, i64* %23, align 8
  %26 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 4
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, %5
  %29 = select i1 %28, i64 %27, i64 %5
  %30 = sub i64 %27, %29
  store i64 %30, i64* %26, align 8
  %31 = sub i64 %5, %29
  %32 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 8
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %31, %33
  store i64 %34, i64* %32, align 8
  br label %35

35:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc20StatisticsCalculator19DecodedOutputPlayedEv(%"class.webrtc::StatisticsCalculator"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 19
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator14EndExpandEventEi(%"class.webrtc::StatisticsCalculator"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 9
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = mul i64 %8, 1000
  %10 = sext i32 %1 to i64
  %11 = udiv i64 %9, %10
  %12 = trunc i64 %11 to i32
  %13 = icmp sgt i32 %12, 149
  br i1 %13, label %14, label %48

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 19
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 14
  %20 = load i32, i32* %19, align 8
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 15
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %23, %12
  store i32 %24, i32* %22, align 4
  %25 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc20StatisticsCalculator14EndExpandEventEiE24atomic_histogram_pointer to i64*) acquire, align 8
  %26 = inttoptr i64 %25 to %"class.webrtc::metrics::Histogram"*
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %46

28:                                               ; preds = %18
  %29 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = tail call i8* @_Znwm(i64 48) #14
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %30, i8** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast i64* %32 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %33, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %30, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i64 32, i1 false) #13
  %34 = getelementptr inbounds i8, i8* %30, i64 32
  store i8 0, i8* %34, align 1
  %35 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 150, i32 5000, i32 50) #13
  %36 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %28
  %41 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %41) #14
  br label %42

42:                                               ; preds = %40, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  %43 = ptrtoint %"class.webrtc::metrics::Histogram"* %35 to i64
  %44 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc20StatisticsCalculator14EndExpandEventEiE24atomic_histogram_pointer to i64*), i64 0, i64 %43 seq_cst seq_cst
  %45 = icmp eq %"class.webrtc::metrics::Histogram"* %35, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %18, %42
  %47 = phi %"class.webrtc::metrics::Histogram"* [ %35, %42 ], [ %26, %18 ]
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %47, i32 %12) #13
  br label %48

48:                                               ; preds = %46, %42, %14, %2
  %49 = load i64, i64* %4, align 8
  store i64 %49, i64* %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator25PreemptiveExpandedSamplesEm(%"class.webrtc::StatisticsCalculator"* nocapture, i64) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 2, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %1
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 6
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %1
  store i64 %11, i64* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator18AcceleratedSamplesEm(%"class.webrtc::StatisticsCalculator"* nocapture, i64) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 6
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 2, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %1
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 7
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %1
  store i64 %11, i64* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator16PacketsDiscardedEm(%"class.webrtc::StatisticsCalculator"* nocapture, i64) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 2, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator25SecondaryPacketsDiscardedEm(%"class.webrtc::StatisticsCalculator"* nocapture, i64) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 15
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 10
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %1
  store i64 %8, i64* %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator24SecondaryPacketsReceivedEm(%"class.webrtc::StatisticsCalculator"* nocapture, i64) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 9
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator15IncreaseCounterEmi(%"class.webrtc::StatisticsCalculator"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = trunc i64 %1 to i32
  %5 = mul i32 %4, 1000
  %6 = srem i32 %5, %2
  %7 = sdiv i32 %5, %2
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %3
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i64 0, i64 0), i32 466, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t, i64 0, i64 0), i32 %6, i32 0, i32 %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i32 %2) #15
  unreachable

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 16
  %12 = bitcast %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %11 to %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*
  %13 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 16, i32 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, %7
  store i32 %15, i32* %13, align 8
  %16 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 16, i32 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp slt i32 %15, %17
  br i1 %18, label %39, label %19

19:                                               ; preds = %10
  %20 = bitcast %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %11 to i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)***
  %21 = load i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)**, i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %21, i64 2
  %23 = load i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %22, align 8
  %24 = tail call i32 %23(%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %12) #13
  %25 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 16, i32 0, i32 1
  %26 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 16, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = tail call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24) %25, i32 1, i32 %27, i32 50) #13
  %29 = icmp eq %"class.webrtc::metrics::Histogram"* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %19
  tail call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %28, i32 %24) #13
  br label %31

31:                                               ; preds = %30, %19
  %32 = bitcast %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %11 to void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)***
  %33 = load void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)**, void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %33, i64 3
  %35 = load void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %34, align 8
  tail call void %35(%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %12) #13
  %36 = load i32, i32* %16, align 8
  %37 = load i32, i32* %13, align 8
  %38 = sub nsw i32 %37, %36
  store i32 %38, i32* %13, align 8
  br label %39

39:                                               ; preds = %10, %31
  %40 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17
  %41 = bitcast %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %40 to %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*
  %42 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = add nsw i32 %43, %7
  store i32 %44, i32* %42, align 8
  %45 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = icmp slt i32 %44, %46
  br i1 %47, label %68, label %48

48:                                               ; preds = %39
  %49 = bitcast %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %40 to i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)***
  %50 = load i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)**, i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %50, i64 2
  %52 = load i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %51, align 8
  %53 = tail call i32 %52(%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %41) #13
  %54 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 0, i32 1
  %55 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = tail call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24) %54, i32 1, i32 %56, i32 50) #13
  %58 = icmp eq %"class.webrtc::metrics::Histogram"* %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %48
  tail call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %57, i32 %53) #13
  br label %60

60:                                               ; preds = %59, %48
  %61 = bitcast %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage"* %40 to void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)***
  %62 = load void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)**, void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %62, i64 3
  %64 = load void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %63, align 8
  tail call void %64(%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %41) #13
  %65 = load i32, i32* %45, align 8
  %66 = load i32, i32* %42, align 8
  %67 = sub nsw i32 %66, %65
  store i32 %67, i32* %42, align 8
  br label %68

68:                                               ; preds = %39, %60
  %69 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 18
  %70 = bitcast %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %69 to %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*
  %71 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 18, i32 0, i32 4
  %72 = load i32, i32* %71, align 8
  %73 = add nsw i32 %72, %7
  store i32 %73, i32* %71, align 8
  %74 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 18, i32 0, i32 2
  %75 = load i32, i32* %74, align 8
  %76 = icmp slt i32 %73, %75
  br i1 %76, label %97, label %77

77:                                               ; preds = %68
  %78 = bitcast %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %69 to i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)***
  %79 = load i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)**, i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*** %78, align 8
  %80 = getelementptr inbounds i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %79, i64 2
  %81 = load i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, i32 (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %80, align 8
  %82 = tail call i32 %81(%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %70) #13
  %83 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 18, i32 0, i32 1
  %84 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 18, i32 0, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = tail call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24) %83, i32 1, i32 %85, i32 50) #13
  %87 = icmp eq %"class.webrtc::metrics::Histogram"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %77
  tail call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %86, i32 %82) #13
  br label %89

89:                                               ; preds = %88, %77
  %90 = bitcast %"class.webrtc::StatisticsCalculator::PeriodicUmaCount"* %69 to void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)***
  %91 = load void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)**, void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %91, i64 3
  %93 = load void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)*, void (%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"*)** %92, align 8
  tail call void %93(%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger"* %70) #13
  %94 = load i32, i32* %74, align 8
  %95 = load i32, i32* %71, align 8
  %96 = sub nsw i32 %95, %94
  store i32 %96, i32* %71, align 8
  br label %97

97:                                               ; preds = %68, %89
  %98 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 10
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %99, %4
  %101 = mul nsw i32 %2, 60
  %102 = icmp ugt i32 %100, %101
  %103 = select i1 %102, i32 0, i32 %100
  store i32 %103, i32* %98, align 8
  %104 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %105, %1
  store i64 %106, i64* %104, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator17JitterBufferDelayEmmm(%"class.webrtc::StatisticsCalculator"* nocapture, i64, i64, i64) local_unnamed_addr #7 align 2 {
  %5 = mul i64 %2, %1
  %6 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 3
  %7 = mul i64 %3, %1
  %8 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 5
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %7
  store i64 %10, i64* %8, align 8
  %11 = bitcast i64* %6 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 8
  %13 = insertelement <2 x i64> undef, i64 %5, i32 0
  %14 = insertelement <2 x i64> %13, i64 %1, i32 1
  %15 = add <2 x i64> %12, %14
  %16 = bitcast i64* %6 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %16, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator23SecondaryDecodedSamplesEi(%"class.webrtc::StatisticsCalculator"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 13
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, %1
  store i32 %5, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator19FlushedPacketBufferEv(%"class.webrtc::StatisticsCalculator"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 2, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %2, align 8
  %5 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 18, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator14ReceivedPacketEv(%"class.webrtc::StatisticsCalculator"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 13
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator26RelativePacketArrivalDelayEm(%"class.webrtc::StatisticsCalculator"* nocapture, i64) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 12
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator27LogDelayedPacketOutageEventEii(%"class.webrtc::StatisticsCalculator"* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = sdiv i32 %2, 1000
  %6 = sdiv i32 %1, %5
  %7 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc20StatisticsCalculator27LogDelayedPacketOutageEventEiiE24atomic_histogram_pointer to i64*) acquire, align 8
  %8 = inttoptr i64 %7 to %"class.webrtc::metrics::Histogram"*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %28

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = tail call i8* @_Znwm(i64 48) #14
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast i64* %14 to <2 x i64>*
  store <2 x i64> <i64 39, i64 -9223372036854775760>, <2 x i64>* %15, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), i64 39, i1 false) #13
  %16 = getelementptr inbounds i8, i8* %12, i64 39
  store i8 0, i8* %16, align 1
  %17 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i32 1, i32 2000, i32 100) #13
  %18 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %22, %10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  %25 = ptrtoint %"class.webrtc::metrics::Histogram"* %17 to i64
  %26 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc20StatisticsCalculator27LogDelayedPacketOutageEventEiiE24atomic_histogram_pointer to i64*), i64 0, i64 %25 seq_cst seq_cst
  %27 = icmp eq %"class.webrtc::metrics::Histogram"* %17, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %3, %24
  %29 = phi %"class.webrtc::metrics::Histogram"* [ %17, %24 ], [ %8, %3 ]
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %29, i32 %6) #13
  br label %30

30:                                               ; preds = %24, %28
  %31 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 16, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %31, align 4
  %34 = sext i32 %1 to i64
  %35 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 1, i32 11
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, %34
  store i64 %37, i64* %35, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator16StoreWaitingTimeEi(%"class.webrtc::StatisticsCalculator"*, i32) local_unnamed_addr #0 align 2 {
  %3 = sitofp i32 %1 to double
  %4 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 2
  %5 = load double, double* %4, align 8
  %6 = fadd double %5, %3
  store double %6, double* %4, align 8
  %7 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 17, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12
  %11 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 100
  %14 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  br i1 %13, label %16, label %29

16:                                               ; preds = %2
  store i64 99, i64* %11, align 8
  %17 = add i64 %15, 1
  store i64 %17, i64* %14, align 8
  %18 = icmp ult i64 %17, 2048
  br i1 %18, label %29, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %21 = bitcast i32*** %20 to i8***
  %22 = load i8**, i8*** %21, align 8
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #14
  %24 = load i32**, i32*** %20, align 8
  %25 = getelementptr inbounds i32*, i32** %24, i64 1
  store i32** %25, i32*** %20, align 8
  %26 = load i64, i64* %14, align 8
  %27 = add i64 %26, -1024
  store i64 %27, i64* %14, align 8
  %28 = load i64, i64* %11, align 8
  br label %29

29:                                               ; preds = %2, %19, %16
  %30 = phi i64 [ %28, %19 ], [ 99, %16 ], [ %12, %2 ]
  %31 = phi i64 [ %27, %19 ], [ %17, %16 ], [ %15, %2 ]
  %32 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %33 = bitcast i32*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %36 = bitcast i32*** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %34, %37
  %39 = icmp eq i64 %38, 0
  %40 = shl i64 %38, 7
  %41 = add i64 %40, -1
  %42 = select i1 %39, i64 0, i64 %41
  %43 = add i64 %30, %31
  %44 = icmp eq i64 %42, %43
  %45 = inttoptr i64 %37 to i32**
  %46 = inttoptr i64 %34 to i32**
  br i1 %44, label %47, label %54

47:                                               ; preds = %29
  %48 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 1
  tail call void @_ZNSt3__15dequeIiNS_9allocatorIiEEE19__add_back_capacityEv(%"class.std::__1::deque"* %10) #13
  %49 = load i64, i64* %11, align 8
  %50 = load i64, i64* %48, align 8
  %51 = load i32**, i32*** %35, align 8
  %52 = load i32**, i32*** %32, align 8
  %53 = add i64 %50, %49
  br label %54

54:                                               ; preds = %47, %29
  %55 = phi i64 [ %53, %47 ], [ %43, %29 ]
  %56 = phi i32** [ %52, %47 ], [ %46, %29 ]
  %57 = phi i32** [ %51, %47 ], [ %45, %29 ]
  %58 = icmp eq i32** %56, %57
  br i1 %58, label %65, label %59

59:                                               ; preds = %54
  %60 = lshr i64 %55, 10
  %61 = getelementptr inbounds i32*, i32** %57, i64 %60
  %62 = load i32*, i32** %61, align 8
  %63 = and i64 %55, 1023
  %64 = getelementptr inbounds i32, i32* %62, i64 %63
  br label %65

65:                                               ; preds = %54, %59
  %66 = phi i32* [ %64, %59 ], [ null, %54 ]
  store i32 %1, i32* %66, align 4
  %67 = load i64, i64* %11, align 8
  %68 = add i64 %67, 1
  store i64 %68, i64* %11, align 8
  %69 = sext i32 %1 to i64
  %70 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 2, i32 4
  store i64 %69, i64* %70, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20StatisticsCalculator20GetNetworkStatisticsEmPNS_22NetEqNetworkStatisticsE(%"class.webrtc::StatisticsCalculator"*, i64, %"struct.webrtc::NetEqNetworkStatistics"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::__less.24", align 1
  %5 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 6
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 10
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %3
  %10 = load i32, i32* %7, align 8
  %11 = zext i32 %10 to i64
  %12 = icmp ult i64 %6, %11
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = shl i64 %6, 14
  %15 = udiv i64 %14, %11
  %16 = trunc i64 %15 to i16
  br label %17

17:                                               ; preds = %3, %9, %13
  %18 = phi i16 [ %16, %13 ], [ 0, %3 ], [ 16384, %9 ]
  %19 = getelementptr inbounds %"struct.webrtc::NetEqNetworkStatistics", %"struct.webrtc::NetEqNetworkStatistics"* %2, i64 0, i32 6
  store i16 %18, i16* %19, align 4
  %20 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 5
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %17
  %24 = load i32, i32* %7, align 8
  %25 = zext i32 %24 to i64
  %26 = icmp ult i64 %21, %25
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = shl i64 %21, 14
  %29 = udiv i64 %28, %25
  %30 = trunc i64 %29 to i16
  br label %31

31:                                               ; preds = %17, %23, %27
  %32 = phi i16 [ %30, %27 ], [ 0, %17 ], [ 16384, %23 ]
  %33 = getelementptr inbounds %"struct.webrtc::NetEqNetworkStatistics", %"struct.webrtc::NetEqNetworkStatistics"* %2, i64 0, i32 5
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 7
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 8
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, %35
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %31
  %41 = load i32, i32* %7, align 8
  %42 = zext i32 %41 to i64
  %43 = icmp ult i64 %38, %42
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = shl i64 %38, 14
  %46 = udiv i64 %45, %42
  %47 = trunc i64 %46 to i16
  br label %48

48:                                               ; preds = %31, %40, %44
  %49 = phi i16 [ %47, %44 ], [ 0, %31 ], [ 16384, %40 ]
  %50 = getelementptr inbounds %"struct.webrtc::NetEqNetworkStatistics", %"struct.webrtc::NetEqNetworkStatistics"* %2, i64 0, i32 3
  store i16 %49, i16* %50, align 2
  %51 = load i64, i64* %34, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %48
  %54 = load i32, i32* %7, align 8
  %55 = zext i32 %54 to i64
  %56 = icmp ult i64 %51, %55
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = shl i64 %51, 14
  %59 = udiv i64 %58, %55
  %60 = trunc i64 %59 to i16
  br label %61

61:                                               ; preds = %48, %53, %57
  %62 = phi i16 [ %60, %57 ], [ 0, %48 ], [ 16384, %53 ]
  %63 = getelementptr inbounds %"struct.webrtc::NetEqNetworkStatistics", %"struct.webrtc::NetEqNetworkStatistics"* %2, i64 0, i32 4
  store i16 %62, i16* %63, align 4
  %64 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 13
  %65 = load i32, i32* %64, align 8
  %66 = zext i32 %65 to i64
  %67 = icmp eq i32 %65, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %61
  %69 = load i32, i32* %7, align 8
  %70 = icmp ugt i32 %69, %65
  br i1 %70, label %71, label %76

71:                                               ; preds = %68
  %72 = zext i32 %69 to i64
  %73 = shl nuw nsw i64 %66, 14
  %74 = udiv i64 %73, %72
  %75 = trunc i64 %74 to i16
  br label %76

76:                                               ; preds = %61, %68, %71
  %77 = phi i16 [ %75, %71 ], [ 0, %61 ], [ 16384, %68 ]
  %78 = getelementptr inbounds %"struct.webrtc::NetEqNetworkStatistics", %"struct.webrtc::NetEqNetworkStatistics"* %2, i64 0, i32 7
  store i16 %77, i16* %78, align 2
  %79 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 15
  %80 = load i64, i64* %79, align 8
  %81 = mul i64 %80, %1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %76
  %84 = load i32, i32* %64, align 8
  %85 = trunc i64 %81 to i32
  %86 = add i32 %84, %85
  %87 = zext i32 %86 to i64
  %88 = icmp ult i64 %81, %87
  br i1 %88, label %89, label %93

89:                                               ; preds = %83
  %90 = shl i64 %81, 14
  %91 = udiv i64 %90, %87
  %92 = trunc i64 %91 to i16
  br label %93

93:                                               ; preds = %76, %83, %89
  %94 = phi i16 [ %92, %89 ], [ 0, %76 ], [ 16384, %83 ]
  %95 = getelementptr inbounds %"struct.webrtc::NetEqNetworkStatistics", %"struct.webrtc::NetEqNetworkStatistics"* %2, i64 0, i32 8
  store i16 %94, i16* %95, align 4
  %96 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"struct.webrtc::NetEqNetworkStatistics", %"struct.webrtc::NetEqNetworkStatistics"* %2, i64 0, i32 9
  %101 = bitcast i32* %100 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %101, i8 -1, i64 16, i1 false)
  br label %224

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %104 = load i32**, i32*** %103, align 8
  %105 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = lshr i64 %106, 10
  %108 = getelementptr inbounds i32*, i32** %104, i64 %107
  %109 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %110 = load i32**, i32*** %109, align 8
  %111 = icmp eq i32** %110, %104
  br i1 %111, label %112, label %116

112:                                              ; preds = %102
  %113 = add i64 %106, %97
  %114 = lshr i64 %113, 10
  %115 = getelementptr inbounds i32*, i32** %104, i64 %114
  br label %126

116:                                              ; preds = %102
  %117 = load i32*, i32** %108, align 8
  %118 = and i64 %106, 1023
  %119 = getelementptr inbounds i32, i32* %117, i64 %118
  %120 = add i64 %106, %97
  %121 = lshr i64 %120, 10
  %122 = getelementptr inbounds i32*, i32** %104, i64 %121
  %123 = load i32*, i32** %122, align 8
  %124 = and i64 %120, 1023
  %125 = getelementptr inbounds i32, i32* %123, i64 %124
  br label %126

126:                                              ; preds = %112, %116
  %127 = phi i32** [ %122, %116 ], [ %115, %112 ]
  %128 = phi i32* [ %119, %116 ], [ null, %112 ]
  %129 = phi i32* [ %125, %116 ], [ null, %112 ]
  %130 = getelementptr inbounds %"struct.std::__1::__less.24", %"struct.std::__1::__less.24"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %130) #13
  call void @_ZNSt3__16__sortIRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEvT0_S9_T_(i32** %108, i32* %128, i32** %127, i32* %129, %"struct.std::__1::__less.24"* nonnull dereferenceable(1) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %130) #13
  %131 = load i64, i64* %96, align 8
  %132 = add i64 %131, -1
  %133 = lshr i64 %132, 1
  %134 = load i64, i64* %105, align 8
  %135 = add i64 %133, %134
  %136 = load i32**, i32*** %103, align 8
  %137 = lshr i64 %135, 10
  %138 = getelementptr inbounds i32*, i32** %136, i64 %137
  %139 = load i32*, i32** %138, align 8
  %140 = and i64 %135, 1023
  %141 = getelementptr inbounds i32, i32* %139, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = lshr i64 %131, 1
  %144 = add i64 %134, %143
  %145 = lshr i64 %144, 10
  %146 = getelementptr inbounds i32*, i32** %136, i64 %145
  %147 = load i32*, i32** %146, align 8
  %148 = and i64 %144, 1023
  %149 = getelementptr inbounds i32, i32* %147, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = add nsw i32 %150, %142
  %152 = sdiv i32 %151, 2
  %153 = getelementptr inbounds %"struct.webrtc::NetEqNetworkStatistics", %"struct.webrtc::NetEqNetworkStatistics"* %2, i64 0, i32 10
  store i32 %152, i32* %153, align 4
  %154 = load i32**, i32*** %103, align 8
  %155 = load i64, i64* %105, align 8
  %156 = lshr i64 %155, 10
  %157 = getelementptr inbounds i32*, i32** %154, i64 %156
  %158 = load i32*, i32** %157, align 8
  %159 = and i64 %155, 1023
  %160 = getelementptr inbounds i32, i32* %158, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %"struct.webrtc::NetEqNetworkStatistics", %"struct.webrtc::NetEqNetworkStatistics"* %2, i64 0, i32 11
  store i32 %161, i32* %162, align 4
  %163 = load i64, i64* %96, align 8
  %164 = load i64, i64* %105, align 8
  %165 = add i64 %163, -1
  %166 = add i64 %165, %164
  %167 = load i32**, i32*** %103, align 8
  %168 = lshr i64 %166, 10
  %169 = getelementptr inbounds i32*, i32** %167, i64 %168
  %170 = load i32*, i32** %169, align 8
  %171 = and i64 %166, 1023
  %172 = getelementptr inbounds i32, i32* %170, i64 %171
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds %"struct.webrtc::NetEqNetworkStatistics", %"struct.webrtc::NetEqNetworkStatistics"* %2, i64 0, i32 12
  store i32 %173, i32* %174, align 4
  %175 = load i32**, i32*** %103, align 8
  %176 = load i64, i64* %105, align 8
  %177 = lshr i64 %176, 10
  %178 = getelementptr inbounds i32*, i32** %175, i64 %177
  %179 = load i32**, i32*** %109, align 8
  %180 = icmp eq i32** %179, %175
  br i1 %180, label %181, label %183

181:                                              ; preds = %126
  %182 = load i64, i64* %96, align 8
  br label %195

183:                                              ; preds = %126
  %184 = load i32*, i32** %178, align 8
  %185 = and i64 %176, 1023
  %186 = getelementptr inbounds i32, i32* %184, i64 %185
  %187 = load i64, i64* %96, align 8
  %188 = add i64 %187, %176
  %189 = lshr i64 %188, 10
  %190 = getelementptr inbounds i32*, i32** %175, i64 %189
  %191 = load i32*, i32** %190, align 8
  %192 = and i64 %188, 1023
  %193 = getelementptr inbounds i32, i32* %191, i64 %192
  %194 = icmp eq i32* %193, %186
  br i1 %194, label %195, label %202

195:                                              ; preds = %219, %181, %183
  %196 = phi i64 [ %187, %183 ], [ %182, %181 ], [ %187, %219 ]
  %197 = phi double [ 0.000000e+00, %183 ], [ 0.000000e+00, %181 ], [ %208, %219 ]
  %198 = uitofp i64 %196 to double
  %199 = fdiv double %197, %198
  %200 = fptosi double %199 to i32
  %201 = getelementptr inbounds %"struct.webrtc::NetEqNetworkStatistics", %"struct.webrtc::NetEqNetworkStatistics"* %2, i64 0, i32 9
  store i32 %200, i32* %201, align 4
  br label %224

202:                                              ; preds = %183, %219
  %203 = phi i32* [ %222, %219 ], [ %186, %183 ]
  %204 = phi double [ %208, %219 ], [ 0.000000e+00, %183 ]
  %205 = phi i32** [ %221, %219 ], [ %178, %183 ]
  %206 = load i32, i32* %203, align 4
  %207 = sitofp i32 %206 to double
  %208 = fadd double %204, %207
  %209 = getelementptr inbounds i32, i32* %203, i64 1
  %210 = ptrtoint i32* %209 to i64
  %211 = bitcast i32** %205 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = sub i64 %210, %212
  %214 = icmp eq i64 %213, 4096
  br i1 %214, label %215, label %219

215:                                              ; preds = %202
  %216 = getelementptr inbounds i32*, i32** %205, i64 1
  %217 = bitcast i32** %216 to i64*
  %218 = load i64, i64* %217, align 8
  br label %219

219:                                              ; preds = %202, %215
  %220 = phi i64 [ %218, %215 ], [ %210, %202 ]
  %221 = phi i32** [ %216, %215 ], [ %205, %202 ]
  %222 = inttoptr i64 %220 to i32*
  %223 = icmp eq i32* %193, %222
  br i1 %223, label %195, label %202

224:                                              ; preds = %195, %99
  store i32 0, i32* %7, align 8
  call void @_ZN6webrtc20StatisticsCalculator5ResetEv(%"class.webrtc::StatisticsCalculator"* %0)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZN6webrtc20StatisticsCalculator17CalculateQ14RatioEmj(i64, i32) local_unnamed_addr #9 align 2 {
  %3 = icmp eq i64 %0, 0
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = icmp ugt i64 %5, %0
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = shl i64 %0, 14
  %9 = udiv i64 %8, %5
  %10 = trunc i64 %9 to i16
  br label %11

11:                                               ; preds = %4, %2, %7
  %12 = phi i16 [ %10, %7 ], [ 0, %2 ], [ 16384, %4 ]
  ret i16 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc20StatisticsCalculator21GetLifetimeStatisticsEv(%"struct.webrtc::NetEqLifetimeStatistics"* noalias nocapture sret, %"class.webrtc::StatisticsCalculator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %1, i64 0, i32 1
  %4 = bitcast %"struct.webrtc::NetEqLifetimeStatistics"* %0 to i8*
  %5 = bitcast %"struct.webrtc::NetEqLifetimeStatistics"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 120, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc20StatisticsCalculator21GetOperationsAndStateEv(%"struct.webrtc::NetEqOperationsAndState"* noalias nocapture sret, %"class.webrtc::StatisticsCalculator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatisticsCalculator", %"class.webrtc::StatisticsCalculator"* %1, i64 0, i32 2
  %4 = bitcast %"struct.webrtc::NetEqOperationsAndState"* %0 to i8*
  %5 = bitcast %"struct.webrtc::NetEqOperationsAndState"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 64, i1 false)
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIiNS_9allocatorIiEEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.18", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 1023
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -1024
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32**, i32*** %10, align 8
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i32*, i32** %11, i64 1
  store i32** %14, i32*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i32**, i32*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load i32**, i32*** %17, align 8
  %19 = icmp eq i32** %16, %18
  %20 = ptrtoint i32** %18 to i64
  %21 = bitcast i32** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32**, i32*** %23, align 8
  %25 = icmp ugt i32** %14, %24
  %26 = ptrtoint i32** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint i32** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds i32*, i32** %14, i64 %32
  %34 = ptrtoint i32** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast i32** %33 to i8*
  %40 = bitcast i32** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #13
  %41 = load i32**, i32*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi i32** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds i32*, i32** %33, i64 %36
  store i32** %44, i32*** %15, align 8
  %45 = getelementptr inbounds i32*, i32** %43, i64 %32
  store i32** %45, i32*** %10, align 8
  %46 = bitcast i32** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast i32*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #15
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #14
  %60 = bitcast i8* %59 to i32**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds i32*, i32** %60, i64 %57
  %63 = ptrtoint i32** %62 to i64
  %64 = getelementptr inbounds i32*, i32** %60, i64 %53
  %65 = ptrtoint i32** %64 to i64
  %66 = ptrtoint i32** %14 to i64
  %67 = ptrtoint i32** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds i32*, i32** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi i32** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi i32** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast i32** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds i32*, i32** %79, i64 1
  %87 = ptrtoint i32** %86 to i64
  %88 = getelementptr inbounds i32*, i32** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !3

91:                                               ; preds = %78
  %92 = ptrtoint i32** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi i32** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi i32** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi i32** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi i32** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %99, i64 1
  %106 = getelementptr inbounds i32*, i32** %101, i64 1
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %99, i64 2
  %111 = getelementptr inbounds i32*, i32** %101, i64 2
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %99, i64 3
  %116 = getelementptr inbounds i32*, i32** %101, i64 3
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %99, i64 4
  %121 = getelementptr inbounds i32*, i32** %101, i64 4
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %99, i64 5
  %126 = getelementptr inbounds i32*, i32** %101, i64 5
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %99, i64 6
  %131 = getelementptr inbounds i32*, i32** %101, i64 6
  %132 = bitcast i32** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i32** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i32*, i32** %99, i64 7
  %136 = getelementptr inbounds i32*, i32** %101, i64 7
  %137 = bitcast i32** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i32** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i32*, i32** %99, i64 8
  %141 = ptrtoint i32** %140 to i64
  %142 = getelementptr inbounds i32*, i32** %101, i64 8
  %143 = icmp eq i32** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint i32** %70 to i64
  %146 = load i32**, i32*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi i32** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast i32*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast i32*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq i32** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast i32** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  %156 = bitcast i32*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load i32**, i32*** %15, align 8
  %161 = getelementptr inbounds i32*, i32** %160, i64 1
  store i32** %161, i32*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast i32*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast i32*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast i32*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to i32**
  %181 = inttoptr i64 %169 to i32**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast i32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #13
  %186 = tail call i8* @_Znwm(i64 4096) #14
  %187 = bitcast i32** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer"* %163, i32** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #13
  br label %460

188:                                              ; preds = %182
  %189 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #13
  %190 = tail call i8* @_Znwm(i64 4096) #14
  %191 = bitcast i32** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer"* %163, i32** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #13
  %192 = load i32**, i32*** %167, align 8
  %193 = bitcast i32** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds i32*, i32** %192, i64 1
  store i32** %195, i32*** %167, align 8
  %196 = load i32**, i32*** %164, align 8
  %197 = load i32**, i32*** %172, align 8
  %198 = icmp eq i32** %196, %197
  %199 = ptrtoint i32** %197 to i64
  %200 = bitcast i32** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load i32**, i32*** %202, align 8
  %204 = icmp ugt i32** %195, %203
  %205 = ptrtoint i32** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint i32** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds i32*, i32** %195, i64 %211
  %213 = ptrtoint i32** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast i32** %212 to i8*
  %219 = bitcast i32** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #13
  %220 = load i32**, i32*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi i32** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds i32*, i32** %212, i64 %215
  store i32** %223, i32*** %164, align 8
  %224 = getelementptr inbounds i32*, i32** %222, i64 %211
  store i32** %224, i32*** %167, align 8
  %225 = bitcast i32** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #15
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #14
  %237 = bitcast i8* %236 to i32**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds i32*, i32** %237, i64 %234
  %240 = ptrtoint i32** %239 to i64
  %241 = getelementptr inbounds i32*, i32** %237, i64 %230
  %242 = ptrtoint i32** %241 to i64
  %243 = ptrtoint i32** %195 to i64
  %244 = ptrtoint i32** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds i32*, i32** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi i32** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi i32** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast i32** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds i32*, i32** %256, i64 1
  %264 = ptrtoint i32** %263 to i64
  %265 = getelementptr inbounds i32*, i32** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !5

268:                                              ; preds = %255
  %269 = ptrtoint i32** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi i32** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi i32** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi i32** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi i32** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast i32** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds i32*, i32** %276, i64 1
  %283 = getelementptr inbounds i32*, i32** %278, i64 1
  %284 = bitcast i32** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast i32** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds i32*, i32** %276, i64 2
  %288 = getelementptr inbounds i32*, i32** %278, i64 2
  %289 = bitcast i32** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast i32** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds i32*, i32** %276, i64 3
  %293 = getelementptr inbounds i32*, i32** %278, i64 3
  %294 = bitcast i32** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast i32** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds i32*, i32** %276, i64 4
  %298 = getelementptr inbounds i32*, i32** %278, i64 4
  %299 = bitcast i32** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast i32** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds i32*, i32** %276, i64 5
  %303 = getelementptr inbounds i32*, i32** %278, i64 5
  %304 = bitcast i32** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast i32** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds i32*, i32** %276, i64 6
  %308 = getelementptr inbounds i32*, i32** %278, i64 6
  %309 = bitcast i32** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast i32** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds i32*, i32** %276, i64 7
  %313 = getelementptr inbounds i32*, i32** %278, i64 7
  %314 = bitcast i32** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast i32** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds i32*, i32** %276, i64 8
  %318 = ptrtoint i32** %317 to i64
  %319 = getelementptr inbounds i32*, i32** %278, i64 8
  %320 = icmp eq i32** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint i32** %247 to i64
  %323 = load i32**, i32*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi i32** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq i32** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast i32** %325 to i8*
  call void @_ZdlPv(i8* %330) #14
  %331 = bitcast i32*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load i32**, i32*** %164, align 8
  %336 = getelementptr inbounds i32*, i32** %335, i64 1
  store i32** %336, i32*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.18"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #13
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.18", %"struct.std::__1::__split_buffer.18"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.18", %"struct.std::__1::__split_buffer.18"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.18", %"struct.std::__1::__split_buffer.18"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.18", %"struct.std::__1::__split_buffer.18"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.18"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store i32** null, i32*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.4"** %342 to %"class.std::__1::__compressed_pair.1"**
  store %"class.std::__1::__compressed_pair.1"* %346, %"class.std::__1::__compressed_pair.1"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #15
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #14
  %354 = bitcast i8* %353 to i32**
  %355 = bitcast %"struct.std::__1::__split_buffer.18"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds i32*, i32** %354, i64 %171
  store i32** %356, i32*** %340, align 8
  store i32** %356, i32*** %339, align 8
  %357 = getelementptr inbounds i32*, i32** %354, i64 %345
  store i32** %357, i32*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #14
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint i32** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint i32** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt i32** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds i32*, i32** %356, i64 %370
  store i32** %371, i32*** %340, align 8
  store i32** %371, i32*** %339, align 8
  %372 = ptrtoint i32** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #15
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.18"* %4 to i64*
  %382 = bitcast i32*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #14
  %386 = bitcast i8* %385 to i32**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds i32*, i32** %386, i64 %383
  %389 = ptrtoint i32** %388 to i64
  %390 = getelementptr inbounds i32*, i32** %386, i64 %377
  %391 = ptrtoint i32** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast i32*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast i32*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #14
  %394 = load i32**, i32*** %164, align 8
  %395 = load i32**, i32*** %167, align 8
  %396 = ptrtoint i32** %395 to i64
  %397 = ptrtoint i32** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi i32** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi i32** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi i32** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast i32** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds i32*, i32** %406, i64 1
  store i32** %408, i32*** %340, align 8
  %409 = icmp eq i32** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint i32** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.18"* %4 to i64*
  %413 = bitcast i32*** %339 to i64*
  %414 = bitcast i32*** %340 to i64*
  %415 = bitcast i32*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint i32** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.18"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast i32*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast i32*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast i32*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to i32**
  %441 = inttoptr i64 %434 to i32**
  %442 = icmp eq i32** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr i32*, i32** %441, i64 -1
  %445 = ptrtoint i32** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr i32*, i32** %441, i64 %448
  store i32** %449, i32*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #14
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #13
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi i32** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds i32*, i32** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPiRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.18"* nonnull %4, i32** dereferenceable(8) %457)
  %458 = load i32**, i32*** %167, align 8
  %459 = icmp eq i32** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  %9 = bitcast i32** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load i32**, i32*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load i32**, i32*** %13, align 8
  %15 = icmp ugt i32** %12, %14
  %16 = ptrtoint i32** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint i32** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32*, i32** %12, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast i32** %23 to i8*
  %30 = bitcast i32** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load i32**, i32*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i32** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds i32*, i32** %23, i64 %26
  store i32** %34, i32*** %3, align 8
  %35 = getelementptr inbounds i32*, i32** %33, i64 %22
  store i32** %35, i32*** %11, align 8
  %36 = bitcast i32** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast i32*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to i32**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i32*, i32** %50, i64 %47
  %53 = ptrtoint i32** %52 to i64
  %54 = getelementptr inbounds i32*, i32** %50, i64 %43
  %55 = ptrtoint i32** %54 to i64
  %56 = ptrtoint i32** %12 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds i32*, i32** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi i32** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi i32** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast i32** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i32*, i32** %69, i64 1
  %77 = ptrtoint i32** %76 to i64
  %78 = getelementptr inbounds i32*, i32** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !6

81:                                               ; preds = %68
  %82 = ptrtoint i32** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi i32** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi i32** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi i32** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi i32** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast i32** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds i32*, i32** %89, i64 1
  %96 = getelementptr inbounds i32*, i32** %91, i64 1
  %97 = bitcast i32** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i32** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds i32*, i32** %89, i64 2
  %101 = getelementptr inbounds i32*, i32** %91, i64 2
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast i32** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %89, i64 3
  %106 = getelementptr inbounds i32*, i32** %91, i64 3
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %89, i64 4
  %111 = getelementptr inbounds i32*, i32** %91, i64 4
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %89, i64 5
  %116 = getelementptr inbounds i32*, i32** %91, i64 5
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %89, i64 6
  %121 = getelementptr inbounds i32*, i32** %91, i64 6
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %89, i64 7
  %126 = getelementptr inbounds i32*, i32** %91, i64 7
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %89, i64 8
  %131 = ptrtoint i32** %130 to i64
  %132 = getelementptr inbounds i32*, i32** %91, i64 8
  %133 = icmp eq i32** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint i32** %60 to i64
  %136 = load i32**, i32*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi i32** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast i32*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq i32** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast i32** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = bitcast i32*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load i32**, i32*** %3, align 8
  %153 = getelementptr inbounds i32*, i32** %152, i64 1
  store i32** %153, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !7

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPiRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.18"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.18", %"struct.std::__1::__split_buffer.18"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.18", %"struct.std::__1::__split_buffer.18"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.18", %"struct.std::__1::__split_buffer.18"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.18", %"struct.std::__1::__split_buffer.18"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.18"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !8

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEvT0_S9_T_(i32**, i32*, i32**, i32*, %"struct.std::__1::__less.24"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.std::__1::__deque_iterator", align 8
  %7 = alloca %"class.std::__1::__deque_iterator", align 8
  %8 = alloca %"class.std::__1::__deque_iterator", align 8
  %9 = alloca %"class.std::__1::__deque_iterator", align 8
  %10 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %8, i64 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %8, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %9, i64 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %9, i64 0, i32 1
  %14 = icmp eq i32* %3, %1
  br i1 %14, label %798, label %15

15:                                               ; preds = %5
  %16 = ptrtoint i32* %3 to i64
  %17 = ptrtoint i32* %1 to i64
  br label %26

18:                                               ; preds = %795, %770, %763, %719, %725, %717
  %19 = phi i32** [ %43, %717 ], [ %726, %725 ], [ %679, %719 ], [ %679, %763 ], [ %771, %770 ], [ %43, %795 ]
  %20 = phi i64 [ %42, %717 ], [ %728, %725 ], [ %721, %719 ], [ %765, %763 ], [ %773, %770 ], [ %42, %795 ]
  %21 = phi i64 [ %678, %717 ], [ %30, %725 ], [ %30, %719 ], [ %30, %763 ], [ %30, %770 ], [ %678, %795 ]
  %22 = phi i32** [ %679, %717 ], [ %28, %725 ], [ %28, %719 ], [ %28, %763 ], [ %28, %770 ], [ %679, %795 ]
  %23 = inttoptr i64 %21 to i32*
  %24 = inttoptr i64 %20 to i32*
  %25 = icmp eq i32* %23, %24
  br i1 %25, label %798, label %26

26:                                               ; preds = %15, %18
  %27 = phi i32* [ %1, %15 ], [ %24, %18 ]
  %28 = phi i32** [ %2, %15 ], [ %22, %18 ]
  %29 = phi i32* [ %3, %15 ], [ %23, %18 ]
  %30 = phi i64 [ %16, %15 ], [ %21, %18 ]
  %31 = phi i64 [ %17, %15 ], [ %20, %18 ]
  %32 = phi i32** [ %0, %15 ], [ %19, %18 ]
  %33 = ptrtoint i32** %28 to i64
  %34 = bitcast i32** %28 to i64*
  %35 = getelementptr inbounds i32*, i32** %28, i64 -1
  %36 = getelementptr inbounds i32*, i32** %28, i64 -1
  br label %40

37:                                               ; preds = %538
  %38 = inttoptr i64 %496 to i32*
  %39 = icmp eq i32* %29, %38
  br i1 %39, label %798, label %40

40:                                               ; preds = %26, %37
  %41 = phi i32* [ %27, %26 ], [ %38, %37 ]
  %42 = phi i64 [ %31, %26 ], [ %496, %37 ]
  %43 = phi i32** [ %32, %26 ], [ %497, %37 ]
  %44 = ptrtoint i32** %43 to i64
  %45 = sub i64 %33, %44
  %46 = shl i64 %45, 7
  %47 = load i64, i64* %34, align 8
  %48 = sub i64 %30, %47
  %49 = ashr exact i64 %48, 2
  %50 = add nsw i64 %49, %46
  %51 = bitcast i32** %43 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %42, %52
  %54 = ashr exact i64 %53, 2
  %55 = sub i64 %50, %54
  %56 = inttoptr i64 %47 to i32*
  switch i64 %55, label %283 [
    i64 0, label %798
    i64 1, label %798
    i64 2, label %57
    i64 3, label %73
    i64 4, label %120
    i64 5, label %200
  ]

57:                                               ; preds = %40
  %58 = inttoptr i64 %30 to i32*
  %59 = inttoptr i64 %42 to i32*
  %60 = inttoptr i64 %47 to i32*
  %61 = icmp eq i32* %60, %58
  br i1 %61, label %62, label %66

62:                                               ; preds = %57
  %63 = getelementptr inbounds i32*, i32** %28, i64 -1
  %64 = load i32*, i32** %63, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 1024
  br label %66

66:                                               ; preds = %57, %62
  %67 = phi i32* [ %65, %62 ], [ %58, %57 ]
  %68 = getelementptr inbounds i32, i32* %67, i64 -1
  %69 = load i32, i32* %68, align 4
  %70 = load i32, i32* %59, align 4
  %71 = icmp slt i32 %69, %70
  br i1 %71, label %72, label %798

72:                                               ; preds = %66
  store i32 %69, i32* %59, align 4
  store i32 %70, i32* %68, align 4
  br label %798

73:                                               ; preds = %40
  %74 = inttoptr i64 %30 to i32*
  %75 = inttoptr i64 %42 to i32*
  %76 = inttoptr i64 %47 to i32*
  %77 = add nsw i64 %54, 1
  %78 = icmp sgt i64 %53, -4
  br i1 %78, label %79, label %85

79:                                               ; preds = %73
  %80 = lshr i64 %77, 10
  %81 = getelementptr inbounds i32*, i32** %43, i64 %80
  %82 = load i32*, i32** %81, align 8
  %83 = and i64 %77, 1023
  %84 = getelementptr inbounds i32, i32* %82, i64 %83
  br label %93

85:                                               ; preds = %73
  %86 = sub nsw i64 1022, %54
  %87 = sdiv i64 %86, -1024
  %88 = getelementptr inbounds i32*, i32** %43, i64 %87
  %89 = load i32*, i32** %88, align 8
  %90 = srem i64 %86, 1024
  %91 = sub nuw nsw i64 1023, %90
  %92 = getelementptr inbounds i32, i32* %89, i64 %91
  br label %93

93:                                               ; preds = %79, %85
  %94 = phi i32* [ %84, %79 ], [ %92, %85 ]
  %95 = icmp eq i32* %76, %74
  br i1 %95, label %96, label %100

96:                                               ; preds = %93
  %97 = getelementptr inbounds i32*, i32** %28, i64 -1
  %98 = load i32*, i32** %97, align 8
  %99 = getelementptr inbounds i32, i32* %98, i64 1024
  br label %100

100:                                              ; preds = %93, %96
  %101 = phi i32* [ %99, %96 ], [ %74, %93 ]
  %102 = getelementptr inbounds i32, i32* %101, i64 -1
  %103 = load i32, i32* %94, align 4
  %104 = load i32, i32* %75, align 4
  %105 = icmp slt i32 %103, %104
  %106 = load i32, i32* %102, align 4
  %107 = icmp slt i32 %106, %103
  br i1 %105, label %114, label %108

108:                                              ; preds = %100
  br i1 %107, label %109, label %798

109:                                              ; preds = %108
  store i32 %106, i32* %94, align 4
  store i32 %103, i32* %102, align 4
  %110 = load i32, i32* %94, align 4
  %111 = load i32, i32* %75, align 4
  %112 = icmp slt i32 %110, %111
  br i1 %112, label %113, label %798

113:                                              ; preds = %109
  store i32 %110, i32* %75, align 4
  store i32 %111, i32* %94, align 4
  br label %798

114:                                              ; preds = %100
  br i1 %107, label %115, label %116

115:                                              ; preds = %114
  store i32 %106, i32* %75, align 4
  store i32 %104, i32* %102, align 4
  br label %798

116:                                              ; preds = %114
  store i32 %103, i32* %75, align 4
  store i32 %104, i32* %94, align 4
  %117 = load i32, i32* %102, align 4
  %118 = icmp slt i32 %117, %104
  br i1 %118, label %119, label %798

119:                                              ; preds = %116
  store i32 %117, i32* %94, align 4
  store i32 %104, i32* %102, align 4
  br label %798

120:                                              ; preds = %40
  %121 = inttoptr i64 %30 to i32*
  %122 = inttoptr i64 %42 to i32*
  %123 = inttoptr i64 %47 to i32*
  %124 = add nsw i64 %54, 1
  %125 = icmp sgt i64 %53, -4
  br i1 %125, label %126, label %133

126:                                              ; preds = %120
  %127 = lshr i64 %124, 10
  %128 = getelementptr inbounds i32*, i32** %43, i64 %127
  %129 = load i32*, i32** %128, align 8
  %130 = and i64 %124, 1023
  %131 = getelementptr inbounds i32, i32* %129, i64 %130
  %132 = add nuw nsw i64 %54, 2
  br label %142

133:                                              ; preds = %120
  %134 = sub nsw i64 1022, %54
  %135 = sdiv i64 %134, -1024
  %136 = getelementptr inbounds i32*, i32** %43, i64 %135
  %137 = load i32*, i32** %136, align 8
  %138 = srem i64 %134, 1024
  %139 = sub nuw nsw i64 1023, %138
  %140 = getelementptr inbounds i32, i32* %137, i64 %139
  %141 = icmp sgt i64 %53, -8
  br i1 %141, label %142, label %150

142:                                              ; preds = %126, %133
  %143 = phi i64 [ %132, %126 ], [ 1, %133 ]
  %144 = phi i32* [ %131, %126 ], [ %140, %133 ]
  %145 = lshr i64 %143, 10
  %146 = getelementptr inbounds i32*, i32** %43, i64 %145
  %147 = load i32*, i32** %146, align 8
  %148 = and i64 %143, 1023
  %149 = getelementptr inbounds i32, i32* %147, i64 %148
  br label %158

150:                                              ; preds = %133
  %151 = sub nsw i64 1021, %54
  %152 = sdiv i64 %151, -1024
  %153 = getelementptr inbounds i32*, i32** %43, i64 %152
  %154 = load i32*, i32** %153, align 8
  %155 = srem i64 %151, 1024
  %156 = sub nuw nsw i64 1023, %155
  %157 = getelementptr inbounds i32, i32* %154, i64 %156
  br label %158

158:                                              ; preds = %142, %150
  %159 = phi i32* [ %144, %142 ], [ %140, %150 ]
  %160 = phi i32* [ %149, %142 ], [ %157, %150 ]
  %161 = icmp eq i32* %123, %121
  br i1 %161, label %162, label %166

162:                                              ; preds = %158
  %163 = getelementptr inbounds i32*, i32** %28, i64 -1
  %164 = load i32*, i32** %163, align 8
  %165 = getelementptr inbounds i32, i32* %164, i64 1024
  br label %166

166:                                              ; preds = %158, %162
  %167 = phi i32* [ %165, %162 ], [ %121, %158 ]
  %168 = getelementptr inbounds i32, i32* %167, i64 -1
  %169 = load i32, i32* %159, align 4
  %170 = load i32, i32* %122, align 4
  %171 = icmp slt i32 %169, %170
  %172 = load i32, i32* %160, align 4
  %173 = icmp slt i32 %172, %169
  br i1 %171, label %181, label %174

174:                                              ; preds = %166
  br i1 %173, label %175, label %187

175:                                              ; preds = %174
  store i32 %172, i32* %159, align 4
  store i32 %169, i32* %160, align 4
  %176 = load i32, i32* %159, align 4
  %177 = load i32, i32* %122, align 4
  %178 = icmp slt i32 %176, %177
  br i1 %178, label %179, label %187

179:                                              ; preds = %175
  store i32 %176, i32* %122, align 4
  store i32 %177, i32* %159, align 4
  %180 = load i32, i32* %160, align 4
  br label %187

181:                                              ; preds = %166
  br i1 %173, label %182, label %183

182:                                              ; preds = %181
  store i32 %172, i32* %122, align 4
  store i32 %170, i32* %160, align 4
  br label %187

183:                                              ; preds = %181
  store i32 %169, i32* %122, align 4
  store i32 %170, i32* %159, align 4
  %184 = load i32, i32* %160, align 4
  %185 = icmp slt i32 %184, %170
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  store i32 %184, i32* %159, align 4
  store i32 %170, i32* %160, align 4
  br label %187

187:                                              ; preds = %186, %183, %182, %179, %175, %174
  %188 = phi i32 [ %170, %182 ], [ %172, %174 ], [ %180, %179 ], [ %169, %175 ], [ %170, %186 ], [ %184, %183 ]
  %189 = load i32, i32* %168, align 4
  %190 = icmp slt i32 %189, %188
  br i1 %190, label %191, label %798

191:                                              ; preds = %187
  store i32 %189, i32* %160, align 4
  store i32 %188, i32* %168, align 4
  %192 = load i32, i32* %160, align 4
  %193 = load i32, i32* %159, align 4
  %194 = icmp slt i32 %192, %193
  br i1 %194, label %195, label %798

195:                                              ; preds = %191
  store i32 %192, i32* %159, align 4
  store i32 %193, i32* %160, align 4
  %196 = load i32, i32* %159, align 4
  %197 = load i32, i32* %122, align 4
  %198 = icmp slt i32 %196, %197
  br i1 %198, label %199, label %798

199:                                              ; preds = %195
  store i32 %196, i32* %122, align 4
  store i32 %197, i32* %159, align 4
  br label %798

200:                                              ; preds = %40
  %201 = inttoptr i64 %30 to i32*
  %202 = inttoptr i64 %42 to i32*
  %203 = add nsw i64 %54, 1
  %204 = icmp sgt i64 %53, -4
  br i1 %204, label %205, label %212

205:                                              ; preds = %200
  %206 = lshr i64 %203, 10
  %207 = getelementptr inbounds i32*, i32** %43, i64 %206
  %208 = load i32*, i32** %207, align 8
  %209 = and i64 %203, 1023
  %210 = getelementptr inbounds i32, i32* %208, i64 %209
  %211 = add nuw nsw i64 %54, 2
  br label %221

212:                                              ; preds = %200
  %213 = sub nsw i64 1022, %54
  %214 = sdiv i64 %213, -1024
  %215 = getelementptr inbounds i32*, i32** %43, i64 %214
  %216 = load i32*, i32** %215, align 8
  %217 = srem i64 %213, 1024
  %218 = sub nuw nsw i64 1023, %217
  %219 = getelementptr inbounds i32, i32* %216, i64 %218
  %220 = icmp sgt i64 %53, -8
  br i1 %220, label %221, label %231

221:                                              ; preds = %212, %205
  %222 = phi i64 [ %211, %205 ], [ 1, %212 ]
  %223 = phi i32* [ %210, %205 ], [ %219, %212 ]
  %224 = phi i32** [ %207, %205 ], [ %215, %212 ]
  %225 = lshr i64 %222, 10
  %226 = getelementptr inbounds i32*, i32** %43, i64 %225
  %227 = load i32*, i32** %226, align 8
  %228 = and i64 %222, 1023
  %229 = getelementptr inbounds i32, i32* %227, i64 %228
  %230 = add nsw i64 %54, 3
  br label %240

231:                                              ; preds = %212
  %232 = sub nsw i64 1021, %54
  %233 = sdiv i64 %232, -1024
  %234 = getelementptr inbounds i32*, i32** %43, i64 %233
  %235 = load i32*, i32** %234, align 8
  %236 = srem i64 %232, 1024
  %237 = sub nuw nsw i64 1023, %236
  %238 = getelementptr inbounds i32, i32* %235, i64 %237
  %239 = icmp sgt i64 %53, -12
  br i1 %239, label %240, label %251

240:                                              ; preds = %221, %231
  %241 = phi i64 [ %230, %221 ], [ 1, %231 ]
  %242 = phi i32* [ %229, %221 ], [ %238, %231 ]
  %243 = phi i32** [ %226, %221 ], [ %234, %231 ]
  %244 = phi i32** [ %224, %221 ], [ %215, %231 ]
  %245 = phi i32* [ %223, %221 ], [ %219, %231 ]
  %246 = lshr i64 %241, 10
  %247 = getelementptr inbounds i32*, i32** %43, i64 %246
  %248 = load i32*, i32** %247, align 8
  %249 = and i64 %241, 1023
  %250 = getelementptr inbounds i32, i32* %248, i64 %249
  br label %259

251:                                              ; preds = %231
  %252 = sub nsw i64 1020, %54
  %253 = sdiv i64 %252, -1024
  %254 = getelementptr inbounds i32*, i32** %43, i64 %253
  %255 = load i32*, i32** %254, align 8
  %256 = srem i64 %252, 1024
  %257 = sub nuw nsw i64 1023, %256
  %258 = getelementptr inbounds i32, i32* %255, i64 %257
  br label %259

259:                                              ; preds = %240, %251
  %260 = phi i32* [ %242, %240 ], [ %238, %251 ]
  %261 = phi i32** [ %243, %240 ], [ %234, %251 ]
  %262 = phi i32** [ %244, %240 ], [ %215, %251 ]
  %263 = phi i32* [ %245, %240 ], [ %219, %251 ]
  %264 = phi i32* [ %250, %240 ], [ %258, %251 ]
  %265 = phi i32** [ %247, %240 ], [ %254, %251 ]
  %266 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %6, i64 0, i32 0
  store i32** %265, i32*** %266, align 8
  %267 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %6, i64 0, i32 1
  store i32* %264, i32** %267, align 8
  %268 = load i32*, i32** %28, align 8
  %269 = icmp eq i32* %268, %201
  br i1 %269, label %270, label %274

270:                                              ; preds = %259
  %271 = getelementptr inbounds i32*, i32** %28, i64 -1
  %272 = load i32*, i32** %271, align 8
  %273 = getelementptr inbounds i32, i32* %272, i64 1024
  br label %274

274:                                              ; preds = %259, %270
  %275 = phi i32** [ %271, %270 ], [ %28, %259 ]
  %276 = phi i32* [ %273, %270 ], [ %201, %259 ]
  %277 = getelementptr inbounds i32, i32* %276, i64 -1
  %278 = ptrtoint i32* %277 to i64
  %279 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %7, i64 0, i32 0
  store i32** %275, i32*** %279, align 8
  %280 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %7, i64 0, i32 1
  %281 = bitcast i32** %280 to i64*
  store i64 %278, i64* %281, align 8
  %282 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEjT0_S9_S9_S9_S9_T_(i32** %43, i32* %202, i32** %262, i32* %263, i32** %261, i32* %260, %"class.std::__1::__deque_iterator"* nonnull byval(%"class.std::__1::__deque_iterator") align 8 %6, %"class.std::__1::__deque_iterator"* nonnull byval(%"class.std::__1::__deque_iterator") align 8 %7, %"struct.std::__1::__less.24"* dereferenceable(1) %4)
  br label %798

283:                                              ; preds = %40
  %284 = icmp slt i64 %55, 31
  br i1 %284, label %285, label %288

285:                                              ; preds = %283
  %286 = inttoptr i64 %30 to i32*
  %287 = inttoptr i64 %42 to i32*
  tail call void @_ZNSt3__118__insertion_sort_3IRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEvT0_S9_T_(i32** %43, i32* %287, i32** %28, i32* %286, %"struct.std::__1::__less.24"* dereferenceable(1) %4)
  br label %798

288:                                              ; preds = %283
  %289 = icmp eq i32* %29, %56
  br i1 %289, label %290, label %293

290:                                              ; preds = %288
  %291 = load i32*, i32** %35, align 8
  %292 = getelementptr inbounds i32, i32* %291, i64 1024
  br label %293

293:                                              ; preds = %288, %290
  %294 = phi i32** [ %35, %290 ], [ %28, %288 ]
  %295 = phi i32* [ %292, %290 ], [ %29, %288 ]
  %296 = getelementptr inbounds i32, i32* %295, i64 -1
  %297 = icmp sgt i64 %55, 999
  %298 = lshr i64 %55, 1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %319, label %300

300:                                              ; preds = %293
  %301 = add nsw i64 %54, %298
  %302 = icmp sgt i64 %301, 0
  br i1 %302, label %303, label %310

303:                                              ; preds = %300
  %304 = lshr i64 %301, 10
  %305 = getelementptr inbounds i32*, i32** %43, i64 %304
  %306 = load i32*, i32** %305, align 8
  %307 = and i64 %301, 1023
  %308 = getelementptr inbounds i32, i32* %306, i64 %307
  %309 = ptrtoint i32* %308 to i64
  br label %319

310:                                              ; preds = %300
  %311 = sub nsw i64 1023, %301
  %312 = sdiv i64 %311, -1024
  %313 = getelementptr inbounds i32*, i32** %43, i64 %312
  %314 = load i32*, i32** %313, align 8
  %315 = srem i64 %311, 1024
  %316 = sub nuw nsw i64 1023, %315
  %317 = getelementptr inbounds i32, i32* %314, i64 %316
  %318 = ptrtoint i32* %317 to i64
  br label %319

319:                                              ; preds = %293, %303, %310
  %320 = phi i64 [ %42, %293 ], [ %309, %303 ], [ %318, %310 ]
  %321 = phi i32** [ %43, %293 ], [ %305, %303 ], [ %313, %310 ]
  br i1 %297, label %322, label %378

322:                                              ; preds = %319
  %323 = lshr i64 %55, 2
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %342, label %325

325:                                              ; preds = %322
  %326 = add nsw i64 %54, %323
  %327 = icmp sgt i64 %326, 0
  br i1 %327, label %328, label %334

328:                                              ; preds = %325
  %329 = lshr i64 %326, 10
  %330 = getelementptr inbounds i32*, i32** %43, i64 %329
  %331 = load i32*, i32** %330, align 8
  %332 = and i64 %326, 1023
  %333 = getelementptr inbounds i32, i32* %331, i64 %332
  br label %344

334:                                              ; preds = %325
  %335 = sub nsw i64 1023, %326
  %336 = sdiv i64 %335, -1024
  %337 = getelementptr inbounds i32*, i32** %43, i64 %336
  %338 = load i32*, i32** %337, align 8
  %339 = srem i64 %335, 1024
  %340 = sub nuw nsw i64 1023, %339
  %341 = getelementptr inbounds i32, i32* %338, i64 %340
  br label %344

342:                                              ; preds = %322
  %343 = inttoptr i64 %320 to i32*
  br label %370

344:                                              ; preds = %328, %334
  %345 = phi i32* [ %341, %334 ], [ %333, %328 ]
  %346 = phi i32** [ %337, %334 ], [ %330, %328 ]
  %347 = inttoptr i64 %320 to i32*
  %348 = bitcast i32** %321 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = sub i64 %320, %349
  %351 = ashr exact i64 %350, 2
  %352 = add nsw i64 %351, %323
  %353 = icmp sgt i64 %352, 0
  br i1 %353, label %354, label %361

354:                                              ; preds = %344
  %355 = lshr i64 %352, 10
  %356 = getelementptr inbounds i32*, i32** %321, i64 %355
  %357 = load i32*, i32** %356, align 8
  %358 = and i64 %352, 1023
  %359 = getelementptr inbounds i32, i32* %357, i64 %358
  %360 = ptrtoint i32* %359 to i64
  br label %370

361:                                              ; preds = %344
  %362 = sub nsw i64 1023, %352
  %363 = sdiv i64 %362, -1024
  %364 = getelementptr inbounds i32*, i32** %321, i64 %363
  %365 = load i32*, i32** %364, align 8
  %366 = srem i64 %362, 1024
  %367 = sub nuw nsw i64 1023, %366
  %368 = getelementptr inbounds i32, i32* %365, i64 %367
  %369 = ptrtoint i32* %368 to i64
  br label %370

370:                                              ; preds = %342, %354, %361
  %371 = phi i32* [ %343, %342 ], [ %347, %354 ], [ %347, %361 ]
  %372 = phi i32* [ %41, %342 ], [ %345, %354 ], [ %345, %361 ]
  %373 = phi i32** [ %43, %342 ], [ %346, %354 ], [ %346, %361 ]
  %374 = phi i64 [ %320, %342 ], [ %360, %354 ], [ %369, %361 ]
  %375 = phi i32** [ %321, %342 ], [ %356, %354 ], [ %364, %361 ]
  %376 = inttoptr i64 %374 to i32*
  store i32** %375, i32*** %10, align 8
  store i32* %376, i32** %11, align 8
  store i32** %294, i32*** %12, align 8
  store i32* %296, i32** %13, align 8
  %377 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEjT0_S9_S9_S9_S9_T_(i32** %43, i32* %41, i32** %373, i32* %372, i32** %321, i32* %371, %"class.std::__1::__deque_iterator"* nonnull byval(%"class.std::__1::__deque_iterator") align 8 %8, %"class.std::__1::__deque_iterator"* nonnull byval(%"class.std::__1::__deque_iterator") align 8 %9, %"struct.std::__1::__less.24"* dereferenceable(1) %4)
  br label %397

378:                                              ; preds = %319
  %379 = inttoptr i64 %320 to i32*
  %380 = load i32, i32* %379, align 4
  %381 = load i32, i32* %41, align 4
  %382 = icmp slt i32 %380, %381
  %383 = load i32, i32* %296, align 4
  %384 = icmp slt i32 %383, %380
  br i1 %382, label %391, label %385

385:                                              ; preds = %378
  br i1 %384, label %386, label %397

386:                                              ; preds = %385
  store i32 %383, i32* %379, align 4
  store i32 %380, i32* %296, align 4
  %387 = load i32, i32* %379, align 4
  %388 = load i32, i32* %41, align 4
  %389 = icmp slt i32 %387, %388
  br i1 %389, label %390, label %397

390:                                              ; preds = %386
  store i32 %387, i32* %41, align 4
  store i32 %388, i32* %379, align 4
  br label %397

391:                                              ; preds = %378
  br i1 %384, label %392, label %393

392:                                              ; preds = %391
  store i32 %383, i32* %41, align 4
  store i32 %381, i32* %296, align 4
  br label %397

393:                                              ; preds = %391
  store i32 %380, i32* %41, align 4
  store i32 %381, i32* %379, align 4
  %394 = load i32, i32* %296, align 4
  %395 = icmp slt i32 %394, %381
  br i1 %395, label %396, label %397

396:                                              ; preds = %393
  store i32 %394, i32* %379, align 4
  store i32 %381, i32* %296, align 4
  br label %397

397:                                              ; preds = %396, %393, %392, %390, %386, %385, %370
  %398 = phi i32* [ %379, %396 ], [ %379, %393 ], [ %379, %392 ], [ %379, %390 ], [ %379, %386 ], [ %379, %385 ], [ %371, %370 ]
  %399 = phi i32 [ 2, %396 ], [ 1, %393 ], [ 1, %392 ], [ 2, %390 ], [ 1, %386 ], [ 0, %385 ], [ %377, %370 ]
  %400 = load i32, i32* %41, align 4
  %401 = load i32, i32* %398, align 4
  %402 = icmp slt i32 %400, %401
  br i1 %402, label %562, label %403

403:                                              ; preds = %397
  %404 = load i32*, i32** %294, align 8
  br label %405

405:                                              ; preds = %403, %556
  %406 = phi i32* [ %415, %556 ], [ %404, %403 ]
  %407 = phi i32* [ %418, %556 ], [ %296, %403 ]
  %408 = phi i32** [ %416, %556 ], [ %294, %403 ]
  %409 = icmp eq i32* %407, %406
  br i1 %409, label %410, label %414

410:                                              ; preds = %405
  %411 = getelementptr inbounds i32*, i32** %408, i64 -1
  %412 = load i32*, i32** %411, align 8
  %413 = getelementptr inbounds i32, i32* %412, i64 1024
  br label %414

414:                                              ; preds = %405, %410
  %415 = phi i32* [ %412, %410 ], [ %406, %405 ]
  %416 = phi i32** [ %411, %410 ], [ %408, %405 ]
  %417 = phi i32* [ %413, %410 ], [ %407, %405 ]
  %418 = getelementptr inbounds i32, i32* %417, i64 -1
  %419 = icmp eq i32* %418, %41
  br i1 %419, label %420, label %556

420:                                              ; preds = %414
  %421 = getelementptr inbounds i32, i32* %41, i64 1
  %422 = ptrtoint i32* %421 to i64
  %423 = load i64, i64* %51, align 8
  %424 = sub i64 %422, %423
  %425 = icmp eq i64 %424, 4096
  br i1 %425, label %426, label %430

426:                                              ; preds = %420
  %427 = getelementptr inbounds i32*, i32** %43, i64 1
  %428 = bitcast i32** %427 to i64*
  %429 = load i64, i64* %428, align 8
  br label %430

430:                                              ; preds = %420, %426
  %431 = phi i64 [ %429, %426 ], [ %422, %420 ]
  %432 = phi i32** [ %427, %426 ], [ %43, %420 ]
  %433 = load i32*, i32** %28, align 8
  %434 = icmp eq i32* %433, %29
  br i1 %434, label %435, label %438

435:                                              ; preds = %430
  %436 = load i32*, i32** %36, align 8
  %437 = getelementptr inbounds i32, i32* %436, i64 1024
  br label %438

438:                                              ; preds = %430, %435
  %439 = phi i32** [ %36, %435 ], [ %28, %430 ]
  %440 = phi i32* [ %437, %435 ], [ %29, %430 ]
  %441 = getelementptr inbounds i32, i32* %440, i64 -1
  %442 = load i32, i32* %441, align 4
  %443 = icmp slt i32 %400, %442
  br i1 %443, label %479, label %444

444:                                              ; preds = %438
  %445 = inttoptr i64 %431 to i32*
  %446 = icmp eq i32* %441, %445
  br i1 %446, label %798, label %447

447:                                              ; preds = %444, %474
  %448 = phi i32* [ %477, %474 ], [ %445, %444 ]
  %449 = phi i32** [ %476, %474 ], [ %432, %444 ]
  %450 = load i32, i32* %448, align 4
  %451 = icmp slt i32 %400, %450
  br i1 %451, label %452, label %463

452:                                              ; preds = %447
  store i32 %442, i32* %448, align 4
  store i32 %450, i32* %441, align 4
  %453 = getelementptr inbounds i32, i32* %448, i64 1
  %454 = ptrtoint i32* %453 to i64
  %455 = bitcast i32** %449 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = sub i64 %454, %456
  %458 = icmp eq i64 %457, 4096
  br i1 %458, label %459, label %479

459:                                              ; preds = %452
  %460 = getelementptr inbounds i32*, i32** %449, i64 1
  %461 = bitcast i32** %460 to i64*
  %462 = load i64, i64* %461, align 8
  br label %479

463:                                              ; preds = %447
  %464 = getelementptr inbounds i32, i32* %448, i64 1
  %465 = ptrtoint i32* %464 to i64
  %466 = bitcast i32** %449 to i64*
  %467 = load i64, i64* %466, align 8
  %468 = sub i64 %465, %467
  %469 = icmp eq i64 %468, 4096
  br i1 %469, label %470, label %474

470:                                              ; preds = %463
  %471 = getelementptr inbounds i32*, i32** %449, i64 1
  %472 = bitcast i32** %471 to i64*
  %473 = load i64, i64* %472, align 8
  br label %474

474:                                              ; preds = %463, %470
  %475 = phi i64 [ %473, %470 ], [ %465, %463 ]
  %476 = phi i32** [ %471, %470 ], [ %449, %463 ]
  %477 = inttoptr i64 %475 to i32*
  %478 = icmp eq i32* %441, %477
  br i1 %478, label %798, label %447

479:                                              ; preds = %459, %452, %438
  %480 = phi i64 [ %431, %438 ], [ %462, %459 ], [ %454, %452 ]
  %481 = phi i32** [ %432, %438 ], [ %460, %459 ], [ %449, %452 ]
  %482 = inttoptr i64 %480 to i32*
  %483 = icmp eq i32* %441, %482
  br i1 %483, label %798, label %484

484:                                              ; preds = %479, %549
  %485 = phi i64 [ %550, %549 ], [ %480, %479 ]
  %486 = phi i32** [ %551, %549 ], [ %481, %479 ]
  %487 = phi i32* [ %533, %549 ], [ %441, %479 ]
  %488 = phi i32** [ %531, %549 ], [ %439, %479 ]
  %489 = inttoptr i64 %485 to i32*
  %490 = load i32, i32* %41, align 4
  %491 = load i32, i32* %489, align 4
  %492 = icmp slt i32 %490, %491
  br i1 %492, label %495, label %501

493:                                              ; preds = %514
  %494 = inttoptr i64 %515 to i32*
  br label %495

495:                                              ; preds = %493, %484
  %496 = phi i64 [ %485, %484 ], [ %515, %493 ]
  %497 = phi i32** [ %486, %484 ], [ %516, %493 ]
  %498 = phi i32* [ %489, %484 ], [ %494, %493 ]
  %499 = phi i32 [ %491, %484 ], [ %518, %493 ]
  %500 = load i32*, i32** %488, align 8
  br label %520

501:                                              ; preds = %484, %514
  %502 = phi i32* [ %517, %514 ], [ %489, %484 ]
  %503 = phi i32** [ %516, %514 ], [ %486, %484 ]
  %504 = getelementptr inbounds i32, i32* %502, i64 1
  %505 = ptrtoint i32* %504 to i64
  %506 = bitcast i32** %503 to i64*
  %507 = load i64, i64* %506, align 8
  %508 = sub i64 %505, %507
  %509 = icmp eq i64 %508, 4096
  br i1 %509, label %510, label %514

510:                                              ; preds = %501
  %511 = getelementptr inbounds i32*, i32** %503, i64 1
  %512 = bitcast i32** %511 to i64*
  %513 = load i64, i64* %512, align 8
  br label %514

514:                                              ; preds = %501, %510
  %515 = phi i64 [ %513, %510 ], [ %505, %501 ]
  %516 = phi i32** [ %511, %510 ], [ %503, %501 ]
  %517 = inttoptr i64 %515 to i32*
  %518 = load i32, i32* %517, align 4
  %519 = icmp slt i32 %490, %518
  br i1 %519, label %493, label %501

520:                                              ; preds = %495, %529
  %521 = phi i32* [ %530, %529 ], [ %500, %495 ]
  %522 = phi i32* [ %533, %529 ], [ %487, %495 ]
  %523 = phi i32** [ %531, %529 ], [ %488, %495 ]
  %524 = icmp eq i32* %522, %521
  br i1 %524, label %525, label %529

525:                                              ; preds = %520
  %526 = getelementptr inbounds i32*, i32** %523, i64 -1
  %527 = load i32*, i32** %526, align 8
  %528 = getelementptr inbounds i32, i32* %527, i64 1024
  br label %529

529:                                              ; preds = %520, %525
  %530 = phi i32* [ %527, %525 ], [ %521, %520 ]
  %531 = phi i32** [ %526, %525 ], [ %523, %520 ]
  %532 = phi i32* [ %528, %525 ], [ %522, %520 ]
  %533 = getelementptr inbounds i32, i32* %532, i64 -1
  %534 = load i32, i32* %533, align 4
  %535 = icmp slt i32 %490, %534
  br i1 %535, label %520, label %536

536:                                              ; preds = %529
  %537 = icmp ult i32** %497, %531
  br i1 %537, label %542, label %538

538:                                              ; preds = %536
  %539 = icmp ne i32** %497, %531
  %540 = icmp ule i32* %533, %498
  %541 = or i1 %539, %540
  br i1 %541, label %37, label %542

542:                                              ; preds = %538, %536
  store i32 %534, i32* %498, align 4
  store i32 %499, i32* %533, align 4
  %543 = getelementptr inbounds i32, i32* %498, i64 1
  %544 = ptrtoint i32* %543 to i64
  %545 = bitcast i32** %497 to i64*
  %546 = load i64, i64* %545, align 8
  %547 = sub i64 %544, %546
  %548 = icmp eq i64 %547, 4096
  br i1 %548, label %552, label %549

549:                                              ; preds = %542, %552
  %550 = phi i64 [ %555, %552 ], [ %544, %542 ]
  %551 = phi i32** [ %553, %552 ], [ %497, %542 ]
  br label %484

552:                                              ; preds = %542
  %553 = getelementptr inbounds i32*, i32** %497, i64 1
  %554 = bitcast i32** %553 to i64*
  %555 = load i64, i64* %554, align 8
  br label %549

556:                                              ; preds = %414
  %557 = load i32, i32* %418, align 4
  %558 = icmp slt i32 %557, %401
  br i1 %558, label %559, label %405

559:                                              ; preds = %556
  %560 = inttoptr i64 %42 to i32*
  store i32 %557, i32* %560, align 4
  store i32 %400, i32* %418, align 4
  %561 = add i32 %399, 1
  br label %564

562:                                              ; preds = %397
  %563 = inttoptr i64 %42 to i32*
  br label %564

564:                                              ; preds = %562, %559
  %565 = phi i32* [ %560, %559 ], [ %563, %562 ]
  %566 = phi i32* [ %418, %559 ], [ %296, %562 ]
  %567 = phi i32** [ %416, %559 ], [ %294, %562 ]
  %568 = phi i32 [ %561, %559 ], [ %399, %562 ]
  %569 = bitcast i32** %43 to i64*
  %570 = bitcast i32** %28 to i64*
  %571 = ptrtoint i32** %43 to i64
  %572 = ptrtoint i32** %28 to i64
  %573 = inttoptr i64 %30 to i32*
  %574 = getelementptr inbounds i32, i32* %565, i64 1
  %575 = ptrtoint i32* %574 to i64
  %576 = load i64, i64* %569, align 8
  %577 = sub i64 %575, %576
  %578 = icmp eq i64 %577, 4096
  br i1 %578, label %579, label %583

579:                                              ; preds = %564
  %580 = getelementptr inbounds i32*, i32** %43, i64 1
  %581 = bitcast i32** %580 to i64*
  %582 = load i64, i64* %581, align 8
  br label %583

583:                                              ; preds = %564, %579
  %584 = phi i64 [ %582, %579 ], [ %575, %564 ]
  %585 = phi i32** [ %580, %579 ], [ %43, %564 ]
  %586 = icmp ult i32** %585, %567
  br i1 %586, label %592, label %587

587:                                              ; preds = %583
  %588 = icmp eq i32** %585, %567
  %589 = inttoptr i64 %584 to i32*
  %590 = icmp ugt i32* %566, %589
  %591 = and i1 %588, %590
  br i1 %591, label %592, label %675

592:                                              ; preds = %587, %583
  br label %593

593:                                              ; preds = %665, %592
  %594 = phi i64 [ %320, %592 ], [ %658, %665 ]
  %595 = phi i64 [ %584, %592 ], [ %666, %665 ]
  %596 = phi i32** [ %585, %592 ], [ %667, %665 ]
  %597 = phi i32* [ %566, %592 ], [ %645, %665 ]
  %598 = phi i32** [ %567, %592 ], [ %643, %665 ]
  %599 = phi i32 [ %568, %592 ], [ %655, %665 ]
  %600 = inttoptr i64 %595 to i32*
  %601 = inttoptr i64 %594 to i32*
  %602 = load i32, i32* %600, align 4
  %603 = load i32, i32* %601, align 4
  %604 = icmp slt i32 %602, %603
  br i1 %604, label %613, label %607

605:                                              ; preds = %626
  %606 = inttoptr i64 %627 to i32*
  br label %607

607:                                              ; preds = %605, %593
  %608 = phi i64 [ %595, %593 ], [ %627, %605 ]
  %609 = phi i32** [ %596, %593 ], [ %628, %605 ]
  %610 = phi i32* [ %600, %593 ], [ %606, %605 ]
  %611 = phi i32 [ %602, %593 ], [ %630, %605 ]
  %612 = load i32*, i32** %598, align 8
  br label %632

613:                                              ; preds = %593, %626
  %614 = phi i32* [ %629, %626 ], [ %600, %593 ]
  %615 = phi i32** [ %628, %626 ], [ %596, %593 ]
  %616 = getelementptr inbounds i32, i32* %614, i64 1
  %617 = ptrtoint i32* %616 to i64
  %618 = bitcast i32** %615 to i64*
  %619 = load i64, i64* %618, align 8
  %620 = sub i64 %617, %619
  %621 = icmp eq i64 %620, 4096
  br i1 %621, label %622, label %626

622:                                              ; preds = %613
  %623 = getelementptr inbounds i32*, i32** %615, i64 1
  %624 = bitcast i32** %623 to i64*
  %625 = load i64, i64* %624, align 8
  br label %626

626:                                              ; preds = %613, %622
  %627 = phi i64 [ %625, %622 ], [ %617, %613 ]
  %628 = phi i32** [ %623, %622 ], [ %615, %613 ]
  %629 = inttoptr i64 %627 to i32*
  %630 = load i32, i32* %629, align 4
  %631 = icmp slt i32 %630, %603
  br i1 %631, label %613, label %605

632:                                              ; preds = %607, %641
  %633 = phi i32* [ %642, %641 ], [ %612, %607 ]
  %634 = phi i32* [ %645, %641 ], [ %597, %607 ]
  %635 = phi i32** [ %643, %641 ], [ %598, %607 ]
  %636 = icmp eq i32* %634, %633
  br i1 %636, label %637, label %641

637:                                              ; preds = %632
  %638 = getelementptr inbounds i32*, i32** %635, i64 -1
  %639 = load i32*, i32** %638, align 8
  %640 = getelementptr inbounds i32, i32* %639, i64 1024
  br label %641

641:                                              ; preds = %632, %637
  %642 = phi i32* [ %639, %637 ], [ %633, %632 ]
  %643 = phi i32** [ %638, %637 ], [ %635, %632 ]
  %644 = phi i32* [ %640, %637 ], [ %634, %632 ]
  %645 = getelementptr inbounds i32, i32* %644, i64 -1
  %646 = load i32, i32* %645, align 4
  %647 = icmp slt i32 %646, %603
  br i1 %647, label %648, label %632

648:                                              ; preds = %641
  %649 = icmp ult i32** %643, %609
  br i1 %649, label %672, label %650

650:                                              ; preds = %648
  %651 = icmp eq i32** %643, %609
  %652 = icmp ult i32* %645, %610
  %653 = and i1 %651, %652
  br i1 %653, label %672, label %654

654:                                              ; preds = %650
  store i32 %646, i32* %610, align 4
  store i32 %611, i32* %645, align 4
  %655 = add i32 %599, 1
  %656 = icmp eq i32* %610, %601
  %657 = ptrtoint i32* %645 to i64
  %658 = select i1 %656, i64 %657, i64 %594
  %659 = getelementptr inbounds i32, i32* %610, i64 1
  %660 = ptrtoint i32* %659 to i64
  %661 = bitcast i32** %609 to i64*
  %662 = load i64, i64* %661, align 8
  %663 = sub i64 %660, %662
  %664 = icmp eq i64 %663, 4096
  br i1 %664, label %668, label %665

665:                                              ; preds = %654, %668
  %666 = phi i64 [ %660, %654 ], [ %671, %668 ]
  %667 = phi i32** [ %609, %654 ], [ %669, %668 ]
  br label %593

668:                                              ; preds = %654
  %669 = getelementptr inbounds i32*, i32** %609, i64 1
  %670 = bitcast i32** %669 to i64*
  %671 = load i64, i64* %670, align 8
  br label %665

672:                                              ; preds = %648, %650
  %673 = inttoptr i64 %594 to i32*
  %674 = inttoptr i64 %608 to i32*
  br label %675

675:                                              ; preds = %672, %587
  %676 = phi i32* [ %673, %672 ], [ %398, %587 ]
  %677 = phi i32* [ %674, %672 ], [ %589, %587 ]
  %678 = phi i64 [ %608, %672 ], [ %584, %587 ]
  %679 = phi i32** [ %609, %672 ], [ %585, %587 ]
  %680 = phi i32 [ %599, %672 ], [ %568, %587 ]
  %681 = icmp eq i32* %677, %676
  br i1 %681, label %688, label %682

682:                                              ; preds = %675
  %683 = load i32, i32* %676, align 4
  %684 = load i32, i32* %677, align 4
  %685 = icmp slt i32 %683, %684
  br i1 %685, label %686, label %688

686:                                              ; preds = %682
  store i32 %683, i32* %677, align 4
  store i32 %684, i32* %676, align 4
  %687 = add i32 %680, 1
  br label %688

688:                                              ; preds = %675, %686, %682
  %689 = phi i32 [ %687, %686 ], [ %680, %682 ], [ %680, %675 ]
  %690 = icmp eq i32 %689, 0
  br i1 %690, label %691, label %729

691:                                              ; preds = %688
  %692 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEbT0_S9_T_(i32** %43, i32* %565, i32** %679, i32* %677, %"struct.std::__1::__less.24"* dereferenceable(1) %4)
  %693 = bitcast i32** %679 to i64*
  %694 = load i64, i64* %693, align 8
  %695 = sub i64 %678, %694
  %696 = ashr exact i64 %695, 2
  %697 = add nsw i64 %696, 1
  %698 = icmp sgt i64 %695, -4
  br i1 %698, label %699, label %705

699:                                              ; preds = %691
  %700 = lshr i64 %697, 10
  %701 = getelementptr inbounds i32*, i32** %679, i64 %700
  %702 = load i32*, i32** %701, align 8
  %703 = and i64 %697, 1023
  %704 = getelementptr inbounds i32, i32* %702, i64 %703
  br label %713

705:                                              ; preds = %691
  %706 = sub nsw i64 1022, %696
  %707 = sdiv i64 %706, -1024
  %708 = getelementptr inbounds i32*, i32** %679, i64 %707
  %709 = load i32*, i32** %708, align 8
  %710 = srem i64 %706, 1024
  %711 = sub nuw nsw i64 1023, %710
  %712 = getelementptr inbounds i32, i32* %709, i64 %711
  br label %713

713:                                              ; preds = %699, %705
  %714 = phi i32* [ %704, %699 ], [ %712, %705 ]
  %715 = phi i32** [ %701, %699 ], [ %708, %705 ]
  %716 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEbT0_S9_T_(i32** %715, i32* %714, i32** %28, i32* %573, %"struct.std::__1::__less.24"* dereferenceable(1) %4)
  br i1 %716, label %717, label %718

717:                                              ; preds = %713
  br i1 %692, label %798, label %18

718:                                              ; preds = %713
  br i1 %692, label %719, label %729

719:                                              ; preds = %718
  %720 = getelementptr inbounds i32, i32* %677, i64 1
  %721 = ptrtoint i32* %720 to i64
  %722 = load i64, i64* %693, align 8
  %723 = sub i64 %721, %722
  %724 = icmp eq i64 %723, 4096
  br i1 %724, label %725, label %18

725:                                              ; preds = %719
  %726 = getelementptr inbounds i32*, i32** %679, i64 1
  %727 = bitcast i32** %726 to i64*
  %728 = load i64, i64* %727, align 8
  br label %18

729:                                              ; preds = %718, %688
  %730 = icmp eq i32* %677, %565
  br i1 %730, label %744, label %731

731:                                              ; preds = %729
  %732 = ptrtoint i32** %679 to i64
  %733 = sub i64 %732, %571
  %734 = shl i64 %733, 7
  %735 = bitcast i32** %679 to i64*
  %736 = load i64, i64* %735, align 8
  %737 = sub i64 %678, %736
  %738 = ashr exact i64 %737, 2
  %739 = add nsw i64 %738, %734
  %740 = load i64, i64* %569, align 8
  %741 = sub i64 %42, %740
  %742 = ashr exact i64 %741, 2
  %743 = sub i64 %739, %742
  br label %744

744:                                              ; preds = %729, %731
  %745 = phi i64 [ %743, %731 ], [ 0, %729 ]
  %746 = icmp eq i32* %677, %573
  br i1 %746, label %760, label %747

747:                                              ; preds = %744
  %748 = ptrtoint i32** %679 to i64
  %749 = sub i64 %572, %748
  %750 = shl i64 %749, 7
  %751 = load i64, i64* %570, align 8
  %752 = sub i64 %30, %751
  %753 = ashr exact i64 %752, 2
  %754 = add nsw i64 %753, %750
  %755 = bitcast i32** %679 to i64*
  %756 = load i64, i64* %755, align 8
  %757 = sub i64 %678, %756
  %758 = ashr exact i64 %757, 2
  %759 = sub i64 %754, %758
  br label %760

760:                                              ; preds = %744, %747
  %761 = phi i64 [ %759, %747 ], [ 0, %744 ]
  %762 = icmp slt i64 %745, %761
  br i1 %762, label %763, label %774

763:                                              ; preds = %760
  tail call void @_ZNSt3__16__sortIRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEvT0_S9_T_(i32** %43, i32* %565, i32** %679, i32* %677, %"struct.std::__1::__less.24"* dereferenceable(1) %4)
  %764 = getelementptr inbounds i32, i32* %677, i64 1
  %765 = ptrtoint i32* %764 to i64
  %766 = bitcast i32** %679 to i64*
  %767 = load i64, i64* %766, align 8
  %768 = sub i64 %765, %767
  %769 = icmp eq i64 %768, 4096
  br i1 %769, label %770, label %18

770:                                              ; preds = %763
  %771 = getelementptr inbounds i32*, i32** %679, i64 1
  %772 = bitcast i32** %771 to i64*
  %773 = load i64, i64* %772, align 8
  br label %18

774:                                              ; preds = %760
  %775 = bitcast i32** %679 to i64*
  %776 = load i64, i64* %775, align 8
  %777 = sub i64 %678, %776
  %778 = ashr exact i64 %777, 2
  %779 = add nsw i64 %778, 1
  %780 = icmp sgt i64 %777, -4
  br i1 %780, label %781, label %787

781:                                              ; preds = %774
  %782 = lshr i64 %779, 10
  %783 = getelementptr inbounds i32*, i32** %679, i64 %782
  %784 = load i32*, i32** %783, align 8
  %785 = and i64 %779, 1023
  %786 = getelementptr inbounds i32, i32* %784, i64 %785
  br label %795

787:                                              ; preds = %774
  %788 = sub nsw i64 1022, %778
  %789 = sdiv i64 %788, -1024
  %790 = getelementptr inbounds i32*, i32** %679, i64 %789
  %791 = load i32*, i32** %790, align 8
  %792 = srem i64 %788, 1024
  %793 = sub nuw nsw i64 1023, %792
  %794 = getelementptr inbounds i32, i32* %791, i64 %793
  br label %795

795:                                              ; preds = %781, %787
  %796 = phi i32* [ %786, %781 ], [ %794, %787 ]
  %797 = phi i32** [ %783, %781 ], [ %790, %787 ]
  tail call void @_ZNSt3__16__sortIRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEvT0_S9_T_(i32** %797, i32* %796, i32** %28, i32* %573, %"struct.std::__1::__less.24"* dereferenceable(1) %4)
  br label %18

798:                                              ; preds = %717, %18, %444, %40, %40, %479, %37, %474, %5, %199, %195, %191, %187, %119, %116, %115, %113, %109, %108, %66, %72, %274, %285
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEjT0_S9_S9_S9_S9_T_(i32**, i32*, i32**, i32*, i32**, i32*, %"class.std::__1::__deque_iterator"* byval(%"class.std::__1::__deque_iterator") align 8, %"class.std::__1::__deque_iterator"* byval(%"class.std::__1::__deque_iterator") align 8, %"struct.std::__1::__less.24"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %10 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %6, i64 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = load i32, i32* %3, align 4
  %13 = load i32, i32* %1, align 4
  %14 = icmp slt i32 %12, %13
  %15 = load i32, i32* %5, align 4
  %16 = icmp slt i32 %15, %12
  br i1 %14, label %24, label %17

17:                                               ; preds = %9
  br i1 %16, label %18, label %30

18:                                               ; preds = %17
  store i32 %15, i32* %3, align 4
  store i32 %12, i32* %5, align 4
  %19 = load i32, i32* %3, align 4
  %20 = load i32, i32* %1, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  store i32 %19, i32* %1, align 4
  store i32 %20, i32* %3, align 4
  %23 = load i32, i32* %5, align 4
  br label %30

24:                                               ; preds = %9
  br i1 %16, label %25, label %26

25:                                               ; preds = %24
  store i32 %15, i32* %1, align 4
  store i32 %13, i32* %5, align 4
  br label %30

26:                                               ; preds = %24
  store i32 %12, i32* %1, align 4
  store i32 %13, i32* %3, align 4
  %27 = load i32, i32* %5, align 4
  %28 = icmp slt i32 %27, %13
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  store i32 %27, i32* %3, align 4
  store i32 %13, i32* %5, align 4
  br label %30

30:                                               ; preds = %29, %26, %25, %22, %18, %17
  %31 = phi i32 [ %13, %25 ], [ %15, %17 ], [ %23, %22 ], [ %12, %18 ], [ %13, %29 ], [ %27, %26 ]
  %32 = phi i32 [ 1, %25 ], [ 0, %17 ], [ 2, %22 ], [ 1, %18 ], [ 2, %29 ], [ 1, %26 ]
  %33 = load i32, i32* %11, align 4
  %34 = icmp slt i32 %33, %31
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  store i32 %33, i32* %5, align 4
  store i32 %31, i32* %11, align 4
  %36 = add nuw nsw i32 %32, 1
  %37 = load i32, i32* %5, align 4
  %38 = load i32, i32* %3, align 4
  %39 = icmp slt i32 %37, %38
  br i1 %39, label %40, label %47

40:                                               ; preds = %35
  store i32 %37, i32* %3, align 4
  store i32 %38, i32* %5, align 4
  %41 = add nuw nsw i32 %32, 2
  %42 = load i32, i32* %3, align 4
  %43 = load i32, i32* %1, align 4
  %44 = icmp slt i32 %42, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %40
  store i32 %42, i32* %1, align 4
  store i32 %43, i32* %3, align 4
  %46 = add nuw nsw i32 %32, 3
  br label %47

47:                                               ; preds = %30, %35, %40, %45
  %48 = phi i32 [ %46, %45 ], [ %41, %40 ], [ %36, %35 ], [ %32, %30 ]
  %49 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %7, i64 0, i32 1
  %50 = load i32*, i32** %49, align 8
  %51 = load i32, i32* %50, align 4
  %52 = load i32, i32* %11, align 4
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %54, label %71

54:                                               ; preds = %47
  store i32 %51, i32* %11, align 4
  store i32 %52, i32* %50, align 4
  %55 = add nuw nsw i32 %48, 1
  %56 = load i32, i32* %11, align 4
  %57 = load i32, i32* %5, align 4
  %58 = icmp slt i32 %56, %57
  br i1 %58, label %59, label %71

59:                                               ; preds = %54
  store i32 %56, i32* %5, align 4
  store i32 %57, i32* %11, align 4
  %60 = add nuw nsw i32 %48, 2
  %61 = load i32, i32* %5, align 4
  %62 = load i32, i32* %3, align 4
  %63 = icmp slt i32 %61, %62
  br i1 %63, label %64, label %71

64:                                               ; preds = %59
  store i32 %61, i32* %3, align 4
  store i32 %62, i32* %5, align 4
  %65 = add nuw nsw i32 %48, 3
  %66 = load i32, i32* %3, align 4
  %67 = load i32, i32* %1, align 4
  %68 = icmp slt i32 %66, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %64
  store i32 %66, i32* %1, align 4
  store i32 %67, i32* %3, align 4
  %70 = add nuw nsw i32 %48, 4
  br label %71

71:                                               ; preds = %54, %64, %69, %59, %47
  %72 = phi i32 [ %70, %69 ], [ %65, %64 ], [ %60, %59 ], [ %55, %54 ], [ %48, %47 ]
  ret i32 %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEvT0_S9_T_(i32**, i32*, i32**, i32*, %"struct.std::__1::__less.24"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = ptrtoint i32* %1 to i64
  %7 = bitcast i32** %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 2
  %11 = add nsw i64 %10, 2
  %12 = icmp sgt i64 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %5
  %14 = sub nsw i64 1021, %10
  %15 = sdiv i64 %14, -1024
  %16 = getelementptr inbounds i32*, i32** %0, i64 %15
  %17 = load i32*, i32** %16, align 8
  %18 = srem i64 %14, 1024
  %19 = sub nuw nsw i64 1023, %18
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = ptrtoint i32* %20 to i64
  %22 = sub nsw i64 1022, %10
  br label %38

23:                                               ; preds = %5
  %24 = lshr i64 %11, 10
  %25 = getelementptr inbounds i32*, i32** %0, i64 %24
  %26 = load i32*, i32** %25, align 8
  %27 = and i64 %11, 1023
  %28 = getelementptr inbounds i32, i32* %26, i64 %27
  %29 = ptrtoint i32* %28 to i64
  %30 = add nsw i64 %10, 1
  %31 = icmp sgt i64 %9, -4
  br i1 %31, label %32, label %38

32:                                               ; preds = %23
  %33 = lshr i64 %30, 10
  %34 = getelementptr inbounds i32*, i32** %0, i64 %33
  %35 = load i32*, i32** %34, align 8
  %36 = and i64 %30, 1023
  %37 = getelementptr inbounds i32, i32* %35, i64 %36
  br label %49

38:                                               ; preds = %13, %23
  %39 = phi i64 [ %22, %13 ], [ 1023, %23 ]
  %40 = phi i32* [ %20, %13 ], [ %28, %23 ]
  %41 = phi i32** [ %16, %13 ], [ %25, %23 ]
  %42 = phi i64 [ %21, %13 ], [ %29, %23 ]
  %43 = sdiv i64 %39, -1024
  %44 = getelementptr inbounds i32*, i32** %0, i64 %43
  %45 = load i32*, i32** %44, align 8
  %46 = and i64 %39, 1023
  %47 = xor i64 %46, 1023
  %48 = getelementptr inbounds i32, i32* %45, i64 %47
  br label %49

49:                                               ; preds = %32, %38
  %50 = phi i32* [ %28, %32 ], [ %40, %38 ]
  %51 = phi i32** [ %25, %32 ], [ %41, %38 ]
  %52 = phi i64 [ %29, %32 ], [ %42, %38 ]
  %53 = phi i32* [ %37, %32 ], [ %48, %38 ]
  %54 = load i32, i32* %53, align 4
  %55 = load i32, i32* %1, align 4
  %56 = icmp slt i32 %54, %55
  %57 = load i32, i32* %50, align 4
  %58 = icmp slt i32 %57, %54
  br i1 %56, label %65, label %59

59:                                               ; preds = %49
  br i1 %58, label %60, label %71

60:                                               ; preds = %59
  store i32 %57, i32* %53, align 4
  store i32 %54, i32* %50, align 4
  %61 = load i32, i32* %53, align 4
  %62 = load i32, i32* %1, align 4
  %63 = icmp slt i32 %61, %62
  br i1 %63, label %64, label %71

64:                                               ; preds = %60
  store i32 %61, i32* %1, align 4
  store i32 %62, i32* %53, align 4
  br label %71

65:                                               ; preds = %49
  br i1 %58, label %66, label %67

66:                                               ; preds = %65
  store i32 %57, i32* %1, align 4
  store i32 %55, i32* %50, align 4
  br label %71

67:                                               ; preds = %65
  store i32 %54, i32* %1, align 4
  store i32 %55, i32* %53, align 4
  %68 = load i32, i32* %50, align 4
  %69 = icmp slt i32 %68, %55
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  store i32 %68, i32* %53, align 4
  store i32 %55, i32* %50, align 4
  br label %71

71:                                               ; preds = %59, %60, %64, %66, %67, %70
  %72 = bitcast i32** %51 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %52, %73
  %75 = ashr exact i64 %74, 2
  %76 = add nsw i64 %75, 1
  %77 = icmp sgt i64 %74, -4
  br i1 %77, label %78, label %84

78:                                               ; preds = %71
  %79 = lshr i64 %76, 10
  %80 = getelementptr inbounds i32*, i32** %51, i64 %79
  %81 = load i32*, i32** %80, align 8
  %82 = and i64 %76, 1023
  %83 = getelementptr inbounds i32, i32* %81, i64 %82
  br label %92

84:                                               ; preds = %71
  %85 = sub nsw i64 1022, %75
  %86 = sdiv i64 %85, -1024
  %87 = getelementptr inbounds i32*, i32** %51, i64 %86
  %88 = load i32*, i32** %87, align 8
  %89 = srem i64 %85, 1024
  %90 = sub nuw nsw i64 1023, %89
  %91 = getelementptr inbounds i32, i32* %88, i64 %90
  br label %92

92:                                               ; preds = %78, %84
  %93 = phi i32* [ %83, %78 ], [ %91, %84 ]
  %94 = phi i32** [ %80, %78 ], [ %87, %84 ]
  %95 = icmp eq i32* %93, %3
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = ptrtoint i32* %93 to i64
  br label %99

98:                                               ; preds = %141, %92
  ret void

99:                                               ; preds = %96, %141
  %100 = phi i32* [ %144, %141 ], [ %93, %96 ]
  %101 = phi i32** [ %143, %141 ], [ %94, %96 ]
  %102 = phi i64 [ %142, %141 ], [ %97, %96 ]
  %103 = phi i32** [ %101, %141 ], [ %51, %96 ]
  %104 = phi i64 [ %102, %141 ], [ %52, %96 ]
  %105 = inttoptr i64 %104 to i32*
  %106 = load i32, i32* %100, align 4
  %107 = load i32, i32* %105, align 4
  %108 = icmp slt i32 %106, %107
  br i1 %108, label %109, label %130

109:                                              ; preds = %99, %122
  %110 = phi i32 [ %126, %122 ], [ %107, %99 ]
  %111 = phi i32* [ %112, %122 ], [ %100, %99 ]
  %112 = phi i32* [ %125, %122 ], [ %105, %99 ]
  %113 = phi i32** [ %123, %122 ], [ %103, %99 ]
  store i32 %110, i32* %111, align 4
  %114 = icmp eq i32* %112, %1
  br i1 %114, label %128, label %115

115:                                              ; preds = %109
  %116 = load i32*, i32** %113, align 8
  %117 = icmp eq i32* %112, %116
  br i1 %117, label %118, label %122

118:                                              ; preds = %115
  %119 = getelementptr inbounds i32*, i32** %113, i64 -1
  %120 = load i32*, i32** %119, align 8
  %121 = getelementptr inbounds i32, i32* %120, i64 1024
  br label %122

122:                                              ; preds = %115, %118
  %123 = phi i32** [ %119, %118 ], [ %113, %115 ]
  %124 = phi i32* [ %121, %118 ], [ %112, %115 ]
  %125 = getelementptr inbounds i32, i32* %124, i64 -1
  %126 = load i32, i32* %125, align 4
  %127 = icmp slt i32 %106, %126
  br i1 %127, label %109, label %128

128:                                              ; preds = %109, %122
  %129 = phi i32* [ %1, %109 ], [ %112, %122 ]
  store i32 %106, i32* %129, align 4
  br label %130

130:                                              ; preds = %128, %99
  %131 = getelementptr inbounds i32, i32* %100, i64 1
  %132 = ptrtoint i32* %131 to i64
  %133 = bitcast i32** %101 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %132, %134
  %136 = icmp eq i64 %135, 4096
  br i1 %136, label %137, label %141

137:                                              ; preds = %130
  %138 = getelementptr inbounds i32*, i32** %101, i64 1
  %139 = bitcast i32** %138 to i64*
  %140 = load i64, i64* %139, align 8
  br label %141

141:                                              ; preds = %130, %137
  %142 = phi i64 [ %140, %137 ], [ %132, %130 ]
  %143 = phi i32** [ %138, %137 ], [ %101, %130 ]
  %144 = inttoptr i64 %142 to i32*
  %145 = icmp eq i32* %144, %3
  br i1 %145, label %98, label %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEbT0_S9_T_(i32**, i32*, i32**, i32*, %"struct.std::__1::__less.24"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.std::__1::__deque_iterator", align 8
  %7 = alloca %"class.std::__1::__deque_iterator", align 8
  %8 = icmp eq i32* %3, %1
  br i1 %8, label %394, label %9

9:                                                ; preds = %5
  %10 = ptrtoint i32* %1 to i64
  %11 = ptrtoint i32* %3 to i64
  %12 = ptrtoint i32** %2 to i64
  %13 = ptrtoint i32** %0 to i64
  %14 = sub i64 %12, %13
  %15 = shl i64 %14, 7
  %16 = bitcast i32** %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %11, %17
  %19 = ashr exact i64 %18, 2
  %20 = add nsw i64 %19, %15
  %21 = bitcast i32** %0 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %10, %22
  %24 = ashr exact i64 %23, 2
  %25 = sub i64 %20, %24
  %26 = inttoptr i64 %17 to i32*
  switch i64 %25, label %239 [
    i64 0, label %394
    i64 1, label %394
    i64 2, label %27
    i64 3, label %40
    i64 4, label %84
    i64 5, label %161
  ]

27:                                               ; preds = %9
  %28 = icmp eq i32* %26, %3
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = getelementptr inbounds i32*, i32** %2, i64 -1
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 1024
  br label %33

33:                                               ; preds = %27, %29
  %34 = phi i32* [ %32, %29 ], [ %3, %27 ]
  %35 = getelementptr inbounds i32, i32* %34, i64 -1
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* %1, align 4
  %38 = icmp slt i32 %36, %37
  br i1 %38, label %39, label %394

39:                                               ; preds = %33
  store i32 %36, i32* %1, align 4
  store i32 %37, i32* %35, align 4
  br label %394

40:                                               ; preds = %9
  %41 = add nsw i64 %24, 1
  %42 = icmp sgt i64 %23, -4
  br i1 %42, label %43, label %49

43:                                               ; preds = %40
  %44 = lshr i64 %41, 10
  %45 = getelementptr inbounds i32*, i32** %0, i64 %44
  %46 = load i32*, i32** %45, align 8
  %47 = and i64 %41, 1023
  %48 = getelementptr inbounds i32, i32* %46, i64 %47
  br label %57

49:                                               ; preds = %40
  %50 = sub nsw i64 1022, %24
  %51 = sdiv i64 %50, -1024
  %52 = getelementptr inbounds i32*, i32** %0, i64 %51
  %53 = load i32*, i32** %52, align 8
  %54 = srem i64 %50, 1024
  %55 = sub nuw nsw i64 1023, %54
  %56 = getelementptr inbounds i32, i32* %53, i64 %55
  br label %57

57:                                               ; preds = %43, %49
  %58 = phi i32* [ %48, %43 ], [ %56, %49 ]
  %59 = icmp eq i32* %26, %3
  br i1 %59, label %60, label %64

60:                                               ; preds = %57
  %61 = getelementptr inbounds i32*, i32** %2, i64 -1
  %62 = load i32*, i32** %61, align 8
  %63 = getelementptr inbounds i32, i32* %62, i64 1024
  br label %64

64:                                               ; preds = %57, %60
  %65 = phi i32* [ %63, %60 ], [ %3, %57 ]
  %66 = getelementptr inbounds i32, i32* %65, i64 -1
  %67 = load i32, i32* %58, align 4
  %68 = load i32, i32* %1, align 4
  %69 = icmp slt i32 %67, %68
  %70 = load i32, i32* %66, align 4
  %71 = icmp slt i32 %70, %67
  br i1 %69, label %78, label %72

72:                                               ; preds = %64
  br i1 %71, label %73, label %394

73:                                               ; preds = %72
  store i32 %70, i32* %58, align 4
  store i32 %67, i32* %66, align 4
  %74 = load i32, i32* %58, align 4
  %75 = load i32, i32* %1, align 4
  %76 = icmp slt i32 %74, %75
  br i1 %76, label %77, label %394

77:                                               ; preds = %73
  store i32 %74, i32* %1, align 4
  store i32 %75, i32* %58, align 4
  br label %394

78:                                               ; preds = %64
  br i1 %71, label %79, label %80

79:                                               ; preds = %78
  store i32 %70, i32* %1, align 4
  store i32 %68, i32* %66, align 4
  br label %394

80:                                               ; preds = %78
  store i32 %67, i32* %1, align 4
  store i32 %68, i32* %58, align 4
  %81 = load i32, i32* %66, align 4
  %82 = icmp slt i32 %81, %68
  br i1 %82, label %83, label %394

83:                                               ; preds = %80
  store i32 %81, i32* %58, align 4
  store i32 %68, i32* %66, align 4
  br label %394

84:                                               ; preds = %9
  %85 = add nsw i64 %24, 1
  %86 = icmp sgt i64 %23, -4
  br i1 %86, label %87, label %94

87:                                               ; preds = %84
  %88 = lshr i64 %85, 10
  %89 = getelementptr inbounds i32*, i32** %0, i64 %88
  %90 = load i32*, i32** %89, align 8
  %91 = and i64 %85, 1023
  %92 = getelementptr inbounds i32, i32* %90, i64 %91
  %93 = add nuw nsw i64 %24, 2
  br label %103

94:                                               ; preds = %84
  %95 = sub nsw i64 1022, %24
  %96 = sdiv i64 %95, -1024
  %97 = getelementptr inbounds i32*, i32** %0, i64 %96
  %98 = load i32*, i32** %97, align 8
  %99 = srem i64 %95, 1024
  %100 = sub nuw nsw i64 1023, %99
  %101 = getelementptr inbounds i32, i32* %98, i64 %100
  %102 = icmp sgt i64 %23, -8
  br i1 %102, label %103, label %111

103:                                              ; preds = %87, %94
  %104 = phi i64 [ %93, %87 ], [ 1, %94 ]
  %105 = phi i32* [ %92, %87 ], [ %101, %94 ]
  %106 = lshr i64 %104, 10
  %107 = getelementptr inbounds i32*, i32** %0, i64 %106
  %108 = load i32*, i32** %107, align 8
  %109 = and i64 %104, 1023
  %110 = getelementptr inbounds i32, i32* %108, i64 %109
  br label %119

111:                                              ; preds = %94
  %112 = sub nsw i64 1021, %24
  %113 = sdiv i64 %112, -1024
  %114 = getelementptr inbounds i32*, i32** %0, i64 %113
  %115 = load i32*, i32** %114, align 8
  %116 = srem i64 %112, 1024
  %117 = sub nuw nsw i64 1023, %116
  %118 = getelementptr inbounds i32, i32* %115, i64 %117
  br label %119

119:                                              ; preds = %103, %111
  %120 = phi i32* [ %105, %103 ], [ %101, %111 ]
  %121 = phi i32* [ %110, %103 ], [ %118, %111 ]
  %122 = icmp eq i32* %26, %3
  br i1 %122, label %123, label %127

123:                                              ; preds = %119
  %124 = getelementptr inbounds i32*, i32** %2, i64 -1
  %125 = load i32*, i32** %124, align 8
  %126 = getelementptr inbounds i32, i32* %125, i64 1024
  br label %127

127:                                              ; preds = %119, %123
  %128 = phi i32* [ %126, %123 ], [ %3, %119 ]
  %129 = getelementptr inbounds i32, i32* %128, i64 -1
  %130 = load i32, i32* %120, align 4
  %131 = load i32, i32* %1, align 4
  %132 = icmp slt i32 %130, %131
  %133 = load i32, i32* %121, align 4
  %134 = icmp slt i32 %133, %130
  br i1 %132, label %142, label %135

135:                                              ; preds = %127
  br i1 %134, label %136, label %148

136:                                              ; preds = %135
  store i32 %133, i32* %120, align 4
  store i32 %130, i32* %121, align 4
  %137 = load i32, i32* %120, align 4
  %138 = load i32, i32* %1, align 4
  %139 = icmp slt i32 %137, %138
  br i1 %139, label %140, label %148

140:                                              ; preds = %136
  store i32 %137, i32* %1, align 4
  store i32 %138, i32* %120, align 4
  %141 = load i32, i32* %121, align 4
  br label %148

142:                                              ; preds = %127
  br i1 %134, label %143, label %144

143:                                              ; preds = %142
  store i32 %133, i32* %1, align 4
  store i32 %131, i32* %121, align 4
  br label %148

144:                                              ; preds = %142
  store i32 %130, i32* %1, align 4
  store i32 %131, i32* %120, align 4
  %145 = load i32, i32* %121, align 4
  %146 = icmp slt i32 %145, %131
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  store i32 %145, i32* %120, align 4
  store i32 %131, i32* %121, align 4
  br label %148

148:                                              ; preds = %147, %144, %143, %140, %136, %135
  %149 = phi i32 [ %131, %143 ], [ %133, %135 ], [ %141, %140 ], [ %130, %136 ], [ %131, %147 ], [ %145, %144 ]
  %150 = load i32, i32* %129, align 4
  %151 = icmp slt i32 %150, %149
  br i1 %151, label %152, label %394

152:                                              ; preds = %148
  store i32 %150, i32* %121, align 4
  store i32 %149, i32* %129, align 4
  %153 = load i32, i32* %121, align 4
  %154 = load i32, i32* %120, align 4
  %155 = icmp slt i32 %153, %154
  br i1 %155, label %156, label %394

156:                                              ; preds = %152
  store i32 %153, i32* %120, align 4
  store i32 %154, i32* %121, align 4
  %157 = load i32, i32* %120, align 4
  %158 = load i32, i32* %1, align 4
  %159 = icmp slt i32 %157, %158
  br i1 %159, label %160, label %394

160:                                              ; preds = %156
  store i32 %157, i32* %1, align 4
  store i32 %158, i32* %120, align 4
  br label %394

161:                                              ; preds = %9
  %162 = add nsw i64 %24, 1
  %163 = icmp sgt i64 %23, -4
  br i1 %163, label %164, label %171

164:                                              ; preds = %161
  %165 = lshr i64 %162, 10
  %166 = getelementptr inbounds i32*, i32** %0, i64 %165
  %167 = load i32*, i32** %166, align 8
  %168 = and i64 %162, 1023
  %169 = getelementptr inbounds i32, i32* %167, i64 %168
  %170 = add nuw nsw i64 %24, 2
  br label %180

171:                                              ; preds = %161
  %172 = sub nsw i64 1022, %24
  %173 = sdiv i64 %172, -1024
  %174 = getelementptr inbounds i32*, i32** %0, i64 %173
  %175 = load i32*, i32** %174, align 8
  %176 = srem i64 %172, 1024
  %177 = sub nuw nsw i64 1023, %176
  %178 = getelementptr inbounds i32, i32* %175, i64 %177
  %179 = icmp sgt i64 %23, -8
  br i1 %179, label %180, label %190

180:                                              ; preds = %171, %164
  %181 = phi i64 [ %170, %164 ], [ 1, %171 ]
  %182 = phi i32* [ %169, %164 ], [ %178, %171 ]
  %183 = phi i32** [ %166, %164 ], [ %174, %171 ]
  %184 = lshr i64 %181, 10
  %185 = getelementptr inbounds i32*, i32** %0, i64 %184
  %186 = load i32*, i32** %185, align 8
  %187 = and i64 %181, 1023
  %188 = getelementptr inbounds i32, i32* %186, i64 %187
  %189 = add nsw i64 %24, 3
  br label %199

190:                                              ; preds = %171
  %191 = sub nsw i64 1021, %24
  %192 = sdiv i64 %191, -1024
  %193 = getelementptr inbounds i32*, i32** %0, i64 %192
  %194 = load i32*, i32** %193, align 8
  %195 = srem i64 %191, 1024
  %196 = sub nuw nsw i64 1023, %195
  %197 = getelementptr inbounds i32, i32* %194, i64 %196
  %198 = icmp sgt i64 %23, -12
  br i1 %198, label %199, label %210

199:                                              ; preds = %180, %190
  %200 = phi i64 [ %189, %180 ], [ 1, %190 ]
  %201 = phi i32* [ %188, %180 ], [ %197, %190 ]
  %202 = phi i32** [ %185, %180 ], [ %193, %190 ]
  %203 = phi i32** [ %183, %180 ], [ %174, %190 ]
  %204 = phi i32* [ %182, %180 ], [ %178, %190 ]
  %205 = lshr i64 %200, 10
  %206 = getelementptr inbounds i32*, i32** %0, i64 %205
  %207 = load i32*, i32** %206, align 8
  %208 = and i64 %200, 1023
  %209 = getelementptr inbounds i32, i32* %207, i64 %208
  br label %218

210:                                              ; preds = %190
  %211 = sub nsw i64 1020, %24
  %212 = sdiv i64 %211, -1024
  %213 = getelementptr inbounds i32*, i32** %0, i64 %212
  %214 = load i32*, i32** %213, align 8
  %215 = srem i64 %211, 1024
  %216 = sub nuw nsw i64 1023, %215
  %217 = getelementptr inbounds i32, i32* %214, i64 %216
  br label %218

218:                                              ; preds = %199, %210
  %219 = phi i32* [ %201, %199 ], [ %197, %210 ]
  %220 = phi i32** [ %202, %199 ], [ %193, %210 ]
  %221 = phi i32** [ %203, %199 ], [ %174, %210 ]
  %222 = phi i32* [ %204, %199 ], [ %178, %210 ]
  %223 = phi i32* [ %209, %199 ], [ %217, %210 ]
  %224 = phi i32** [ %206, %199 ], [ %213, %210 ]
  %225 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %6, i64 0, i32 0
  store i32** %224, i32*** %225, align 8
  %226 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %6, i64 0, i32 1
  store i32* %223, i32** %226, align 8
  %227 = icmp eq i32* %26, %3
  br i1 %227, label %228, label %232

228:                                              ; preds = %218
  %229 = getelementptr inbounds i32*, i32** %2, i64 -1
  %230 = load i32*, i32** %229, align 8
  %231 = getelementptr inbounds i32, i32* %230, i64 1024
  br label %232

232:                                              ; preds = %218, %228
  %233 = phi i32** [ %229, %228 ], [ %2, %218 ]
  %234 = phi i32* [ %231, %228 ], [ %3, %218 ]
  %235 = getelementptr inbounds i32, i32* %234, i64 -1
  %236 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %7, i64 0, i32 0
  store i32** %233, i32*** %236, align 8
  %237 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %7, i64 0, i32 1
  store i32* %235, i32** %237, align 8
  %238 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIiiEENS_16__deque_iteratorIiPiRiPS5_lLl0EEEEEjT0_S9_S9_S9_S9_T_(i32** %0, i32* %1, i32** %221, i32* %222, i32** %220, i32* %219, %"class.std::__1::__deque_iterator"* nonnull byval(%"class.std::__1::__deque_iterator") align 8 %6, %"class.std::__1::__deque_iterator"* nonnull byval(%"class.std::__1::__deque_iterator") align 8 %7, %"struct.std::__1::__less.24"* dereferenceable(1) %4)
  br label %394

239:                                              ; preds = %9
  %240 = add nsw i64 %24, 2
  %241 = icmp sgt i64 %240, 0
  br i1 %241, label %252, label %242

242:                                              ; preds = %239
  %243 = sub nsw i64 1021, %24
  %244 = sdiv i64 %243, -1024
  %245 = getelementptr inbounds i32*, i32** %0, i64 %244
  %246 = load i32*, i32** %245, align 8
  %247 = srem i64 %243, 1024
  %248 = sub nuw nsw i64 1023, %247
  %249 = getelementptr inbounds i32, i32* %246, i64 %248
  %250 = ptrtoint i32* %249 to i64
  %251 = sub nsw i64 1022, %24
  br label %267

252:                                              ; preds = %239
  %253 = lshr i64 %240, 10
  %254 = getelementptr inbounds i32*, i32** %0, i64 %253
  %255 = load i32*, i32** %254, align 8
  %256 = and i64 %240, 1023
  %257 = getelementptr inbounds i32, i32* %255, i64 %256
  %258 = ptrtoint i32* %257 to i64
  %259 = add nsw i64 %24, 1
  %260 = icmp sgt i64 %23, -4
  br i1 %260, label %261, label %267

261:                                              ; preds = %252
  %262 = lshr i64 %259, 10
  %263 = getelementptr inbounds i32*, i32** %0, i64 %262
  %264 = load i32*, i32** %263, align 8
  %265 = and i64 %259, 1023
  %266 = getelementptr inbounds i32, i32* %264, i64 %265
  br label %278

267:                                              ; preds = %242, %252
  %268 = phi i64 [ %251, %242 ], [ 1023, %252 ]
  %269 = phi i32* [ %249, %242 ], [ %257, %252 ]
  %270 = phi i32** [ %245, %242 ], [ %254, %252 ]
  %271 = phi i64 [ %250, %242 ], [ %258, %252 ]
  %272 = sdiv i64 %268, -1024
  %273 = getelementptr inbounds i32*, i32** %0, i64 %272
  %274 = load i32*, i32** %273, align 8
  %275 = and i64 %268, 1023
  %276 = xor i64 %275, 1023
  %277 = getelementptr inbounds i32, i32* %274, i64 %276
  br label %278

278:                                              ; preds = %261, %267
  %279 = phi i32* [ %257, %261 ], [ %269, %267 ]
  %280 = phi i32** [ %254, %261 ], [ %270, %267 ]
  %281 = phi i64 [ %258, %261 ], [ %271, %267 ]
  %282 = phi i32* [ %266, %261 ], [ %277, %267 ]
  %283 = load i32, i32* %282, align 4
  %284 = load i32, i32* %1, align 4
  %285 = icmp slt i32 %283, %284
  %286 = load i32, i32* %279, align 4
  %287 = icmp slt i32 %286, %283
  br i1 %285, label %294, label %288

288:                                              ; preds = %278
  br i1 %287, label %289, label %300

289:                                              ; preds = %288
  store i32 %286, i32* %282, align 4
  store i32 %283, i32* %279, align 4
  %290 = load i32, i32* %282, align 4
  %291 = load i32, i32* %1, align 4
  %292 = icmp slt i32 %290, %291
  br i1 %292, label %293, label %300

293:                                              ; preds = %289
  store i32 %290, i32* %1, align 4
  store i32 %291, i32* %282, align 4
  br label %300

294:                                              ; preds = %278
  br i1 %287, label %295, label %296

295:                                              ; preds = %294
  store i32 %286, i32* %1, align 4
  store i32 %284, i32* %279, align 4
  br label %300

296:                                              ; preds = %294
  store i32 %283, i32* %1, align 4
  store i32 %284, i32* %282, align 4
  %297 = load i32, i32* %279, align 4
  %298 = icmp slt i32 %297, %284
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  store i32 %297, i32* %282, align 4
  store i32 %284, i32* %279, align 4
  br label %300

300:                                              ; preds = %288, %289, %293, %295, %296, %299
  %301 = bitcast i32** %280 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = sub i64 %281, %302
  %304 = ashr exact i64 %303, 2
  %305 = add nsw i64 %304, 1
  %306 = icmp sgt i64 %303, -4
  br i1 %306, label %307, label %313

307:                                              ; preds = %300
  %308 = lshr i64 %305, 10
  %309 = getelementptr inbounds i32*, i32** %280, i64 %308
  %310 = load i32*, i32** %309, align 8
  %311 = and i64 %305, 1023
  %312 = getelementptr inbounds i32, i32* %310, i64 %311
  br label %321

313:                                              ; preds = %300
  %314 = sub nsw i64 1022, %304
  %315 = sdiv i64 %314, -1024
  %316 = getelementptr inbounds i32*, i32** %280, i64 %315
  %317 = load i32*, i32** %316, align 8
  %318 = srem i64 %314, 1024
  %319 = sub nuw nsw i64 1023, %318
  %320 = getelementptr inbounds i32, i32* %317, i64 %319
  br label %321

321:                                              ; preds = %307, %313
  %322 = phi i32* [ %312, %307 ], [ %320, %313 ]
  %323 = phi i32** [ %309, %307 ], [ %316, %313 ]
  %324 = icmp eq i32* %322, %3
  br i1 %324, label %394, label %325

325:                                              ; preds = %321
  %326 = ptrtoint i32* %322 to i64
  br label %327

327:                                              ; preds = %325, %385
  %328 = phi i32* [ %388, %385 ], [ %322, %325 ]
  %329 = phi i32 [ %373, %385 ], [ 0, %325 ]
  %330 = phi i32** [ %387, %385 ], [ %323, %325 ]
  %331 = phi i64 [ %386, %385 ], [ %326, %325 ]
  %332 = phi i32** [ %330, %385 ], [ %280, %325 ]
  %333 = phi i64 [ %331, %385 ], [ %281, %325 ]
  %334 = inttoptr i64 %333 to i32*
  %335 = load i32, i32* %328, align 4
  %336 = load i32, i32* %334, align 4
  %337 = icmp slt i32 %335, %336
  br i1 %337, label %338, label %372

338:                                              ; preds = %327, %351
  %339 = phi i32 [ %355, %351 ], [ %336, %327 ]
  %340 = phi i32* [ %341, %351 ], [ %328, %327 ]
  %341 = phi i32* [ %354, %351 ], [ %334, %327 ]
  %342 = phi i32** [ %352, %351 ], [ %332, %327 ]
  store i32 %339, i32* %340, align 4
  %343 = icmp eq i32* %341, %1
  br i1 %343, label %357, label %344

344:                                              ; preds = %338
  %345 = load i32*, i32** %342, align 8
  %346 = icmp eq i32* %341, %345
  br i1 %346, label %347, label %351

347:                                              ; preds = %344
  %348 = getelementptr inbounds i32*, i32** %342, i64 -1
  %349 = load i32*, i32** %348, align 8
  %350 = getelementptr inbounds i32, i32* %349, i64 1024
  br label %351

351:                                              ; preds = %344, %347
  %352 = phi i32** [ %348, %347 ], [ %342, %344 ]
  %353 = phi i32* [ %350, %347 ], [ %341, %344 ]
  %354 = getelementptr inbounds i32, i32* %353, i64 -1
  %355 = load i32, i32* %354, align 4
  %356 = icmp slt i32 %335, %355
  br i1 %356, label %338, label %357

357:                                              ; preds = %338, %351
  %358 = phi i32* [ %1, %338 ], [ %341, %351 ]
  store i32 %335, i32* %358, align 4
  %359 = add i32 %329, 1
  %360 = icmp eq i32 %359, 8
  br i1 %360, label %361, label %372

361:                                              ; preds = %357
  %362 = getelementptr inbounds i32, i32* %328, i64 1
  %363 = ptrtoint i32* %362 to i64
  %364 = bitcast i32** %330 to i64*
  %365 = load i64, i64* %364, align 8
  %366 = sub i64 %363, %365
  %367 = icmp eq i64 %366, 4096
  br i1 %367, label %368, label %390

368:                                              ; preds = %361
  %369 = getelementptr inbounds i32*, i32** %330, i64 1
  %370 = bitcast i32** %369 to i64*
  %371 = load i64, i64* %370, align 8
  br label %390

372:                                              ; preds = %357, %327
  %373 = phi i32 [ %329, %327 ], [ %359, %357 ]
  %374 = inttoptr i64 %331 to i32*
  %375 = getelementptr inbounds i32, i32* %374, i64 1
  %376 = ptrtoint i32* %375 to i64
  %377 = bitcast i32** %330 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = sub i64 %376, %378
  %380 = icmp eq i64 %379, 4096
  br i1 %380, label %381, label %385

381:                                              ; preds = %372
  %382 = getelementptr inbounds i32*, i32** %330, i64 1
  %383 = bitcast i32** %382 to i64*
  %384 = load i64, i64* %383, align 8
  br label %385

385:                                              ; preds = %372, %381
  %386 = phi i64 [ %384, %381 ], [ %376, %372 ]
  %387 = phi i32** [ %382, %381 ], [ %330, %372 ]
  %388 = inttoptr i64 %386 to i32*
  %389 = icmp eq i32* %388, %3
  br i1 %389, label %394, label %327

390:                                              ; preds = %361, %368
  %391 = phi i64 [ %371, %368 ], [ %363, %361 ]
  %392 = inttoptr i64 %391 to i32*
  %393 = icmp eq i32* %392, %3
  br label %394

394:                                              ; preds = %385, %321, %5, %390, %160, %156, %152, %148, %83, %80, %79, %77, %73, %72, %33, %39, %9, %9, %232
  %395 = phi i1 [ true, %232 ], [ true, %9 ], [ true, %9 ], [ true, %39 ], [ true, %33 ], [ true, %72 ], [ true, %73 ], [ true, %77 ], [ true, %79 ], [ true, %80 ], [ true, %83 ], [ true, %148 ], [ true, %152 ], [ true, %156 ], [ true, %160 ], [ %393, %390 ], [ true, %5 ], [ true, %321 ], [ true, %385 ]
  ret i1 %395
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !4}
!8 = distinct !{!8, !4}
