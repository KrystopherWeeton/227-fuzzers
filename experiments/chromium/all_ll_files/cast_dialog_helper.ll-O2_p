; ModuleID = '../../chrome/browser/ui/views/media_router/cast_dialog_helper.cc'
source_filename = "../../chrome/browser/ui/views/media_router/cast_dialog_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.38", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.45", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.64", %"class.absl::optional.70", i8, [7 x i8], %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.81", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.92", i8, i8, [3 x i8], %"class.std::__1::vector.97", %"class.std::__1::unique_ptr.104", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.110", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.base::ObserverList.129", i32, [4 x i8] }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.0", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.4" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.7", %"class.std::__1::vector.14", %"class.ui::EventHandler"* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.9" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.29" }
%"class.std::__1::map.29" = type { %"class.std::__1::__tree.30" }
%"class.std::__1::__tree.30" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.views::View"** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::vector.38"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.54", %"struct.std::__1::atomic.54", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.52, %class.SkTDArray.53, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.52 = type { i8*, i32, i32 }
%class.SkTDArray.53 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.59 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.54" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.59 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.60", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl.62" }
%"struct.std::__1::__cxx_atomic_impl.62" = type { %"struct.std::__1::__cxx_atomic_base_impl.63" }
%"struct.std::__1::__cxx_atomic_base_impl.63" = type { i8 }
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i8 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.70" = type { %"class.absl::optional_internal::optional_data.71" }
%"class.absl::optional_internal::optional_data.71" = type { %"class.absl::optional_internal::optional_data_base.72" }
%"class.absl::optional_internal::optional_data_base.72" = type { %"class.absl::optional_internal::optional_data_dtor_base.73" }
%"class.absl::optional_internal::optional_data_dtor_base.73" = type { i8, %union.anon.74 }
%union.anon.74 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.views::Border"* }
%"class.views::Border" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.ui::PaintCache" = type <{ %class.sk_sp.87, float, [4 x i8] }>
%class.sk_sp.87 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.88", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { i8* }
%"class.ui::NativeTheme" = type opaque
%"class.absl::optional.92" = type { %"class.absl::optional_internal::optional_data.93" }
%"class.absl::optional_internal::optional_data.93" = type { %"class.absl::optional_internal::optional_data_base.94" }
%"class.absl::optional_internal::optional_data_base.94" = type { %"class.absl::optional_internal::optional_data_dtor_base.95" }
%"class.absl::optional_internal::optional_data_dtor_base.95" = type { i8, %union.anon.96 }
%union.anon.96 = type { i8 }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.std::__1::vector.113"* }
%"class.std::__1::vector.113" = type opaque
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.views::ViewTargeterDelegate" = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.129" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.130", i64, i32, [4 x i8] }>
%"class.base::LinkedList.130" = type { %"class.base::LinkNode.131" }
%"class.base::LinkNode.131" = type { %"class.base::internal::LinkNodeBase" }
%"class.views::Throbber" = type <{ %"class.views::View.base", [4 x i8], %"class.base::TimeTicks", %"class.base::RepeatingTimer", i8, [7 x i8] }>
%"class.views::View.base" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.38", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.45", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.64", %"class.absl::optional.70", i8, [7 x i8], %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.81", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.92", i8, i8, [3 x i8], %"class.std::__1::vector.97", %"class.std::__1::unique_ptr.104", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.110", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.base::ObserverList.129", i32 }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.136 }
%class.scoped_refptr.136 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.137", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.137" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.54" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.138 }
%class.scoped_refptr.138 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.139", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.139" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.views::FillLayout" = type <{ %"class.views::LayoutManagerBase", i8, i8, [6 x i8] }>
%"class.views::LayoutManagerBase" = type { %"class.views::LayoutManager", %"class.views::View"*, %"class.std::__1::map.140", %"class.std::__1::vector.151", %"class.views::LayoutManagerBase"*, i8, %"class.views::SizeBounds", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"struct.views::ProposedLayout" }
%"class.std::__1::map.140" = type { %"class.std::__1::__tree.141" }
%"class.std::__1::__tree.141" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.151" = type { %"class.std::__1::__vector_base.152" }
%"class.std::__1::__vector_base.152" = type { %"class.std::__1::unique_ptr.153"*, %"class.std::__1::unique_ptr.153"*, %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.views::LayoutManagerBase"* }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.std::__1::unique_ptr.153"* }
%"class.views::SizeBounds" = type { %"class.views::SizeBound", %"class.views::SizeBound" }
%"class.views::SizeBound" = type { %"class.absl::optional.164" }
%"class.absl::optional.164" = type { %"class.absl::optional_internal::optional_data.165" }
%"class.absl::optional_internal::optional_data.165" = type { %"class.absl::optional_internal::optional_data_base.166" }
%"class.absl::optional_internal::optional_data_base.166" = type { %"class.absl::optional_internal::optional_data_dtor_base.167" }
%"class.absl::optional_internal::optional_data_dtor_base.167" = type { i8, %union.anon.168 }
%union.anon.168 = type { i32 }
%"struct.views::ProposedLayout" = type { %"class.gfx::Size", %"class.std::__1::vector.169" }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"struct.views::ChildLayout"*, %"struct.views::ChildLayout"*, %"class.std::__1::__compressed_pair.171" }
%"struct.views::ChildLayout" = type <{ %"class.views::View"*, i8, [3 x i8], %"class.gfx::Rect", %"class.views::SizeBounds", [4 x i8] }>
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.views::ChildLayout"* }

$_ZN3gfx6InsetspLERKS0_ = comdat any

@_ZN12media_routerL18kPrimaryIconBorderE = internal constant %"class.gfx::Insets" { i32 6, i32 6, i32 6, i32 6 }, align 4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::View"* @_ZN12media_router14CreateThrobberEv() local_unnamed_addr #0 {
  %1 = alloca <2 x i64>, align 16
  %2 = bitcast <2 x i64>* %1 to { i64, i64 }*
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.gfx::Insets"*
  %5 = tail call i8* @_Znwm(i64 808) #5
  %6 = bitcast i8* %5 to %"class.views::Throbber"*
  tail call void @_ZN5views8ThrobberC1Ev(%"class.views::Throbber"* nonnull %6) #6
  %7 = bitcast i8* %5 to void (%"class.views::Throbber"*)***
  %8 = load void (%"class.views::Throbber"*)**, void (%"class.views::Throbber"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.views::Throbber"*)*, void (%"class.views::Throbber"*)** %8, i64 115
  %10 = load void (%"class.views::Throbber"*)*, void (%"class.views::Throbber"*)** %9, align 8
  tail call void %10(%"class.views::Throbber"* nonnull %6) #6
  %11 = tail call i8* @_Znwm(i64 664) #5
  %12 = bitcast i8* %11 to %"class.views::View"*
  tail call void @_ZN5views4ViewC1Ev(%"class.views::View"* nonnull %12) #6
  %13 = tail call i8* @_Znwm(i64 192) #5
  %14 = bitcast i8* %13 to %"class.views::FillLayout"*
  tail call void @_ZN5views10FillLayoutC1Ev(%"class.views::FillLayout"* nonnull %14) #6
  %15 = bitcast i8* %13 to %"class.views::LayoutManager"*
  tail call void @_ZN5views4View20SetLayoutManagerImplENSt3__110unique_ptrINS_13LayoutManagerENS1_14default_deleteIS3_EEEE(%"class.views::View"* nonnull %12, %"class.views::LayoutManager"* nonnull %15) #6
  %16 = bitcast i8* %5 to i64 (%"class.views::Throbber"*)***
  %17 = load i64 (%"class.views::Throbber"*)**, i64 (%"class.views::Throbber"*)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.views::Throbber"*)*, i64 (%"class.views::Throbber"*)** %17, i64 86
  %19 = load i64 (%"class.views::Throbber"*)*, i64 (%"class.views::Throbber"*)** %18, align 8
  %20 = tail call i64 %19(%"class.views::Throbber"* nonnull %6) #6
  %21 = lshr i64 %20, 32
  %22 = trunc i64 %21 to i32
  %23 = sub nsw i32 20, %22
  %24 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #6
  %25 = sdiv i32 %23, 2
  %26 = icmp slt i32 %22, 19
  %27 = sub nuw nsw i32 2147483647, %25
  %28 = icmp ult i32 %27, %25
  %29 = and i1 %26, %28
  br i1 %29, label %36, label %30

30:                                               ; preds = %0
  %31 = icmp sgt i32 %22, 21
  %32 = sub nsw i32 -2147483648, %25
  %33 = icmp sgt i32 %32, %25
  %34 = and i1 %31, %33
  %35 = select i1 %34, i32 %32, i32 %25
  br label %36

36:                                               ; preds = %0, %30
  %37 = phi i32 [ %35, %30 ], [ %27, %0 ]
  %38 = zext i32 %25 to i64
  %39 = shl nuw i64 %38, 32
  %40 = or i64 %39, %38
  %41 = zext i32 %37 to i64
  %42 = shl nuw i64 %41, 32
  %43 = or i64 %42, %41
  %44 = bitcast <2 x i64>* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44)
  %45 = bitcast <2 x i64>* %1 to %"class.gfx::Insets"*
  %46 = getelementptr inbounds <2 x i64>, <2 x i64>* %1, i64 0, i64 0
  store i64 %40, i64* %46, align 16
  %47 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  store i64 %43, i64* %47, align 8
  call void @_ZN3gfx6InsetspLERKS0_(%"class.gfx::Insets"* nonnull %45, %"class.gfx::Insets"* nonnull dereferenceable(16) @_ZN12media_routerL18kPrimaryIconBorderE) #6
  %48 = load <2 x i64>, <2 x i64>* %1, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44)
  store <2 x i64> %48, <2 x i64>* %3, align 16
  %49 = call %"class.views::Border"* @_ZN5views17CreateEmptyBorderERKN3gfx6InsetsE(%"class.gfx::Insets"* nonnull dereferenceable(16) %4) #6
  %50 = bitcast i8* %11 to void (%"class.views::View"*, %"class.views::Border"*)***
  %51 = load void (%"class.views::View"*, %"class.views::Border"*)**, void (%"class.views::View"*, %"class.views::Border"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.views::View"*, %"class.views::Border"*)*, void (%"class.views::View"*, %"class.views::Border"*)** %51, i64 31
  %53 = load void (%"class.views::View"*, %"class.views::Border"*)*, void (%"class.views::View"*, %"class.views::Border"*)** %52, align 8
  call void %53(%"class.views::View"* nonnull %12, %"class.views::Border"* %49) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #6
  %54 = bitcast i8* %5 to %"class.views::View"*
  %55 = getelementptr inbounds i8, i8* %11, i64 296
  %56 = getelementptr inbounds i8, i8* %11, i64 304
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast i8* %55 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %58, %60
  %62 = lshr exact i64 %61, 3
  %63 = trunc i64 %62 to i32
  call void @_ZN5views4View18AddChildViewAtImplEPS0_i(%"class.views::View"* nonnull %12, %"class.views::View"* nonnull %54, i32 %63) #6
  ret %"class.views::View"* %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN5views8ThrobberC1Ev(%"class.views::Throbber"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.views::Border"* @_ZN5views17CreateEmptyBorderERKN3gfx6InsetsE(%"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx6InsetspLERKS0_(%"class.gfx::Insets"*, %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  %8 = select i1 %7, i32 -2147483648, i32 2147483647
  %9 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 %6) #6
  %10 = extractvalue { i32, i1 } %9, 1
  %11 = extractvalue { i32, i1 } %9, 0
  %12 = select i1 %10, i32 %8, i32 %11, !prof !2
  store i32 %12, i32* %3, align 4
  %13 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %16) #6
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !2
  store i32 %22, i32* %13, align 4
  %23 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 %26) #6
  %30 = extractvalue { i32, i1 } %29, 1
  %31 = extractvalue { i32, i1 } %29, 0
  %32 = select i1 %30, i32 %28, i32 %31, !prof !2
  %33 = icmp sgt i32 %12, 0
  %34 = icmp sgt i32 %32, 0
  %35 = and i1 %33, %34
  %36 = sub nuw nsw i32 2147483647, %12
  %37 = icmp ult i32 %36, %32
  %38 = and i1 %37, %35
  br i1 %38, label %46, label %39

39:                                               ; preds = %2
  %40 = and i32 %32, %12
  %41 = icmp slt i32 %40, 0
  %42 = sub nsw i32 -2147483648, %12
  %43 = icmp sgt i32 %42, %32
  %44 = and i1 %43, %41
  %45 = select i1 %44, i32 %42, i32 %32
  br label %46

46:                                               ; preds = %2, %39
  %47 = phi i32 [ %45, %39 ], [ %36, %2 ]
  store i32 %47, i32* %23, align 4
  %48 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %51, 0
  %53 = select i1 %52, i32 -2147483648, i32 2147483647
  %54 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 %51) #6
  %55 = extractvalue { i32, i1 } %54, 1
  %56 = extractvalue { i32, i1 } %54, 0
  %57 = select i1 %55, i32 %53, i32 %56, !prof !2
  %58 = icmp sgt i32 %22, 0
  %59 = icmp sgt i32 %57, 0
  %60 = and i1 %58, %59
  %61 = sub nuw nsw i32 2147483647, %22
  %62 = icmp ult i32 %61, %57
  %63 = and i1 %62, %60
  br i1 %63, label %71, label %64

64:                                               ; preds = %46
  %65 = and i32 %57, %22
  %66 = icmp slt i32 %65, 0
  %67 = sub nsw i32 -2147483648, %22
  %68 = icmp sgt i32 %67, %57
  %69 = and i1 %68, %66
  %70 = select i1 %69, i32 %67, i32 %57
  br label %71

71:                                               ; preds = %46, %64
  %72 = phi i32 [ %70, %64 ], [ %61, %46 ]
  store i32 %72, i32* %48, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #4

declare void @_ZN5views4ViewC1Ev(%"class.views::View"*) unnamed_addr #3

declare void @_ZN5views10FillLayoutC1Ev(%"class.views::FillLayout"*) unnamed_addr #3

declare void @_ZN5views4View20SetLayoutManagerImplENSt3__110unique_ptrINS_13LayoutManagerENS1_14default_deleteIS3_EEEE(%"class.views::View"*, %"class.views::LayoutManager"*) local_unnamed_addr #3

declare void @_ZN5views4View18AddChildViewAtImplEPS0_i(%"class.views::View"*, %"class.views::View"*, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
