; ModuleID = '../../headless/lib/headless_content_client.cc'
source_filename = "../../headless/lib/headless_content_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.headless::HeadlessContentClient" = type { %"class.content::ContentClient", %"class.base::Lock", %"class.std::__1::unique_ptr" }
%"class.content::ContentClient" = type { i32 (...)**, %"class.content::ContentBrowserClient"*, %"class.content::ContentGpuClient"*, %"class.content::ContentRendererClient"*, %"class.content::ContentUtilityClient"* }
%"class.content::ContentBrowserClient" = type opaque
%"class.content::ContentGpuClient" = type opaque
%"class.content::ContentRendererClient" = type opaque
%"class.content::ContentUtilityClient" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.embedder_support::OriginTrialPolicyImpl"* }
%"class.embedder_support::OriginTrialPolicyImpl" = type { %"class.blink::OriginTrialPolicy", %"class.std::__1::vector", %"class.std::__1::set", %"class.std::__1::set" }
%"class.blink::OriginTrialPolicy" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.std::__1::basic_string.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.20 }
%union.anon.20 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.ui::ResourceBundle" = type { %"class.ui::ResourceBundle::Delegate"*, %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.32", %"class.std::__1::vector.38", i32, %"class.std::__1::map", %"class.gfx::Image", %"class.std::__1::map.54", %"class.base::FilePath", %"class.std::__1::unordered_map", i8, i8, %"class.std::__1::basic_string" }
%"class.ui::ResourceBundle::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.base::Lock"* }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.ui::ResourceHandle"* }
%"class.ui::ResourceHandle" = type opaque
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.32"*, %"class.std::__1::unique_ptr.32"*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::unique_ptr.32"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.45" }
%"class.std::__1::__tree.45" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.gfx::Image" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::map.54" = type { %"class.std::__1::__tree.55" }
%"class.std::__1::__tree.55" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.80", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { float }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.83" }
%"struct.std::__1::__atomic_base.83" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.84" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %class.GURL* }
%"struct.gpu::GPUInfo" = type opaque
%"class.std::__1::vector.90" = type opaque
%"class.std::__1::vector.91" = type opaque
%"class.std::__1::vector.92" = type opaque
%"struct.content::ContentClient::Schemes" = type { %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }

$_ZN7content13ContentClient12SetActiveURLERK4GURLNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE = comdat any

$_ZN7content13ContentClient10SetGpuInfoERKN3gpu7GPUInfoE = comdat any

$_ZN7content13ContentClient16AddPepperPluginsEPNSt3__16vectorINS_16PepperPluginInfoENS1_9allocatorIS3_EEEE = comdat any

$_ZN7content13ContentClient27AddContentDecryptionModulesEPNSt3__16vectorINS_7CdmInfoENS1_9allocatorIS3_EEEEPNS2_IN5media15CdmHostFilePathENS4_IS9_EEEE = comdat any

$_ZN7content13ContentClient20AddAdditionalSchemesEPNS0_7SchemesE = comdat any

@_ZTVN8headless21HeadlessContentClientE = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.headless::HeadlessContentClient"*)* @_ZN8headless21HeadlessContentClientD2Ev to i8*), i8* bitcast (void (%"class.headless::HeadlessContentClient"*)* @_ZN8headless21HeadlessContentClientD0Ev to i8*), i8* bitcast (void (%"class.content::ContentClient"*, %class.GURL*, %"class.std::__1::basic_string"*)* @_ZN7content13ContentClient12SetActiveURLERK4GURLNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.content::ContentClient"*, %"struct.gpu::GPUInfo"*)* @_ZN7content13ContentClient10SetGpuInfoERKN3gpu7GPUInfoE to i8*), i8* bitcast (void (%"class.content::ContentClient"*, %"class.std::__1::vector.90"*)* @_ZN7content13ContentClient16AddPepperPluginsEPNSt3__16vectorINS_16PepperPluginInfoENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.content::ContentClient"*, %"class.std::__1::vector.91"*, %"class.std::__1::vector.92"*)* @_ZN7content13ContentClient27AddContentDecryptionModulesEPNSt3__16vectorINS_7CdmInfoENS1_9allocatorIS3_EEEEPNS2_IN5media15CdmHostFilePathENS4_IS9_EEEE to i8*), i8* bitcast (void (%"class.content::ContentClient"*, %"struct.content::ContentClient::Schemes"*)* @_ZN7content13ContentClient20AddAdditionalSchemesEPNS0_7SchemesE to i8*), i8* bitcast (void (%"class.std::__1::basic_string.17"*, %"class.headless::HeadlessContentClient"*, i32)* @_ZN8headless21HeadlessContentClient18GetLocalizedStringEi to i8*), i8* bitcast (void (%"class.std::__1::basic_string.17"*, %"class.content::ContentClient"*, i32, %"class.std::__1::basic_string.17"*)* @_ZN7content13ContentClient18GetLocalizedStringEiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE to i8*), i8* bitcast ({ i8*, i64 } (%"class.headless::HeadlessContentClient"*, i32, i32)* @_ZN8headless21HeadlessContentClient15GetDataResourceEiN2ui11ScaleFactorE to i8*), i8* bitcast (%"class.base::RefCountedMemory"* (%"class.headless::HeadlessContentClient"*, i32)* @_ZN8headless21HeadlessContentClient20GetDataResourceBytesEi to i8*), i8* bitcast (%"class.gfx::Image"* (%"class.headless::HeadlessContentClient"*, i32)* @_ZN8headless21HeadlessContentClient19GetNativeImageNamedEi to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.content::ContentClient"*, i32)* @_ZN7content13ContentClient27GetProcessTypeNameInEnglishEi to i8*), i8* bitcast (%"class.blink::OriginTrialPolicy"* (%"class.headless::HeadlessContentClient"*)* @_ZN8headless21HeadlessContentClient20GetOriginTrialPolicyEv to i8*), i8* bitcast (void ()* @_ZN7content13ContentClient25ExposeInterfacesToBrowserE13scoped_refptrIN4base19SequencedTaskRunnerEEPN4mojo9BinderMapE to i8*)] }, align 8

@_ZN8headless21HeadlessContentClientC1Ev = hidden unnamed_addr alias void (%"class.headless::HeadlessContentClient"*), void (%"class.headless::HeadlessContentClient"*)* @_ZN8headless21HeadlessContentClientC2Ev
@_ZN8headless21HeadlessContentClientD1Ev = hidden unnamed_addr alias void (%"class.headless::HeadlessContentClient"*), void (%"class.headless::HeadlessContentClient"*)* @_ZN8headless21HeadlessContentClientD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless21HeadlessContentClientC2Ev(%"class.headless::HeadlessContentClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessContentClient", %"class.headless::HeadlessContentClient"* %0, i64 0, i32 0
  tail call void @_ZN7content13ContentClientC2Ev(%"class.content::ContentClient"* %2) #5
  %3 = getelementptr inbounds %"class.headless::HeadlessContentClient", %"class.headless::HeadlessContentClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN8headless21HeadlessContentClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.headless::HeadlessContentClient", %"class.headless::HeadlessContentClient"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %4) #5
  %5 = getelementptr inbounds %"class.headless::HeadlessContentClient", %"class.headless::HeadlessContentClient"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 0, i64* %6, align 8
  ret void
}

declare void @_ZN7content13ContentClientC2Ev(%"class.content::ContentClient"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless21HeadlessContentClientD2Ev(%"class.headless::HeadlessContentClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessContentClient", %"class.headless::HeadlessContentClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN8headless21HeadlessContentClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::HeadlessContentClient", %"class.headless::HeadlessContentClient"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.embedder_support::OriginTrialPolicyImpl"*, %"class.embedder_support::OriginTrialPolicyImpl"** %3, align 8
  store %"class.embedder_support::OriginTrialPolicyImpl"* null, %"class.embedder_support::OriginTrialPolicyImpl"** %3, align 8
  %5 = icmp eq %"class.embedder_support::OriginTrialPolicyImpl"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.embedder_support::OriginTrialPolicyImpl"* %4 to void (%"class.embedder_support::OriginTrialPolicyImpl"*)***
  %8 = load void (%"class.embedder_support::OriginTrialPolicyImpl"*)**, void (%"class.embedder_support::OriginTrialPolicyImpl"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.embedder_support::OriginTrialPolicyImpl"*)*, void (%"class.embedder_support::OriginTrialPolicyImpl"*)** %8, i64 1
  %10 = load void (%"class.embedder_support::OriginTrialPolicyImpl"*)*, void (%"class.embedder_support::OriginTrialPolicyImpl"*)** %9, align 8
  tail call void %10(%"class.embedder_support::OriginTrialPolicyImpl"* nonnull %4) #5
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.headless::HeadlessContentClient", %"class.headless::HeadlessContentClient"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %12) #5
  %13 = getelementptr inbounds %"class.headless::HeadlessContentClient", %"class.headless::HeadlessContentClient"* %0, i64 0, i32 0
  tail call void @_ZN7content13ContentClientD2Ev(%"class.content::ContentClient"* %13) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7content13ContentClientD2Ev(%"class.content::ContentClient"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless21HeadlessContentClientD0Ev(%"class.headless::HeadlessContentClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessContentClient", %"class.headless::HeadlessContentClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN8headless21HeadlessContentClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::HeadlessContentClient", %"class.headless::HeadlessContentClient"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.embedder_support::OriginTrialPolicyImpl"*, %"class.embedder_support::OriginTrialPolicyImpl"** %3, align 8
  store %"class.embedder_support::OriginTrialPolicyImpl"* null, %"class.embedder_support::OriginTrialPolicyImpl"** %3, align 8
  %5 = icmp eq %"class.embedder_support::OriginTrialPolicyImpl"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.embedder_support::OriginTrialPolicyImpl"* %4 to void (%"class.embedder_support::OriginTrialPolicyImpl"*)***
  %8 = load void (%"class.embedder_support::OriginTrialPolicyImpl"*)**, void (%"class.embedder_support::OriginTrialPolicyImpl"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.embedder_support::OriginTrialPolicyImpl"*)*, void (%"class.embedder_support::OriginTrialPolicyImpl"*)** %8, i64 1
  %10 = load void (%"class.embedder_support::OriginTrialPolicyImpl"*)*, void (%"class.embedder_support::OriginTrialPolicyImpl"*)** %9, align 8
  tail call void %10(%"class.embedder_support::OriginTrialPolicyImpl"* nonnull %4) #5
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.headless::HeadlessContentClient", %"class.headless::HeadlessContentClient"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %12) #5
  %13 = getelementptr inbounds %"class.headless::HeadlessContentClient", %"class.headless::HeadlessContentClient"* %0, i64 0, i32 0
  tail call void @_ZN7content13ContentClientD2Ev(%"class.content::ContentClient"* %13) #5
  %14 = bitcast %"class.headless::HeadlessContentClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless21HeadlessContentClient18GetLocalizedStringEi(%"class.std::__1::basic_string.17"* noalias sret, %"class.headless::HeadlessContentClient"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.17"* sret %0, i32 %2) #5
  ret void
}

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.17"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN8headless21HeadlessContentClient15GetDataResourceEiN2ui11ScaleFactorE(%"class.headless::HeadlessContentClient"* nocapture readnone, i32, i32) unnamed_addr #0 align 2 {
  %4 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #5
  %5 = tail call { i8*, i64 } @_ZNK2ui14ResourceBundle26GetRawDataResourceForScaleEiNS_11ScaleFactorE(%"class.ui::ResourceBundle"* %4, i32 %1, i32 %2) #5
  ret { i8*, i64 } %5
}

declare dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() local_unnamed_addr #1

declare { i8*, i64 } @_ZNK2ui14ResourceBundle26GetRawDataResourceForScaleEiNS_11ScaleFactorE(%"class.ui::ResourceBundle"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::RefCountedMemory"* @_ZN8headless21HeadlessContentClient20GetDataResourceBytesEi(%"class.headless::HeadlessContentClient"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #5
  %4 = tail call %"class.base::RefCountedMemory"* @_ZNK2ui14ResourceBundle21LoadDataResourceBytesEi(%"class.ui::ResourceBundle"* %3, i32 %1) #5
  ret %"class.base::RefCountedMemory"* %4
}

declare %"class.base::RefCountedMemory"* @_ZNK2ui14ResourceBundle21LoadDataResourceBytesEi(%"class.ui::ResourceBundle"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.gfx::Image"* @_ZN8headless21HeadlessContentClient19GetNativeImageNamedEi(%"class.headless::HeadlessContentClient"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #5
  %4 = tail call dereferenceable(8) %"class.gfx::Image"* @_ZN2ui14ResourceBundle19GetNativeImageNamedEi(%"class.ui::ResourceBundle"* %3, i32 %1) #5
  ret %"class.gfx::Image"* %4
}

declare dereferenceable(8) %"class.gfx::Image"* @_ZN2ui14ResourceBundle19GetNativeImageNamedEi(%"class.ui::ResourceBundle"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::OriginTrialPolicy"* @_ZN8headless21HeadlessContentClient20GetOriginTrialPolicyEv(%"class.headless::HeadlessContentClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessContentClient", %"class.headless::HeadlessContentClient"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #5
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.headless::HeadlessContentClient", %"class.headless::HeadlessContentClient"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.embedder_support::OriginTrialPolicyImpl"*, %"class.embedder_support::OriginTrialPolicyImpl"** %10, align 8
  %12 = icmp eq %"class.embedder_support::OriginTrialPolicyImpl"* %11, null
  br i1 %12, label %13, label %27

13:                                               ; preds = %8
  %14 = tail call i8* @_Znwm(i64 80) #6
  %15 = bitcast i8* %14 to %"class.embedder_support::OriginTrialPolicyImpl"*
  tail call void @_ZN16embedder_support21OriginTrialPolicyImplC1Ev(%"class.embedder_support::OriginTrialPolicyImpl"* nonnull %15) #5
  %16 = ptrtoint i8* %14 to i64
  %17 = load %"class.embedder_support::OriginTrialPolicyImpl"*, %"class.embedder_support::OriginTrialPolicyImpl"** %10, align 8
  %18 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 %16, i64* %18, align 8
  %19 = icmp eq %"class.embedder_support::OriginTrialPolicyImpl"* %17, null
  %20 = bitcast i8* %14 to %"class.embedder_support::OriginTrialPolicyImpl"*
  br i1 %19, label %27, label %21

21:                                               ; preds = %13
  %22 = bitcast %"class.embedder_support::OriginTrialPolicyImpl"* %17 to void (%"class.embedder_support::OriginTrialPolicyImpl"*)***
  %23 = load void (%"class.embedder_support::OriginTrialPolicyImpl"*)**, void (%"class.embedder_support::OriginTrialPolicyImpl"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.embedder_support::OriginTrialPolicyImpl"*)*, void (%"class.embedder_support::OriginTrialPolicyImpl"*)** %23, i64 1
  %25 = load void (%"class.embedder_support::OriginTrialPolicyImpl"*)*, void (%"class.embedder_support::OriginTrialPolicyImpl"*)** %24, align 8
  tail call void %25(%"class.embedder_support::OriginTrialPolicyImpl"* nonnull %17) #5
  %26 = load %"class.embedder_support::OriginTrialPolicyImpl"*, %"class.embedder_support::OriginTrialPolicyImpl"** %10, align 8
  br label %27

27:                                               ; preds = %8, %13, %21
  %28 = phi %"class.embedder_support::OriginTrialPolicyImpl"* [ %11, %8 ], [ %20, %13 ], [ %26, %21 ]
  %29 = getelementptr inbounds %"class.embedder_support::OriginTrialPolicyImpl", %"class.embedder_support::OriginTrialPolicyImpl"* %28, i64 0, i32 0
  %30 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #5
  ret %"class.blink::OriginTrialPolicy"* %29
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content13ContentClient12SetActiveURLERK4GURLNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.content::ContentClient"*, %class.GURL* dereferenceable(120), %"class.std::__1::basic_string"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content13ContentClient10SetGpuInfoERKN3gpu7GPUInfoE(%"class.content::ContentClient"*, %"struct.gpu::GPUInfo"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content13ContentClient16AddPepperPluginsEPNSt3__16vectorINS_16PepperPluginInfoENS1_9allocatorIS3_EEEE(%"class.content::ContentClient"*, %"class.std::__1::vector.90"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content13ContentClient27AddContentDecryptionModulesEPNSt3__16vectorINS_7CdmInfoENS1_9allocatorIS3_EEEEPNS2_IN5media15CdmHostFilePathENS4_IS9_EEEE(%"class.content::ContentClient"*, %"class.std::__1::vector.91"*, %"class.std::__1::vector.92"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content13ContentClient20AddAdditionalSchemesEPNS0_7SchemesE(%"class.content::ContentClient"*, %"struct.content::ContentClient::Schemes"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN7content13ContentClient18GetLocalizedStringEiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.17"* sret, %"class.content::ContentClient"*, i32, %"class.std::__1::basic_string.17"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN7content13ContentClient27GetProcessTypeNameInEnglishEi(%"class.std::__1::basic_string"* sret, %"class.content::ContentClient"*, i32) unnamed_addr #1

declare void @_ZN7content13ContentClient25ExposeInterfacesToBrowserE13scoped_refptrIN4base19SequencedTaskRunnerEEPN4mojo9BinderMapE() unnamed_addr

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN16embedder_support21OriginTrialPolicyImplC1Ev(%"class.embedder_support::OriginTrialPolicyImpl"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
