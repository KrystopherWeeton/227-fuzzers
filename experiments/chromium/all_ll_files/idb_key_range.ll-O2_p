; ModuleID = '../../third_party/blink/renderer/modules/indexeddb/idb_key_range.cc'
source_filename = "../../third_party/blink/renderer/modules/indexeddb/idb_key_range.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.96", i32, [4 x i8], %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.232", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.248", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.266", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.273", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.212", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.132" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.132" = type { %"struct.std::__1::__atomic_base.133" }
%"struct.std::__1::__atomic_base.133" = type { %"struct.std::__1::__atomic_base.134" }
%"struct.std::__1::__atomic_base.134" = type { %"struct.std::__1::__cxx_atomic_impl.135" }
%"struct.std::__1::__cxx_atomic_impl.135" = type { %"struct.std::__1::__cxx_atomic_base_impl.136" }
%"struct.std::__1::__cxx_atomic_base_impl.136" = type { i64 }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::Worklist.143"* }
%"class.blink::Worklist.143" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.132" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::Worklist.150"* }
%"class.blink::Worklist.150" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.132" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::Worklist.157"* }
%"class.blink::Worklist.157" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.132" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::Worklist.164"* }
%"class.blink::Worklist.164" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.132" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::Worklist.171"* }
%"class.blink::Worklist.171" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.132" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::Worklist.178"* }
%"class.blink::Worklist.178" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.132" }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::Worklist.185"* }
%"class.blink::Worklist.185" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.132" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.192", %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.204", %"class.std::__1::__compressed_pair.206", [4 x i8] }>
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194", %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { i64 }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { float }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.215", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.224" }
%"class.WTF::Vector.224" = type { %"class.WTF::VectorBuffer.225" }
%"class.WTF::VectorBuffer.225" = type { %"class.WTF::VectorBufferBase.226" }
%"class.WTF::VectorBufferBase.226" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.240" }
%"class.WTF::VectorBuffer.240" = type { %"class.WTF::VectorBufferBase.241" }
%"class.WTF::VectorBufferBase.241" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.254" }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.143"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.150"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.157"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.164"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.171"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.277" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.272 }
%class.scoped_refptr.272 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.273" = type { %"struct.std::__1::__atomic_base.274" }
%"struct.std::__1::__atomic_base.274" = type { %"struct.std::__1::__cxx_atomic_impl.275" }
%"struct.std::__1::__cxx_atomic_impl.275" = type { %"struct.std::__1::__cxx_atomic_base_impl.276" }
%"struct.std::__1::__cxx_atomic_base_impl.276" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.83", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.83" = type { %"class.base::RefCounted.84" }
%"class.base::RefCounted.84" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.87" }
%"class.blink::HeapHashMap.87" = type { %"class.WTF::HashMap.90" }
%"class.WTF::HashMap.90" = type { %"class.WTF::HashTable.91" }
%"class.WTF::HashTable.91" = type <{ %"struct.WTF::KeyValuePair.93"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.93" = type { %"class.blink::WeakMember.94", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::IDBKeyRange" = type { %"class.blink::ScriptWrappable", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.blink::IDBKey"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::IDBKey"* }
%"class.blink::IDBKey" = type { i32, %"class.WTF::Vector", %class.scoped_refptr, %"class.WTF::String", double, i64 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%class.scoped_refptr = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector.0", %"class.WTF::Vector.5" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.0" = type { %"class.WTF::VectorBuffer.1" }
%"class.WTF::VectorBuffer.1" = type { %"class.WTF::VectorBufferBase.2" }
%"class.WTF::VectorBufferBase.2" = type { i8*, i32, i32 }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { %"class.std::__1::unique_ptr.8"*, i32, i32 }
%"class.std::__1::unique_ptr.8" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.49", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.58", %"class.blink::Member.60", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.69", %"class.blink::Member.75", %"class.blink::Member.77", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.21" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.19" }
%"class.WTF::HashTable.19" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.21" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.22" }
%"class.blink::HeapHashMap.22" = type { %"class.WTF::HashMap.25" }
%"class.WTF::HashMap.25" = type { %"class.WTF::HashTable.26" }
%"class.WTF::HashTable.26" = type <{ %"struct.WTF::KeyValuePair.28"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.28" = type { i8*, %"class.blink::Member.289" }
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.291" }
%"class.blink::Member.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.29, %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.45", i32, i32 }
%class.scoped_refptr.29 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.30", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.32 }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.32 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.45" = type { %"class.WTF::HashTable.46" }
%"class.WTF::HashTable.46" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.53" }
%"class.WTF::Vector.53" = type { %"class.WTF::VectorBuffer.54" }
%"class.WTF::VectorBuffer.54" = type { %"class.WTF::VectorBufferBase.55" }
%"class.WTF::VectorBufferBase.55" = type { %"class.blink::Member.56"*, i32, i32 }
%"class.blink::Member.56" = type opaque
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.60" = type { %"class.blink::MemberBase.61" }
%"class.blink::MemberBase.61" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.62", i32, i32 }
%"class.blink::HeapHashMap.62" = type { %"class.WTF::HashMap.65" }
%"class.WTF::HashMap.65" = type { %"class.WTF::HashTable.66" }
%"class.WTF::HashTable.66" = type <{ %"struct.WTF::KeyValuePair.68"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.68" = type opaque
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.79", %class.scoped_refptr.82 }
%"class.blink::TraceWrapperV8Reference.79" = type { %"class.v8::TracedReference.80" }
%"class.v8::TracedReference.80" = type { %"class.v8::BasicTracedReference.81" }
%"class.v8::BasicTracedReference.81" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.82 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.79" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.284, %"class.blink::Member.285", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.284 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.287" }
%"class.blink::Persistent.287" = type { %"class.blink::PersistentBase.288" }
%"class.blink::PersistentBase.288" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.v8::internal::Isolate" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.318 }
%union.anon.318 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink11IDBKeyRange6CreateENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEES6_NS0_14LowerBoundTypeENS0_14UpperBoundTypeE = comdat any

$_ZN5blink11IDBKeyRangeD2Ev = comdat any

$_ZN5blink11IDBKeyRangeD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink11IDBKeyRange5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink11IDBKeyRange18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZTVN5blink11IDBKeyRangeE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink11IDBDatabase24kNotValidKeyErrorMessageE = external constant [0 x i8], align 1
@_ZTVN5blink11IDBKeyRangeE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::IDBKeyRange"*)* @_ZN5blink11IDBKeyRangeD2Ev to i8*), i8* bitcast (void (%"class.blink::IDBKeyRange"*)* @_ZN5blink11IDBKeyRangeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::IDBKeyRange"*, %"class.blink::Visitor"*)* @_ZNK5blink11IDBKeyRange5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::IDBKeyRange"*)* @_ZNK5blink11IDBKeyRange18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [45 x i8] c"The lower key is greater than the upper key.\00", align 1
@.str.1 = private unnamed_addr constant [69 x i8] c"The lower key and upper key are equal and one of the bounds is open.\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.4 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink11IDBKeyRange18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8

@_ZN5blink11IDBKeyRangeC1ENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEEPS3_S6_NS0_14LowerBoundTypeENS0_14UpperBoundTypeE = hidden unnamed_addr alias void (%"class.blink::IDBKeyRange"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, i32, i32), void (%"class.blink::IDBKeyRange"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, i32, i32)* @_ZN5blink11IDBKeyRangeC2ENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEEPS3_S6_NS0_14LowerBoundTypeENS0_14UpperBoundTypeE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::IDBKeyRange"* @_ZN5blink11IDBKeyRange15FromScriptValueEPNS_16ExecutionContextERKNS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::ExecutionContext"* nocapture readonly, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %1) #5
  %5 = icmp eq %"class.v8::Value"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.v8::Value"* %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 3
  %10 = icmp eq i64 %9, 1
  br i1 %10, label %11, label %28

11:                                               ; preds = %6
  %12 = add i64 %8, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = and i64 %8, -4294967296
  %16 = zext i32 %14 to i64
  %17 = or i64 %15, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load i16, i16* %19, align 2
  %21 = icmp eq i16 %20, 67
  br i1 %21, label %22, label %28

22:                                               ; preds = %11
  %23 = add i64 %8, 23
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, -2
  %27 = icmp eq i32 %26, 10
  br i1 %27, label %96, label %28

28:                                               ; preds = %11, %6, %3, %22
  %29 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %1) #5
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %53, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 3
  %35 = icmp eq i64 %34, 1
  br i1 %35, label %36, label %53

36:                                               ; preds = %31
  %37 = add i64 %33, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = and i64 %33, -4294967296
  %41 = zext i32 %39 to i64
  %42 = or i64 %40, %41
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i16*
  %45 = load i16, i16* %44, align 2
  %46 = icmp eq i16 %45, 67
  br i1 %46, label %47, label %53

47:                                               ; preds = %36
  %48 = add i64 %33, 23
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, -2
  %52 = icmp eq i32 %51, 6
  br i1 %52, label %96, label %53

53:                                               ; preds = %36, %31, %28, %47
  %54 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 5
  %55 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %54, align 8
  %56 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %1) #5
  %57 = tail call %"class.blink::IDBKeyRange"* @_ZN5blink17NativeValueTraitsIPNS_11IDBKeyRangeEvE11NativeValueEPN2v87IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %55, %"class.v8::Value"* %56, %"class.blink::ExceptionState"* dereferenceable(72) %2) #5
  %58 = icmp eq %"class.blink::IDBKeyRange"* %57, null
  br i1 %58, label %59, label %96

59:                                               ; preds = %53
  %60 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %54, align 8
  %61 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %1) #5
  %62 = tail call %"class.blink::IDBKey"* @_ZN5blink17NativeValueTraitsINSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %60, %"class.v8::Value"* %61, %"class.blink::ExceptionState"* dereferenceable(72) %2) #5
  %63 = ptrtoint %"class.blink::IDBKey"* %62 to i64
  %64 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %92

67:                                               ; preds = %59
  %68 = icmp eq %"class.blink::IDBKey"* %62, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = tail call zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* nonnull %62) #5
  br i1 %70, label %72, label %71

71:                                               ; preds = %67, %69
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 30, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase24kNotValidKeyErrorMessageE, i64 0, i64 0)) #5
  br label %92

72:                                               ; preds = %69
  %73 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #5
  %74 = bitcast i8* %73 to %"class.blink::IDBKeyRange"*
  %75 = bitcast i8* %73 to i32 (...)***
  %76 = getelementptr inbounds i8, i8* %73, i64 8
  %77 = bitcast i8* %76 to i64**
  store i64* null, i64** %77, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink11IDBKeyRangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %78 = getelementptr inbounds i8, i8* %73, i64 16
  %79 = bitcast i8* %78 to i64*
  store i64 %63, i64* %79, align 8
  %80 = getelementptr inbounds i8, i8* %73, i64 24
  %81 = bitcast i8* %80 to i64*
  store i64 0, i64* %81, align 8
  %82 = getelementptr inbounds i8, i8* %73, i64 32
  %83 = bitcast i8* %82 to i64*
  store i64 %63, i64* %83, align 8
  %84 = getelementptr inbounds i8, i8* %73, i64 40
  %85 = bitcast i8* %84 to i32*
  store i32 1, i32* %85, align 8
  %86 = getelementptr inbounds i8, i8* %73, i64 44
  %87 = bitcast i8* %86 to i32*
  store i32 1, i32* %87, align 4
  %88 = getelementptr inbounds i8, i8* %73, i64 -4
  %89 = bitcast i8* %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = or i16 %90, 1
  store atomic i16 %91, i16* %89 release, align 2
  br label %96

92:                                               ; preds = %59, %71
  %93 = icmp eq %"class.blink::IDBKey"* %62, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %62) #5
  %95 = bitcast %"class.blink::IDBKey"* %62 to i8*
  tail call void @free(i8* %95) #5
  br label %96

96:                                               ; preds = %94, %92, %72, %53, %22, %47
  %97 = phi %"class.blink::IDBKeyRange"* [ null, %47 ], [ null, %22 ], [ %57, %53 ], [ %74, %72 ], [ null, %92 ], [ null, %94 ]
  ret %"class.blink::IDBKeyRange"* %97
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBKeyRangeC2ENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEEPS3_S6_NS0_14LowerBoundTypeENS0_14UpperBoundTypeE(%"class.blink::IDBKeyRange"* nocapture, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, i32, i32) unnamed_addr #0 align 2 {
  %7 = ptrtoint %"class.blink::IDBKey"* %1 to i64
  %8 = ptrtoint %"class.blink::IDBKey"* %3 to i64
  %9 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink11IDBKeyRangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  store i64 %7, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 2
  %14 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 %8, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 3
  store %"class.blink::IDBKey"* %2, %"class.blink::IDBKey"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 4
  store i32 %4, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 5
  store i32 %5, i32* %17, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11IDBKeyRange10LowerValueEPNS_11ScriptStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::IDBKeyRange"* nocapture readonly, %"class.blink::ScriptState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8, !noalias !2
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::ScriptState"* %2 to %"class.v8::internal::Isolate"**
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8, !noalias !2
  %12 = bitcast %"class.v8::Context"* %7 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %11, i64 %13) #5
  %15 = bitcast i64* %14 to %"class.v8::Context"*
  br label %16

16:                                               ; preds = %9, %3
  %17 = phi %"class.v8::Context"* [ %15, %9 ], [ null, %3 ]
  %18 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %17) #5, !noalias !2
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %20 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8, !noalias !2
  %21 = tail call %"class.v8::Value"* @_ZN5blink4ToV8EPKNS_6IDBKeyEN2v85LocalINS3_6ObjectEEEPNS3_7IsolateE(%"class.blink::IDBKey"* %5, %"class.v8::Object"* %18, %"class.v8::Isolate"* %20) #5, !noalias !2
  %22 = icmp eq %"class.v8::Value"* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #5, !alias.scope !2
  br label %29

25:                                               ; preds = %16
  %26 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8, !noalias !2
  %27 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %26, %"class.v8::Isolate"** %27, align 8, !alias.scope !2
  %28 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  tail call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %28, %"class.v8::Isolate"* %26, %"class.v8::Value"* nonnull %21) #5
  br label %29

29:                                               ; preds = %23, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11IDBKeyRange10UpperValueEPNS_11ScriptStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::IDBKeyRange"* nocapture readonly, %"class.blink::ScriptState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %1, i64 0, i32 3
  %5 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8, !noalias !5
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::ScriptState"* %2 to %"class.v8::internal::Isolate"**
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8, !noalias !5
  %12 = bitcast %"class.v8::Context"* %7 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %11, i64 %13) #5
  %15 = bitcast i64* %14 to %"class.v8::Context"*
  br label %16

16:                                               ; preds = %9, %3
  %17 = phi %"class.v8::Context"* [ %15, %9 ], [ null, %3 ]
  %18 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %17) #5, !noalias !5
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %20 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8, !noalias !5
  %21 = tail call %"class.v8::Value"* @_ZN5blink4ToV8EPKNS_6IDBKeyEN2v85LocalINS3_6ObjectEEEPNS3_7IsolateE(%"class.blink::IDBKey"* %5, %"class.v8::Object"* %18, %"class.v8::Isolate"* %20) #5, !noalias !5
  %22 = icmp eq %"class.v8::Value"* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #5, !alias.scope !5
  br label %29

25:                                               ; preds = %16
  %26 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8, !noalias !5
  %27 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %26, %"class.v8::Isolate"** %27, align 8, !alias.scope !5
  %28 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  tail call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %28, %"class.v8::Isolate"* %26, %"class.v8::Value"* nonnull %21) #5
  br label %29

29:                                               ; preds = %23, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::IDBKeyRange"* @_ZN5blink11IDBKeyRange4onlyENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEERNS_14ExceptionStateE(%"class.blink::IDBKey"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::IDBKey"* %0 to i64
  %4 = icmp eq %"class.blink::IDBKey"* %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 30, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase24kNotValidKeyErrorMessageE, i64 0, i64 0)) #5
  br label %30

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* nonnull %0) #5
  br i1 %7, label %8, label %28

8:                                                ; preds = %6
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #5
  %10 = bitcast i8* %9 to %"class.blink::IDBKeyRange"*
  %11 = bitcast i8* %9 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i64**
  store i64* null, i64** %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink11IDBKeyRangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 16
  %15 = bitcast i8* %14 to i64*
  store i64 %3, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %9, i64 24
  %17 = bitcast i8* %16 to i64*
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 32
  %19 = bitcast i8* %18 to i64*
  store i64 %3, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 40
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %9, i64 44
  %23 = bitcast i8* %22 to i32*
  store i32 1, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %9, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  br label %30

28:                                               ; preds = %6
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 30, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase24kNotValidKeyErrorMessageE, i64 0, i64 0)) #5
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %0) #5
  %29 = bitcast %"class.blink::IDBKey"* %0 to i8*
  tail call void @free(i8* %29) #5
  br label %30

30:                                               ; preds = %5, %8, %28
  %31 = phi %"class.blink::IDBKeyRange"* [ %10, %8 ], [ null, %28 ], [ null, %5 ]
  ret %"class.blink::IDBKeyRange"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::IDBKeyRange"* @_ZN5blink11IDBKeyRange4onlyEPNS_11ScriptStateERKNS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::ScriptState"* nocapture readonly, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %1) #5
  %7 = tail call %"class.blink::IDBKey"* @_ZN5blink17NativeValueTraitsINSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %5, %"class.v8::Value"* %6, %"class.blink::ExceptionState"* dereferenceable(72) %2) #5
  %8 = ptrtoint %"class.blink::IDBKey"* %7 to i64
  %9 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %37

12:                                               ; preds = %3
  %13 = icmp eq %"class.blink::IDBKey"* %7, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %12
  %15 = tail call zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* nonnull %7) #5
  br i1 %15, label %17, label %16

16:                                               ; preds = %12, %14
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 30, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase24kNotValidKeyErrorMessageE, i64 0, i64 0)) #5
  br label %37

17:                                               ; preds = %14
  %18 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #5
  %19 = bitcast i8* %18 to %"class.blink::IDBKeyRange"*
  %20 = bitcast i8* %18 to i32 (...)***
  %21 = getelementptr inbounds i8, i8* %18, i64 8
  %22 = bitcast i8* %21 to i64**
  store i64* null, i64** %22, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink11IDBKeyRangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %23 = getelementptr inbounds i8, i8* %18, i64 16
  %24 = bitcast i8* %23 to i64*
  store i64 %8, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 24
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %18, i64 32
  %28 = bitcast i8* %27 to i64*
  store i64 %8, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %18, i64 40
  %30 = bitcast i8* %29 to i32*
  store i32 1, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %18, i64 44
  %32 = bitcast i8* %31 to i32*
  store i32 1, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %18, i64 -4
  %34 = bitcast i8* %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = or i16 %35, 1
  store atomic i16 %36, i16* %34 release, align 2
  br label %41

37:                                               ; preds = %3, %16
  %38 = icmp eq %"class.blink::IDBKey"* %7, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %7) #5
  %40 = bitcast %"class.blink::IDBKey"* %7 to i8*
  tail call void @free(i8* %40) #5
  br label %41

41:                                               ; preds = %17, %37, %39
  %42 = phi %"class.blink::IDBKeyRange"* [ %19, %17 ], [ null, %37 ], [ null, %39 ]
  ret %"class.blink::IDBKeyRange"* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::IDBKeyRange"* @_ZN5blink11IDBKeyRange10lowerBoundEPNS_11ScriptStateERKNS_11ScriptValueEbRNS_14ExceptionStateE(%"class.blink::ScriptState"*, %"class.blink::ScriptValue"* dereferenceable(24), i1 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #5
  %6 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %5, i64 0, i32 5
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %1) #5
  %9 = tail call %"class.blink::IDBKey"* @_ZN5blink17NativeValueTraitsINSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %7, %"class.v8::Value"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3) #5
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %4
  %14 = icmp eq %"class.blink::IDBKey"* %9, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = tail call zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* nonnull %9) #5
  br i1 %16, label %18, label %17

17:                                               ; preds = %13, %15
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 30, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase24kNotValidKeyErrorMessageE, i64 0, i64 0)) #5
  br label %22

18:                                               ; preds = %15
  %19 = xor i1 %2, true
  %20 = zext i1 %19 to i32
  %21 = tail call %"class.blink::IDBKeyRange"* @_ZN5blink11IDBKeyRange6CreateENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEES6_NS0_14LowerBoundTypeENS0_14UpperBoundTypeE(%"class.blink::IDBKey"* nonnull %9, %"class.blink::IDBKey"* null, i32 %20, i32 0)
  br label %26

22:                                               ; preds = %4, %17
  %23 = icmp eq %"class.blink::IDBKey"* %9, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %9) #5
  %25 = bitcast %"class.blink::IDBKey"* %9 to i8*
  tail call void @free(i8* %25) #5
  br label %26

26:                                               ; preds = %18, %22, %24
  %27 = phi %"class.blink::IDBKeyRange"* [ %21, %18 ], [ null, %22 ], [ null, %24 ]
  ret %"class.blink::IDBKeyRange"* %27
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::IDBKeyRange"* @_ZN5blink11IDBKeyRange6CreateENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEES6_NS0_14LowerBoundTypeENS0_14UpperBoundTypeE(%"class.blink::IDBKey"*, %"class.blink::IDBKey"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::IDBKey"* %0 to i64
  %6 = ptrtoint %"class.blink::IDBKey"* %1 to i64
  %7 = icmp eq %"class.blink::IDBKey"* %0, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* nonnull %0) #5
  br i1 %9, label %14, label %10

10:                                               ; preds = %4, %8
  %11 = icmp eq %"class.blink::IDBKey"* %1, null
  br i1 %11, label %36, label %12

12:                                               ; preds = %10
  %13 = tail call zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* nonnull %1) #5
  br i1 %13, label %14, label %34

14:                                               ; preds = %12, %8
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #5
  %16 = bitcast i8* %15 to %"class.blink::IDBKeyRange"*
  %17 = bitcast i8* %15 to i32 (...)***
  %18 = getelementptr inbounds i8, i8* %15, i64 8
  %19 = bitcast i8* %18 to i64**
  store i64* null, i64** %19, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink11IDBKeyRangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %20 = getelementptr inbounds i8, i8* %15, i64 16
  %21 = bitcast i8* %20 to i64*
  store i64 %5, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 24
  %23 = bitcast i8* %22 to i64*
  store i64 %6, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %15, i64 32
  %25 = bitcast i8* %24 to i64*
  store i64 %6, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %15, i64 40
  %27 = bitcast i8* %26 to i32*
  store i32 %2, i32* %27, align 8
  %28 = getelementptr inbounds i8, i8* %15, i64 44
  %29 = bitcast i8* %28 to i32*
  store i32 %3, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %15, i64 -4
  %31 = bitcast i8* %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = or i16 %32, 1
  store atomic i16 %33, i16* %31 release, align 2
  br label %39

34:                                               ; preds = %12
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %1) #5
  %35 = bitcast %"class.blink::IDBKey"* %1 to i8*
  tail call void @free(i8* %35) #5
  br label %36

36:                                               ; preds = %10, %34
  br i1 %7, label %39, label %37

37:                                               ; preds = %36
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %0) #5
  %38 = bitcast %"class.blink::IDBKey"* %0 to i8*
  tail call void @free(i8* %38) #5
  br label %39

39:                                               ; preds = %14, %36, %37
  %40 = phi %"class.blink::IDBKeyRange"* [ %16, %14 ], [ null, %36 ], [ null, %37 ]
  ret %"class.blink::IDBKeyRange"* %40
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::IDBKeyRange"* @_ZN5blink11IDBKeyRange10upperBoundEPNS_11ScriptStateERKNS_11ScriptValueEbRNS_14ExceptionStateE(%"class.blink::ScriptState"*, %"class.blink::ScriptValue"* dereferenceable(24), i1 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #5
  %6 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %5, i64 0, i32 5
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %1) #5
  %9 = tail call %"class.blink::IDBKey"* @_ZN5blink17NativeValueTraitsINSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %7, %"class.v8::Value"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3) #5
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %4
  %14 = icmp eq %"class.blink::IDBKey"* %9, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = tail call zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* nonnull %9) #5
  br i1 %16, label %18, label %17

17:                                               ; preds = %13, %15
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 30, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase24kNotValidKeyErrorMessageE, i64 0, i64 0)) #5
  br label %22

18:                                               ; preds = %15
  %19 = xor i1 %2, true
  %20 = zext i1 %19 to i32
  %21 = tail call %"class.blink::IDBKeyRange"* @_ZN5blink11IDBKeyRange6CreateENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEES6_NS0_14LowerBoundTypeENS0_14UpperBoundTypeE(%"class.blink::IDBKey"* null, %"class.blink::IDBKey"* nonnull %9, i32 0, i32 %20)
  br label %26

22:                                               ; preds = %4, %17
  %23 = icmp eq %"class.blink::IDBKey"* %9, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %9) #5
  %25 = bitcast %"class.blink::IDBKey"* %9 to i8*
  tail call void @free(i8* %25) #5
  br label %26

26:                                               ; preds = %18, %22, %24
  %27 = phi %"class.blink::IDBKeyRange"* [ %21, %18 ], [ null, %22 ], [ null, %24 ]
  ret %"class.blink::IDBKeyRange"* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::IDBKeyRange"* @_ZN5blink11IDBKeyRange5boundEPNS_11ScriptStateERKNS_11ScriptValueES5_bbRNS_14ExceptionStateE(%"class.blink::ScriptState"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ScriptValue"* dereferenceable(24), i1 zeroext, i1 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #5
  %8 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %7, i64 0, i32 5
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %1) #5
  %11 = tail call %"class.blink::IDBKey"* @_ZN5blink17NativeValueTraitsINSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %10, %"class.blink::ExceptionState"* dereferenceable(72) %5) #5
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %51

15:                                               ; preds = %6
  %16 = icmp eq %"class.blink::IDBKey"* %11, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = tail call zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* nonnull %11) #5
  br i1 %18, label %20, label %19

19:                                               ; preds = %15, %17
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 30, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase24kNotValidKeyErrorMessageE, i64 0, i64 0)) #5
  br label %51

20:                                               ; preds = %17
  %21 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #5
  %22 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %21, i64 0, i32 5
  %23 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %22, align 8
  %24 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #5
  %25 = tail call %"class.blink::IDBKey"* @_ZN5blink17NativeValueTraitsINSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %23, %"class.v8::Value"* %24, %"class.blink::ExceptionState"* dereferenceable(72) %5) #5
  %26 = load i32, i32* %12, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %45

28:                                               ; preds = %20
  %29 = icmp eq %"class.blink::IDBKey"* %25, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = tail call zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* nonnull %25) #5
  br i1 %31, label %33, label %32

32:                                               ; preds = %28, %30
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 30, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase24kNotValidKeyErrorMessageE, i64 0, i64 0)) #5
  br label %45

33:                                               ; preds = %30
  %34 = tail call zeroext i1 @_ZNK5blink6IDBKey10IsLessThanEPKS0_(%"class.blink::IDBKey"* nonnull %25, %"class.blink::IDBKey"* nonnull %11) #5
  br i1 %34, label %47, label %35

35:                                               ; preds = %33
  %36 = tail call zeroext i1 @_ZNK5blink6IDBKey7IsEqualEPKS0_(%"class.blink::IDBKey"* nonnull %25, %"class.blink::IDBKey"* nonnull %11) #5
  %37 = or i1 %3, %4
  %38 = and i1 %37, %36
  br i1 %38, label %47, label %39

39:                                               ; preds = %35
  %40 = xor i1 %3, true
  %41 = zext i1 %40 to i32
  %42 = xor i1 %4, true
  %43 = zext i1 %42 to i32
  %44 = tail call %"class.blink::IDBKeyRange"* @_ZN5blink11IDBKeyRange6CreateENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEES6_NS0_14LowerBoundTypeENS0_14UpperBoundTypeE(%"class.blink::IDBKey"* nonnull %11, %"class.blink::IDBKey"* nonnull %25, i32 %41, i32 %43)
  br label %55

45:                                               ; preds = %20, %32
  %46 = icmp eq %"class.blink::IDBKey"* %25, null
  br i1 %46, label %53, label %49

47:                                               ; preds = %35, %33
  %48 = phi i8* [ getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), %33 ], [ getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), %35 ]
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 30, i8* %48) #5
  br label %49

49:                                               ; preds = %47, %45
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %25) #5
  %50 = bitcast %"class.blink::IDBKey"* %25 to i8*
  tail call void @free(i8* %50) #5
  br label %53

51:                                               ; preds = %6, %19
  %52 = icmp eq %"class.blink::IDBKey"* %11, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %45, %49, %51
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %11) #5
  %54 = bitcast %"class.blink::IDBKey"* %11 to i8*
  tail call void @free(i8* %54) #5
  br label %55

55:                                               ; preds = %39, %51, %53
  %56 = phi %"class.blink::IDBKeyRange"* [ %44, %39 ], [ null, %51 ], [ null, %53 ]
  ret %"class.blink::IDBKeyRange"* %56
}

declare zeroext i1 @_ZNK5blink6IDBKey10IsLessThanEPKS0_(%"class.blink::IDBKey"*, %"class.blink::IDBKey"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink6IDBKey7IsEqualEPKS0_(%"class.blink::IDBKey"*, %"class.blink::IDBKey"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11IDBKeyRange8includesEPNS_11ScriptStateERKNS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::IDBKeyRange"* nocapture readonly, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #5
  %6 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %5, i64 0, i32 5
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #5
  %9 = tail call %"class.blink::IDBKey"* @_ZN5blink17NativeValueTraitsINSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %7, %"class.v8::Value"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3) #5
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %45

13:                                               ; preds = %4
  %14 = icmp eq %"class.blink::IDBKey"* %9, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = tail call zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* nonnull %9) #5
  br i1 %16, label %18, label %17

17:                                               ; preds = %13, %15
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 30, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase24kNotValidKeyErrorMessageE, i64 0, i64 0)) #5
  br label %45

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %19, align 8
  %21 = icmp eq %"class.blink::IDBKey"* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %18
  %23 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* nonnull %9, %"class.blink::IDBKey"* nonnull %20) #5
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %47, label %25

25:                                               ; preds = %22
  %26 = icmp eq i32 %23, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %47, label %31

31:                                               ; preds = %18, %27, %25
  %32 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 3
  %33 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %32, align 8
  %34 = icmp eq %"class.blink::IDBKey"* %33, null
  br i1 %34, label %47, label %35

35:                                               ; preds = %31
  %36 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* nonnull %9, %"class.blink::IDBKey"* nonnull %33) #5
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %35
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 5
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %38, %40
  br label %47

45:                                               ; preds = %4, %17
  %46 = icmp eq %"class.blink::IDBKey"* %9, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %22, %27, %35, %40, %44, %31, %45
  %48 = phi i1 [ false, %45 ], [ true, %31 ], [ true, %44 ], [ false, %40 ], [ false, %35 ], [ false, %27 ], [ false, %22 ]
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %9) #5
  %49 = bitcast %"class.blink::IDBKey"* %9 to i8*
  tail call void @free(i8* %49) #5
  br label %50

50:                                               ; preds = %45, %47
  %51 = phi i1 [ false, %45 ], [ %48, %47 ]
  ret i1 %51
}

declare i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"*, %"class.blink::IDBKey"*) local_unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11IDBKeyRangeD2Ev(%"class.blink::IDBKeyRange"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink11IDBKeyRangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %3, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %3, align 8
  %5 = icmp eq %"class.blink::IDBKey"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %4) #5
  %7 = bitcast %"class.blink::IDBKey"* %4 to i8*
  tail call void @free(i8* %7) #5
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %9, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %9, align 8
  %11 = icmp eq %"class.blink::IDBKey"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %10) #5
  %13 = bitcast %"class.blink::IDBKey"* %10 to i8*
  tail call void @free(i8* %13) #5
  br label %14

14:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11IDBKeyRangeD0Ev(%"class.blink::IDBKeyRange"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink11IDBKeyRangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %3, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %3, align 8
  %5 = icmp eq %"class.blink::IDBKey"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %4) #5
  %7 = bitcast %"class.blink::IDBKey"* %4 to i8*
  tail call void @free(i8* %7) #5
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %9, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %9, align 8
  %11 = icmp eq %"class.blink::IDBKey"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %10) #5
  %13 = bitcast %"class.blink::IDBKey"* %10 to i8*
  tail call void @free(i8* %13) #5
  br label %14

14:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink11IDBKeyRange5TraceEPNS_7VisitorE(%"class.blink::IDBKeyRange"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBKeyRange", %"class.blink::IDBKeyRange"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11IDBKeyRange18GetWrapperTypeInfoEv(%"class.blink::IDBKeyRange"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11IDBKeyRange18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #5
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !8

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #5
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #5
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #5
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #5
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #5
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %40, i8* %41) #5
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #5
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #5
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #5
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !8

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #5
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #5
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare %"class.blink::IDBKeyRange"* @_ZN5blink17NativeValueTraitsIPNS_11IDBKeyRangeEvE11NativeValueEPN2v87IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::IDBKey"* @_ZN5blink17NativeValueTraitsINSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN5blink4ToV8EPKNS_6IDBKeyEN2v85LocalINS3_6ObjectEEEPNS3_7IsolateE(%"class.blink::IDBKey"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.82, %class.scoped_refptr.82* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #5
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.79"* dereferenceable(8) %9) #5
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #5
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #5
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #5
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #5
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.82* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #5
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #5
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #5
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #5
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #5
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #5
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #5
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.82* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #5
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #5
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #5
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #5
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #5
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0)) #5
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #5
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.79"* dereferenceable(8)) local_unnamed_addr #2

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink11ScriptValue4FromIPNS_6IDBKeyEEES0_PNS_11ScriptStateEOT_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink11ScriptValue4FromIPNS_6IDBKeyEEES0_PNS_11ScriptStateEOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink11ScriptValue4FromIPNS_6IDBKeyEEES0_PNS_11ScriptStateEOT_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink11ScriptValue4FromIPNS_6IDBKeyEEES0_PNS_11ScriptStateEOT_"}
!8 = !{!"branch_weights", i32 1, i32 2000}
