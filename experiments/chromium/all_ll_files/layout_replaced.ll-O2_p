; ModuleID = '../../third_party/blink/renderer/core/layout/layout_replaced.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_replaced.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::LayoutReplaced" = type { %"class.blink::LayoutBox", %"class.blink::LayoutSize" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1720, %"class.WTF::Vector.1910", %"class.std::__1::unique_ptr.1915", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1936, %"class.blink::Persistent.1937" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2264 }
%class.scoped_refptr.2264 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2265", %"class.WTF::Vector.630", %"class.WTF::Vector.2267", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2265" = type { %"class.base::RefCounted.2266" }
%"class.base::RefCounted.2266" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2267" = type { %"class.WTF::VectorBuffer.2268" }
%"class.WTF::VectorBuffer.2268" = type { %"class.WTF::VectorBufferBase.2269" }
%"class.WTF::VectorBufferBase.2269" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2270 }
%union.anon.2270 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2255" }
%"class.blink::Member.2255" = type { %"class.blink::MemberBase.2256" }
%"class.blink::MemberBase.2256" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2257" }
%"class.blink::Member.2257" = type { %"class.blink::MemberBase.2258" }
%"class.blink::MemberBase.2258" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2278 }
%class.scoped_refptr.2278 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2288" }
%"class.blink::Member.2288" = type { %"class.blink::MemberBase.2289" }
%"class.blink::MemberBase.2289" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2284" }
%"class.blink::MemberBase.2284" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2285" }
%"class.blink::MemberBase.2285" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2286" }
%"class.blink::MemberBase.2286" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2287" }
%"class.blink::MemberBase.2287" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2279", %"class.WTF::Vector.2279" }
%"class.WTF::Vector.2279" = type { %"class.WTF::VectorBuffer.2280" }
%"class.WTF::VectorBuffer.2280" = type { %"class.WTF::VectorBufferBase.2281" }
%"class.WTF::VectorBufferBase.2281" = type { %class.scoped_refptr.2278*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2259" }
%"class.WTF::Vector.2259" = type { %"class.WTF::VectorBuffer.2260" }
%"class.WTF::VectorBuffer.2260" = type { %"class.WTF::VectorBufferBase.2261" }
%"class.WTF::VectorBufferBase.2261" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1730", %"class.absl::optional.1730", %"class.absl::optional.1730" }
%"class.absl::optional.1730" = type { %"class.absl::optional_internal::optional_data.1731" }
%"class.absl::optional_internal::optional_data.1731" = type { %"class.absl::optional_internal::optional_data_base.1732" }
%"class.absl::optional_internal::optional_data_base.1732" = type { %"class.absl::optional_internal::optional_data_dtor_base.1733" }
%"class.absl::optional_internal::optional_data_dtor_base.1733" = type { i8, %union.anon.1734 }
%union.anon.1734 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2274" }
%"class.WTF::VectorBuffer.2274" = type { %"class.WTF::VectorBufferBase.2275", [32 x i8] }
%"class.WTF::VectorBufferBase.2275" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.1631", %"class.blink::Persistent.1637", %"class.std::__1::unique_ptr.1678", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1694" }
%"class.std::__1::unique_ptr.1631" = type { %"class.std::__1::__compressed_pair.1632" }
%"class.std::__1::__compressed_pair.1632" = type { %"struct.std::__1::__compressed_pair_elem.1633" }
%"struct.std::__1::__compressed_pair_elem.1633" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.1637" = type { %"class.blink::PersistentBase.1638" }
%"class.blink::PersistentBase.1638" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.1655", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.1673" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1641", %"class.blink::Member.1643", %"class.blink::Member.1645", %"class.blink::Member.1647", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1641" = type { %"class.blink::MemberBase.1642" }
%"class.blink::MemberBase.1642" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1643" = type { %"class.blink::MemberBase.1644" }
%"class.blink::MemberBase.1644" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1645" = type { %"class.blink::MemberBase.1646" }
%"class.blink::MemberBase.1646" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1647" = type { %"class.blink::MemberBase.1648" }
%"class.blink::MemberBase.1648" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.1649", %"class.blink::Member.1651", %"class.blink::Member.1651", i8, [7 x i8] }>
%"class.blink::Member.1649" = type { %"class.blink::MemberBase.1650" }
%"class.blink::MemberBase.1650" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.1651" = type { %"class.blink::MemberBase.1652" }
%"class.blink::MemberBase.1652" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1653", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1718", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1653" = type { %"class.blink::MemberBase.1654" }
%"class.blink::MemberBase.1654" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1718" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1719", { i64, i64 } }
%"class.blink::WeakMember.1719" = type { %"class.blink::MemberBase.1652" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1653", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.1658", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1663" }
%"class.WTF::HashMap.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"struct.WTF::KeyValuePair.1662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1662" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.1663" = type { %"class.WTF::VectorBuffer.1664" }
%"class.WTF::VectorBuffer.1664" = type { %"class.WTF::VectorBufferBase.1665" }
%"class.WTF::VectorBufferBase.1665" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1671" }
%"class.blink::Member.1671" = type { %"class.blink::MemberBase.1672" }
%"class.blink::MemberBase.1672" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1671" }
%"class.absl::optional.1673" = type { %"class.absl::optional_internal::optional_data.1674" }
%"class.absl::optional_internal::optional_data.1674" = type { %"class.absl::optional_internal::optional_data_base.1675" }
%"class.absl::optional_internal::optional_data_base.1675" = type { %"class.absl::optional_internal::optional_data_dtor_base.1676" }
%"class.absl::optional_internal::optional_data_dtor_base.1676" = type { i8, %union.anon.1677 }
%union.anon.1677 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.1678" = type { %"class.std::__1::__compressed_pair.1679" }
%"class.std::__1::__compressed_pair.1679" = type { %"struct.std::__1::__compressed_pair_elem.1680" }
%"struct.std::__1::__compressed_pair_elem.1680" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.1681", %"class.WTF::Vector.1681", %"class.WTF::HashMap.1686", %"class.WTF::Vector.1681", i8, [7 x i8] }>
%"class.WTF::HashMap.1686" = type { %"class.WTF::HashTable.1687" }
%"class.WTF::HashTable.1687" = type <{ %"struct.WTF::KeyValuePair.1690"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1690" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.1681" }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683" }
%"class.WTF::VectorBufferBase.1683" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.1694" = type { %"class.std::__1::__compressed_pair.1695" }
%"class.std::__1::__compressed_pair.1695" = type { %"struct.std::__1::__compressed_pair_elem.1696" }
%"struct.std::__1::__compressed_pair_elem.1696" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1697", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.1703", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.1709", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.1703" = type { %"class.std::__1::__compressed_pair.1704" }
%"class.std::__1::__compressed_pair.1704" = type { %"struct.std::__1::__compressed_pair_elem.1705" }
%"struct.std::__1::__compressed_pair_elem.1705" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.1709" = type { %"class.blink::PersistentBase.1710" }
%"class.blink::PersistentBase.1710" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%class.scoped_refptr.1720 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1721", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1868, %union.anon.1886, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1721" = type { %"class.base::RefCounted.1722" }
%"class.base::RefCounted.1722" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1723, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1723 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1724 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1724 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1758 }
%class.scoped_refptr.1758 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1759", [4 x i8], %"class.std::__1::unique_ptr.1761", i64, %"class.WTF::Vector.1765", %"class.WTF::Vector.1770", %"class.WTF::Vector.1776", %"class.WTF::Vector.1794", %class.scoped_refptr.1546, %"class.WTF::HashMap.1800", %"class.WTF::Vector.1805", %"class.WTF::Vector.1765", %"class.WTF::Vector.1810", %"class.WTF::HashMap.1815", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1759" = type { %"class.base::RefCountedThreadSafe.1760" }
%"class.base::RefCountedThreadSafe.1760" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { i8* }
%"class.WTF::Vector.1770" = type { %"class.WTF::VectorBuffer.1771" }
%"class.WTF::VectorBuffer.1771" = type { %"class.WTF::VectorBufferBase.1772", [8 x i8] }
%"class.WTF::VectorBufferBase.1772" = type { %class.scoped_refptr.1773*, i32, i32 }
%class.scoped_refptr.1773 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1776" = type { %"class.WTF::VectorBuffer.1777" }
%"class.WTF::VectorBuffer.1777" = type { %"class.WTF::VectorBufferBase.1778" }
%"class.WTF::VectorBufferBase.1778" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1780", %"class.std::__1::unique_ptr.1786" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1779 }
%class.scoped_refptr.1779 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1780" = type { %"class.std::__1::__compressed_pair.1781" }
%"class.std::__1::__compressed_pair.1781" = type { %"struct.std::__1::__compressed_pair_elem.1782" }
%"struct.std::__1::__compressed_pair_elem.1782" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1786" = type { %"class.std::__1::__compressed_pair.1787" }
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1788" }
%"struct.std::__1::__compressed_pair_elem.1788" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1794" = type { %"class.WTF::VectorBuffer.1795" }
%"class.WTF::VectorBuffer.1795" = type { %"class.WTF::VectorBufferBase.1796" }
%"class.WTF::VectorBufferBase.1796" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1797", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1797" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1800" = type { %"class.WTF::HashTable.1801" }
%"class.WTF::HashTable.1801" = type <{ %"struct.WTF::KeyValuePair.1804"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1804" = type opaque
%"class.WTF::Vector.1805" = type { %"class.WTF::VectorBuffer.1806" }
%"class.WTF::VectorBuffer.1806" = type { %"class.WTF::VectorBufferBase.1807" }
%"class.WTF::VectorBufferBase.1807" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1765" = type { %"class.WTF::VectorBuffer.1766" }
%"class.WTF::VectorBuffer.1766" = type { %"class.WTF::VectorBufferBase.1767", [16 x i8] }
%"class.WTF::VectorBufferBase.1767" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1810" = type { %"class.WTF::VectorBuffer.1811" }
%"class.WTF::VectorBuffer.1811" = type { %"class.WTF::VectorBufferBase.1812" }
%"class.WTF::VectorBufferBase.1812" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1815" = type { %"class.WTF::HashTable.1816" }
%"class.WTF::HashTable.1816" = type <{ %"struct.WTF::KeyValuePair.1819"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1819" = type { i8**, %"class.std::__1::unique_ptr.2290" }
%"class.std::__1::unique_ptr.2290" = type { %"class.std::__1::__compressed_pair.2291" }
%"class.std::__1::__compressed_pair.2291" = type { %"struct.std::__1::__compressed_pair_elem.2292" }
%"struct.std::__1::__compressed_pair_elem.2292" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1820" }
%"class.std::__1::unique_ptr.1820" = type { %"class.std::__1::__compressed_pair.1821" }
%"class.std::__1::__compressed_pair.1821" = type { %"struct.std::__1::__compressed_pair_elem.1822" }
%"struct.std::__1::__compressed_pair_elem.1822" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1823, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1840" }
%class.scoped_refptr.1823 = type { %"class.base::RefCountedData.1824"* }
%"class.base::RefCountedData.1824" = type { %"class.base::RefCountedThreadSafe.1825", %"class.WTF::Vector.1826" }
%"class.base::RefCountedThreadSafe.1825" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1826" = type { %"class.WTF::VectorBuffer.1827" }
%"class.WTF::VectorBuffer.1827" = type { %"class.WTF::VectorBufferBase.1828" }
%"class.WTF::VectorBufferBase.1828" = type { %class.scoped_refptr.1829*, i32, i32 }
%class.scoped_refptr.1829 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1830", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1832" }
%"class.WTF::RefCounted.1830" = type { %"class.base::RefCounted.1831" }
%"class.base::RefCounted.1831" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1832" = type { %"class.std::__1::__compressed_pair.1833" }
%"class.std::__1::__compressed_pair.1833" = type { %"struct.std::__1::__compressed_pair_elem.1834" }
%"struct.std::__1::__compressed_pair_elem.1834" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1840" = type { %"class.std::__1::__compressed_pair.1841" }
%"class.std::__1::__compressed_pair.1841" = type { %"struct.std::__1::__compressed_pair_elem.1842" }
%"struct.std::__1::__compressed_pair_elem.1842" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1843", %"class.WTF::Vector.1856", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1843" = type { %"class.WTF::VectorBuffer.1844" }
%"class.WTF::VectorBuffer.1844" = type { %"class.WTF::VectorBufferBase.1845", [320 x i8] }
%"class.WTF::VectorBufferBase.1845" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1846", %"class.WTF::Vector.1846", %class.scoped_refptr.1851, i8, [7 x i8] }>
%"class.WTF::Vector.1846" = type { %"class.WTF::VectorBuffer.1847" }
%"class.WTF::VectorBuffer.1847" = type { %"class.WTF::VectorBufferBase.1848", [8 x i8] }
%"class.WTF::VectorBufferBase.1848" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1851 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1852", %"class.WTF::Vector.1826", %"class.WTF::Vector.1826" }
%"class.WTF::RefCounted.1852" = type { %"class.base::RefCounted.1853" }
%"class.base::RefCounted.1853" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1856" = type { %"class.WTF::VectorBuffer.1857" }
%"class.WTF::VectorBuffer.1857" = type { %"class.WTF::VectorBufferBase.1858", [288 x i8] }
%"class.WTF::VectorBufferBase.1858" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1846", %"class.WTF::Vector.1846" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1859 }
%class.scoped_refptr.1859 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1868 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1869", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1871, %"class.std::__1::unique_ptr.1874" }
%"class.WTF::RefCounted.1869" = type { %"class.base::RefCounted.1870" }
%"class.base::RefCounted.1870" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1871 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1872", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1872" = type { %"class.base::RefCounted.1873" }
%"class.base::RefCounted.1873" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1874" = type { %"class.std::__1::__compressed_pair.1875" }
%"class.std::__1::__compressed_pair.1875" = type { %"struct.std::__1::__compressed_pair_elem.1876" }
%"struct.std::__1::__compressed_pair_elem.1876" = type { %"class.WTF::Vector.1877"* }
%"class.WTF::Vector.1877" = type { %"class.WTF::VectorBuffer.1878" }
%"class.WTF::VectorBuffer.1878" = type { %"class.WTF::VectorBufferBase.1879" }
%"class.WTF::VectorBufferBase.1879" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1880 }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%union.anon.1880 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%union.anon.1886 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1725", %class.scoped_refptr.1887, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1888, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1758, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1889", %"class.absl::optional.1905" }
%"class.absl::optional.1725" = type { %"class.absl::optional_internal::optional_data.1726" }
%"class.absl::optional_internal::optional_data.1726" = type { %"class.absl::optional_internal::optional_data_base.1727" }
%"class.absl::optional_internal::optional_data_base.1727" = type { %"class.absl::optional_internal::optional_data_dtor_base.1728" }
%"class.absl::optional_internal::optional_data_dtor_base.1728" = type { i8, %union.anon.1729 }
%union.anon.1729 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1887 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.1953", [4 x i8], %union.anon.1955, %class.scoped_refptr.1887, i32, [4 x i8] }>
%"class.WTF::RefCounted.1953" = type { %"class.base::RefCounted.1954" }
%"class.base::RefCounted.1954" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1955 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.1888 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1889" = type { %"class.std::__1::__compressed_pair.1890" }
%"class.std::__1::__compressed_pair.1890" = type { %"struct.std::__1::__compressed_pair_elem.1891" }
%"struct.std::__1::__compressed_pair_elem.1891" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1892", %"class.WTF::Vector.1897", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1892" = type { %"class.WTF::VectorBuffer.1893" }
%"class.WTF::VectorBuffer.1893" = type { %"class.WTF::VectorBufferBase.1894" }
%"class.WTF::VectorBufferBase.1894" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1897" = type { %"class.WTF::VectorBuffer.1898" }
%"class.WTF::VectorBuffer.1898" = type { %"class.WTF::VectorBufferBase.1899" }
%"class.WTF::VectorBufferBase.1899" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1905" = type { %"class.absl::optional_internal::optional_data.1906" }
%"class.absl::optional_internal::optional_data.1906" = type { %"class.absl::optional_internal::optional_data_base.1907" }
%"class.absl::optional_internal::optional_data_base.1907" = type { %"class.absl::optional_internal::optional_data_dtor_base.1908" }
%"class.absl::optional_internal::optional_data_dtor_base.1908" = type { i8, %union.anon.1909 }
%union.anon.1909 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1910" = type { %"class.WTF::VectorBuffer.1911" }
%"class.WTF::VectorBuffer.1911" = type { %"class.WTF::VectorBufferBase.1912", [8 x i8] }
%"class.WTF::VectorBufferBase.1912" = type { %class.scoped_refptr.1720*, i32, i32 }
%"class.std::__1::unique_ptr.1915" = type { %"class.std::__1::__compressed_pair.1916" }
%"class.std::__1::__compressed_pair.1916" = type { %"struct.std::__1::__compressed_pair_elem.1917" }
%"struct.std::__1::__compressed_pair_elem.1917" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1918", %"class.absl::optional.1923", %"class.absl::optional.1928" }
%"class.absl::optional.1918" = type { %"class.absl::optional_internal::optional_data.1919" }
%"class.absl::optional_internal::optional_data.1919" = type { %"class.absl::optional_internal::optional_data_base.1920" }
%"class.absl::optional_internal::optional_data_base.1920" = type { %"class.absl::optional_internal::optional_data_dtor_base.1921" }
%"class.absl::optional_internal::optional_data_dtor_base.1921" = type { i8, %union.anon.1922 }
%union.anon.1922 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1923" = type { %"class.absl::optional_internal::optional_data.1924" }
%"class.absl::optional_internal::optional_data.1924" = type { %"class.absl::optional_internal::optional_data_base.1925" }
%"class.absl::optional_internal::optional_data_base.1925" = type { %"class.absl::optional_internal::optional_data_dtor_base.1926" }
%"class.absl::optional_internal::optional_data_dtor_base.1926" = type { i8, [3 x i8], %union.anon.1927 }
%union.anon.1927 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1928" = type { %"class.absl::optional_internal::optional_data.1929" }
%"class.absl::optional_internal::optional_data.1929" = type { %"class.absl::optional_internal::optional_data_base.1930" }
%"class.absl::optional_internal::optional_data_base.1930" = type { %"class.absl::optional_internal::optional_data_dtor_base.1931" }
%"class.absl::optional_internal::optional_data_dtor_base.1931" = type { i8, %union.anon.1932 }
%union.anon.1932 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1936 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1937" = type { %"class.blink::PersistentBase.1938" }
%"class.blink::PersistentBase.1938" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1941", %"struct.blink::PhysicalRect", %"class.blink::Member.1951" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1941" = type { %"class.std::__1::__compressed_pair.1942" }
%"class.std::__1::__compressed_pair.1942" = type { %"struct.std::__1::__compressed_pair_elem.1943" }
%"struct.std::__1::__compressed_pair_elem.1943" = type { %"class.WTF::HashSet.1944"* }
%"class.WTF::HashSet.1944" = type { %"class.WTF::HashTable.1945" }
%"class.WTF::HashTable.1945" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1951" = type { %"class.blink::MemberBase.1952" }
%"class.blink::MemberBase.1952" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutAnalyzer::Scope" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type { i32, [21 x i32] }
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.2298", %"class.blink::WeakMember.966", i32, [4 x i8], %"class.blink::HeapHashSet.1251", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.2299", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.2298" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.2299" = type { %"class.absl::optional_internal::optional_data.2300" }
%"class.absl::optional_internal::optional_data.2300" = type { %"class.absl::optional_internal::optional_data_base.2301" }
%"class.absl::optional_internal::optional_data_base.2301" = type { %"class.absl::optional_internal::optional_data_dtor_base.2302" }
%"class.absl::optional_internal::optional_data_dtor_base.2302" = type { i8, %union.anon.2303 }
%union.anon.2303 = type { %"class.blink::FloatSize" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"struct.blink::PaintInfo" = type <{ %"class.blink::GraphicsContext"*, i32, %"class.blink::CullRect", [4 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.2026", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.2106", i8, i8, i8, i32 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1956, %class.scoped_refptr.1956, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2006", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2011", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1956 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1957", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1964" }
%"class.WTF::RefCounted.1957" = type { %"class.base::RefCounted.1958" }
%"class.base::RefCounted.1958" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1959", i32, [4 x i8] }>
%"class.WTF::Vector.1959" = type { %"class.WTF::VectorBuffer.1960" }
%"class.WTF::VectorBuffer.1960" = type { %"class.WTF::VectorBufferBase.1961" }
%"class.WTF::VectorBufferBase.1961" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1964" = type { %"class.WTF::VectorBuffer.1965" }
%"class.WTF::VectorBuffer.1965" = type { %"class.WTF::VectorBufferBase.1966" }
%"class.WTF::VectorBufferBase.1966" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1967", %"class.std::__1::unique_ptr.1978", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1967" = type { %"class.std::__1::__compressed_pair.1968" }
%"class.std::__1::__compressed_pair.1968" = type { %"struct.std::__1::__compressed_pair_elem.1969" }
%"struct.std::__1::__compressed_pair_elem.1969" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1970", %"class.WTF::Vector.1663", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1970" = type { %"class.WTF::VectorBuffer.1971" }
%"class.WTF::VectorBuffer.1971" = type { %"class.WTF::VectorBufferBase.1972" }
%"class.WTF::VectorBufferBase.1972" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.std::__1::unique_ptr.1978" = type { %"class.std::__1::__compressed_pair.1979" }
%"class.std::__1::__compressed_pair.1979" = type { %"struct.std::__1::__compressed_pair_elem.1980" }
%"struct.std::__1::__compressed_pair_elem.1980" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1981", %"class.absl::optional.1981" }
%"class.absl::optional.1981" = type { %"class.absl::optional_internal::optional_data.1982" }
%"class.absl::optional_internal::optional_data.1982" = type { %"class.absl::optional_internal::optional_data_base.1983" }
%"class.absl::optional_internal::optional_data_base.1983" = type { %"class.absl::optional_internal::optional_data_dtor_base.1984" }
%"class.absl::optional_internal::optional_data_dtor_base.1984" = type { i8, [3 x i8], %union.anon.1985 }
%union.anon.1985 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1964"*, %"class.absl::optional.1991", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1991" = type { %"class.absl::optional_internal::optional_data.1992" }
%"class.absl::optional_internal::optional_data.1992" = type { %"class.absl::optional_internal::optional_data_base.1993" }
%"class.absl::optional_internal::optional_data_base.1993" = type { %"class.absl::optional_internal::optional_data_dtor_base.1994" }
%"class.absl::optional_internal::optional_data_dtor_base.1994" = type { i8, %union.anon.1995 }
%union.anon.1995 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1996", %"class.WTF::Vector.2001" }
%"class.WTF::Vector.1996" = type { %"class.WTF::VectorBuffer.1997" }
%"class.WTF::VectorBuffer.1997" = type { %"class.WTF::VectorBufferBase.1998", [128 x i8] }
%"class.WTF::VectorBufferBase.1998" = type { i32*, i32, i32 }
%"class.WTF::Vector.2001" = type { %"class.WTF::VectorBuffer.2002" }
%"class.WTF::VectorBuffer.2002" = type { %"class.WTF::VectorBufferBase.2003", [128 x i8] }
%"class.WTF::VectorBufferBase.2003" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2006" = type { %"class.WTF::VectorBuffer.2007" }
%"class.WTF::VectorBuffer.2007" = type { %"class.WTF::VectorBufferBase.2008" }
%"class.WTF::VectorBufferBase.2008" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2011" = type { %"class.WTF::HashTable.2012" }
%"class.WTF::HashTable.2012" = type <{ %"struct.WTF::KeyValuePair.2015"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2015" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2016", %"class.WTF::Vector.2021" }
%"class.WTF::HashMap.2016" = type { %"class.WTF::HashTable.2017" }
%"class.WTF::HashTable.2017" = type <{ %"struct.WTF::KeyValuePair.2020"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2020" = type opaque
%"class.WTF::Vector.2021" = type { %"class.WTF::VectorBuffer.2022" }
%"class.WTF::VectorBuffer.2022" = type { %"class.WTF::VectorBufferBase.2023" }
%"class.WTF::VectorBufferBase.2023" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.WTF::Vector.2026" = type { %"class.WTF::VectorBuffer.2027" }
%"class.WTF::VectorBuffer.2027" = type { %"class.WTF::VectorBufferBase.2028" }
%"class.WTF::VectorBufferBase.2028" = type { %"class.std::__1::unique_ptr.2029"*, i32, i32 }
%"class.std::__1::unique_ptr.2029" = type { %"class.std::__1::__compressed_pair.2030" }
%"class.std::__1::__compressed_pair.2030" = type { %"struct.std::__1::__compressed_pair_elem.2031" }
%"struct.std::__1::__compressed_pair_elem.2031" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp.2032, %class.sk_sp.2033, %class.sk_sp.2071, %class.sk_sp.2072, %class.sk_sp.2073, %class.sk_sp.817, i32, float, float, i32, %union.anon.2074, [4 x i8] }>
%class.sk_sp.2032 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2033 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.2034", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.2042, i32, %"class.absl::optional.2058", %"class.std::__1::vector.842", %"class.std::__1::vector.2063", %class.sk_sp.2070, %class.sk_sp.2039, i32, [4 x i8] }>
%"class.absl::optional.2034" = type { %"class.absl::optional_internal::optional_data.2035" }
%"class.absl::optional_internal::optional_data.2035" = type { %"class.absl::optional_internal::optional_data_base.2036" }
%"class.absl::optional_internal::optional_data_base.2036" = type { %"class.absl::optional_internal::optional_data_dtor_base.2037" }
%"class.absl::optional_internal::optional_data_dtor_base.2037" = type { i8, %union.anon.2038 }
%union.anon.2038 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.cc::PaintImage" = type { %class.sk_sp.2039, %class.sk_sp.2042, %"class.gfx::Rect", i32, %class.sk_sp.2047, %class.sk_sp.2055, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.2039, %class.scoped_refptr.2056 }
%class.sk_sp.2047 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.2048" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.2040, i32, i32 }
%class.sk_sp.2040 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.2041, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.2041 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.2048" = type { %"class.std::__1::__vector_base.2049" }
%"class.std::__1::__vector_base.2049" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.2050" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.2050" = type { %"struct.std::__1::__compressed_pair_elem.2051" }
%"struct.std::__1::__compressed_pair_elem.2051" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.2055 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.2056 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2057", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2057" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp.2042 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.2043", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2043" = type { %"class.std::__1::__compressed_pair.2044" }
%"class.std::__1::__compressed_pair.2044" = type { %"struct.std::__1::__compressed_pair_elem.2045" }
%"struct.std::__1::__compressed_pair_elem.2045" = type { i8* }
%"class.absl::optional.2058" = type { %"class.absl::optional_internal::optional_data.2059" }
%"class.absl::optional_internal::optional_data.2059" = type { %"class.absl::optional_internal::optional_data_base.2060" }
%"class.absl::optional_internal::optional_data_base.2060" = type { %"class.absl::optional_internal::optional_data_dtor_base.2061" }
%"class.absl::optional_internal::optional_data_dtor_base.2061" = type { i8, %union.anon.2062 }
%union.anon.2062 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.2063" = type { %"class.std::__1::__vector_base.2064" }
%"class.std::__1::__vector_base.2064" = type { float*, float*, %"class.std::__1::__compressed_pair.2065" }
%"class.std::__1::__compressed_pair.2065" = type { %"struct.std::__1::__compressed_pair_elem.2066" }
%"struct.std::__1::__compressed_pair_elem.2066" = type { float* }
%class.sk_sp.2070 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.238", [7 x i8] }>
%class.sk_sp.2039 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.2071 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2072 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2073 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.2074 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.2032 }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.2080, %"class.std::__1::unique_ptr.2081" }
%class.scoped_refptr.2080 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.2081" = type { %"class.std::__1::__compressed_pair.2082" }
%"class.std::__1::__compressed_pair.2082" = type { %"struct.std::__1::__compressed_pair_elem.2083" }
%"struct.std::__1::__compressed_pair_elem.2083" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.2084", %struct.SkRect }
%"class.absl::optional.2084" = type { %"class.absl::optional_internal::optional_data.2085" }
%"class.absl::optional_internal::optional_data.2085" = type { %"class.absl::optional_internal::optional_data_base.2086" }
%"class.absl::optional_internal::optional_data_base.2086" = type { %"class.absl::optional_internal::optional_data_dtor_base.2087" }
%"class.absl::optional_internal::optional_data_dtor_base.2087" = type { i8, %union.anon.2088 }
%union.anon.2088 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.2089, [384 x i64], %class.sk_sp.2090, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.2091", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.2097" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.2089 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.2090 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.2091" = type { %"class.std::__1::__compressed_pair.2092" }
%"class.std::__1::__compressed_pair.2092" = type { %"struct.std::__1::__compressed_pair_elem.2093" }
%"struct.std::__1::__compressed_pair_elem.2093" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.2097" = type { %"class.std::__1::__compressed_pair.2098" }
%"class.std::__1::__compressed_pair.2098" = type { %"struct.std::__1::__compressed_pair_elem.2099" }
%"struct.std::__1::__compressed_pair_elem.2099" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.2106" = type { %"class.std::__1::__compressed_pair.2107" }
%"class.std::__1::__compressed_pair.2107" = type { %"struct.std::__1::__compressed_pair_elem.2108" }
%"struct.std::__1::__compressed_pair_elem.2108" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.2127", %"class.std::__1::unique_ptr.2132" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.2109", %"class.std::__1::unique_ptr.2109", %"class.std::__1::unique_ptr.2115", %"class.std::__1::unique_ptr.2121", %class.sk_sp.2072 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2109" = type { %"class.std::__1::__compressed_pair.2110" }
%"class.std::__1::__compressed_pair.2110" = type { %"struct.std::__1::__compressed_pair_elem.2111" }
%"struct.std::__1::__compressed_pair_elem.2111" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.2115" = type { %"class.std::__1::__compressed_pair.2116" }
%"class.std::__1::__compressed_pair.2116" = type { %"struct.std::__1::__compressed_pair_elem.2117" }
%"struct.std::__1::__compressed_pair_elem.2117" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.2121" = type { %"class.std::__1::__compressed_pair.2122" }
%"class.std::__1::__compressed_pair.2122" = type { %"struct.std::__1::__compressed_pair_elem.2123" }
%"struct.std::__1::__compressed_pair_elem.2123" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.2127" = type { %"class.absl::optional_internal::optional_data.2128" }
%"class.absl::optional_internal::optional_data.2128" = type { %"class.absl::optional_internal::optional_data_base.2129" }
%"class.absl::optional_internal::optional_data_base.2129" = type { %"class.absl::optional_internal::optional_data_dtor_base.2130" }
%"class.absl::optional_internal::optional_data_dtor_base.2130" = type { i8, %union.anon.2131 }
%union.anon.2131 = type { i32 }
%"class.std::__1::unique_ptr.2132" = type { %"class.std::__1::__compressed_pair.2133" }
%"class.std::__1::__compressed_pair.2133" = type { %"struct.std::__1::__compressed_pair_elem.2134" }
%"struct.std::__1::__compressed_pair_elem.2134" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.blink::ReplacedPainter" = type { %"class.blink::LayoutReplaced"* }
%"struct.blink::IntrinsicSizingInfo" = type <{ %"class.blink::FloatSize", %"class.blink::FloatSize", i8, i8, [2 x i8] }>
%"struct.blink::LayoutBox::LogicalExtentComputedValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::LayoutBox::ComputedMarginValues" }
%"struct.blink::LayoutBox::ComputedMarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::NGBoxFragmentBuilder" = type opaque
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::NGInlineCursor" = type <{ %"class.blink::NGInlineCursorPosition", %"class.base::span", %"class.blink::NGFragmentItems"*, %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGInlineCursor::CulledInlineTraversal", %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit", i32, i32, [4 x i8] }>
%"class.blink::NGInlineCursorPosition" = type { %"class.blink::NGFragmentItem"*, %"class.base::CheckedContiguousIterator" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.2183, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.2183 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.2184, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.2184 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.2185", %class.scoped_refptr.2187, i32, i32, i32, i32, float, i32, [0 x %struct.anon.2188] }
%"class.WTF::RefCounted.2185" = type { %"class.base::RefCounted.2186" }
%"class.base::RefCounted.2186" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2187 = type { %"class.blink::SimpleFontData"* }
%struct.anon.2188 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInkOverflow" = type { %union.anon.2197 }
%union.anon.2197 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGFragmentItem"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::NGFragmentItems" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, [0 x %"class.blink::NGFragmentItem"] }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.blink::NGInlineCursor::CulledInlineTraversal" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutInline"*, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.2198", %"class.std::__1::unique_ptr.2218" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::Persistent.2198" = type { %"class.blink::PersistentBase.2199" }
%"class.blink::PersistentBase.2199" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.2202", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.2202" = type { %"class.std::__1::__compressed_pair.2203" }
%"class.std::__1::__compressed_pair.2203" = type { %"struct.std::__1::__compressed_pair_elem.2204" }
%"struct.std::__1::__compressed_pair_elem.2204" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.2205", %"class.WTF::HashMap.2210", %"class.WTF::String" }
%"class.WTF::Vector.2205" = type { %"class.WTF::VectorBuffer.2206" }
%"class.WTF::VectorBuffer.2206" = type { %"class.WTF::VectorBufferBase.2207" }
%"class.WTF::VectorBufferBase.2207" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.2210" = type { %"class.WTF::HashTable.2211" }
%"class.WTF::HashTable.2211" = type <{ %"struct.WTF::KeyValuePair.2214"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2214" = type opaque
%"class.std::__1::unique_ptr.2218" = type { %"class.std::__1::__compressed_pair.2219" }
%"class.std::__1::__compressed_pair.2219" = type { %"struct.std::__1::__compressed_pair_elem.2220" }
%"struct.std::__1::__compressed_pair_elem.2220" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.2221", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.2221" = type { %"class.WTF::HashTable.2224", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.2224" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.2227", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.2227" = type { %"class.std::__1::__compressed_pair.2228" }
%"class.std::__1::__compressed_pair.2228" = type { %"struct.std::__1::__compressed_pair_elem.2229" }
%"struct.std::__1::__compressed_pair_elem.2229" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.2230, %"class.std::__1::unique_ptr.2231", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.2230 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2249", i16, %class.scoped_refptr.2230 }
%"class.WTF::ThreadSafeRefCounted.2249" = type { %"class.base::RefCountedThreadSafe.2250" }
%"class.base::RefCountedThreadSafe.2250" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2231" = type { %"class.std::__1::__compressed_pair.2232" }
%"class.std::__1::__compressed_pair.2232" = type { %"struct.std::__1::__compressed_pair_elem.2233" }
%"struct.std::__1::__compressed_pair_elem.2233" = type { %"class.WTF::Vector.2234"* }
%"class.WTF::Vector.2234" = type { %"class.WTF::VectorBuffer.2235" }
%"class.WTF::VectorBuffer.2235" = type { %"class.WTF::VectorBufferBase.2236" }
%"class.WTF::VectorBufferBase.2236" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.2245, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.2245 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::WritingModeConverter" = type { %"class.blink::WritingDirectionMode", %"struct.blink::PhysicalSize" }
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.2149", float, i8, %class.scoped_refptr.2151, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2149" = type { %"class.blink::MemberBase.2150" }
%"class.blink::MemberBase.2150" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type opaque
%class.scoped_refptr.2151 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.2152", i8, %class.scoped_refptr.2154, %"class.blink::WeakPersistent.2168", i32, i8, %"class.std::__1::unique_ptr.2170" }
%"class.WTF::ThreadSafeRefCounted.2152" = type { %"class.base::RefCountedThreadSafe.2153" }
%"class.base::RefCountedThreadSafe.2153" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.2154 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.2155", i64, %"class.WTF::Vector.2157", %"class.WTF::Vector.2162" }
%"class.WTF::RefCounted.2155" = type { %"class.base::RefCounted.2156" }
%"class.base::RefCounted.2156" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2157" = type { %"class.WTF::VectorBuffer.2158" }
%"class.WTF::VectorBuffer.2158" = type { %"class.WTF::VectorBufferBase.2159" }
%"class.WTF::VectorBufferBase.2159" = type { i8*, i32, i32 }
%"class.WTF::Vector.2162" = type { %"class.WTF::VectorBuffer.2163" }
%"class.WTF::VectorBuffer.2163" = type { %"class.WTF::VectorBufferBase.2164" }
%"class.WTF::VectorBufferBase.2164" = type { %"class.std::__1::unique_ptr.2165"*, i32, i32 }
%"class.std::__1::unique_ptr.2165" = type opaque
%"class.blink::WeakPersistent.2168" = type { %"class.blink::PersistentBase.2169" }
%"class.blink::PersistentBase.2169" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::unique_ptr.2170" = type { %"class.std::__1::__compressed_pair.2171" }
%"class.std::__1::__compressed_pair.2171" = type { %"struct.std::__1::__compressed_pair_elem.2172" }
%"struct.std::__1::__compressed_pair_elem.2172" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2176" }
%"class.WTF::HashMap.2176" = type { %"class.WTF::HashTable.2177" }
%"class.WTF::HashTable.2177" = type <{ %"struct.WTF::KeyValuePair.2180"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2180" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.blink::LayoutNGTableInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableSectionInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableRowInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableCellInterface" = type { i32 (...)** }
%"class.blink::LayoutNGGridInterface" = type { i32 (...)** }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1651", i8, %"class.blink::Member.2251", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2251" = type { %"class.blink::MemberBase.2252" }
%"class.blink::MemberBase.2252" = type { %"class.blink::HeapLinkedHashSet"* }
%"class.blink::HeapLinkedHashSet" = type opaque
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.WTF::Vector.2253" = type opaque
%"class.ui::Cursor" = type opaque
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.1697", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.WTF::Vector.2254" = type opaque
%"struct.blink::PaintInvalidatorContext" = type opaque
%class.anon = type { %"class.blink::LayoutObject"*, i8** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2316" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2316" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2304", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2304" = type { %"class.std::__1::__vector_base.2305" }
%"class.std::__1::__vector_base.2305" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2311" }
%"class.std::__1::__compressed_pair.2311" = type { %"struct.std::__1::__compressed_pair_elem.2312" }
%"struct.std::__1::__compressed_pair_elem.2312" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2306", i64, i64 }
%"class.std::__1::unique_ptr.2306" = type { %"class.std::__1::__compressed_pair.2307" }
%"class.std::__1::__compressed_pair.2307" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink12LayoutObject16ClearNeedsLayoutEv = comdat any

$_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv = comdat any

$_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv = comdat any

$_ZNK5blink11LengthPointeqERKS0_ = comdat any

$_ZNK5blink14LayoutReplaced13IntrinsicSizeEv = comdat any

$_ZN5blink12LayoutObject15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15VirtualChildrenEv = comdat any

$_ZNK5blink14LayoutReplaced15CanHaveChildrenEv = comdat any

$_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink12LayoutObject13IsLayoutBlockEv = comdat any

$_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink12LayoutObject19VirtualContinuationEv = comdat any

$_ZNK5blink9LayoutBox18SpannerPlaceholderEv = comdat any

$_ZNK5blink12LayoutObject13HoverAncestorEv = comdat any

$_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink12LayoutObject6lengthEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink14LayoutReplaced8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ = comdat any

$_ZNK5blink9LayoutBox11OffsetWidthEv = comdat any

$_ZNK5blink9LayoutBox12OffsetHeightEv = comdat any

$_ZNK5blink9LayoutBox17BorderBoundingBoxEv = comdat any

$_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10PaddingTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12PaddingRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject9BorderTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12BorderBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10BorderLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11BorderRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv = comdat any

$_ZNK5blink9LayoutBox9MarginTopEv = comdat any

$_ZNK5blink9LayoutBox12MarginBottomEv = comdat any

$_ZNK5blink9LayoutBox10MarginLeftEv = comdat any

$_ZNK5blink9LayoutBox11MarginRightEv = comdat any

$_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE = comdat any

$_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv = comdat any

$_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv = comdat any

$_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv = comdat any

$_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv = comdat any

$_ZNK5blink9LayoutBox20CollapsedMarginAfterEv = comdat any

$_ZNK5blink9LayoutBox23IsInSelfHitTestingPhaseENS_13HitTestActionE = comdat any

$_ZNK5blink14LayoutReplaced29IntrinsicContentLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv = comdat any

$_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowXEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowYEv = comdat any

$_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE = comdat any

$_ZNK5blink9LayoutBox20FirstLineBoxBaselineEv = comdat any

$_ZNK5blink9LayoutBox19InlineBlockBaselineENS_17LineDirectionModeE = comdat any

$_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv = comdat any

$_ZNK5blink9LayoutBox32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE = comdat any

$_ZNK5blink9LayoutBox22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE = comdat any

$_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ = comdat any

$_ZNK5blink14LayoutReplaced31DrawsBackgroundOntoContentLayerEv = comdat any

$_ZNK5blink14LayoutReplaced13PaintReplacedERKNS_9PaintInfoERKNS_14PhysicalOffsetE = comdat any

$_ZNK5blink14LayoutReplaced21MinimumReplacedHeightEv = comdat any

$_ZNK5blink10LengthSizeeqERKS0_ = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZNK5blink14LineLayoutItem5StyleEb = comdat any

$_ZNK5blink9LayoutBox19ContentLogicalWidthEv = comdat any

@_ZN5blink14LayoutReplaced13kDefaultWidthE = hidden local_unnamed_addr constant i32 300, align 4
@_ZN5blink14LayoutReplaced14kDefaultHeightE = hidden local_unnamed_addr constant i32 150, align 4
@_ZTVN5blink14LayoutReplacedE = hidden unnamed_addr constant { [203 x i8*], [7 x i8*] } { [203 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutReplaced"*)* @_ZN5blink14LayoutReplacedD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutReplaced"*)* @_ZN5blink14LayoutReplacedD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i8*, i32)* @_ZN5blink9LayoutBox12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutReplaced"*)* @_ZNK5blink14LayoutReplaced15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject8AddChildEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject11RemoveChildEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutReplaced"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink14LayoutReplaced5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutReplaced"*)* @_ZN5blink14LayoutReplaced20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutReplaced"*)* @_ZN5blink14LayoutReplaced12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutReplaced"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink14LayoutReplaced16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.WTF::Vector.2253"*, i32)* @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutReplaced"*)* @_ZNK5blink14LayoutReplaced22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutReplaced"*)* @_ZNK5blink14LayoutReplaced24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink9LayoutBox14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.WTF::Vector.2254"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink9LayoutBox15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink9LayoutBox15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i8)* @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutReplaced"*, i32)* @_ZNK5blink14LayoutReplaced8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink9LayoutBox15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutReplaced"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink14LayoutReplaced14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i1)* @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutReplaced"*)* @_ZN5blink14LayoutReplaced15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ to i8*), i8* bitcast (%"class.blink::LayoutBlock"* (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11OffsetWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12OffsetHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LayerTypeRequiredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15UpdateFromStyleEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17BorderBoundingBoxEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject9BorderTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11BorderRightEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9MarginTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12MarginBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10MarginLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11MarginRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i1, i32, i32)* @_ZNK5blink9LayoutBox10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32, i1, i32, i32)* @_ZNK5blink9LayoutBox16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)* @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2253"*, i32)* @_ZNK5blink20LayoutBoxModelObject20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2253"*)* @_ZNK5blink20LayoutBoxModelObject17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LocationContainerEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox14HasTopOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox15HasLeftOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox17UpdateAfterLayoutEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11ScrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12ScrollHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox20CollapsedMarginAfterEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox23IsInSelfHitTestingPhaseENS_13HitTestActionE to i8*), i8* bitcast (%"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15CreateInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10BreakAfterEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11BreakBeforeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13StartPageNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11EndPageNameEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox18UpdateLogicalWidthEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i64 (%"class.blink::LayoutReplaced"*)* @_ZNK5blink14LayoutReplaced13IntrinsicSizeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutReplaced"*)* @_ZNK5blink14LayoutReplaced29IntrinsicContentLogicalHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutReplaced"*, i32)* @_ZNK5blink14LayoutReplaced27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE to i8*), i8* bitcast (i32 (%"class.blink::LayoutReplaced"*, i32)* @_ZNK5blink14LayoutReplaced28ComputeReplacedLogicalHeightENS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)* @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowXEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowYEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox20FirstLineBoxBaselineEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox19InlineBlockBaselineENS_17LineDirectionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutReplaced"*)* @_ZNK5blink14LayoutReplaced33NeedsPreferredWidthsRecalculationEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*)* @_ZNK5blink9LayoutBox32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i64 (%"class.blink::LayoutReplaced"*)* @_ZNK5blink14LayoutReplaced29ComputeIntrinsicLogicalWidthsEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox23ComputeOverflowClipAxesEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)* @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv to i8*), i8* bitcast (void (%"class.blink::LayoutReplaced"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink14LayoutReplaced29ComputePositionedLogicalWidthERNS_9LayoutBox27LogicalExtentComputedValuesE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::LayoutReplaced"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink14LayoutReplaced30ComputePositionedLogicalHeightERNS_9LayoutBox27LogicalExtentComputedValuesE to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutReplaced"*)* @_ZNK5blink14LayoutReplaced19ReplacedContentRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutReplaced"*)* @_ZNK5blink14LayoutReplaced31DrawsBackgroundOntoContentLayerEv to i8*), i8* bitcast (void (%"class.blink::LayoutReplaced"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink14LayoutReplaced13PaintReplacedERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutReplaced"*, %"struct.blink::IntrinsicSizingInfo"*)* @_ZNK5blink14LayoutReplaced26ComputeIntrinsicSizingInfoERNS_19IntrinsicSizingInfoE to i8*), i8* bitcast (void (%"class.blink::LayoutReplaced"*)* @_ZN5blink14LayoutReplaced20IntrinsicSizeChangedEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutReplaced"*)* @_ZNK5blink14LayoutReplaced21MinimumReplacedHeightEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutReplaced"*)* @_ZThn8_N5blink14LayoutReplacedD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutReplaced"*)* @_ZThn8_N5blink14LayoutReplacedD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*)] }, align 8
@_ZN5blink26layout_invalidation_reason12kSizeChangedE = external constant [0 x i8], align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@.str.3 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1

@_ZN5blink14LayoutReplacedD1Ev = hidden unnamed_addr alias void (%"class.blink::LayoutReplaced"*), void (%"class.blink::LayoutReplaced"*)* @_ZN5blink14LayoutReplacedD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutReplacedC2EPNS_7ElementE(%"class.blink::LayoutReplaced"*, %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBoxC2EPNS_13ContainerNodeE(%"class.blink::LayoutBox"* %3, %"class.blink::ContainerNode"* %4) #13
  %5 = bitcast %"class.blink::LayoutReplaced"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [203 x i8*], [7 x i8*] }, { [203 x i8*], [7 x i8*] }* @_ZTVN5blink14LayoutReplacedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [203 x i8*], [7 x i8*] }, { [203 x i8*], [7 x i8*] }* @_ZTVN5blink14LayoutReplacedE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 19200, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 1, i32 1, i32 0
  store i32 9600, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = or i96 %10, 1073741824
  store i96 %11, i96* %9, align 4
  ret void
}

declare void @_ZN5blink9LayoutBoxC2EPNS_13ContainerNodeE(%"class.blink::LayoutBox"*, %"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutReplacedC2EPNS_7ElementERKNS_10LayoutSizeE(%"class.blink::LayoutReplaced"*, %"class.blink::Element"*, %"class.blink::LayoutSize"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBoxC2EPNS_13ContainerNodeE(%"class.blink::LayoutBox"* %4, %"class.blink::ContainerNode"* %5) #13
  %6 = bitcast %"class.blink::LayoutReplaced"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [203 x i8*], [7 x i8*] }, { [203 x i8*], [7 x i8*] }* @_ZTVN5blink14LayoutReplacedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [203 x i8*], [7 x i8*] }, { [203 x i8*], [7 x i8*] }* @_ZTVN5blink14LayoutReplacedE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 1
  %8 = bitcast %"class.blink::LayoutSize"* %2 to i64*
  %9 = bitcast %"class.blink::LayoutSize"* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = or i96 %13, 1073741824
  store i96 %14, i96* %12, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN5blink9LayoutBoxD2Ev(%"class.blink::LayoutBox"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutReplacedD2Ev(%"class.blink::LayoutReplaced"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBoxD2Ev(%"class.blink::LayoutBox"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink14LayoutReplacedD1Ev(%"class.blink::LayoutReplaced"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 -1, i32 1
  %3 = bitcast %"class.blink::LayoutSize"* %2 to %"class.blink::LayoutBox"*
  tail call void @_ZN5blink9LayoutBoxD2Ev(%"class.blink::LayoutBox"* %3) #13
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutReplacedD0Ev(%"class.blink::LayoutReplaced"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn8_N5blink14LayoutReplacedD0Ev(%"class.blink::LayoutReplaced"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutReplaced15WillBeDestroyedEv(%"class.blink::LayoutReplaced"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %13

6:                                                ; preds = %1, %6
  %7 = phi %"class.blink::LayoutObject"* [ %9, %6 ], [ %2, %1 ]
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 7
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %6, label %13

13:                                               ; preds = %6, %1
  %14 = phi %"class.blink::Node"* [ %4, %1 ], [ %11, %6 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 5, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 19
  br i1 %21, label %31, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutObject"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.blink::LayoutObject"* %24 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)***
  %28 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)** %28, i64 65
  %30 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)** %29, align 8
  tail call void %30(%"class.blink::LayoutObject"* nonnull %24, %"class.blink::LayoutObject"* %2, i32 1) #13
  br label %31

31:                                               ; preds = %22, %26, %13
  %32 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBox15WillBeDestroyedEv(%"class.blink::LayoutBox"* %32) #13
  ret void
}

declare void @_ZN5blink9LayoutBox15WillBeDestroyedEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutReplaced14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutReplaced"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBox14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBox"* %5, i32 %1, %"class.blink::ComputedStyle"* %2) #13
  %6 = icmp eq %"class.blink::ComputedStyle"* %2, null
  br i1 %6, label %51, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 7, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %11, i64 0, i32 5
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 7, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %14, i64 0, i32 5
  %16 = tail call zeroext i1 @_ZNK5blink10LengthSizeeqERKS0_(%"class.blink::LengthSize"* %12, %"class.blink::LengthSize"* dereferenceable(16) %15) #13
  br i1 %16, label %17, label %35

17:                                               ; preds = %7
  %18 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %10, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %18, i64 0, i32 6
  %20 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %13, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 6
  %22 = tail call zeroext i1 @_ZNK5blink10LengthSizeeqERKS0_(%"class.blink::LengthSize"* %19, %"class.blink::LengthSize"* dereferenceable(16) %21) #13
  br i1 %22, label %23, label %35

23:                                               ; preds = %17
  %24 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %10, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 3
  %26 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %13, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %26, i64 0, i32 3
  %28 = tail call zeroext i1 @_ZNK5blink10LengthSizeeqERKS0_(%"class.blink::LengthSize"* %25, %"class.blink::LengthSize"* dereferenceable(16) %27) #13
  br i1 %28, label %29, label %35

29:                                               ; preds = %23
  %30 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %10, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %30, i64 0, i32 4
  %32 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %13, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 4
  %34 = tail call zeroext i1 @_ZNK5blink10LengthSizeeqERKS0_(%"class.blink::LengthSize"* %31, %"class.blink::LengthSize"* dereferenceable(16) %33) #13
  br i1 %34, label %44, label %35

35:                                               ; preds = %7, %17, %23, %29
  tail call void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"* %4) #13
  %36 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %36, align 8
  %38 = icmp eq %"struct.blink::FragmentData::RareData"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %40, align 8
  %42 = icmp eq %"class.blink::PaintLayer"* %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  tail call void @_ZN5blink10PaintLayer31SetNeedsCompositingInputsUpdateEb(%"class.blink::PaintLayer"* nonnull %41, i1 zeroext true) #13
  br label %44

44:                                               ; preds = %35, %29, %43, %39
  %45 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %46, i64 0, i32 2, i32 0, i32 0
  %48 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %48, i64 0, i32 6
  %50 = load float, float* %49, align 8
  br label %51

51:                                               ; preds = %3, %44
  %52 = phi float [ %50, %44 ], [ 1.000000e+00, %3 ]
  %53 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %53, align 8
  %55 = icmp eq %"class.blink::ComputedStyle"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 1, i32 0, i32 0
  %58 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %58, i64 0, i32 2, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %60, i64 0, i32 6
  %62 = load float, float* %61, align 8
  %63 = fcmp une float %62, %52
  br i1 %63, label %64, label %69

64:                                               ; preds = %56
  %65 = bitcast %"class.blink::LayoutReplaced"* %0 to void (%"class.blink::LayoutReplaced"*)***
  %66 = load void (%"class.blink::LayoutReplaced"*)**, void (%"class.blink::LayoutReplaced"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::LayoutReplaced"*)*, void (%"class.blink::LayoutReplaced"*)** %66, i64 199
  %68 = load void (%"class.blink::LayoutReplaced"*)*, void (%"class.blink::LayoutReplaced"*)** %67, align 8
  tail call void %68(%"class.blink::LayoutReplaced"* %0) #13
  br label %69

69:                                               ; preds = %51, %64, %56
  ret void
}

declare void @_ZN5blink9LayoutBox14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink10PaintLayer31SetNeedsCompositingInputsUpdateEb(%"class.blink::PaintLayer"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutReplaced12UpdateLayoutEv(%"class.blink::LayoutReplaced"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutAnalyzer::Scope", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  call void @_ZN5blink14LayoutAnalyzer5ScopeC1ERKNS_12LayoutObjectE(%"class.blink::LayoutAnalyzer::Scope"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %3) #13
  %6 = bitcast %"class.blink::LayoutReplaced"* %0 to { i64, i64 } (%"class.blink::LayoutReplaced"*)***
  %7 = load { i64, i64 } (%"class.blink::LayoutReplaced"*)**, { i64, i64 } (%"class.blink::LayoutReplaced"*)*** %6, align 8
  %8 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutReplaced"*)*, { i64, i64 } (%"class.blink::LayoutReplaced"*)** %7, i64 195
  %9 = load { i64, i64 } (%"class.blink::LayoutReplaced"*)*, { i64, i64 } (%"class.blink::LayoutReplaced"*)** %8, align 8
  %10 = call { i64, i64 } %9(%"class.blink::LayoutReplaced"* %0) #13
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = trunc i64 %11 to i32
  %13 = lshr i64 %11, 32
  %14 = trunc i64 %13 to i32
  %15 = extractvalue { i64, i64 } %10, 1
  %16 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %17 = bitcast %"class.blink::LayoutReplaced"* %0 to i32 (%"class.blink::LayoutReplaced"*)***
  %18 = load i32 (%"class.blink::LayoutReplaced"*)**, i32 (%"class.blink::LayoutReplaced"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::LayoutReplaced"*)*, i32 (%"class.blink::LayoutReplaced"*)** %18, i64 200
  %20 = load i32 (%"class.blink::LayoutReplaced"*)*, i32 (%"class.blink::LayoutReplaced"*)** %19, align 8
  %21 = call i32 %20(%"class.blink::LayoutReplaced"* %0) #13
  %22 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, %21
  br i1 %24, label %26, label %25

25:                                               ; preds = %1
  store i32 %21, i32* %22, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %16) #13
  br label %26

26:                                               ; preds = %1, %25
  %27 = bitcast %"class.blink::LayoutReplaced"* %0 to void (%"class.blink::LayoutBox"*)***
  %28 = load void (%"class.blink::LayoutBox"*)**, void (%"class.blink::LayoutBox"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %28, i64 163
  %30 = load void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %29, align 8
  call void %30(%"class.blink::LayoutBox"* %16) #13
  call void @_ZN5blink9LayoutBox19UpdateLogicalHeightEv(%"class.blink::LayoutBox"* %16) #13
  call void @_ZN5blink9LayoutBox19ClearLayoutOverflowEv(%"class.blink::LayoutBox"* %16) #13
  %31 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %32 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %31 to i96*
  %33 = load i96, i96* %32, align 4
  %34 = and i96 %33, -193
  store i96 %34, i96* %32, align 4
  %35 = load void (%"class.blink::LayoutBox"*)**, void (%"class.blink::LayoutBox"*)*** %27, align 8
  %36 = getelementptr inbounds void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %35, i64 151
  %37 = load void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %36, align 8
  call void %37(%"class.blink::LayoutBox"* %16) #13
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %3)
  %38 = load { i64, i64 } (%"class.blink::LayoutReplaced"*)**, { i64, i64 } (%"class.blink::LayoutReplaced"*)*** %6, align 8
  %39 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutReplaced"*)*, { i64, i64 } (%"class.blink::LayoutReplaced"*)** %38, i64 195
  %40 = load { i64, i64 } (%"class.blink::LayoutReplaced"*)*, { i64, i64 } (%"class.blink::LayoutReplaced"*)** %39, align 8
  %41 = call { i64, i64 } %40(%"class.blink::LayoutReplaced"* %0) #13
  %42 = extractvalue { i64, i64 } %41, 0
  %43 = trunc i64 %42 to i32
  %44 = lshr i64 %42, 32
  %45 = trunc i64 %44 to i32
  %46 = extractvalue { i64, i64 } %41, 1
  %47 = icmp eq i32 %12, %43
  %48 = icmp eq i32 %14, %45
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %60

50:                                               ; preds = %26
  %51 = trunc i64 %15 to i32
  %52 = trunc i64 %46 to i32
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = lshr i64 %15, 32
  %56 = trunc i64 %55 to i32
  %57 = lshr i64 %46, 32
  %58 = trunc i64 %57 to i32
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %61, label %60

60:                                               ; preds = %54, %26, %50
  call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %3, i8 zeroext 3) #13
  br label %61

61:                                               ; preds = %54, %60
  call void @_ZN5blink14LayoutAnalyzer5ScopeD1Ev(%"class.blink::LayoutAnalyzer::Scope"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret void
}

declare void @_ZN5blink14LayoutAnalyzer5ScopeC1ERKNS_12LayoutObjectE(%"class.blink::LayoutAnalyzer::Scope"*, %"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #1

declare void @_ZN5blink9LayoutBox19UpdateLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox19ClearLayoutOverflowEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, -824633720840
  %6 = or i96 %5, 274877906944
  store i96 %6, i96* %3, align 4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = and i96 %4, 16777216
  %10 = icmp eq i96 %9, 0
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %27

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 67108876
  %20 = icmp eq i32 %19, 67108864
  br i1 %20, label %21, label %27, !prof !3

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %22) #13
  %24 = icmp eq %"class.blink::DisplayLockContext"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %23) #13
  br i1 %26, label %27, label %30

27:                                               ; preds = %25, %21, %16, %12, %1
  %28 = load i96, i96* %3, align 4
  %29 = and i96 %28, -57
  store i96 %29, i96* %3, align 4
  br label %55

30:                                               ; preds = %25
  %31 = load i96, i96* %3, align 4
  %32 = and i96 %31, 56
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %30
  %35 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !2
  %36 = icmp ne i8 %35, 0
  %37 = and i96 %31, 16777216
  %38 = icmp eq i96 %37, 0
  %39 = and i1 %38, %36
  br i1 %39, label %40, label %51

40:                                               ; preds = %34
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 67108876
  %47 = icmp eq i32 %46, 67108864
  br i1 %47, label %48, label %51, !prof !3

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %50 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %49) #13
  br label %51

51:                                               ; preds = %48, %43, %40, %34
  %52 = phi %"class.blink::DisplayLockContext"* [ null, %34 ], [ %50, %48 ], [ null, %43 ], [ null, %40 ]
  %53 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %52, i64 0, i32 14
  store i8 1, i8* %53, align 2
  %54 = load i96, i96* %3, align 4
  br label %55

55:                                               ; preds = %27, %30, %51
  %56 = phi i96 [ %31, %30 ], [ %54, %51 ], [ %29, %27 ]
  %57 = and i96 %56, -1125899906842625
  store i96 %57, i96* %3, align 4
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %0) #13
  ret void
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14LayoutAnalyzer5ScopeD1Ev(%"class.blink::LayoutAnalyzer::Scope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutReplaced20IntrinsicSizeChangedEv(%"class.blink::LayoutReplaced"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %4 = bitcast %"class.blink::ComputedStyle"** %3 to %"class.blink::ComputedStyleBase"**
  %5 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %9, i64 0, i32 6
  %11 = load float, float* %10, align 8
  %12 = fmul float %11, 3.000000e+02
  %13 = fptosi float %12 to i32
  %14 = fmul float %11, 1.500000e+02
  %15 = fptosi float %14 to i32
  %16 = icmp sgt i32 %13, 33554431
  br i1 %16, label %22, label %17

17:                                               ; preds = %1
  %18 = icmp slt i32 %13, -33554432
  %19 = shl i32 %13, 6
  %20 = select i1 %18, i32 -2147483648, i32 %19
  %21 = zext i32 %20 to i64
  br label %22

22:                                               ; preds = %17, %1
  %23 = phi i64 [ 2147483647, %1 ], [ %21, %17 ]
  %24 = icmp sgt i32 %15, 33554431
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = icmp slt i32 %15, -33554432
  %27 = shl i32 %15, 6
  %28 = select i1 %26, i32 -2147483648, i32 %27
  %29 = zext i32 %28 to i64
  %30 = shl nuw i64 %29, 32
  br label %31

31:                                               ; preds = %25, %22
  %32 = phi i64 [ 9223372032559808512, %22 ], [ %30, %25 ]
  %33 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 1
  %34 = bitcast %"class.blink::LayoutSize"* %33 to i64*
  %35 = or i64 %32, %23
  store i64 %35, i64* %34, align 8
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason12kSizeChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #13
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %2, i8 zeroext 3) #13
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %2, i32 1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14LayoutReplaced5PaintERKNS_9PaintInfoE(%"class.blink::LayoutReplaced"*, %"struct.blink::PaintInfo"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ReplacedPainter", align 8
  %4 = bitcast %"class.blink::ReplacedPainter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.blink::ReplacedPainter", %"class.blink::ReplacedPainter"* %3, i64 0, i32 0
  store %"class.blink::LayoutReplaced"* %0, %"class.blink::LayoutReplaced"** %5, align 8
  call void @_ZN5blink15ReplacedPainter5PaintERKNS_9PaintInfoE(%"class.blink::ReplacedPainter"* nonnull %3, %"struct.blink::PaintInfo"* dereferenceable(56) %1) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

declare void @_ZN5blink15ReplacedPainter5PaintERKNS_9PaintInfoE(%"class.blink::ReplacedPainter"*, %"struct.blink::PaintInfo"* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14LayoutReplaced24HasReplacedLogicalHeightEv(%"class.blink::LayoutReplaced"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 8
  %13 = select i1 %8, %"class.blink::Length"* %11, %"class.blink::Length"* %12
  %14 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 2
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %23 [
    i8 0, label %16
    i8 2, label %26
    i8 8, label %19
    i8 1, label %19
  ]

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %18 = tail call zeroext i1 @_ZNK5blink9LayoutBox22StretchBlockSizeIfAutoEv(%"class.blink::LayoutBox"* %17) #13
  br label %26

19:                                               ; preds = %1, %1
  %20 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0
  %21 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject44HasAutoHeightOrContainingBlockWithAutoHeightENS0_28RegisterPercentageDescendantE(%"class.blink::LayoutBoxModelObject"* %20, i32 1) #13
  %22 = xor i1 %21, true
  br label %26

23:                                               ; preds = %1
  %24 = add i8 %15, -3
  %25 = icmp ult i8 %24, 5
  br label %26

26:                                               ; preds = %1, %23, %19, %16
  %27 = phi i1 [ %18, %16 ], [ %22, %19 ], [ %25, %23 ], [ true, %1 ]
  ret i1 %27
}

declare zeroext i1 @_ZNK5blink9LayoutBox22StretchBlockSizeIfAutoEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject44HasAutoHeightOrContainingBlockWithAutoHeightENS0_28RegisterPercentageDescendantE(%"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14LayoutReplaced33NeedsPreferredWidthsRecalculationEv(%"class.blink::LayoutReplaced"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"* %2) #13
  br i1 %3, label %4, label %20

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 0
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 5, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %13, i64 0, i32 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %13, i64 0, i32 3
  %16 = select i1 %11, %"class.blink::Length"* %14, %"class.blink::Length"* %15
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br label %20

20:                                               ; preds = %4, %1
  %21 = phi i1 [ false, %1 ], [ %19, %4 ]
  ret i1 %21
}

declare zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutReplaced20RecalcVisualOverflowEv(%"class.blink::LayoutReplaced"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBox19ClearVisualOverflowEv(%"class.blink::LayoutBox"* %3) #13
  tail call void @_ZN5blink12LayoutObject20RecalcVisualOverflowEv(%"class.blink::LayoutObject"* %2) #13
  %4 = bitcast %"class.blink::LayoutReplaced"* %0 to void (%"class.blink::LayoutBox"*)***
  %5 = load void (%"class.blink::LayoutBox"*)**, void (%"class.blink::LayoutBox"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %5, i64 150
  %7 = load void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutBox"* %3) #13
  ret void
}

declare void @_ZN5blink9LayoutBox19ClearVisualOverflowEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject20RecalcVisualOverflowEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14LayoutReplaced44ComputeIntrinsicSizingInfoForReplacedContentERNS_19IntrinsicSizingInfoE(%"class.blink::LayoutReplaced"*, %"struct.blink::IntrinsicSizingInfo"* dereferenceable(20)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %11, i64 0, i32 45
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 24
  %15 = icmp eq i32 %14, 24
  br i1 %15, label %16, label %152

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = and i96 %19, 1207959552
  %21 = icmp eq i96 %20, 134217728
  br i1 %21, label %152, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.blink::LayoutReplaced"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %24 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, i64 92
  %26 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::LayoutObject"* %3, i32 43) #13
  br i1 %27, label %152, label %28

28:                                               ; preds = %22
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, i64 92
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* %3, i32 46) #13
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, i64 92
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutObject"* %3, i32 48) #13
  br i1 %37, label %53, label %38

38:                                               ; preds = %33
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, i64 92
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* %3, i32 45) #13
  br i1 %42, label %53, label %43

43:                                               ; preds = %38
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, i64 92
  %46 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %45, align 8
  %47 = tail call zeroext i1 %46(%"class.blink::LayoutObject"* %3, i32 49) #13
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, i64 92
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::LayoutObject"* %3, i32 50) #13
  br i1 %52, label %53, label %58

53:                                               ; preds = %48, %43, %38, %33, %28
  %54 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %55 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %54, i64 92
  %56 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %55, align 8
  %57 = tail call zeroext i1 %56(%"class.blink::LayoutObject"* %3, i32 45) #13
  br i1 %57, label %58, label %152

58:                                               ; preds = %48, %53
  %59 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %60 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, i64 92
  %61 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.blink::LayoutObject"* %3, i32 44) #13
  br i1 %62, label %152, label %63

63:                                               ; preds = %58
  %64 = bitcast %"struct.blink::IntrinsicSizingInfo"* %1 to i32*
  store i32 0, i32* %64, align 4
  %65 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 0, i32 1
  %66 = bitcast float* %65 to i32*
  store i32 0, i32* %66, align 4
  %67 = bitcast %"class.blink::ComputedStyle"** %4 to %"class.blink::ComputedStyleBase"**
  %68 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %68, i64 0, i32 5, i32 0, i32 0
  %70 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %70, i64 0, i32 1, i32 1, i32 0
  %72 = load float, float* %71, align 4
  %73 = fcmp oeq float %72, 0.000000e+00
  %74 = bitcast %"class.blink::ComputedStyleBase"* %68 to %"class.blink::ComputedStyle"*
  br i1 %73, label %98, label %75

75:                                               ; preds = %63
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %70, i64 0, i32 1, i32 1, i32 1
  %77 = load float, float* %76, align 4
  %78 = fcmp oeq float %77, 0.000000e+00
  %79 = fcmp olt float %72, 1.562500e-02
  %80 = or i1 %79, %78
  %81 = fcmp olt float %77, 1.562500e-02
  %82 = or i1 %81, %80
  br i1 %82, label %98, label %83

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %70, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 4
  %86 = and i8 %85, 3
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %70, i64 0, i32 1, i32 1
  %90 = bitcast %"class.blink::FloatSize"* %89 to <2 x float>*
  %91 = load <2 x float>, <2 x float>* %90, align 4
  %92 = extractelement <2 x float> %91, i32 0
  %93 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 1, i32 0
  store float %92, float* %93, align 4
  %94 = load <2 x float>, <2 x float>* %90, align 4
  %95 = extractelement <2 x float> %94, i32 1
  %96 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 1, i32 1
  store float %95, float* %96, align 4
  %97 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  br label %98

98:                                               ; preds = %63, %75, %88, %83
  %99 = phi %"class.blink::ComputedStyle"* [ %74, %63 ], [ %74, %75 ], [ %97, %88 ], [ %74, %83 ]
  %100 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %101 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %99, i64 0, i32 0, i32 9
  %102 = bitcast [20 x i8]* %101 to i160*
  %103 = load i160, i160* %102, align 8
  %104 = and i160 %103, 15211807202738752817960438464512
  %105 = icmp eq i160 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %98
  %107 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %100) #13
  br i1 %107, label %110, label %126

108:                                              ; preds = %98
  %109 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %100) #13
  br i1 %109, label %110, label %126

110:                                              ; preds = %106, %108
  %111 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %112 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %111, i64 0, i32 0, i32 9
  %113 = bitcast [20 x i8]* %112 to i160*
  %114 = load i160, i160* %113, align 8
  %115 = and i160 %114, 15211807202738752817960438464512
  %116 = icmp eq i160 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %110
  %118 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %100) #13
  br label %121

119:                                              ; preds = %110
  %120 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %100) #13
  br label %121

121:                                              ; preds = %117, %119
  %122 = phi i32 [ %118, %117 ], [ %120, %119 ]
  %123 = sitofp i32 %122 to float
  %124 = fmul float %123, 1.562500e-02
  %125 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 0, i32 0
  store float %124, float* %125, align 4
  br label %126

126:                                              ; preds = %106, %121, %108
  %127 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %128 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %127, i64 0, i32 0, i32 9
  %129 = bitcast [20 x i8]* %128 to i160*
  %130 = load i160, i160* %129, align 8
  %131 = and i160 %130, 15211807202738752817960438464512
  %132 = icmp eq i160 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %126
  %134 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %100) #13
  br i1 %134, label %137, label %210

135:                                              ; preds = %126
  %136 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %100) #13
  br i1 %136, label %137, label %210

137:                                              ; preds = %133, %135
  %138 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %139 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %138, i64 0, i32 0, i32 9
  %140 = bitcast [20 x i8]* %139 to i160*
  %141 = load i160, i160* %140, align 8
  %142 = and i160 %141, 15211807202738752817960438464512
  %143 = icmp eq i160 %142, 0
  br i1 %143, label %144, label %146

144:                                              ; preds = %137
  %145 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %100) #13
  br label %148

146:                                              ; preds = %137
  %147 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %100) #13
  br label %148

148:                                              ; preds = %144, %146
  %149 = phi i32 [ %145, %144 ], [ %147, %146 ]
  %150 = sitofp i32 %149 to float
  %151 = fmul float %150, 1.562500e-02
  store float %151, float* %65, align 4
  br label %210

152:                                              ; preds = %58, %16, %22, %53, %2
  %153 = bitcast %"class.blink::LayoutReplaced"* %0 to void (%"class.blink::LayoutReplaced"*, %"struct.blink::IntrinsicSizingInfo"*)***
  %154 = load void (%"class.blink::LayoutReplaced"*, %"struct.blink::IntrinsicSizingInfo"*)**, void (%"class.blink::LayoutReplaced"*, %"struct.blink::IntrinsicSizingInfo"*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.blink::LayoutReplaced"*, %"struct.blink::IntrinsicSizingInfo"*)*, void (%"class.blink::LayoutReplaced"*, %"struct.blink::IntrinsicSizingInfo"*)** %154, i64 198
  %156 = load void (%"class.blink::LayoutReplaced"*, %"struct.blink::IntrinsicSizingInfo"*)*, void (%"class.blink::LayoutReplaced"*, %"struct.blink::IntrinsicSizingInfo"*)** %155, align 8
  tail call void %156(%"class.blink::LayoutReplaced"* %0, %"struct.blink::IntrinsicSizingInfo"* dereferenceable(20) %1) #13
  %157 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 1, i32 0
  %158 = load float, float* %157, align 4
  %159 = fcmp ugt float %158, 0.000000e+00
  br i1 %159, label %160, label %210

160:                                              ; preds = %152
  %161 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 1, i32 1
  %162 = load float, float* %161, align 4
  %163 = fcmp ugt float %162, 0.000000e+00
  br i1 %163, label %164, label %210

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 0, i32 0
  %166 = load float, float* %165, align 4
  %167 = fcmp ugt float %166, 0.000000e+00
  br i1 %167, label %168, label %210

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 0, i32 1
  %170 = load float, float* %169, align 4
  %171 = fcmp ugt float %170, 0.000000e+00
  br i1 %171, label %172, label %210

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %174 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %173 to i96*
  %175 = load i96, i96* %174, align 4
  %176 = trunc i96 %175 to i32
  %177 = icmp slt i32 %176, 0
  br i1 %177, label %178, label %181

178:                                              ; preds = %172
  %179 = bitcast %"struct.blink::IntrinsicSizingInfo"* %1 to <2 x float>*
  %180 = load <2 x float>, <2 x float>* %179, align 4
  br label %184

181:                                              ; preds = %172
  %182 = insertelement <2 x float> undef, float %170, i32 0
  %183 = insertelement <2 x float> %182, float %166, i32 1
  br label %184

184:                                              ; preds = %181, %178
  %185 = phi <2 x float> [ %180, %178 ], [ %183, %181 ]
  %186 = extractelement <2 x float> %185, i32 0
  %187 = fmul float %186, 6.400000e+01
  %188 = fcmp ult float %187, 0xC1E0000000000000
  %189 = fcmp ugt float %187, 0x41DFFFFFE0000000
  %190 = fcmp ogt float %187, 0xC1E0000000000000
  %191 = select i1 %190, float %187, float 0xC1E0000000000000
  %192 = fptosi float %191 to i32
  %193 = select i1 %188, i32 0, i32 2147483647
  %194 = select i1 %189, i32 %193, i32 %192
  %195 = extractelement <2 x float> %185, i32 1
  %196 = fmul float %195, 6.400000e+01
  %197 = fcmp ult float %196, 0xC1E0000000000000
  %198 = fcmp ugt float %196, 0x41DFFFFFE0000000
  %199 = fcmp ogt float %196, 0xC1E0000000000000
  %200 = select i1 %199, float %196, float 0xC1E0000000000000
  %201 = fptosi float %200 to i32
  %202 = select i1 %197, i32 0, i32 2147483647
  %203 = select i1 %198, i32 %202, i32 %201
  %204 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 1
  %205 = bitcast %"class.blink::LayoutSize"* %204 to i64*
  %206 = zext i32 %203 to i64
  %207 = shl nuw i64 %206, 32
  %208 = zext i32 %194 to i64
  %209 = or i64 %207, %208
  store i64 %209, i64* %205, align 8
  br label %210

210:                                              ; preds = %168, %160, %164, %152, %133, %135, %148, %184
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK5blink14LayoutReplaced30ConstrainIntrinsicSizeToMinMaxERKNS_19IntrinsicSizingInfoE(%"class.blink::LayoutReplaced"*, %"struct.blink::IntrinsicSizingInfo"* nocapture readonly dereferenceable(20)) local_unnamed_addr #7 align 2 {
  %3 = bitcast %"struct.blink::IntrinsicSizingInfo"* %1 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 1, i32 0
  %6 = load float, float* %5, align 4
  %7 = fcmp ugt float %6, 0.000000e+00
  %8 = extractelement <2 x float> %4, i32 0
  br i1 %7, label %9, label %59

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 1, i32 1
  %11 = load float, float* %10, align 4
  %12 = fcmp ugt float %11, 0.000000e+00
  br i1 %12, label %13, label %59

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 0, i32 0
  %15 = fcmp ugt float %8, 0.000000e+00
  br i1 %15, label %16, label %59

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = fcmp ugt float %18, 0.000000e+00
  br i1 %19, label %20, label %59

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = and i160 %25, 15211807202738752817960438464512
  %27 = icmp eq i160 %26, 0
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 5, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %29, i64 0, i32 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %29, i64 0, i32 3
  %32 = select i1 %27, %"class.blink::Length"* %30, %"class.blink::Length"* %31
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %32, i64 0, i32 2
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %59

36:                                               ; preds = %20
  %37 = select i1 %27, %"class.blink::Length"* %31, %"class.blink::Length"* %30
  %38 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %37, i64 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %59

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %43 = tail call i32 @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %42, i32 0) #13
  %44 = load float, float* %14, align 4
  %45 = sitofp i32 %43 to float
  %46 = fmul float %45, 1.562500e-02
  %47 = fmul float %44, %46
  %48 = load float, float* %17, align 4
  %49 = fdiv float %47, %48
  %50 = insertelement <2 x float> undef, float %49, i32 0
  %51 = tail call i32 @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"* %42, i32 0) #13
  %52 = load float, float* %17, align 4
  %53 = sitofp i32 %51 to float
  %54 = fmul float %53, 1.562500e-02
  %55 = fmul float %52, %54
  %56 = load float, float* %14, align 4
  %57 = fdiv float %55, %56
  %58 = insertelement <2 x float> %50, float %57, i32 1
  br label %59

59:                                               ; preds = %16, %9, %13, %2, %41, %36, %20
  %60 = phi <2 x float> [ %4, %9 ], [ %4, %16 ], [ %58, %41 ], [ %4, %36 ], [ %4, %20 ], [ %4, %2 ], [ %4, %13 ]
  ret <2 x float> %60
}

declare i32 @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14LayoutReplaced29ComputePositionedLogicalWidthERNS_9LayoutBox27LogicalExtentComputedValuesE(%"class.blink::LayoutReplaced"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nocapture dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LineLayoutItem", align 8
  %4 = alloca %"class.blink::LineLayoutItem", align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::Length"*
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.blink::Length"*
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.blink::Length"*
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.blink::Length"*
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"class.blink::Length"*
  %15 = alloca i64, align 8
  %16 = bitcast i64* %15 to %"class.blink::Length"*
  %17 = alloca %"class.blink::LayoutUnit", align 4
  %18 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %18, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %20 = bitcast %"class.blink::LayoutObject"* %19 to %"class.blink::LayoutBoxModelObject"*
  %21 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %22 = tail call i32 @_ZNK5blink9LayoutBox40ContainingBlockLogicalWidthForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* %21, %"class.blink::LayoutBoxModelObject"* %20, i1 zeroext true) #13
  %23 = tail call i32 @_ZNK5blink9LayoutBox40ContainingBlockLogicalWidthForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* %21, %"class.blink::LayoutBoxModelObject"* %20, i1 zeroext false) #13
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 5, i32 0
  %25 = bitcast %"class.blink::ComputedStyle"** %24 to %"class.blink::ComputedStyleBase"**
  %26 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %26, i64 0, i32 9
  %28 = bitcast [20 x i8]* %27 to i160*
  %29 = load i160, i160* %28, align 8
  %30 = lshr i160 %29, 115
  %31 = trunc i160 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %34 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %33 to i96*
  %35 = load i96, i96* %34, align 4
  %36 = trunc i96 %35 to i32
  %37 = icmp slt i32 %36, 0
  %38 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  %40 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %41, i64 0, i32 0, i32 9
  %43 = bitcast [20 x i8]* %42 to i160*
  %44 = load i160, i160* %43, align 8, !noalias !4
  %45 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %41, i64 0, i32 0, i32 7, i32 0, i32 0
  %46 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %45, align 8, !noalias !4
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %46, i64 0, i32 18
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %46, i64 0, i32 8
  %49 = and i160 %44, 15211807202738752817960438464512
  %50 = icmp eq i160 %49, 0
  %51 = select i1 %50, %"class.blink::Length"* %48, %"class.blink::Length"* %47
  %52 = bitcast %"class.blink::Length"* %51 to i64*
  %53 = load i64, i64* %52, align 4
  store i64 %53, i64* %5, align 8
  %54 = and i64 %53, 280375465082880
  %55 = icmp eq i64 %54, 8796093022208
  br i1 %55, label %56, label %64

56:                                               ; preds = %2
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #13
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 9
  %59 = bitcast [20 x i8]* %58 to i160*
  %60 = load i160, i160* %59, align 8, !noalias !7
  %61 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 7, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %61, align 8, !noalias !7
  %63 = and i160 %60, 15211807202738752817960438464512
  br label %64

64:                                               ; preds = %2, %56
  %65 = phi i160 [ %49, %2 ], [ %63, %56 ]
  %66 = phi %"class.blink::ComputedStyle"* [ %41, %2 ], [ %57, %56 ]
  %67 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %46, %2 ], [ %62, %56 ]
  %68 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #13
  %69 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %67, i64 0, i32 17
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %67, i64 0, i32 7
  %72 = icmp eq i160 %65, 0
  %73 = select i1 %72, %"class.blink::Length"* %70, %"class.blink::Length"* %71
  %74 = bitcast %"class.blink::Length"* %73 to i64*
  %75 = load i64, i64* %74, align 4
  store i64 %75, i64* %7, align 8
  %76 = and i64 %75, 280375465082880
  %77 = icmp eq i64 %76, 8796093022208
  br i1 %77, label %81, label %78

78:                                               ; preds = %64
  %79 = bitcast %"class.blink::ComputedStyle"* %66 to %"class.blink::ComputedStyleBase"*
  %80 = bitcast %"class.blink::ComputedStyle"** %40 to %"class.blink::ComputedStyleBase"**
  br label %85

81:                                               ; preds = %64
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #13
  %82 = bitcast %"class.blink::ComputedStyle"** %40 to %"class.blink::ComputedStyleBase"**
  %83 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %82, align 8
  %84 = bitcast %"class.blink::ComputedStyleBase"* %83 to %"class.blink::ComputedStyle"*
  br label %85

85:                                               ; preds = %78, %81
  %86 = phi %"class.blink::ComputedStyleBase"** [ %80, %78 ], [ %82, %81 ]
  %87 = phi %"class.blink::ComputedStyle"* [ %66, %78 ], [ %84, %81 ]
  %88 = phi %"class.blink::ComputedStyleBase"* [ %79, %78 ], [ %83, %81 ]
  %89 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #13
  %90 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 2
  %91 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %88, i64 0, i32 7, i32 0, i32 0
  %92 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %92, i64 0, i32 10
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %92, i64 0, i32 12
  %95 = select i1 %37, %"class.blink::Length"* %93, %"class.blink::Length"* %94
  %96 = bitcast %"class.blink::Length"* %95 to i64*
  %97 = load i64, i64* %96, align 4
  store i64 %97, i64* %9, align 8
  %98 = and i64 %97, 280375465082880
  %99 = icmp eq i64 %98, 8796093022208
  br i1 %99, label %100, label %103

100:                                              ; preds = %85
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %10) #13
  %101 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %86, align 8
  %102 = bitcast %"class.blink::ComputedStyleBase"* %101 to %"class.blink::ComputedStyle"*
  br label %103

103:                                              ; preds = %85, %100
  %104 = phi %"class.blink::ComputedStyle"* [ %87, %85 ], [ %102, %100 ]
  %105 = phi %"class.blink::ComputedStyleBase"* [ %88, %85 ], [ %101, %100 ]
  %106 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #13
  %107 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %12, i64 0, i32 2
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %105, i64 0, i32 7, i32 0, i32 0
  %109 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %109, i64 0, i32 11
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %109, i64 0, i32 9
  %112 = select i1 %37, %"class.blink::Length"* %110, %"class.blink::Length"* %111
  %113 = bitcast %"class.blink::Length"* %112 to i64*
  %114 = load i64, i64* %113, align 4
  store i64 %114, i64* %11, align 8
  %115 = and i64 %114, 280375465082880
  %116 = icmp eq i64 %115, 8796093022208
  br i1 %116, label %117, label %119

117:                                              ; preds = %103
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %12) #13
  %118 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  br label %119

119:                                              ; preds = %103, %117
  %120 = phi %"class.blink::ComputedStyle"* [ %104, %103 ], [ %118, %117 ]
  %121 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %120, i64 0, i32 0, i32 9
  %122 = bitcast [20 x i8]* %121 to i160*
  %123 = load i160, i160* %122, align 8
  %124 = and i160 %123, 41538374868278621028243970633760768
  %125 = icmp eq i160 %124, 0
  %126 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2, i32 2
  %127 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2, i32 3
  %128 = select i1 %125, %"class.blink::LayoutUnit"* %126, %"class.blink::LayoutUnit"* %127
  %129 = select i1 %125, %"class.blink::LayoutUnit"* %127, %"class.blink::LayoutUnit"* %126
  %130 = bitcast %"class.blink::LayoutReplaced"* %0 to i32 (%"class.blink::LayoutReplaced"*, i32)***
  %131 = load i32 (%"class.blink::LayoutReplaced"*, i32)**, i32 (%"class.blink::LayoutReplaced"*, i32)*** %130, align 8
  %132 = getelementptr inbounds i32 (%"class.blink::LayoutReplaced"*, i32)*, i32 (%"class.blink::LayoutReplaced"*, i32)** %131, i64 167
  %133 = load i32 (%"class.blink::LayoutReplaced"*, i32)*, i32 (%"class.blink::LayoutReplaced"*, i32)** %132, align 8
  %134 = call i32 %133(%"class.blink::LayoutReplaced"* %0, i32 0) #13
  %135 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0
  %136 = call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %135)
  %137 = icmp slt i32 %136, 0
  %138 = select i1 %137, i32 -2147483648, i32 2147483647
  %139 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %134, i32 %136) #13
  %140 = extractvalue { i32, i1 } %139, 1
  %141 = extractvalue { i32, i1 } %139, 0
  %142 = select i1 %140, i32 %138, i32 %141, !prof !10
  %143 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 0, i32 0
  store i32 %142, i32* %143, align 4
  %144 = icmp sgt i32 %142, -1
  %145 = select i1 %144, i32 -2147483648, i32 2147483647
  %146 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %142) #13
  %147 = extractvalue { i32, i1 } %146, 1
  %148 = extractvalue { i32, i1 } %146, 0
  %149 = select i1 %147, i32 %145, i32 %148, !prof !10
  call void @_ZN5blink9LayoutBox27ComputeInlineStaticDistanceERNS_6LengthES2_PKS0_PKNS_20LayoutBoxModelObjectENS_10LayoutUnitEPKNS_20NGBoxFragmentBuilderE(%"class.blink::Length"* nonnull dereferenceable(8) %6, %"class.blink::Length"* nonnull dereferenceable(8) %8, %"class.blink::LayoutBox"* %21, %"class.blink::LayoutBoxModelObject"* %20, i32 %22, %"class.blink::NGBoxFragmentBuilder"* null) #13
  %150 = load i8, i8* %39, align 1
  %151 = icmp eq i8 %150, 0
  %152 = load i8, i8* %69, align 1
  %153 = icmp eq i8 %152, 0
  %154 = or i1 %151, %153
  %155 = load i8, i8* %90, align 1
  br i1 %154, label %158, label %156

156:                                              ; preds = %119
  %157 = load i8, i8* %107, align 1
  br label %182

158:                                              ; preds = %119
  %159 = icmp eq i8 %155, 0
  br i1 %159, label %160, label %169

160:                                              ; preds = %158
  %161 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #13
  %162 = bitcast i64* %13 to i32*
  store i32 0, i32* %162, align 8, !alias.scope !11
  %163 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 1
  store i8 0, i8* %163, align 4, !alias.scope !11
  %164 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 2
  store i8 2, i8* %164, align 1, !alias.scope !11
  %165 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 3
  store i8 0, i8* %165, align 2, !alias.scope !11
  %166 = load i64, i64* %13, align 8
  store i64 %166, i64* %9, align 8
  %167 = lshr i64 %166, 40
  %168 = trunc i64 %167 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #13
  br label %169

169:                                              ; preds = %160, %158
  %170 = phi i8 [ %168, %160 ], [ %155, %158 ]
  %171 = load i8, i8* %107, align 1
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %173, label %182

173:                                              ; preds = %169
  %174 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174) #13
  %175 = bitcast i64* %15 to i32*
  store i32 0, i32* %175, align 8, !alias.scope !14
  %176 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 1
  store i8 0, i8* %176, align 4, !alias.scope !14
  %177 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 2
  store i8 2, i8* %177, align 1, !alias.scope !14
  %178 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 3
  store i8 0, i8* %178, align 2, !alias.scope !14
  %179 = load i64, i64* %15, align 8
  store i64 %179, i64* %11, align 8
  %180 = lshr i64 %179, 40
  %181 = trunc i64 %180 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174) #13
  br label %182

182:                                              ; preds = %156, %169, %173
  %183 = phi i8 [ %157, %156 ], [ %171, %169 ], [ %181, %173 ]
  %184 = phi i8 [ %155, %156 ], [ %170, %169 ], [ %170, %173 ]
  %185 = icmp eq i8 %184, 0
  %186 = or i8 %183, %184
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %188, label %216

188:                                              ; preds = %182
  %189 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %6, i32 %22) #13
  %190 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %8, i32 %22) #13
  %191 = icmp slt i32 %190, 0
  %192 = select i1 %191, i32 -2147483648, i32 2147483647
  %193 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %189, i32 %190) #13
  %194 = extractvalue { i32, i1 } %193, 1
  %195 = extractvalue { i32, i1 } %193, 0
  %196 = select i1 %194, i32 %192, i32 %195, !prof !10
  %197 = icmp sgt i32 %196, -1
  %198 = select i1 %197, i32 -2147483648, i32 2147483647
  %199 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %149, i32 %196) #13
  %200 = extractvalue { i32, i1 } %199, 1
  %201 = extractvalue { i32, i1 } %199, 0
  %202 = select i1 %200, i32 %198, i32 %201, !prof !10
  %203 = icmp sgt i32 %202, 0
  br i1 %203, label %204, label %209

204:                                              ; preds = %188
  %205 = lshr i32 %202, 1
  %206 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %128, i64 0, i32 0
  store i32 %205, i32* %206, align 4
  %207 = sub nsw i32 %202, %205
  %208 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %129, i64 0, i32 0
  store i32 %207, i32* %208, align 4
  br label %351

209:                                              ; preds = %188
  %210 = icmp eq i8 %32, 0
  %211 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %128, i64 0, i32 0
  br i1 %210, label %212, label %214

212:                                              ; preds = %209
  store i32 0, i32* %211, align 4
  %213 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %129, i64 0, i32 0
  store i32 %202, i32* %213, align 4
  br label %351

214:                                              ; preds = %209
  store i32 %202, i32* %211, align 4
  %215 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %129, i64 0, i32 0
  store i32 0, i32* %215, align 4
  br label %351

216:                                              ; preds = %182
  br i1 %151, label %217, label %243

217:                                              ; preds = %216
  %218 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %10, i32 %23) #13
  %219 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %128, i64 0, i32 0
  store i32 %218, i32* %219, align 4
  %220 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %12, i32 %23) #13
  %221 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %129, i64 0, i32 0
  store i32 %220, i32* %221, align 4
  %222 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %8, i32 %22) #13
  %223 = load i32, i32* %219, align 4
  %224 = icmp slt i32 %223, 0
  %225 = select i1 %224, i32 -2147483648, i32 2147483647
  %226 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %222, i32 %223) #13
  %227 = extractvalue { i32, i1 } %226, 1
  %228 = extractvalue { i32, i1 } %226, 0
  %229 = select i1 %227, i32 %225, i32 %228, !prof !10
  %230 = load i32, i32* %221, align 4
  %231 = icmp slt i32 %230, 0
  %232 = select i1 %231, i32 -2147483648, i32 2147483647
  %233 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %229, i32 %230) #13
  %234 = extractvalue { i32, i1 } %233, 1
  %235 = extractvalue { i32, i1 } %233, 0
  %236 = select i1 %234, i32 %232, i32 %235, !prof !10
  %237 = icmp sgt i32 %236, -1
  %238 = select i1 %237, i32 -2147483648, i32 2147483647
  %239 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %149, i32 %236) #13
  %240 = extractvalue { i32, i1 } %239, 1
  %241 = extractvalue { i32, i1 } %239, 0
  %242 = select i1 %240, i32 %238, i32 %241, !prof !10
  br label %351

243:                                              ; preds = %216
  br i1 %153, label %244, label %250

244:                                              ; preds = %243
  %245 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %10, i32 %23) #13
  %246 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %128, i64 0, i32 0
  store i32 %245, i32* %246, align 4
  %247 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %12, i32 %23) #13
  %248 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %129, i64 0, i32 0
  store i32 %247, i32* %248, align 4
  %249 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %6, i32 %22) #13
  br label %351

250:                                              ; preds = %243
  br i1 %185, label %251, label %276

251:                                              ; preds = %250
  %252 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %12, i32 %23) #13
  %253 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %129, i64 0, i32 0
  store i32 %252, i32* %253, align 4
  %254 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %6, i32 %22) #13
  %255 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %8, i32 %22) #13
  %256 = icmp slt i32 %255, 0
  %257 = select i1 %256, i32 -2147483648, i32 2147483647
  %258 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %254, i32 %255) #13
  %259 = extractvalue { i32, i1 } %258, 1
  %260 = extractvalue { i32, i1 } %258, 0
  %261 = select i1 %259, i32 %257, i32 %260, !prof !10
  %262 = load i32, i32* %253, align 4
  %263 = icmp slt i32 %262, 0
  %264 = select i1 %263, i32 -2147483648, i32 2147483647
  %265 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %261, i32 %262) #13
  %266 = extractvalue { i32, i1 } %265, 1
  %267 = extractvalue { i32, i1 } %265, 0
  %268 = select i1 %266, i32 %264, i32 %267, !prof !10
  %269 = icmp sgt i32 %268, -1
  %270 = select i1 %269, i32 -2147483648, i32 2147483647
  %271 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %149, i32 %268) #13
  %272 = extractvalue { i32, i1 } %271, 1
  %273 = extractvalue { i32, i1 } %271, 0
  %274 = select i1 %272, i32 %270, i32 %273, !prof !10
  %275 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %128, i64 0, i32 0
  store i32 %274, i32* %275, align 4
  br label %351

276:                                              ; preds = %250
  %277 = icmp eq i8 %183, 0
  %278 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %10, i32 %23) #13
  %279 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %128, i64 0, i32 0
  store i32 %278, i32* %279, align 4
  br i1 %277, label %280, label %303

280:                                              ; preds = %276
  %281 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %6, i32 %22) #13
  %282 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %8, i32 %22) #13
  %283 = icmp slt i32 %282, 0
  %284 = select i1 %283, i32 -2147483648, i32 2147483647
  %285 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %281, i32 %282) #13
  %286 = extractvalue { i32, i1 } %285, 1
  %287 = extractvalue { i32, i1 } %285, 0
  %288 = select i1 %286, i32 %284, i32 %287, !prof !10
  %289 = load i32, i32* %279, align 4
  %290 = icmp slt i32 %289, 0
  %291 = select i1 %290, i32 -2147483648, i32 2147483647
  %292 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %288, i32 %289) #13
  %293 = extractvalue { i32, i1 } %292, 1
  %294 = extractvalue { i32, i1 } %292, 0
  %295 = select i1 %293, i32 %291, i32 %294, !prof !10
  %296 = icmp sgt i32 %295, -1
  %297 = select i1 %296, i32 -2147483648, i32 2147483647
  %298 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %149, i32 %295) #13
  %299 = extractvalue { i32, i1 } %298, 1
  %300 = extractvalue { i32, i1 } %298, 0
  %301 = select i1 %299, i32 %297, i32 %300, !prof !10
  %302 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %129, i64 0, i32 0
  store i32 %301, i32* %302, align 4
  br label %351

303:                                              ; preds = %276
  %304 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %12, i32 %23) #13
  %305 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %129, i64 0, i32 0
  store i32 %304, i32* %305, align 4
  %306 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %8, i32 %22) #13
  %307 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %6, i32 %22) #13
  %308 = icmp eq i8 %32, 0
  br i1 %308, label %351, label %309

309:                                              ; preds = %303
  %310 = load i32, i32* %143, align 4
  %311 = icmp slt i32 %307, 0
  %312 = select i1 %311, i32 -2147483648, i32 2147483647
  %313 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %310, i32 %307) #13
  %314 = extractvalue { i32, i1 } %313, 1
  %315 = extractvalue { i32, i1 } %313, 0
  %316 = select i1 %314, i32 %312, i32 %315, !prof !10
  %317 = icmp slt i32 %306, 0
  %318 = select i1 %317, i32 -2147483648, i32 2147483647
  %319 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %316, i32 %306) #13
  %320 = extractvalue { i32, i1 } %319, 1
  %321 = extractvalue { i32, i1 } %319, 0
  %322 = select i1 %320, i32 %318, i32 %321, !prof !10
  %323 = load i32, i32* %279, align 4
  %324 = icmp slt i32 %323, 0
  %325 = select i1 %324, i32 -2147483648, i32 2147483647
  %326 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %322, i32 %323) #13
  %327 = extractvalue { i32, i1 } %326, 1
  %328 = extractvalue { i32, i1 } %326, 0
  %329 = select i1 %327, i32 %325, i32 %328, !prof !10
  %330 = load i32, i32* %305, align 4
  %331 = icmp slt i32 %330, 0
  %332 = select i1 %331, i32 -2147483648, i32 2147483647
  %333 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %329, i32 %330) #13
  %334 = extractvalue { i32, i1 } %333, 1
  %335 = extractvalue { i32, i1 } %333, 0
  %336 = select i1 %334, i32 %332, i32 %335, !prof !10
  %337 = sdiv i32 %336, 64
  %338 = shl nsw i32 %337, 6
  %339 = icmp sgt i32 %307, -1
  %340 = select i1 %339, i32 -2147483648, i32 2147483647
  %341 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %338, i32 %307) #13
  %342 = extractvalue { i32, i1 } %341, 1
  %343 = extractvalue { i32, i1 } %341, 0
  %344 = select i1 %342, i32 %340, i32 %343, !prof !10
  %345 = icmp sgt i32 %344, -1
  %346 = select i1 %345, i32 -2147483648, i32 2147483647
  %347 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %344) #13
  %348 = extractvalue { i32, i1 } %347, 1
  %349 = extractvalue { i32, i1 } %347, 0
  %350 = select i1 %348, i32 %346, i32 %349, !prof !10
  br label %351

351:                                              ; preds = %303, %204, %214, %212, %217, %251, %309, %280, %244
  %352 = phi i32 [ %242, %217 ], [ %249, %244 ], [ %254, %251 ], [ %281, %280 ], [ %350, %309 ], [ %307, %303 ], [ %189, %212 ], [ %189, %214 ], [ %189, %204 ]
  %353 = bitcast %"class.blink::LayoutObject"* %19 to i1 (%"class.blink::LayoutObject"*)***
  %354 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %353, align 8
  %355 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %354, i64 26
  %356 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %355, align 8
  %357 = call zeroext i1 %356(%"class.blink::LayoutObject"* %19) #13
  br i1 %357, label %358, label %488

358:                                              ; preds = %351
  %359 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %360 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %359, i64 0, i32 0, i32 9
  %361 = bitcast [20 x i8]* %360 to i160*
  %362 = load i160, i160* %361, align 8
  %363 = and i160 %362, 41538374868278621028243970633760768
  %364 = icmp eq i160 %363, 0
  br i1 %364, label %488, label %365

365:                                              ; preds = %358
  %366 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 4
  %367 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %366 to i96*
  %368 = load i96, i96* %367, align 4
  %369 = and i96 %368, 268435456
  %370 = icmp eq i96 %369, 0
  br i1 %370, label %374, label %371

371:                                              ; preds = %365
  %372 = call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  %373 = load i96, i96* %367, align 4
  br label %377

374:                                              ; preds = %365
  %375 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 1, i32 1, i32 1
  %376 = bitcast i8* %375 to %"class.blink::LineBoxList"*
  br label %377

377:                                              ; preds = %371, %374
  %378 = phi i96 [ %373, %371 ], [ %368, %374 ]
  %379 = phi %"class.blink::LineBoxList"* [ %372, %371 ], [ %376, %374 ]
  %380 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %379, i64 0, i32 0, i32 0
  %381 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %380, align 8
  %382 = and i96 %378, 268435456
  %383 = icmp eq i96 %382, 0
  br i1 %383, label %386, label %384

384:                                              ; preds = %377
  %385 = call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %389

386:                                              ; preds = %377
  %387 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 1, i32 1, i32 1
  %388 = bitcast i8* %387 to %"class.blink::LineBoxList"*
  br label %389

389:                                              ; preds = %384, %386
  %390 = phi %"class.blink::LineBoxList"* [ %385, %384 ], [ %388, %386 ]
  %391 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %390, i64 0, i32 0, i32 1
  %392 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %391, align 8
  %393 = icmp eq %"class.blink::InlineFlowBox"* %381, null
  %394 = icmp eq %"class.blink::InlineFlowBox"* %392, null
  %395 = or i1 %393, %394
  %396 = icmp eq %"class.blink::InlineFlowBox"* %381, %392
  %397 = or i1 %396, %395
  br i1 %397, label %488, label %398

398:                                              ; preds = %389
  %399 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %128, i64 0, i32 0
  %400 = load i32, i32* %399, align 4
  %401 = icmp slt i32 %400, 0
  %402 = select i1 %401, i32 -2147483648, i32 2147483647
  %403 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %352, i32 %400) #13
  %404 = extractvalue { i32, i1 } %403, 1
  %405 = extractvalue { i32, i1 } %403, 0
  %406 = select i1 %404, i32 %402, i32 %405, !prof !10
  %407 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %392, i64 0, i32 6
  %408 = load i32, i32* %407, align 8
  %409 = and i32 %408, 1
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %452, label %411

411:                                              ; preds = %398
  %412 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %392, i64 0, i32 0, i32 7, i32 0
  %413 = load i32, i32* %412, align 4
  %414 = and i32 %413, 2048
  %415 = icmp eq i32 %414, 0
  %416 = bitcast %"class.blink::LineLayoutItem"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %416) #13
  %417 = bitcast %"class.blink::LineLayoutItem"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %417) #13
  %418 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %392, i64 0, i32 0, i32 4, i32 0
  %419 = bitcast %"class.blink::LayoutObject"** %418 to i64*
  %420 = load i64, i64* %419, align 8
  br i1 %415, label %434, label %421

421:                                              ; preds = %411
  %422 = bitcast %"class.blink::LineLayoutItem"* %3 to i64*
  store i64 %420, i64* %422, align 8
  %423 = and i32 %413, 1
  %424 = icmp ne i32 %423, 0
  %425 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %3, i1 zeroext %424) #13
  %426 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %425, i64 0, i32 0, i32 7, i32 0, i32 0
  %427 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %426, align 8
  %428 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %427, i64 0, i32 27
  %429 = load i16, i16* %428, align 8
  %430 = and i16 %429, 224
  %431 = icmp eq i16 %430, 0
  br i1 %431, label %446, label %432

432:                                              ; preds = %421
  %433 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %427, i64 0, i32 24, i32 0
  br label %447

434:                                              ; preds = %411
  %435 = bitcast %"class.blink::LineLayoutItem"* %4 to i64*
  store i64 %420, i64* %435, align 8
  %436 = and i32 %413, 1
  %437 = icmp ne i32 %436, 0
  %438 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %4, i1 zeroext %437) #13
  %439 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %438, i64 0, i32 0, i32 7, i32 0, i32 0
  %440 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %439, align 8
  %441 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %440, i64 0, i32 27
  %442 = load i16, i16* %441, align 8
  %443 = icmp ult i16 %442, 8192
  br i1 %443, label %446, label %444

444:                                              ; preds = %434
  %445 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %440, i64 0, i32 26, i32 0
  br label %447

446:                                              ; preds = %421, %434
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %417) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %416) #13
  br label %452

447:                                              ; preds = %432, %444
  %448 = phi i32* [ %433, %432 ], [ %445, %444 ]
  %449 = load i32, i32* %448, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %417) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %416) #13
  %450 = icmp slt i32 %449, 0
  %451 = select i1 %450, i32 -2147483648, i32 2147483647
  br label %452

452:                                              ; preds = %447, %398, %446
  %453 = phi i32 [ 0, %446 ], [ 0, %398 ], [ %449, %447 ]
  %454 = phi i32 [ 2147483647, %446 ], [ 2147483647, %398 ], [ %451, %447 ]
  %455 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %406, i32 %453) #13
  %456 = extractvalue { i32, i1 } %455, 1
  %457 = extractvalue { i32, i1 } %455, 0
  %458 = select i1 %456, i32 %454, i32 %457, !prof !10
  %459 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %392, i64 0, i32 0, i32 7, i32 0
  %460 = load i32, i32* %459, align 4
  %461 = and i32 %460, 2048
  %462 = icmp eq i32 %461, 0
  %463 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %392, i64 0, i32 0, i32 5, i32 0, i32 0
  %464 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %392, i64 0, i32 0, i32 5, i32 1, i32 0
  %465 = select i1 %462, i32* %464, i32* %463
  %466 = load i32, i32* %465, align 4
  %467 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %381, i64 0, i32 0, i32 7, i32 0
  %468 = load i32, i32* %467, align 4
  %469 = and i32 %468, 2048
  %470 = icmp eq i32 %469, 0
  %471 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %381, i64 0, i32 0, i32 5, i32 0, i32 0
  %472 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %381, i64 0, i32 0, i32 5, i32 1, i32 0
  %473 = select i1 %470, i32* %472, i32* %471
  %474 = load i32, i32* %473, align 4
  %475 = icmp sgt i32 %474, -1
  %476 = select i1 %475, i32 -2147483648, i32 2147483647
  %477 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %466, i32 %474) #13
  %478 = extractvalue { i32, i1 } %477, 1
  %479 = extractvalue { i32, i1 } %477, 0
  %480 = select i1 %478, i32 %476, i32 %479, !prof !10
  %481 = icmp slt i32 %480, 0
  %482 = select i1 %481, i32 -2147483648, i32 2147483647
  %483 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %458, i32 %480) #13
  %484 = extractvalue { i32, i1 } %483, 1
  %485 = extractvalue { i32, i1 } %483, 0
  %486 = select i1 %484, i32 %482, i32 %485, !prof !10
  %487 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 1, i32 0
  store i32 %486, i32* %487, align 4
  br label %502

488:                                              ; preds = %389, %358, %351
  %489 = bitcast %"class.blink::LayoutUnit"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %489) #13
  %490 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %17, i64 0, i32 0
  %491 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %128, i64 0, i32 0
  %492 = load i32, i32* %491, align 4
  %493 = icmp slt i32 %492, 0
  %494 = select i1 %493, i32 -2147483648, i32 2147483647
  %495 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %352, i32 %492) #13
  %496 = extractvalue { i32, i1 } %495, 1
  %497 = extractvalue { i32, i1 } %495, 0
  %498 = select i1 %496, i32 %494, i32 %497, !prof !10
  store i32 %498, i32* %490, align 4
  %499 = load i32, i32* %143, align 4
  call void @_ZN5blink9LayoutBox34ComputeLogicalLeftPositionedOffsetERNS_10LayoutUnitEPKS0_S1_PKNS_20LayoutBoxModelObjectES1_(%"class.blink::LayoutUnit"* nonnull dereferenceable(4) %17, %"class.blink::LayoutBox"* %21, i32 %499, %"class.blink::LayoutBoxModelObject"* %20, i32 %22) #13
  %500 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 1, i32 0
  %501 = load i32, i32* %490, align 4
  store i32 %501, i32* %500, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %489) #13
  br label %502

502:                                              ; preds = %452, %488
  %503 = load i8, i8* %107, align 1
  %504 = icmp eq i8 %503, 8
  br i1 %504, label %505, label %506

505:                                              ; preds = %502
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %12) #13
  br label %506

506:                                              ; preds = %502, %505
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #13
  %507 = load i8, i8* %90, align 1
  %508 = icmp eq i8 %507, 8
  br i1 %508, label %509, label %510

509:                                              ; preds = %506
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %10) #13
  br label %510

510:                                              ; preds = %506, %509
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #13
  %511 = load i8, i8* %69, align 1
  %512 = icmp eq i8 %511, 8
  br i1 %512, label %513, label %514

513:                                              ; preds = %510
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #13
  br label %514

514:                                              ; preds = %510, %513
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #13
  %515 = load i8, i8* %39, align 1
  %516 = icmp eq i8 %515, 8
  br i1 %516, label %517, label %518

517:                                              ; preds = %514
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #13
  br label %518

518:                                              ; preds = %514, %517
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  ret void
}

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox40ContainingBlockLogicalWidthForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !17
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8, !noalias !17
  %7 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  %8 = and i160 %6, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = and i160 %6, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  %12 = select i1 %11, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %13 = select i1 %11, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %14 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %15 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %16 = extractvalue { i64, i64 } %14, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %7, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %16, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* %19) #13
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !20
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8, !noalias !20
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 0
  %40 = and i160 %37, 41538374868278621028243970633760768
  %41 = icmp eq i160 %40, 0
  %42 = select i1 %41, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %43 = select i1 %41, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %44 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %45 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %46 = extractvalue { i64, i64 } %44, 0
  %47 = extractvalue { i64, i64 } %45, 1
  %48 = getelementptr inbounds i8, i8* %7, i64 %47
  %49 = bitcast i8* %48 to %"class.blink::LayoutBoxModelObject"*
  %50 = and i64 %46, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %31
  %53 = bitcast i8* %48 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = add i64 %46, -1
  %56 = getelementptr i8, i8* %54, i64 %55
  %57 = bitcast i8* %56 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  br label %61

59:                                               ; preds = %31
  %60 = inttoptr i64 %46 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %61

61:                                               ; preds = %52, %59
  %62 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %58, %52 ], [ %60, %59 ]
  %63 = tail call i32 %62(%"class.blink::LayoutBoxModelObject"* %49) #13
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %63) #13
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !10
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !23
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8, !noalias !23
  %74 = and i160 %73, 15211807202738752817960438464512
  %75 = icmp eq i160 %74, 0
  %76 = and i160 %73, 41538374868278621028243970633760768
  %77 = icmp eq i160 %76, 0
  %78 = select i1 %77, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %79 = select i1 %77, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %80 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %81 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %82 = extractvalue { i64, i64 } %80, 0
  %83 = extractvalue { i64, i64 } %81, 1
  %84 = getelementptr inbounds i8, i8* %7, i64 %83
  %85 = bitcast i8* %84 to %"class.blink::LayoutBoxModelObject"*
  %86 = and i64 %82, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %61
  %89 = bitcast i8* %84 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = add i64 %82, -1
  %92 = getelementptr i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %94 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %93, align 8
  br label %97

95:                                               ; preds = %61
  %96 = inttoptr i64 %82 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %97

97:                                               ; preds = %88, %95
  %98 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %94, %88 ], [ %96, %95 ]
  %99 = tail call i32 %98(%"class.blink::LayoutBoxModelObject"* %85) #13
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %99) #13
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !10
  %106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !26
  %107 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %106, i64 0, i32 0, i32 9
  %108 = bitcast [20 x i8]* %107 to i160*
  %109 = load i160, i160* %108, align 8, !noalias !26
  %110 = and i160 %109, 15211807202738752817960438464512
  %111 = icmp eq i160 %110, 0
  %112 = and i160 %109, 41538374868278621028243970633760768
  %113 = icmp eq i160 %112, 0
  %114 = select i1 %113, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %115 = select i1 %113, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %116 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %117 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %118 = extractvalue { i64, i64 } %116, 0
  %119 = extractvalue { i64, i64 } %117, 1
  %120 = getelementptr inbounds i8, i8* %7, i64 %119
  %121 = bitcast i8* %120 to %"class.blink::LayoutBoxModelObject"*
  %122 = and i64 %118, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %131, label %124

124:                                              ; preds = %97
  %125 = bitcast i8* %120 to i8**
  %126 = load i8*, i8** %125, align 8
  %127 = add i64 %118, -1
  %128 = getelementptr i8, i8* %126, i64 %127
  %129 = bitcast i8* %128 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %130 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %129, align 8
  br label %133

131:                                              ; preds = %97
  %132 = inttoptr i64 %118 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %133

133:                                              ; preds = %124, %131
  %134 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %130, %124 ], [ %132, %131 ]
  %135 = tail call i32 %134(%"class.blink::LayoutBoxModelObject"* %121) #13
  %136 = icmp slt i32 %135, 0
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %135) #13
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !10
  ret i32 %141
}

declare void @_ZN5blink9LayoutBox27ComputeInlineStaticDistanceERNS_6LengthES2_PKS0_PKNS_20LayoutBoxModelObjectENS_10LayoutUnitEPKNS_20NGBoxFragmentBuilderE(%"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8), %"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, i32, %"class.blink::NGBoxFragmentBuilder"*) local_unnamed_addr #1

declare i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox34ComputeLogicalLeftPositionedOffsetERNS_10LayoutUnitEPKS0_S1_PKNS_20LayoutBoxModelObjectES1_(%"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutBox"*, i32, %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14LayoutReplaced30ComputePositionedLogicalHeightERNS_9LayoutBox27LogicalExtentComputedValuesE(%"class.blink::LayoutReplaced"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nocapture dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca i64, align 8
  %16 = bitcast i64* %15 to %"class.blink::Length"*
  %17 = alloca i64, align 8
  %18 = bitcast i64* %17 to %"class.blink::Length"*
  %19 = alloca i64, align 8
  %20 = bitcast i64* %19 to %"class.blink::Length"*
  %21 = alloca i64, align 8
  %22 = bitcast i64* %21 to %"class.blink::Length"*
  %23 = alloca i64, align 8
  %24 = bitcast i64* %23 to %"class.blink::Length"*
  %25 = alloca i64, align 8
  %26 = bitcast i64* %25 to %"class.blink::Length"*
  %27 = alloca %"class.blink::LayoutUnit", align 4
  %28 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %28, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %30 = bitcast %"class.blink::LayoutObject"* %29 to %"class.blink::LayoutBoxModelObject"*
  %31 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %32 = tail call i32 @_ZNK5blink9LayoutBox41ContainingBlockLogicalHeightForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* %31, %"class.blink::LayoutBoxModelObject"* %30, i1 zeroext true) #13
  %33 = tail call i32 @_ZNK5blink9LayoutBox40ContainingBlockLogicalWidthForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* %31, %"class.blink::LayoutBoxModelObject"* %30, i1 zeroext false) #13
  %34 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 2
  %36 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  store i64 -6148914691236517206, i64* %15, align 8
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  %38 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  %40 = bitcast %"class.blink::Length"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40)
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8, !noalias !29
  %44 = lshr i160 %43, 102
  %45 = trunc i160 %44 to i8
  %46 = and i8 %45, 3
  %47 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 7, i32 0, i32 0
  %48 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %47, align 8, !noalias !29
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %48, i64 0, i32 12
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %48, i64 0, i32 11
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %48, i64 0, i32 10
  store %"class.blink::Length"* %49, %"class.blink::Length"** %12, align 8, !alias.scope !29
  store %"class.blink::Length"* %50, %"class.blink::Length"** %13, align 8, !alias.scope !29
  store %"class.blink::Length"* %51, %"class.blink::Length"** %14, align 8, !alias.scope !29
  %52 = icmp eq i8 %46, 0
  %53 = icmp eq i8 %46, 1
  %54 = select i1 %53, %"class.blink::Length"** %13, %"class.blink::Length"** %14
  %55 = select i1 %52, %"class.blink::Length"** %12, %"class.blink::Length"** %54
  %56 = bitcast %"class.blink::Length"** %55 to i64**
  %57 = load i64*, i64** %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40)
  %58 = load i64, i64* %57, align 4
  store i64 %58, i64* %15, align 8
  %59 = and i64 %58, 280375465082880
  %60 = icmp eq i64 %59, 8796093022208
  br i1 %60, label %61, label %71

61:                                               ; preds = %2
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %16) #13
  %62 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %62, i64 0, i32 0, i32 9
  %64 = bitcast [20 x i8]* %63 to i160*
  %65 = load i160, i160* %64, align 8, !noalias !32
  %66 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %62, i64 0, i32 0, i32 7, i32 0, i32 0
  %67 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %66, align 8, !noalias !32
  %68 = lshr i160 %65, 102
  %69 = trunc i160 %68 to i8
  %70 = and i8 %69, 3
  br label %71

71:                                               ; preds = %2, %61
  %72 = phi i8 [ %46, %2 ], [ %70, %61 ]
  %73 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %48, %2 ], [ %67, %61 ]
  %74 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #13
  %75 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %18, i64 0, i32 2
  %76 = bitcast %"class.blink::Length"** %9 to i8*
  store i64 -6148914691236517206, i64* %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76)
  %77 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77)
  %78 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78)
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %73, i64 0, i32 11
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %73, i64 0, i32 9
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %73, i64 0, i32 10
  store %"class.blink::Length"* %79, %"class.blink::Length"** %9, align 8, !alias.scope !32
  store %"class.blink::Length"* %80, %"class.blink::Length"** %10, align 8, !alias.scope !32
  store %"class.blink::Length"* %81, %"class.blink::Length"** %11, align 8, !alias.scope !32
  %82 = icmp eq i8 %72, 0
  %83 = icmp eq i8 %72, 1
  %84 = select i1 %83, %"class.blink::Length"** %11, %"class.blink::Length"** %9
  %85 = select i1 %82, %"class.blink::Length"** %10, %"class.blink::Length"** %84
  %86 = bitcast %"class.blink::Length"** %85 to i64**
  %87 = load i64*, i64** %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  %88 = load i64, i64* %87, align 4
  store i64 %88, i64* %17, align 8
  %89 = and i64 %88, 280375465082880
  %90 = icmp eq i64 %89, 8796093022208
  br i1 %90, label %91, label %101

91:                                               ; preds = %71
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %18) #13
  %92 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  %93 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %92, i64 0, i32 0, i32 9
  %94 = bitcast [20 x i8]* %93 to i160*
  %95 = load i160, i160* %94, align 8, !noalias !35
  %96 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %92, i64 0, i32 0, i32 7, i32 0, i32 0
  %97 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %96, align 8, !noalias !35
  %98 = lshr i160 %95, 102
  %99 = trunc i160 %98 to i8
  %100 = and i8 %99, 3
  br label %101

101:                                              ; preds = %71, %91
  %102 = phi i8 [ %72, %71 ], [ %100, %91 ]
  %103 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %73, %71 ], [ %97, %91 ]
  %104 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2
  %105 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2, i32 1
  %106 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #13
  %107 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %20, i64 0, i32 2
  %108 = bitcast %"class.blink::Length"** %6 to i8*
  store i64 -6148914691236517206, i64* %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108)
  %109 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109)
  %110 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110)
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 18
  %112 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 17
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 8
  store %"class.blink::Length"* %111, %"class.blink::Length"** %6, align 8, !alias.scope !35
  store %"class.blink::Length"* %112, %"class.blink::Length"** %7, align 8, !alias.scope !35
  store %"class.blink::Length"* %113, %"class.blink::Length"** %8, align 8, !alias.scope !35
  %114 = icmp eq i8 %102, 0
  %115 = icmp eq i8 %102, 1
  %116 = select i1 %115, %"class.blink::Length"** %7, %"class.blink::Length"** %8
  %117 = select i1 %114, %"class.blink::Length"** %6, %"class.blink::Length"** %116
  %118 = bitcast %"class.blink::Length"** %117 to i64**
  %119 = load i64*, i64** %118, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110)
  %120 = load i64, i64* %119, align 4
  store i64 %120, i64* %19, align 8
  %121 = and i64 %120, 280375465082880
  %122 = icmp eq i64 %121, 8796093022208
  br i1 %122, label %123, label %133

123:                                              ; preds = %101
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %20) #13
  %124 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  %125 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %124, i64 0, i32 0, i32 9
  %126 = bitcast [20 x i8]* %125 to i160*
  %127 = load i160, i160* %126, align 8, !noalias !38
  %128 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %124, i64 0, i32 0, i32 7, i32 0, i32 0
  %129 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %128, align 8, !noalias !38
  %130 = lshr i160 %127, 102
  %131 = trunc i160 %130 to i8
  %132 = and i8 %131, 3
  br label %133

133:                                              ; preds = %101, %123
  %134 = phi i8 [ %102, %101 ], [ %132, %123 ]
  %135 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %103, %101 ], [ %129, %123 ]
  %136 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #13
  %137 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %22, i64 0, i32 2
  %138 = bitcast %"class.blink::Length"** %3 to i8*
  store i64 -6148914691236517206, i64* %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138)
  %139 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139)
  %140 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140)
  %141 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %135, i64 0, i32 17
  %142 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %135, i64 0, i32 7
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %135, i64 0, i32 8
  store %"class.blink::Length"* %141, %"class.blink::Length"** %3, align 8, !alias.scope !38
  store %"class.blink::Length"* %142, %"class.blink::Length"** %4, align 8, !alias.scope !38
  store %"class.blink::Length"* %143, %"class.blink::Length"** %5, align 8, !alias.scope !38
  %144 = icmp eq i8 %134, 0
  %145 = icmp eq i8 %134, 1
  %146 = select i1 %145, %"class.blink::Length"** %5, %"class.blink::Length"** %3
  %147 = select i1 %144, %"class.blink::Length"** %4, %"class.blink::Length"** %146
  %148 = bitcast %"class.blink::Length"** %147 to i64**
  %149 = load i64*, i64** %148, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140)
  %150 = load i64, i64* %149, align 4
  store i64 %150, i64* %21, align 8
  %151 = and i64 %150, 280375465082880
  %152 = icmp eq i64 %151, 8796093022208
  br i1 %152, label %153, label %154

153:                                              ; preds = %133
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %22) #13
  br label %154

154:                                              ; preds = %133, %153
  %155 = bitcast %"class.blink::LayoutReplaced"* %0 to i32 (%"class.blink::LayoutReplaced"*, i32)***
  %156 = load i32 (%"class.blink::LayoutReplaced"*, i32)**, i32 (%"class.blink::LayoutReplaced"*, i32)*** %155, align 8
  %157 = getelementptr inbounds i32 (%"class.blink::LayoutReplaced"*, i32)*, i32 (%"class.blink::LayoutReplaced"*, i32)** %156, i64 168
  %158 = load i32 (%"class.blink::LayoutReplaced"*, i32)*, i32 (%"class.blink::LayoutReplaced"*, i32)** %157, align 8
  %159 = call i32 %158(%"class.blink::LayoutReplaced"* %0, i32 0) #13
  %160 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0
  %161 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %160)
  %162 = icmp slt i32 %161, 0
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %159, i32 %161) #13
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !10
  %168 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 0, i32 0
  store i32 %167, i32* %168, align 4
  %169 = icmp sgt i32 %167, -1
  %170 = select i1 %169, i32 -2147483648, i32 2147483647
  %171 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %32, i32 %167) #13
  %172 = extractvalue { i32, i1 } %171, 1
  %173 = extractvalue { i32, i1 } %171, 0
  %174 = select i1 %172, i32 %170, i32 %173, !prof !10
  call void @_ZN5blink9LayoutBox26ComputeBlockStaticDistanceERNS_6LengthES2_PKS0_PKNS_20LayoutBoxModelObjectEPKNS_20NGBoxFragmentBuilderE(%"class.blink::Length"* nonnull dereferenceable(8) %20, %"class.blink::Length"* nonnull dereferenceable(8) %22, %"class.blink::LayoutBox"* %31, %"class.blink::LayoutBoxModelObject"* %30, %"class.blink::NGBoxFragmentBuilder"* null) #13
  %175 = load i8, i8* %107, align 1
  %176 = icmp eq i8 %175, 0
  %177 = load i8, i8* %137, align 1
  %178 = icmp eq i8 %177, 0
  %179 = or i1 %176, %178
  br i1 %179, label %183, label %180

180:                                              ; preds = %154
  %181 = load i8, i8* %75, align 1
  %182 = load i8, i8* %35, align 1
  br label %208

183:                                              ; preds = %154
  %184 = load i8, i8* %35, align 1
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %195

186:                                              ; preds = %183
  %187 = bitcast i64* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %187) #13
  %188 = bitcast i64* %23 to i32*
  store i32 0, i32* %188, align 8, !alias.scope !41
  %189 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 0, i32 1
  store i8 0, i8* %189, align 4, !alias.scope !41
  %190 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 0, i32 2
  store i8 2, i8* %190, align 1, !alias.scope !41
  %191 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 0, i32 3
  store i8 0, i8* %191, align 2, !alias.scope !41
  %192 = load i64, i64* %23, align 8
  store i64 %192, i64* %15, align 8
  %193 = lshr i64 %192, 40
  %194 = trunc i64 %193 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %187) #13
  br label %195

195:                                              ; preds = %186, %183
  %196 = phi i8 [ %194, %186 ], [ %184, %183 ]
  %197 = load i8, i8* %75, align 1
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %199, label %208

199:                                              ; preds = %195
  %200 = bitcast i64* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #13
  %201 = bitcast i64* %25 to i32*
  store i32 0, i32* %201, align 8, !alias.scope !44
  %202 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %26, i64 0, i32 1
  store i8 0, i8* %202, align 4, !alias.scope !44
  %203 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %26, i64 0, i32 2
  store i8 2, i8* %203, align 1, !alias.scope !44
  %204 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %26, i64 0, i32 3
  store i8 0, i8* %204, align 2, !alias.scope !44
  %205 = load i64, i64* %25, align 8
  store i64 %205, i64* %17, align 8
  %206 = lshr i64 %205, 40
  %207 = trunc i64 %206 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #13
  br label %208

208:                                              ; preds = %180, %195, %199
  %209 = phi i8 [ %182, %180 ], [ %196, %195 ], [ %196, %199 ]
  %210 = phi i8 [ %181, %180 ], [ %197, %195 ], [ %207, %199 ]
  %211 = icmp eq i8 %209, 0
  %212 = or i8 %210, %209
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %214, label %248

214:                                              ; preds = %208
  %215 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %20, i32 %32) #13
  %216 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %22, i32 %32) #13
  %217 = icmp slt i32 %216, 0
  %218 = select i1 %217, i32 -2147483648, i32 2147483647
  %219 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %215, i32 %216) #13
  %220 = extractvalue { i32, i1 } %219, 1
  %221 = extractvalue { i32, i1 } %219, 0
  %222 = select i1 %220, i32 %218, i32 %221, !prof !10
  %223 = icmp sgt i32 %222, -1
  %224 = select i1 %223, i32 -2147483648, i32 2147483647
  %225 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %174, i32 %222) #13
  %226 = extractvalue { i32, i1 } %225, 1
  %227 = extractvalue { i32, i1 } %225, 0
  %228 = select i1 %226, i32 %224, i32 %227, !prof !10
  %229 = sdiv i32 %228, 2
  %230 = sext i32 %229 to i64
  %231 = call i1 @llvm.is.constant.i64(i64 %230) #13
  br i1 %231, label %238, label %232

232:                                              ; preds = %214
  %233 = icmp slt i32 %228, -1
  %234 = select i1 %233, i32 -2147483648, i32 2147483647
  %235 = add nsw i64 %230, 2147483648
  %236 = icmp ult i64 %235, 4294967296
  %237 = select i1 %236, i32 %229, i32 %234, !prof !47
  br label %238

238:                                              ; preds = %214, %232
  %239 = phi i32 [ %237, %232 ], [ %229, %214 ]
  %240 = getelementptr inbounds %"struct.blink::LayoutBox::ComputedMarginValues", %"struct.blink::LayoutBox::ComputedMarginValues"* %104, i64 0, i32 0, i32 0
  store i32 %239, i32* %240, align 4
  %241 = icmp sgt i32 %239, -1
  %242 = select i1 %241, i32 -2147483648, i32 2147483647
  %243 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %228, i32 %239) #13
  %244 = extractvalue { i32, i1 } %243, 1
  %245 = extractvalue { i32, i1 } %243, 0
  %246 = select i1 %244, i32 %242, i32 %245, !prof !10
  %247 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %105, i64 0, i32 0
  store i32 %246, i32* %247, align 4
  br label %339

248:                                              ; preds = %208
  br i1 %176, label %249, label %275

249:                                              ; preds = %248
  %250 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %16, i32 %33) #13
  %251 = getelementptr inbounds %"struct.blink::LayoutBox::ComputedMarginValues", %"struct.blink::LayoutBox::ComputedMarginValues"* %104, i64 0, i32 0, i32 0
  store i32 %250, i32* %251, align 4
  %252 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %18, i32 %33) #13
  %253 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %105, i64 0, i32 0
  store i32 %252, i32* %253, align 4
  %254 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %22, i32 %32) #13
  %255 = load i32, i32* %251, align 4
  %256 = icmp slt i32 %255, 0
  %257 = select i1 %256, i32 -2147483648, i32 2147483647
  %258 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %254, i32 %255) #13
  %259 = extractvalue { i32, i1 } %258, 1
  %260 = extractvalue { i32, i1 } %258, 0
  %261 = select i1 %259, i32 %257, i32 %260, !prof !10
  %262 = load i32, i32* %253, align 4
  %263 = icmp slt i32 %262, 0
  %264 = select i1 %263, i32 -2147483648, i32 2147483647
  %265 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %261, i32 %262) #13
  %266 = extractvalue { i32, i1 } %265, 1
  %267 = extractvalue { i32, i1 } %265, 0
  %268 = select i1 %266, i32 %264, i32 %267, !prof !10
  %269 = icmp sgt i32 %268, -1
  %270 = select i1 %269, i32 -2147483648, i32 2147483647
  %271 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %174, i32 %268) #13
  %272 = extractvalue { i32, i1 } %271, 1
  %273 = extractvalue { i32, i1 } %271, 0
  %274 = select i1 %272, i32 %270, i32 %273, !prof !10
  br label %339

275:                                              ; preds = %248
  br i1 %178, label %276, label %282

276:                                              ; preds = %275
  %277 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %16, i32 %33) #13
  %278 = getelementptr inbounds %"struct.blink::LayoutBox::ComputedMarginValues", %"struct.blink::LayoutBox::ComputedMarginValues"* %104, i64 0, i32 0, i32 0
  store i32 %277, i32* %278, align 4
  %279 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %18, i32 %33) #13
  %280 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %105, i64 0, i32 0
  store i32 %279, i32* %280, align 4
  %281 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %20, i32 %32) #13
  br label %339

282:                                              ; preds = %275
  br i1 %211, label %283, label %308

283:                                              ; preds = %282
  %284 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %18, i32 %33) #13
  %285 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %105, i64 0, i32 0
  store i32 %284, i32* %285, align 4
  %286 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %20, i32 %32) #13
  %287 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %22, i32 %32) #13
  %288 = icmp slt i32 %287, 0
  %289 = select i1 %288, i32 -2147483648, i32 2147483647
  %290 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %286, i32 %287) #13
  %291 = extractvalue { i32, i1 } %290, 1
  %292 = extractvalue { i32, i1 } %290, 0
  %293 = select i1 %291, i32 %289, i32 %292, !prof !10
  %294 = load i32, i32* %285, align 4
  %295 = icmp slt i32 %294, 0
  %296 = select i1 %295, i32 -2147483648, i32 2147483647
  %297 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %293, i32 %294) #13
  %298 = extractvalue { i32, i1 } %297, 1
  %299 = extractvalue { i32, i1 } %297, 0
  %300 = select i1 %298, i32 %296, i32 %299, !prof !10
  %301 = icmp sgt i32 %300, -1
  %302 = select i1 %301, i32 -2147483648, i32 2147483647
  %303 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %174, i32 %300) #13
  %304 = extractvalue { i32, i1 } %303, 1
  %305 = extractvalue { i32, i1 } %303, 0
  %306 = select i1 %304, i32 %302, i32 %305, !prof !10
  %307 = getelementptr inbounds %"struct.blink::LayoutBox::ComputedMarginValues", %"struct.blink::LayoutBox::ComputedMarginValues"* %104, i64 0, i32 0, i32 0
  store i32 %306, i32* %307, align 4
  br label %339

308:                                              ; preds = %282
  %309 = icmp eq i8 %210, 0
  %310 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %16, i32 %33) #13
  %311 = getelementptr inbounds %"struct.blink::LayoutBox::ComputedMarginValues", %"struct.blink::LayoutBox::ComputedMarginValues"* %104, i64 0, i32 0, i32 0
  store i32 %310, i32* %311, align 4
  br i1 %309, label %312, label %335

312:                                              ; preds = %308
  %313 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %20, i32 %32) #13
  %314 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %22, i32 %32) #13
  %315 = icmp slt i32 %314, 0
  %316 = select i1 %315, i32 -2147483648, i32 2147483647
  %317 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %313, i32 %314) #13
  %318 = extractvalue { i32, i1 } %317, 1
  %319 = extractvalue { i32, i1 } %317, 0
  %320 = select i1 %318, i32 %316, i32 %319, !prof !10
  %321 = load i32, i32* %311, align 4
  %322 = icmp slt i32 %321, 0
  %323 = select i1 %322, i32 -2147483648, i32 2147483647
  %324 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %320, i32 %321) #13
  %325 = extractvalue { i32, i1 } %324, 1
  %326 = extractvalue { i32, i1 } %324, 0
  %327 = select i1 %325, i32 %323, i32 %326, !prof !10
  %328 = icmp sgt i32 %327, -1
  %329 = select i1 %328, i32 -2147483648, i32 2147483647
  %330 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %174, i32 %327) #13
  %331 = extractvalue { i32, i1 } %330, 1
  %332 = extractvalue { i32, i1 } %330, 0
  %333 = select i1 %331, i32 %329, i32 %332, !prof !10
  %334 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %105, i64 0, i32 0
  store i32 %333, i32* %334, align 4
  br label %339

335:                                              ; preds = %308
  %336 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %18, i32 %33) #13
  %337 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %105, i64 0, i32 0
  store i32 %336, i32* %337, align 4
  %338 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %20, i32 %32) #13
  br label %339

339:                                              ; preds = %249, %283, %335, %312, %276, %238
  %340 = phi i32 [ %215, %238 ], [ %274, %249 ], [ %281, %276 ], [ %286, %283 ], [ %313, %312 ], [ %338, %335 ]
  %341 = bitcast %"class.blink::LayoutUnit"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %341) #13
  %342 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %27, i64 0, i32 0
  %343 = getelementptr inbounds %"struct.blink::LayoutBox::ComputedMarginValues", %"struct.blink::LayoutBox::ComputedMarginValues"* %104, i64 0, i32 0, i32 0
  %344 = load i32, i32* %343, align 4
  %345 = icmp slt i32 %344, 0
  %346 = select i1 %345, i32 -2147483648, i32 2147483647
  %347 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %340, i32 %344) #13
  %348 = extractvalue { i32, i1 } %347, 1
  %349 = extractvalue { i32, i1 } %347, 0
  %350 = select i1 %348, i32 %346, i32 %349, !prof !10
  store i32 %350, i32* %342, align 4
  %351 = load i32, i32* %168, align 4
  call void @_ZN5blink9LayoutBox33ComputeLogicalTopPositionedOffsetERNS_10LayoutUnitEPKS0_S1_PKNS_20LayoutBoxModelObjectES1_(%"class.blink::LayoutUnit"* nonnull dereferenceable(4) %27, %"class.blink::LayoutBox"* %31, i32 %351, %"class.blink::LayoutBoxModelObject"* %30, i32 %32) #13
  %352 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 1, i32 0
  %353 = load i32, i32* %342, align 4
  store i32 %353, i32* %352, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %341) #13
  %354 = load i8, i8* %137, align 1
  %355 = icmp eq i8 %354, 8
  br i1 %355, label %356, label %357

356:                                              ; preds = %339
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %22) #13
  br label %357

357:                                              ; preds = %339, %356
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #13
  %358 = load i8, i8* %107, align 1
  %359 = icmp eq i8 %358, 8
  br i1 %359, label %360, label %361

360:                                              ; preds = %357
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %20) #13
  br label %361

361:                                              ; preds = %357, %360
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #13
  %362 = load i8, i8* %75, align 1
  %363 = icmp eq i8 %362, 8
  br i1 %363, label %364, label %365

364:                                              ; preds = %361
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %18) #13
  br label %365

365:                                              ; preds = %361, %364
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #13
  %366 = load i8, i8* %35, align 1
  %367 = icmp eq i8 %366, 8
  br i1 %367, label %368, label %369

368:                                              ; preds = %365
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %16) #13
  br label %369

369:                                              ; preds = %365, %368
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  ret void
}

declare i32 @_ZNK5blink9LayoutBox41ContainingBlockLogicalHeightForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = and i16 %7, 240
  %15 = icmp ne i16 %14, 0
  %16 = and i1 %15, %13
  br i1 %16, label %49, label %17

17:                                               ; preds = %10, %1
  %18 = and i16 %7, 3584
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, 0
  %24 = and i16 %7, 3840
  %25 = icmp ne i16 %24, 0
  %26 = and i1 %25, %23
  br i1 %26, label %49, label %27

27:                                               ; preds = %20, %17
  %28 = icmp ult i16 %7, 8192
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %29, %27
  %34 = and i16 %7, 14
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ne i32 %38, 0
  %40 = and i16 %7, 15
  %41 = icmp ne i16 %40, 0
  %42 = and i1 %41, %39
  br i1 %42, label %49, label %43

43:                                               ; preds = %36, %33
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = and i160 %46, 89202980794122492566142873090593446023921664
  %48 = icmp eq i160 %47, 0
  br i1 %48, label %196, label %49

49:                                               ; preds = %43, %36, %20, %10, %29
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8, !noalias !48
  %53 = lshr i160 %52, 102
  %54 = trunc i160 %53 to i8
  %55 = and i8 %54, 3
  %56 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  switch i8 %55, label %57 [
    i8 0, label %66
    i8 1, label %58
  ]

57:                                               ; preds = %49
  br label %58

58:                                               ; preds = %57, %49
  %59 = phi { i64, i64 } [ { i64 993, i64 0 }, %57 ], [ { i64 1001, i64 0 }, %49 ]
  %60 = extractvalue { i64, i64 } %59, 0
  %61 = extractvalue { i64, i64 } %59, 1
  %62 = getelementptr inbounds i8, i8* %56, i64 %61
  %63 = bitcast i8* %62 to %"class.blink::LayoutBoxModelObject"*
  %64 = and i64 %60, 1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %58, %49
  %67 = phi %"class.blink::LayoutBoxModelObject"* [ %63, %58 ], [ %0, %49 ]
  %68 = phi i8* [ %62, %58 ], [ %56, %49 ]
  %69 = phi i64 [ %60, %58 ], [ 977, %49 ]
  %70 = bitcast i8* %68 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = add i64 %69, -1
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = bitcast i8* %73 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %75 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %74, align 8
  br label %78

76:                                               ; preds = %58
  %77 = inttoptr i64 %60 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %78

78:                                               ; preds = %76, %66
  %79 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %66 ], [ %63, %76 ]
  %80 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %75, %66 ], [ %77, %76 ]
  %81 = tail call i32 %80(%"class.blink::LayoutBoxModelObject"* %79) #13
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !51
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %84 = bitcast [20 x i8]* %83 to i160*
  %85 = load i160, i160* %84, align 8, !noalias !51
  %86 = lshr i160 %85, 102
  %87 = trunc i160 %86 to i8
  %88 = and i8 %87, 3
  switch i8 %88, label %89 [
    i8 0, label %98
    i8 1, label %90
  ]

89:                                               ; preds = %78
  br label %90

90:                                               ; preds = %89, %78
  %91 = phi { i64, i64 } [ { i64 961, i64 0 }, %89 ], [ { i64 969, i64 0 }, %78 ]
  %92 = extractvalue { i64, i64 } %91, 0
  %93 = extractvalue { i64, i64 } %91, 1
  %94 = getelementptr inbounds i8, i8* %56, i64 %93
  %95 = bitcast i8* %94 to %"class.blink::LayoutBoxModelObject"*
  %96 = and i64 %92, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %90, %78
  %99 = phi %"class.blink::LayoutBoxModelObject"* [ %95, %90 ], [ %0, %78 ]
  %100 = phi i8* [ %94, %90 ], [ %56, %78 ]
  %101 = phi i64 [ %92, %90 ], [ 945, %78 ]
  %102 = bitcast i8* %100 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = add i64 %101, -1
  %105 = getelementptr i8, i8* %103, i64 %104
  %106 = bitcast i8* %105 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %107 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %106, align 8
  br label %110

108:                                              ; preds = %90
  %109 = inttoptr i64 %92 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %110

110:                                              ; preds = %98, %108
  %111 = phi %"class.blink::LayoutBoxModelObject"* [ %99, %98 ], [ %95, %108 ]
  %112 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %107, %98 ], [ %109, %108 ]
  %113 = tail call i32 %112(%"class.blink::LayoutBoxModelObject"* %111) #13
  %114 = icmp slt i32 %113, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %113) #13
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %115, i32 %118, !prof !10
  %120 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !54
  %121 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %120, i64 0, i32 0, i32 9
  %122 = bitcast [20 x i8]* %121 to i160*
  %123 = load i160, i160* %122, align 8, !noalias !54
  %124 = lshr i160 %123, 102
  %125 = trunc i160 %124 to i8
  %126 = and i8 %125, 3
  switch i8 %126, label %127 [
    i8 0, label %136
    i8 1, label %128
  ]

127:                                              ; preds = %110
  br label %128

128:                                              ; preds = %127, %110
  %129 = phi { i64, i64 } [ { i64 1001, i64 0 }, %127 ], [ { i64 993, i64 0 }, %110 ]
  %130 = extractvalue { i64, i64 } %129, 0
  %131 = extractvalue { i64, i64 } %129, 1
  %132 = getelementptr inbounds i8, i8* %56, i64 %131
  %133 = bitcast i8* %132 to %"class.blink::LayoutBoxModelObject"*
  %134 = and i64 %130, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %146, label %136

136:                                              ; preds = %128, %110
  %137 = phi %"class.blink::LayoutBoxModelObject"* [ %133, %128 ], [ %0, %110 ]
  %138 = phi i8* [ %132, %128 ], [ %56, %110 ]
  %139 = phi i64 [ %130, %128 ], [ 985, %110 ]
  %140 = bitcast i8* %138 to i8**
  %141 = load i8*, i8** %140, align 8
  %142 = add i64 %139, -1
  %143 = getelementptr i8, i8* %141, i64 %142
  %144 = bitcast i8* %143 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %145 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %144, align 8
  br label %148

146:                                              ; preds = %128
  %147 = inttoptr i64 %130 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %148

148:                                              ; preds = %146, %136
  %149 = phi %"class.blink::LayoutBoxModelObject"* [ %137, %136 ], [ %133, %146 ]
  %150 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %145, %136 ], [ %147, %146 ]
  %151 = tail call i32 %150(%"class.blink::LayoutBoxModelObject"* %149) #13
  %152 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !57
  %153 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %152, i64 0, i32 0, i32 9
  %154 = bitcast [20 x i8]* %153 to i160*
  %155 = load i160, i160* %154, align 8, !noalias !57
  %156 = lshr i160 %155, 102
  %157 = trunc i160 %156 to i8
  %158 = and i8 %157, 3
  switch i8 %158, label %159 [
    i8 0, label %168
    i8 1, label %160
  ]

159:                                              ; preds = %148
  br label %160

160:                                              ; preds = %159, %148
  %161 = phi { i64, i64 } [ { i64 969, i64 0 }, %159 ], [ { i64 961, i64 0 }, %148 ]
  %162 = extractvalue { i64, i64 } %161, 0
  %163 = extractvalue { i64, i64 } %161, 1
  %164 = getelementptr inbounds i8, i8* %56, i64 %163
  %165 = bitcast i8* %164 to %"class.blink::LayoutBoxModelObject"*
  %166 = and i64 %162, 1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %178, label %168

168:                                              ; preds = %160, %148
  %169 = phi %"class.blink::LayoutBoxModelObject"* [ %165, %160 ], [ %0, %148 ]
  %170 = phi i8* [ %164, %160 ], [ %56, %148 ]
  %171 = phi i64 [ %162, %160 ], [ 953, %148 ]
  %172 = bitcast i8* %170 to i8**
  %173 = load i8*, i8** %172, align 8
  %174 = add i64 %171, -1
  %175 = getelementptr i8, i8* %173, i64 %174
  %176 = bitcast i8* %175 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %177 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %176, align 8
  br label %180

178:                                              ; preds = %160
  %179 = inttoptr i64 %162 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %180

180:                                              ; preds = %168, %178
  %181 = phi %"class.blink::LayoutBoxModelObject"* [ %169, %168 ], [ %165, %178 ]
  %182 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %177, %168 ], [ %179, %178 ]
  %183 = tail call i32 %182(%"class.blink::LayoutBoxModelObject"* %181) #13
  %184 = icmp slt i32 %183, 0
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %183) #13
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !10
  %190 = icmp slt i32 %189, 0
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %189) #13
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %191, i32 %194, !prof !10
  br label %196

196:                                              ; preds = %43, %180
  %197 = phi i32 [ %195, %180 ], [ 0, %43 ]
  ret i32 %197
}

declare void @_ZN5blink9LayoutBox26ComputeBlockStaticDistanceERNS_6LengthES2_PKS0_PKNS_20LayoutBoxModelObjectEPKNS_20NGBoxFragmentBuilderE(%"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8), %"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::NGBoxFragmentBuilder"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox33ComputeLogicalTopPositionedOffsetERNS_10LayoutUnitEPKS0_S1_PKNS_20LayoutBoxModelObjectES1_(%"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutBox"*, i32, %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink14LayoutReplaced16ComputeObjectFitEPKNS_10LayoutSizeE(%"class.blink::LayoutReplaced"*, %"class.blink::LayoutSize"* readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.blink::LengthPoint"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.blink::PhysicalSize"*
  %7 = alloca %"struct.blink::PhysicalRect", align 8
  %8 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %10 = tail call { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv(%"class.blink::LayoutBox"* %9)
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  %13 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %14 = bitcast %"class.blink::ComputedStyle"** %13 to %"class.blink::ComputedStyleBase"**
  %15 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %19, i64 0, i32 13
  %21 = bitcast [3 x i8]* %20 to i24*
  %22 = load i24, i24* %21, align 8
  %23 = lshr i24 %22, 14
  %24 = and i24 %23, 7
  %25 = zext i24 %24 to i32
  %26 = icmp eq i24 %24, 3
  br i1 %26, label %27, label %45

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %29, i64 0, i32 21
  %31 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #13
  store <2 x i64> <i64 282575600353280, i64 282575600353280>, <2 x i64>* %3, align 16, !alias.scope !60
  %32 = call zeroext i1 @_ZNK5blink11LengthPointeqERKS0_(%"struct.blink::LengthPoint"* %30, %"struct.blink::LengthPoint"* nonnull dereferenceable(16) %4)
  %33 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %4, i64 0, i32 1, i32 2
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %38

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %4, i64 0, i32 1
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %37) #13
  br label %38

38:                                               ; preds = %36, %27
  %39 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %4, i64 0, i32 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 8
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  %43 = bitcast <2 x i64>* %3 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %43) #13
  br label %44

44:                                               ; preds = %42, %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #13
  br i1 %32, label %236, label %45

45:                                               ; preds = %2, %44
  %46 = icmp eq %"class.blink::LayoutSize"* %1, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %45
  %48 = bitcast %"class.blink::LayoutSize"* %1 to i64*
  %49 = load i64, i64* %48, align 4
  br label %52

50:                                               ; preds = %45
  %51 = call i64 @_ZNK5blink14LayoutReplaced13IntrinsicSizeEv(%"class.blink::LayoutReplaced"* %0)
  br label %52

52:                                               ; preds = %50, %47
  %53 = phi i64 [ %49, %47 ], [ %51, %50 ]
  %54 = trunc i64 %53 to i32
  %55 = lshr i64 %53, 32
  %56 = trunc i64 %55 to i32
  %57 = icmp ne i32 %54, 0
  %58 = icmp ne i32 %56, 0
  %59 = and i1 %57, %58
  br i1 %59, label %60, label %236

60:                                               ; preds = %52
  %61 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #13
  %62 = bitcast i64* %5 to i32*
  %63 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %6, i64 0, i32 1, i32 0
  store i32 %54, i32* %62, align 8
  store i32 %56, i32* %63, align 4
  %64 = bitcast %"struct.blink::PhysicalRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #13
  %65 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 0, i32 1, i32 0
  %67 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1
  %68 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1, i32 1, i32 0
  %69 = bitcast %"struct.blink::PhysicalRect"* %7 to i64*
  store i64 %11, i64* %69, align 8
  %70 = bitcast %"struct.blink::PhysicalSize"* %67 to i64*
  store i64 %12, i64* %70, align 8
  %71 = trunc i64 %12 to i32
  %72 = lshr i64 %12, 32
  %73 = trunc i64 %72 to i32
  switch i32 %25, label %127 [
    i32 4, label %74
    i32 1, label %111
    i32 2, label %111
    i32 0, label %122
  ]

74:                                               ; preds = %60
  %75 = icmp eq %"class.blink::LayoutReplaced"* %0, null
  br i1 %75, label %111, label %76

76:                                               ; preds = %74
  %77 = bitcast %"class.blink::LayoutReplaced"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %78 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %77, align 8
  %79 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %78, i64 92
  %80 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %79, align 8
  %81 = call zeroext i1 %80(%"class.blink::LayoutObject"* %8, i32 12) #13
  br i1 %81, label %82, label %111

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 1, i32 0, i32 0, i32 0, i32 4
  %84 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %83 to float*
  %85 = load float, float* %84, align 4
  %86 = fdiv float 1.000000e+00, %85
  %87 = load i32, i32* %62, align 8
  %88 = sitofp i32 %87 to float
  %89 = fmul float %88, 1.562500e-02
  %90 = fmul float %86, %89
  %91 = fmul float %90, 6.400000e+01
  %92 = fcmp ult float %91, 0xC1E0000000000000
  %93 = fcmp ugt float %91, 0x41DFFFFFE0000000
  %94 = fcmp ogt float %91, 0xC1E0000000000000
  %95 = select i1 %94, float %91, float 0xC1E0000000000000
  %96 = fptosi float %95 to i32
  %97 = select i1 %92, i32 0, i32 2147483647
  %98 = select i1 %93, i32 %97, i32 %96
  store i32 %98, i32* %62, align 8
  %99 = load i32, i32* %63, align 4
  %100 = sitofp i32 %99 to float
  %101 = fmul float %100, 1.562500e-02
  %102 = fmul float %86, %101
  %103 = fmul float %102, 6.400000e+01
  %104 = fcmp ult float %103, 0xC1E0000000000000
  %105 = fcmp ugt float %103, 0x41DFFFFFE0000000
  %106 = fcmp ogt float %103, 0xC1E0000000000000
  %107 = select i1 %106, float %103, float 0xC1E0000000000000
  %108 = fptosi float %107 to i32
  %109 = select i1 %104, i32 0, i32 2147483647
  %110 = select i1 %105, i32 %109, i32 %108
  store i32 %110, i32* %63, align 4
  br label %111

111:                                              ; preds = %76, %74, %82, %60, %60
  %112 = icmp eq i24 %24, 2
  %113 = zext i1 %112 to i32
  %114 = call i64 @_ZNK5blink12PhysicalSize16FitToAspectRatioERKS0_NS_14AspectRatioFitE(%"struct.blink::PhysicalSize"* %67, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %6, i32 %113) #13
  store i64 %114, i64* %70, align 8
  %115 = icmp eq i24 %24, 4
  %116 = trunc i64 %114 to i32
  %117 = lshr i64 %114, 32
  %118 = trunc i64 %117 to i32
  %119 = load i32, i32* %62, align 8
  %120 = icmp slt i32 %119, %116
  %121 = and i1 %115, %120
  br i1 %121, label %122, label %127

122:                                              ; preds = %111, %60
  %123 = load i64, i64* %5, align 8
  store i64 %123, i64* %70, align 8
  %124 = trunc i64 %123 to i32
  %125 = lshr i64 %123, 32
  %126 = trunc i64 %125 to i32
  br label %127

127:                                              ; preds = %111, %60, %122
  %128 = phi i32 [ %118, %111 ], [ %73, %60 ], [ %126, %122 ]
  %129 = phi i32 [ %116, %111 ], [ %71, %60 ], [ %124, %122 ]
  %130 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %130, i64 0, i32 3, i32 0, i32 0
  %132 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %132, i64 0, i32 2, i32 0, i32 0
  %134 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %134, i64 0, i32 2, i32 0, i32 0
  %136 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %136, i64 0, i32 21, i32 0
  %138 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %71, i32 %129) #13
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %136, i64 0, i32 21, i32 0, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 2
  br i1 %141, label %142, label %163, !prof !47

142:                                              ; preds = %127
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %136, i64 0, i32 21, i32 0, i32 3
  %144 = load i8, i8* %143, align 2, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %149, label %146

146:                                              ; preds = %142
  %147 = bitcast %"class.blink::Length"* %137 to float*
  %148 = load float, float* %147, align 4
  br label %153

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %137, i64 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = sitofp i32 %151 to float
  br label %153

153:                                              ; preds = %149, %146
  %154 = phi float [ %148, %146 ], [ %152, %149 ]
  %155 = fmul float %154, 6.400000e+01
  %156 = fcmp ult float %155, 0xC1E0000000000000
  %157 = fcmp ugt float %155, 0x41DFFFFFE0000000
  %158 = fcmp ogt float %155, 0xC1E0000000000000
  %159 = select i1 %158, float %155, float 0xC1E0000000000000
  %160 = fptosi float %159 to i32
  %161 = select i1 %156, i32 0, i32 2147483647
  %162 = select i1 %157, i32 %161, i32 %160
  br label %178

163:                                              ; preds = %127
  %164 = extractvalue { i32, i1 } %138, 1
  %165 = icmp sgt i32 %129, -1
  %166 = select i1 %165, i32 -2147483648, i32 2147483647
  %167 = extractvalue { i32, i1 } %138, 0
  %168 = select i1 %164, i32 %166, i32 %167, !prof !10
  %169 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %137, i32 %168) #13
  %170 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %171 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %170, i64 0, i32 3, i32 0, i32 0
  %172 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %171, align 8
  %173 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %172, i64 0, i32 2, i32 0, i32 0
  %174 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %173, align 8
  %175 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %174, i64 0, i32 2, i32 0, i32 0
  %176 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %175, align 8
  %177 = load i32, i32* %68, align 4
  br label %178

178:                                              ; preds = %153, %163
  %179 = phi i32 [ %128, %153 ], [ %177, %163 ]
  %180 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* [ %136, %153 ], [ %176, %163 ]
  %181 = phi i32 [ %162, %153 ], [ %169, %163 ]
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %180, i64 0, i32 21, i32 1
  %183 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %73, i32 %179) #13
  %184 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %180, i64 0, i32 21, i32 1, i32 2
  %185 = load i8, i8* %184, align 1
  %186 = icmp eq i8 %185, 2
  br i1 %186, label %187, label %208, !prof !47

187:                                              ; preds = %178
  %188 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %180, i64 0, i32 21, i32 1, i32 3
  %189 = load i8, i8* %188, align 2, !range !2
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %194, label %191

191:                                              ; preds = %187
  %192 = bitcast %"class.blink::Length"* %182 to float*
  %193 = load float, float* %192, align 4
  br label %198

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %182, i64 0, i32 0, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = sitofp i32 %196 to float
  br label %198

198:                                              ; preds = %194, %191
  %199 = phi float [ %193, %191 ], [ %197, %194 ]
  %200 = fmul float %199, 6.400000e+01
  %201 = fcmp ult float %200, 0xC1E0000000000000
  %202 = fcmp ugt float %200, 0x41DFFFFFE0000000
  %203 = fcmp ogt float %200, 0xC1E0000000000000
  %204 = select i1 %203, float %200, float 0xC1E0000000000000
  %205 = fptosi float %204 to i32
  %206 = select i1 %201, i32 0, i32 2147483647
  %207 = select i1 %202, i32 %206, i32 %205
  br label %215

208:                                              ; preds = %178
  %209 = extractvalue { i32, i1 } %183, 1
  %210 = icmp sgt i32 %179, -1
  %211 = select i1 %210, i32 -2147483648, i32 2147483647
  %212 = extractvalue { i32, i1 } %183, 0
  %213 = select i1 %209, i32 %211, i32 %212, !prof !10
  %214 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %182, i32 %213) #13
  br label %215

215:                                              ; preds = %198, %208
  %216 = phi i32 [ %207, %198 ], [ %214, %208 ]
  %217 = load i32, i32* %65, align 8
  %218 = icmp slt i32 %181, 0
  %219 = select i1 %218, i32 -2147483648, i32 2147483647
  %220 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %217, i32 %181) #13
  %221 = extractvalue { i32, i1 } %220, 1
  %222 = extractvalue { i32, i1 } %220, 0
  %223 = select i1 %221, i32 %219, i32 %222, !prof !10
  %224 = load i32, i32* %66, align 4
  %225 = icmp slt i32 %216, 0
  %226 = select i1 %225, i32 -2147483648, i32 2147483647
  %227 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %224, i32 %216) #13
  %228 = extractvalue { i32, i1 } %227, 1
  %229 = extractvalue { i32, i1 } %227, 0
  %230 = select i1 %228, i32 %226, i32 %229, !prof !10
  %231 = zext i32 %230 to i64
  %232 = shl nuw i64 %231, 32
  %233 = zext i32 %223 to i64
  %234 = or i64 %232, %233
  store i64 %234, i64* %69, align 8
  %235 = load i64, i64* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #13
  br label %236

236:                                              ; preds = %52, %44, %215
  %237 = phi i64 [ %234, %215 ], [ %11, %44 ], [ %11, %52 ]
  %238 = phi i64 [ %235, %215 ], [ %12, %44 ], [ %12, %52 ]
  %239 = insertvalue { i64, i64 } undef, i64 %237, 0
  %240 = insertvalue { i64, i64 } %239, i64 %238, 1
  ret { i64, i64 } %240
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #13
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #13
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #13
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %35, %29, %9, %1
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = phi i1 [ false, %35 ], [ false, %25 ], [ false, %15 ], [ %45, %39 ]
  %48 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %49 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %50 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %50, i64 124
  %52 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, align 8
  %53 = tail call i32 %52(%"class.blink::LayoutBoxModelObject"* %48) #13
  br i1 %47, label %65, label %54

54:                                               ; preds = %46
  %55 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #13
  %56 = extractvalue { i64, i64 } %55, 1
  %57 = lshr i64 %56, 32
  %58 = trunc i64 %57 to i32
  %59 = icmp slt i32 %58, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %58) #13
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !10
  br label %65

65:                                               ; preds = %46, %54
  %66 = phi i32 [ %64, %54 ], [ %53, %46 ]
  %67 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %68 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %67, i64 120
  %69 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %68, align 8
  %70 = tail call i32 %69(%"class.blink::LayoutBoxModelObject"* %48) #13
  %71 = icmp slt i32 %70, 0
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %66, i32 %70) #13
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !10
  %77 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %77, i64 0, i32 0, i32 9
  %79 = bitcast [20 x i8]* %78 to i160*
  %80 = load i160, i160* %79, align 8
  %81 = and i160 %80, 1190036353683150593851392
  %82 = icmp eq i160 %81, 340010386766614455386112
  br i1 %82, label %112, label %83

83:                                               ; preds = %65
  %84 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %85 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %84 to i96*
  %86 = load i96, i96* %85, align 4
  %87 = and i96 %86, 8589934592
  %88 = icmp eq i96 %87, 0
  br i1 %88, label %112, label %89

89:                                               ; preds = %83
  %90 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %48) #13
  %91 = icmp eq %"class.blink::PaintLayerScrollableArea"* %90, null
  br i1 %91, label %119, label %92

92:                                               ; preds = %89
  %93 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %48) #13
  %94 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %93, i64 0, i32 6, i32 3
  %95 = load i8, i8* %94, align 8
  %96 = and i8 %95, 1
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %102, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %93, i64 0, i32 6, i32 1, i32 0, i32 0
  %100 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %99, align 8
  %101 = icmp eq %"class.blink::Scrollbar"* %100, null
  br i1 %101, label %102, label %119

102:                                              ; preds = %98, %92
  %103 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %48) #13
  %104 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %103, i64 0, i32 6, i32 3
  %105 = load i8, i8* %104, align 8
  %106 = and i8 %105, 2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %112, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %103, i64 0, i32 6, i32 2, i32 0, i32 0
  %110 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %109, align 8
  %111 = icmp eq %"class.blink::Scrollbar"* %110, null
  br i1 %111, label %112, label %119

112:                                              ; preds = %108, %102, %83, %65
  %113 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %114 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %113, i64 0, i32 0, i32 9
  %115 = bitcast [20 x i8]* %114 to i160*
  %116 = load i160, i160* %115, align 8
  %117 = and i160 %116, 270215977642229760
  %118 = icmp eq i160 %117, 0
  br label %119

119:                                              ; preds = %89, %98, %108, %112
  %120 = phi i1 [ false, %108 ], [ false, %98 ], [ false, %89 ], [ %118, %112 ]
  %121 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %122 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %121, i64 122
  %123 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %122, align 8
  %124 = tail call i32 %123(%"class.blink::LayoutBoxModelObject"* %48) #13
  br i1 %120, label %135, label %125

125:                                              ; preds = %119
  %126 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #13
  %127 = extractvalue { i64, i64 } %126, 0
  %128 = trunc i64 %127 to i32
  %129 = icmp slt i32 %128, 0
  %130 = select i1 %129, i32 -2147483648, i32 2147483647
  %131 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %124, i32 %128) #13
  %132 = extractvalue { i32, i1 } %131, 1
  %133 = extractvalue { i32, i1 } %131, 0
  %134 = select i1 %132, i32 %130, i32 %133, !prof !10
  br label %135

135:                                              ; preds = %119, %125
  %136 = phi i32 [ %134, %125 ], [ %124, %119 ]
  %137 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %138 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %137, i64 118
  %139 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %138, align 8
  %140 = tail call i32 %139(%"class.blink::LayoutBoxModelObject"* %48) #13
  %141 = icmp slt i32 %140, 0
  %142 = select i1 %141, i32 -2147483648, i32 2147483647
  %143 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %136, i32 %140) #13
  %144 = extractvalue { i32, i1 } %143, 1
  %145 = extractvalue { i32, i1 } %143, 0
  %146 = select i1 %144, i32 %142, i32 %145, !prof !10
  %147 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #13
  %148 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %149 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %148, i64 120
  %150 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %149, align 8
  %151 = tail call i32 %150(%"class.blink::LayoutBoxModelObject"* %48) #13
  %152 = icmp sgt i32 %151, -1
  %153 = select i1 %152, i32 -2147483648, i32 2147483647
  %154 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %147, i32 %151) #13
  %155 = extractvalue { i32, i1 } %154, 1
  %156 = extractvalue { i32, i1 } %154, 0
  %157 = select i1 %155, i32 %153, i32 %156, !prof !10
  %158 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %159 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %158, i64 121
  %160 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %159, align 8
  %161 = tail call i32 %160(%"class.blink::LayoutBoxModelObject"* %48) #13
  %162 = icmp sgt i32 %161, -1
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %157, i32 %161) #13
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !10
  %168 = icmp sgt i32 %167, 0
  %169 = select i1 %168, i32 %167, i32 0
  %170 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #13
  %171 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %172 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %171, i64 118
  %173 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %172, align 8
  %174 = tail call i32 %173(%"class.blink::LayoutBoxModelObject"* %48) #13
  %175 = icmp sgt i32 %174, -1
  %176 = select i1 %175, i32 -2147483648, i32 2147483647
  %177 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %170, i32 %174) #13
  %178 = extractvalue { i32, i1 } %177, 1
  %179 = extractvalue { i32, i1 } %177, 0
  %180 = select i1 %178, i32 %176, i32 %179, !prof !10
  %181 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %182 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %181, i64 119
  %183 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %182, align 8
  %184 = tail call i32 %183(%"class.blink::LayoutBoxModelObject"* %48) #13
  %185 = icmp sgt i32 %184, -1
  %186 = select i1 %185, i32 -2147483648, i32 2147483647
  %187 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %180, i32 %184) #13
  %188 = extractvalue { i32, i1 } %187, 1
  %189 = extractvalue { i32, i1 } %187, 0
  %190 = select i1 %188, i32 %186, i32 %189, !prof !10
  %191 = icmp sgt i32 %190, 0
  %192 = select i1 %191, i32 %190, i32 0
  %193 = zext i32 %146 to i64
  %194 = shl nuw i64 %193, 32
  %195 = zext i32 %76 to i64
  %196 = or i64 %194, %195
  %197 = insertvalue { i64, i64 } undef, i64 %196, 0
  %198 = zext i32 %192 to i64
  %199 = shl nuw nsw i64 %198, 32
  %200 = zext i32 %169 to i64
  %201 = or i64 %199, %200
  %202 = insertvalue { i64, i64 } %197, i64 %201, 1
  ret { i64, i64 } %202
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LengthPointeqERKS0_(%"struct.blink::LengthPoint"*, %"struct.blink::LengthPoint"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %0, i64 0, i32 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %1, i64 0, i32 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %6, %8
  br i1 %9, label %10, label %90

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %0, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %1, i64 0, i32 0, i32 1
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %12, %14
  br i1 %15, label %16, label %90

16:                                               ; preds = %10
  %17 = icmp eq i8 %6, 12
  br i1 %17, label %46, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %0, i64 0, i32 0, i32 3
  %20 = load i8, i8* %19, align 2, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = bitcast %"struct.blink::LengthPoint"* %0 to float*
  %24 = load float, float* %23, align 4
  br label %29

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  br label %29

29:                                               ; preds = %25, %22
  %30 = phi float [ %24, %22 ], [ %28, %25 ]
  %31 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %1, i64 0, i32 0, i32 3
  %32 = load i8, i8* %31, align 2, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.blink::LengthPoint"* %1 to float*
  %36 = load float, float* %35, align 4
  br label %41

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %1, i64 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = sitofp i32 %39 to float
  br label %41

41:                                               ; preds = %37, %34
  %42 = phi float [ %36, %34 ], [ %40, %37 ]
  %43 = fcmp oeq float %30, %42
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %3, %"class.blink::Length"* dereferenceable(8) %4) #13
  br i1 %45, label %46, label %90

46:                                               ; preds = %16, %41, %44
  %47 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %1, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %0, i64 0, i32 1, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %1, i64 0, i32 1, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %50, %52
  br i1 %53, label %54, label %90

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %0, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 4, !range !2
  %57 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %1, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 4, !range !2
  %59 = icmp eq i8 %56, %58
  br i1 %59, label %60, label %90

60:                                               ; preds = %54
  %61 = icmp eq i8 %50, 12
  br i1 %61, label %90, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %0, i64 0, i32 1, i32 3
  %64 = load i8, i8* %63, align 2, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.blink::Length"* %47 to float*
  %68 = load float, float* %67, align 4
  br label %73

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %47, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = sitofp i32 %71 to float
  br label %73

73:                                               ; preds = %69, %66
  %74 = phi float [ %68, %66 ], [ %72, %69 ]
  %75 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %1, i64 0, i32 1, i32 3
  %76 = load i8, i8* %75, align 2, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %73
  %79 = bitcast %"class.blink::Length"* %48 to float*
  %80 = load float, float* %79, align 4
  br label %85

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = sitofp i32 %83 to float
  br label %85

85:                                               ; preds = %81, %78
  %86 = phi float [ %80, %78 ], [ %84, %81 ]
  %87 = fcmp oeq float %74, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %47, %"class.blink::Length"* dereferenceable(8) %48) #13
  br label %90

90:                                               ; preds = %2, %10, %88, %85, %60, %54, %46, %44
  %91 = phi i1 [ false, %44 ], [ false, %54 ], [ false, %46 ], [ true, %85 ], [ true, %60 ], [ %89, %88 ], [ false, %10 ], [ false, %2 ]
  ret i1 %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink14LayoutReplaced13IntrinsicSizeEv(%"class.blink::LayoutReplaced"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %2) #13
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %2) #13
  br label %70

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %15, i64 0, i32 45
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 24
  %19 = icmp eq i32 %18, 24
  br i1 %19, label %20, label %67

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %22 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %21 to i96*
  %23 = load i96, i96* %22, align 4
  %24 = and i96 %23, 1207959552
  %25 = icmp eq i96 %24, 134217728
  br i1 %25, label %67, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::LayoutReplaced"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %28 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %28, i64 92
  %30 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::LayoutObject"* %7, i32 43) #13
  br i1 %31, label %67, label %32

32:                                               ; preds = %26
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %27, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, i64 92
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* %7, i32 46) #13
  br i1 %36, label %57, label %37

37:                                               ; preds = %32
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %27, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, i64 92
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutObject"* %7, i32 48) #13
  br i1 %41, label %57, label %42

42:                                               ; preds = %37
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %27, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, i64 92
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* %7, i32 45) #13
  br i1 %46, label %57, label %47

47:                                               ; preds = %42
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %27, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, i64 92
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::LayoutObject"* %7, i32 49) #13
  br i1 %51, label %57, label %52

52:                                               ; preds = %47
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %27, align 8
  %54 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, i64 92
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.blink::LayoutObject"* %7, i32 50) #13
  br i1 %56, label %57, label %62

57:                                               ; preds = %52, %47, %42, %37, %32
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %27, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, i64 92
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::LayoutObject"* %7, i32 45) #13
  br i1 %61, label %62, label %67

62:                                               ; preds = %52, %57
  %63 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %27, align 8
  %64 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %63, i64 92
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.blink::LayoutObject"* %7, i32 44) #13
  br i1 %66, label %67, label %70

67:                                               ; preds = %62, %20, %26, %57, %6
  %68 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 1, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  br label %70

70:                                               ; preds = %62, %4, %67
  %71 = phi i32 [ %5, %4 ], [ %69, %67 ], [ 0, %62 ]
  %72 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %2) #13
  br i1 %72, label %73, label %75

73:                                               ; preds = %70
  %74 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %2) #13
  br label %139

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %78 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %78, i64 0, i32 0, i32 3, i32 0, i32 0
  %80 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %80, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %82, i64 0, i32 2, i32 0, i32 0
  %84 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %84, i64 0, i32 45
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, 24
  %88 = icmp eq i32 %87, 24
  br i1 %88, label %89, label %136

89:                                               ; preds = %75
  %90 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %91 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %90 to i96*
  %92 = load i96, i96* %91, align 4
  %93 = and i96 %92, 1207959552
  %94 = icmp eq i96 %93, 134217728
  br i1 %94, label %136, label %95

95:                                               ; preds = %89
  %96 = bitcast %"class.blink::LayoutReplaced"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %97 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %96, align 8
  %98 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %97, i64 92
  %99 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %98, align 8
  %100 = tail call zeroext i1 %99(%"class.blink::LayoutObject"* %76, i32 43) #13
  br i1 %100, label %136, label %101

101:                                              ; preds = %95
  %102 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %96, align 8
  %103 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %102, i64 92
  %104 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %103, align 8
  %105 = tail call zeroext i1 %104(%"class.blink::LayoutObject"* %76, i32 46) #13
  br i1 %105, label %126, label %106

106:                                              ; preds = %101
  %107 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %96, align 8
  %108 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %107, i64 92
  %109 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %108, align 8
  %110 = tail call zeroext i1 %109(%"class.blink::LayoutObject"* %76, i32 48) #13
  br i1 %110, label %126, label %111

111:                                              ; preds = %106
  %112 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %96, align 8
  %113 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %112, i64 92
  %114 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %113, align 8
  %115 = tail call zeroext i1 %114(%"class.blink::LayoutObject"* %76, i32 45) #13
  br i1 %115, label %126, label %116

116:                                              ; preds = %111
  %117 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %96, align 8
  %118 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %117, i64 92
  %119 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %118, align 8
  %120 = tail call zeroext i1 %119(%"class.blink::LayoutObject"* %76, i32 49) #13
  br i1 %120, label %126, label %121

121:                                              ; preds = %116
  %122 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %96, align 8
  %123 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %122, i64 92
  %124 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %123, align 8
  %125 = tail call zeroext i1 %124(%"class.blink::LayoutObject"* %76, i32 50) #13
  br i1 %125, label %126, label %131

126:                                              ; preds = %121, %116, %111, %106, %101
  %127 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %96, align 8
  %128 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %127, i64 92
  %129 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %128, align 8
  %130 = tail call zeroext i1 %129(%"class.blink::LayoutObject"* %76, i32 45) #13
  br i1 %130, label %131, label %136

131:                                              ; preds = %121, %126
  %132 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %96, align 8
  %133 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %132, i64 92
  %134 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %133, align 8
  %135 = tail call zeroext i1 %134(%"class.blink::LayoutObject"* %76, i32 44) #13
  br i1 %135, label %136, label %139

136:                                              ; preds = %131, %89, %95, %126, %75
  %137 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 1, i32 1, i32 0
  %138 = load i32, i32* %137, align 4
  br label %139

139:                                              ; preds = %131, %73, %136
  %140 = phi i32 [ %74, %73 ], [ %138, %136 ], [ 0, %131 ]
  %141 = zext i32 %140 to i64
  %142 = shl nuw i64 %141, 32
  %143 = zext i32 %71 to i64
  %144 = or i64 %142, %143
  ret i64 %144
}

declare i64 @_ZNK5blink12PhysicalSize16FitToAspectRatioERKS0_NS_14AspectRatioFitE(%"struct.blink::PhysicalSize"*, %"struct.blink::PhysicalSize"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink14LayoutReplaced19ReplacedContentRectEv(%"class.blink::LayoutReplaced"*) unnamed_addr #0 align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink14LayoutReplaced16ComputeObjectFitEPKNS_10LayoutSizeE(%"class.blink::LayoutReplaced"* %0, %"class.blink::LayoutSize"* null)
  ret { i64, i64 } %2
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN5blink14LayoutReplaced33PreSnappedRectForPersistentSizingERKNS_12PhysicalRectE(%"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = sdiv i32 %3, 64
  %5 = srem i32 %3, 64
  %6 = add nsw i32 %5, 32
  %7 = ashr i32 %6, 6
  %8 = add nsw i32 %7, %4
  %9 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 1, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sdiv i32 %10, 64
  %12 = srem i32 %10, 64
  %13 = add nsw i32 %12, 32
  %14 = ashr i32 %13, 6
  %15 = add nsw i32 %14, %11
  %16 = icmp sgt i32 %8, 33554431
  br i1 %16, label %22, label %17

17:                                               ; preds = %1
  %18 = icmp slt i32 %8, -33554432
  %19 = shl i32 %8, 6
  %20 = select i1 %18, i32 -2147483648, i32 %19
  %21 = zext i32 %20 to i64
  br label %22

22:                                               ; preds = %17, %1
  %23 = phi i64 [ 2147483647, %1 ], [ %21, %17 ]
  %24 = icmp sgt i32 %15, 33554431
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = icmp slt i32 %15, -33554432
  %27 = shl i32 %15, 6
  %28 = select i1 %26, i32 -2147483648, i32 %27
  %29 = zext i32 %28 to i64
  %30 = shl nuw i64 %29, 32
  br label %31

31:                                               ; preds = %25, %22
  %32 = phi i64 [ 9223372032559808512, %22 ], [ %30, %25 ]
  %33 = bitcast %"struct.blink::PhysicalRect"* %0 to i64*
  %34 = load i64, i64* %33, align 4
  %35 = or i64 %32, %23
  %36 = insertvalue { i64, i64 } undef, i64 %34, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14LayoutReplaced26ComputeIntrinsicSizingInfoERNS_19IntrinsicSizingInfoE(%"class.blink::LayoutReplaced"*, %"struct.blink::IntrinsicSizingInfo"* nocapture dereferenceable(20)) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 0
  %12 = bitcast %"class.blink::LayoutReplaced"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %13 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %12, align 8
  %14 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %13, i64 165
  %15 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %14, align 8
  %16 = tail call i64 %15(%"class.blink::LayoutBox"* %4) #13
  %17 = lshr i64 %16, 32
  %18 = select i1 %11, i64 %16, i64 %17
  %19 = trunc i64 %18 to i32
  %20 = sitofp i32 %19 to float
  %21 = fmul float %20, 1.562500e-02
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = and i160 %25, 15211807202738752817960438464512
  %27 = icmp eq i160 %26, 0
  %28 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %12, align 8
  %29 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %28, i64 165
  %30 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %29, align 8
  %31 = tail call i64 %30(%"class.blink::LayoutBox"* %4) #13
  %32 = lshr i64 %31, 32
  %33 = select i1 %27, i64 %32, i64 %31
  %34 = trunc i64 %33 to i32
  %35 = sitofp i32 %34 to float
  %36 = fmul float %35, 1.562500e-02
  %37 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 0, i32 0
  store float %21, float* %37, align 4
  %38 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 0, i32 1
  store float %36, float* %38, align 4
  %39 = bitcast %"class.blink::ComputedStyle"** %5 to %"class.blink::ComputedStyleBase"**
  %40 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %40, i64 0, i32 5, i32 0, i32 0
  %42 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %42, i64 0, i32 1
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %42, i64 0, i32 1, i32 1, i32 0
  %45 = load float, float* %44, align 4
  %46 = fcmp oeq float %45, 0.000000e+00
  br i1 %46, label %88, label %47

47:                                               ; preds = %2
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %42, i64 0, i32 1, i32 1, i32 1
  %49 = load float, float* %48, align 4
  %50 = fcmp oeq float %49, 0.000000e+00
  %51 = fcmp olt float %45, 1.562500e-02
  %52 = or i1 %51, %50
  %53 = fcmp olt float %49, 1.562500e-02
  %54 = or i1 %53, %52
  br i1 %54, label %86, label %55

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.blink::StyleAspectRatio", %"class.blink::StyleAspectRatio"* %43, i64 0, i32 0
  %57 = load i8, i8* %56, align 4
  %58 = and i8 %57, 3
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %86, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 1
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %42, i64 0, i32 1, i32 1
  %63 = bitcast %"class.blink::FloatSize"* %62 to <2 x float>*
  %64 = load <2 x float>, <2 x float>* %63, align 4
  %65 = extractelement <2 x float> %64, i32 0
  %66 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %61, i64 0, i32 0
  store float %65, float* %66, align 4
  %67 = load <2 x float>, <2 x float>* %63, align 4
  %68 = extractelement <2 x float> %67, i32 1
  %69 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 1, i32 1
  store float %68, float* %69, align 4
  %70 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %71 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %70 to i96*
  %72 = load i96, i96* %71, align 4
  %73 = trunc i96 %72 to i32
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %86, label %75

75:                                               ; preds = %60
  %76 = insertelement <2 x float> undef, float %36, i32 0
  %77 = insertelement <2 x float> %76, float %21, i32 1
  %78 = bitcast %"struct.blink::IntrinsicSizingInfo"* %1 to <2 x float>*
  store <2 x float> %77, <2 x float>* %78, align 4
  %79 = shufflevector <2 x float> %67, <2 x float> undef, <2 x i32> <i32 1, i32 undef>
  %80 = shufflevector <2 x float> %79, <2 x float> %64, <2 x i32> <i32 0, i32 2>
  %81 = bitcast %"class.blink::FloatSize"* %61 to <2 x float>*
  store <2 x float> %80, <2 x float>* %81, align 4
  %82 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 2
  %83 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 3
  %84 = load i8, i8* %82, align 1, !range !2
  %85 = load i8, i8* %83, align 1, !range !2
  store i8 %85, i8* %82, align 1
  store i8 %84, i8* %83, align 1
  br label %86

86:                                               ; preds = %55, %75, %60, %47
  %87 = load float, float* %44, align 4
  br label %88

88:                                               ; preds = %86, %2
  %89 = phi float [ %87, %86 ], [ %45, %2 ]
  %90 = fcmp oeq float %89, 0.000000e+00
  br i1 %90, label %104, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %42, i64 0, i32 1, i32 1, i32 1
  %93 = load float, float* %92, align 4
  %94 = fcmp oeq float %93, 0.000000e+00
  %95 = fcmp olt float %89, 1.562500e-02
  %96 = or i1 %95, %94
  %97 = fcmp olt float %93, 1.562500e-02
  %98 = or i1 %97, %96
  br i1 %98, label %104, label %99

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.blink::StyleAspectRatio", %"class.blink::StyleAspectRatio"* %43, i64 0, i32 0
  %101 = load i8, i8* %100, align 4
  %102 = and i8 %101, 3
  %103 = icmp eq i8 %102, 2
  br i1 %103, label %134, label %104

104:                                              ; preds = %88, %91, %99
  %105 = bitcast %"class.blink::LayoutReplaced"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %106 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %105, align 8
  %107 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %106, i64 21
  %108 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %107, align 8
  %109 = tail call zeroext i1 %108(%"class.blink::LayoutObject"* %3) #13
  br i1 %109, label %123, label %110

110:                                              ; preds = %104
  %111 = bitcast %"class.blink::LayoutReplaced"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %112 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %111, align 8
  %113 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %112, i64 92
  %114 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %113, align 8
  %115 = tail call zeroext i1 %114(%"class.blink::LayoutObject"* %3, i32 2) #13
  br i1 %115, label %123, label %116

116:                                              ; preds = %110
  %117 = icmp eq %"class.blink::LayoutReplaced"* %0, null
  br i1 %117, label %134, label %118

118:                                              ; preds = %116
  %119 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %111, align 8
  %120 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %119, i64 92
  %121 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %120, align 8
  %122 = tail call zeroext i1 %121(%"class.blink::LayoutObject"* nonnull %3, i32 54) #13
  br i1 %122, label %123, label %134

123:                                              ; preds = %104, %110, %118
  %124 = load float, float* %37, align 4
  %125 = fcmp ugt float %124, 0.000000e+00
  br i1 %125, label %126, label %134

126:                                              ; preds = %123
  %127 = load float, float* %38, align 4
  %128 = fcmp ugt float %127, 0.000000e+00
  br i1 %128, label %129, label %134

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %1, i64 0, i32 1
  %131 = bitcast %"struct.blink::IntrinsicSizingInfo"* %1 to i64*
  %132 = bitcast %"class.blink::FloatSize"* %130 to i64*
  %133 = load i64, i64* %131, align 4
  store i64 %133, i64* %132, align 4
  br label %134

134:                                              ; preds = %126, %123, %116, %129, %118, %99
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14LayoutReplaced30ComputeConstrainedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutReplaced"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = icmp eq i32 %1, 1
  %12 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  br i1 %11, label %13, label %15

13:                                               ; preds = %2
  %14 = tail call i32 @_ZNK5blink9LayoutBox48ComputeReplacedLogicalWidthRespectingMinMaxWidthENS_10LayoutUnitENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"* %12, i32 0, i32 1) #13
  br label %157

15:                                               ; preds = %2
  %16 = bitcast %"class.blink::LayoutReplaced"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %17 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %17, i64 131
  %19 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %18, align 8
  %20 = tail call i32 %19(%"class.blink::LayoutBox"* %12) #13
  %21 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %23 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  %24 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 9
  %28 = bitcast [20 x i8]* %27 to i160*
  %29 = load i160, i160* %28, align 8, !noalias !63
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 7, i32 0, i32 0
  %31 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %30, align 8, !noalias !63
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %31, i64 0, i32 12
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %31, i64 0, i32 11
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %31, i64 0, i32 9
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %31, i64 0, i32 10
  store %"class.blink::Length"* %32, %"class.blink::Length"** %3, align 8, !alias.scope !63
  store %"class.blink::Length"* %33, %"class.blink::Length"** %4, align 8, !alias.scope !63
  store %"class.blink::Length"* %34, %"class.blink::Length"** %5, align 8, !alias.scope !63
  store %"class.blink::Length"* %35, %"class.blink::Length"** %6, align 8, !alias.scope !63
  %36 = and i160 %29, 15211807202738752817960438464512
  %37 = icmp eq i160 %36, 0
  %38 = and i160 %29, 41538374868278621028243970633760768
  %39 = icmp eq i160 %38, 0
  %40 = select i1 %39, %"class.blink::Length"** %6, %"class.blink::Length"** %4
  %41 = select i1 %39, %"class.blink::Length"** %3, %"class.blink::Length"** %5
  %42 = select i1 %37, %"class.blink::Length"** %40, %"class.blink::Length"** %41
  %43 = load %"class.blink::Length"*, %"class.blink::Length"** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %43, i64 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 2
  br i1 %46, label %47, label %68, !prof !47

47:                                               ; preds = %15
  %48 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %43, i64 0, i32 3
  %49 = load i8, i8* %48, align 2, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.blink::Length"* %43 to float*
  %53 = load float, float* %52, align 4
  br label %58

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %43, i64 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = sitofp i32 %56 to float
  br label %58

58:                                               ; preds = %54, %51
  %59 = phi float [ %53, %51 ], [ %57, %54 ]
  %60 = fmul float %59, 6.400000e+01
  %61 = fcmp ult float %60, 0xC1E0000000000000
  %62 = fcmp ugt float %60, 0x41DFFFFFE0000000
  %63 = fcmp ogt float %60, 0xC1E0000000000000
  %64 = select i1 %63, float %60, float 0xC1E0000000000000
  %65 = fptosi float %64 to i32
  %66 = select i1 %61, i32 0, i32 2147483647
  %67 = select i1 %62, i32 %66, i32 %65
  br label %78

68:                                               ; preds = %15
  %69 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %43, i32 %20) #13
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8, !noalias !66
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 7, i32 0, i32 0
  %75 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %74, align 8, !noalias !66
  %76 = and i160 %73, 15211807202738752817960438464512
  %77 = and i160 %73, 41538374868278621028243970633760768
  br label %78

78:                                               ; preds = %58, %68
  %79 = phi i160 [ %38, %58 ], [ %77, %68 ]
  %80 = phi i160 [ %36, %58 ], [ %76, %68 ]
  %81 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %31, %58 ], [ %75, %68 ]
  %82 = phi i32 [ %67, %58 ], [ %69, %68 ]
  %83 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  %84 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84)
  %85 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85)
  %86 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86)
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %81, i64 0, i32 12
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %81, i64 0, i32 11
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %81, i64 0, i32 9
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %81, i64 0, i32 10
  store %"class.blink::Length"* %87, %"class.blink::Length"** %7, align 8, !alias.scope !66
  store %"class.blink::Length"* %88, %"class.blink::Length"** %8, align 8, !alias.scope !66
  store %"class.blink::Length"* %89, %"class.blink::Length"** %9, align 8, !alias.scope !66
  store %"class.blink::Length"* %90, %"class.blink::Length"** %10, align 8, !alias.scope !66
  %91 = icmp eq i160 %80, 0
  %92 = icmp eq i160 %79, 0
  %93 = select i1 %92, %"class.blink::Length"** %8, %"class.blink::Length"** %10
  %94 = select i1 %92, %"class.blink::Length"** %9, %"class.blink::Length"** %7
  %95 = select i1 %91, %"class.blink::Length"** %93, %"class.blink::Length"** %94
  %96 = load %"class.blink::Length"*, %"class.blink::Length"** %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86)
  %97 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %96, i64 0, i32 2
  %98 = load i8, i8* %97, align 1
  %99 = icmp eq i8 %98, 2
  br i1 %99, label %100, label %121, !prof !47

100:                                              ; preds = %78
  %101 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %96, i64 0, i32 3
  %102 = load i8, i8* %101, align 2, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = bitcast %"class.blink::Length"* %96 to float*
  %106 = load float, float* %105, align 4
  br label %111

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %96, i64 0, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = sitofp i32 %109 to float
  br label %111

111:                                              ; preds = %107, %104
  %112 = phi float [ %106, %104 ], [ %110, %107 ]
  %113 = fmul float %112, 6.400000e+01
  %114 = fcmp ult float %113, 0xC1E0000000000000
  %115 = fcmp ugt float %113, 0x41DFFFFFE0000000
  %116 = fcmp ogt float %113, 0xC1E0000000000000
  %117 = select i1 %116, float %113, float 0xC1E0000000000000
  %118 = fptosi float %117 to i32
  %119 = select i1 %114, i32 0, i32 2147483647
  %120 = select i1 %115, i32 %119, i32 %118
  br label %123

121:                                              ; preds = %78
  %122 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %96, i32 %20) #13
  br label %123

123:                                              ; preds = %111, %121
  %124 = phi i32 [ %120, %111 ], [ %122, %121 ]
  %125 = icmp slt i32 %124, 0
  %126 = select i1 %125, i32 -2147483648, i32 2147483647
  %127 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %82, i32 %124) #13
  %128 = extractvalue { i32, i1 } %127, 1
  %129 = extractvalue { i32, i1 } %127, 0
  %130 = select i1 %128, i32 %126, i32 %129, !prof !10
  %131 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 2, i32 1
  %132 = bitcast %"class.blink::LayoutSize"* %131 to i64*
  %133 = load i64, i64* %132, align 4
  %134 = trunc i64 %133 to i32
  %135 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %12) #13
  %136 = icmp sgt i32 %135, -1
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %134, i32 %135) #13
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !10
  %142 = icmp slt i32 %141, 0
  %143 = select i1 %142, i32 -2147483648, i32 2147483647
  %144 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %130, i32 %141) #13
  %145 = extractvalue { i32, i1 } %144, 1
  %146 = extractvalue { i32, i1 } %144, 0
  %147 = select i1 %145, i32 %143, i32 %146, !prof !10
  %148 = icmp sgt i32 %147, -1
  %149 = select i1 %148, i32 -2147483648, i32 2147483647
  %150 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %20, i32 %147) #13
  %151 = extractvalue { i32, i1 } %150, 1
  %152 = extractvalue { i32, i1 } %150, 0
  %153 = select i1 %151, i32 %149, i32 %152, !prof !10
  %154 = icmp sgt i32 %153, 0
  %155 = select i1 %154, i32 %153, i32 0
  %156 = tail call i32 @_ZNK5blink9LayoutBox48ComputeReplacedLogicalWidthRespectingMinMaxWidthENS_10LayoutUnitENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"* %12, i32 %155, i32 %1) #13
  br label %157

157:                                              ; preds = %123, %13
  %158 = phi i32 [ %14, %13 ], [ %156, %123 ]
  ret i32 %158
}

declare i32 @_ZNK5blink9LayoutBox48ComputeReplacedLogicalWidthRespectingMinMaxWidthENS_10LayoutUnitENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14LayoutReplaced27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutReplaced"*, i32) unnamed_addr #7 align 2 {
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca %"class.blink::Length"*, align 8
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = alloca i64, align 8
  %18 = bitcast i64* %17 to %"class.blink::Length"*
  %19 = alloca %"struct.blink::IntrinsicSizingInfo", align 8
  %20 = alloca %"struct.blink::NGBoxStrut", align 4
  %21 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = and i160 %25, 15211807202738752817960438464512
  %27 = icmp eq i160 %26, 0
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 5, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %29, i64 0, i32 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %29, i64 0, i32 3
  %32 = select i1 %27, %"class.blink::Length"* %30, %"class.blink::Length"* %31
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %32, i64 0, i32 2
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %47

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %38 = tail call zeroext i1 @_ZNK5blink9LayoutBox23StretchInlineSizeIfAutoEv(%"class.blink::LayoutBox"* %37) #13
  br i1 %38, label %39, label %67

39:                                               ; preds = %36
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 5, i32 0, i32 0
  %45 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %44, align 8
  %46 = and i160 %43, 15211807202738752817960438464512
  br label %47

47:                                               ; preds = %39, %2
  %48 = phi i160 [ %46, %39 ], [ %26, %2 ]
  %49 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %45, %39 ], [ %29, %2 ]
  %50 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %51 = icmp eq i160 %48, 0
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %49, i64 0, i32 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %49, i64 0, i32 3
  %54 = select i1 %51, %"class.blink::Length"* %52, %"class.blink::Length"* %53
  %55 = bitcast %"class.blink::Length"* %54 to i64*
  %56 = load i64, i64* %55, align 4
  store i64 %56, i64* %17, align 8
  %57 = and i64 %56, 280375465082880
  %58 = icmp eq i64 %57, 8796093022208
  br i1 %58, label %59, label %60

59:                                               ; preds = %47
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %18) #13
  br label %60

60:                                               ; preds = %47, %59
  %61 = call i32 @_ZNK5blink9LayoutBox32ComputeReplacedLogicalWidthUsingENS_8SizeTypeENS_6LengthE(%"class.blink::LayoutBox"* %50, i32 0, %"class.blink::Length"* nonnull %18) #13
  %62 = call i32 @_ZNK5blink9LayoutBox48ComputeReplacedLogicalWidthRespectingMinMaxWidthENS_10LayoutUnitENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"* %50, i32 %61, i32 %1) #13
  %63 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %18, i64 0, i32 2
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 8
  br i1 %65, label %66, label %543

66:                                               ; preds = %60
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %18) #13
  br label %543

67:                                               ; preds = %36
  %68 = bitcast %"struct.blink::IntrinsicSizingInfo"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %68) #13
  %69 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %19, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %19, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %19, i64 0, i32 1, i32 0
  %72 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %19, i64 0, i32 1, i32 1
  %73 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %19, i64 0, i32 2
  %74 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %19, i64 0, i32 3
  %75 = bitcast i8* %73 to i32*
  store i32 -1431699199, i32* %75, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 16, i1 false) #13
  call void @_ZNK5blink14LayoutReplaced44ComputeIntrinsicSizingInfoForReplacedContentERNS_19IntrinsicSizingInfoE(%"class.blink::LayoutReplaced"* %0, %"struct.blink::IntrinsicSizingInfo"* nonnull dereferenceable(20) %19)
  %76 = bitcast %"struct.blink::IntrinsicSizingInfo"* %19 to <2 x float>*
  %77 = load <2 x float>, <2 x float>* %76, align 8
  %78 = load float, float* %71, align 8
  %79 = fcmp ugt float %78, 0.000000e+00
  %80 = extractelement <2 x float> %77, i32 0
  %81 = load float, float* %72, align 4
  %82 = fcmp ugt float %81, 0.000000e+00
  %83 = and i1 %79, %82
  %84 = fcmp ugt float %80, 0.000000e+00
  %85 = and i1 %84, %83
  %86 = load float, float* %70, align 4
  %87 = fcmp ugt float %86, 0.000000e+00
  %88 = and i1 %87, %85
  br i1 %88, label %89, label %126

89:                                               ; preds = %67
  %90 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %91 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %90, i64 0, i32 0, i32 9
  %92 = bitcast [20 x i8]* %91 to i160*
  %93 = load i160, i160* %92, align 8
  %94 = and i160 %93, 15211807202738752817960438464512
  %95 = icmp eq i160 %94, 0
  %96 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %90, i64 0, i32 0, i32 5, i32 0, i32 0
  %97 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %97, i64 0, i32 8
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %97, i64 0, i32 3
  %100 = select i1 %95, %"class.blink::Length"* %98, %"class.blink::Length"* %99
  %101 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %100, i64 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %126

104:                                              ; preds = %89
  %105 = select i1 %95, %"class.blink::Length"* %99, %"class.blink::Length"* %98
  %106 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %105, i64 0, i32 2
  %107 = load i8, i8* %106, align 1
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %126

109:                                              ; preds = %104
  %110 = call i32 @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %37, i32 0) #13
  %111 = load float, float* %69, align 8
  %112 = sitofp i32 %110 to float
  %113 = fmul float %112, 1.562500e-02
  %114 = fmul float %111, %113
  %115 = load float, float* %70, align 4
  %116 = fdiv float %114, %115
  %117 = insertelement <2 x float> undef, float %116, i32 0
  %118 = call i32 @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"* %37, i32 0) #13
  %119 = load float, float* %70, align 4
  %120 = sitofp i32 %118 to float
  %121 = fmul float %120, 1.562500e-02
  %122 = fmul float %119, %121
  %123 = load float, float* %69, align 8
  %124 = fdiv float %122, %123
  %125 = insertelement <2 x float> %117, float %124, i32 1
  br label %126

126:                                              ; preds = %67, %89, %104, %109
  %127 = phi <2 x float> [ %125, %109 ], [ %77, %104 ], [ %77, %89 ], [ %77, %67 ]
  %128 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %129 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %128, i64 0, i32 0, i32 9
  %130 = bitcast [20 x i8]* %129 to i160*
  %131 = load i160, i160* %130, align 8
  %132 = and i160 %131, 15211807202738752817960438464512
  %133 = icmp eq i160 %132, 0
  %134 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %128, i64 0, i32 0, i32 5, i32 0, i32 0
  %135 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %135, i64 0, i32 8
  %137 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %135, i64 0, i32 3
  %138 = select i1 %133, %"class.blink::Length"* %136, %"class.blink::Length"* %137
  %139 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %138, i64 0, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %529

142:                                              ; preds = %126
  %143 = select i1 %133, %"class.blink::Length"* %137, %"class.blink::Length"* %136
  %144 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %143, i64 0, i32 2
  %145 = load i8, i8* %144, align 1
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %150, label %147

147:                                              ; preds = %142
  %148 = load i8, i8* %73, align 8
  %149 = icmp eq i8 %148, 0
  br label %167

150:                                              ; preds = %142
  %151 = call zeroext i1 @_ZNK5blink9LayoutBox22StretchBlockSizeIfAutoEv(%"class.blink::LayoutBox"* %37) #13
  %152 = xor i1 %151, true
  %153 = load i8, i8* %73, align 8
  %154 = icmp eq i8 %153, 0
  %155 = or i1 %151, %154
  br i1 %155, label %167, label %156

156:                                              ; preds = %150
  %157 = extractelement <2 x float> %127, i32 0
  %158 = fmul float %157, 6.400000e+01
  %159 = fcmp ult float %158, 0xC1E0000000000000
  %160 = fcmp ugt float %158, 0x41DFFFFFE0000000
  %161 = fcmp ogt float %158, 0xC1E0000000000000
  %162 = select i1 %161, float %158, float 0xC1E0000000000000
  %163 = fptosi float %162 to i32
  %164 = select i1 %159, i32 0, i32 2147483647
  %165 = select i1 %160, i32 %164, i32 %163
  %166 = call i32 @_ZNK5blink9LayoutBox48ComputeReplacedLogicalWidthRespectingMinMaxWidthENS_10LayoutUnitENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"* %37, i32 %165, i32 %1) #13
  br label %541

167:                                              ; preds = %147, %150
  %168 = phi i1 [ %149, %147 ], [ %154, %150 ]
  %169 = phi i1 [ true, %147 ], [ %151, %150 ]
  %170 = phi i1 [ false, %147 ], [ %152, %150 ]
  %171 = load float, float* %71, align 8
  %172 = fcmp ugt float %171, 0.000000e+00
  %173 = load float, float* %72, align 4
  %174 = fcmp ugt float %173, 0.000000e+00
  %175 = and i1 %172, %174
  br i1 %175, label %176, label %511

176:                                              ; preds = %167
  %177 = and i1 %168, %170
  %178 = load i8, i8* %74, align 1
  %179 = icmp eq i8 %178, 0
  %180 = xor i1 %179, true
  %181 = and i1 %177, %180
  %182 = or i1 %169, %181
  br i1 %182, label %183, label %507

183:                                              ; preds = %176
  br i1 %168, label %194, label %184

184:                                              ; preds = %183
  %185 = extractelement <2 x float> %127, i32 0
  %186 = fmul float %185, 6.400000e+01
  %187 = fcmp ult float %186, 0xC1E0000000000000
  %188 = fcmp ugt float %186, 0x41DFFFFFE0000000
  %189 = fcmp ogt float %186, 0xC1E0000000000000
  %190 = select i1 %189, float %186, float 0xC1E0000000000000
  %191 = fptosi float %190 to i32
  %192 = select i1 %187, i32 0, i32 2147483647
  %193 = select i1 %188, i32 %192, i32 %191
  br label %196

194:                                              ; preds = %183
  %195 = call i32 @_ZNK5blink14LayoutReplaced30ComputeConstrainedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutReplaced"* %0, i32 %1)
  br label %196

196:                                              ; preds = %194, %184
  %197 = phi i32 [ %195, %194 ], [ %193, %184 ]
  %198 = bitcast %"class.blink::LayoutReplaced"* %0 to i32 (%"class.blink::LayoutReplaced"*, i32)***
  %199 = load i32 (%"class.blink::LayoutReplaced"*, i32)**, i32 (%"class.blink::LayoutReplaced"*, i32)*** %198, align 8
  %200 = getelementptr inbounds i32 (%"class.blink::LayoutReplaced"*, i32)*, i32 (%"class.blink::LayoutReplaced"*, i32)** %199, i64 168
  %201 = load i32 (%"class.blink::LayoutReplaced"*, i32)*, i32 (%"class.blink::LayoutReplaced"*, i32)** %200, align 8
  %202 = call i32 %201(%"class.blink::LayoutReplaced"* %0, i32 %197) #13
  %203 = bitcast %"struct.blink::NGBoxStrut"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %203) #13
  %204 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %20, i64 0, i32 0, i32 0
  %205 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %20, i64 0, i32 1, i32 0
  %206 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %20, i64 0, i32 2, i32 0
  %207 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %20, i64 0, i32 3, i32 0
  %208 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0
  %209 = bitcast %"struct.blink::NGBoxStrut"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %209, i8 -86, i64 16, i1 false)
  %210 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8, !noalias !69
  %211 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %210, i64 0, i32 0, i32 9
  %212 = bitcast [20 x i8]* %211 to i160*
  %213 = load i160, i160* %212, align 8, !noalias !69
  %214 = bitcast %"class.blink::LayoutReplaced"* %0 to i8*
  %215 = and i160 %213, 15211807202738752817960438464512
  %216 = icmp eq i160 %215, 0
  %217 = and i160 %213, 41538374868278621028243970633760768
  %218 = icmp eq i160 %217, 0
  %219 = select i1 %218, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %220 = select i1 %218, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %221 = select i1 %216, { i64, i64 } %220, { i64, i64 } %219
  %222 = select i1 %216, { i64, i64 } %220, { i64, i64 } %219
  %223 = extractvalue { i64, i64 } %221, 0
  %224 = extractvalue { i64, i64 } %222, 1
  %225 = getelementptr inbounds i8, i8* %214, i64 %224
  %226 = bitcast i8* %225 to %"class.blink::LayoutBoxModelObject"*
  %227 = and i64 %223, 1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %236, label %229

229:                                              ; preds = %196
  %230 = bitcast i8* %225 to i8**
  %231 = load i8*, i8** %230, align 8
  %232 = add i64 %223, -1
  %233 = getelementptr i8, i8* %231, i64 %232
  %234 = bitcast i8* %233 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %235 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %234, align 8
  br label %238

236:                                              ; preds = %196
  %237 = inttoptr i64 %223 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %238

238:                                              ; preds = %229, %236
  %239 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %235, %229 ], [ %237, %236 ]
  %240 = call i32 %239(%"class.blink::LayoutBoxModelObject"* %226) #13
  %241 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %242 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242)
  %243 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243)
  %244 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %244)
  %245 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %245)
  %246 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %241, i64 0, i32 0, i32 9
  %247 = bitcast [20 x i8]* %246 to i160*
  %248 = load i160, i160* %247, align 8, !noalias !72
  %249 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %241, i64 0, i32 0, i32 7, i32 0, i32 0
  %250 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %249, align 8, !noalias !72
  %251 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %250, i64 0, i32 16
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %250, i64 0, i32 15
  %253 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %250, i64 0, i32 13
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %250, i64 0, i32 14
  store %"class.blink::Length"* %251, %"class.blink::Length"** %3, align 8, !alias.scope !72
  store %"class.blink::Length"* %252, %"class.blink::Length"** %4, align 8, !alias.scope !72
  store %"class.blink::Length"* %253, %"class.blink::Length"** %5, align 8, !alias.scope !72
  store %"class.blink::Length"* %254, %"class.blink::Length"** %6, align 8, !alias.scope !72
  %255 = and i160 %248, 15211807202738752817960438464512
  %256 = icmp eq i160 %255, 0
  %257 = and i160 %248, 41538374868278621028243970633760768
  %258 = icmp eq i160 %257, 0
  %259 = select i1 %258, %"class.blink::Length"** %6, %"class.blink::Length"** %4
  %260 = select i1 %258, %"class.blink::Length"** %3, %"class.blink::Length"** %5
  %261 = select i1 %256, %"class.blink::Length"** %259, %"class.blink::Length"** %260
  %262 = load %"class.blink::Length"*, %"class.blink::Length"** %261, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %244)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %245)
  %263 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %208, %"class.blink::Length"* dereferenceable(8) %262) #13
  %264 = icmp slt i32 %263, 0
  %265 = select i1 %264, i32 -2147483648, i32 2147483647
  %266 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %240, i32 %263) #13
  %267 = extractvalue { i32, i1 } %266, 1
  %268 = extractvalue { i32, i1 } %266, 0
  %269 = select i1 %267, i32 %265, i32 %268, !prof !10
  %270 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8, !noalias !75
  %271 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %270, i64 0, i32 0, i32 9
  %272 = bitcast [20 x i8]* %271 to i160*
  %273 = load i160, i160* %272, align 8, !noalias !75
  %274 = and i160 %273, 15211807202738752817960438464512
  %275 = icmp eq i160 %274, 0
  %276 = and i160 %273, 41538374868278621028243970633760768
  %277 = icmp eq i160 %276, 0
  %278 = select i1 %277, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %279 = select i1 %277, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %280 = select i1 %275, { i64, i64 } %279, { i64, i64 } %278
  %281 = select i1 %275, { i64, i64 } %279, { i64, i64 } %278
  %282 = extractvalue { i64, i64 } %280, 0
  %283 = extractvalue { i64, i64 } %281, 1
  %284 = getelementptr inbounds i8, i8* %214, i64 %283
  %285 = bitcast i8* %284 to %"class.blink::LayoutBoxModelObject"*
  %286 = and i64 %282, 1
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %295, label %288

288:                                              ; preds = %238
  %289 = bitcast i8* %284 to i8**
  %290 = load i8*, i8** %289, align 8
  %291 = add i64 %282, -1
  %292 = getelementptr i8, i8* %290, i64 %291
  %293 = bitcast i8* %292 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %294 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %293, align 8
  br label %297

295:                                              ; preds = %238
  %296 = inttoptr i64 %282 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %297

297:                                              ; preds = %288, %295
  %298 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %294, %288 ], [ %296, %295 ]
  %299 = call i32 %298(%"class.blink::LayoutBoxModelObject"* %285) #13
  %300 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %301 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %301)
  %302 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %302)
  %303 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %303)
  %304 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %304)
  %305 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %300, i64 0, i32 0, i32 9
  %306 = bitcast [20 x i8]* %305 to i160*
  %307 = load i160, i160* %306, align 8, !noalias !78
  %308 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %300, i64 0, i32 0, i32 7, i32 0, i32 0
  %309 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %308, align 8, !noalias !78
  %310 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %309, i64 0, i32 16
  %311 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %309, i64 0, i32 15
  %312 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %309, i64 0, i32 13
  %313 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %309, i64 0, i32 14
  store %"class.blink::Length"* %310, %"class.blink::Length"** %7, align 8, !alias.scope !78
  store %"class.blink::Length"* %311, %"class.blink::Length"** %8, align 8, !alias.scope !78
  store %"class.blink::Length"* %312, %"class.blink::Length"** %9, align 8, !alias.scope !78
  store %"class.blink::Length"* %313, %"class.blink::Length"** %10, align 8, !alias.scope !78
  %314 = and i160 %307, 15211807202738752817960438464512
  %315 = icmp eq i160 %314, 0
  %316 = and i160 %307, 41538374868278621028243970633760768
  %317 = icmp eq i160 %316, 0
  %318 = select i1 %317, %"class.blink::Length"** %8, %"class.blink::Length"** %10
  %319 = select i1 %317, %"class.blink::Length"** %9, %"class.blink::Length"** %7
  %320 = select i1 %315, %"class.blink::Length"** %318, %"class.blink::Length"** %319
  %321 = load %"class.blink::Length"*, %"class.blink::Length"** %320, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %301)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %302)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %303)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304)
  %322 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %208, %"class.blink::Length"* dereferenceable(8) %321) #13
  %323 = icmp slt i32 %322, 0
  %324 = select i1 %323, i32 -2147483648, i32 2147483647
  %325 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %299, i32 %322) #13
  %326 = extractvalue { i32, i1 } %325, 1
  %327 = extractvalue { i32, i1 } %325, 0
  %328 = select i1 %326, i32 %324, i32 %327, !prof !10
  %329 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8, !noalias !81
  %330 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %329, i64 0, i32 0, i32 9
  %331 = bitcast [20 x i8]* %330 to i160*
  %332 = load i160, i160* %331, align 8, !noalias !81
  %333 = lshr i160 %332, 102
  %334 = trunc i160 %333 to i8
  %335 = and i8 %334, 3
  switch i8 %335, label %336 [
    i8 0, label %345
    i8 1, label %337
  ]

336:                                              ; preds = %297
  br label %337

337:                                              ; preds = %336, %297
  %338 = phi { i64, i64 } [ { i64 993, i64 0 }, %336 ], [ { i64 1001, i64 0 }, %297 ]
  %339 = extractvalue { i64, i64 } %338, 0
  %340 = extractvalue { i64, i64 } %338, 1
  %341 = getelementptr inbounds i8, i8* %214, i64 %340
  %342 = bitcast i8* %341 to %"class.blink::LayoutBoxModelObject"*
  %343 = and i64 %339, 1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %355, label %345

345:                                              ; preds = %337, %297
  %346 = phi %"class.blink::LayoutBoxModelObject"* [ %342, %337 ], [ %208, %297 ]
  %347 = phi i8* [ %341, %337 ], [ %214, %297 ]
  %348 = phi i64 [ %339, %337 ], [ 977, %297 ]
  %349 = bitcast i8* %347 to i8**
  %350 = load i8*, i8** %349, align 8
  %351 = add i64 %348, -1
  %352 = getelementptr i8, i8* %350, i64 %351
  %353 = bitcast i8* %352 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %354 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %353, align 8
  br label %357

355:                                              ; preds = %337
  %356 = inttoptr i64 %339 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %357

357:                                              ; preds = %345, %355
  %358 = phi %"class.blink::LayoutBoxModelObject"* [ %346, %345 ], [ %342, %355 ]
  %359 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %354, %345 ], [ %356, %355 ]
  %360 = call i32 %359(%"class.blink::LayoutBoxModelObject"* %358) #13
  %361 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %362 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %362)
  %363 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %363)
  %364 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %364)
  %365 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %361, i64 0, i32 0, i32 9
  %366 = bitcast [20 x i8]* %365 to i160*
  %367 = load i160, i160* %366, align 8, !noalias !84
  %368 = lshr i160 %367, 102
  %369 = trunc i160 %368 to i8
  %370 = and i8 %369, 3
  %371 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %361, i64 0, i32 0, i32 7, i32 0, i32 0
  %372 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %371, align 8, !noalias !84
  %373 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %372, i64 0, i32 16
  %374 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %372, i64 0, i32 15
  %375 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %372, i64 0, i32 14
  store %"class.blink::Length"* %373, %"class.blink::Length"** %11, align 8, !alias.scope !84
  store %"class.blink::Length"* %374, %"class.blink::Length"** %12, align 8, !alias.scope !84
  store %"class.blink::Length"* %375, %"class.blink::Length"** %13, align 8, !alias.scope !84
  %376 = icmp eq i8 %370, 0
  %377 = icmp eq i8 %370, 1
  %378 = select i1 %377, %"class.blink::Length"** %12, %"class.blink::Length"** %13
  %379 = select i1 %376, %"class.blink::Length"** %11, %"class.blink::Length"** %378
  %380 = load %"class.blink::Length"*, %"class.blink::Length"** %379, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %362)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %363)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %364)
  %381 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %208, %"class.blink::Length"* dereferenceable(8) %380) #13
  %382 = icmp slt i32 %381, 0
  %383 = select i1 %382, i32 -2147483648, i32 2147483647
  %384 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %360, i32 %381) #13
  %385 = extractvalue { i32, i1 } %384, 1
  %386 = extractvalue { i32, i1 } %384, 0
  %387 = select i1 %385, i32 %383, i32 %386, !prof !10
  %388 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8, !noalias !87
  %389 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %388, i64 0, i32 0, i32 9
  %390 = bitcast [20 x i8]* %389 to i160*
  %391 = load i160, i160* %390, align 8, !noalias !87
  %392 = lshr i160 %391, 102
  %393 = trunc i160 %392 to i8
  %394 = and i8 %393, 3
  switch i8 %394, label %395 [
    i8 0, label %404
    i8 1, label %396
  ]

395:                                              ; preds = %357
  br label %396

396:                                              ; preds = %395, %357
  %397 = phi { i64, i64 } [ { i64 1001, i64 0 }, %395 ], [ { i64 993, i64 0 }, %357 ]
  %398 = extractvalue { i64, i64 } %397, 0
  %399 = extractvalue { i64, i64 } %397, 1
  %400 = getelementptr inbounds i8, i8* %214, i64 %399
  %401 = bitcast i8* %400 to %"class.blink::LayoutBoxModelObject"*
  %402 = and i64 %398, 1
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %414, label %404

404:                                              ; preds = %396, %357
  %405 = phi %"class.blink::LayoutBoxModelObject"* [ %401, %396 ], [ %208, %357 ]
  %406 = phi i8* [ %400, %396 ], [ %214, %357 ]
  %407 = phi i64 [ %398, %396 ], [ 985, %357 ]
  %408 = bitcast i8* %406 to i8**
  %409 = load i8*, i8** %408, align 8
  %410 = add i64 %407, -1
  %411 = getelementptr i8, i8* %409, i64 %410
  %412 = bitcast i8* %411 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %413 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %412, align 8
  br label %416

414:                                              ; preds = %396
  %415 = inttoptr i64 %398 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %416

416:                                              ; preds = %404, %414
  %417 = phi %"class.blink::LayoutBoxModelObject"* [ %405, %404 ], [ %401, %414 ]
  %418 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %413, %404 ], [ %415, %414 ]
  %419 = call i32 %418(%"class.blink::LayoutBoxModelObject"* %417) #13
  %420 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %421 = bitcast %"class.blink::Length"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %421)
  %422 = bitcast %"class.blink::Length"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %422)
  %423 = bitcast %"class.blink::Length"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %423)
  %424 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %420, i64 0, i32 0, i32 9
  %425 = bitcast [20 x i8]* %424 to i160*
  %426 = load i160, i160* %425, align 8, !noalias !90
  %427 = lshr i160 %426, 102
  %428 = trunc i160 %427 to i8
  %429 = and i8 %428, 3
  %430 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %420, i64 0, i32 0, i32 7, i32 0, i32 0
  %431 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %430, align 8, !noalias !90
  %432 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %431, i64 0, i32 15
  %433 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %431, i64 0, i32 13
  %434 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %431, i64 0, i32 14
  store %"class.blink::Length"* %432, %"class.blink::Length"** %14, align 8, !alias.scope !90
  store %"class.blink::Length"* %433, %"class.blink::Length"** %15, align 8, !alias.scope !90
  store %"class.blink::Length"* %434, %"class.blink::Length"** %16, align 8, !alias.scope !90
  %435 = icmp eq i8 %429, 0
  %436 = icmp eq i8 %429, 1
  %437 = select i1 %436, %"class.blink::Length"** %16, %"class.blink::Length"** %14
  %438 = select i1 %435, %"class.blink::Length"** %15, %"class.blink::Length"** %437
  %439 = load %"class.blink::Length"*, %"class.blink::Length"** %438, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %421)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %422)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %423)
  %440 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %208, %"class.blink::Length"* dereferenceable(8) %439) #13
  %441 = icmp slt i32 %440, 0
  %442 = select i1 %441, i32 -2147483648, i32 2147483647
  %443 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %419, i32 %440) #13
  %444 = extractvalue { i32, i1 } %443, 1
  %445 = extractvalue { i32, i1 } %443, 0
  %446 = select i1 %444, i32 %442, i32 %445, !prof !10
  store i32 %269, i32* %204, align 4
  store i32 %328, i32* %205, align 4
  store i32 %387, i32* %206, align 4
  store i32 %446, i32* %207, align 4
  %447 = icmp slt i32 %446, 0
  %448 = select i1 %447, i32 -2147483648, i32 2147483647
  %449 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %387, i32 %446) #13
  %450 = extractvalue { i32, i1 } %449, 1
  %451 = extractvalue { i32, i1 } %449, 0
  %452 = select i1 %450, i32 %448, i32 %451, !prof !10
  %453 = icmp slt i32 %452, 0
  %454 = select i1 %453, i32 -2147483648, i32 2147483647
  %455 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %202, i32 %452) #13
  %456 = extractvalue { i32, i1 } %455, 1
  %457 = extractvalue { i32, i1 } %455, 0
  %458 = select i1 %456, i32 %454, i32 %457, !prof !10
  %459 = bitcast %"class.blink::ComputedStyle"** %21 to %"class.blink::ComputedStyleBase"**
  %460 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %459, align 8
  %461 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %460, i64 0, i32 5, i32 0, i32 0
  %462 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %461, align 8
  %463 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %462, i64 0, i32 1, i32 1, i32 0
  %464 = load float, float* %463, align 4
  %465 = fcmp oeq float %464, 0.000000e+00
  br i1 %465, label %485, label %466

466:                                              ; preds = %416
  %467 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %462, i64 0, i32 1, i32 1, i32 1
  %468 = load float, float* %467, align 4
  %469 = fcmp oeq float %468, 0.000000e+00
  %470 = fcmp olt float %464, 1.562500e-02
  %471 = or i1 %470, %469
  %472 = fcmp olt float %468, 1.562500e-02
  %473 = or i1 %472, %471
  br i1 %473, label %485, label %474

474:                                              ; preds = %466
  %475 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %462, i64 0, i32 1, i32 0
  %476 = load i8, i8* %475, align 4
  %477 = and i8 %476, 3
  %478 = icmp eq i8 %477, 2
  br i1 %478, label %479, label %485

479:                                              ; preds = %474
  %480 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %462, i64 0, i32 11
  %481 = load i8, i8* %480, align 4
  %482 = lshr i8 %481, 1
  %483 = and i8 %482, 1
  %484 = zext i8 %483 to i32
  br label %485

485:                                              ; preds = %416, %466, %479, %474
  %486 = phi i32 [ %484, %479 ], [ 1, %474 ], [ 1, %466 ], [ 1, %416 ]
  %487 = load float, float* %71, align 8
  %488 = load float, float* %72, align 4
  %489 = fdiv float %487, %488
  %490 = fpext float %489 to double
  %491 = call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutEdNS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %20, double %490, i32 %486, i32 %458) #13
  %492 = load i32, i32* %204, align 4
  %493 = load i32, i32* %205, align 4
  %494 = icmp slt i32 %493, 0
  %495 = select i1 %494, i32 -2147483648, i32 2147483647
  %496 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %492, i32 %493) #13
  %497 = extractvalue { i32, i1 } %496, 1
  %498 = extractvalue { i32, i1 } %496, 0
  %499 = select i1 %497, i32 %495, i32 %498, !prof !10
  %500 = icmp sgt i32 %499, -1
  %501 = select i1 %500, i32 -2147483648, i32 2147483647
  %502 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %491, i32 %499) #13
  %503 = extractvalue { i32, i1 } %502, 1
  %504 = extractvalue { i32, i1 } %502, 0
  %505 = select i1 %503, i32 %501, i32 %504, !prof !10
  %506 = call i32 @_ZNK5blink9LayoutBox48ComputeReplacedLogicalWidthRespectingMinMaxWidthENS_10LayoutUnitENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"* %37, i32 %505, i32 %1) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %203) #13
  br label %541

507:                                              ; preds = %176
  %508 = and i1 %177, %179
  br i1 %508, label %509, label %511

509:                                              ; preds = %507
  %510 = call i32 @_ZNK5blink14LayoutReplaced30ComputeConstrainedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutReplaced"* %0, i32 %1)
  br label %541

511:                                              ; preds = %167, %507
  br i1 %168, label %512, label %518

512:                                              ; preds = %511
  %513 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %514 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %513, i64 0, i32 0, i32 9
  %515 = bitcast [20 x i8]* %514 to i160*
  %516 = load i160, i160* %515, align 8
  %517 = and i160 %516, 15211807202738752817960438464512
  br label %529

518:                                              ; preds = %511
  %519 = extractelement <2 x float> %127, i32 0
  %520 = fmul float %519, 6.400000e+01
  %521 = fcmp ult float %520, 0xC1E0000000000000
  %522 = fcmp ugt float %520, 0x41DFFFFFE0000000
  %523 = fcmp ogt float %520, 0xC1E0000000000000
  %524 = select i1 %523, float %520, float 0xC1E0000000000000
  %525 = fptosi float %524 to i32
  %526 = select i1 %521, i32 0, i32 2147483647
  %527 = select i1 %522, i32 %526, i32 %525
  %528 = call i32 @_ZNK5blink9LayoutBox48ComputeReplacedLogicalWidthRespectingMinMaxWidthENS_10LayoutUnitENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"* %37, i32 %527, i32 %1) #13
  br label %541

529:                                              ; preds = %512, %126
  %530 = phi i160 [ %517, %512 ], [ %132, %126 ]
  %531 = icmp eq i160 %530, 0
  %532 = bitcast %"class.blink::LayoutReplaced"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %533 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %532, align 8
  %534 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %533, i64 165
  %535 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %534, align 8
  %536 = call i64 %535(%"class.blink::LayoutBox"* %37) #13
  %537 = lshr i64 %536, 32
  %538 = select i1 %531, i64 %536, i64 %537
  %539 = trunc i64 %538 to i32
  %540 = call i32 @_ZNK5blink9LayoutBox48ComputeReplacedLogicalWidthRespectingMinMaxWidthENS_10LayoutUnitENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"* %37, i32 %539, i32 %1) #13
  br label %541

541:                                              ; preds = %485, %509, %518, %156, %529
  %542 = phi i32 [ %540, %529 ], [ %506, %485 ], [ %510, %509 ], [ %528, %518 ], [ %166, %156 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %68) #13
  br label %543

543:                                              ; preds = %66, %60, %541
  %544 = phi i32 [ %542, %541 ], [ %62, %60 ], [ %62, %66 ]
  ret i32 %544
}

declare zeroext i1 @_ZNK5blink9LayoutBox23StretchInlineSizeIfAutoEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox32ComputeReplacedLogicalWidthUsingENS_8SizeTypeENS_6LengthE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"*) local_unnamed_addr #1

declare i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutEdNS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16), double, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14LayoutReplaced28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutReplaced"*, i32) unnamed_addr #7 align 2 {
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca %"class.blink::Length"*, align 8
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = alloca i64, align 8
  %18 = bitcast i64* %17 to %"class.blink::Length"*
  %19 = alloca %"struct.blink::IntrinsicSizingInfo", align 8
  %20 = alloca %"struct.blink::NGBoxStrut", align 4
  %21 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = and i160 %25, 15211807202738752817960438464512
  %27 = icmp eq i160 %26, 0
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 5, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %29, i64 0, i32 3
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %29, i64 0, i32 8
  %32 = select i1 %27, %"class.blink::Length"* %30, %"class.blink::Length"* %31
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %32, i64 0, i32 2
  %34 = load i8, i8* %33, align 1
  switch i8 %34, label %41 [
    i8 0, label %35
    i8 2, label %44
    i8 8, label %38
    i8 1, label %38
  ]

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %37 = tail call zeroext i1 @_ZNK5blink9LayoutBox22StretchBlockSizeIfAutoEv(%"class.blink::LayoutBox"* %36) #13
  br i1 %37, label %44, label %69

38:                                               ; preds = %2, %2
  %39 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0
  %40 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject44HasAutoHeightOrContainingBlockWithAutoHeightENS0_28RegisterPercentageDescendantE(%"class.blink::LayoutBoxModelObject"* %39, i32 1) #13
  br i1 %40, label %69, label %44

41:                                               ; preds = %2
  %42 = add i8 %34, -3
  %43 = icmp ult i8 %42, 5
  br i1 %43, label %44, label %69

44:                                               ; preds = %38, %2, %35, %41
  %45 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %46, i64 0, i32 0, i32 9
  %48 = bitcast [20 x i8]* %47 to i160*
  %49 = load i160, i160* %48, align 8
  %50 = and i160 %49, 15211807202738752817960438464512
  %51 = icmp eq i160 %50, 0
  %52 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %46, i64 0, i32 0, i32 5, i32 0, i32 0
  %53 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %53, i64 0, i32 3
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %53, i64 0, i32 8
  %56 = select i1 %51, %"class.blink::Length"* %54, %"class.blink::Length"* %55
  %57 = bitcast %"class.blink::Length"* %56 to i64*
  %58 = load i64, i64* %57, align 4
  store i64 %58, i64* %17, align 8
  %59 = and i64 %58, 280375465082880
  %60 = icmp eq i64 %59, 8796093022208
  br i1 %60, label %61, label %62

61:                                               ; preds = %44
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %18) #13
  br label %62

62:                                               ; preds = %44, %61
  %63 = call i32 @_ZNK5blink9LayoutBox33ComputeReplacedLogicalHeightUsingENS_8SizeTypeENS_6LengthE(%"class.blink::LayoutBox"* %45, i32 0, %"class.blink::Length"* nonnull %18) #13
  %64 = call i32 @_ZNK5blink9LayoutBox50ComputeReplacedLogicalHeightRespectingMinMaxHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %45, i32 %63) #13
  %65 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %18, i64 0, i32 2
  %66 = load i8, i8* %65, align 1
  %67 = icmp eq i8 %66, 8
  br i1 %67, label %68, label %504

68:                                               ; preds = %62
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %18) #13
  br label %504

69:                                               ; preds = %38, %35, %41
  %70 = bitcast %"struct.blink::IntrinsicSizingInfo"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %70) #13
  %71 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %19, i64 0, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %19, i64 0, i32 0, i32 1
  %73 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %19, i64 0, i32 1, i32 0
  %74 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %19, i64 0, i32 1, i32 1
  %75 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %19, i64 0, i32 2
  %76 = getelementptr inbounds %"struct.blink::IntrinsicSizingInfo", %"struct.blink::IntrinsicSizingInfo"* %19, i64 0, i32 3
  %77 = bitcast i8* %75 to i32*
  store i32 -1431699199, i32* %77, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 16, i1 false) #13
  call void @_ZNK5blink14LayoutReplaced44ComputeIntrinsicSizingInfoForReplacedContentERNS_19IntrinsicSizingInfoE(%"class.blink::LayoutReplaced"* %0, %"struct.blink::IntrinsicSizingInfo"* nonnull dereferenceable(20) %19)
  %78 = bitcast %"struct.blink::IntrinsicSizingInfo"* %19 to <2 x float>*
  %79 = load <2 x float>, <2 x float>* %78, align 8
  %80 = load float, float* %73, align 8
  %81 = fcmp ugt float %80, 0.000000e+00
  %82 = extractelement <2 x float> %79, i32 0
  %83 = load float, float* %74, align 4
  %84 = fcmp ugt float %83, 0.000000e+00
  %85 = and i1 %81, %84
  %86 = fcmp ugt float %82, 0.000000e+00
  %87 = and i1 %86, %85
  %88 = load float, float* %72, align 4
  %89 = fcmp ugt float %88, 0.000000e+00
  %90 = and i1 %89, %87
  br i1 %90, label %91, label %129

91:                                               ; preds = %69
  %92 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %93 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %92, i64 0, i32 0, i32 9
  %94 = bitcast [20 x i8]* %93 to i160*
  %95 = load i160, i160* %94, align 8
  %96 = and i160 %95, 15211807202738752817960438464512
  %97 = icmp eq i160 %96, 0
  %98 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %92, i64 0, i32 0, i32 5, i32 0, i32 0
  %99 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %99, i64 0, i32 8
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %99, i64 0, i32 3
  %102 = select i1 %97, %"class.blink::Length"* %100, %"class.blink::Length"* %101
  %103 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %102, i64 0, i32 2
  %104 = load i8, i8* %103, align 1
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %129

106:                                              ; preds = %91
  %107 = select i1 %97, %"class.blink::Length"* %101, %"class.blink::Length"* %100
  %108 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %107, i64 0, i32 2
  %109 = load i8, i8* %108, align 1
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %129

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %113 = call i32 @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %112, i32 0) #13
  %114 = load float, float* %71, align 8
  %115 = sitofp i32 %113 to float
  %116 = fmul float %115, 1.562500e-02
  %117 = fmul float %114, %116
  %118 = load float, float* %72, align 4
  %119 = fdiv float %117, %118
  %120 = insertelement <2 x float> undef, float %119, i32 0
  %121 = call i32 @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"* %112, i32 0) #13
  %122 = load float, float* %72, align 4
  %123 = sitofp i32 %121 to float
  %124 = fmul float %123, 1.562500e-02
  %125 = fmul float %122, %124
  %126 = load float, float* %71, align 8
  %127 = fdiv float %125, %126
  %128 = insertelement <2 x float> %120, float %127, i32 1
  br label %129

129:                                              ; preds = %69, %91, %106, %111
  %130 = phi <2 x float> [ %128, %111 ], [ %79, %106 ], [ %79, %91 ], [ %79, %69 ]
  %131 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %132 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %131, i64 0, i32 0, i32 9
  %133 = bitcast [20 x i8]* %132 to i160*
  %134 = load i160, i160* %133, align 8
  %135 = and i160 %134, 15211807202738752817960438464512
  %136 = icmp eq i160 %135, 0
  %137 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %131, i64 0, i32 0, i32 5, i32 0, i32 0
  %138 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %138, i64 0, i32 8
  %140 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %138, i64 0, i32 3
  %141 = select i1 %136, %"class.blink::Length"* %139, %"class.blink::Length"* %140
  %142 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %141, i64 0, i32 2
  %143 = load i8, i8* %142, align 1
  %144 = icmp ne i8 %143, 0
  %145 = load i8, i8* %76, align 1
  %146 = icmp eq i8 %145, 0
  %147 = or i1 %144, %146
  br i1 %147, label %160, label %148

148:                                              ; preds = %129
  %149 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %150 = extractelement <2 x float> %130, i32 1
  %151 = fmul float %150, 6.400000e+01
  %152 = fcmp ult float %151, 0xC1E0000000000000
  %153 = fcmp ugt float %151, 0x41DFFFFFE0000000
  %154 = fcmp ogt float %151, 0xC1E0000000000000
  %155 = select i1 %154, float %151, float 0xC1E0000000000000
  %156 = fptosi float %155 to i32
  %157 = select i1 %152, i32 0, i32 2147483647
  %158 = select i1 %153, i32 %157, i32 %156
  %159 = call i32 @_ZNK5blink9LayoutBox50ComputeReplacedLogicalHeightRespectingMinMaxHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %149, i32 %158) #13
  br label %502

160:                                              ; preds = %129
  %161 = load float, float* %73, align 8
  %162 = fcmp ugt float %161, 0.000000e+00
  %163 = load float, float* %74, align 4
  %164 = fcmp ugt float %163, 0.000000e+00
  %165 = and i1 %162, %164
  br i1 %165, label %166, label %479

166:                                              ; preds = %160
  %167 = icmp eq i32 %1, 0
  br i1 %167, label %168, label %175

168:                                              ; preds = %166
  %169 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %170 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %169) #13
  %171 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8, !noalias !93
  %172 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %171, i64 0, i32 0, i32 9
  %173 = bitcast [20 x i8]* %172 to i160*
  %174 = load i160, i160* %173, align 8, !noalias !93
  br label %175

175:                                              ; preds = %166, %168
  %176 = phi i160 [ %174, %168 ], [ %134, %166 ]
  %177 = phi i32 [ %170, %168 ], [ %1, %166 ]
  %178 = bitcast %"struct.blink::NGBoxStrut"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %178) #13
  %179 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %20, i64 0, i32 0, i32 0
  %180 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %20, i64 0, i32 1, i32 0
  %181 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %20, i64 0, i32 2, i32 0
  %182 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %20, i64 0, i32 3, i32 0
  %183 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0
  %184 = bitcast %"class.blink::LayoutReplaced"* %0 to i8*
  %185 = and i160 %176, 15211807202738752817960438464512
  %186 = icmp eq i160 %185, 0
  %187 = and i160 %176, 41538374868278621028243970633760768
  %188 = icmp eq i160 %187, 0
  %189 = bitcast %"struct.blink::NGBoxStrut"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %189, i8 -86, i64 16, i1 false)
  %190 = select i1 %188, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %191 = select i1 %188, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %192 = select i1 %186, { i64, i64 } %191, { i64, i64 } %190
  %193 = select i1 %186, { i64, i64 } %191, { i64, i64 } %190
  %194 = extractvalue { i64, i64 } %192, 0
  %195 = extractvalue { i64, i64 } %193, 1
  %196 = getelementptr inbounds i8, i8* %184, i64 %195
  %197 = bitcast i8* %196 to %"class.blink::LayoutBoxModelObject"*
  %198 = and i64 %194, 1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %207, label %200

200:                                              ; preds = %175
  %201 = bitcast i8* %196 to i8**
  %202 = load i8*, i8** %201, align 8
  %203 = add i64 %194, -1
  %204 = getelementptr i8, i8* %202, i64 %203
  %205 = bitcast i8* %204 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %206 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %205, align 8
  br label %209

207:                                              ; preds = %175
  %208 = inttoptr i64 %194 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %209

209:                                              ; preds = %200, %207
  %210 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %206, %200 ], [ %208, %207 ]
  %211 = call i32 %210(%"class.blink::LayoutBoxModelObject"* %197) #13
  %212 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %213 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213)
  %214 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214)
  %215 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215)
  %216 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216)
  %217 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %212, i64 0, i32 0, i32 9
  %218 = bitcast [20 x i8]* %217 to i160*
  %219 = load i160, i160* %218, align 8, !noalias !96
  %220 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %212, i64 0, i32 0, i32 7, i32 0, i32 0
  %221 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %220, align 8, !noalias !96
  %222 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %221, i64 0, i32 16
  %223 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %221, i64 0, i32 15
  %224 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %221, i64 0, i32 13
  %225 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %221, i64 0, i32 14
  store %"class.blink::Length"* %222, %"class.blink::Length"** %3, align 8, !alias.scope !96
  store %"class.blink::Length"* %223, %"class.blink::Length"** %4, align 8, !alias.scope !96
  store %"class.blink::Length"* %224, %"class.blink::Length"** %5, align 8, !alias.scope !96
  store %"class.blink::Length"* %225, %"class.blink::Length"** %6, align 8, !alias.scope !96
  %226 = and i160 %219, 15211807202738752817960438464512
  %227 = icmp eq i160 %226, 0
  %228 = and i160 %219, 41538374868278621028243970633760768
  %229 = icmp eq i160 %228, 0
  %230 = select i1 %229, %"class.blink::Length"** %6, %"class.blink::Length"** %4
  %231 = select i1 %229, %"class.blink::Length"** %3, %"class.blink::Length"** %5
  %232 = select i1 %227, %"class.blink::Length"** %230, %"class.blink::Length"** %231
  %233 = load %"class.blink::Length"*, %"class.blink::Length"** %232, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %216)
  %234 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %183, %"class.blink::Length"* dereferenceable(8) %233) #13
  %235 = icmp slt i32 %234, 0
  %236 = select i1 %235, i32 -2147483648, i32 2147483647
  %237 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %211, i32 %234) #13
  %238 = extractvalue { i32, i1 } %237, 1
  %239 = extractvalue { i32, i1 } %237, 0
  %240 = select i1 %238, i32 %236, i32 %239, !prof !10
  %241 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8, !noalias !99
  %242 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %241, i64 0, i32 0, i32 9
  %243 = bitcast [20 x i8]* %242 to i160*
  %244 = load i160, i160* %243, align 8, !noalias !99
  %245 = and i160 %244, 15211807202738752817960438464512
  %246 = icmp eq i160 %245, 0
  %247 = and i160 %244, 41538374868278621028243970633760768
  %248 = icmp eq i160 %247, 0
  %249 = select i1 %248, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %250 = select i1 %248, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %251 = select i1 %246, { i64, i64 } %250, { i64, i64 } %249
  %252 = select i1 %246, { i64, i64 } %250, { i64, i64 } %249
  %253 = extractvalue { i64, i64 } %251, 0
  %254 = extractvalue { i64, i64 } %252, 1
  %255 = getelementptr inbounds i8, i8* %184, i64 %254
  %256 = bitcast i8* %255 to %"class.blink::LayoutBoxModelObject"*
  %257 = and i64 %253, 1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %266, label %259

259:                                              ; preds = %209
  %260 = bitcast i8* %255 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = add i64 %253, -1
  %263 = getelementptr i8, i8* %261, i64 %262
  %264 = bitcast i8* %263 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %265 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %264, align 8
  br label %268

266:                                              ; preds = %209
  %267 = inttoptr i64 %253 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %268

268:                                              ; preds = %259, %266
  %269 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %265, %259 ], [ %267, %266 ]
  %270 = call i32 %269(%"class.blink::LayoutBoxModelObject"* %256) #13
  %271 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %272 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %272)
  %273 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %273)
  %274 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %274)
  %275 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %275)
  %276 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %271, i64 0, i32 0, i32 9
  %277 = bitcast [20 x i8]* %276 to i160*
  %278 = load i160, i160* %277, align 8, !noalias !102
  %279 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %271, i64 0, i32 0, i32 7, i32 0, i32 0
  %280 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %279, align 8, !noalias !102
  %281 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %280, i64 0, i32 16
  %282 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %280, i64 0, i32 15
  %283 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %280, i64 0, i32 13
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %280, i64 0, i32 14
  store %"class.blink::Length"* %281, %"class.blink::Length"** %7, align 8, !alias.scope !102
  store %"class.blink::Length"* %282, %"class.blink::Length"** %8, align 8, !alias.scope !102
  store %"class.blink::Length"* %283, %"class.blink::Length"** %9, align 8, !alias.scope !102
  store %"class.blink::Length"* %284, %"class.blink::Length"** %10, align 8, !alias.scope !102
  %285 = and i160 %278, 15211807202738752817960438464512
  %286 = icmp eq i160 %285, 0
  %287 = and i160 %278, 41538374868278621028243970633760768
  %288 = icmp eq i160 %287, 0
  %289 = select i1 %288, %"class.blink::Length"** %8, %"class.blink::Length"** %10
  %290 = select i1 %288, %"class.blink::Length"** %9, %"class.blink::Length"** %7
  %291 = select i1 %286, %"class.blink::Length"** %289, %"class.blink::Length"** %290
  %292 = load %"class.blink::Length"*, %"class.blink::Length"** %291, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %272)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %273)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %274)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275)
  %293 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %183, %"class.blink::Length"* dereferenceable(8) %292) #13
  %294 = icmp slt i32 %293, 0
  %295 = select i1 %294, i32 -2147483648, i32 2147483647
  %296 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %270, i32 %293) #13
  %297 = extractvalue { i32, i1 } %296, 1
  %298 = extractvalue { i32, i1 } %296, 0
  %299 = select i1 %297, i32 %295, i32 %298, !prof !10
  %300 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8, !noalias !105
  %301 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %300, i64 0, i32 0, i32 9
  %302 = bitcast [20 x i8]* %301 to i160*
  %303 = load i160, i160* %302, align 8, !noalias !105
  %304 = lshr i160 %303, 102
  %305 = trunc i160 %304 to i8
  %306 = and i8 %305, 3
  switch i8 %306, label %307 [
    i8 0, label %316
    i8 1, label %308
  ]

307:                                              ; preds = %268
  br label %308

308:                                              ; preds = %307, %268
  %309 = phi { i64, i64 } [ { i64 993, i64 0 }, %307 ], [ { i64 1001, i64 0 }, %268 ]
  %310 = extractvalue { i64, i64 } %309, 0
  %311 = extractvalue { i64, i64 } %309, 1
  %312 = getelementptr inbounds i8, i8* %184, i64 %311
  %313 = bitcast i8* %312 to %"class.blink::LayoutBoxModelObject"*
  %314 = and i64 %310, 1
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %326, label %316

316:                                              ; preds = %308, %268
  %317 = phi %"class.blink::LayoutBoxModelObject"* [ %313, %308 ], [ %183, %268 ]
  %318 = phi i8* [ %312, %308 ], [ %184, %268 ]
  %319 = phi i64 [ %310, %308 ], [ 977, %268 ]
  %320 = bitcast i8* %318 to i8**
  %321 = load i8*, i8** %320, align 8
  %322 = add i64 %319, -1
  %323 = getelementptr i8, i8* %321, i64 %322
  %324 = bitcast i8* %323 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %325 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %324, align 8
  br label %328

326:                                              ; preds = %308
  %327 = inttoptr i64 %310 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %328

328:                                              ; preds = %316, %326
  %329 = phi %"class.blink::LayoutBoxModelObject"* [ %317, %316 ], [ %313, %326 ]
  %330 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %325, %316 ], [ %327, %326 ]
  %331 = call i32 %330(%"class.blink::LayoutBoxModelObject"* %329) #13
  %332 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %333 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %333)
  %334 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %334)
  %335 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %335)
  %336 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %332, i64 0, i32 0, i32 9
  %337 = bitcast [20 x i8]* %336 to i160*
  %338 = load i160, i160* %337, align 8, !noalias !108
  %339 = lshr i160 %338, 102
  %340 = trunc i160 %339 to i8
  %341 = and i8 %340, 3
  %342 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %332, i64 0, i32 0, i32 7, i32 0, i32 0
  %343 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %342, align 8, !noalias !108
  %344 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %343, i64 0, i32 16
  %345 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %343, i64 0, i32 15
  %346 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %343, i64 0, i32 14
  store %"class.blink::Length"* %344, %"class.blink::Length"** %11, align 8, !alias.scope !108
  store %"class.blink::Length"* %345, %"class.blink::Length"** %12, align 8, !alias.scope !108
  store %"class.blink::Length"* %346, %"class.blink::Length"** %13, align 8, !alias.scope !108
  %347 = icmp eq i8 %341, 0
  %348 = icmp eq i8 %341, 1
  %349 = select i1 %348, %"class.blink::Length"** %12, %"class.blink::Length"** %13
  %350 = select i1 %347, %"class.blink::Length"** %11, %"class.blink::Length"** %349
  %351 = load %"class.blink::Length"*, %"class.blink::Length"** %350, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %333)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %334)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %335)
  %352 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %183, %"class.blink::Length"* dereferenceable(8) %351) #13
  %353 = icmp slt i32 %352, 0
  %354 = select i1 %353, i32 -2147483648, i32 2147483647
  %355 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %331, i32 %352) #13
  %356 = extractvalue { i32, i1 } %355, 1
  %357 = extractvalue { i32, i1 } %355, 0
  %358 = select i1 %356, i32 %354, i32 %357, !prof !10
  %359 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8, !noalias !111
  %360 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %359, i64 0, i32 0, i32 9
  %361 = bitcast [20 x i8]* %360 to i160*
  %362 = load i160, i160* %361, align 8, !noalias !111
  %363 = lshr i160 %362, 102
  %364 = trunc i160 %363 to i8
  %365 = and i8 %364, 3
  switch i8 %365, label %366 [
    i8 0, label %375
    i8 1, label %367
  ]

366:                                              ; preds = %328
  br label %367

367:                                              ; preds = %366, %328
  %368 = phi { i64, i64 } [ { i64 1001, i64 0 }, %366 ], [ { i64 993, i64 0 }, %328 ]
  %369 = extractvalue { i64, i64 } %368, 0
  %370 = extractvalue { i64, i64 } %368, 1
  %371 = getelementptr inbounds i8, i8* %184, i64 %370
  %372 = bitcast i8* %371 to %"class.blink::LayoutBoxModelObject"*
  %373 = and i64 %369, 1
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %385, label %375

375:                                              ; preds = %367, %328
  %376 = phi %"class.blink::LayoutBoxModelObject"* [ %372, %367 ], [ %183, %328 ]
  %377 = phi i8* [ %371, %367 ], [ %184, %328 ]
  %378 = phi i64 [ %369, %367 ], [ 985, %328 ]
  %379 = bitcast i8* %377 to i8**
  %380 = load i8*, i8** %379, align 8
  %381 = add i64 %378, -1
  %382 = getelementptr i8, i8* %380, i64 %381
  %383 = bitcast i8* %382 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %384 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %383, align 8
  br label %387

385:                                              ; preds = %367
  %386 = inttoptr i64 %369 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %387

387:                                              ; preds = %375, %385
  %388 = phi %"class.blink::LayoutBoxModelObject"* [ %376, %375 ], [ %372, %385 ]
  %389 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %384, %375 ], [ %386, %385 ]
  %390 = call i32 %389(%"class.blink::LayoutBoxModelObject"* %388) #13
  %391 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %392 = bitcast %"class.blink::Length"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %392)
  %393 = bitcast %"class.blink::Length"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %393)
  %394 = bitcast %"class.blink::Length"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %394)
  %395 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %391, i64 0, i32 0, i32 9
  %396 = bitcast [20 x i8]* %395 to i160*
  %397 = load i160, i160* %396, align 8, !noalias !114
  %398 = lshr i160 %397, 102
  %399 = trunc i160 %398 to i8
  %400 = and i8 %399, 3
  %401 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %391, i64 0, i32 0, i32 7, i32 0, i32 0
  %402 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %401, align 8, !noalias !114
  %403 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %402, i64 0, i32 15
  %404 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %402, i64 0, i32 13
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %402, i64 0, i32 14
  store %"class.blink::Length"* %403, %"class.blink::Length"** %14, align 8, !alias.scope !114
  store %"class.blink::Length"* %404, %"class.blink::Length"** %15, align 8, !alias.scope !114
  store %"class.blink::Length"* %405, %"class.blink::Length"** %16, align 8, !alias.scope !114
  %406 = icmp eq i8 %400, 0
  %407 = icmp eq i8 %400, 1
  %408 = select i1 %407, %"class.blink::Length"** %16, %"class.blink::Length"** %14
  %409 = select i1 %406, %"class.blink::Length"** %15, %"class.blink::Length"** %408
  %410 = load %"class.blink::Length"*, %"class.blink::Length"** %409, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %392)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %393)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %394)
  %411 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %183, %"class.blink::Length"* dereferenceable(8) %410) #13
  %412 = icmp slt i32 %411, 0
  %413 = select i1 %412, i32 -2147483648, i32 2147483647
  %414 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %390, i32 %411) #13
  %415 = extractvalue { i32, i1 } %414, 1
  %416 = extractvalue { i32, i1 } %414, 0
  %417 = select i1 %415, i32 %413, i32 %416, !prof !10
  store i32 %240, i32* %179, align 4
  store i32 %299, i32* %180, align 4
  store i32 %358, i32* %181, align 4
  store i32 %417, i32* %182, align 4
  %418 = icmp slt i32 %299, 0
  %419 = select i1 %418, i32 -2147483648, i32 2147483647
  %420 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %240, i32 %299) #13
  %421 = extractvalue { i32, i1 } %420, 1
  %422 = extractvalue { i32, i1 } %420, 0
  %423 = select i1 %421, i32 %419, i32 %422, !prof !10
  %424 = icmp slt i32 %423, 0
  %425 = select i1 %424, i32 -2147483648, i32 2147483647
  %426 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %177, i32 %423) #13
  %427 = extractvalue { i32, i1 } %426, 1
  %428 = extractvalue { i32, i1 } %426, 0
  %429 = select i1 %427, i32 %425, i32 %428, !prof !10
  %430 = bitcast %"class.blink::ComputedStyle"** %21 to %"class.blink::ComputedStyleBase"**
  %431 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %430, align 8
  %432 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %431, i64 0, i32 5, i32 0, i32 0
  %433 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %432, align 8
  %434 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %433, i64 0, i32 1, i32 1, i32 0
  %435 = load float, float* %434, align 4
  %436 = fcmp oeq float %435, 0.000000e+00
  br i1 %436, label %456, label %437

437:                                              ; preds = %387
  %438 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %433, i64 0, i32 1, i32 1, i32 1
  %439 = load float, float* %438, align 4
  %440 = fcmp oeq float %439, 0.000000e+00
  %441 = fcmp olt float %435, 1.562500e-02
  %442 = or i1 %441, %440
  %443 = fcmp olt float %439, 1.562500e-02
  %444 = or i1 %443, %442
  br i1 %444, label %456, label %445

445:                                              ; preds = %437
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %433, i64 0, i32 1, i32 0
  %447 = load i8, i8* %446, align 4
  %448 = and i8 %447, 3
  %449 = icmp eq i8 %448, 2
  br i1 %449, label %450, label %456

450:                                              ; preds = %445
  %451 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %433, i64 0, i32 11
  %452 = load i8, i8* %451, align 4
  %453 = lshr i8 %452, 1
  %454 = and i8 %453, 1
  %455 = zext i8 %454 to i32
  br label %456

456:                                              ; preds = %387, %437, %450, %445
  %457 = phi i32 [ %455, %450 ], [ 1, %445 ], [ 1, %437 ], [ 1, %387 ]
  %458 = load float, float* %74, align 4
  %459 = load float, float* %73, align 8
  %460 = fdiv float %458, %459
  %461 = fpext float %460 to double
  %462 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %463 = call i32 @_ZN5blink24BlockSizeFromAspectRatioERKNS_10NGBoxStrutEdNS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %20, double %461, i32 %457, i32 %429) #13
  %464 = load i32, i32* %181, align 4
  %465 = load i32, i32* %182, align 4
  %466 = icmp slt i32 %465, 0
  %467 = select i1 %466, i32 -2147483648, i32 2147483647
  %468 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %464, i32 %465) #13
  %469 = extractvalue { i32, i1 } %468, 1
  %470 = extractvalue { i32, i1 } %468, 0
  %471 = select i1 %469, i32 %467, i32 %470, !prof !10
  %472 = icmp sgt i32 %471, -1
  %473 = select i1 %472, i32 -2147483648, i32 2147483647
  %474 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %463, i32 %471) #13
  %475 = extractvalue { i32, i1 } %474, 1
  %476 = extractvalue { i32, i1 } %474, 0
  %477 = select i1 %475, i32 %473, i32 %476, !prof !10
  %478 = call i32 @_ZNK5blink9LayoutBox50ComputeReplacedLogicalHeightRespectingMinMaxHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %462, i32 %477) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %178) #13
  br label %502

479:                                              ; preds = %160
  %480 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  br i1 %146, label %492, label %481

481:                                              ; preds = %479
  %482 = extractelement <2 x float> %130, i32 1
  %483 = fmul float %482, 6.400000e+01
  %484 = fcmp ult float %483, 0xC1E0000000000000
  %485 = fcmp ugt float %483, 0x41DFFFFFE0000000
  %486 = fcmp ogt float %483, 0xC1E0000000000000
  %487 = select i1 %486, float %483, float 0xC1E0000000000000
  %488 = fptosi float %487 to i32
  %489 = select i1 %484, i32 0, i32 2147483647
  %490 = select i1 %485, i32 %489, i32 %488
  %491 = call i32 @_ZNK5blink9LayoutBox50ComputeReplacedLogicalHeightRespectingMinMaxHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %480, i32 %490) #13
  br label %502

492:                                              ; preds = %479
  %493 = bitcast %"class.blink::LayoutReplaced"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %494 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %493, align 8
  %495 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %494, i64 165
  %496 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %495, align 8
  %497 = call i64 %496(%"class.blink::LayoutBox"* %480) #13
  %498 = lshr i64 %497, 32
  %499 = select i1 %136, i64 %498, i64 %497
  %500 = trunc i64 %499 to i32
  %501 = call i32 @_ZNK5blink9LayoutBox50ComputeReplacedLogicalHeightRespectingMinMaxHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %480, i32 %500) #13
  br label %502

502:                                              ; preds = %492, %481, %456, %148
  %503 = phi i32 [ %159, %148 ], [ %491, %481 ], [ %501, %492 ], [ %478, %456 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %70) #13
  br label %504

504:                                              ; preds = %68, %62, %502
  %505 = phi i32 [ %503, %502 ], [ %64, %62 ], [ %64, %68 ]
  ret i32 %505
}

declare i32 @_ZNK5blink9LayoutBox50ComputeReplacedLogicalHeightRespectingMinMaxHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox33ComputeReplacedLogicalHeightUsingENS_8SizeTypeENS_6LengthE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"*) local_unnamed_addr #1

declare i32 @_ZN5blink24BlockSizeFromAspectRatioERKNS_10NGBoxStrutEdNS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16), double, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14LayoutReplaced29ComputeIntrinsicLogicalWidthsEv(%"class.blink::LayoutReplaced"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0
  %3 = tail call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %2)
  %4 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 0
  %12 = bitcast %"class.blink::LayoutReplaced"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %13 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %12, align 8
  %14 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %13, i64 165
  %15 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %14, align 8
  %16 = tail call i64 %15(%"class.blink::LayoutBox"* %4) #13
  %17 = lshr i64 %16, 32
  %18 = select i1 %11, i64 %16, i64 %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = select i1 %20, i32 -2147483648, i32 2147483647
  %22 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %3, i32 %19) #13
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = select i1 %23, i32 %21, i32 %24, !prof !10
  %26 = zext i32 %25 to i64
  %27 = shl nuw i64 %26, 32
  %28 = or i64 %27, %26
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14LayoutReplaced22PreferredLogicalWidthsEv(%"class.blink::LayoutReplaced"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 8
  %5 = alloca i32, align 4
  store i32 0, i32* %4, align 8
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = and i160 %10, 15211807202738752817960438464512
  %12 = icmp eq i160 %11, 0
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 5, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %14, i64 0, i32 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %14, i64 0, i32 3
  %17 = select i1 %12, %"class.blink::Length"* %15, %"class.blink::Length"* %16
  %18 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %17, i64 0, i32 2
  %19 = load i8, i8* %18, align 1
  switch i8 %19, label %38 [
    i8 8, label %20
    i8 1, label %20
    i8 6, label %20
    i8 7, label %20
  ]

20:                                               ; preds = %1, %1, %1, %1
  %21 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %22 = tail call i64 @_ZNK5blink9LayoutBox22IntrinsicLogicalWidthsENS_15MinMaxSizesTypeE(%"class.blink::LayoutBox"* %21, i32 0) #13
  %23 = trunc i64 %22 to i32
  %24 = lshr i64 %22, 32
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0
  %27 = tail call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %26)
  %28 = icmp sgt i32 %27, -1
  %29 = select i1 %28, i32 -2147483648, i32 2147483647
  %30 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %23, i32 %27) #13
  %31 = extractvalue { i32, i1 } %30, 1
  %32 = extractvalue { i32, i1 } %30, 0
  %33 = select i1 %31, i32 %29, i32 %32, !prof !10
  store i32 %33, i32* %4, align 8
  %34 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %25, i32 %27) #13
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = select i1 %35, i32 %29, i32 %36, !prof !10
  store i32 %37, i32* %5, align 4
  br label %44

38:                                               ; preds = %1
  %39 = bitcast %"class.blink::LayoutReplaced"* %0 to i32 (%"class.blink::LayoutReplaced"*, i32)***
  %40 = load i32 (%"class.blink::LayoutReplaced"*, i32)**, i32 (%"class.blink::LayoutReplaced"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i32 (%"class.blink::LayoutReplaced"*, i32)*, i32 (%"class.blink::LayoutReplaced"*, i32)** %40, i64 167
  %42 = load i32 (%"class.blink::LayoutReplaced"*, i32)*, i32 (%"class.blink::LayoutReplaced"*, i32)** %41, align 8
  %43 = tail call i32 %42(%"class.blink::LayoutReplaced"* %0, i32 1) #13
  store i32 %43, i32* %5, align 4
  store i32 %43, i32* %4, align 8
  br label %44

44:                                               ; preds = %38, %20
  %45 = phi i32 [ %43, %38 ], [ %37, %20 ]
  %46 = phi i32 [ %43, %38 ], [ %33, %20 ]
  %47 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %47, i64 0, i32 0, i32 9
  %49 = bitcast [20 x i8]* %48 to i160*
  %50 = load i160, i160* %49, align 8
  %51 = and i160 %50, 15211807202738752817960438464512
  %52 = icmp eq i160 %51, 0
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %47, i64 0, i32 0, i32 5, i32 0, i32 0
  %54 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %54, i64 0, i32 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %54, i64 0, i32 3
  %57 = select i1 %52, %"class.blink::Length"* %55, %"class.blink::Length"* %56
  %58 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %57, i64 0, i32 2
  %59 = load i8, i8* %58, align 1
  switch i8 %59, label %60 [
    i8 8, label %66
    i8 1, label %66
  ]

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %54, i64 0, i32 5
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %54, i64 0, i32 4
  %63 = select i1 %52, %"class.blink::Length"* %61, %"class.blink::Length"* %62
  %64 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %63, i64 0, i32 2
  %65 = load i8, i8* %64, align 1
  switch i8 %65, label %67 [
    i8 8, label %66
    i8 1, label %66
  ]

66:                                               ; preds = %60, %60, %44, %44
  store i32 0, i32* %4, align 8
  br label %67

67:                                               ; preds = %60, %66
  %68 = phi i32 [ %46, %60 ], [ 0, %66 ]
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %54, i64 0, i32 7
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %54, i64 0, i32 6
  %71 = select i1 %52, %"class.blink::Length"* %69, %"class.blink::Length"* %70
  %72 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %71, i64 0, i32 2
  %73 = load i8, i8* %72, align 1
  %74 = icmp eq i8 %73, 2
  br i1 %74, label %75, label %113

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %71, i64 0, i32 3
  %77 = load i8, i8* %76, align 2, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %75
  %80 = bitcast %"class.blink::Length"* %71 to float*
  %81 = load float, float* %80, align 4
  %82 = bitcast float %81 to i32
  br label %88

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %71, i64 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = sitofp i32 %85 to float
  %87 = bitcast i32 %85 to float
  br label %88

88:                                               ; preds = %79, %83
  %89 = phi i32 [ %82, %79 ], [ %85, %83 ]
  %90 = phi float [ %81, %79 ], [ %87, %83 ]
  %91 = phi float [ %81, %79 ], [ %86, %83 ]
  %92 = fcmp ogt float %91, 0.000000e+00
  br i1 %92, label %93, label %113

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %95 = sitofp i32 %89 to float
  %96 = select i1 %78, float %95, float %90
  %97 = tail call i32 @_ZNK5blink9LayoutBox40AdjustContentBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"* %94, float %96) #13
  %98 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98)
  store i32 %97, i32* %2, align 4
  %99 = icmp slt i32 %68, %97
  %100 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %101 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  %102 = select i1 %99, %"class.blink::LayoutUnit"* %101, %"class.blink::LayoutUnit"* %100
  %103 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %102, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  store i32 %104, i32* %4, align 8
  %105 = icmp slt i32 %45, %97
  %106 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %107 = select i1 %105, %"class.blink::LayoutUnit"* %101, %"class.blink::LayoutUnit"* %106
  %108 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %107, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  store i32 %109, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98)
  %110 = load i160, i160* %49, align 8
  %111 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %53, align 8
  %112 = and i160 %110, 15211807202738752817960438464512
  br label %113

113:                                              ; preds = %93, %88, %67
  %114 = phi i160 [ %112, %93 ], [ %51, %88 ], [ %51, %67 ]
  %115 = phi i32 [ %109, %93 ], [ %45, %88 ], [ %45, %67 ]
  %116 = phi i32 [ %104, %93 ], [ %68, %88 ], [ %68, %67 ]
  %117 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %111, %93 ], [ %54, %88 ], [ %54, %67 ]
  %118 = icmp eq i160 %114, 0
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %117, i64 0, i32 5
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %117, i64 0, i32 4
  %121 = select i1 %118, %"class.blink::Length"* %119, %"class.blink::Length"* %120
  %122 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %121, i64 0, i32 2
  %123 = load i8, i8* %122, align 1
  %124 = icmp eq i8 %123, 2
  br i1 %124, label %125, label %152

125:                                              ; preds = %113
  %126 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %127 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %121, i64 0, i32 3
  %128 = load i8, i8* %127, align 2, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %125
  %131 = bitcast %"class.blink::Length"* %121 to float*
  %132 = load float, float* %131, align 4
  br label %137

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %121, i64 0, i32 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = sitofp i32 %135 to float
  br label %137

137:                                              ; preds = %130, %133
  %138 = phi float [ %132, %130 ], [ %136, %133 ]
  %139 = tail call i32 @_ZNK5blink9LayoutBox40AdjustContentBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"* %126, float %138) #13
  %140 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %140)
  store i32 %139, i32* %3, align 4
  %141 = icmp sgt i32 %116, %139
  %142 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %143 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %144 = select i1 %141, %"class.blink::LayoutUnit"* %143, %"class.blink::LayoutUnit"* %142
  %145 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %144, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  store i32 %146, i32* %4, align 8
  %147 = icmp sgt i32 %115, %139
  %148 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %149 = select i1 %147, %"class.blink::LayoutUnit"* %143, %"class.blink::LayoutUnit"* %148
  %150 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %149, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  store i32 %151, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %140)
  br label %152

152:                                              ; preds = %137, %113
  %153 = phi i32 [ %151, %137 ], [ %115, %113 ]
  %154 = phi i32 [ %146, %137 ], [ %116, %113 ]
  %155 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0
  %156 = tail call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %155)
  %157 = icmp slt i32 %156, 0
  %158 = select i1 %157, i32 -2147483648, i32 2147483647
  %159 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %154, i32 %156) #13
  %160 = extractvalue { i32, i1 } %159, 1
  %161 = extractvalue { i32, i1 } %159, 0
  %162 = select i1 %160, i32 %158, i32 %161, !prof !10
  %163 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %153, i32 %156) #13
  %164 = extractvalue { i32, i1 } %163, 1
  %165 = extractvalue { i32, i1 } %163, 0
  %166 = select i1 %164, i32 %158, i32 %165, !prof !10
  %167 = zext i32 %166 to i64
  %168 = shl nuw i64 %167, 32
  %169 = zext i32 %162 to i64
  %170 = or i64 %168, %169
  ret i64 %170
}

declare i64 @_ZNK5blink9LayoutBox22IntrinsicLogicalWidthsENS_15MinMaxSizesTypeE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox40AdjustContentBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14LayoutReplaced16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::LayoutReplaced"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::NGInlineCursor", align 8
  %5 = alloca %"class.blink::WritingModeConverter", align 4
  %6 = alloca { i64, i64 }, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %9 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %1, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = and i160 %13, 15211807202738752817960438464512
  %15 = icmp eq i160 %14, 0
  %16 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %1, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %17, align 4
  %20 = select i1 %15, i32 %18, i32 %19
  %21 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %1, i64 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %22 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %1, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %23 = load i32, i32* %21, align 4
  %24 = load i32, i32* %22, align 4
  %25 = select i1 %15, i32 %23, i32 %24
  %26 = icmp slt i32 %25, 0
  %27 = select i1 %26, i32 -2147483648, i32 2147483647
  %28 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %20, i32 %25) #13
  %29 = extractvalue { i32, i1 } %28, 1
  %30 = extractvalue { i32, i1 } %28, 0
  %31 = select i1 %29, i32 %27, i32 %30, !prof !10
  %32 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %1, i64 0, i32 0, i32 0, i32 0, i32 4
  %33 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %32 to i96*
  %34 = load i96, i96* %33, align 4
  %35 = and i96 %34, 402653184
  %36 = icmp eq i96 %35, 402653184
  br i1 %36, label %37, label %115

37:                                               ; preds = %3
  %38 = bitcast %"class.blink::NGInlineCursor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %38) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 112, i1 false) #13
  %39 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 81, i1 false) #13
  %40 = bitcast %"class.blink::LayoutBlockFlow"** %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 20, i1 false) #13
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %4, %"class.blink::LayoutObject"* dereferenceable(88) %7) #13
  %41 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 0, i32 0
  %42 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %41, align 8
  %43 = icmp eq %"class.blink::NGFragmentItem"* %42, null
  br i1 %43, label %112, label %44

44:                                               ; preds = %37
  call void @_ZN5blink14NGInlineCursor20MoveToContainingLineEv(%"class.blink::NGInlineCursor"* nonnull %4) #13
  %45 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %41, align 8
  %46 = icmp eq %"class.blink::NGFragmentItem"* %45, null
  br i1 %46, label %112, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %45, i64 0, i32 0
  %49 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %45, i64 0, i32 6
  %51 = load i16, i16* %50, align 8
  %52 = lshr i16 %51, 6
  %53 = and i16 %52, 3
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %49, i64 0, i32 5, i32 0
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  br label %62

58:                                               ; preds = %47
  %59 = zext i16 %53 to i32
  %60 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %49, i32 %59) #13
  %61 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %41, align 8
  br label %62

62:                                               ; preds = %58, %55
  %63 = phi %"class.blink::NGFragmentItem"* [ %45, %55 ], [ %61, %58 ]
  %64 = phi %"class.blink::ComputedStyle"* [ %57, %55 ], [ %60, %58 ]
  %65 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %64, i64 0, i32 0, i32 9
  %66 = bitcast [20 x i8]* %65 to i160*
  %67 = load i160, i160* %66, align 8
  %68 = lshr i160 %67, 102
  %69 = trunc i160 %68 to i16
  %70 = and i16 %69, 3
  %71 = lshr i160 %67, 107
  %72 = trunc i160 %71 to i16
  %73 = and i16 %72, 256
  %74 = or i16 %73, %70
  %75 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %75) #13
  %76 = bitcast %"class.blink::WritingModeConverter"* %5 to i32*
  store i32 -1431655766, i32* %76, align 4
  %77 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 3
  %78 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %78, i64 0, i32 0, i32 2
  %80 = bitcast %"struct.blink::PhysicalSize"* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.blink::WritingModeConverter"* %5 to i16*
  store i16 %74, i16* %82, align 4
  %83 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %5, i64 0, i32 1
  %84 = bitcast %"struct.blink::PhysicalSize"* %83 to i64*
  store i64 %81, i64* %84, align 4
  %85 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #13
  %86 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %63, i64 0, i32 2
  %87 = bitcast %"struct.blink::PhysicalRect"* %86 to i64*
  %88 = load i64, i64* %87, align 4
  %89 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %63, i64 0, i32 2, i32 1
  %90 = bitcast %"struct.blink::PhysicalSize"* %89 to i64*
  %91 = load i64, i64* %90, align 4
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %88, i64* %92, align 8
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %91, i64* %93, align 8
  %94 = icmp eq i16 %74, 0
  br i1 %94, label %99, label %95

95:                                               ; preds = %62
  %96 = call { i64, i64 } @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_12PhysicalRectE(%"class.blink::WritingModeConverter"* nonnull %5, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %8) #13
  %97 = extractvalue { i64, i64 } %96, 0
  %98 = extractvalue { i64, i64 } %96, 1
  br label %99

99:                                               ; preds = %95, %62
  %100 = phi i64 [ %98, %95 ], [ %91, %62 ]
  %101 = phi i64 [ %97, %95 ], [ %88, %62 ]
  %102 = lshr i64 %101, 32
  %103 = trunc i64 %102 to i32
  %104 = lshr i64 %100, 32
  %105 = trunc i64 %104 to i32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #13
  %106 = icmp slt i32 %105, 0
  %107 = select i1 %106, i32 -2147483648, i32 2147483647
  %108 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 %105) #13
  %109 = extractvalue { i32, i1 } %108, 1
  %110 = extractvalue { i32, i1 } %108, 0
  %111 = select i1 %109, i32 %107, i32 %110, !prof !10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %75) #13
  br label %112

112:                                              ; preds = %99, %44, %37
  %113 = phi i32 [ %103, %99 ], [ %20, %37 ], [ %20, %44 ]
  %114 = phi i32 [ %111, %99 ], [ %31, %37 ], [ %31, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %38) #13
  br label %126

115:                                              ; preds = %3
  %116 = and i96 %34, 268435456
  %117 = icmp eq i96 %116, 0
  br i1 %117, label %118, label %126

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %1, i64 0, i32 0, i32 11, i32 0
  %120 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %119, align 8
  %121 = icmp eq %"class.blink::InlineBox"* %120, null
  br i1 %121, label %126, label %122

122:                                              ; preds = %118
  %123 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* nonnull %120) #13
  %124 = tail call i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"* nonnull %123) #13
  %125 = tail call i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"* nonnull %123) #13
  br label %126

126:                                              ; preds = %112, %115, %118, %122
  %127 = phi i32 [ %113, %112 ], [ %124, %122 ], [ %20, %115 ], [ %20, %118 ]
  %128 = phi i32 [ %114, %112 ], [ %125, %122 ], [ %31, %115 ], [ %31, %118 ]
  %129 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %1, i64 0, i32 0
  %130 = bitcast %"class.blink::LayoutReplaced"* %1 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %131 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %130, align 8
  %132 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %131, i64 147
  %133 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %132, align 8
  %134 = call %"class.blink::LayoutBox"* %133(%"class.blink::LayoutBox"* %129) #13
  %135 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %134, i64 0, i32 0, i32 0
  %136 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %130, align 8
  %137 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %136, i64 147
  %138 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %137, align 8
  %139 = call %"class.blink::LayoutBox"* %138(%"class.blink::LayoutBox"* %129) #13
  %140 = icmp eq %"class.blink::LayoutBox"* %139, null
  br i1 %140, label %149, label %141

141:                                              ; preds = %126
  %142 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %139, i64 0, i32 0, i32 0, i32 5, i32 0
  %143 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %143, i64 0, i32 0, i32 9
  %145 = bitcast [20 x i8]* %144 to i160*
  %146 = load i160, i160* %145, align 8
  %147 = and i160 %146, 15211807202738752817960438464512
  %148 = icmp eq i160 %147, 5070602400912917605986812821504
  br i1 %148, label %154, label %149, !prof !10

149:                                              ; preds = %141, %126
  %150 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %1, i64 0, i32 0, i32 2
  %151 = bitcast %"class.blink::LayoutRect"* %150 to i64*
  %152 = load i64, i64* %151, align 4
  %153 = trunc i64 %152 to i32
  br label %179

154:                                              ; preds = %141
  %155 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %139, i64 0, i32 2, i32 1
  %156 = bitcast %"class.blink::LayoutSize"* %155 to i64*
  %157 = load i64, i64* %156, align 4
  %158 = trunc i64 %157 to i32
  %159 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %1, i64 0, i32 0, i32 2, i32 1
  %160 = bitcast %"class.blink::LayoutSize"* %159 to i64*
  %161 = load i64, i64* %160, align 4
  %162 = trunc i64 %161 to i32
  %163 = icmp sgt i32 %162, -1
  %164 = select i1 %163, i32 -2147483648, i32 2147483647
  %165 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %158, i32 %162) #13
  %166 = extractvalue { i32, i1 } %165, 1
  %167 = extractvalue { i32, i1 } %165, 0
  %168 = select i1 %166, i32 %164, i32 %167, !prof !10
  %169 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %1, i64 0, i32 0, i32 2
  %170 = bitcast %"class.blink::LayoutRect"* %169 to i64*
  %171 = load i64, i64* %170, align 4
  %172 = trunc i64 %171 to i32
  %173 = icmp sgt i32 %172, -1
  %174 = select i1 %173, i32 -2147483648, i32 2147483647
  %175 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %168, i32 %172) #13
  %176 = extractvalue { i32, i1 } %175, 1
  %177 = extractvalue { i32, i1 } %175, 0
  %178 = select i1 %176, i32 %174, i32 %177, !prof !10
  br label %179

179:                                              ; preds = %149, %154
  %180 = phi i32 [ %153, %149 ], [ %178, %154 ]
  %181 = phi i64 [ %152, %149 ], [ %171, %154 ]
  %182 = lshr i64 %181, 32
  %183 = trunc i64 %182 to i32
  %184 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = icmp slt i32 %180, 0
  %187 = select i1 %186, i32 -2147483648, i32 2147483647
  %188 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %185, i32 %180) #13
  %189 = extractvalue { i32, i1 } %188, 1
  %190 = extractvalue { i32, i1 } %188, 0
  %191 = select i1 %189, i32 %187, i32 %190, !prof !10
  %192 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = icmp slt i32 %183, 0
  %195 = select i1 %194, i32 -2147483648, i32 2147483647
  %196 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %193, i32 %183) #13
  %197 = extractvalue { i32, i1 } %196, 1
  %198 = extractvalue { i32, i1 } %196, 0
  %199 = select i1 %197, i32 %195, i32 %198, !prof !10
  %200 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %134, i64 0, i32 0, i32 0, i32 5, i32 0
  %201 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %200, align 8
  %202 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %201, i64 0, i32 0, i32 9
  %203 = bitcast [20 x i8]* %202 to i160*
  %204 = load i160, i160* %203, align 8
  %205 = and i160 %204, 15211807202738752817960438464512
  %206 = icmp eq i160 %205, 5070602400912917605986812821504
  br i1 %206, label %207, label %213, !prof !10

207:                                              ; preds = %179
  %208 = bitcast %"class.blink::LayoutBox"* %134 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %209 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %208, align 8
  %210 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %209, i64 106
  %211 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %210, align 8
  %212 = call i32 %211(%"class.blink::LayoutObject"* %135, i32 %191, i32 0, %"class.blink::LayoutBox"* null) #13
  br label %213

213:                                              ; preds = %179, %207
  %214 = phi i32 [ %212, %207 ], [ %191, %179 ]
  %215 = load i96, i96* %33, align 4
  %216 = trunc i96 %215 to i32
  %217 = icmp slt i32 %216, 0
  %218 = select i1 %217, i32 %199, i32 %214
  %219 = select i1 %217, i32 %214, i32 %199
  %220 = icmp slt i32 %218, %127
  br i1 %220, label %221, label %222

221:                                              ; preds = %213
  call void @_ZNK5blink12LayoutObject18PositionBeforeThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %7) #13
  br label %267

222:                                              ; preds = %213
  %223 = icmp slt i32 %218, %128
  br i1 %223, label %225, label %224

224:                                              ; preds = %222
  call void @_ZNK5blink12LayoutObject18PositionBeforeThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %7) #13
  br label %267

225:                                              ; preds = %222
  %226 = and i96 %215, 16777216
  %227 = icmp eq i96 %226, 0
  br i1 %227, label %228, label %266

228:                                              ; preds = %225
  %229 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %1, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %230 = load %"class.blink::Node"*, %"class.blink::Node"** %229, align 8
  %231 = icmp eq %"class.blink::Node"* %230, null
  br i1 %231, label %266, label %232

232:                                              ; preds = %228
  %233 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %234 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %233, i64 0, i32 0, i32 9
  %235 = bitcast [20 x i8]* %234 to i160*
  %236 = load i160, i160* %235, align 8
  %237 = and i160 %236, 15211807202738752817960438464512
  %238 = icmp eq i160 %237, 0
  %239 = select i1 %238, i32* %17, i32* %16
  %240 = load i32, i32* %239, align 4
  %241 = select i1 %238, i32* %22, i32* %21
  %242 = load i32, i32* %241, align 4
  %243 = sdiv i32 %242, 2
  %244 = sext i32 %243 to i64
  %245 = call i1 @llvm.is.constant.i64(i64 %244) #13
  br i1 %245, label %252, label %246

246:                                              ; preds = %232
  %247 = icmp slt i32 %242, -1
  %248 = select i1 %247, i32 -2147483648, i32 2147483647
  %249 = add nsw i64 %244, 2147483648
  %250 = icmp ult i64 %249, 4294967296
  %251 = select i1 %250, i32 %243, i32 %248, !prof !47
  br label %252

252:                                              ; preds = %232, %246
  %253 = phi i32 [ %251, %246 ], [ %243, %232 ]
  %254 = icmp slt i32 %253, 0
  %255 = select i1 %254, i32 -2147483648, i32 2147483647
  %256 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %240, i32 %253) #13
  %257 = extractvalue { i32, i1 } %256, 1
  %258 = extractvalue { i32, i1 } %256, 0
  %259 = select i1 %257, i32 %255, i32 %258, !prof !10
  %260 = icmp sle i32 %219, %259
  %261 = call zeroext i8 @_ZNK5blink9LayoutBox17ResolvedDirectionEv(%"class.blink::LayoutBox"* %129) #13
  %262 = icmp eq i8 %261, 0
  %263 = xor i1 %262, %260
  br i1 %263, label %265, label %264

264:                                              ; preds = %252
  call void @_ZNK5blink12LayoutObject18PositionBeforeThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %7) #13
  br label %267

265:                                              ; preds = %252
  call void @_ZNK5blink12LayoutObject17PositionAfterThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %7) #13
  br label %267

266:                                              ; preds = %225, %228
  call void @_ZNK5blink9LayoutBox16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBox"* %129, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #13
  br label %267

267:                                              ; preds = %264, %265, %266, %224, %221
  ret void
}

declare void @_ZNK5blink12LayoutObject18PositionBeforeThisEv(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutObject"*) local_unnamed_addr #1

declare zeroext i8 @_ZNK5blink9LayoutBox17ResolvedDirectionEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZNK5blink12LayoutObject17PositionAfterThisEv(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZNK5blink9LayoutBox16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink14LayoutReplaced24LocalSelectionVisualRectEv(%"class.blink::LayoutReplaced"*) unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"struct.blink::PhysicalRect"*
  %4 = alloca %"class.blink::NGInlineCursor", align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %7 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = lshr i96 %10, 77
  %12 = trunc i96 %11 to i32
  %13 = and i32 %12, 7
  switch i32 %13, label %16 [
    i32 0, label %14
    i32 5, label %14
  ]

14:                                               ; preds = %1, %1
  %15 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false)
  br label %168

16:                                               ; preds = %1
  %17 = and i96 %10, 402653184
  %18 = icmp eq i96 %17, 402653184
  br i1 %18, label %19, label %38

19:                                               ; preds = %16
  %20 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 16, i1 false) #13
  %21 = bitcast %"class.blink::NGInlineCursor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %21) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 112, i1 false)
  %22 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 81, i1 false) #13
  %23 = bitcast %"class.blink::LayoutBlockFlow"** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 20, i1 false) #13
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %4, %"class.blink::LayoutObject"* dereferenceable(88) %7) #13
  %24 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 0, i32 0
  %25 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %24, align 8
  %26 = icmp eq %"class.blink::NGFragmentItem"* %25, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %19
  %28 = bitcast { i64, i64 }* %5 to i8*
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  br label %31

31:                                               ; preds = %27, %31
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %32 = call { i64, i64 } @_ZNK5blink14NGInlineCursor36CurrentLocalSelectionRectForReplacedEv(%"class.blink::NGInlineCursor"* nonnull %4) #13
  %33 = extractvalue { i64, i64 } %32, 0
  store i64 %33, i64* %29, align 8
  %34 = extractvalue { i64, i64 } %32, 1
  store i64 %34, i64* %30, align 8
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %3, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %4) #13
  %35 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %24, align 8
  %36 = icmp eq %"class.blink::NGFragmentItem"* %35, null
  br i1 %36, label %37, label %31

37:                                               ; preds = %31, %19
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %21) #13
  br label %168

38:                                               ; preds = %16
  %39 = and i96 %10, 268435456
  %40 = icmp eq i96 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 11, i32 0
  %43 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %42, align 8
  %44 = icmp eq %"class.blink::InlineBox"* %43, null
  br i1 %44, label %45, label %56

45:                                               ; preds = %38, %41
  %46 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 2, i32 1
  %47 = bitcast %"class.blink::LayoutSize"* %46 to i64*
  %48 = load i64, i64* %47, align 4
  %49 = trunc i64 %48 to i32
  %50 = lshr i64 %48, 32
  %51 = trunc i64 %50 to i32
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %54 = bitcast i64* %53 to i32*
  store i32 %49, i32* %54, align 8
  %55 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 1, i32 0
  store i32 %51, i32* %55, align 4
  br label %168

56:                                               ; preds = %41
  %57 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* nonnull %43) #13
  %58 = tail call %"class.blink::LayoutObject"* @_ZNK5blink13RootInlineBox5BlockEv(%"class.blink::RootInlineBox"* %57) #13
  %59 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 0, i32 5, i32 0
  %60 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %60, i64 0, i32 0, i32 9
  %62 = bitcast [20 x i8]* %61 to i160*
  %63 = load i160, i160* %62, align 8
  %64 = and i160 %63, 15211807202738752817960438464512
  %65 = icmp eq i160 %64, 5070602400912917605986812821504
  br i1 %65, label %66, label %93

66:                                               ; preds = %56
  %67 = load i96, i96* %9, align 4
  %68 = and i96 %67, 268435456
  %69 = icmp eq i96 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %42, align 8
  br label %72

72:                                               ; preds = %66, %70
  %73 = phi %"class.blink::InlineBox"* [ %71, %70 ], [ null, %66 ]
  %74 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %73, i64 0, i32 7, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 2048
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %73, i64 0, i32 5, i32 1, i32 0
  %79 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %73, i64 0, i32 5, i32 0, i32 0
  %80 = select i1 %77, i32* %79, i32* %78
  %81 = load i32, i32* %80, align 4
  %82 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %73) #13
  %83 = icmp slt i32 %82, 0
  %84 = select i1 %83, i32 -2147483648, i32 2147483647
  %85 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %82) #13
  %86 = extractvalue { i32, i1 } %85, 1
  %87 = extractvalue { i32, i1 } %85, 0
  %88 = select i1 %86, i32 %84, i32 %87, !prof !10
  %89 = tail call i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"* %57) #13
  %90 = icmp sgt i32 %89, -1
  %91 = select i1 %90, i32 -2147483648, i32 2147483647
  %92 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %88, i32 %89) #13
  br label %113

93:                                               ; preds = %56
  %94 = tail call i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"* %57) #13
  %95 = load i96, i96* %9, align 4
  %96 = and i96 %95, 268435456
  %97 = icmp eq i96 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %93
  %99 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %42, align 8
  br label %100

100:                                              ; preds = %93, %98
  %101 = phi %"class.blink::InlineBox"* [ %99, %98 ], [ null, %93 ]
  %102 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %101, i64 0, i32 7, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, 2048
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %101, i64 0, i32 5, i32 1, i32 0
  %107 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %101, i64 0, i32 5, i32 0, i32 0
  %108 = select i1 %105, i32* %107, i32* %106
  %109 = load i32, i32* %108, align 4
  %110 = icmp sgt i32 %109, -1
  %111 = select i1 %110, i32 -2147483648, i32 2147483647
  %112 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %94, i32 %109) #13
  br label %113

113:                                              ; preds = %100, %72
  %114 = phi { i32, i1 } [ %112, %100 ], [ %92, %72 ]
  %115 = phi i32 [ %111, %100 ], [ %91, %72 ]
  %116 = extractvalue { i32, i1 } %114, 1
  %117 = extractvalue { i32, i1 } %114, 0
  %118 = select i1 %116, i32 %115, i32 %117
  %119 = tail call %"class.blink::LayoutObject"* @_ZNK5blink13RootInlineBox5BlockEv(%"class.blink::RootInlineBox"* %57) #13
  %120 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %119, i64 0, i32 5, i32 0
  %121 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %121, i64 0, i32 0, i32 9
  %123 = bitcast [20 x i8]* %122 to i160*
  %124 = load i160, i160* %123, align 8
  %125 = and i160 %124, 15211807202738752817960438464512
  %126 = icmp eq i160 %125, 0
  br i1 %126, label %127, label %147

127:                                              ; preds = %113
  %128 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 2, i32 1
  %129 = bitcast %"class.blink::LayoutSize"* %128 to i64*
  %130 = load i64, i64* %129, align 4
  %131 = trunc i64 %130 to i32
  %132 = tail call i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"* %57) #13
  %133 = tail call i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"* %57) #13
  %134 = icmp sgt i32 %133, -1
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %132, i32 %133) #13
  %137 = extractvalue { i32, i1 } %136, 1
  %138 = extractvalue { i32, i1 } %136, 0
  %139 = select i1 %137, i32 %135, i32 %138, !prof !10
  %140 = icmp sgt i32 %139, 0
  %141 = select i1 %140, i32 %139, i32 0
  %142 = bitcast { i64, i64 }* %2 to i32*
  store i32 0, i32* %142, align 8
  %143 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 1, i32 0
  store i32 %118, i32* %143, align 4
  %144 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %145 = bitcast i64* %144 to i32*
  store i32 %131, i32* %145, align 8
  %146 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 1, i32 0
  store i32 %141, i32* %146, align 4
  br label %168

147:                                              ; preds = %113
  %148 = tail call i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"* %57) #13
  %149 = tail call i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"* %57) #13
  %150 = icmp sgt i32 %149, -1
  %151 = select i1 %150, i32 -2147483648, i32 2147483647
  %152 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %148, i32 %149) #13
  %153 = extractvalue { i32, i1 } %152, 1
  %154 = extractvalue { i32, i1 } %152, 0
  %155 = select i1 %153, i32 %151, i32 %154, !prof !10
  %156 = icmp sgt i32 %155, 0
  %157 = select i1 %156, i32 %155, i32 0
  %158 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 2, i32 1
  %159 = bitcast %"class.blink::LayoutSize"* %158 to i64*
  %160 = load i64, i64* %159, align 4
  %161 = lshr i64 %160, 32
  %162 = trunc i64 %161 to i32
  %163 = bitcast { i64, i64 }* %2 to i32*
  store i32 %118, i32* %163, align 8
  %164 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 1, i32 0
  store i32 0, i32* %164, align 4
  %165 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %166 = bitcast i64* %165 to i32*
  store i32 %157, i32* %166, align 8
  %167 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 1, i32 0
  store i32 %162, i32* %167, align 4
  br label %168

168:                                              ; preds = %127, %147, %45, %37, %14
  %169 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %170 = load i64, i64* %169, align 8
  %171 = insertvalue { i64, i64 } undef, i64 %170, 0
  %172 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = insertvalue { i64, i64 } %171, i64 %173, 1
  ret { i64, i64 } %174
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink14NGInlineCursor36CurrentLocalSelectionRectForReplacedEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #1

declare void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink13RootInlineBox5BlockEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #1

declare void @_ZN5blink9LayoutBox12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutBox"*, i8*, i32) unnamed_addr #1

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #1

declare i64 @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink12LayoutObject15VirtualChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutObjectChildList"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink12LayoutObject15VirtualChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutObjectChildList"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LayoutReplaced15CanHaveChildrenEv(%"class.blink::LayoutReplaced"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #13
  ret void
}

declare void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsLayoutBlockEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink12LayoutObject19VirtualContinuationEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutBoxModelObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 0
  %7 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject13HoverAncestorEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  ret %"class.blink::LayoutObject"* %3
}

declare void @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox18HasInlineFragmentsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %9 = bitcast %union.anon.1936* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare i16 @_ZN5blink12LayoutObject20RecalcLayoutOverflowEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink12LayoutObject14NodeForHitTestEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBox"*, %"class.WTF::Vector.2253"*, i32) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutObject6lengthEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

declare { i64, i64 } @_ZNK5blink9LayoutBox14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutBox"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBox"*, %"class.WTF::Vector.2254"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DisplayItemClient"* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::DisplayItemClient"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink9LayoutBox9DebugRectEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LayoutReplaced8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE(%"class.blink::LayoutReplaced"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 39
  ret i1 %3
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutBox"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink9LayoutBox16InsertedIntoTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox15ClearPaintFlagsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i64 @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_(%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %12, label %27, !prof !10

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %2, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %2) #13
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !10
  %21 = icmp sgt i32 %20, -1
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %20) #13
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !10
  br label %27

27:                                               ; preds = %4, %12
  %28 = phi i32 [ %26, %12 ], [ %1, %4 ]
  ret i32 %28
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11OffsetWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12OffsetHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox17LayerTypeRequiredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox15UpdateFromStyleEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox17BorderBoundingBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = trunc i64 %4 to i32
  %6 = lshr i64 %4, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %9 = bitcast %"class.blink::LayoutSize"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = srem i32 %5, 64
  %15 = icmp slt i32 %11, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %11) #13
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !10
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %14, 32
  %26 = ashr i32 %25, 6
  %27 = sub nsw i32 %21, %26
  %28 = add nsw i32 %24, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %1
  %31 = add i32 %11, 4
  %32 = icmp ugt i32 %31, 8
  br i1 %32, label %33, label %36, !prof !117

33:                                               ; preds = %30
  %34 = icmp sgt i32 %11, 0
  %35 = select i1 %34, i32 1, i32 -1
  br label %36

36:                                               ; preds = %33, %30, %1
  %37 = phi i32 [ %35, %33 ], [ %28, %1 ], [ 0, %30 ]
  %38 = srem i32 %7, 64
  %39 = icmp slt i32 %13, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %13) #13
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !10
  %45 = sdiv i32 %44, 64
  %46 = srem i32 %44, 64
  %47 = add nsw i32 %46, 32
  %48 = ashr i32 %47, 6
  %49 = add nsw i32 %38, 32
  %50 = ashr i32 %49, 6
  %51 = sub nsw i32 %45, %50
  %52 = add nsw i32 %48, %51
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %36
  %55 = add i32 %13, 4
  %56 = icmp ugt i32 %55, 8
  br i1 %56, label %57, label %60, !prof !117

57:                                               ; preds = %54
  %58 = icmp sgt i32 %13, 0
  %59 = select i1 %58, i32 1, i32 -1
  br label %60

60:                                               ; preds = %36, %54, %57
  %61 = phi i32 [ %59, %57 ], [ %52, %36 ], [ 0, %54 ]
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %37 to i64
  %65 = or i64 %63, %64
  %66 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %65, 1
  ret { i64, i64 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #13
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = and i64 %3, -4294967296
  %6 = extractvalue { i64, i64 } %2, 1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 5070602400912917605986812821504
  br i1 %13, label %14, label %22, !prof !10

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %16 = trunc i64 %6 to i32
  %17 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %18 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %18, i64 106
  %20 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %19, align 8
  %21 = tail call i32 %20(%"class.blink::LayoutObject"* %15, i32 %4, i32 %16, %"class.blink::LayoutBox"* null) #13
  br label %22

22:                                               ; preds = %1, %14
  %23 = phi i32 [ %21, %14 ], [ %4, %1 ]
  %24 = zext i32 %23 to i64
  %25 = or i64 %5, %24
  %26 = insertvalue { i64, i64 } undef, i64 %25, 0
  %27 = insertvalue { i64, i64 } %26, i64 %6, 1
  ret { i64, i64 } %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 16
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 13
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 14
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 15
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject9BorderTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = icmp ult i16 %7, 8192
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 14
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11BorderRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 3584
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %3 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %3, i64 122
  %5 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::LayoutBoxModelObject"* %0) #13
  %7 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %7, i64 125
  %9 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LayoutBoxModelObject"* %0) #13
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %11, i64 123
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBoxModelObject"* %0) #13
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 124
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBoxModelObject"* %0) #13
  %19 = zext i32 %10 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %6 to i64
  %22 = or i64 %20, %21
  %23 = insertvalue { i64, i64 } undef, i64 %22, 0
  %24 = zext i32 %18 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %14 to i64
  %27 = or i64 %25, %26
  %28 = insertvalue { i64, i64 } %23, i64 %27, 1
  ret { i64, i64 } %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox9MarginTopEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12MarginBottomEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox10MarginLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11MarginRightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i32 @_ZNK5blink9LayoutBox10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBox"*, i1 zeroext, i32, i32) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBox"*, i32, i1 zeroext, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink20LayoutBoxModelObject20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2253"*, i32) unnamed_addr #1

declare void @_ZNK5blink20LayoutBoxModelObject17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2253"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare void @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink9LayoutBox17LocationContainerEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox14HasTopOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox15HasLeftOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox17UpdateAfterLayoutEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ScrollWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ScrollHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !118
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 1033, i64 0 }, %12 ], [ { i64 1041, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 1017, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #13
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20CollapsedMarginAfterEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !121
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 1041, i64 0 }, %12 ], [ { i64 1033, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 1025, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #13
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox23IsInSelfHitTestingPhaseENS_13HitTestActionE(%"class.blink::LayoutBox"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 4
  ret i1 %3
}

declare %"class.blink::InlineBox"* @_ZN5blink9LayoutBox15CreateInlineBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox10BreakAfterEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11BreakBeforeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9LayoutBox13StartPageNameEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9LayoutBox11EndPageNameEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox18UpdateLogicalWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink14LayoutReplaced29IntrinsicContentLogicalHeightEv(%"class.blink::LayoutReplaced"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutReplaced", %"class.blink::LayoutReplaced"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = bitcast %"class.blink::LayoutReplaced"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %11 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %11, i64 165
  %13 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %12, align 8
  %14 = tail call i64 %13(%"class.blink::LayoutBox"* %2) #13
  %15 = lshr i64 %14, 32
  %16 = select i1 %9, i64 %15, i64 %14
  %17 = trunc i64 %16 to i32
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1073741824
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %10 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, i64 22
  %12 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8) #13
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi i1 [ false, %1 ], [ %14, %7 ]
  ret i1 %16
}

declare zeroext i1 @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41553586675481359781061931072225280
  %8 = icmp eq i160 %7, 41538374868278621028243970633760768
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowXEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 132226261520350065983488
  %14 = icmp eq i160 %13, 75557863725914323419136
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 74
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowYEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1057810092162800527867904
  %14 = icmp eq i160 %13, 604462909807314587353088
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 77
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE(%"class.blink::LayoutBox"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20FirstLineBoxBaselineEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i32 -64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBox"*, i32) unnamed_addr #0 comdat align 2 {
  ret i32 -64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBox"* @_ZNK5blink9LayoutBox32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutBox"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i8 @_ZNK5blink9LayoutBox23ComputeOverflowClipAxesEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare zeroext i1 @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare zeroext i8 @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LayoutReplaced31DrawsBackgroundOntoContentLayerEv(%"class.blink::LayoutReplaced"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14LayoutReplaced13PaintReplacedERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutReplaced"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink14LayoutReplaced21MinimumReplacedHeightEv(%"class.blink::LayoutReplaced"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10LengthSizeeqERKS0_(%"class.blink::LengthSize"*, %"class.blink::LengthSize"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %6, %8
  br i1 %9, label %10, label %90

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 0, i32 1
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %12, %14
  br i1 %15, label %16, label %90

16:                                               ; preds = %10
  %17 = icmp eq i8 %6, 12
  br i1 %17, label %46, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0, i32 3
  %20 = load i8, i8* %19, align 2, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::LengthSize"* %0 to float*
  %24 = load float, float* %23, align 4
  br label %29

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  br label %29

29:                                               ; preds = %25, %22
  %30 = phi float [ %24, %22 ], [ %28, %25 ]
  %31 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 0, i32 3
  %32 = load i8, i8* %31, align 2, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::LengthSize"* %1 to float*
  %36 = load float, float* %35, align 4
  br label %41

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = sitofp i32 %39 to float
  br label %41

41:                                               ; preds = %37, %34
  %42 = phi float [ %36, %34 ], [ %40, %37 ]
  %43 = fcmp oeq float %30, %42
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %3, %"class.blink::Length"* dereferenceable(8) %4) #13
  br i1 %45, label %46, label %90

46:                                               ; preds = %16, %41, %44
  %47 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 1
  %49 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 1, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 1, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %50, %52
  br i1 %53, label %54, label %90

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 4, !range !2
  %57 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 4, !range !2
  %59 = icmp eq i8 %56, %58
  br i1 %59, label %60, label %90

60:                                               ; preds = %54
  %61 = icmp eq i8 %50, 12
  br i1 %61, label %90, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 1, i32 3
  %64 = load i8, i8* %63, align 2, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.blink::Length"* %47 to float*
  %68 = load float, float* %67, align 4
  br label %73

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %47, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = sitofp i32 %71 to float
  br label %73

73:                                               ; preds = %69, %66
  %74 = phi float [ %68, %66 ], [ %72, %69 ]
  %75 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 1, i32 3
  %76 = load i8, i8* %75, align 2, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %73
  %79 = bitcast %"class.blink::Length"* %48 to float*
  %80 = load float, float* %79, align 4
  br label %85

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = sitofp i32 %83 to float
  br label %85

85:                                               ; preds = %81, %78
  %86 = phi float [ %80, %78 ], [ %84, %81 ]
  %87 = fcmp oeq float %74, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %47, %"class.blink::Length"* dereferenceable(8) %48) #13
  br label %90

90:                                               ; preds = %2, %10, %88, %85, %60, %54, %46, %44
  %91 = phi i1 [ false, %44 ], [ false, %54 ], [ false, %46 ], [ true, %85 ], [ true, %60 ], [ %89, %88 ], [ false, %10 ], [ false, %2 ]
  ret i1 %91
}

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #6 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #13
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !47

23:                                               ; preds = %19
  %24 = bitcast %class.anon* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #13
  %25 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), %class.anon* nonnull dereferenceable(16) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #13
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #13
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #13
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  %20 = tail call i8* @_Znwm(i64 192) #15
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #13
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #13
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #13
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #13
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #13
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #13
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #13
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  %38 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #13
  %40 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #13
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #13
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #13
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #13
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #13
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #15
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #13
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !124

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !126

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !127

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #15
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #15, !noalias !128
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !128
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #15
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #1

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #11

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #11

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  br i1 %1, label %6, label %41

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6, %10
  %11 = phi %"class.blink::LayoutObject"* [ %13, %10 ], [ %5, %6 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %6
  %18 = phi %"class.blink::Node"* [ %8, %6 ], [ %15, %10 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 59, i32 0, i32 0
  %24 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %24, i64 0, i32 31, i32 0, i32 0
  %26 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 11
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %17
  %32 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0)) #13
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %34

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %5) #13
  %40 = icmp eq %"class.blink::ComputedStyle"* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %2, %34, %38
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi %"class.blink::ComputedStyle"* [ %39, %38 ], [ %43, %41 ]
  ret %"class.blink::ComputedStyle"* %45
}

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #1

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #1

declare i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #13
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 120
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #13
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #13
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !10
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 121
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #13
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #13
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #13
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 118
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #13
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #13
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !10
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 119
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #13
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #13
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

declare void @_ZN5blink14NGInlineCursor20MoveToContainingLineEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #1

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_12PhysicalRectE(%"class.blink::WritingModeConverter"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1

declare i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind readnone }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 4001}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!6 = distinct !{!6, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!9 = distinct !{!9, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!10 = !{!"branch_weights", i32 1, i32 2000}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!13 = distinct !{!13, !"_ZN5blink6Length5FixedIiEES0_T_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!16 = distinct !{!16, !"_ZN5blink6Length5FixedIiEES0_T_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!19 = distinct !{!19, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!31 = distinct !{!31, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!34 = distinct !{!34, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!37 = distinct !{!37, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!40 = distinct !{!40, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!43 = distinct !{!43, !"_ZN5blink6Length5FixedIiEES0_T_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!46 = distinct !{!46, !"_ZN5blink6Length5FixedIiEES0_T_"}
!47 = !{!"branch_weights", i32 2000, i32 1}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!50 = distinct !{!50, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!53 = distinct !{!53, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!56 = distinct !{!56, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!59 = distinct !{!59, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN5blink26ComputedStyleInitialValues21InitialObjectPositionEv: argument 0"}
!62 = distinct !{!62, !"_ZN5blink26ComputedStyleInitialValues21InitialObjectPositionEv"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!65 = distinct !{!65, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!68 = distinct !{!68, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!71 = distinct !{!71, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!74 = distinct !{!74, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!77 = distinct !{!77, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!80 = distinct !{!80, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!83 = distinct !{!83, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!86 = distinct !{!86, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!89 = distinct !{!89, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!92 = distinct !{!92, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!95 = distinct !{!95, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!98 = distinct !{!98, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!101 = distinct !{!101, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!104 = distinct !{!104, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!107 = distinct !{!107, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!110 = distinct !{!110, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!113 = distinct !{!113, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!116 = distinct !{!116, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!117 = !{!"branch_weights", i32 4001, i32 4000000}
!118 = !{!119}
!119 = distinct !{!119, !120, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!120 = distinct !{!120, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!121 = !{!122}
!122 = distinct !{!122, !123, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!123 = distinct !{!123, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!124 = distinct !{!124, !125}
!125 = !{!"llvm.loop.unroll.disable"}
!126 = distinct !{!126, !125}
!127 = distinct !{!127, !125}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!130 = distinct !{!130, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
