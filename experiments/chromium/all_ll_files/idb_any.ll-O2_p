; ModuleID = '../../third_party/blink/renderer/modules/indexeddb/idb_any.cc'
source_filename = "../../third_party/blink/renderer/modules/indexeddb/idb_any.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::IDBAny" = type { i32, %"class.blink::Member", %"class.blink::Member.35", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.162", %"class.WTF::Vector.178", i64 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::IDBCursor"* }
%"class.blink::IDBCursor" = type { %"class.blink::ScriptWrappable", %"class.std::__1::unique_ptr", %"class.blink::Member.3", i32, %"class.blink::Member.5", %"class.blink::Member.7", i8, i8, i8, i8, %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.blink::Member.160" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::WebIDBCursor"* }
%"class.blink::WebIDBCursor" = type { i32 (...)** }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::IDBRequest"* }
%"class.blink::IDBRequest" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable.212", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.7", i32, i8, %"class.v8::Isolate"*, %"class.blink::IDBRequest::AsyncTraceState", %"class.blink::Member.213", %"class.blink::Member.160", %"class.blink::Member.43", i8, %"class.blink::Member.106", i32, i32, %"class.blink::Member", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.162", %"class.WTF::Vector.215", i8, i8, i8, %"class.blink::WebIDBCallbacks"*, %"class.blink::IDBRequestQueueItem"* }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.17" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.14" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::HeapVector.16"* }
%"class.blink::HeapVector.16" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.WTF::Vector.20"* }
%"class.WTF::Vector.20" = type opaque
%"class.blink::ActiveScriptWrappable.212" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.28"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.28" = type opaque
%"class.v8::Isolate" = type { i8 }
%"class.blink::IDBRequest::AsyncTraceState" = type { i8*, i64 }
%"class.blink::Member.213" = type { %"class.blink::MemberBase.214" }
%"class.blink::MemberBase.214" = type { %"class.blink::V8UnionIDBCursorOrIDBIndexOrIDBObjectStore"* }
%"class.blink::V8UnionIDBCursorOrIDBIndexOrIDBObjectStore" = type opaque
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type opaque
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::EventQueue"* }
%"class.blink::EventQueue" = type <{ %"class.blink::ExecutionContextLifecycleObserver.base", i8, [3 x i8], %"class.blink::HeapLinkedHashSet.110", i8, [7 x i8] }>
%"class.blink::HeapLinkedHashSet.110" = type { %"class.WTF::LinkedHashSet.113" }
%"class.WTF::LinkedHashSet.113" = type { %"class.WTF::HashMap.114", %"class.WTF::VectorBackedLinkedList.118" }
%"class.WTF::HashMap.114" = type { %"class.WTF::HashTable.115" }
%"class.WTF::HashTable.115" = type <{ %"struct.WTF::KeyValuePair.117"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.117" = type opaque
%"class.WTF::VectorBackedLinkedList.118" = type { %"class.WTF::Vector.119", i32, i32 }
%"class.WTF::Vector.119" = type { %"class.WTF::VectorBuffer.120" }
%"class.WTF::VectorBuffer.120" = type { %"class.WTF::VectorBufferBase.121" }
%"class.WTF::VectorBufferBase.121" = type { %"class.WTF::VectorBackedLinkedListNode.122"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.122" = type opaque
%"class.WTF::Vector.215" = type { %"class.WTF::VectorBuffer.216" }
%"class.WTF::VectorBuffer.216" = type { %"class.WTF::VectorBufferBase.217" }
%"class.WTF::VectorBufferBase.217" = type { %class.scoped_refptr.218*, i32, i32 }
%class.scoped_refptr.218 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.220", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.219" }
%"class.base::RefCountedThreadSafe.219" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.125" }
%"struct.std::__1::atomic.125" = type { %"struct.std::__1::__atomic_base.126" }
%"struct.std::__1::__atomic_base.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__cxx_atomic_impl.128" }
%"struct.std::__1::__cxx_atomic_impl.128" = type { %"struct.std::__1::__cxx_atomic_base_impl.129" }
%"struct.std::__1::__cxx_atomic_base_impl.129" = type { i32 }
%"class.mojo::PendingRemote.220" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.blink::WebIDBCallbacks" = type { %"class.blink::mojom::blink::IDBCallbacks" }
%"class.blink::mojom::blink::IDBCallbacks" = type { i32 (...)** }
%"class.blink::IDBRequestQueueItem" = type opaque
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* }
%"class.blink::V8UnionIDBIndexOrIDBObjectStore" = type opaque
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::IDBTransaction"* }
%"class.blink::IDBTransaction" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.29", i64, %"class.blink::Member.35", %"class.blink::Member.37", i32, i32, %"class.WTF::HashSet.39", i32, i8, i64, %"class.blink::Member.43", %"class.blink::HeapLinkedHashSet", %"class.WTF::Deque", %"class.blink::HeapHashMap", %"class.blink::HeapHashMap.69", %"class.WTF::Vector.76", %"class.blink::HeapVector.92", %"struct.blink::IDBDatabaseMetadata", %"class.blink::Member.106", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::WebIDBTransaction"* }
%"class.blink::WebIDBTransaction" = type { i32 (...)** }
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::IDBOpenDBRequest"* }
%"class.blink::IDBOpenDBRequest" = type opaque
%"class.WTF::HashSet.39" = type { %"class.WTF::HashTable.40" }
%"class.WTF::HashTable.40" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.47" }
%"class.WTF::HashTable.47" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.49", i32, i32 }
%"class.WTF::Vector.49" = type { %"class.WTF::VectorBuffer.50" }
%"class.WTF::VectorBuffer.50" = type { %"class.WTF::VectorBufferBase.51" }
%"class.WTF::VectorBufferBase.51" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::IDBRequestQueueItem, std::__1::default_delete<blink::IDBRequestQueueItem> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::IDBRequestQueueItem, std::__1::default_delete<blink::IDBRequestQueueItem> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.55" }
%"class.WTF::VectorBuffer.55" = type { %"class.WTF::VectorBufferBase.56" }
%"class.WTF::VectorBufferBase.56" = type { %"class.std::__1::unique_ptr.57"*, i32, i32 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::IDBRequestQueueItem"* }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.65" }
%"class.WTF::HashMap.65" = type { %"class.WTF::HashTable.66" }
%"class.WTF::HashTable.66" = type <{ %"struct.WTF::KeyValuePair.68"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.68" = type opaque
%"class.blink::HeapHashMap.69" = type { %"class.WTF::HashMap.72" }
%"class.WTF::HashMap.72" = type { %"class.WTF::HashTable.73" }
%"class.WTF::HashTable.73" = type <{ %"struct.WTF::KeyValuePair.75"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.75" = type opaque
%"class.WTF::Vector.76" = type { %"class.WTF::VectorBuffer.77" }
%"class.WTF::VectorBuffer.77" = type { %"class.WTF::VectorBufferBase.78" }
%"class.WTF::VectorBufferBase.78" = type { %class.scoped_refptr.79*, i32, i32 }
%class.scoped_refptr.79 = type { %"class.blink::IDBObjectStoreMetadata"* }
%"class.blink::IDBObjectStoreMetadata" = type { %"class.WTF::RefCounted", %"class.WTF::String", i64, %"class.blink::IDBKeyPath", i8, i64, %"class.WTF::HashMap.85" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::IDBKeyPath" = type { i32, %"class.WTF::String", %"class.WTF::Vector.80" }
%"class.WTF::Vector.80" = type { %"class.WTF::VectorBuffer.81" }
%"class.WTF::VectorBuffer.81" = type { %"class.WTF::VectorBufferBase.82" }
%"class.WTF::VectorBufferBase.82" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::HashMap.85" = type { %"class.WTF::HashTable.86" }
%"class.WTF::HashTable.86" = type <{ %"struct.WTF::KeyValuePair.89"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.89" = type opaque
%"class.blink::HeapVector.92" = type { %"class.WTF::Vector.95" }
%"class.WTF::Vector.95" = type { %"class.WTF::VectorBuffer.96" }
%"class.WTF::VectorBuffer.96" = type { %"class.WTF::VectorBufferBase.97" }
%"class.WTF::VectorBufferBase.97" = type { %"class.blink::Member.98"*, i32, i32 }
%"class.blink::Member.98" = type { %"class.blink::MemberBase.99" }
%"class.blink::MemberBase.99" = type { %"class.blink::IDBIndex"* }
%"class.blink::IDBIndex" = type <{ %"class.blink::ScriptWrappable", %class.scoped_refptr.183, %"class.blink::Member.186", %"class.blink::Member.7", i8, [7 x i8] }>
%class.scoped_refptr.183 = type { %"class.blink::IDBIndexMetadata"* }
%"class.blink::IDBIndexMetadata" = type <{ %"class.WTF::RefCounted.184", [4 x i8], %"class.WTF::String", i64, %"class.blink::IDBKeyPath", i8, i8, [6 x i8] }>
%"class.WTF::RefCounted.184" = type { %"class.base::RefCounted.185" }
%"class.base::RefCounted.185" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::IDBObjectStore"* }
%"class.blink::IDBObjectStore" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.79, %"class.blink::Member.7", i8, [7 x i8], %"class.blink::HeapHashMap.188" }
%"class.blink::HeapHashMap.188" = type { %"class.WTF::HashMap.191" }
%"class.WTF::HashMap.191" = type { %"class.WTF::HashTable.192" }
%"class.WTF::HashTable.192" = type <{ %"struct.WTF::KeyValuePair.194"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.194" = type opaque
%"struct.blink::IDBDatabaseMetadata" = type <{ %"class.WTF::String", i64, i64, i64, %"class.WTF::HashMap.101", i8, [7 x i8] }>
%"class.WTF::HashMap.101" = type { %"class.WTF::HashTable.102" }
%"class.WTF::HashTable.102" = type <{ %"struct.WTF::KeyValuePair.105"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.105" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.124 }
%class.scoped_refptr.124 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.130" }
%"struct.std::__1::atomic.130" = type { %"struct.std::__1::__atomic_base.131" }
%"struct.std::__1::__atomic_base.131" = type { %"struct.std::__1::__atomic_base.132" }
%"struct.std::__1::__atomic_base.132" = type { %"struct.std::__1::__cxx_atomic_impl.133" }
%"struct.std::__1::__cxx_atomic_impl.133" = type { %"struct.std::__1::__cxx_atomic_base_impl.134" }
%"struct.std::__1::__cxx_atomic_base_impl.134" = type { i8 }
%"class.blink::Member.160" = type { %"class.blink::MemberBase.161" }
%"class.blink::MemberBase.161" = type { %"class.blink::IDBAny"* }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::IDBDatabase"* }
%"class.blink::IDBDatabase" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable.195", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::mojom::blink::IDBDatabaseCallbacks", %"struct.blink::IDBDatabaseMetadata", %"class.std::__1::unique_ptr.196", %"class.blink::Member.7", %"class.blink::HeapHashMap.202", %"class.mojo::PendingRemote.209", i8, %"class.blink::Member.106", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" }
%"class.blink::ActiveScriptWrappable.195" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::mojom::blink::IDBDatabaseCallbacks" = type { i32 (...)** }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::WebIDBDatabase"* }
%"class.blink::WebIDBDatabase" = type { i32 (...)** }
%"class.blink::HeapHashMap.202" = type { %"class.WTF::HashMap.205" }
%"class.WTF::HashMap.205" = type { %"class.WTF::HashTable.206" }
%"class.WTF::HashTable.206" = type <{ %"struct.WTF::KeyValuePair.208"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.208" = type opaque
%"class.mojo::PendingRemote.209" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.210" }
%"class.blink::Member.210" = type { %"class.blink::MemberBase.211" }
%"class.blink::MemberBase.211" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::IDBKey"* }
%"class.blink::IDBKey" = type { i32, %"class.WTF::Vector.138", %class.scoped_refptr.143, %"class.WTF::String", double, i64 }
%"class.WTF::Vector.138" = type { %"class.WTF::VectorBuffer.139" }
%"class.WTF::VectorBuffer.139" = type { %"class.WTF::VectorBufferBase.140" }
%"class.WTF::VectorBufferBase.140" = type { %"class.std::__1::unique_ptr.135"*, i32, i32 }
%class.scoped_refptr.143 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.144", i64, %"class.WTF::Vector.146", %"class.WTF::Vector.151" }
%"class.WTF::RefCounted.144" = type { %"class.base::RefCounted.145" }
%"class.base::RefCounted.145" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.146" = type { %"class.WTF::VectorBuffer.147" }
%"class.WTF::VectorBuffer.147" = type { %"class.WTF::VectorBufferBase.148" }
%"class.WTF::VectorBufferBase.148" = type { i8*, i32, i32 }
%"class.WTF::Vector.151" = type { %"class.WTF::VectorBuffer.152" }
%"class.WTF::VectorBuffer.152" = type { %"class.WTF::VectorBufferBase.153" }
%"class.WTF::VectorBufferBase.153" = type { %"class.std::__1::unique_ptr.154"*, i32, i32 }
%"class.std::__1::unique_ptr.154" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::IDBValue"* }
%"class.blink::IDBValue" = type { %class.scoped_refptr.143, %"class.WTF::Vector.165", %"class.WTF::Vector.170", %"class.std::__1::unique_ptr.135", %"class.blink::IDBKeyPath", %"class.v8::Isolate"*, i64 }
%"class.WTF::Vector.165" = type { %"class.WTF::VectorBuffer.166" }
%"class.WTF::VectorBuffer.166" = type { %"class.WTF::VectorBufferBase.167" }
%"class.WTF::VectorBufferBase.167" = type { %"class.blink::WebBlobInfo"*, i32, i32 }
%"class.blink::WebBlobInfo" = type opaque
%"class.WTF::Vector.170" = type { %"class.WTF::VectorBuffer.171" }
%"class.WTF::VectorBuffer.171" = type { %"class.WTF::VectorBufferBase.172" }
%"class.WTF::VectorBufferBase.172" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::Vector.178" = type { %"class.WTF::VectorBuffer.179" }
%"class.WTF::VectorBuffer.179" = type { %"class.WTF::VectorBufferBase.180" }
%"class.WTF::VectorBufferBase.180" = type { %"class.std::__1::unique_ptr.162"*, i32, i32 }
%"class.blink::IDBCursorWithValue" = type { %"class.blink::IDBCursor" }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.223", i32, [4 x i8], %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.365", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.371", %"class.std::__1::unique_ptr.377", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.389", %"class.std::__1::unique_ptr.395", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.402", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.288", %"class.std::__1::unique_ptr.295", %"class.std::__1::unique_ptr.295", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.339", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.259" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.259" = type { %"struct.std::__1::__atomic_base.260" }
%"struct.std::__1::__atomic_base.260" = type { %"struct.std::__1::__atomic_base.261" }
%"struct.std::__1::__atomic_base.261" = type { %"struct.std::__1::__cxx_atomic_impl.262" }
%"struct.std::__1::__cxx_atomic_impl.262" = type { %"struct.std::__1::__cxx_atomic_base_impl.263" }
%"struct.std::__1::__cxx_atomic_base_impl.263" = type { i64 }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::Worklist.270"* }
%"class.blink::Worklist.270" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.259" }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::Worklist.277"* }
%"class.blink::Worklist.277" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.259" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::Worklist.284"* }
%"class.blink::Worklist.284" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.259" }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::Worklist.291"* }
%"class.blink::Worklist.291" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.259" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::Worklist.298"* }
%"class.blink::Worklist.298" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.259" }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::Worklist.305"* }
%"class.blink::Worklist.305" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.259" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::Worklist.312"* }
%"class.blink::Worklist.312" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.259" }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.319", %"class.std::__1::__compressed_pair.326", %"class.std::__1::__compressed_pair.331", %"class.std::__1::__compressed_pair.333", [4 x i8] }>
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321", %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { i64 }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { float }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.342", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.351" }
%"class.WTF::Vector.351" = type { %"class.WTF::VectorBuffer.352" }
%"class.WTF::VectorBuffer.352" = type { %"class.WTF::VectorBufferBase.353" }
%"class.WTF::VectorBufferBase.353" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.365" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.368" }
%"class.WTF::VectorBuffer.368" = type { %"class.WTF::VectorBufferBase.369" }
%"class.WTF::VectorBufferBase.369" = type { %"struct.std::__1::pair.370"*, i32, i32 }
%"struct.std::__1::pair.370" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.383" }
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.270"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.277"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.284"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.291"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.298"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.406" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.401 }
%class.scoped_refptr.401 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.402" = type { %"struct.std::__1::__atomic_base.403" }
%"struct.std::__1::__atomic_base.403" = type { %"struct.std::__1::__cxx_atomic_impl.404" }
%"struct.std::__1::__cxx_atomic_impl.404" = type { %"struct.std::__1::__cxx_atomic_base_impl.405" }
%"struct.std::__1::__cxx_atomic_base_impl.405" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

$_ZN5blink10TraceTraitINS_9IDBCursorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11IDBDatabaseEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZN5blink6IDBAnyC1ENS0_4TypeE = hidden unnamed_addr alias void (%"class.blink::IDBAny"*, i32), void (%"class.blink::IDBAny"*, i32)* @_ZN5blink6IDBAnyC2ENS0_4TypeE
@_ZN5blink6IDBAnyD1Ev = hidden unnamed_addr alias void (%"class.blink::IDBAny"*), void (%"class.blink::IDBAny"*)* @_ZN5blink6IDBAnyD2Ev
@_ZN5blink6IDBAnyC1EPNS_9IDBCursorE = hidden unnamed_addr alias void (%"class.blink::IDBAny"*, %"class.blink::IDBCursor"*), void (%"class.blink::IDBAny"*, %"class.blink::IDBCursor"*)* @_ZN5blink6IDBAnyC2EPNS_9IDBCursorE
@_ZN5blink6IDBAnyC1EPNS_11IDBDatabaseE = hidden unnamed_addr alias void (%"class.blink::IDBAny"*, %"class.blink::IDBDatabase"*), void (%"class.blink::IDBAny"*, %"class.blink::IDBDatabase"*)* @_ZN5blink6IDBAnyC2EPNS_11IDBDatabaseE
@_ZN5blink6IDBAnyC1EN3WTF6VectorINSt3__110unique_ptrINS_8IDBValueENS3_14default_deleteIS5_EEEELj0ENS1_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::IDBAny"*, %"class.WTF::Vector.178"*), void (%"class.blink::IDBAny"*, %"class.WTF::Vector.178"*)* @_ZN5blink6IDBAnyC2EN3WTF6VectorINSt3__110unique_ptrINS_8IDBValueENS3_14default_deleteIS5_EEEELj0ENS1_18PartitionAllocatorEEE
@_ZN5blink6IDBAnyC1ENSt3__110unique_ptrINS_8IDBValueENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.blink::IDBAny"*, %"class.blink::IDBValue"*), void (%"class.blink::IDBAny"*, %"class.blink::IDBValue"*)* @_ZN5blink6IDBAnyC2ENSt3__110unique_ptrINS_8IDBValueENS1_14default_deleteIS3_EEEE
@_ZN5blink6IDBAnyC1ENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.blink::IDBAny"*, %"class.blink::IDBKey"*), void (%"class.blink::IDBAny"*, %"class.blink::IDBKey"*)* @_ZN5blink6IDBAnyC2ENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEE
@_ZN5blink6IDBAnyC1El = hidden unnamed_addr alias void (%"class.blink::IDBAny"*, i64), void (%"class.blink::IDBAny"*, i64)* @_ZN5blink6IDBAnyC2El

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBAnyC2ENS0_4TypeE(%"class.blink::IDBAny"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.blink::IDBCursor"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBAnyD2Ev(%"class.blink::IDBAny"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.WTF::Vector.178", %"class.WTF::Vector.178"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.162"*, %"class.std::__1::unique_ptr.162"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.162"* %4, null
  br i1 %5, label %29, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.162"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %27, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %4, i64 %12
  br label %14

14:                                               ; preds = %21, %11
  %15 = phi %"class.std::__1::unique_ptr.162"* [ %22, %21 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::IDBValue"*, %"class.blink::IDBValue"** %16, align 8
  store %"class.blink::IDBValue"* null, %"class.blink::IDBValue"** %16, align 8
  %18 = icmp eq %"class.blink::IDBValue"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  tail call void @_ZN5blink8IDBValueD1Ev(%"class.blink::IDBValue"* nonnull %17) #7
  %20 = bitcast %"class.blink::IDBValue"* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #8
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %15, i64 1
  %23 = icmp eq %"class.std::__1::unique_ptr.162"* %22, %13
  br i1 %23, label %24, label %14

24:                                               ; preds = %21
  store i32 0, i32* %8, align 4
  %25 = bitcast %"class.WTF::Vector.178"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #7
  store %"class.std::__1::unique_ptr.162"* null, %"class.std::__1::unique_ptr.162"** %3, align 8
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %31 = load %"class.blink::IDBValue"*, %"class.blink::IDBValue"** %30, align 8
  store %"class.blink::IDBValue"* null, %"class.blink::IDBValue"** %30, align 8
  %32 = icmp eq %"class.blink::IDBValue"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  tail call void @_ZN5blink8IDBValueD1Ev(%"class.blink::IDBValue"* nonnull %31) #7
  %34 = bitcast %"class.blink::IDBValue"* %31 to i8*
  tail call void @_ZdlPv(i8* %34) #8
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %36, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %36, align 8
  %38 = icmp eq %"class.blink::IDBKey"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %37) #7
  %40 = bitcast %"class.blink::IDBKey"* %37 to i8*
  tail call void @free(i8* %40) #7
  br label %41

41:                                               ; preds = %35, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBAny22ContextWillBeDestroyedEv(%"class.blink::IDBAny"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::IDBCursor"*, %"class.blink::IDBCursor"** %2, align 8
  %4 = icmp eq %"class.blink::IDBCursor"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.blink::WebIDBCursor"*, %"class.blink::WebIDBCursor"** %6, align 8
  store %"class.blink::WebIDBCursor"* null, %"class.blink::WebIDBCursor"** %6, align 8
  %8 = icmp eq %"class.blink::WebIDBCursor"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::WebIDBCursor"* %7 to void (%"class.blink::WebIDBCursor"*)***
  %11 = load void (%"class.blink::WebIDBCursor"*)**, void (%"class.blink::WebIDBCursor"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::WebIDBCursor"*)*, void (%"class.blink::WebIDBCursor"*)** %11, i64 1
  %13 = load void (%"class.blink::WebIDBCursor"*)*, void (%"class.blink::WebIDBCursor"*)** %12, align 8
  tail call void %13(%"class.blink::WebIDBCursor"* nonnull %7) #7
  br label %14

14:                                               ; preds = %1, %9, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::IDBCursor"* @_ZNK5blink6IDBAny9IdbCursorEv(%"class.blink::IDBAny"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::IDBCursor"*, %"class.blink::IDBCursor"** %2, align 8
  ret %"class.blink::IDBCursor"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::IDBCursorWithValue"* @_ZNK5blink6IDBAny18IdbCursorWithValueEv(%"class.blink::IDBAny"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = bitcast %"class.blink::IDBCursor"** %2 to %"class.blink::IDBCursorWithValue"**
  %4 = load %"class.blink::IDBCursorWithValue"*, %"class.blink::IDBCursorWithValue"** %3, align 8
  ret %"class.blink::IDBCursorWithValue"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::IDBDatabase"* @_ZNK5blink6IDBAny11IdbDatabaseEv(%"class.blink::IDBAny"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::IDBDatabase"*, %"class.blink::IDBDatabase"** %2, align 8
  ret %"class.blink::IDBDatabase"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::IDBKey"* @_ZNK5blink6IDBAny3KeyEv(%"class.blink::IDBAny"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %2, align 8
  ret %"class.blink::IDBKey"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::IDBValue"* @_ZNK5blink6IDBAny5ValueEv(%"class.blink::IDBAny"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.blink::IDBValue"*, %"class.blink::IDBValue"** %2, align 8
  ret %"class.blink::IDBValue"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector.178"* @_ZNK5blink6IDBAny6ValuesEv(%"class.blink::IDBAny"* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 5
  ret %"class.WTF::Vector.178"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink6IDBAny7IntegerEv(%"class.blink::IDBAny"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 6
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBAnyC2EPNS_9IDBCursorE(%"class.blink::IDBAny"* nocapture, %"class.blink::IDBCursor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::IDBCursor"* %1, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.blink::IDBCursor"* %1 to i1 (%"class.blink::IDBCursor"*)***
  %7 = load i1 (%"class.blink::IDBCursor"*)**, i1 (%"class.blink::IDBCursor"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::IDBCursor"*)*, i1 (%"class.blink::IDBCursor"*)** %7, i64 10
  %9 = load i1 (%"class.blink::IDBCursor"*)*, i1 (%"class.blink::IDBCursor"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::IDBCursor"* nonnull %1) #7
  %11 = select i1 %10, i32 3, i32 2
  br label %12

12:                                               ; preds = %5, %2
  %13 = phi i32 [ 2, %2 ], [ %11, %5 ]
  store i32 %13, i32* %3, align 8
  %14 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::IDBCursor"* %1, %"class.blink::IDBCursor"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.blink::IDBDatabase"** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBAnyC2EPNS_11IDBDatabaseE(%"class.blink::IDBAny"* nocapture, %"class.blink::IDBDatabase"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 0
  store i32 4, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::IDBCursor"* null, %"class.blink::IDBCursor"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::IDBDatabase"* %1, %"class.blink::IDBDatabase"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 3
  %7 = bitcast %"class.std::__1::unique_ptr.135"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBAnyC2EN3WTF6VectorINSt3__110unique_ptrINS_8IDBValueENS3_14default_deleteIS5_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::IDBAny"* nocapture, %"class.WTF::Vector.178"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 0
  store i32 8, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %8 = bitcast %"class.WTF::Vector.178"* %1 to i64*
  %9 = bitcast %"class.blink::IDBCursor"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false)
  %10 = load i64, i64* %8, align 8
  %11 = bitcast %"class.WTF::Vector.178"* %5 to i64*
  store atomic i64 0, i64* %8 monotonic, align 8
  store atomic i64 %10, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.178", %"class.WTF::Vector.178"* %1, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %6, align 4
  %14 = load i32, i32* %12, align 4
  store i32 %14, i32* %6, align 4
  store i32 %13, i32* %12, align 4
  %15 = getelementptr inbounds %"class.WTF::Vector.178", %"class.WTF::Vector.178"* %1, i64 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %7, align 4
  %17 = load i32, i32* %15, align 4
  store i32 %17, i32* %7, align 4
  store i32 %16, i32* %15, align 4
  %18 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 6
  store i64 0, i64* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBAnyC2ENSt3__110unique_ptrINS_8IDBValueENS1_14default_deleteIS3_EEEE(%"class.blink::IDBAny"* nocapture, %"class.blink::IDBValue"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::IDBValue"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 0
  store i32 7, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 4
  %7 = bitcast %"class.std::__1::unique_ptr.162"* %6 to i64*
  %8 = bitcast %"class.blink::IDBCursor"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false)
  store i64 %3, i64* %7, align 8
  %9 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 5
  %10 = bitcast %"class.WTF::Vector.178"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBAnyC2ENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEE(%"class.blink::IDBAny"* nocapture, %"class.blink::IDBKey"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::IDBKey"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 0
  store i32 6, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 3
  %7 = bitcast %"class.std::__1::unique_ptr.135"* %6 to i64*
  %8 = bitcast %"class.blink::IDBCursor"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  store i64 %3, i64* %7, align 8
  %9 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 4
  %10 = bitcast %"class.std::__1::unique_ptr.162"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBAnyC2El(%"class.blink::IDBAny"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 0
  store i32 5, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 6
  %6 = bitcast %"class.blink::IDBCursor"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false)
  store i64 %1, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink6IDBAny5TraceEPNS_7VisitorE(%"class.blink::IDBAny"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9IDBCursorEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.35"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11IDBDatabaseEE5TraceEPNS_7VisitorEPKv) #7
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink8IDBValueD1Ev(%"class.blink::IDBValue"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9IDBCursorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDBCursor"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDBCursor"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDBCursor"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDBCursor"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDBCursor"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDBCursor"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::IDBCursor"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDBCursor"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDBCursor"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11IDBDatabaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDBDatabase"*
  tail call void @_ZNK5blink11IDBDatabase5TraceEPNS_7VisitorE(%"class.blink::IDBDatabase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink11IDBDatabase5TraceEPNS_7VisitorE(%"class.blink::IDBDatabase"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
