; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_log_agent.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_log_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.509", i32, [4 x i8], %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.651", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.656", %"class.std::__1::unique_ptr.662", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.674", %"class.std::__1::unique_ptr.680", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.687", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.512", %"class.std::__1::unique_ptr.518", %"class.std::__1::unique_ptr.524", %"class.std::__1::unique_ptr.530", %"class.std::__1::unique_ptr.536", %"class.std::__1::unique_ptr.542", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.560", %"class.std::__1::unique_ptr.560", %"class.std::__1::unique_ptr.567", %"class.std::__1::unique_ptr.574", %"class.std::__1::unique_ptr.581", %"class.std::__1::unique_ptr.581", %"class.std::__1::unique_ptr.588", %"class.std::__1::unique_ptr.595", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.625", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.545" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.545" = type { %"struct.std::__1::__atomic_base.546" }
%"struct.std::__1::__atomic_base.546" = type { %"struct.std::__1::__atomic_base.547" }
%"struct.std::__1::__atomic_base.547" = type { %"struct.std::__1::__cxx_atomic_impl.548" }
%"struct.std::__1::__cxx_atomic_impl.548" = type { %"struct.std::__1::__cxx_atomic_base_impl.549" }
%"struct.std::__1::__cxx_atomic_base_impl.549" = type { i64 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::Worklist.556"* }
%"class.blink::Worklist.556" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.545" }
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.blink::Worklist.563"* }
%"class.blink::Worklist.563" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.545" }
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.blink::Worklist.570"* }
%"class.blink::Worklist.570" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.545" }
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.blink::Worklist.577"* }
%"class.blink::Worklist.577" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.545" }
%"class.std::__1::unique_ptr.581" = type { %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"class.blink::Worklist.584"* }
%"class.blink::Worklist.584" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.545" }
%"class.std::__1::unique_ptr.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"class.blink::Worklist.591"* }
%"class.blink::Worklist.591" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.545" }
%"class.std::__1::unique_ptr.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"class.blink::Worklist.598"* }
%"class.blink::Worklist.598" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.545" }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.605", %"class.std::__1::__compressed_pair.612", %"class.std::__1::__compressed_pair.617", %"class.std::__1::__compressed_pair.619", [4 x i8] }>
%"class.std::__1::unique_ptr.605" = type { %"class.std::__1::__compressed_pair.606" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.607", %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.607" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { i64 }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { float }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.628", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.637" }
%"class.WTF::Vector.637" = type { %"class.WTF::VectorBuffer.638" }
%"class.WTF::VectorBuffer.638" = type { %"class.WTF::VectorBufferBase.639" }
%"class.WTF::VectorBufferBase.639" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.651" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.654" }
%"class.WTF::VectorBuffer.654" = type { %"class.WTF::VectorBufferBase.655" }
%"class.WTF::VectorBufferBase.655" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.656" = type { %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.668" }
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.556"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.563"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.570"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.577"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.584"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.920" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.686 }
%class.scoped_refptr.686 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.687" = type { %"struct.std::__1::__atomic_base.688" }
%"struct.std::__1::__atomic_base.688" = type { %"struct.std::__1::__cxx_atomic_impl.689" }
%"struct.std::__1::__cxx_atomic_impl.689" = type { %"struct.std::__1::__cxx_atomic_base_impl.690" }
%"struct.std::__1::__cxx_atomic_base_impl.690" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.471" }
%"struct.std::__1::atomic.471" = type { %"struct.std::__1::__atomic_base.472" }
%"struct.std::__1::__atomic_base.472" = type { %"struct.std::__1::__atomic_base.473" }
%"struct.std::__1::__atomic_base.473" = type { %"struct.std::__1::__cxx_atomic_impl.474" }
%"struct.std::__1::__cxx_atomic_impl.474" = type { %"struct.std::__1::__cxx_atomic_base_impl.475" }
%"struct.std::__1::__cxx_atomic_base_impl.475" = type { i32 }
%"class.blink::InspectorLogAgent" = type { %"class.blink::InspectorBaseAgent", %"class.blink::PerformanceMonitor::Client", %"class.blink::Member.233", %"class.blink::Member.264", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::MapField" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Log::Backend", %"class.blink::Member", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.227" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::Log::Backend" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.7", %"class.blink::HeapListHashSet.18", %"class.blink::HeapListHashSet.29", %"class.blink::HeapListHashSet.40", %"class.blink::HeapListHashSet.51", %"class.blink::HeapListHashSet.62", %"class.blink::HeapListHashSet.73", %"class.blink::HeapListHashSet.84", %"class.blink::HeapListHashSet.95", %"class.blink::HeapListHashSet.106", %"class.blink::HeapListHashSet.117", %"class.blink::HeapListHashSet.128", %"class.blink::HeapListHashSet.139", %"class.blink::HeapListHashSet.150", %"class.blink::HeapListHashSet.161", %"class.blink::HeapListHashSet.172", %"class.blink::HeapListHashSet.183", %"class.blink::HeapListHashSet.194", %"class.blink::HeapListHashSet.205" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable", %"class.blink::Member.5", %"class.blink::Member.5", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable" = type <{ %"class.blink::Member.5"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.947", %"class.blink::Member.5", %"class.blink::Member.5" }
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.7" = type { %"class.WTF::ListHashSet.base.17", [7 x i8] }
%"class.WTF::ListHashSet.base.17" = type <{ %"class.WTF::HashTable.12", %"class.blink::Member.14", %"class.blink::Member.14", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.12" = type <{ %"class.blink::Member.14"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::HeapListHashSetNode.16"* }
%"class.blink::HeapListHashSetNode.16" = type { %"class.blink::Member.943", %"class.blink::Member.14", %"class.blink::Member.14" }
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.18" = type { %"class.WTF::ListHashSet.base.28", [7 x i8] }
%"class.WTF::ListHashSet.base.28" = type <{ %"class.WTF::HashTable.23", %"class.blink::Member.25", %"class.blink::Member.25", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.23" = type <{ %"class.blink::Member.25"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HeapListHashSetNode.27"* }
%"class.blink::HeapListHashSetNode.27" = type { %"class.blink::Member.939", %"class.blink::Member.25", %"class.blink::Member.25" }
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.29" = type { %"class.WTF::ListHashSet.base.39", [7 x i8] }
%"class.WTF::ListHashSet.base.39" = type <{ %"class.WTF::HashTable.34", %"class.blink::Member.36", %"class.blink::Member.36", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.34" = type <{ %"class.blink::Member.36"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::HeapListHashSetNode.38"* }
%"class.blink::HeapListHashSetNode.38" = type { %"class.blink::Member.935", %"class.blink::Member.36", %"class.blink::Member.36" }
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.40" = type { %"class.WTF::ListHashSet.base.50", [7 x i8] }
%"class.WTF::ListHashSet.base.50" = type <{ %"class.WTF::HashTable.45", %"class.blink::Member.47", %"class.blink::Member.47", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.45" = type <{ %"class.blink::Member.47"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::HeapListHashSetNode.49"* }
%"class.blink::HeapListHashSetNode.49" = type { %"class.blink::Member.931", %"class.blink::Member.47", %"class.blink::Member.47" }
%"class.blink::Member.931" = type { %"class.blink::MemberBase.932" }
%"class.blink::MemberBase.932" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.51" = type { %"class.WTF::ListHashSet.base.61", [7 x i8] }
%"class.WTF::ListHashSet.base.61" = type <{ %"class.WTF::HashTable.56", %"class.blink::Member.58", %"class.blink::Member.58", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.56" = type <{ %"class.blink::Member.58"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::HeapListHashSetNode.60"* }
%"class.blink::HeapListHashSetNode.60" = type { %"class.blink::Member.927", %"class.blink::Member.58", %"class.blink::Member.58" }
%"class.blink::Member.927" = type { %"class.blink::MemberBase.928" }
%"class.blink::MemberBase.928" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.62" = type { %"class.WTF::ListHashSet.base.72", [7 x i8] }
%"class.WTF::ListHashSet.base.72" = type <{ %"class.WTF::HashTable.67", %"class.blink::Member.69", %"class.blink::Member.69", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.67" = type <{ %"class.blink::Member.69"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::HeapListHashSetNode.71"* }
%"class.blink::HeapListHashSetNode.71" = type { %"class.blink::Member.334", %"class.blink::Member.69", %"class.blink::Member.69" }
%"class.blink::Member.334" = type { %"class.blink::MemberBase.335" }
%"class.blink::MemberBase.335" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type { %"class.blink::InspectorBaseAgent.336", %"class.v8::Isolate"*, %"class.blink::Member.343", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::HeapHashSet", %"class.blink::Member.350", %"class.blink::HeapVector", %"class.blink::HeapHashMap.359", %"class.blink::HeapHashMap.366", %"class.blink::HeapHashMap.373", %"class.WTF::HashSet.380", %"class.WTF::HashSet.380", %"class.WTF::HashMap.384", i32, %"class.blink::Member.389", %"class.blink::HeapHashMap.391", %"class.blink::Member.398", %"class.blink::Member.400", %"class.blink::Member.402", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent.336" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOM::Backend", %"class.blink::Member", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.337" }
%"class.blink::protocol::DOM::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.blink::protocol::DOM::Frontend"* }
%"class.blink::protocol::DOM::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::InspectedFrames"* }
%"class.blink::InspectedFrames" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.347" }
%"class.WTF::HashTable.347" = type <{ %"class.blink::Member.349"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.349" = type opaque
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::HeapHashMap.352"* }
%"class.blink::HeapHashMap.352" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.355" }
%"class.WTF::Vector.355" = type { %"class.WTF::VectorBuffer.356" }
%"class.WTF::VectorBuffer.356" = type { %"class.WTF::VectorBufferBase.357" }
%"class.WTF::VectorBufferBase.357" = type { %"class.blink::Member.350"*, i32, i32 }
%"class.blink::HeapHashMap.359" = type { %"class.WTF::HashMap.362" }
%"class.WTF::HashMap.362" = type { %"class.WTF::HashTable.363" }
%"class.WTF::HashTable.363" = type <{ %"struct.WTF::KeyValuePair.365"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.365" = type opaque
%"class.blink::HeapHashMap.366" = type { %"class.WTF::HashMap.369" }
%"class.WTF::HashMap.369" = type { %"class.WTF::HashTable.370" }
%"class.WTF::HashTable.370" = type <{ %"struct.WTF::KeyValuePair.372"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.372" = type opaque
%"class.blink::HeapHashMap.373" = type { %"class.WTF::HashMap.376" }
%"class.WTF::HashMap.376" = type { %"class.WTF::HashTable.377" }
%"class.WTF::HashTable.377" = type <{ %"struct.WTF::KeyValuePair.379"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.379" = type opaque
%"class.WTF::HashSet.380" = type { %"class.WTF::HashTable.381" }
%"class.WTF::HashTable.381" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.384" = type { %"class.WTF::HashTable.385" }
%"class.WTF::HashTable.385" = type <{ %"struct.WTF::KeyValuePair.388"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.388" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.467", %"class.WTF::Vector.467", i8, i32, %"class.blink::Member.478", %"class.blink::Member.269", %"class.blink::Member.480", %"class.blink::Member.482", %"class.blink::Member.484", %"class.blink::Member.486", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.494", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.500", %"class.blink::Member.502", %"class.blink::Member.457", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.505", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.433", %"class.blink::Member.431", %"class.blink::Member.703", %"class.blink::Member.431", %"class.blink::Member.431", %"class.blink::Member.431", %"class.blink::UserActionElementSet", %"class.blink::Member.712", double, double, i64, i64, %"class.blink::HeapHashSet.714", %"class.blink::HeapHashSet.721", i16, i8, %"class.blink::Member.728", %"class.blink::Member.730", %"class.blink::Member.732", %"class.blink::Member.734", %"class.blink::TextLinkColors", %"class.blink::Member.736", i8, [7 x i8], %"class.blink::HeapHashMap.738", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.431", %"class.WTF::Vector.745", %"class.blink::Member.750", %"class.blink::Member.752", i8, %"class.blink::Member.431", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.754", %"class.blink::HeapVector.756", %"class.std::__1::unique_ptr.764", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.770", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.783", %"class.WTF::Vector.785", i8, i8, %"class.std::__1::unique_ptr.790", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.433", %"class.blink::HeapVector.796", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.804", i8, i32, %"class.blink::Member.806", %"class.blink::Member.808", %"class.blink::Member.810", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.812", %"class.WTF::HashMap.814", %"class.blink::Member.819", %"class.blink::Member.821", %"class.blink::Member.823", %"class.blink::Member.825", %"class.blink::Member.389", %"class.blink::Member.389", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.827", i8, i32, %"class.blink::Member.834", %"class.blink::Member.836", i32, %"class.blink::Member.838", %"class.blink::Member.840", %"class.blink::Member.842", %"class.std::__1::unique_ptr.844", i64, %"class.std::__1::unique_ptr.850", i32, i32, %"class.blink::Member.856", %"class.blink::Member.858", %"class.blink::Member.860", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.862", %"class.WTF::Vector.864", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.869", %"class.blink::Member.876", %"class.std::__1::unique_ptr.878", %"class.blink::Member.884", i8, i8, %"class.WTF::String", %"class.blink::Member.886", i8, [7 x i8], %"class.blink::HeapHashMap.888", %"class.blink::HeapObserverSet", %"class.blink::Member.902", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.904", i32, i8, i8, %"class.blink::WeakMember.906", %"class.blink::Member.907" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.406", %"class.blink::Member.406" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.406", %"class.blink::Member.408", %"class.blink::Member.406", %"class.blink::Member.406", %"class.blink::Member.410" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.414", %"class.blink::Member.389", %"class.blink::Member.408", %"class.blink::Member.416", %"class.blink::Member.416", %"class.blink::Member.440", %"class.blink::Member.442", %"class.blink::Member.444", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.449", %"class.blink::HeapVector.451" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.420" }
%"class.blink::HeapHashMap.420" = type { %"class.WTF::HashMap.423" }
%"class.WTF::HashMap.423" = type { %"class.WTF::HashTable.424" }
%"class.WTF::HashTable.424" = type <{ %"struct.WTF::KeyValuePair.426"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.426" = type { %"class.WTF::AtomicString", %"class.blink::Member.427" }
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.431", i32, %"class.blink::HeapVector.433" }
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.446" }
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::HeapHashMap.448"* }
%"class.blink::HeapHashMap.448" = type opaque
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.451" = type { %"class.WTF::Vector.454" }
%"class.WTF::Vector.454" = type { %"class.WTF::VectorBuffer.455" }
%"class.WTF::VectorBuffer.455" = type { %"class.WTF::VectorBufferBase.456" }
%"class.WTF::VectorBufferBase.456" = type { %"class.blink::Member.457"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.460" }
%"class.blink::HeapHashMap.460" = type { %"class.WTF::HashMap.463" }
%"class.WTF::HashMap.463" = type { %"class.WTF::HashTable.464" }
%"class.WTF::HashTable.464" = type <{ %"struct.WTF::KeyValuePair.466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.466" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.470 }
%class.scoped_refptr.470 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.471" }
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.269" = type { %"class.blink::MemberBase.270" }
%"class.blink::MemberBase.270" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.488" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.blink::KURL"* }
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.504 }
%class.scoped_refptr.504 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.505" = type { %"class.WTF::VectorBuffer.506" }
%"class.WTF::VectorBuffer.506" = type { %"class.WTF::VectorBufferBase.507" }
%"class.WTF::VectorBufferBase.507" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.508 }
%class.scoped_refptr.508 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.703" = type { %"class.blink::MemberBase.704" }
%"class.blink::MemberBase.704" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.705" }
%"class.blink::HeapHashMap.705" = type { %"class.WTF::HashMap.708" }
%"class.WTF::HashMap.708" = type { %"class.WTF::HashTable.709" }
%"class.WTF::HashTable.709" = type <{ %"struct.WTF::KeyValuePair.711"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.711" = type opaque
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.714" = type { %"class.WTF::HashSet.717" }
%"class.WTF::HashSet.717" = type { %"class.WTF::HashTable.718" }
%"class.WTF::HashTable.718" = type <{ %"class.blink::WeakMember.720"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.720" = type opaque
%"class.blink::HeapHashSet.721" = type { %"class.WTF::HashSet.724" }
%"class.WTF::HashSet.724" = type { %"class.WTF::HashTable.725" }
%"class.WTF::HashTable.725" = type <{ %"class.blink::WeakMember.727"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.727" = type opaque
%"class.blink::Member.728" = type { %"class.blink::MemberBase.729" }
%"class.blink::MemberBase.729" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.730" = type { %"class.blink::MemberBase.731" }
%"class.blink::MemberBase.731" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.736" = type { %"class.blink::MemberBase.737" }
%"class.blink::MemberBase.737" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.738" = type { %"class.WTF::HashMap.741" }
%"class.WTF::HashMap.741" = type { %"class.WTF::HashTable.742" }
%"class.WTF::HashTable.742" = type <{ %"struct.WTF::KeyValuePair.744"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.744" = type opaque
%"class.WTF::Vector.745" = type { %"class.WTF::VectorBuffer.746" }
%"class.WTF::VectorBuffer.746" = type { %"class.WTF::VectorBufferBase.747" }
%"class.WTF::VectorBufferBase.747" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.752" = type { %"class.blink::MemberBase.753" }
%"class.blink::MemberBase.753" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.756" = type { %"class.WTF::Vector.759" }
%"class.WTF::Vector.759" = type { %"class.WTF::VectorBuffer.760" }
%"class.WTF::VectorBuffer.760" = type { %"class.WTF::VectorBufferBase.761" }
%"class.WTF::VectorBufferBase.761" = type { %"class.blink::Member.762"*, i32, i32 }
%"class.blink::Member.762" = type opaque
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.770" = type { %"class.WTF::HashSet.773" }
%"class.WTF::HashSet.773" = type { %"class.WTF::HashTable.774" }
%"class.WTF::HashTable.774" = type <{ %"class.blink::WeakMember.776"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.776" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.777", i32, [4 x i8] }>
%"class.WTF::Vector.777" = type { %"class.WTF::VectorBuffer.778" }
%"class.WTF::VectorBuffer.778" = type { %"class.WTF::VectorBufferBase.779" }
%"class.WTF::VectorBufferBase.779" = type { %"struct.std::__1::pair.780"*, i32, i32 }
%"struct.std::__1::pair.780" = type opaque
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.785" = type { %"class.WTF::VectorBuffer.786" }
%"class.WTF::VectorBuffer.786" = type { %"class.WTF::VectorBufferBase.787" }
%"class.WTF::VectorBufferBase.787" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.790" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.433" = type { %"class.WTF::Vector.436" }
%"class.WTF::Vector.436" = type { %"class.WTF::VectorBuffer.437" }
%"class.WTF::VectorBuffer.437" = type { %"class.WTF::VectorBufferBase.438" }
%"class.WTF::VectorBufferBase.438" = type { %"class.blink::Member.431"*, i32, i32 }
%"class.blink::HeapVector.796" = type { %"class.WTF::Vector.799" }
%"class.WTF::Vector.799" = type { %"class.WTF::VectorBuffer.800" }
%"class.WTF::VectorBuffer.800" = type { %"class.WTF::VectorBufferBase.801" }
%"class.WTF::VectorBufferBase.801" = type { %"class.blink::Member.802"*, i32, i32 }
%"class.blink::Member.802" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.389" }
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.814" = type { %"class.WTF::HashTable.815" }
%"class.WTF::HashTable.815" = type <{ %"struct.WTF::KeyValuePair.818"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.818" = type opaque
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.702", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.693, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.693 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.694" }>
%"class.base::RefCountedThreadSafe.694" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.696", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.696" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.697" }
%"struct.std::__1::atomic.697" = type { %"struct.std::__1::__atomic_base.698" }
%"struct.std::__1::__atomic_base.698" = type { %"struct.std::__1::__atomic_base.699" }
%"struct.std::__1::__atomic_base.699" = type { %"struct.std::__1::__cxx_atomic_impl.700" }
%"struct.std::__1::__cxx_atomic_impl.700" = type { %"struct.std::__1::__cxx_atomic_base_impl.701" }
%"struct.std::__1::__cxx_atomic_base_impl.701" = type { i8 }
%"class.blink::WeakMember.702" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashSet.827" = type { %"class.WTF::HashSet.830" }
%"class.WTF::HashSet.830" = type { %"class.WTF::HashTable.831" }
%"class.WTF::HashTable.831" = type <{ %"class.blink::Member.833"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.833" = type opaque
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.842" = type { %"class.blink::MemberBase.843" }
%"class.blink::MemberBase.843" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.850" = type { %"class.std::__1::__compressed_pair.851" }
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"struct.std::__1::__compressed_pair_elem.852" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.858" = type { %"class.blink::MemberBase.859" }
%"class.blink::MemberBase.859" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.860" = type { %"class.blink::MemberBase.861" }
%"class.blink::MemberBase.861" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.864" = type { %"class.WTF::VectorBuffer.865" }
%"class.WTF::VectorBuffer.865" = type { %"class.WTF::VectorBufferBase.866" }
%"class.WTF::VectorBufferBase.866" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.869" = type { %"class.WTF::HashMap.872" }
%"class.WTF::HashMap.872" = type { %"class.WTF::HashTable.873" }
%"class.WTF::HashTable.873" = type <{ %"struct.WTF::KeyValuePair.875"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.875" = type opaque
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::Member.886" = type { %"class.blink::MemberBase.887" }
%"class.blink::MemberBase.887" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.888" = type { %"class.WTF::HashMap.891" }
%"class.WTF::HashMap.891" = type { %"class.WTF::HashTable.892" }
%"class.WTF::HashTable.892" = type <{ %"struct.WTF::KeyValuePair.894"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.894" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.895" }
%"class.blink::HeapHashSet.895" = type { %"class.WTF::HashSet.898" }
%"class.WTF::HashSet.898" = type { %"class.WTF::HashTable.899" }
%"class.WTF::HashTable.899" = type <{ %"class.blink::WeakMember.901"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.901" = type opaque
%"class.blink::Member.902" = type { %"class.blink::MemberBase.903" }
%"class.blink::MemberBase.903" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.904" = type { %"class.blink::MemberBase.905" }
%"class.blink::MemberBase.905" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.389", %"class.blink::HeapHashSet.911", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.918", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.911" = type { %"class.WTF::HashSet.914" }
%"class.WTF::HashSet.914" = type { %"class.WTF::HashTable.915" }
%"class.WTF::HashTable.915" = type <{ %"class.blink::Member.917"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.917" = type opaque
%"class.blink::HeapTaskRunnerTimer.918" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.919", { i64, i64 } }
%"class.blink::WeakMember.919" = type { %"class.blink::MemberBase.905" }
%"class.blink::WeakMember.906" = type { %"class.blink::MemberBase.407" }
%"class.blink::Member.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::HeapHashMap.391" = type { %"class.WTF::HashMap.394" }
%"class.WTF::HashMap.394" = type { %"class.WTF::HashTable.395" }
%"class.WTF::HashTable.395" = type <{ %"struct.WTF::KeyValuePair.397"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.397" = type opaque
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::InspectorRevalidateDOMTask"* }
%"class.blink::InspectorRevalidateDOMTask" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::InspectorHistory"* }
%"class.blink::InspectorHistory" = type opaque
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::DOMEditor"* }
%"class.blink::DOMEditor" = type opaque
%"class.blink::HeapListHashSet.73" = type { %"class.WTF::ListHashSet.base.83", [7 x i8] }
%"class.WTF::ListHashSet.base.83" = type <{ %"class.WTF::HashTable.78", %"class.blink::Member.80", %"class.blink::Member.80", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.78" = type <{ %"class.blink::Member.80"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::HeapListHashSetNode.82"* }
%"class.blink::HeapListHashSetNode.82" = type { %"class.blink::Member.330", %"class.blink::Member.80", %"class.blink::Member.80" }
%"class.blink::Member.330" = type { %"class.blink::MemberBase.331" }
%"class.blink::MemberBase.331" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.84" = type { %"class.WTF::ListHashSet.base.94", [7 x i8] }
%"class.WTF::ListHashSet.base.94" = type <{ %"class.WTF::HashTable.89", %"class.blink::Member.91", %"class.blink::Member.91", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.89" = type <{ %"class.blink::Member.91"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::HeapListHashSetNode.93"* }
%"class.blink::HeapListHashSetNode.93" = type { %"class.blink::Member.326", %"class.blink::Member.91", %"class.blink::Member.91" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.95" = type { %"class.WTF::ListHashSet.base.105", [7 x i8] }
%"class.WTF::ListHashSet.base.105" = type <{ %"class.WTF::HashTable.100", %"class.blink::Member.102", %"class.blink::Member.102", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.100" = type <{ %"class.blink::Member.102"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::HeapListHashSetNode.104"* }
%"class.blink::HeapListHashSetNode.104" = type { %"class.blink::Member.322", %"class.blink::Member.102", %"class.blink::Member.102" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.106" = type { %"class.WTF::ListHashSet.base.116", [7 x i8] }
%"class.WTF::ListHashSet.base.116" = type <{ %"class.WTF::HashTable.111", %"class.blink::Member.113", %"class.blink::Member.113", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.111" = type <{ %"class.blink::Member.113"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::HeapListHashSetNode.115"* }
%"class.blink::HeapListHashSetNode.115" = type { %"class.blink::Member.318", %"class.blink::Member.113", %"class.blink::Member.113" }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::HeapListHashSet.117" = type { %"class.WTF::ListHashSet.base.127", [7 x i8] }
%"class.WTF::ListHashSet.base.127" = type <{ %"class.WTF::HashTable.122", %"class.blink::Member.124", %"class.blink::Member.124", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.122" = type <{ %"class.blink::Member.124"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::HeapListHashSetNode.126"* }
%"class.blink::HeapListHashSetNode.126" = type { %"class.blink::Member.314", %"class.blink::Member.124", %"class.blink::Member.124" }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.128" = type { %"class.WTF::ListHashSet.base.138", [7 x i8] }
%"class.WTF::ListHashSet.base.138" = type <{ %"class.WTF::HashTable.133", %"class.blink::Member.135", %"class.blink::Member.135", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.133" = type <{ %"class.blink::Member.135"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::HeapListHashSetNode.137"* }
%"class.blink::HeapListHashSetNode.137" = type { %"class.blink::Member.310", %"class.blink::Member.135", %"class.blink::Member.135" }
%"class.blink::Member.310" = type { %"class.blink::MemberBase.311" }
%"class.blink::MemberBase.311" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::HeapListHashSet.139" = type { %"class.WTF::ListHashSet.base.149", [7 x i8] }
%"class.WTF::ListHashSet.base.149" = type <{ %"class.WTF::HashTable.144", %"class.blink::Member.146", %"class.blink::Member.146", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.144" = type <{ %"class.blink::Member.146"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::HeapListHashSetNode.148"* }
%"class.blink::HeapListHashSetNode.148" = type { %"class.blink::Member.306", %"class.blink::Member.146", %"class.blink::Member.146" }
%"class.blink::Member.306" = type { %"class.blink::MemberBase.307" }
%"class.blink::MemberBase.307" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.150" = type { %"class.WTF::ListHashSet.base.160", [7 x i8] }
%"class.WTF::ListHashSet.base.160" = type <{ %"class.WTF::HashTable.155", %"class.blink::Member.157", %"class.blink::Member.157", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.155" = type <{ %"class.blink::Member.157"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::HeapListHashSetNode.159"* }
%"class.blink::HeapListHashSetNode.159" = type { %"class.blink::Member.302", %"class.blink::Member.157", %"class.blink::Member.157" }
%"class.blink::Member.302" = type { %"class.blink::MemberBase.303" }
%"class.blink::MemberBase.303" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.161" = type { %"class.WTF::ListHashSet.base.171", [7 x i8] }
%"class.WTF::ListHashSet.base.171" = type <{ %"class.WTF::HashTable.166", %"class.blink::Member.168", %"class.blink::Member.168", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.166" = type <{ %"class.blink::Member.168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::HeapListHashSetNode.170"* }
%"class.blink::HeapListHashSetNode.170" = type { %"class.blink::Member.298", %"class.blink::Member.168", %"class.blink::Member.168" }
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.172" = type { %"class.WTF::ListHashSet.base.182", [7 x i8] }
%"class.WTF::ListHashSet.base.182" = type <{ %"class.WTF::HashTable.177", %"class.blink::Member.179", %"class.blink::Member.179", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.177" = type <{ %"class.blink::Member.179"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.179" = type { %"class.blink::MemberBase.180" }
%"class.blink::MemberBase.180" = type { %"class.blink::HeapListHashSetNode.181"* }
%"class.blink::HeapListHashSetNode.181" = type { %"class.blink::Member.294", %"class.blink::Member.179", %"class.blink::Member.179" }
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.183" = type { %"class.WTF::ListHashSet.base.193", [7 x i8] }
%"class.WTF::ListHashSet.base.193" = type <{ %"class.WTF::HashTable.188", %"class.blink::Member.190", %"class.blink::Member.190", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.188" = type <{ %"class.blink::Member.190"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::HeapListHashSetNode.192"* }
%"class.blink::HeapListHashSetNode.192" = type { %"class.blink::Member.290", %"class.blink::Member.190", %"class.blink::Member.190" }
%"class.blink::Member.290" = type { %"class.blink::MemberBase.291" }
%"class.blink::MemberBase.291" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.194" = type { %"class.WTF::ListHashSet.base.204", [7 x i8] }
%"class.WTF::ListHashSet.base.204" = type <{ %"class.WTF::HashTable.199", %"class.blink::Member.201", %"class.blink::Member.201", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.199" = type <{ %"class.blink::Member.201"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::HeapListHashSetNode.203"* }
%"class.blink::HeapListHashSetNode.203" = type { %"class.blink::Member.286", %"class.blink::Member.201", %"class.blink::Member.201" }
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::HeapListHashSet.205" = type { %"class.WTF::ListHashSet.base.215", [7 x i8] }
%"class.WTF::ListHashSet.base.215" = type <{ %"class.WTF::HashTable.210", %"class.blink::Member.212", %"class.blink::Member.212", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.210" = type <{ %"class.blink::Member.212"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::HeapListHashSetNode.214"* }
%"class.blink::HeapListHashSetNode.214" = type { %"class.blink::Member.264", %"class.blink::Member.212", %"class.blink::Member.212" }
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr", %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.217" }
%"class.WTF::HashTable.217" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.WTF::Vector.219" }
%"class.WTF::Vector.219" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.WTF::VectorBufferBase.221" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::protocol::Log::Frontend"* }
%"class.blink::protocol::Log::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.blink::PerformanceMonitor::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::InspectorAgentState::SimpleField" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.blink::InspectorAgentState::MapField" = type { %"class.blink::InspectorAgentState::Field", double, %"class.WTF::HashMap.277" }
%"class.WTF::HashMap.277" = type { %"class.WTF::HashTable.278" }
%"class.WTF::HashTable.278" = type <{ %"struct.WTF::KeyValuePair.281"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.281" = type { %"class.WTF::String", double }
%"class.blink::ConsoleMessageStorage" = type { i32, %"class.blink::HeapDeque" }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::Member<blink::ConsoleMessage>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::ConsoleMessage>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.240" }
%"class.WTF::VectorBuffer.240" = type { %"class.WTF::VectorBufferBase.241" }
%"class.WTF::VectorBufferBase.241" = type { %"class.blink::Member.242"*, i32, i32 }
%"class.blink::Member.242" = type { %"class.blink::MemberBase.243" }
%"class.blink::MemberBase.243" = type { %"class.blink::ConsoleMessage"* }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.246", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember", %"class.WTF::Vector.259" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.249", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.WTF::Vector.259" = type { %"class.WTF::VectorBuffer.260" }
%"class.WTF::VectorBuffer.260" = type { %"class.WTF::VectorBufferBase.261" }
%"class.WTF::VectorBufferBase.261" = type { i32*, i32, i32 }
%"class.blink::PerformanceMonitor" = type { %"class.base::sequence_manager::TaskTimeObserver", i8, %"class.base::TimeDelta", i32, i32, i32, i8*, [7 x %"class.base::TimeDelta"], %"class.blink::Member.268", %"class.blink::Member.269", %"class.v8::Isolate"*, i8, i8, [6 x i8], %"class.blink::HeapHashMap" }
%"class.base::sequence_manager::TaskTimeObserver" = type { i32 (...)** }
%"class.blink::Member.268" = type { %"class.blink::MemberBase.258" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.273" }
%"class.WTF::HashMap.273" = type { %"class.WTF::HashTable.274" }
%"class.WTF::HashTable.274" = type <{ %"struct.WTF::KeyValuePair.276"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.276" = type opaque
%"class.v8_inspector::V8InspectorSession" = type { i32 (...)** }
%"class.WTF::Vector.968" = type { %"class.WTF::VectorBuffer.969" }
%"class.WTF::VectorBuffer.969" = type { %"class.WTF::VectorBufferBase.970" }
%"class.WTF::VectorBufferBase.970" = type { %"class.WTF::String"*, i32, i32 }
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.blink::protocol::Log::ViolationSetting"* }
%"class.blink::protocol::Log::ViolationSetting" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", double }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.977 }
%union.anon.977 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.952" = type { %"class.std::__1::__vector_base.953" }
%"class.std::__1::__vector_base.953" = type { %"class.std::__1::unique_ptr.954"*, %"class.std::__1::unique_ptr.954"*, %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.std::__1::unique_ptr.954"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::protocol::Log::LogEntry" = type { %"class.crdtp::ProtocolObject.984", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", double, %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe.987", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.994" }
%"class.crdtp::ProtocolObject.984" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.987" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.988" }
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.v8_inspector::protocol::Runtime::API::StackTrace"* }
%"class.v8_inspector::protocol::Runtime::API::StackTrace" = type { %"class.v8_inspector::protocol::Exported" }
%"class.v8_inspector::protocol::Exported" = type { i32 (...)** }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.994" = type { %"class.std::__1::unique_ptr.995" }
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"class.std::__1::vector.998"* }
%"class.std::__1::vector.998" = type { %"class.std::__1::__vector_base.999" }
%"class.std::__1::__vector_base.999" = type { %"class.std::__1::unique_ptr.1000"*, %"class.std::__1::unique_ptr.1000"*, %"class.std::__1::__compressed_pair.1006" }
%"class.std::__1::unique_ptr.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* }
%"class.v8_inspector::protocol::Runtime::API::RemoteObject" = type { %"class.v8_inspector::protocol::Exported" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.1007" }
%"struct.std::__1::__compressed_pair_elem.1007" = type { %"class.std::__1::unique_ptr.1000"* }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.1069" }
%"class.WTF::StringTypeAdapter.1069" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::WebVector" = type { %"class.std::__1::vector.1070" }
%"class.std::__1::vector.1070" = type { %"class.std::__1::__vector_base.1071" }
%"class.std::__1::__vector_base.1071" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1072" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { i8* }
%"class.crdtp::UberDispatcher" = type { i32 (...)**, %"class.crdtp::FrontendChannel"*, %"class.std::__1::vector.1021", %"class.std::__1::vector.1029" }
%"class.std::__1::vector.1021" = type { %"class.std::__1::__vector_base.1022" }
%"class.std::__1::__vector_base.1022" = type { %"struct.std::__1::pair.1023"*, %"struct.std::__1::pair.1023"*, %"class.std::__1::__compressed_pair.1024" }
%"struct.std::__1::pair.1023" = type opaque
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"struct.std::__1::pair.1023"* }
%"class.std::__1::vector.1029" = type { %"class.std::__1::__vector_base.1030" }
%"class.std::__1::__vector_base.1030" = type { %"struct.std::__1::pair.1031"*, %"struct.std::__1::pair.1031"*, %"class.std::__1::__compressed_pair.1032" }
%"struct.std::__1::pair.1031" = type opaque
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"struct.std::__1::pair.1031"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink19InspectorAgentState8MapFieldIdED2Ev = comdat any

$_ZN5blink19InspectorAgentState5FieldD2Ev = comdat any

$_ZNK5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink19InspectorAgentState8MapFieldIdE4KeysEv = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIdE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIdE3SetERKN3WTF6StringEd = comdat any

$_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE = comdat any

$_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE7DisposeEv = comdat any

$_ZN5blink18PerformanceMonitor6Client14ReportLongTaskEN4base9TimeTicksES3_PNS_16ExecutionContextEb = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIdED0Ev = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIdE6DecodeEv = comdat any

$_ZN5blink19InspectorAgentState5FieldD0Ev = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RdEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEED2Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEED0Ev = comdat any

$_ZN5blink14InspectorAgent7RestoreEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE7disableEv = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEED1Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEED0Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE7disableEv = comdat any

$_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_ = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_ = comdat any

$_ZN5blink10TraceTraitINS_21ConsoleMessageStorageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_18PerformanceMonitorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3Log16ViolationSettingENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS_14default_deleteIS6_EEEENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJS9_EEEvDpOT_ = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIdE5ClearERKN3WTF6StringE = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RdEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZTVN5blink19InspectorAgentState8MapFieldIdEE = comdat any

$_ZTVN5blink19InspectorAgentState5FieldE = comdat any

$_ZTVN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEEE = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink17InspectorLogAgentE = hidden unnamed_addr constant { [17 x i8*], [9 x i8*], [6 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorLogAgent"*)* @_ZN5blink17InspectorLogAgentD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorLogAgent"*)* @_ZN5blink17InspectorLogAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorLogAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink17InspectorLogAgent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorLogAgent"*)* @_ZN5blink17InspectorLogAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*)* @_ZN5blink17InspectorLogAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*)* @_ZN5blink17InspectorLogAgent6enableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*)* @_ZN5blink17InspectorLogAgent5clearEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*, %"class.std::__1::vector.952"*)* @_ZN5blink17InspectorLogAgent21startViolationsReportENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3Log16ViolationSettingENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*)* @_ZN5blink17InspectorLogAgent20stopViolationsReportEv to i8*), i8* bitcast (void (%"class.blink::InspectorLogAgent"*, i64)* @_ZN5blink17InspectorLogAgent16ReportLongLayoutEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.blink::InspectorLogAgent"*, i64, %"class.WTF::String"*, i64, %"class.blink::SourceLocation"*)* @_ZN5blink17InspectorLogAgent22ReportGenericViolationENS_18PerformanceMonitor9ViolationERKN3WTF6StringEN4base9TimeDeltaEPNS_14SourceLocationE to i8*)], [9 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorLogAgent"*)* @_ZThn8_N5blink17InspectorLogAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorLogAgent"*)* @_ZThn8_N5blink17InspectorLogAgentD0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*)* @_ZThn8_N5blink17InspectorLogAgent5clearEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*)* @_ZThn8_N5blink17InspectorLogAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*)* @_ZThn8_N5blink17InspectorLogAgent6enableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*, %"class.std::__1::vector.952"*)* @_ZThn8_N5blink17InspectorLogAgent21startViolationsReportENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3Log16ViolationSettingENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*)* @_ZThn8_N5blink17InspectorLogAgent20stopViolationsReportEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -56 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorLogAgent"*, %"class.blink::Visitor"*)* @_ZThn56_NK5blink17InspectorLogAgent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::PerformanceMonitor::Client"*, i64, i64, %"class.blink::ExecutionContext"*, i1)* @_ZN5blink18PerformanceMonitor6Client14ReportLongTaskEN4base9TimeTicksES3_PNS_16ExecutionContextEb to i8*), i8* bitcast (void (%"class.blink::InspectorLogAgent"*, i64)* @_ZThn56_N5blink17InspectorLogAgent16ReportLongLayoutEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.blink::InspectorLogAgent"*, i64, %"class.WTF::String"*, i64, %"class.blink::SourceLocation"*)* @_ZThn56_N5blink17InspectorLogAgent22ReportGenericViolationENS_18PerformanceMonitor9ViolationERKN3WTF6StringEN4base9TimeDeltaEPNS_14SourceLocationE to i8*)] }, align 8
@.str = private unnamed_addr constant [8 x i8] c"console\00", align 1
@_ZN5blink8protocol3Log8LogEntry10SourceEnum5OtherE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log8LogEntry9LevelEnum7WarningE = external local_unnamed_addr global i8*, align 8
@.str.1 = private unnamed_addr constant [28 x i8] c" log entries are not shown.\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"Log is not enabled\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"Violations are not supported for this target\00", align 1
@.str.4 = private unnamed_addr constant [52 x i8] c"Forced reflow while executing JavaScript took %ldms\00", align 1
@_ZTVN5blink19InspectorAgentState8MapFieldIdEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIdED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIdED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIdE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIdE6DecodeEv to i8*)] }, comdat, align 8
@_ZTVN5blink19InspectorAgentState5FieldE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.5 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEdEEEEPKcv = private unnamed_addr constant [86 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, double>]\00", align 1
@_ZTVN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [9 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE7disableEv to i8*)], [9 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEED1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEED0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE7disableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink8protocol3Log16ViolationSettingE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3Log8LogEntryE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol3Log8LogEntry10SourceEnum3XmlE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log8LogEntry10SourceEnum10JavascriptE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log8LogEntry10SourceEnum7NetworkE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log8LogEntry10SourceEnum7StorageE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log8LogEntry10SourceEnum8AppcacheE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log8LogEntry10SourceEnum9RenderingE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log8LogEntry10SourceEnum8SecurityE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log8LogEntry10SourceEnum11DeprecationE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log8LogEntry10SourceEnum6WorkerE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log8LogEntry10SourceEnum9ViolationE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log8LogEntry10SourceEnum12InterventionE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log8LogEntry10SourceEnum14RecommendationE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log8LogEntry9LevelEnum7VerboseE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log8LogEntry9LevelEnum4InfoE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log8LogEntry9LevelEnum5ErrorE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log16ViolationSetting8NameEnum17DiscouragedAPIUseE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log16ViolationSetting8NameEnum8LongTaskE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log16ViolationSetting8NameEnum10LongLayoutE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log16ViolationSetting8NameEnum12BlockedEventE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log16ViolationSetting8NameEnum13BlockedParserE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log16ViolationSetting8NameEnum7HandlerE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3Log16ViolationSetting8NameEnum16RecurringHandlerE = external local_unnamed_addr global i8*, align 8
@_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv to i8*)] }, comdat, align 8
@_ZN5blink8protocol3Log8Metainfo10domainNameE = external constant [0 x i8], align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.13 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.17 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink17InspectorLogAgentC1EPNS_21ConsoleMessageStorageEPNS_18PerformanceMonitorEPN12v8_inspector18V8InspectorSessionE = hidden unnamed_addr alias void (%"class.blink::InspectorLogAgent"*, %"class.blink::ConsoleMessageStorage"*, %"class.blink::PerformanceMonitor"*, %"class.v8_inspector::V8InspectorSession"*), void (%"class.blink::InspectorLogAgent"*, %"class.blink::ConsoleMessageStorage"*, %"class.blink::PerformanceMonitor"*, %"class.v8_inspector::V8InspectorSession"*)* @_ZN5blink17InspectorLogAgentC2EPNS_21ConsoleMessageStorageEPNS_18PerformanceMonitorEPN12v8_inspector18V8InspectorSessionE
@_ZN5blink17InspectorLogAgentD1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorLogAgent"*), void (%"class.blink::InspectorLogAgent"*)* @_ZN5blink17InspectorLogAgentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorLogAgentC2EPNS_21ConsoleMessageStorageEPNS_18PerformanceMonitorEPN12v8_inspector18V8InspectorSessionE(%"class.blink::InspectorLogAgent"*, %"class.blink::ConsoleMessageStorage"*, %"class.blink::PerformanceMonitor"*, %"class.v8_inspector::V8InspectorSession"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.blink::InspectorLogAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [9 x i8*] }, { [11 x i8*], [9 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [9 x i8*] }, { [11 x i8*], [9 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CoreProbeSink"* null, %"class.blink::CoreProbeSink"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 0, i32 3
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3Log8Metainfo10domainNameE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3Log8Metainfo10domainNameE, i64 0, i64 0), i64 %10) #13
  call void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %5) #13
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #13
  br label %27

27:                                               ; preds = %4, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %28 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 0, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.227"* %28 to i64*
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %31 = bitcast %"class.blink::InspectorLogAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [9 x i8*], [6 x i8*] }, { [17 x i8*], [9 x i8*], [6 x i8*] }* @_ZTVN5blink17InspectorLogAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [9 x i8*], [6 x i8*] }, { [17 x i8*], [9 x i8*], [6 x i8*] }* @_ZTVN5blink17InspectorLogAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [9 x i8*], [6 x i8*] }, { [17 x i8*], [9 x i8*], [6 x i8*] }* @_ZTVN5blink17InspectorLogAgentE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::ConsoleMessageStorage"* %1, %"class.blink::ConsoleMessageStorage"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::PerformanceMonitor"* %2, %"class.blink::PerformanceMonitor"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 4
  store %"class.v8_inspector::V8InspectorSession"* %3, %"class.v8_inspector::V8InspectorSession"** %34, align 8
  %35 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 5
  %36 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %35, i64 0, i32 0
  %37 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %35, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %36) #13
  %39 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %40 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 5, i32 1
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 5, i32 2
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 6
  %43 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %42, i64 0, i32 0
  %44 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %42, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %43) #13
  %46 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %46, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %47 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 6, i32 1
  store double -1.000000e+00, double* %47, align 8
  %48 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 6, i32 2
  %49 = bitcast %"class.WTF::HashMap.277"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 20, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorLogAgentD2Ev(%"class.blink::InspectorLogAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InspectorLogAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [9 x i8*], [6 x i8*] }, { [17 x i8*], [9 x i8*], [6 x i8*] }* @_ZTVN5blink17InspectorLogAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [9 x i8*], [6 x i8*] }, { [17 x i8*], [9 x i8*], [6 x i8*] }* @_ZTVN5blink17InspectorLogAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [9 x i8*], [6 x i8*] }, { [17 x i8*], [9 x i8*], [6 x i8*] }* @_ZTVN5blink17InspectorLogAgentE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 6, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 6, i32 2, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.281"* %6, null
  br i1 %7, label %40, label %8, !prof !2

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 6, i32 2, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %38, label %12

12:                                               ; preds = %8
  %13 = zext i32 %10 to i64
  br label %14

14:                                               ; preds = %35, %12
  %15 = phi i64 [ 0, %12 ], [ %36, %35 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %6, i64 %15
  %17 = bitcast %"struct.WTF::KeyValuePair.281"* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast i8* %18 to %"class.WTF::StringImpl"*
  %20 = ptrtoint i8* %18 to i64
  switch i64 %20, label %21 [
    i64 -1, label %35
    i64 0, label %35
  ]

21:                                               ; preds = %14
  %22 = getelementptr inbounds i8, i8* %18, i64 8
  %23 = bitcast i8* %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = bitcast i8* %18 to i32*
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %21
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %21
  %32 = phi i32 [ %30, %29 ], [ %28, %21 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #13
  br label %35

35:                                               ; preds = %34, %31, %14, %14
  %36 = add nuw nsw i64 %15, 1
  %37 = icmp eq i64 %36, %13
  br i1 %37, label %38, label %14

38:                                               ; preds = %35, %8
  %39 = bitcast %"struct.WTF::KeyValuePair.281"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #13
  store %"struct.WTF::KeyValuePair.281"* null, %"struct.WTF::KeyValuePair.281"** %5, align 8
  br label %40

40:                                               ; preds = %38, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %41 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #13
  br label %57

57:                                               ; preds = %40, %53, %56
  %58 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 5, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #13
  br label %75

75:                                               ; preds = %57, %71, %74
  %76 = bitcast %"class.blink::InspectorLogAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [9 x i8*] }, { [11 x i8*], [9 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [9 x i8*] }, { [11 x i8*], [9 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %76, align 8
  %77 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %78 = load %"class.blink::protocol::Log::Frontend"*, %"class.blink::protocol::Log::Frontend"** %77, align 8
  store %"class.blink::protocol::Log::Frontend"* null, %"class.blink::protocol::Log::Frontend"** %77, align 8
  %79 = icmp eq %"class.blink::protocol::Log::Frontend"* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = bitcast %"class.blink::protocol::Log::Frontend"* %78 to i8*
  tail call void @_ZdlPv(i8* %81) #15
  br label %82

82:                                               ; preds = %80, %75
  %83 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %83, align 8
  %85 = icmp eq %"class.blink::InspectorAgentState::Field"** %84, null
  %86 = bitcast %"class.blink::InspectorAgentState::Field"** %84 to i8*
  br i1 %85, label %93, label %87, !prof !2

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %92, label %91, !prof !3

91:                                               ; preds = %87
  store i32 0, i32* %88, align 4
  br label %92

92:                                               ; preds = %91, %87
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %86) #13
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %83, align 8
  br label %93

93:                                               ; preds = %92, %82
  %94 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #13
  br label %110

110:                                              ; preds = %93, %106, %109
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIdED2Ev(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.281"* %4, null
  br i1 %5, label %38, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %4, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair.281"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %18 = ptrtoint i8* %16 to i64
  switch i64 %18, label %19 [
    i64 -1, label %33
    i64 0, label %33
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %16 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #13
  br label %33

33:                                               ; preds = %32, %29, %12, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %6
  %37 = bitcast %"struct.WTF::KeyValuePair.281"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #13
  store %"struct.WTF::KeyValuePair.281"* null, %"struct.WTF::KeyValuePair.281"** %3, align 8
  br label %38

38:                                               ; preds = %1, %36
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #13
  br label %55

55:                                               ; preds = %38, %51, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD2Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorLogAgentD1Ev(%"class.blink::InspectorLogAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 -1, i32 6, i32 2, i32 0, i32 3
  %3 = bitcast i32* %2 to %"class.blink::InspectorLogAgent"*
  tail call void @_ZN5blink17InspectorLogAgentD2Ev(%"class.blink::InspectorLogAgent"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorLogAgentD0Ev(%"class.blink::InspectorLogAgent"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17InspectorLogAgentD2Ev(%"class.blink::InspectorLogAgent"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorLogAgentD0Ev(%"class.blink::InspectorLogAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 -1, i32 6, i32 2, i32 0, i32 3
  %3 = bitcast i32* %2 to %"class.blink::InspectorLogAgent"*
  tail call void @_ZN5blink17InspectorLogAgentD2Ev(%"class.blink::InspectorLogAgent"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17InspectorLogAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorLogAgent"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.233"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ConsoleMessageStorageEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.264"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18PerformanceMonitorEE5TraceEPNS_7VisitorEPKv) #13
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 0, i32 2
  %26 = bitcast %"class.blink::Member"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #13
  br label %35

35:                                               ; preds = %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE5TraceEPNS_7VisitorE(%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_NK5blink17InspectorLogAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorLogAgent"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 -1, i32 6
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %3, i64 1, i32 0, i32 1
  %5 = bitcast %"class.WTF::String"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ConsoleMessageStorageEE5TraceEPNS_7VisitorEPKv) #13
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %3, i64 1, i32 0, i32 2
  %16 = bitcast %"class.blink::InspectorSessionState"** %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18PerformanceMonitorEE5TraceEPNS_7VisitorEPKv) #13
  br label %25

25:                                               ; preds = %19, %14
  %26 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 -1, i32 6, i32 0, i32 2
  %27 = bitcast %"class.blink::InspectorSessionState"** %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #13
  br label %36

36:                                               ; preds = %25, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorLogAgent7RestoreEv(%"class.blink::InspectorLogAgent"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.968", align 8
  %3 = alloca %"class.std::__1::unique_ptr.954", align 8
  %4 = alloca %"class.crdtp::DispatchResponse", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 5, i32 2
  %6 = load i8, i8* %5, align 1, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %169, label %8

8:                                                ; preds = %1
  tail call void @_ZN5blink17InspectorLogAgent11InnerEnableEv(%"class.blink::InspectorLogAgent"* %0)
  %9 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 6, i32 2, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %169, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 6
  %14 = tail call i8* @_Znwm(i64 24) #15
  %15 = bitcast i8* %14 to %"class.std::__1::vector.952"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #13
  %16 = bitcast %"class.WTF::Vector.968"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #13
  call void @_ZNK5blink19InspectorAgentState8MapFieldIdE4KeysEv(%"class.WTF::Vector.968"* nonnull sret %2, %"class.blink::InspectorAgentState::MapField"* %13)
  %17 = getelementptr inbounds %"class.WTF::Vector.968", %"class.WTF::Vector.968"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::String"*, %"class.WTF::String"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::Vector.968", %"class.WTF::Vector.968"* %2, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 %21
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %12
  %25 = bitcast %"class.std::__1::unique_ptr.954"* %3 to i8*
  %26 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 6, i32 2
  %27 = getelementptr inbounds %"class.WTF::HashMap.277", %"class.WTF::HashMap.277"* %26, i64 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::HashMap.277", %"class.WTF::HashMap.277"* %26, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 6, i32 2, i32 0, i32 1
  %30 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 6, i32 1
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %3, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.std::__1::unique_ptr.954"* %3 to i8**
  %33 = getelementptr inbounds i8, i8* %14, i64 8
  %34 = bitcast i8* %33 to %"class.std::__1::unique_ptr.954"**
  %35 = getelementptr inbounds i8, i8* %14, i64 16
  %36 = bitcast i8* %35 to %"class.std::__1::unique_ptr.954"**
  %37 = bitcast i8* %33 to i64*
  br label %89

38:                                               ; preds = %166
  %39 = load %"class.WTF::String"*, %"class.WTF::String"** %17, align 8
  br label %40

40:                                               ; preds = %38, %12
  %41 = phi %"class.WTF::String"* [ %39, %38 ], [ %18, %12 ]
  %42 = icmp eq %"class.WTF::String"* %41, null
  br i1 %42, label %76, label %43, !prof !2

43:                                               ; preds = %40
  %44 = bitcast %"class.WTF::String"* %41 to i8*
  %45 = load i32, i32* %19, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %74, label %47, !prof !3

47:                                               ; preds = %43
  %48 = zext i32 %45 to i64
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 %48
  br label %50

50:                                               ; preds = %68, %47
  %51 = phi %"class.WTF::String"* [ %69, %68 ], [ %41, %47 ]
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #13
  br label %68

68:                                               ; preds = %67, %64, %50
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %51, i64 1
  %70 = icmp eq %"class.WTF::String"* %69, %49
  br i1 %70, label %71, label %50

71:                                               ; preds = %68
  store i32 0, i32* %19, align 4
  %72 = bitcast %"class.WTF::Vector.968"* %2 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %71, %43
  %75 = phi i8* [ %73, %71 ], [ %44, %43 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %75) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %17, align 8
  br label %76

76:                                               ; preds = %40, %74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #13
  %77 = bitcast %"class.blink::InspectorLogAgent"* %0 to void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*, %"class.std::__1::vector.952"*)***
  %78 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*, %"class.std::__1::vector.952"*)**, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*, %"class.std::__1::vector.952"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*, %"class.std::__1::vector.952"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*, %"class.std::__1::vector.952"*)** %78, i64 11
  %80 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*, %"class.std::__1::vector.952"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*, %"class.std::__1::vector.952"*)** %79, align 8
  call void %80(%"class.crdtp::DispatchResponse"* nonnull sret %4, %"class.blink::InspectorLogAgent"* %0, %"class.std::__1::vector.952"* nonnull %15) #13
  %81 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %4, i64 0, i32 1
  %82 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %169

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %88) #15
  br label %169

89:                                               ; preds = %24, %166
  %90 = phi %"class.WTF::String"* [ %18, %24 ], [ %167, %166 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  %91 = call i8* @_Znwm(i64 24) #15
  %92 = bitcast i8* %91 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3Log16ViolationSettingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %93 = getelementptr inbounds i8, i8* %91, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 16, i1 false) #13
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %112, label %97

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %112

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i33
  %106 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %105, i33 1) #13
  %107 = extractvalue { i33, i1 } %106, 1
  %108 = extractvalue { i33, i1 } %106, 0
  %109 = icmp slt i33 %108, 0
  %110 = or i1 %107, %109
  br i1 %110, label %111, label %115, !prof !3

111:                                              ; preds = %102
  call void @llvm.trap() #13
  unreachable

112:                                              ; preds = %97, %89
  %113 = ptrtoint %"class.WTF::StringImpl"* %95 to i64
  %114 = bitcast i8* %93 to i64*
  store i64 %113, i64* %114, align 8
  br label %135

115:                                              ; preds = %102
  %116 = trunc i33 %108 to i32
  store i32 %116, i32* %103, align 4
  %117 = bitcast i8* %93 to %"class.WTF::StringImpl"**
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = ptrtoint %"class.WTF::StringImpl"* %95 to i64
  %120 = bitcast i8* %93 to i64*
  store i64 %119, i64* %120, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #13
  br label %135

135:                                              ; preds = %112, %115, %131, %134
  %136 = call { %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.278"* %27, %"class.WTF::String"* dereferenceable(8) %90) #13
  %137 = extractvalue { %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"* } %136, 0
  %138 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %28, align 8
  %139 = load i32, i32* %29, align 8
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %138, i64 %140
  %142 = icmp eq %"struct.WTF::KeyValuePair.281"* %137, %141
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %137, i64 0, i32 1
  %144 = select i1 %142, double* %30, double* %143
  %145 = bitcast double* %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds i8, i8* %91, i64 16
  %148 = bitcast i8* %147 to i64*
  store i64 %146, i64* %148, align 8
  store i8* %91, i8** %32, align 8
  %149 = load %"class.std::__1::unique_ptr.954"*, %"class.std::__1::unique_ptr.954"** %34, align 8
  %150 = load %"class.std::__1::unique_ptr.954"*, %"class.std::__1::unique_ptr.954"** %36, align 8
  %151 = icmp ult %"class.std::__1::unique_ptr.954"* %149, %150
  br i1 %151, label %152, label %157

152:                                              ; preds = %135
  %153 = ptrtoint i8* %91 to i64
  store %"class.blink::protocol::Log::ViolationSetting"* null, %"class.blink::protocol::Log::ViolationSetting"** %31, align 8
  %154 = bitcast %"class.std::__1::unique_ptr.954"* %149 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %149, i64 1
  %156 = ptrtoint %"class.std::__1::unique_ptr.954"* %155 to i64
  store i64 %156, i64* %37, align 8
  br label %158

157:                                              ; preds = %135
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3Log16ViolationSettingENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.952"* nonnull %15, %"class.std::__1::unique_ptr.954"* nonnull dereferenceable(8) %3) #13
  br label %158

158:                                              ; preds = %152, %157
  %159 = load %"class.blink::protocol::Log::ViolationSetting"*, %"class.blink::protocol::Log::ViolationSetting"** %31, align 8
  store %"class.blink::protocol::Log::ViolationSetting"* null, %"class.blink::protocol::Log::ViolationSetting"** %31, align 8
  %160 = icmp eq %"class.blink::protocol::Log::ViolationSetting"* %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %158
  %162 = bitcast %"class.blink::protocol::Log::ViolationSetting"* %159 to void (%"class.blink::protocol::Log::ViolationSetting"*)***
  %163 = load void (%"class.blink::protocol::Log::ViolationSetting"*)**, void (%"class.blink::protocol::Log::ViolationSetting"*)*** %162, align 8
  %164 = getelementptr inbounds void (%"class.blink::protocol::Log::ViolationSetting"*)*, void (%"class.blink::protocol::Log::ViolationSetting"*)** %163, i64 2
  %165 = load void (%"class.blink::protocol::Log::ViolationSetting"*)*, void (%"class.blink::protocol::Log::ViolationSetting"*)** %164, align 8
  call void %165(%"class.blink::protocol::Log::ViolationSetting"* nonnull %159) #13
  br label %166

166:                                              ; preds = %161, %158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  %167 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 1
  %168 = icmp eq %"class.WTF::String"* %167, %22
  br i1 %168, label %38, label %89

169:                                              ; preds = %1, %76, %86, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorLogAgent11InnerEnableEv(%"class.blink::InspectorLogAgent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %8, align 8
  tail call void @_ZN5blink13CoreProbeSink20AddInspectorLogAgentEPNS_17InspectorLogAgentE(%"class.blink::CoreProbeSink"* %9, %"class.blink::InspectorLogAgent"* %0) #13
  %10 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::ConsoleMessageStorage"*, %"class.blink::ConsoleMessageStorage"** %10, align 8
  %12 = tail call i32 @_ZNK5blink21ConsoleMessageStorage12ExpiredCountEv(%"class.blink::ConsoleMessageStorage"* %11) #13
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %326, label %14

14:                                               ; preds = %1
  %15 = tail call i8* @_Znwm(i64 112) #15
  %16 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3Log8LogEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = getelementptr inbounds i8, i8* %15, i64 48
  %19 = bitcast i8* %18 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds i8, i8* %15, i64 56
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds i8, i8* %15, i64 60
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %15, i64 64
  %24 = bitcast i8* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %15, i64 72
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds i8, i8* %15, i64 80
  %27 = bitcast i8* %26 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds i8, i8* %15, i64 88
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds i8, i8* %15, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 33, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #13
  %30 = bitcast i8* %15 to %"class.blink::protocol::Log::LogEntry"*
  %31 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  %32 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry10SourceEnum5OtherE, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %14
  %35 = tail call i64 @strlen(i8* nonnull %32) #14
  br label %36

36:                                               ; preds = %14, %34
  %37 = phi i64 [ %35, %34 ], [ 0, %14 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %32, i64 %37) #13
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %56, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %56

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #13
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %59, !prof !3

55:                                               ; preds = %46
  call void @llvm.trap() #13
  unreachable

56:                                               ; preds = %41, %36
  %57 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %58 = bitcast i8* %17 to i64*
  store i64 %57, i64* %58, align 8
  br label %79

59:                                               ; preds = %46
  %60 = trunc i33 %52 to i32
  store i32 %60, i32* %47, align 4
  %61 = bitcast i8* %17 to %"class.WTF::StringImpl"**
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %64 = bitcast i8* %17 to i64*
  store i64 %63, i64* %64, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #13
  br label %79

79:                                               ; preds = %56, %59, %75, %78
  %80 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #13
  %81 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry9LevelEnum7WarningE, align 8
  %82 = icmp eq i8* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  %84 = call i64 @strlen(i8* nonnull %81) #14
  br label %85

85:                                               ; preds = %79, %83
  %86 = phi i64 [ %84, %83 ], [ 0, %79 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %81, i64 %86) #13
  %87 = getelementptr inbounds i8, i8* %15, i64 16
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %108, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %108

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i33
  %100 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #13
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !3

105:                                              ; preds = %96
  call void @llvm.trap() #13
  unreachable

106:                                              ; preds = %96
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %97, align 4
  br label %108

108:                                              ; preds = %106, %91, %85
  %109 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %110 = bitcast i8* %87 to i64*
  %111 = bitcast i8* %87 to %"class.WTF::StringImpl"**
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  store i64 %109, i64* %110, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #13
  br label %127

127:                                              ; preds = %108, %123, %126
  %128 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #13
  %129 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #13
  %130 = load %"class.blink::ConsoleMessageStorage"*, %"class.blink::ConsoleMessageStorage"** %10, align 8
  %131 = call i32 @_ZNK5blink21ConsoleMessageStorage12ExpiredCountEv(%"class.blink::ConsoleMessageStorage"* %130) #13
  %132 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %132) #13
  %133 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 12
  %134 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 2
  %135 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 3
  %136 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 13
  %137 = icmp slt i32 %131, 0
  %138 = sub i32 0, %131
  %139 = select i1 %137, i32 %138, i32 %131
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 -86, i64 32, i1 false) #13
  store i8* %133, i8** %134, align 8
  %140 = urem i32 %139, 10
  %141 = udiv i32 %139, 10
  %142 = trunc i32 %140 to i8
  %143 = or i8 %142, 48
  store i8 %143, i8* %133, align 4
  %144 = icmp ugt i32 %139, 9
  br i1 %144, label %145, label %167

145:                                              ; preds = %127
  %146 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 11
  store i8* %146, i8** %134, align 8
  %147 = urem i32 %141, 10
  %148 = trunc i32 %147 to i8
  %149 = or i8 %148, 48
  store i8 %149, i8* %146, align 1
  %150 = icmp ugt i32 %139, 99
  br i1 %150, label %151, label %167

151:                                              ; preds = %145
  %152 = udiv i32 %139, 100
  %153 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 10
  store i8* %153, i8** %134, align 8
  %154 = urem i32 %152, 10
  %155 = trunc i32 %154 to i8
  %156 = or i8 %155, 48
  store i8 %156, i8* %153, align 2
  %157 = icmp ugt i32 %139, 999
  br i1 %157, label %158, label %167

158:                                              ; preds = %151, %158
  %159 = phi i32 [ %161, %158 ], [ %152, %151 ]
  %160 = load i8*, i8** %134, align 8
  %161 = udiv i32 %159, 10
  %162 = getelementptr inbounds i8, i8* %160, i64 -1
  store i8* %162, i8** %134, align 8
  %163 = urem i32 %161, 10
  %164 = trunc i32 %163 to i8
  %165 = or i8 %164, 48
  store i8 %165, i8* %162, align 1
  %166 = icmp ugt i32 %159, 99
  br i1 %166, label %158, label %167

167:                                              ; preds = %158, %151, %145, %127
  br i1 %137, label %168, label %171

168:                                              ; preds = %167
  %169 = load i8*, i8** %134, align 8
  %170 = getelementptr inbounds i8, i8* %169, i64 -1
  store i8* %170, i8** %134, align 8
  store i8 45, i8* %170, align 1
  br label %171

171:                                              ; preds = %167, %168
  %172 = bitcast i8** %134 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = ptrtoint i8* %136 to i64
  %175 = sub i64 %174, %173
  %176 = trunc i64 %175 to i32
  store i32 %176, i32* %135, align 8
  %177 = inttoptr i64 %173 to i8*
  %178 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %177, i32 %176) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %132) #13
  %179 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %178, %"class.WTF::StringImpl"** %179, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i64 27) #13
  %180 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %182 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::StringImpl"* %181)
  %183 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 0, i32 0
  %184 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %182, 0
  store %"class.WTF::StringImpl"* %184, %"class.WTF::StringImpl"** %183, align 8
  %185 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1, i32 0, i32 0
  %186 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %182, 1
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %185, align 8
  %187 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %5)
  %188 = getelementptr inbounds i8, i8* %15, i64 24
  %189 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %189, label %207, label %190

190:                                              ; preds = %171
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %207

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = zext i32 %197 to i33
  %199 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %198, i33 1) #13
  %200 = extractvalue { i33, i1 } %199, 1
  %201 = extractvalue { i33, i1 } %199, 0
  %202 = icmp slt i33 %201, 0
  %203 = or i1 %200, %202
  br i1 %203, label %204, label %205, !prof !3

204:                                              ; preds = %195
  call void @llvm.trap() #13
  unreachable

205:                                              ; preds = %195
  %206 = trunc i33 %201 to i32
  store i32 %206, i32* %196, align 4
  br label %207

207:                                              ; preds = %205, %190, %171
  %208 = ptrtoint %"class.WTF::StringImpl"* %187 to i64
  %209 = bitcast i8* %188 to i64*
  %210 = bitcast i8* %188 to %"class.WTF::StringImpl"**
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  store i64 %208, i64* %209, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %207
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #13
  br label %226

226:                                              ; preds = %207, %222, %225
  %227 = getelementptr inbounds i8, i8* %15, i64 32
  %228 = bitcast i8* %227 to double*
  store double 0.000000e+00, double* %228, align 8
  br i1 %189, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %187) #13
  br label %242

242:                                              ; preds = %226, %238, %241
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %258, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  br i1 %249, label %252, label %254

252:                                              ; preds = %245
  %253 = add i32 %251, -1
  store i32 %253, i32* %250, align 4
  br label %254

254:                                              ; preds = %252, %245
  %255 = phi i32 [ %253, %252 ], [ %251, %245 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #13
  br label %258

258:                                              ; preds = %257, %254, %242
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %260, label %274, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %261
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i32 [ %269, %268 ], [ %267, %261 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %259) #13
  br label %274

274:                                              ; preds = %258, %270, %273
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %274
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #13
  br label %290

290:                                              ; preds = %274, %286, %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #13
  %291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %292 = icmp eq %"class.WTF::StringImpl"* %291, null
  br i1 %292, label %306, label %293

293:                                              ; preds = %290
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  br i1 %297, label %300, label %302

300:                                              ; preds = %293
  %301 = add i32 %299, -1
  store i32 %301, i32* %298, align 4
  br label %302

302:                                              ; preds = %300, %293
  %303 = phi i32 [ %301, %300 ], [ %299, %293 ]
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %306

305:                                              ; preds = %302
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %291) #13
  br label %306

306:                                              ; preds = %290, %302, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #13
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %308 = icmp eq %"class.WTF::StringImpl"* %307, null
  br i1 %308, label %322, label %309

309:                                              ; preds = %306
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 0
  %315 = load i32, i32* %314, align 4
  br i1 %313, label %316, label %318

316:                                              ; preds = %309
  %317 = add i32 %315, -1
  store i32 %317, i32* %314, align 4
  br label %318

318:                                              ; preds = %316, %309
  %319 = phi i32 [ %317, %316 ], [ %315, %309 ]
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %322

321:                                              ; preds = %318
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %307) #13
  br label %322

322:                                              ; preds = %306, %318, %321
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  %323 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %324 = load %"class.blink::protocol::Log::Frontend"*, %"class.blink::protocol::Log::Frontend"** %323, align 8
  call void @_ZN5blink8protocol3Log8Frontend10entryAddedENSt3__110unique_ptrINS1_8LogEntryENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::Log::Frontend"* %324, %"class.blink::protocol::Log::LogEntry"* nonnull %30) #13
  %325 = load %"class.blink::protocol::Log::Frontend"*, %"class.blink::protocol::Log::Frontend"** %323, align 8
  call void @_ZN5blink8protocol3Log8Frontend5flushEv(%"class.blink::protocol::Log::Frontend"* %325) #13
  br label %326

326:                                              ; preds = %1, %322
  %327 = load %"class.blink::ConsoleMessageStorage"*, %"class.blink::ConsoleMessageStorage"** %10, align 8
  %328 = call i32 @_ZNK5blink21ConsoleMessageStorage4sizeEv(%"class.blink::ConsoleMessageStorage"* %327) #13
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %331, %326
  ret void

331:                                              ; preds = %326, %331
  %332 = phi i32 [ %335, %331 ], [ 0, %326 ]
  %333 = load %"class.blink::ConsoleMessageStorage"*, %"class.blink::ConsoleMessageStorage"** %10, align 8
  %334 = call %"class.blink::ConsoleMessage"* @_ZNK5blink21ConsoleMessageStorage2atEj(%"class.blink::ConsoleMessageStorage"* %333, i32 %332) #13
  call void @_ZN5blink17InspectorLogAgent19ConsoleMessageAddedEPNS_14ConsoleMessageE(%"class.blink::InspectorLogAgent"* %0, %"class.blink::ConsoleMessage"* %334)
  %335 = add nuw i32 %332, 1
  %336 = load %"class.blink::ConsoleMessageStorage"*, %"class.blink::ConsoleMessageStorage"** %10, align 8
  %337 = call i32 @_ZNK5blink21ConsoleMessageStorage4sizeEv(%"class.blink::ConsoleMessageStorage"* %336) #13
  %338 = icmp ult i32 %335, %337
  br i1 %338, label %331, label %330
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink19InspectorAgentState8MapFieldIdE4KeysEv(%"class.WTF::Vector.968"* noalias sret, %"class.blink::InspectorAgentState::MapField"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.968", %"class.WTF::Vector.968"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::Vector.968", %"class.WTF::Vector.968"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::Vector.968", %"class.WTF::Vector.968"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.WTF::Vector.968"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #13
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %1, i64 0, i32 2, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %1, i64 0, i32 2, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %1, i64 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %11, i64 %14
  br i1 %9, label %28, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.281"* [ %23, %22 ], [ %11, %16 ]
  %20 = bitcast %"struct.WTF::KeyValuePair.281"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %25 [
    i64 -1, label %22
    i64 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.281"* %23, %15
  br i1 %24, label %28, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.281"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.281"* %26, %15
  br i1 %27, label %28, label %29

28:                                               ; preds = %22, %63, %73, %70, %2, %25
  ret void

29:                                               ; preds = %25, %75
  %30 = phi i32 [ %77, %75 ], [ 0, %25 ]
  %31 = phi i32 [ %76, %75 ], [ 0, %25 ]
  %32 = phi %"struct.WTF::KeyValuePair.281"* [ %67, %75 ], [ %26, %25 ]
  %33 = icmp eq i32 %31, %30
  br i1 %33, label %61, label %34, !prof !3

34:                                               ; preds = %29
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %32, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %36, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #13
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  tail call void @llvm.trap() #13
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %56, %41, %34
  %59 = load i32, i32* %5, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %5, align 4
  br label %63

61:                                               ; preds = %29
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %32, i64 0, i32 0
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.968"* %0, %"class.WTF::String"* dereferenceable(8) %62) #13
  br label %63

63:                                               ; preds = %58, %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %32, i64 1
  %65 = icmp eq %"struct.WTF::KeyValuePair.281"* %64, %15
  br i1 %65, label %28, label %66

66:                                               ; preds = %63, %70
  %67 = phi %"struct.WTF::KeyValuePair.281"* [ %71, %70 ], [ %64, %63 ]
  %68 = bitcast %"struct.WTF::KeyValuePair.281"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  switch i64 %69, label %73 [
    i64 -1, label %70
    i64 0, label %70
  ]

70:                                               ; preds = %66, %66
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %67, i64 1
  %72 = icmp eq %"struct.WTF::KeyValuePair.281"* %71, %15
  br i1 %72, label %28, label %66

73:                                               ; preds = %66
  %74 = icmp eq %"struct.WTF::KeyValuePair.281"* %67, %15
  br i1 %74, label %28, label %75

75:                                               ; preds = %73
  %76 = load i32, i32* %5, align 4
  %77 = load i32, i32* %4, align 8
  br label %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorLogAgent19ConsoleMessageAddedEPNS_14ConsoleMessageE(%"class.blink::InspectorLogAgent"* nocapture readonly, %"class.blink::ConsoleMessage"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.std::__1::unique_ptr.1000", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.crdtp::detail::ValueMaybe.987", align 4
  %8 = alloca %"class.WTF::String", align 8
  %9 = tail call i8* @_Znwm(i64 112) #15
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3Log8LogEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = getelementptr inbounds i8, i8* %9, i64 48
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 56
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds i8, i8* %9, i64 60
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %9, i64 64
  %18 = bitcast i8* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %9, i64 72
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 80
  %21 = bitcast i8* %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds i8, i8* %9, i64 88
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %9, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 33, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #13
  %24 = bitcast i8* %9 to %"class.blink::protocol::Log::LogEntry"*
  %25 = tail call i32 @_ZNK5blink14ConsoleMessage6SourceEv(%"class.blink::ConsoleMessage"* %1) #13
  %26 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  switch i32 %25, label %118 [
    i32 0, label %27
    i32 1, label %34
    i32 2, label %41
    i32 4, label %48
    i32 5, label %55
    i32 6, label %62
    i32 7, label %69
    i32 8, label %76
    i32 9, label %83
    i32 10, label %90
    i32 11, label %97
    i32 12, label %104
    i32 13, label %111
  ]

27:                                               ; preds = %2
  %28 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry10SourceEnum3XmlE, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %27
  %31 = tail call i64 @strlen(i8* nonnull %28) #14
  br label %32

32:                                               ; preds = %30, %27
  %33 = phi i64 [ %31, %30 ], [ 0, %27 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %28, i64 %33) #13
  br label %125

34:                                               ; preds = %2
  %35 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry10SourceEnum10JavascriptE, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = tail call i64 @strlen(i8* nonnull %35) #14
  br label %39

39:                                               ; preds = %37, %34
  %40 = phi i64 [ %38, %37 ], [ 0, %34 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %35, i64 %40) #13
  br label %125

41:                                               ; preds = %2
  %42 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry10SourceEnum7NetworkE, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = tail call i64 @strlen(i8* nonnull %42) #14
  br label %46

46:                                               ; preds = %44, %41
  %47 = phi i64 [ %45, %44 ], [ 0, %41 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %42, i64 %47) #13
  br label %125

48:                                               ; preds = %2
  %49 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry10SourceEnum7StorageE, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  %52 = tail call i64 @strlen(i8* nonnull %49) #14
  br label %53

53:                                               ; preds = %51, %48
  %54 = phi i64 [ %52, %51 ], [ 0, %48 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %49, i64 %54) #13
  br label %125

55:                                               ; preds = %2
  %56 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry10SourceEnum8AppcacheE, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = tail call i64 @strlen(i8* nonnull %56) #14
  br label %60

60:                                               ; preds = %58, %55
  %61 = phi i64 [ %59, %58 ], [ 0, %55 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %56, i64 %61) #13
  br label %125

62:                                               ; preds = %2
  %63 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry10SourceEnum9RenderingE, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  %66 = tail call i64 @strlen(i8* nonnull %63) #14
  br label %67

67:                                               ; preds = %65, %62
  %68 = phi i64 [ %66, %65 ], [ 0, %62 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %63, i64 %68) #13
  br label %125

69:                                               ; preds = %2
  %70 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry10SourceEnum8SecurityE, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %69
  %73 = tail call i64 @strlen(i8* nonnull %70) #14
  br label %74

74:                                               ; preds = %72, %69
  %75 = phi i64 [ %73, %72 ], [ 0, %69 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %70, i64 %75) #13
  br label %125

76:                                               ; preds = %2
  %77 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry10SourceEnum5OtherE, align 8
  %78 = icmp eq i8* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = tail call i64 @strlen(i8* nonnull %77) #14
  br label %81

81:                                               ; preds = %79, %76
  %82 = phi i64 [ %80, %79 ], [ 0, %76 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %77, i64 %82) #13
  br label %125

83:                                               ; preds = %2
  %84 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry10SourceEnum11DeprecationE, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = tail call i64 @strlen(i8* nonnull %84) #14
  br label %88

88:                                               ; preds = %86, %83
  %89 = phi i64 [ %87, %86 ], [ 0, %83 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %84, i64 %89) #13
  br label %125

90:                                               ; preds = %2
  %91 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry10SourceEnum6WorkerE, align 8
  %92 = icmp eq i8* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %90
  %94 = tail call i64 @strlen(i8* nonnull %91) #14
  br label %95

95:                                               ; preds = %93, %90
  %96 = phi i64 [ %94, %93 ], [ 0, %90 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %91, i64 %96) #13
  br label %125

97:                                               ; preds = %2
  %98 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry10SourceEnum9ViolationE, align 8
  %99 = icmp eq i8* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %97
  %101 = tail call i64 @strlen(i8* nonnull %98) #14
  br label %102

102:                                              ; preds = %100, %97
  %103 = phi i64 [ %101, %100 ], [ 0, %97 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %98, i64 %103) #13
  br label %125

104:                                              ; preds = %2
  %105 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry10SourceEnum12InterventionE, align 8
  %106 = icmp eq i8* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %104
  %108 = tail call i64 @strlen(i8* nonnull %105) #14
  br label %109

109:                                              ; preds = %107, %104
  %110 = phi i64 [ %108, %107 ], [ 0, %104 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %105, i64 %110) #13
  br label %125

111:                                              ; preds = %2
  %112 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry10SourceEnum14RecommendationE, align 8
  %113 = icmp eq i8* %112, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %111
  %115 = tail call i64 @strlen(i8* nonnull %112) #14
  br label %116

116:                                              ; preds = %114, %111
  %117 = phi i64 [ %115, %114 ], [ 0, %111 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %112, i64 %117) #13
  br label %125

118:                                              ; preds = %2
  %119 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry10SourceEnum5OtherE, align 8
  %120 = icmp eq i8* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %118
  %122 = tail call i64 @strlen(i8* nonnull %119) #14
  br label %123

123:                                              ; preds = %121, %118
  %124 = phi i64 [ %122, %121 ], [ 0, %118 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %119, i64 %124) #13
  br label %125

125:                                              ; preds = %32, %39, %46, %53, %60, %67, %74, %81, %88, %95, %102, %109, %116, %123
  %126 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %146, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %146

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i33
  %138 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %137, i33 1) #13
  %139 = extractvalue { i33, i1 } %138, 1
  %140 = extractvalue { i33, i1 } %138, 0
  %141 = icmp slt i33 %140, 0
  %142 = or i1 %139, %141
  br i1 %142, label %143, label %144, !prof !3

143:                                              ; preds = %134
  call void @llvm.trap() #13
  unreachable

144:                                              ; preds = %134
  %145 = trunc i33 %140 to i32
  store i32 %145, i32* %135, align 4
  br label %146

146:                                              ; preds = %144, %129, %125
  %147 = ptrtoint %"class.WTF::StringImpl"* %127 to i64
  %148 = bitcast i8* %11 to i64*
  %149 = bitcast i8* %11 to %"class.WTF::StringImpl"**
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  store i64 %147, i64* %148, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #13
  br label %165

165:                                              ; preds = %146, %161, %164
  %166 = call i32 @_ZNK5blink14ConsoleMessage5LevelEv(%"class.blink::ConsoleMessage"* %1) #13
  %167 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167)
  switch i32 %166, label %196 [
    i32 0, label %168
    i32 1, label %175
    i32 2, label %182
    i32 3, label %189
  ]

168:                                              ; preds = %165
  %169 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry9LevelEnum7VerboseE, align 8
  %170 = icmp eq i8* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %168
  %172 = call i64 @strlen(i8* nonnull %169) #14
  br label %173

173:                                              ; preds = %171, %168
  %174 = phi i64 [ %172, %171 ], [ 0, %168 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %169, i64 %174) #13
  br label %203

175:                                              ; preds = %165
  %176 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry9LevelEnum4InfoE, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %175
  %179 = call i64 @strlen(i8* nonnull %176) #14
  br label %180

180:                                              ; preds = %178, %175
  %181 = phi i64 [ %179, %178 ], [ 0, %175 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %176, i64 %181) #13
  br label %203

182:                                              ; preds = %165
  %183 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry9LevelEnum7WarningE, align 8
  %184 = icmp eq i8* %183, null
  br i1 %184, label %187, label %185

185:                                              ; preds = %182
  %186 = call i64 @strlen(i8* nonnull %183) #14
  br label %187

187:                                              ; preds = %185, %182
  %188 = phi i64 [ %186, %185 ], [ 0, %182 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %183, i64 %188) #13
  br label %203

189:                                              ; preds = %165
  %190 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry9LevelEnum5ErrorE, align 8
  %191 = icmp eq i8* %190, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %189
  %193 = call i64 @strlen(i8* nonnull %190) #14
  br label %194

194:                                              ; preds = %192, %189
  %195 = phi i64 [ %193, %192 ], [ 0, %189 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %190, i64 %195) #13
  br label %203

196:                                              ; preds = %165
  %197 = load i8*, i8** @_ZN5blink8protocol3Log8LogEntry9LevelEnum4InfoE, align 8
  %198 = icmp eq i8* %197, null
  br i1 %198, label %201, label %199

199:                                              ; preds = %196
  %200 = call i64 @strlen(i8* nonnull %197) #14
  br label %201

201:                                              ; preds = %199, %196
  %202 = phi i64 [ %200, %199 ], [ 0, %196 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %197, i64 %202) #13
  br label %203

203:                                              ; preds = %173, %180, %187, %194, %201
  %204 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167)
  %206 = getelementptr inbounds i8, i8* %9, i64 16
  %207 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %207, label %225, label %208

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = and i32 %210, 2
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %225

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = zext i32 %215 to i33
  %217 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %216, i33 1) #13
  %218 = extractvalue { i33, i1 } %217, 1
  %219 = extractvalue { i33, i1 } %217, 0
  %220 = icmp slt i33 %219, 0
  %221 = or i1 %218, %220
  br i1 %221, label %222, label %223, !prof !3

222:                                              ; preds = %213
  call void @llvm.trap() #13
  unreachable

223:                                              ; preds = %213
  %224 = trunc i33 %219 to i32
  store i32 %224, i32* %214, align 4
  br label %225

225:                                              ; preds = %223, %208, %203
  %226 = ptrtoint %"class.WTF::StringImpl"* %205 to i64
  %227 = bitcast i8* %206 to i64*
  %228 = bitcast i8* %206 to %"class.WTF::StringImpl"**
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %228, align 8
  store i64 %226, i64* %227, align 8
  %230 = icmp eq %"class.WTF::StringImpl"* %229, null
  br i1 %230, label %244, label %231

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  br i1 %235, label %238, label %240

238:                                              ; preds = %231
  %239 = add i32 %237, -1
  store i32 %239, i32* %236, align 4
  br label %240

240:                                              ; preds = %238, %231
  %241 = phi i32 [ %239, %238 ], [ %237, %231 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %229) #13
  br label %244

244:                                              ; preds = %225, %240, %243
  %245 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ConsoleMessage7MessageEv(%"class.blink::ConsoleMessage"* %1) #13
  %246 = getelementptr inbounds i8, i8* %9, i64 24
  %247 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %245, i64 0, i32 0, i32 0
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %248, null
  br i1 %249, label %267, label %250

250:                                              ; preds = %244
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %267

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = zext i32 %257 to i33
  %259 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %258, i33 1) #13
  %260 = extractvalue { i33, i1 } %259, 1
  %261 = extractvalue { i33, i1 } %259, 0
  %262 = icmp slt i33 %261, 0
  %263 = or i1 %260, %262
  br i1 %263, label %264, label %265, !prof !3

264:                                              ; preds = %255
  call void @llvm.trap() #13
  unreachable

265:                                              ; preds = %255
  %266 = trunc i33 %261 to i32
  store i32 %266, i32* %256, align 4
  br label %267

267:                                              ; preds = %265, %250, %244
  %268 = ptrtoint %"class.WTF::StringImpl"* %248 to i64
  %269 = bitcast i8* %246 to i64*
  %270 = bitcast i8* %246 to %"class.WTF::StringImpl"**
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %270, align 8
  store i64 %268, i64* %269, align 8
  %272 = icmp eq %"class.WTF::StringImpl"* %271, null
  br i1 %272, label %286, label %273

273:                                              ; preds = %267
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 0
  %279 = load i32, i32* %278, align 4
  br i1 %277, label %280, label %282

280:                                              ; preds = %273
  %281 = add i32 %279, -1
  store i32 %281, i32* %278, align 4
  br label %282

282:                                              ; preds = %280, %273
  %283 = phi i32 [ %281, %280 ], [ %279, %273 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %271) #13
  br label %286

286:                                              ; preds = %267, %282, %285
  %287 = call double @_ZNK5blink14ConsoleMessage9TimestampEv(%"class.blink::ConsoleMessage"* %1) #13
  %288 = getelementptr inbounds i8, i8* %9, i64 32
  %289 = bitcast i8* %288 to double*
  store double %287, double* %289, align 8
  %290 = ptrtoint i8* %9 to i64
  br i1 %207, label %304, label %291

291:                                              ; preds = %286
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %298, label %300

298:                                              ; preds = %291
  %299 = add i32 %297, -1
  store i32 %299, i32* %296, align 4
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %299, %298 ], [ %297, %291 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #13
  br label %304

304:                                              ; preds = %286, %300, %303
  br i1 %128, label %318, label %305

305:                                              ; preds = %304
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load atomic i32, i32* %306 monotonic, align 4
  %308 = and i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %311 = load i32, i32* %310, align 4
  br i1 %309, label %312, label %314

312:                                              ; preds = %305
  %313 = add i32 %311, -1
  store i32 %313, i32* %310, align 4
  br label %314

314:                                              ; preds = %312, %305
  %315 = phi i32 [ %313, %312 ], [ %311, %305 ]
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %318

317:                                              ; preds = %314
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #13
  br label %318

318:                                              ; preds = %317, %314, %304
  %319 = call %"class.blink::SourceLocation"* @_ZNK5blink14ConsoleMessage8LocationEv(%"class.blink::ConsoleMessage"* %1) #13
  %320 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %319, i64 0, i32 0, i32 0, i32 0
  %321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %320, align 8
  %322 = icmp eq %"class.WTF::StringImpl"* %321, null
  br i1 %322, label %352, label %323

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 1
  %325 = load i32, i32* %324, align 4
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %352, label %327

327:                                              ; preds = %323
  %328 = call %"class.blink::SourceLocation"* @_ZNK5blink14ConsoleMessage8LocationEv(%"class.blink::ConsoleMessage"* %1) #13
  %329 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %328, i64 0, i32 0, i32 0, i32 0
  %330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %331 = icmp eq %"class.WTF::StringImpl"* %330, null
  br i1 %331, label %349, label %332

332:                                              ; preds = %327
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load atomic i32, i32* %333 monotonic, align 4
  %335 = and i32 %334, 2
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %349

337:                                              ; preds = %332
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 0
  %339 = load i32, i32* %338, align 4
  %340 = zext i32 %339 to i33
  %341 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %340, i33 1) #13
  %342 = extractvalue { i33, i1 } %341, 1
  %343 = extractvalue { i33, i1 } %341, 0
  %344 = icmp slt i33 %343, 0
  %345 = or i1 %342, %344
  br i1 %345, label %346, label %347, !prof !3

346:                                              ; preds = %337
  call void @llvm.trap() #13
  unreachable

347:                                              ; preds = %337
  %348 = trunc i33 %343 to i32
  store i32 %348, i32* %338, align 4
  br label %349

349:                                              ; preds = %327, %332, %347
  %350 = getelementptr inbounds i8, i8* %9, i64 40
  %351 = bitcast i8* %350 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %351, %"class.WTF::StringImpl"* %330) #13
  br label %352

352:                                              ; preds = %318, %349, %323
  %353 = call %"class.blink::SourceLocation"* @_ZNK5blink14ConsoleMessage8LocationEv(%"class.blink::ConsoleMessage"* %1) #13
  %354 = call %"class.v8_inspector::protocol::Runtime::API::StackTrace"* @_ZNK5blink14SourceLocation20BuildInspectorObjectEv(%"class.blink::SourceLocation"* %353) #13
  %355 = ptrtoint %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %354 to i64
  %356 = icmp eq %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %354, null
  br i1 %356, label %366, label %357

357:                                              ; preds = %352
  %358 = bitcast i8* %17 to %"class.v8_inspector::protocol::Runtime::API::StackTrace"**
  %359 = load %"class.v8_inspector::protocol::Runtime::API::StackTrace"*, %"class.v8_inspector::protocol::Runtime::API::StackTrace"** %358, align 8
  store i64 %355, i64* %18, align 8
  %360 = icmp eq %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %359, null
  br i1 %360, label %366, label %361

361:                                              ; preds = %357
  %362 = bitcast %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %359 to void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)***
  %363 = load void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)**, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*** %362, align 8
  %364 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)** %363, i64 2
  %365 = load void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)** %364, align 8
  call void %365(%"class.v8_inspector::protocol::Runtime::API::StackTrace"* nonnull %359) #13
  br label %366

366:                                              ; preds = %352, %361, %357
  %367 = phi i64 [ %355, %352 ], [ 0, %357 ], [ 0, %361 ]
  %368 = call %"class.blink::SourceLocation"* @_ZNK5blink14ConsoleMessage8LocationEv(%"class.blink::ConsoleMessage"* %1) #13
  %369 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %368, i64 0, i32 1
  %370 = load i32, i32* %369, align 8
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %377, label %372

372:                                              ; preds = %366
  %373 = call %"class.blink::SourceLocation"* @_ZNK5blink14ConsoleMessage8LocationEv(%"class.blink::ConsoleMessage"* %1) #13
  %374 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %373, i64 0, i32 1
  %375 = load i32, i32* %374, align 8
  %376 = add i32 %375, -1
  store i32 %376, i32* %16, align 4
  store i8 1, i8* %14, align 4
  br label %377

377:                                              ; preds = %366, %372
  %378 = call i32 @_ZNK5blink14ConsoleMessage6SourceEv(%"class.blink::ConsoleMessage"* %1) #13
  %379 = icmp eq i32 %378, 10
  br i1 %379, label %380, label %413

380:                                              ; preds = %377
  %381 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ConsoleMessage8WorkerIdEv(%"class.blink::ConsoleMessage"* %1) #13
  %382 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %381, i64 0, i32 0, i32 0
  %383 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %382, align 8
  %384 = icmp eq %"class.WTF::StringImpl"* %383, null
  br i1 %384, label %413, label %385

385:                                              ; preds = %380
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 1
  %387 = load i32, i32* %386, align 4
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %413, label %389

389:                                              ; preds = %385
  %390 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ConsoleMessage8WorkerIdEv(%"class.blink::ConsoleMessage"* %1) #13
  %391 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %390, i64 0, i32 0, i32 0
  %392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %391, align 8
  %393 = icmp eq %"class.WTF::StringImpl"* %392, null
  br i1 %393, label %411, label %394

394:                                              ; preds = %389
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = load atomic i32, i32* %395 monotonic, align 4
  %397 = and i32 %396, 2
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %411

399:                                              ; preds = %394
  %400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 0
  %401 = load i32, i32* %400, align 4
  %402 = zext i32 %401 to i33
  %403 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %402, i33 1) #13
  %404 = extractvalue { i33, i1 } %403, 1
  %405 = extractvalue { i33, i1 } %403, 0
  %406 = icmp slt i33 %405, 0
  %407 = or i1 %404, %406
  br i1 %407, label %408, label %409, !prof !3

408:                                              ; preds = %399
  call void @llvm.trap() #13
  unreachable

409:                                              ; preds = %399
  %410 = trunc i33 %405 to i32
  store i32 %410, i32* %400, align 4
  br label %411

411:                                              ; preds = %389, %394, %409
  %412 = bitcast i8* %22 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %412, %"class.WTF::StringImpl"* %392) #13
  br label %413

413:                                              ; preds = %380, %411, %385, %377
  %414 = call i32 @_ZNK5blink14ConsoleMessage6SourceEv(%"class.blink::ConsoleMessage"* %1) #13
  %415 = icmp eq i32 %414, 2
  br i1 %415, label %416, label %445

416:                                              ; preds = %413
  %417 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ConsoleMessage17RequestIdentifierEv(%"class.blink::ConsoleMessage"* %1) #13
  %418 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %417, i64 0, i32 0, i32 0
  %419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %418, align 8
  %420 = icmp eq %"class.WTF::StringImpl"* %419, null
  br i1 %420, label %445, label %421

421:                                              ; preds = %416
  %422 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ConsoleMessage17RequestIdentifierEv(%"class.blink::ConsoleMessage"* %1) #13
  %423 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %422, i64 0, i32 0, i32 0
  %424 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %423, align 8
  %425 = icmp eq %"class.WTF::StringImpl"* %424, null
  br i1 %425, label %443, label %426

426:                                              ; preds = %421
  %427 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %424, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %428 = load atomic i32, i32* %427 monotonic, align 4
  %429 = and i32 %428, 2
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %443

431:                                              ; preds = %426
  %432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %424, i64 0, i32 0
  %433 = load i32, i32* %432, align 4
  %434 = zext i32 %433 to i33
  %435 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %434, i33 1) #13
  %436 = extractvalue { i33, i1 } %435, 1
  %437 = extractvalue { i33, i1 } %435, 0
  %438 = icmp slt i33 %437, 0
  %439 = or i1 %436, %438
  br i1 %439, label %440, label %441, !prof !3

440:                                              ; preds = %431
  call void @llvm.trap() #13
  unreachable

441:                                              ; preds = %431
  %442 = trunc i33 %437 to i32
  store i32 %442, i32* %432, align 4
  br label %443

443:                                              ; preds = %421, %426, %441
  %444 = bitcast i8* %19 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %444, %"class.WTF::StringImpl"* %424) #13
  br label %445

445:                                              ; preds = %443, %416, %413
  %446 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 4
  %447 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %446, align 8
  %448 = icmp eq %"class.v8_inspector::V8InspectorSession"* %447, null
  br i1 %448, label %643, label %449

449:                                              ; preds = %445
  %450 = call %"class.blink::LocalFrame"* @_ZNK5blink14ConsoleMessage5FrameEv(%"class.blink::ConsoleMessage"* %1) #13
  %451 = icmp eq %"class.blink::LocalFrame"* %450, null
  br i1 %451, label %643, label %452

452:                                              ; preds = %449
  %453 = call dereferenceable(16) %"class.WTF::Vector.259"* @_ZN5blink14ConsoleMessage5NodesEv(%"class.blink::ConsoleMessage"* %1) #13
  %454 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %453, i64 0, i32 0, i32 0, i32 2
  %455 = load i32, i32* %454, align 4
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %643, label %457

457:                                              ; preds = %452
  %458 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #13
  %459 = load i32, i32* %458, align 4
  store i32 0, i32* %458, align 4
  %460 = call i8* @_Znwm(i64 24) #15
  %461 = bitcast i8* %460 to %"class.std::__1::vector.998"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %460, i8 0, i64 24, i1 false) #13
  %462 = ptrtoint i8* %460 to i64
  %463 = call dereferenceable(16) %"class.WTF::Vector.259"* @_ZN5blink14ConsoleMessage5NodesEv(%"class.blink::ConsoleMessage"* %1) #13
  %464 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %463, i64 0, i32 0, i32 0, i32 0
  %465 = load i32*, i32** %464, align 8
  %466 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %463, i64 0, i32 0, i32 0, i32 2
  %467 = load i32, i32* %466, align 4
  %468 = zext i32 %467 to i64
  %469 = getelementptr inbounds i32, i32* %465, i64 %468
  %470 = icmp eq i32 %467, 0
  br i1 %470, label %575, label %471

471:                                              ; preds = %457
  %472 = bitcast %"class.std::__1::unique_ptr.1000"* %5 to i8*
  %473 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %5, i64 0, i32 0, i32 0, i32 0
  %474 = bitcast %"class.std::__1::unique_ptr.1000"* %5 to i64*
  %475 = bitcast %"class.WTF::String"* %6 to i8*
  %476 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.987", %"class.crdtp::detail::ValueMaybe.987"* %7, i64 0, i32 0
  %477 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.987", %"class.crdtp::detail::ValueMaybe.987"* %7, i64 0, i32 1
  %478 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %479 = bitcast %"class.WTF::String"* %8 to i8*
  %480 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %481 = getelementptr inbounds i8, i8* %460, i64 8
  %482 = bitcast i8* %481 to %"class.std::__1::unique_ptr.1000"**
  %483 = getelementptr inbounds i8, i8* %460, i64 16
  %484 = bitcast i8* %483 to %"class.std::__1::unique_ptr.1000"**
  %485 = bitcast i8* %481 to i64*
  br label %486

486:                                              ; preds = %471, %572
  %487 = phi i32* [ %465, %471 ], [ %573, %572 ]
  %488 = load i32, i32* %487, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %472) #13
  store i64 0, i64* %474, align 8
  %489 = call %"class.blink::Node"* @_ZN5blink10DOMNodeIds9NodeForIdEi(i32 %488) #13
  %490 = icmp eq %"class.blink::Node"* %489, null
  br i1 %490, label %519, label %491

491:                                              ; preds = %486
  %492 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %446, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %475) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7) #13
  store i8 0, i8* %476, align 4
  store i32 0, i32* %477, align 4
  %493 = call %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* @_ZN5blink11ResolveNodeEPN12v8_inspector18V8InspectorSessionEPNS_4NodeERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEE(%"class.v8_inspector::V8InspectorSession"* %492, %"class.blink::Node"* nonnull %489, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.crdtp::detail::ValueMaybe.987"* nonnull %7) #13
  %494 = ptrtoint %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %493 to i64
  %495 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %473, align 8
  store i64 %494, i64* %474, align 8
  %496 = icmp eq %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %495, null
  br i1 %496, label %502, label %497

497:                                              ; preds = %491
  %498 = bitcast %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %495 to void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)***
  %499 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*** %498, align 8
  %500 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %499, i64 2
  %501 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %500, align 8
  call void %501(%"class.v8_inspector::protocol::Runtime::API::RemoteObject"* nonnull %495) #13
  br label %502

502:                                              ; preds = %497, %491
  %503 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %478, align 8
  %504 = icmp eq %"class.WTF::StringImpl"* %503, null
  br i1 %504, label %518, label %505

505:                                              ; preds = %502
  %506 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %503, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %507 = load atomic i32, i32* %506 monotonic, align 4
  %508 = and i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %503, i64 0, i32 0
  %511 = load i32, i32* %510, align 4
  br i1 %509, label %512, label %514

512:                                              ; preds = %505
  %513 = add i32 %511, -1
  store i32 %513, i32* %510, align 4
  br label %514

514:                                              ; preds = %512, %505
  %515 = phi i32 [ %513, %512 ], [ %511, %505 ]
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %517, label %518

517:                                              ; preds = %514
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %503) #13
  br label %518

518:                                              ; preds = %502, %514, %517
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %475) #13
  br label %519

519:                                              ; preds = %486, %518
  %520 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %473, align 8
  %521 = icmp eq %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %520, null
  br i1 %521, label %522, label %553

522:                                              ; preds = %519
  %523 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %446, align 8
  %524 = call %"class.blink::LocalFrame"* @_ZNK5blink14ConsoleMessage5FrameEv(%"class.blink::ConsoleMessage"* %1) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %479) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7) #13
  %525 = call %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* @_ZN5blink16NullRemoteObjectEPN12v8_inspector18V8InspectorSessionEPNS_10LocalFrameERKN3WTF6StringE(%"class.v8_inspector::V8InspectorSession"* %523, %"class.blink::LocalFrame"* %524, %"class.WTF::String"* nonnull dereferenceable(8) %8) #13
  %526 = ptrtoint %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %525 to i64
  %527 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %473, align 8
  store i64 %526, i64* %474, align 8
  %528 = icmp eq %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %527, null
  br i1 %528, label %534, label %529

529:                                              ; preds = %522
  %530 = bitcast %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %527 to void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)***
  %531 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*** %530, align 8
  %532 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %531, i64 2
  %533 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %532, align 8
  call void %533(%"class.v8_inspector::protocol::Runtime::API::RemoteObject"* nonnull %527) #13
  br label %534

534:                                              ; preds = %529, %522
  %535 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %480, align 8
  %536 = icmp eq %"class.WTF::StringImpl"* %535, null
  br i1 %536, label %550, label %537

537:                                              ; preds = %534
  %538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %539 = load atomic i32, i32* %538 monotonic, align 4
  %540 = and i32 %539, 2
  %541 = icmp eq i32 %540, 0
  %542 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 0
  %543 = load i32, i32* %542, align 4
  br i1 %541, label %544, label %546

544:                                              ; preds = %537
  %545 = add i32 %543, -1
  store i32 %545, i32* %542, align 4
  br label %546

546:                                              ; preds = %544, %537
  %547 = phi i32 [ %545, %544 ], [ %543, %537 ]
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %549, label %550

549:                                              ; preds = %546
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %535) #13
  br label %550

550:                                              ; preds = %549, %546, %534
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %479) #13
  %551 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %473, align 8
  %552 = icmp eq %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %551, null
  br i1 %552, label %610, label %553

553:                                              ; preds = %550, %519
  %554 = phi %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* [ %551, %550 ], [ %520, %519 ]
  %555 = load %"class.std::__1::unique_ptr.1000"*, %"class.std::__1::unique_ptr.1000"** %482, align 8
  %556 = load %"class.std::__1::unique_ptr.1000"*, %"class.std::__1::unique_ptr.1000"** %484, align 8
  %557 = icmp ult %"class.std::__1::unique_ptr.1000"* %555, %556
  br i1 %557, label %558, label %563

558:                                              ; preds = %553
  %559 = ptrtoint %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %554 to i64
  store %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %473, align 8
  %560 = bitcast %"class.std::__1::unique_ptr.1000"* %555 to i64*
  store i64 %559, i64* %560, align 8
  %561 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %555, i64 1
  %562 = ptrtoint %"class.std::__1::unique_ptr.1000"* %561 to i64
  store i64 %562, i64* %485, align 8
  br label %564

563:                                              ; preds = %553
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS_14default_deleteIS6_EEEENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJS9_EEEvDpOT_(%"class.std::__1::vector.998"* nonnull %461, %"class.std::__1::unique_ptr.1000"* nonnull dereferenceable(8) %5) #13
  br label %564

564:                                              ; preds = %563, %558
  %565 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %473, align 8
  store %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %473, align 8
  %566 = icmp eq %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %565, null
  br i1 %566, label %572, label %567

567:                                              ; preds = %564
  %568 = bitcast %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %565 to void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)***
  %569 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*** %568, align 8
  %570 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %569, i64 2
  %571 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %570, align 8
  call void %571(%"class.v8_inspector::protocol::Runtime::API::RemoteObject"* nonnull %565) #13
  br label %572

572:                                              ; preds = %564, %567
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %472) #13
  %573 = getelementptr inbounds i32, i32* %487, i64 1
  %574 = icmp eq i32* %573, %469
  br i1 %574, label %575, label %486

575:                                              ; preds = %572, %457
  %576 = getelementptr inbounds i8, i8* %9, i64 104
  %577 = bitcast i8* %576 to %"class.std::__1::vector.998"**
  %578 = load %"class.std::__1::vector.998"*, %"class.std::__1::vector.998"** %577, align 8
  %579 = bitcast i8* %576 to i64*
  store i64 %462, i64* %579, align 8
  %580 = icmp eq %"class.std::__1::vector.998"* %578, null
  br i1 %580, label %637, label %581

581:                                              ; preds = %575
  %582 = getelementptr inbounds %"class.std::__1::vector.998", %"class.std::__1::vector.998"* %578, i64 0, i32 0, i32 0
  %583 = load %"class.std::__1::unique_ptr.1000"*, %"class.std::__1::unique_ptr.1000"** %582, align 8
  %584 = icmp eq %"class.std::__1::unique_ptr.1000"* %583, null
  br i1 %584, label %608, label %585

585:                                              ; preds = %581
  %586 = bitcast %"class.std::__1::unique_ptr.1000"* %583 to i8*
  %587 = getelementptr inbounds %"class.std::__1::vector.998", %"class.std::__1::vector.998"* %578, i64 0, i32 0, i32 1
  %588 = load %"class.std::__1::unique_ptr.1000"*, %"class.std::__1::unique_ptr.1000"** %587, align 8
  %589 = icmp eq %"class.std::__1::unique_ptr.1000"* %588, %583
  br i1 %589, label %606, label %590

590:                                              ; preds = %585, %601
  %591 = phi %"class.std::__1::unique_ptr.1000"* [ %592, %601 ], [ %588, %585 ]
  %592 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %591, i64 -1
  %593 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %592, i64 0, i32 0, i32 0, i32 0
  %594 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %593, align 8
  store %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %593, align 8
  %595 = icmp eq %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %594, null
  br i1 %595, label %601, label %596

596:                                              ; preds = %590
  %597 = bitcast %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %594 to void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)***
  %598 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*** %597, align 8
  %599 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %598, i64 2
  %600 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %599, align 8
  call void %600(%"class.v8_inspector::protocol::Runtime::API::RemoteObject"* nonnull %594) #13
  br label %601

601:                                              ; preds = %596, %590
  %602 = icmp eq %"class.std::__1::unique_ptr.1000"* %592, %583
  br i1 %602, label %603, label %590

603:                                              ; preds = %601
  %604 = bitcast %"class.std::__1::vector.998"* %578 to i8**
  %605 = load i8*, i8** %604, align 8
  br label %606

606:                                              ; preds = %603, %585
  %607 = phi i8* [ %605, %603 ], [ %586, %585 ]
  store %"class.std::__1::unique_ptr.1000"* %583, %"class.std::__1::unique_ptr.1000"** %587, align 8
  call void @_ZdlPv(i8* %607) #15
  br label %608

608:                                              ; preds = %606, %581
  %609 = bitcast %"class.std::__1::vector.998"* %578 to i8*
  call void @_ZdlPv(i8* %609) #15
  br label %637

610:                                              ; preds = %550
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %472) #13
  %611 = bitcast i8* %460 to %"class.std::__1::unique_ptr.1000"**
  %612 = load %"class.std::__1::unique_ptr.1000"*, %"class.std::__1::unique_ptr.1000"** %611, align 8
  %613 = icmp eq %"class.std::__1::unique_ptr.1000"* %612, null
  br i1 %613, label %636, label %614

614:                                              ; preds = %610
  %615 = bitcast %"class.std::__1::unique_ptr.1000"* %612 to i8*
  %616 = load %"class.std::__1::unique_ptr.1000"*, %"class.std::__1::unique_ptr.1000"** %482, align 8
  %617 = icmp eq %"class.std::__1::unique_ptr.1000"* %616, %612
  br i1 %617, label %634, label %618

618:                                              ; preds = %614, %629
  %619 = phi %"class.std::__1::unique_ptr.1000"* [ %620, %629 ], [ %616, %614 ]
  %620 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %619, i64 -1
  %621 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %620, i64 0, i32 0, i32 0, i32 0
  %622 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %621, align 8
  store %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %621, align 8
  %623 = icmp eq %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %622, null
  br i1 %623, label %629, label %624

624:                                              ; preds = %618
  %625 = bitcast %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %622 to void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)***
  %626 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*** %625, align 8
  %627 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %626, i64 2
  %628 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %627, align 8
  call void %628(%"class.v8_inspector::protocol::Runtime::API::RemoteObject"* nonnull %622) #13
  br label %629

629:                                              ; preds = %624, %618
  %630 = icmp eq %"class.std::__1::unique_ptr.1000"* %620, %612
  br i1 %630, label %631, label %618

631:                                              ; preds = %629
  %632 = bitcast i8* %460 to i8**
  %633 = load i8*, i8** %632, align 8
  br label %634

634:                                              ; preds = %631, %614
  %635 = phi i8* [ %633, %631 ], [ %615, %614 ]
  store %"class.std::__1::unique_ptr.1000"* %612, %"class.std::__1::unique_ptr.1000"** %482, align 8
  call void @_ZdlPv(i8* %635) #15
  br label %636

636:                                              ; preds = %634, %610
  call void @_ZdlPv(i8* nonnull %460) #15
  br label %637

637:                                              ; preds = %608, %575, %636
  %638 = phi i32 [ 1, %636 ], [ 0, %575 ], [ 0, %608 ]
  %639 = icmp eq i32* %458, null
  br i1 %639, label %641, label %640

640:                                              ; preds = %637
  store i32 %459, i32* %458, align 4
  br label %641

641:                                              ; preds = %637, %640
  %642 = icmp eq i32 %638, 0
  br i1 %642, label %643, label %647

643:                                              ; preds = %449, %445, %641, %452
  %644 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %645 = load %"class.blink::protocol::Log::Frontend"*, %"class.blink::protocol::Log::Frontend"** %644, align 8
  call void @_ZN5blink8protocol3Log8Frontend10entryAddedENSt3__110unique_ptrINS1_8LogEntryENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::Log::Frontend"* %645, %"class.blink::protocol::Log::LogEntry"* nonnull %24) #13
  %646 = load %"class.blink::protocol::Log::Frontend"*, %"class.blink::protocol::Log::Frontend"** %644, align 8
  call void @_ZN5blink8protocol3Log8Frontend5flushEv(%"class.blink::protocol::Log::Frontend"* %646) #13
  br label %647

647:                                              ; preds = %641, %643
  %648 = phi i64 [ 0, %643 ], [ %290, %641 ]
  %649 = icmp eq i64 %367, 0
  br i1 %649, label %656, label %650

650:                                              ; preds = %647
  %651 = inttoptr i64 %367 to %"class.v8_inspector::protocol::Runtime::API::StackTrace"*
  %652 = inttoptr i64 %367 to void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)***
  %653 = load void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)**, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*** %652, align 8
  %654 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)** %653, i64 2
  %655 = load void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)** %654, align 8
  call void %655(%"class.v8_inspector::protocol::Runtime::API::StackTrace"* nonnull %651) #13
  br label %656

656:                                              ; preds = %647, %650
  %657 = icmp eq i64 %648, 0
  br i1 %657, label %664, label %658

658:                                              ; preds = %656
  %659 = inttoptr i64 %648 to %"class.blink::protocol::Log::LogEntry"*
  %660 = inttoptr i64 %648 to void (%"class.blink::protocol::Log::LogEntry"*)***
  %661 = load void (%"class.blink::protocol::Log::LogEntry"*)**, void (%"class.blink::protocol::Log::LogEntry"*)*** %660, align 8
  %662 = getelementptr inbounds void (%"class.blink::protocol::Log::LogEntry"*)*, void (%"class.blink::protocol::Log::LogEntry"*)** %661, i64 2
  %663 = load void (%"class.blink::protocol::Log::LogEntry"*)*, void (%"class.blink::protocol::Log::LogEntry"*)** %662, align 8
  call void %663(%"class.blink::protocol::Log::LogEntry"* nonnull %659) #13
  br label %664

664:                                              ; preds = %656, %658
  ret void
}

declare i32 @_ZNK5blink14ConsoleMessage6SourceEv(%"class.blink::ConsoleMessage"*) local_unnamed_addr #3

declare i32 @_ZNK5blink14ConsoleMessage5LevelEv(%"class.blink::ConsoleMessage"*) local_unnamed_addr #3

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ConsoleMessage7MessageEv(%"class.blink::ConsoleMessage"*) local_unnamed_addr #3

declare double @_ZNK5blink14ConsoleMessage9TimestampEv(%"class.blink::ConsoleMessage"*) local_unnamed_addr #3

declare %"class.blink::SourceLocation"* @_ZNK5blink14ConsoleMessage8LocationEv(%"class.blink::ConsoleMessage"*) local_unnamed_addr #3

declare %"class.v8_inspector::protocol::Runtime::API::StackTrace"* @_ZNK5blink14SourceLocation20BuildInspectorObjectEv(%"class.blink::SourceLocation"*) local_unnamed_addr #3

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ConsoleMessage8WorkerIdEv(%"class.blink::ConsoleMessage"*) local_unnamed_addr #3

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ConsoleMessage17RequestIdentifierEv(%"class.blink::ConsoleMessage"*) local_unnamed_addr #3

declare %"class.blink::LocalFrame"* @_ZNK5blink14ConsoleMessage5FrameEv(%"class.blink::ConsoleMessage"*) local_unnamed_addr #3

declare dereferenceable(16) %"class.WTF::Vector.259"* @_ZN5blink14ConsoleMessage5NodesEv(%"class.blink::ConsoleMessage"*) local_unnamed_addr #3

declare %"class.blink::Node"* @_ZN5blink10DOMNodeIds9NodeForIdEi(i32) local_unnamed_addr #3

declare %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* @_ZN5blink11ResolveNodeEPN12v8_inspector18V8InspectorSessionEPNS_4NodeERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEE(%"class.v8_inspector::V8InspectorSession"*, %"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe.987"*) local_unnamed_addr #3

declare %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* @_ZN5blink16NullRemoteObjectEPN12v8_inspector18V8InspectorSessionEPNS_10LocalFrameERKN3WTF6StringE(%"class.v8_inspector::V8InspectorSession"*, %"class.blink::LocalFrame"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink8protocol3Log8Frontend10entryAddedENSt3__110unique_ptrINS1_8LogEntryENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::Log::Frontend"*, %"class.blink::protocol::Log::LogEntry"*) local_unnamed_addr #3

declare void @_ZN5blink8protocol3Log8Frontend5flushEv(%"class.blink::protocol::Log::Frontend"*) local_unnamed_addr #3

declare void @_ZN5blink13CoreProbeSink20AddInspectorLogAgentEPNS_17InspectorLogAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorLogAgent"*) local_unnamed_addr #3

declare i32 @_ZNK5blink21ConsoleMessageStorage12ExpiredCountEv(%"class.blink::ConsoleMessageStorage"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #13
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #13
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %31
  tail call void @llvm.trap() #13
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #13
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #13
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #13
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #13
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #13
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1069"* nonnull %67, i8* %30) #13
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1069"* nonnull %68, i8* %71) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #13
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %80
  call void @llvm.trap() #13
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #13
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #13
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #13
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #13
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #13
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #13
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1069"* nonnull %144, i16* %107) #13
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1069"* nonnull %145, i16* %148) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #13
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #13
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !3

164:                                              ; preds = %157
  call void @llvm.trap() #13
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #13
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #13
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

declare i32 @_ZNK5blink21ConsoleMessageStorage4sizeEv(%"class.blink::ConsoleMessageStorage"*) local_unnamed_addr #3

declare %"class.blink::ConsoleMessage"* @_ZNK5blink21ConsoleMessageStorage2atEj(%"class.blink::ConsoleMessageStorage"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorLogAgent6enableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorLogAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebVector", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 5
  %5 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 5, i32 2
  %6 = load i8, i8* %5, align 1, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %32

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 5, i32 1
  %11 = load i8, i8* %10, align 8, !range !4
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %18

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %4 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %15 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %15, i64 2
  %17 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %16, align 8
  tail call void %17(%"class.blink::InspectorAgentState::SimpleField"* %4) #13
  br label %31

18:                                               ; preds = %9
  store i8 1, i8* %5, align 1
  %19 = bitcast %"class.blink::WebVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector"* nonnull %3) #13
  %21 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 5, i32 0, i32 2
  %22 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 5, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %22, %"class.WTF::String"* dereferenceable(8) %23, %"class.blink::WebVector"* nonnull %3) #13
  %24 = load i8*, i8** %20, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 1
  %28 = ptrtoint i8* %24 to i64
  %29 = bitcast i8** %27 to i64*
  store i64 %28, i64* %29, align 8
  call void @_ZdlPv(i8* nonnull %24) #15
  br label %30

30:                                               ; preds = %26, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  br label %31

31:                                               ; preds = %13, %30
  call void @_ZN5blink17InspectorLogAgent11InnerEnableEv(%"class.blink::InspectorLogAgent"* %1)
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %32

32:                                               ; preds = %31, %8
  ret void
}

declare void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorLogAgent6enableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorLogAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 -1, i32 6, i32 2, i32 0, i32 3
  %4 = bitcast i32* %3 to %"class.blink::InspectorLogAgent"*
  tail call void @_ZN5blink17InspectorLogAgent6enableEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorLogAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorLogAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorLogAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.crdtp::DispatchResponse", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 5, i32 2
  %5 = load i8, i8* %4, align 1, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %32

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 5, i32 1
  %10 = load i8, i8* %9, align 8, !range !4
  %11 = icmp eq i8 %10, %5
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  store i8 %10, i8* %4, align 1
  %13 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 5, i32 0, i32 2
  %14 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 5, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %14, %"class.WTF::String"* dereferenceable(8) %15, %"class.blink::WebVector"* null) #13
  br label %16

16:                                               ; preds = %8, %12
  %17 = bitcast %"class.blink::InspectorLogAgent"* %1 to void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*)***
  %18 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*)**, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*)** %18, i64 12
  %20 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorLogAgent"*)** %19, align 8
  call void %20(%"class.crdtp::DispatchResponse"* nonnull sret %3, %"class.blink::InspectorLogAgent"* %1) #13
  %21 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %3, i64 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %16, %26
  %30 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %30, align 8
  call void @_ZN5blink13CoreProbeSink23RemoveInspectorLogAgentEPNS_17InspectorLogAgentE(%"class.blink::CoreProbeSink"* %31, %"class.blink::InspectorLogAgent"* %1) #13
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %32

32:                                               ; preds = %29, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !range !4
  %6 = icmp eq i8 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store i8 %3, i8* %4, align 1
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector"* null) #13
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

declare void @_ZN5blink13CoreProbeSink23RemoveInspectorLogAgentEPNS_17InspectorLogAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorLogAgent"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorLogAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorLogAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 -1, i32 6, i32 2, i32 0, i32 3
  %4 = bitcast i32* %3 to %"class.blink::InspectorLogAgent"*
  tail call void @_ZN5blink17InspectorLogAgent7disableEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorLogAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorLogAgent5clearEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorLogAgent"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::ConsoleMessageStorage"*, %"class.blink::ConsoleMessageStorage"** %3, align 8
  tail call void @_ZN5blink21ConsoleMessageStorage5ClearEv(%"class.blink::ConsoleMessageStorage"* %4) #13
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

declare void @_ZN5blink21ConsoleMessageStorage5ClearEv(%"class.blink::ConsoleMessageStorage"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorLogAgent5clearEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorLogAgent"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 -1, i32 6, i32 2, i32 0, i32 3
  %4 = getelementptr inbounds i32, i32* %3, i64 16
  %5 = bitcast i32* %4 to %"class.blink::ConsoleMessageStorage"**
  %6 = load %"class.blink::ConsoleMessageStorage"*, %"class.blink::ConsoleMessageStorage"** %5, align 8, !noalias !5
  tail call void @_ZN5blink21ConsoleMessageStorage5ClearEv(%"class.blink::ConsoleMessageStorage"* %6) #13, !noalias !5
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorLogAgent21startViolationsReportENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3Log16ViolationSettingENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorLogAgent"*, %"class.std::__1::vector.952"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 5, i32 2
  %22 = load i8, i8* %21, align 1, !range !4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %3
  %25 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 18, i8* %26, align 1
  %27 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 18, i1 false) #13
  %28 = getelementptr inbounds i8, i8* %27, i64 18
  store i8 0, i8* %28, align 2
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %18) #13
  %29 = load i8, i8* %26, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %363

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #15
  br label %363

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::PerformanceMonitor"*, %"class.blink::PerformanceMonitor"** %35, align 8
  %37 = icmp eq %"class.blink::PerformanceMonitor"* %36, null
  br i1 %37, label %38, label %50

38:                                               ; preds = %34
  %39 = tail call i8* @_Znwm(i64 48) #15
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %39, i8** %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast i64* %41 to <2 x i64>*
  store <2 x i64> <i64 44, i64 -9223372036854775760>, <2 x i64>* %42, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i64 44, i1 false) #13
  %43 = getelementptr inbounds i8, i8* %39, i64 44
  store i8 0, i8* %43, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %19) #13
  %44 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %363

48:                                               ; preds = %38
  %49 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %49) #15
  br label %363

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 1
  tail call void @_ZN5blink18PerformanceMonitor14UnsubscribeAllEPNS0_6ClientE(%"class.blink::PerformanceMonitor"* nonnull %36, %"class.blink::PerformanceMonitor::Client"* %51) #13
  %52 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 6
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIdE5ClearEv(%"class.blink::InspectorAgentState::MapField"* %52)
  %53 = getelementptr inbounds %"class.std::__1::vector.952", %"class.std::__1::vector.952"* %2, i64 0, i32 0, i32 0
  %54 = load %"class.std::__1::unique_ptr.954"*, %"class.std::__1::unique_ptr.954"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector.952", %"class.std::__1::vector.952"* %2, i64 0, i32 0, i32 1
  %56 = load %"class.std::__1::unique_ptr.954"*, %"class.std::__1::unique_ptr.954"** %55, align 8
  %57 = icmp eq %"class.std::__1::unique_ptr.954"* %54, %56
  br i1 %57, label %131, label %58

58:                                               ; preds = %50
  %59 = bitcast %"class.WTF::String"* %20 to i8*
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %61 = bitcast %"class.WTF::StringView"* %16 to i8*
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %64 = bitcast i8** %63 to %"class.WTF::StringImpl"**
  %65 = bitcast %"class.WTF::StringView"* %16 to i64*
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  %67 = bitcast %"class.WTF::StringView"* %17 to i8*
  %68 = bitcast %"class.WTF::StringView"* %17 to i64*
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  %71 = bitcast %"class.WTF::StringView"* %14 to i8*
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %74 = bitcast i8** %73 to %"class.WTF::StringImpl"**
  %75 = bitcast %"class.WTF::StringView"* %14 to i64*
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  %77 = bitcast %"class.WTF::StringView"* %15 to i8*
  %78 = bitcast %"class.WTF::StringView"* %15 to i64*
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  %81 = bitcast %"class.WTF::StringView"* %12 to i8*
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %84 = bitcast i8** %83 to %"class.WTF::StringImpl"**
  %85 = bitcast %"class.WTF::StringView"* %12 to i64*
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  %87 = bitcast %"class.WTF::StringView"* %13 to i8*
  %88 = bitcast %"class.WTF::StringView"* %13 to i64*
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  %91 = bitcast %"class.WTF::StringView"* %10 to i8*
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %94 = bitcast i8** %93 to %"class.WTF::StringImpl"**
  %95 = bitcast %"class.WTF::StringView"* %10 to i64*
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  %97 = bitcast %"class.WTF::StringView"* %11 to i8*
  %98 = bitcast %"class.WTF::StringView"* %11 to i64*
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  %101 = bitcast %"class.WTF::StringView"* %8 to i8*
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %104 = bitcast i8** %103 to %"class.WTF::StringImpl"**
  %105 = bitcast %"class.WTF::StringView"* %8 to i64*
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %107 = bitcast %"class.WTF::StringView"* %9 to i8*
  %108 = bitcast %"class.WTF::StringView"* %9 to i64*
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %111 = bitcast %"class.WTF::StringView"* %6 to i8*
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %114 = bitcast i8** %113 to %"class.WTF::StringImpl"**
  %115 = bitcast %"class.WTF::StringView"* %6 to i64*
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %117 = bitcast %"class.WTF::StringView"* %7 to i8*
  %118 = bitcast %"class.WTF::StringView"* %7 to i64*
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %121 = bitcast %"class.WTF::StringView"* %4 to i8*
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %124 = bitcast i8** %123 to %"class.WTF::StringImpl"**
  %125 = bitcast %"class.WTF::StringView"* %4 to i64*
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %127 = bitcast %"class.WTF::StringView"* %5 to i8*
  %128 = bitcast %"class.WTF::StringView"* %5 to i64*
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  br label %132

131:                                              ; preds = %360, %50
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %363

132:                                              ; preds = %58, %360
  %133 = phi %"class.std::__1::unique_ptr.954"* [ %54, %58 ], [ %361, %360 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #13
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %133, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.blink::protocol::Log::ViolationSetting"*, %"class.blink::protocol::Log::ViolationSetting"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::protocol::Log::ViolationSetting", %"class.blink::protocol::Log::ViolationSetting"* %135, i64 0, i32 1, i32 0, i32 0
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %156, label %139

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %156

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = zext i32 %146 to i33
  %148 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %147, i33 1) #13
  %149 = extractvalue { i33, i1 } %148, 1
  %150 = extractvalue { i33, i1 } %148, 0
  %151 = icmp slt i33 %150, 0
  %152 = or i1 %149, %151
  br i1 %152, label %153, label %154, !prof !3

153:                                              ; preds = %144
  call void @llvm.trap() #13
  unreachable

154:                                              ; preds = %144
  %155 = trunc i33 %150 to i32
  store i32 %155, i32* %145, align 4
  br label %156

156:                                              ; preds = %132, %139, %154
  store %"class.WTF::StringImpl"* %137, %"class.WTF::StringImpl"** %60, align 8
  %157 = load %"class.blink::protocol::Log::ViolationSetting"*, %"class.blink::protocol::Log::ViolationSetting"** %134, align 8
  %158 = getelementptr inbounds %"class.blink::protocol::Log::ViolationSetting", %"class.blink::protocol::Log::ViolationSetting"* %157, i64 0, i32 2
  %159 = load double, double* %158, align 8
  %160 = load i8*, i8** @_ZN5blink8protocol3Log16ViolationSetting8NameEnum17DiscouragedAPIUseE, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #13
  br i1 %138, label %161, label %163

161:                                              ; preds = %156
  store i8* null, i8** %63, align 8
  %162 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %162, i64* %65, align 8
  br label %167

163:                                              ; preds = %156
  store %"class.WTF::StringImpl"* %137, %"class.WTF::StringImpl"** %62, align 8
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 1
  %165 = load i32, i32* %164, align 4
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 1
  store %"class.WTF::StringImpl"* %166, %"class.WTF::StringImpl"** %64, align 8
  br label %167

167:                                              ; preds = %163, %161
  %168 = phi i32 [ %165, %163 ], [ 0, %161 ]
  store i32 %168, i32* %66, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #13
  %169 = icmp eq i8* %160, null
  br i1 %169, label %176, label %170

170:                                              ; preds = %167
  %171 = call i64 @strlen(i8* nonnull %160) #14
  %172 = icmp ult i64 %171, 4294967296
  br i1 %172, label %174, label %173, !prof !2

173:                                              ; preds = %170
  call void @llvm.trap() #13
  unreachable

174:                                              ; preds = %170
  %175 = trunc i64 %171 to i32
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ 0, %167 ]
  %178 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %178, i64* %68, align 8
  store i8* %160, i8** %69, align 8
  store i32 %177, i32* %70, align 8
  %179 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %16, %"class.WTF::StringView"* nonnull dereferenceable(24) %17) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #13
  br i1 %179, label %318, label %180

180:                                              ; preds = %176
  %181 = load i8*, i8** @_ZN5blink8protocol3Log16ViolationSetting8NameEnum8LongTaskE, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #13
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %184, label %186

184:                                              ; preds = %180
  store i8* null, i8** %73, align 8
  %185 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %185, i64* %75, align 8
  br label %190

186:                                              ; preds = %180
  store %"class.WTF::StringImpl"* %182, %"class.WTF::StringImpl"** %72, align 8
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 1
  store %"class.WTF::StringImpl"* %189, %"class.WTF::StringImpl"** %74, align 8
  br label %190

190:                                              ; preds = %186, %184
  %191 = phi i32 [ %188, %186 ], [ 0, %184 ]
  store i32 %191, i32* %76, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13
  %192 = icmp eq i8* %181, null
  br i1 %192, label %199, label %193

193:                                              ; preds = %190
  %194 = call i64 @strlen(i8* nonnull %181) #14
  %195 = icmp ult i64 %194, 4294967296
  br i1 %195, label %197, label %196, !prof !2

196:                                              ; preds = %193
  call void @llvm.trap() #13
  unreachable

197:                                              ; preds = %193
  %198 = trunc i64 %194 to i32
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ 0, %190 ]
  %201 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %201, i64* %78, align 8
  store i8* %181, i8** %79, align 8
  store i32 %200, i32* %80, align 8
  %202 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #13
  br i1 %202, label %318, label %203

203:                                              ; preds = %199
  %204 = load i8*, i8** @_ZN5blink8protocol3Log16ViolationSetting8NameEnum10LongLayoutE, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #13
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %207, label %209

207:                                              ; preds = %203
  store i8* null, i8** %83, align 8
  %208 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %208, i64* %85, align 8
  br label %213

209:                                              ; preds = %203
  store %"class.WTF::StringImpl"* %205, %"class.WTF::StringImpl"** %82, align 8
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 1
  store %"class.WTF::StringImpl"* %212, %"class.WTF::StringImpl"** %84, align 8
  br label %213

213:                                              ; preds = %209, %207
  %214 = phi i32 [ %211, %209 ], [ 0, %207 ]
  store i32 %214, i32* %86, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #13
  %215 = icmp eq i8* %204, null
  br i1 %215, label %222, label %216

216:                                              ; preds = %213
  %217 = call i64 @strlen(i8* nonnull %204) #14
  %218 = icmp ult i64 %217, 4294967296
  br i1 %218, label %220, label %219, !prof !2

219:                                              ; preds = %216
  call void @llvm.trap() #13
  unreachable

220:                                              ; preds = %216
  %221 = trunc i64 %217 to i32
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ 0, %213 ]
  %224 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %224, i64* %88, align 8
  store i8* %204, i8** %89, align 8
  store i32 %223, i32* %90, align 8
  %225 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #13
  br i1 %225, label %318, label %226

226:                                              ; preds = %222
  %227 = load i8*, i8** @_ZN5blink8protocol3Log16ViolationSetting8NameEnum12BlockedEventE, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #13
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %230, label %232

230:                                              ; preds = %226
  store i8* null, i8** %93, align 8
  %231 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %231, i64* %95, align 8
  br label %236

232:                                              ; preds = %226
  store %"class.WTF::StringImpl"* %228, %"class.WTF::StringImpl"** %92, align 8
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 1
  store %"class.WTF::StringImpl"* %235, %"class.WTF::StringImpl"** %94, align 8
  br label %236

236:                                              ; preds = %232, %230
  %237 = phi i32 [ %234, %232 ], [ 0, %230 ]
  store i32 %237, i32* %96, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #13
  %238 = icmp eq i8* %227, null
  br i1 %238, label %245, label %239

239:                                              ; preds = %236
  %240 = call i64 @strlen(i8* nonnull %227) #14
  %241 = icmp ult i64 %240, 4294967296
  br i1 %241, label %243, label %242, !prof !2

242:                                              ; preds = %239
  call void @llvm.trap() #13
  unreachable

243:                                              ; preds = %239
  %244 = trunc i64 %240 to i32
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ 0, %236 ]
  %247 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %247, i64* %98, align 8
  store i8* %227, i8** %99, align 8
  store i32 %246, i32* %100, align 8
  %248 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #13
  br i1 %248, label %318, label %249

249:                                              ; preds = %245
  %250 = load i8*, i8** @_ZN5blink8protocol3Log16ViolationSetting8NameEnum13BlockedParserE, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #13
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %251, null
  br i1 %252, label %253, label %255

253:                                              ; preds = %249
  store i8* null, i8** %103, align 8
  %254 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %254, i64* %105, align 8
  br label %259

255:                                              ; preds = %249
  store %"class.WTF::StringImpl"* %251, %"class.WTF::StringImpl"** %102, align 8
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 1
  store %"class.WTF::StringImpl"* %258, %"class.WTF::StringImpl"** %104, align 8
  br label %259

259:                                              ; preds = %255, %253
  %260 = phi i32 [ %257, %255 ], [ 0, %253 ]
  store i32 %260, i32* %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #13
  %261 = icmp eq i8* %250, null
  br i1 %261, label %268, label %262

262:                                              ; preds = %259
  %263 = call i64 @strlen(i8* nonnull %250) #14
  %264 = icmp ult i64 %263, 4294967296
  br i1 %264, label %266, label %265, !prof !2

265:                                              ; preds = %262
  call void @llvm.trap() #13
  unreachable

266:                                              ; preds = %262
  %267 = trunc i64 %263 to i32
  br label %268

268:                                              ; preds = %266, %259
  %269 = phi i32 [ %267, %266 ], [ 0, %259 ]
  %270 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %270, i64* %108, align 8
  store i8* %250, i8** %109, align 8
  store i32 %269, i32* %110, align 8
  %271 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #13
  br i1 %271, label %318, label %272

272:                                              ; preds = %268
  %273 = load i8*, i8** @_ZN5blink8protocol3Log16ViolationSetting8NameEnum7HandlerE, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #13
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %276, label %278

276:                                              ; preds = %272
  store i8* null, i8** %113, align 8
  %277 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %277, i64* %115, align 8
  br label %282

278:                                              ; preds = %272
  store %"class.WTF::StringImpl"* %274, %"class.WTF::StringImpl"** %112, align 8
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 1
  store %"class.WTF::StringImpl"* %281, %"class.WTF::StringImpl"** %114, align 8
  br label %282

282:                                              ; preds = %278, %276
  %283 = phi i32 [ %280, %278 ], [ 0, %276 ]
  store i32 %283, i32* %116, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #13
  %284 = icmp eq i8* %273, null
  br i1 %284, label %291, label %285

285:                                              ; preds = %282
  %286 = call i64 @strlen(i8* nonnull %273) #14
  %287 = icmp ult i64 %286, 4294967296
  br i1 %287, label %289, label %288, !prof !2

288:                                              ; preds = %285
  call void @llvm.trap() #13
  unreachable

289:                                              ; preds = %285
  %290 = trunc i64 %286 to i32
  br label %291

291:                                              ; preds = %289, %282
  %292 = phi i32 [ %290, %289 ], [ 0, %282 ]
  %293 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %293, i64* %118, align 8
  store i8* %273, i8** %119, align 8
  store i32 %292, i32* %120, align 8
  %294 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #13
  br i1 %294, label %318, label %295

295:                                              ; preds = %291
  %296 = load i8*, i8** @_ZN5blink8protocol3Log16ViolationSetting8NameEnum16RecurringHandlerE, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #13
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %297, null
  br i1 %298, label %299, label %301

299:                                              ; preds = %295
  store i8* null, i8** %123, align 8
  %300 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %300, i64* %125, align 8
  br label %305

301:                                              ; preds = %295
  store %"class.WTF::StringImpl"* %297, %"class.WTF::StringImpl"** %122, align 8
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 1
  %303 = load i32, i32* %302, align 4
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 1
  store %"class.WTF::StringImpl"* %304, %"class.WTF::StringImpl"** %124, align 8
  br label %305

305:                                              ; preds = %301, %299
  %306 = phi i32 [ %303, %301 ], [ 0, %299 ]
  store i32 %306, i32* %126, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #13
  %307 = icmp eq i8* %296, null
  br i1 %307, label %314, label %308

308:                                              ; preds = %305
  %309 = call i64 @strlen(i8* nonnull %296) #14
  %310 = icmp ult i64 %309, 4294967296
  br i1 %310, label %312, label %311, !prof !2

311:                                              ; preds = %308
  call void @llvm.trap() #13
  unreachable

312:                                              ; preds = %308
  %313 = trunc i64 %309 to i32
  br label %314

314:                                              ; preds = %312, %305
  %315 = phi i32 [ %313, %312 ], [ 0, %305 ]
  %316 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %316, i64* %128, align 8
  store i8* %296, i8** %129, align 8
  store i32 %315, i32* %130, align 8
  %317 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #13
  br i1 %317, label %318, label %344

318:                                              ; preds = %314, %176, %199, %222, %245, %268, %291
  %319 = phi i64 [ 5, %291 ], [ 3, %268 ], [ 2, %245 ], [ 1, %222 ], [ 0, %199 ], [ 4, %176 ], [ 6, %314 ]
  %320 = load %"class.blink::PerformanceMonitor"*, %"class.blink::PerformanceMonitor"** %35, align 8
  %321 = fmul double %159, 1.000000e+03
  %322 = fcmp ult double %321, 0xC3E0000000000000
  %323 = fcmp ugt double %321, 0x43DFFFFFFFFFFFFF
  %324 = fcmp ogt double %321, 0xC3E0000000000000
  %325 = select i1 %324, double %321, double 0xC3E0000000000000
  %326 = fptosi double %325 to i64
  %327 = select i1 %322, i64 0, i64 9223372036854775807
  %328 = select i1 %323, i64 %327, i64 %326
  call void @_ZN5blink18PerformanceMonitor9SubscribeENS0_9ViolationEN4base9TimeDeltaEPNS0_6ClientE(%"class.blink::PerformanceMonitor"* %320, i64 %319, i64 %328, %"class.blink::PerformanceMonitor::Client"* %51) #13
  call void @_ZN5blink19InspectorAgentState8MapFieldIdE3SetERKN3WTF6StringEd(%"class.blink::InspectorAgentState::MapField"* %52, %"class.WTF::String"* nonnull dereferenceable(8) %20, double %159)
  %329 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %360, label %331

331:                                              ; preds = %318
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %360

343:                                              ; preds = %340
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #13
  br label %360

344:                                              ; preds = %314
  %345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %346 = icmp eq %"class.WTF::StringImpl"* %345, null
  br i1 %346, label %360, label %347

347:                                              ; preds = %344
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load atomic i32, i32* %348 monotonic, align 4
  %350 = and i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 0
  %353 = load i32, i32* %352, align 4
  br i1 %351, label %354, label %356

354:                                              ; preds = %347
  %355 = add i32 %353, -1
  store i32 %355, i32* %352, align 4
  br label %356

356:                                              ; preds = %354, %347
  %357 = phi i32 [ %355, %354 ], [ %353, %347 ]
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %360

359:                                              ; preds = %356
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %345) #13
  br label %360

360:                                              ; preds = %359, %356, %344, %343, %340, %318
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #13
  %361 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %133, i64 1
  %362 = icmp eq %"class.std::__1::unique_ptr.954"* %361, %56
  br i1 %362, label %131, label %132

363:                                              ; preds = %48, %38, %31, %24, %131
  %364 = icmp eq %"class.std::__1::vector.952"* %2, null
  br i1 %364, label %394, label %365

365:                                              ; preds = %363
  %366 = getelementptr inbounds %"class.std::__1::vector.952", %"class.std::__1::vector.952"* %2, i64 0, i32 0, i32 0
  %367 = load %"class.std::__1::unique_ptr.954"*, %"class.std::__1::unique_ptr.954"** %366, align 8
  %368 = icmp eq %"class.std::__1::unique_ptr.954"* %367, null
  br i1 %368, label %392, label %369

369:                                              ; preds = %365
  %370 = bitcast %"class.std::__1::unique_ptr.954"* %367 to i8*
  %371 = getelementptr inbounds %"class.std::__1::vector.952", %"class.std::__1::vector.952"* %2, i64 0, i32 0, i32 1
  %372 = load %"class.std::__1::unique_ptr.954"*, %"class.std::__1::unique_ptr.954"** %371, align 8
  %373 = icmp eq %"class.std::__1::unique_ptr.954"* %372, %367
  br i1 %373, label %390, label %374

374:                                              ; preds = %369, %385
  %375 = phi %"class.std::__1::unique_ptr.954"* [ %376, %385 ], [ %372, %369 ]
  %376 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %375, i64 -1
  %377 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %376, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.blink::protocol::Log::ViolationSetting"*, %"class.blink::protocol::Log::ViolationSetting"** %377, align 8
  store %"class.blink::protocol::Log::ViolationSetting"* null, %"class.blink::protocol::Log::ViolationSetting"** %377, align 8
  %379 = icmp eq %"class.blink::protocol::Log::ViolationSetting"* %378, null
  br i1 %379, label %385, label %380

380:                                              ; preds = %374
  %381 = bitcast %"class.blink::protocol::Log::ViolationSetting"* %378 to void (%"class.blink::protocol::Log::ViolationSetting"*)***
  %382 = load void (%"class.blink::protocol::Log::ViolationSetting"*)**, void (%"class.blink::protocol::Log::ViolationSetting"*)*** %381, align 8
  %383 = getelementptr inbounds void (%"class.blink::protocol::Log::ViolationSetting"*)*, void (%"class.blink::protocol::Log::ViolationSetting"*)** %382, i64 2
  %384 = load void (%"class.blink::protocol::Log::ViolationSetting"*)*, void (%"class.blink::protocol::Log::ViolationSetting"*)** %383, align 8
  call void %384(%"class.blink::protocol::Log::ViolationSetting"* nonnull %378) #13
  br label %385

385:                                              ; preds = %380, %374
  %386 = icmp eq %"class.std::__1::unique_ptr.954"* %376, %367
  br i1 %386, label %387, label %374

387:                                              ; preds = %385
  %388 = bitcast %"class.std::__1::vector.952"* %2 to i8**
  %389 = load i8*, i8** %388, align 8
  br label %390

390:                                              ; preds = %387, %369
  %391 = phi i8* [ %389, %387 ], [ %370, %369 ]
  store %"class.std::__1::unique_ptr.954"* %367, %"class.std::__1::unique_ptr.954"** %371, align 8
  call void @_ZdlPv(i8* %391) #15
  br label %392

392:                                              ; preds = %390, %365
  %393 = bitcast %"class.std::__1::vector.952"* %2 to i8*
  call void @_ZdlPv(i8* %393) #15
  br label %394

394:                                              ; preds = %363, %392
  ret void
}

declare void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #3

declare void @_ZN5blink18PerformanceMonitor14UnsubscribeAllEPNS0_6ClientE(%"class.blink::PerformanceMonitor"*, %"class.blink::PerformanceMonitor::Client"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIdE5ClearEv(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.277", %"class.WTF::HashMap.277"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %9, i64 %12
  br i1 %7, label %36, label %14

14:                                               ; preds = %1
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %20
  %17 = phi %"struct.WTF::KeyValuePair.281"* [ %21, %20 ], [ %9, %14 ]
  %18 = bitcast %"struct.WTF::KeyValuePair.281"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %23 [
    i64 -1, label %20
    i64 0, label %20
  ]

20:                                               ; preds = %16, %16
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %17, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair.281"* %21, %13
  br i1 %22, label %36, label %16

23:                                               ; preds = %16, %14
  %24 = phi %"struct.WTF::KeyValuePair.281"* [ %9, %14 ], [ %17, %16 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair.281"* %24, %13
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %28 = bitcast %"class.WTF::String"* %2 to i8*
  %29 = bitcast %"class.WTF::StringAppend"* %3 to i8*
  %30 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  br label %72

34:                                               ; preds = %147, %157, %154
  %35 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %8, align 8
  br label %36

36:                                               ; preds = %20, %1, %34, %23
  %37 = phi %"struct.WTF::KeyValuePair.281"* [ %35, %34 ], [ %9, %23 ], [ %9, %1 ], [ %9, %20 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair.281"* %37, null
  br i1 %38, label %71, label %39

39:                                               ; preds = %36
  %40 = load i32, i32* %10, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %68, label %42

42:                                               ; preds = %39
  %43 = zext i32 %40 to i64
  br label %44

44:                                               ; preds = %65, %42
  %45 = phi i64 [ 0, %42 ], [ %66, %65 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %37, i64 %45
  %47 = bitcast %"struct.WTF::KeyValuePair.281"* %46 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast i8* %48 to %"class.WTF::StringImpl"*
  %50 = ptrtoint i8* %48 to i64
  switch i64 %50, label %51 [
    i64 -1, label %65
    i64 0, label %65
  ]

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %48, i64 8
  %53 = bitcast i8* %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = bitcast i8* %48 to i32*
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %51
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %51
  %62 = phi i32 [ %60, %59 ], [ %58, %51 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #13
  br label %65

65:                                               ; preds = %64, %61, %44, %44
  %66 = add nuw nsw i64 %45, 1
  %67 = icmp eq i64 %66, %43
  br i1 %67, label %68, label %44

68:                                               ; preds = %65, %39
  %69 = bitcast %"struct.WTF::KeyValuePair.281"* %37 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #13
  %70 = bitcast %"class.WTF::HashMap.277"* %4 to i64*
  store atomic i64 0, i64* %70 monotonic, align 8
  store i32 0, i32* %10, align 8
  store i32 0, i32* %5, align 4
  br label %71

71:                                               ; preds = %36, %68
  ret void

72:                                               ; preds = %26, %157
  %73 = phi %"struct.WTF::KeyValuePair.281"* [ %24, %26 ], [ %151, %157 ]
  %74 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #13
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %73, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #13
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %83
  call void @llvm.trap() #13
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %72, %78, %93
  %96 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %30, %"class.WTF::StringImpl"* %76)
  %97 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %96, 0
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %31, align 8
  %98 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %96, 1
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %32, align 8
  %99 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %3)
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %33, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %74, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.blink::WebVector"* null) #13
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #13
  br label %115

115:                                              ; preds = %95, %111, %114
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #13
  br label %131

131:                                              ; preds = %130, %127, %115
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #13
  br label %147

147:                                              ; preds = %131, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %73, i64 1
  %149 = icmp eq %"struct.WTF::KeyValuePair.281"* %148, %13
  br i1 %149, label %34, label %150

150:                                              ; preds = %147, %154
  %151 = phi %"struct.WTF::KeyValuePair.281"* [ %155, %154 ], [ %148, %147 ]
  %152 = bitcast %"struct.WTF::KeyValuePair.281"* %151 to i64*
  %153 = load i64, i64* %152, align 8
  switch i64 %153, label %157 [
    i64 -1, label %154
    i64 0, label %154
  ]

154:                                              ; preds = %150, %150
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %151, i64 1
  %156 = icmp eq %"struct.WTF::KeyValuePair.281"* %155, %13
  br i1 %156, label %34, label %150

157:                                              ; preds = %150
  %158 = icmp eq %"struct.WTF::KeyValuePair.281"* %151, %13
  br i1 %158, label %34, label %72
}

declare void @_ZN5blink18PerformanceMonitor9SubscribeENS0_9ViolationEN4base9TimeDeltaEPNS0_6ClientE(%"class.blink::PerformanceMonitor"*, i64, i64, %"class.blink::PerformanceMonitor::Client"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIdE3SetERKN3WTF6StringEd(%"class.blink::InspectorAgentState::MapField"*, %"class.WTF::String"* dereferenceable(8), double) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca double, align 8
  %5 = alloca %"class.blink::WebVector", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  store double %2, double* %4, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 1
  %9 = load double, double* %8, align 8
  %10 = fcmp oeq double %9, %2
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIdE5ClearERKN3WTF6StringE(%"class.blink::InspectorAgentState::MapField"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  br label %134

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::HashMap.277", %"class.WTF::HashMap.277"* %13, i64 0, i32 0
  %15 = tail call { %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.278"* %14, %"class.WTF::String"* dereferenceable(8) %1) #13
  %16 = extractvalue { %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"* } %15, 0
  %17 = getelementptr inbounds %"class.WTF::HashMap.277", %"class.WTF::HashMap.277"* %13, i64 0, i32 0, i32 0
  %18 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %18, i64 %21
  %23 = icmp eq %"struct.WTF::KeyValuePair.281"* %16, %22
  br i1 %23, label %28, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %16, i64 0, i32 1
  %26 = load double, double* %25, align 8
  %27 = fcmp oeq double %26, %2
  br i1 %27, label %134, label %28

28:                                               ; preds = %12, %24
  %29 = call { %"struct.WTF::KeyValuePair.281"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RdEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.278"* %14, %"class.WTF::String"* dereferenceable(8) %1, double* nonnull dereferenceable(8) %4) #13
  %30 = extractvalue { %"struct.WTF::KeyValuePair.281"*, i8 } %29, 1
  %31 = and i8 %30, 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = load double, double* %4, align 8
  br label %42

35:                                               ; preds = %28
  %36 = extractvalue { %"struct.WTF::KeyValuePair.281"*, i8 } %29, 0
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %36, i64 0, i32 1
  %38 = bitcast double* %4 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast double* %37 to i64*
  store i64 %39, i64* %40, align 8
  %41 = bitcast i64 %39 to double
  br label %42

42:                                               ; preds = %33, %35
  %43 = phi double [ %34, %33 ], [ %41, %35 ]
  %44 = bitcast %"class.blink::WebVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #13
  %45 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %5, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %5, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEdPNS_9WebVectorIhEE(double %43, %"class.blink::WebVector"* nonnull %5) #13
  %47 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %48 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %47, align 8
  %49 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #13
  %50 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #13
  %51 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %72, label %55

55:                                               ; preds = %42
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i33
  %64 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #13
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !3

69:                                               ; preds = %60
  call void @llvm.trap() #13
  unreachable

70:                                               ; preds = %60
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %61, align 4
  br label %72

72:                                               ; preds = %42, %55, %70
  %73 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %51, %"class.WTF::StringImpl"* %53)
  %74 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 0, i32 0
  %75 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %73, 0
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1, i32 0, i32 0
  %77 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %73, 1
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %76, align 8
  %78 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %7)
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %79, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %48, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::WebVector"* nonnull %5) #13
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #13
  br label %95

95:                                               ; preds = %72, %91, %94
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #13
  br label %111

111:                                              ; preds = %110, %107, %95
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #13
  br label %127

127:                                              ; preds = %111, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #13
  %128 = load i8*, i8** %45, align 8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %127
  %131 = ptrtoint i8* %128 to i64
  %132 = bitcast i8** %46 to i64*
  store i64 %131, i64* %132, align 8
  call void @_ZdlPv(i8* nonnull %128) #15
  br label %133

133:                                              ; preds = %127, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #13
  br label %134

134:                                              ; preds = %133, %24, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorLogAgent21startViolationsReportENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3Log16ViolationSettingENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorLogAgent"*, %"class.std::__1::vector.952"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 -1, i32 6, i32 2, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorLogAgent"*
  tail call void @_ZN5blink17InspectorLogAgent21startViolationsReportENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3Log16ViolationSettingENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorLogAgent"* %5, %"class.std::__1::vector.952"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorLogAgent20stopViolationsReportEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorLogAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 6
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIdE5ClearEv(%"class.blink::InspectorAgentState::MapField"* %4)
  %5 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::PerformanceMonitor"*, %"class.blink::PerformanceMonitor"** %5, align 8
  %7 = icmp eq %"class.blink::PerformanceMonitor"* %6, null
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = tail call i8* @_Znwm(i64 48) #15
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 44, i64 -9223372036854775760>, <2 x i64>* %12, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 1 getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i64 44, i1 false) #13
  %13 = getelementptr inbounds i8, i8* %9, i64 44
  store i8 0, i8* %13, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %3) #13
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %8
  %19 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %19) #15
  br label %22

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 0, i32 1
  tail call void @_ZN5blink18PerformanceMonitor14UnsubscribeAllEPNS0_6ClientE(%"class.blink::PerformanceMonitor"* nonnull %6, %"class.blink::PerformanceMonitor::Client"* %21) #13
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %22

22:                                               ; preds = %18, %8, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorLogAgent20stopViolationsReportEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorLogAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %1, i64 -1, i32 6, i32 2, i32 0, i32 3
  %4 = bitcast i32* %3 to %"class.blink::InspectorLogAgent"*
  tail call void @_ZN5blink17InspectorLogAgent20stopViolationsReportEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorLogAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorLogAgent16ReportLongLayoutEN4base9TimeDeltaE(%"class.blink::InspectorLogAgent"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %8 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %3) #13
  %9 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4, i64 0, i64 0), i64 %8) #13
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %7, align 8
  %10 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #13
  %11 = bitcast i8* %10 to %"class.blink::ConsoleMessage"*
  %12 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #13
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %11, i32 11, i32 0, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #13
  %13 = getelementptr inbounds i8, i8* %10, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  call void @_ZN5blink17InspectorLogAgent19ConsoleMessageAddedEPNS_14ConsoleMessageE(%"class.blink::InspectorLogAgent"* %0, %"class.blink::ConsoleMessage"* %11)
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #13
  br label %32

32:                                               ; preds = %2, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #3

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N5blink17InspectorLogAgent16ReportLongLayoutEN4base9TimeDeltaE(%"class.blink::InspectorLogAgent"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 -1, i32 6
  %4 = bitcast %"class.blink::InspectorAgentState::MapField"* %3 to %"class.blink::InspectorLogAgent"*
  tail call void @_ZN5blink17InspectorLogAgent16ReportLongLayoutEN4base9TimeDeltaE(%"class.blink::InspectorLogAgent"* %4, i64 %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorLogAgent22ReportGenericViolationENS_18PerformanceMonitor9ViolationERKN3WTF6StringEN4base9TimeDeltaEPNS_14SourceLocationE(%"class.blink::InspectorLogAgent"* nocapture readonly, i64, %"class.WTF::String"* dereferenceable(8), i64, %"class.blink::SourceLocation"*) unnamed_addr #0 align 2 {
  %6 = tail call %"class.blink::SourceLocation"* @_ZNK5blink14SourceLocation5CloneEv(%"class.blink::SourceLocation"* %4) #13
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #13
  %8 = bitcast i8* %7 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %8, i32 11, i32 0, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::SourceLocation"* %6) #13
  %9 = getelementptr inbounds i8, i8* %7, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  tail call void @_ZN5blink17InspectorLogAgent19ConsoleMessageAddedEPNS_14ConsoleMessageE(%"class.blink::InspectorLogAgent"* %0, %"class.blink::ConsoleMessage"* %8)
  ret void
}

declare %"class.blink::SourceLocation"* @_ZNK5blink14SourceLocation5CloneEv(%"class.blink::SourceLocation"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N5blink17InspectorLogAgent22ReportGenericViolationENS_18PerformanceMonitor9ViolationERKN3WTF6StringEN4base9TimeDeltaEPNS_14SourceLocationE(%"class.blink::InspectorLogAgent"* nocapture readonly, i64, %"class.WTF::String"* dereferenceable(8), i64, %"class.blink::SourceLocation"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorLogAgent", %"class.blink::InspectorLogAgent"* %0, i64 -1, i32 6
  %7 = bitcast %"class.blink::InspectorAgentState::MapField"* %6 to %"class.blink::InspectorLogAgent"*
  %8 = tail call %"class.blink::SourceLocation"* @_ZNK5blink14SourceLocation5CloneEv(%"class.blink::SourceLocation"* %4) #13
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #13
  %10 = bitcast i8* %9 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %10, i32 11, i32 0, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::SourceLocation"* %8) #13
  %11 = getelementptr inbounds i8, i8* %9, i64 -4
  %12 = bitcast i8* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = or i16 %13, 1
  store atomic i16 %14, i16* %12 release, align 2
  tail call void @_ZN5blink17InspectorLogAgent19ConsoleMessageAddedEPNS_14ConsoleMessageE(%"class.blink::InspectorLogAgent"* %7, %"class.blink::ConsoleMessage"* %10) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE(%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %6 = ptrtoint %"class.blink::CoreProbeSink"* %1 to i64
  %7 = bitcast %"class.blink::Member"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::CoreProbeSink"* %1 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #13
  br label %13

13:                                               ; preds = %4, %10
  %14 = tail call i8* @_Znwm(i64 8) #15
  %15 = getelementptr inbounds %"class.crdtp::UberDispatcher", %"class.crdtp::UberDispatcher"* %2, i64 0, i32 1
  %16 = bitcast %"class.crdtp::FrontendChannel"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::protocol::Log::Frontend"*, %"class.blink::protocol::Log::Frontend"** %19, align 8
  %21 = bitcast %"class.blink::protocol::Log::Frontend"** %19 to i8**
  store i8* %14, i8** %21, align 8
  %22 = icmp eq %"class.blink::protocol::Log::Frontend"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::protocol::Log::Frontend"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %13, %23
  %26 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 1
  tail call void @_ZN5blink8protocol3Log10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"* %2, %"class.blink::protocol::Log::Backend"* %26) #13
  %27 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3
  tail call void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"* %27, %"class.blink::InspectorSessionState"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE7DisposeEv(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = bitcast %"class.blink::InspectorBaseAgent"* %0 to void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)***
  %4 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)**, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %4, i64 8
  %6 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %5, align 8
  call void %6(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorBaseAgent"* %0) #13
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #15
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::protocol::Log::Frontend"*, %"class.blink::protocol::Log::Frontend"** %16, align 8
  store %"class.blink::protocol::Log::Frontend"* null, %"class.blink::protocol::Log::Frontend"** %16, align 8
  %18 = icmp eq %"class.blink::protocol::Log::Frontend"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::protocol::Log::Frontend"* %17 to i8*
  call void @_ZdlPv(i8* %20) #15
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::Member"* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18PerformanceMonitor6Client14ReportLongTaskEN4base9TimeTicksES3_PNS_16ExecutionContextEb(%"class.blink::PerformanceMonitor::Client"*, i64, i64, %"class.blink::ExecutionContext"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIdED0Ev(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.281"* %4, null
  br i1 %5, label %38, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %4, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair.281"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %18 = ptrtoint i8* %16 to i64
  switch i64 %18, label %19 [
    i64 -1, label %33
    i64 0, label %33
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %16 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #13
  br label %33

33:                                               ; preds = %32, %29, %12, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %6
  %37 = bitcast %"struct.WTF::KeyValuePair.281"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #13
  store %"struct.WTF::KeyValuePair.281"* null, %"struct.WTF::KeyValuePair.281"** %3, align 8
  br label %38

38:                                               ; preds = %36, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #13
  br label %55

55:                                               ; preds = %38, %51, %54
  %56 = bitcast %"class.blink::InspectorAgentState::MapField"* %0 to i8*
  tail call void @_ZdlPv(i8* %56) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIdE6DecodeEv(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca double, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %6) #13
  %8 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %7, null
  br i1 %8, label %125, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 %17
  br i1 %12, label %125, label %19

19:                                               ; preds = %9
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %19, %25
  %22 = phi %"struct.WTF::KeyValuePair"* [ %26, %25 ], [ %14, %19 ]
  %23 = bitcast %"struct.WTF::KeyValuePair"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %28 [
    i64 -1, label %25
    i64 0, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 1
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, %18
  br i1 %27, label %125, label %21

28:                                               ; preds = %21, %19
  %29 = phi %"struct.WTF::KeyValuePair"* [ %14, %19 ], [ %22, %21 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, %18
  br i1 %30, label %125, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.WTF::StringView"* %2 to i8*
  %33 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  %37 = bitcast %"class.WTF::StringView"* %2 to i64*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %39 = bitcast %"class.WTF::String"* %3 to i8*
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %41 = bitcast double* %4 to i8*
  %42 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0
  %43 = bitcast double* %4 to i64*
  br label %44

44:                                               ; preds = %31, %123
  %45 = phi %"struct.WTF::KeyValuePair"* [ %29, %31 ], [ %117, %123 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #13
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  store i8* null, i8** %35, align 8
  %50 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %50, i64* %37, align 8
  br label %55

51:                                               ; preds = %44
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %34, align 8
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 1
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %36, align 8
  br label %55

55:                                               ; preds = %49, %51
  %56 = phi i32 [ %53, %51 ], [ 0, %49 ]
  store i32 %56, i32* %38, align 8
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = icmp eq i32 %56, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  br i1 %61, label %66, label %113

62:                                               ; preds = %55
  %63 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %58, %"class.WTF::StringView"* nonnull dereferenceable(24) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  br i1 %63, label %64, label %113

64:                                               ; preds = %62
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  br label %66

66:                                               ; preds = %64, %60
  %67 = phi %"class.WTF::StringImpl"* [ %65, %64 ], [ %47, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %40, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  br label %72

72:                                               ; preds = %66, %69
  %73 = phi i32 [ %71, %69 ], [ 0, %66 ]
  %74 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %46, i32 %73, i32 -1) #13
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #13
  store double 0xFFFFFFFFFFFFFFFF, double* %4, align 8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %76 = load i8, i8* %75, align 8, !range !4
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %79, !prof !3

78:                                               ; preds = %72
  call void @llvm.trap() #13
  unreachable

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  %85 = call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPd(i8* %81, i64 %84, double* nonnull %4) #13
  br i1 %85, label %86, label %96

86:                                               ; preds = %79
  %87 = call { %"struct.WTF::KeyValuePair.281"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RdEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.278"* %42, %"class.WTF::String"* nonnull dereferenceable(8) %3, double* nonnull dereferenceable(8) %4) #13
  %88 = extractvalue { %"struct.WTF::KeyValuePair.281"*, i8 } %87, 1
  %89 = and i8 %88, 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %96

91:                                               ; preds = %86
  %92 = extractvalue { %"struct.WTF::KeyValuePair.281"*, i8 } %87, 0
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %92, i64 0, i32 1
  %94 = load i64, i64* %43, align 8
  %95 = bitcast double* %93 to i64*
  store i64 %94, i64* %95, align 8
  br label %96

96:                                               ; preds = %91, %86, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #13
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #13
  br label %112

112:                                              ; preds = %96, %108, %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  br label %113

113:                                              ; preds = %60, %62, %112
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 1
  %115 = icmp eq %"struct.WTF::KeyValuePair"* %114, %18
  br i1 %115, label %125, label %116

116:                                              ; preds = %113, %120
  %117 = phi %"struct.WTF::KeyValuePair"* [ %121, %120 ], [ %114, %113 ]
  %118 = bitcast %"struct.WTF::KeyValuePair"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  switch i64 %119, label %123 [
    i64 -1, label %120
    i64 0, label %120
  ]

120:                                              ; preds = %116, %116
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %117, i64 1
  %122 = icmp eq %"struct.WTF::KeyValuePair"* %121, %18
  br i1 %122, label %125, label %116

123:                                              ; preds = %116
  %124 = icmp eq %"struct.WTF::KeyValuePair"* %117, %18
  br i1 %124, label %125, label %44

125:                                              ; preds = %25, %113, %123, %120, %9, %28, %1
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD0Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPd(i8*, i64, double*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.281"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RdEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.278"*, %"class.WTF::String"* dereferenceable(8), double* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.281"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.281"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.278"* %0, %"struct.WTF::KeyValuePair.281"* null)
  %9 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.281"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #13
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.281"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.281"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.281"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #13
  br i1 %57, label %134, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.281"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.281"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.281"* %59 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.281"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #13
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #13
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.281"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #13
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %79, i64 0, i32 1
  %120 = bitcast double* %2 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast double* %119 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 2
  %124 = load i32, i32* %123, align 4
  %125 = add i32 %124, 1
  store i32 %125, i32* %123, align 4
  %126 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 3
  %127 = load i32, i32* %126, align 8
  %128 = add i32 %127, %125
  %129 = shl i32 %128, 1
  %130 = load i32, i32* %12, align 8
  %131 = icmp ult i32 %129, %130
  br i1 %131, label %134, label %132

132:                                              ; preds = %118
  %133 = tail call %"struct.WTF::KeyValuePair.281"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.278"* %0, %"struct.WTF::KeyValuePair.281"* %79)
  br label %134

134:                                              ; preds = %54, %118, %132
  %135 = phi i8 [ 1, %118 ], [ 1, %132 ], [ 0, %54 ]
  %136 = phi %"struct.WTF::KeyValuePair.281"* [ %79, %118 ], [ %133, %132 ], [ %47, %54 ]
  %137 = insertvalue { %"struct.WTF::KeyValuePair.281"*, i8 } undef, %"struct.WTF::KeyValuePair.281"* %136, 0
  %138 = insertvalue { %"struct.WTF::KeyValuePair.281"*, i8 } %137, i8 %135, 1
  ret { %"struct.WTF::KeyValuePair.281"*, i8 } %138
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.281"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.278"*, %"struct.WTF::KeyValuePair.281"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEdEEEEPKcv, i64 0, i64 0)) #13
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.281"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %84, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 7
  %41 = icmp ult i64 %39, 7
  br i1 %41, label %73, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %70, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %71, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %36, i64 %45
  %48 = bitcast %"struct.WTF::KeyValuePair.281"* %47 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %48, align 8
  %49 = or i64 %45, 1
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %36, i64 %49
  %51 = bitcast %"struct.WTF::KeyValuePair.281"* %50 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %51, align 8
  %52 = or i64 %45, 2
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %36, i64 %52
  %54 = bitcast %"struct.WTF::KeyValuePair.281"* %53 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %54, align 8
  %55 = or i64 %45, 3
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %36, i64 %55
  %57 = bitcast %"struct.WTF::KeyValuePair.281"* %56 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %57, align 8
  %58 = or i64 %45, 4
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %36, i64 %58
  %60 = bitcast %"struct.WTF::KeyValuePair.281"* %59 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %60, align 8
  %61 = or i64 %45, 5
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %36, i64 %61
  %63 = bitcast %"struct.WTF::KeyValuePair.281"* %62 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %63, align 8
  %64 = or i64 %45, 6
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %36, i64 %64
  %66 = bitcast %"struct.WTF::KeyValuePair.281"* %65 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %66, align 8
  %67 = or i64 %45, 7
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %36, i64 %67
  %69 = bitcast %"struct.WTF::KeyValuePair.281"* %68 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %69, align 8
  %70 = add nuw nsw i64 %45, 8
  %71 = add i64 %46, -8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %44

73:                                               ; preds = %44, %38
  %74 = phi i64 [ 0, %38 ], [ %70, %44 ]
  %75 = icmp eq i64 %40, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %73, %76
  %77 = phi i64 [ %81, %76 ], [ %74, %73 ]
  %78 = phi i64 [ %82, %76 ], [ %40, %73 ]
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %36, i64 %77
  %80 = bitcast %"struct.WTF::KeyValuePair.281"* %79 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %80, align 8
  %81 = add nuw nsw i64 %77, 1
  %82 = add i64 %78, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %76, !llvm.loop !8

84:                                               ; preds = %73, %76, %31
  %85 = call %"struct.WTF::KeyValuePair.281"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.278"* %0, %"struct.WTF::KeyValuePair.281"* %36, i32 %32, %"struct.WTF::KeyValuePair.281"* %1) #13
  ret %"struct.WTF::KeyValuePair.281"* %85
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.281"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.278"*, %"struct.WTF::KeyValuePair.281"*, i32, %"struct.WTF::KeyValuePair.281"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.278", align 8
  %6 = bitcast %"class.WTF::HashTable.278"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.278"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.281"* %1, %"struct.WTF::KeyValuePair.281"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.281"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.278"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.278"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.281"* %22 to i64
  br label %71

24:                                               ; preds = %116
  %25 = bitcast %"class.WTF::HashTable.278"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.278"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %117, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.281"* [ null, %16 ], [ %120, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %118, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.281"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.281"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #13
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.281"* %33

71:                                               ; preds = %21, %116
  %72 = phi i64 [ %117, %116 ], [ %23, %21 ]
  %73 = phi i32 [ %118, %116 ], [ %13, %21 ]
  %74 = phi %"struct.WTF::KeyValuePair.281"* [ %119, %116 ], [ %22, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair.281"* [ %120, %116 ], [ null, %21 ]
  %76 = phi i32 [ %121, %116 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"struct.WTF::KeyValuePair.281"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %116
    i64 0, label %116
  ]

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %78, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair.281"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.278"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %83) #13
  %85 = extractvalue { %"struct.WTF::KeyValuePair.281"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #13
  br label %102

102:                                              ; preds = %82, %98, %101
  %103 = load i64, i64* %80, align 8
  %104 = bitcast %"struct.WTF::KeyValuePair.281"* %85 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %85, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %74, i64 %77, i32 1
  %107 = bitcast double* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast double* %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %15, align 8
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %110, i64 %77
  %112 = icmp eq %"struct.WTF::KeyValuePair.281"* %111, %3
  %113 = select i1 %112, %"struct.WTF::KeyValuePair.281"* %85, %"struct.WTF::KeyValuePair.281"* %75
  %114 = load i32, i32* %12, align 8
  %115 = ptrtoint %"struct.WTF::KeyValuePair.281"* %110 to i64
  br label %116

116:                                              ; preds = %71, %71, %102
  %117 = phi i64 [ %72, %71 ], [ %115, %102 ], [ %72, %71 ]
  %118 = phi i32 [ %73, %71 ], [ %114, %102 ], [ %73, %71 ]
  %119 = phi %"struct.WTF::KeyValuePair.281"* [ %74, %71 ], [ %110, %102 ], [ %74, %71 ]
  %120 = phi %"struct.WTF::KeyValuePair.281"* [ %75, %71 ], [ %113, %102 ], [ %75, %71 ]
  %121 = add i32 %76, 1
  %122 = icmp eq i32 %121, %118
  br i1 %122, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.281"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.278"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #13
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.281"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.281"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.281"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.281"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.281"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.281"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.281"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.281"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #13
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.281"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.281"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.281"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.281"*, i8 } undef, %"struct.WTF::KeyValuePair.281"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.281"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.281"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEED2Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::InspectorBaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [9 x i8*] }, { [11 x i8*], [9 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [9 x i8*] }, { [11 x i8*], [9 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::Log::Frontend"*, %"class.blink::protocol::Log::Frontend"** %3, align 8
  store %"class.blink::protocol::Log::Frontend"* null, %"class.blink::protocol::Log::Frontend"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::Log::Frontend"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::Log::Frontend"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  %11 = icmp eq %"class.blink::InspectorAgentState::Field"** %10, null
  %12 = bitcast %"class.blink::InspectorAgentState::Field"** %10 to i8*
  br i1 %11, label %19, label %13, !prof !2

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !3

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #13
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  br label %19

19:                                               ; preds = %18, %8
  %20 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #13
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent7RestoreEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEED1Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 -1, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.227"* %2 to %"class.blink::InspectorBaseAgent"*
  %4 = bitcast %"class.std::__1::unique_ptr.227"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [9 x i8*] }, { [11 x i8*], [9 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [9 x i8*] }, { [11 x i8*], [9 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 6, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::Log::Frontend"*, %"class.blink::protocol::Log::Frontend"** %5, align 8
  store %"class.blink::protocol::Log::Frontend"* null, %"class.blink::protocol::Log::Frontend"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::Log::Frontend"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::protocol::Log::Frontend"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #15
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 4
  %12 = bitcast %"class.std::__1::unique_ptr.227"* %11 to %"class.blink::InspectorAgentState::Field"***
  %13 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  %14 = icmp eq %"class.blink::InspectorAgentState::Field"** %13, null
  %15 = bitcast %"class.blink::InspectorAgentState::Field"** %13 to i8*
  br i1 %14, label %22, label %16, !prof !2

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %3, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #13
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  br label %22

22:                                               ; preds = %21, %10
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 3
  %24 = bitcast %"class.std::__1::unique_ptr.227"* %23 to %"class.WTF::StringImpl"**
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #13
  br label %40

40:                                               ; preds = %22, %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3Log8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %0, i64 0, i32 1
  %4 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #13
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %10
  tail call void @llvm.trap() #13
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %20, %5, %2
  %23 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %24 = bitcast %"class.WTF::String"* %3 to i64*
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #13
  br label %41

41:                                               ; preds = %22, %37, %40
  %42 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %0, i64 0, i32 0
  store i8 1, i8* %42, align 8
  br i1 %4, label %56, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #13
  br label %56

56:                                               ; preds = %41, %52, %55
  ret void
}

declare dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #13
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"* %8, %"class.WTF::String"* dereferenceable(8) %7) #13
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8* %25, i64 %28, i8* %29) #13
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorAgentState::Field"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8*, i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

declare void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21ConsoleMessageStorageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessageStorage"*
  tail call void @_ZNK5blink21ConsoleMessageStorage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessageStorage"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink21ConsoleMessageStorage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessageStorage"*, %"class.blink::Visitor"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18PerformanceMonitorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PerformanceMonitor"*
  tail call void @_ZNK5blink18PerformanceMonitor5TraceEPNS_7VisitorE(%"class.blink::PerformanceMonitor"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink18PerformanceMonitor5TraceEPNS_7VisitorE(%"class.blink::PerformanceMonitor"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CoreProbeSink"*
  tail call void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"*, %"class.blink::Visitor"*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.968"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.968", %"class.WTF::Vector.968"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.968", %"class.WTF::Vector.968"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.968", %"class.WTF::Vector.968"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.968"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.968"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.968"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.968", %"class.WTF::Vector.968"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.968"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.968"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.968"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #13
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %113
  tail call void @llvm.trap() #13
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.278"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.281"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.281"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.281"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.281"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.281"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.281"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"* } undef, %"struct.WTF::KeyValuePair.281"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"* } %77, %"struct.WTF::KeyValuePair.281"* %76, 1
  ret { %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"* } %78
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3Log16ViolationSettingENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.952"*, %"class.std::__1::unique_ptr.954"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.952", %"class.std::__1::vector.952"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.954"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.952"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.952"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.952", %"class.std::__1::vector.952"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.954"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.954"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.954"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.954"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.954"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Log::ViolationSetting"* null, %"class.blink::protocol::Log::ViolationSetting"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.954"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.954"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.952", %"class.std::__1::vector.952"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.954"*, %"class.std::__1::unique_ptr.954"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.954"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.954"*, %"class.std::__1::unique_ptr.954"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.954"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Log::ViolationSetting"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.954"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.954"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.954"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Log::ViolationSetting"* null, %"class.blink::protocol::Log::ViolationSetting"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.954"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !10

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.954"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.954"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.954"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.954"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.954"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.954"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Log::ViolationSetting"* null, %"class.blink::protocol::Log::ViolationSetting"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.954"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.954"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Log::ViolationSetting"* null, %"class.blink::protocol::Log::ViolationSetting"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.954"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.954"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Log::ViolationSetting"* null, %"class.blink::protocol::Log::ViolationSetting"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.954"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.954"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Log::ViolationSetting"* null, %"class.blink::protocol::Log::ViolationSetting"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.954"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.954"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Log::ViolationSetting"* null, %"class.blink::protocol::Log::ViolationSetting"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.954"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.954"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Log::ViolationSetting"* null, %"class.blink::protocol::Log::ViolationSetting"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.954"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.954"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Log::ViolationSetting"* null, %"class.blink::protocol::Log::ViolationSetting"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.954"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.954"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Log::ViolationSetting"* null, %"class.blink::protocol::Log::ViolationSetting"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.954"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.954"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.954"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.954"*, %"class.std::__1::unique_ptr.954"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.954"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.954"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.954"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.954"*
  %138 = icmp eq %"class.std::__1::unique_ptr.954"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.954"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.954", %"class.std::__1::unique_ptr.954"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Log::ViolationSetting"*, %"class.blink::protocol::Log::ViolationSetting"** %142, align 8
  store %"class.blink::protocol::Log::ViolationSetting"* null, %"class.blink::protocol::Log::ViolationSetting"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Log::ViolationSetting"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Log::ViolationSetting"* %143 to void (%"class.blink::protocol::Log::ViolationSetting"*)***
  %147 = load void (%"class.blink::protocol::Log::ViolationSetting"*)**, void (%"class.blink::protocol::Log::ViolationSetting"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Log::ViolationSetting"*)*, void (%"class.blink::protocol::Log::ViolationSetting"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Log::ViolationSetting"*)*, void (%"class.blink::protocol::Log::ViolationSetting"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Log::ViolationSetting"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.954"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS_14default_deleteIS6_EEEENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJS9_EEEvDpOT_(%"class.std::__1::vector.998"*, %"class.std::__1::unique_ptr.1000"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.998", %"class.std::__1::vector.998"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.1000"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.998"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.998"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.998", %"class.std::__1::vector.998"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.1000"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.1000"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.1000"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.1000"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.1000"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.1000"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.1000"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.998", %"class.std::__1::vector.998"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.1000"*, %"class.std::__1::unique_ptr.1000"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.1000"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.1000"*, %"class.std::__1::unique_ptr.1000"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.1000"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.1000"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.1000"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.1000"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.1000"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !11

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.1000"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.1000"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.1000"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.1000"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.1000"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.1000"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.1000"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.1000"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.1000"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.1000"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.1000"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.1000"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.1000"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.1000"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.1000"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.1000"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.1000"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.1000"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.1000"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.1000"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.1000"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.1000"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.1000"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.1000"*, %"class.std::__1::unique_ptr.1000"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.1000"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.1000"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.1000"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.1000"*
  %138 = icmp eq %"class.std::__1::unique_ptr.1000"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.1000"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.1000", %"class.std::__1::unique_ptr.1000"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %142, align 8
  store %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %142, align 8
  %144 = icmp eq %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %143 to void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)***
  %147 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %147, i64 2
  %149 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %148, align 8
  tail call void %149(%"class.v8_inspector::protocol::Runtime::API::RemoteObject"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.1000"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #13
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #13
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #13
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %33
  tail call void @llvm.trap() #13
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #13
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #13
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #13
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0), i8* %31, i8* %32) #13
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.13, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #13
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #13
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %46, i8* %47) #13
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.13, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #13
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #13
  ret i32 %24
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1069"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1069"*, i16*) local_unnamed_addr #3

declare void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext, %"class.blink::WebVector"*) local_unnamed_addr #3

declare void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::WebVector"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIdE5ClearERKN3WTF6StringE(%"class.blink::InspectorAgentState::MapField"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.WTF::HashMap.277", %"class.WTF::HashMap.277"* %5, i64 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.278"* %6, %"class.WTF::String"* dereferenceable(8) %1) #13
  %8 = extractvalue { %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap.277", %"class.WTF::HashMap.277"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair.281"* %8, %14
  br i1 %15, label %98, label %16

16:                                               ; preds = %2
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.278"* %6, %"struct.WTF::KeyValuePair.281"* %8) #13
  %17 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %18 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %17, align 8
  %19 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = bitcast %"class.WTF::StringAppend"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #13
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !3

39:                                               ; preds = %30
  tail call void @llvm.trap() #13
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %16, %25, %40
  %43 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %21, %"class.WTF::StringImpl"* %23)
  %44 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 0, i32 0
  %45 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 0
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1, i32 0, i32 0
  %47 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 1
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %46, align 8
  %48 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %4)
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %18, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::WebVector"* null) #13
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #13
  br label %65

65:                                               ; preds = %42, %61, %64
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #13
  br label %81

81:                                               ; preds = %80, %77, %65
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #13
  br label %97

97:                                               ; preds = %81, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %98

98:                                               ; preds = %2, %97
  ret void
}

declare void @_ZN5blink19InspectorAgentState9SerializeEdPNS_9WebVectorIhEE(double, %"class.blink::WebVector"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.278"*, %"struct.WTF::KeyValuePair.281"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = bitcast %"struct.WTF::KeyValuePair.281"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, 1
  %24 = and i32 %23, 2147483647
  %25 = and i32 %22, -2147483648
  %26 = or i32 %24, %25
  store i32 %26, i32* %21, align 8
  %27 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  store i32 %29, i32* %27, align 4
  %30 = mul i32 %29, 6
  %31 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %30, %32
  %34 = icmp ugt i32 %32, 8
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %91

36:                                               ; preds = %19
  %37 = lshr i32 %32, 1
  %38 = zext i32 %37 to i64
  %39 = shl nuw nsw i64 %38, 4
  %40 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %39, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEdEEEEPKcv, i64 0, i64 0)) #13
  %41 = bitcast i8* %40 to %"struct.WTF::KeyValuePair.281"*
  %42 = icmp eq i32 %37, 0
  br i1 %42, label %89, label %43

43:                                               ; preds = %36
  %44 = add nsw i64 %38, -1
  %45 = and i64 %38, 7
  %46 = icmp ult i64 %44, 7
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = sub nsw i64 %38, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 0, %47 ], [ %75, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %76, %49 ]
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %41, i64 %50
  %53 = bitcast %"struct.WTF::KeyValuePair.281"* %52 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %53, align 8
  %54 = or i64 %50, 1
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %41, i64 %54
  %56 = bitcast %"struct.WTF::KeyValuePair.281"* %55 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %56, align 8
  %57 = or i64 %50, 2
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %41, i64 %57
  %59 = bitcast %"struct.WTF::KeyValuePair.281"* %58 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %59, align 8
  %60 = or i64 %50, 3
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %41, i64 %60
  %62 = bitcast %"struct.WTF::KeyValuePair.281"* %61 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %62, align 8
  %63 = or i64 %50, 4
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %41, i64 %63
  %65 = bitcast %"struct.WTF::KeyValuePair.281"* %64 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %65, align 8
  %66 = or i64 %50, 5
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %41, i64 %66
  %68 = bitcast %"struct.WTF::KeyValuePair.281"* %67 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %68, align 8
  %69 = or i64 %50, 6
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %41, i64 %69
  %71 = bitcast %"struct.WTF::KeyValuePair.281"* %70 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %71, align 8
  %72 = or i64 %50, 7
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %41, i64 %72
  %74 = bitcast %"struct.WTF::KeyValuePair.281"* %73 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %74, align 8
  %75 = add nuw nsw i64 %50, 8
  %76 = add i64 %51, -8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %49

78:                                               ; preds = %49, %43
  %79 = phi i64 [ 0, %43 ], [ %75, %49 ]
  %80 = icmp eq i64 %45, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %78, %81
  %82 = phi i64 [ %86, %81 ], [ %79, %78 ]
  %83 = phi i64 [ %87, %81 ], [ %45, %78 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %41, i64 %82
  %85 = bitcast %"struct.WTF::KeyValuePair.281"* %84 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %85, align 8
  %86 = add nuw nsw i64 %82, 1
  %87 = add i64 %83, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %81, !llvm.loop !12

89:                                               ; preds = %78, %81, %36
  %90 = tail call %"struct.WTF::KeyValuePair.281"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.278"* %0, %"struct.WTF::KeyValuePair.281"* %41, i32 %37, %"struct.WTF::KeyValuePair.281"* null) #13
  br label %91

91:                                               ; preds = %89, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.278"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.281"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.281"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.281"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.281"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.281"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.281"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"* } undef, %"struct.WTF::KeyValuePair.281"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"* } %77, %"struct.WTF::KeyValuePair.281"* %76, 1
  ret { %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.281"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RdEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.278"*, %"class.WTF::String"* dereferenceable(8), double* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.281"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.281"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.278"* %0, %"struct.WTF::KeyValuePair.281"* null)
  %9 = load %"struct.WTF::KeyValuePair.281"*, %"struct.WTF::KeyValuePair.281"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.281"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #13
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.281"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.281"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.281"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #13
  br i1 %57, label %134, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.281"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.281"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.281"* %59 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9218868437227405312>, <2 x i64>* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.281"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #13
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #13
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.281"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #13
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.281", %"struct.WTF::KeyValuePair.281"* %79, i64 0, i32 1
  %120 = bitcast double* %2 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast double* %119 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 2
  %124 = load i32, i32* %123, align 4
  %125 = add i32 %124, 1
  store i32 %125, i32* %123, align 4
  %126 = getelementptr inbounds %"class.WTF::HashTable.278", %"class.WTF::HashTable.278"* %0, i64 0, i32 3
  %127 = load i32, i32* %126, align 8
  %128 = add i32 %127, %125
  %129 = shl i32 %128, 1
  %130 = load i32, i32* %12, align 8
  %131 = icmp ult i32 %129, %130
  br i1 %131, label %134, label %132

132:                                              ; preds = %118
  %133 = tail call %"struct.WTF::KeyValuePair.281"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_dEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IdEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.278"* %0, %"struct.WTF::KeyValuePair.281"* %79)
  br label %134

134:                                              ; preds = %54, %118, %132
  %135 = phi i8 [ 1, %118 ], [ 1, %132 ], [ 0, %54 ]
  %136 = phi %"struct.WTF::KeyValuePair.281"* [ %79, %118 ], [ %133, %132 ], [ %47, %54 ]
  %137 = insertvalue { %"struct.WTF::KeyValuePair.281"*, i8 } undef, %"struct.WTF::KeyValuePair.281"* %136, 0
  %138 = insertvalue { %"struct.WTF::KeyValuePair.281"*, i8 } %137, i8 %135, 1
  ret { %"struct.WTF::KeyValuePair.281"*, i8 } %138
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #13
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #13
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #13
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %40, i8* %41) #13
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #13
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #13
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #6

declare void @_ZN5blink8protocol3Log10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"*, %"class.blink::protocol::Log::Backend"*) local_unnamed_addr #3

declare void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorSessionState"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink17InspectorLogAgent5clearEv: argument 0"}
!7 = distinct !{!7, !"_ZN5blink17InspectorLogAgent5clearEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !9}
