; ModuleID = '../../cc/resources/resource_pool.cc'
source_filename = "../../cc/resources/resource_pool.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.util::IdType.11" = type { %"class.base::StrongAlias.12" }
%"class.base::StrongAlias.12" = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%union.anon = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.65" = type { %"class.absl::optional_internal::optional_data.66" }
%"class.absl::optional_internal::optional_data.66" = type { %"class.absl::optional_internal::optional_data_base.67" }
%"class.absl::optional_internal::optional_data_base.67" = type { %"class.absl::optional_internal::optional_data_dtor_base.68" }
%"class.absl::optional_internal::optional_data_dtor_base.68" = type { i8, [7 x i8], %union.anon.69 }
%union.anon.69 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.34", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.cc::ResourcePool::PoolResource"* }
%"class.cc::ResourcePool::PoolResource" = type { i64, %"class.gfx::Size", i32, %"class.gfx::ColorSpace", i64, %"class.base::TimeTicks", %"class.gfx::Rect", i8, %"class.util::IdType.11", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.17" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.cc::ResourcePool::GpuBacking"* }
%"class.cc::ResourcePool::GpuBacking" = type { i32 (...)**, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, i8, i8, %"struct.gpu::SyncToken" }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.cc::ResourcePool::SoftwareBacking"* }
%"class.cc::ResourcePool::SoftwareBacking" = type { i32 (...)**, %"struct.gpu::Mailbox" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i64 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.37 }
%class.scoped_refptr.37 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.38", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.38" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.42 }
%class.scoped_refptr.42 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.43", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.43" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.44" }
%"struct.std::__1::atomic.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__cxx_atomic_impl.47" }
%"struct.std::__1::__cxx_atomic_impl.47" = type { %"struct.std::__1::__cxx_atomic_base_impl.48" }
%"struct.std::__1::__cxx_atomic_base_impl.48" = type { i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.3" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::pair"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.viz::ContextProvider" = type { i32 (...)** }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.gpu::Capabilities" = type { %"struct.gpu::Capabilities::PerStagePrecisions", %"struct.gpu::Capabilities::PerStagePrecisions", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i64, float, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, %"struct.gpu::GpuMemoryBufferFormatSet", %"class.std::__1::vector" }
%"struct.gpu::Capabilities::PerStagePrecisions" = type { %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision" }
%"struct.gpu::Capabilities::ShaderPrecision" = type { i32, i32, i32 }
%"struct.gpu::GpuMemoryBufferFormatSet" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"*, %"class.std::__1::__compressed_pair" }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.gfx::BufferUsageAndFormat"* }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.63 }
%class.scoped_refptr.63 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.base::trace_event::MemoryDumpManager" = type <{ i32 (...)**, %"class.std::__1::set", %"class.base::RepeatingCallback.56", i8, [7 x i8], %"class.base::Lock", %"class.std::__1::unique_ptr.57", i64, i8, [7 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.49" }
%"class.std::__1::__tree.49" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.base::RepeatingCallback.56" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.base::Thread"* }
%"class.base::Thread" = type opaque
%"class.gpu::gles2::GLES2Interface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"class.gpu::ContextSupport" = type { i32 (...)** }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.64" }
%"struct.std::__1::pair.64" = type { i64, %"class.std::__1::unique_ptr" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.cc::ResourcePool::InUsePoolResource" = type { i8, %"class.cc::ResourcePool::PoolResource"* }
%"struct.viz::TransferableResource" = type { %"class.util::IdType.11", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional", i8, i32, i8, [7 x i8], %"class.absl::optional.65" }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.72 }
%union.anon.72 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::OnceCallback.78" = type { %"class.base::internal::CallbackBase" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map.79", %"class.std::__1::map.90", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr.101" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map.79" = type { %"class.std::__1::__tree.80" }
%"class.std::__1::__tree.80" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::map.90" = type { %"class.std::__1::__tree.91" }
%"class.std::__1::__tree.91" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional.104", %"class.std::__1::vector.109" }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional.104" = type { %"class.absl::optional_internal::optional_data.105" }
%"class.absl::optional_internal::optional_data.105" = type { %"class.absl::optional_internal::optional_data_base.106" }
%"class.absl::optional_internal::optional_data_base.106" = type { %"class.absl::optional_internal::optional_data_dtor_base.107" }
%"class.absl::optional_internal::optional_data_dtor_base.107" = type { i8, %union.anon.108 }
%union.anon.108 = type { i64 }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.111" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN2cc7PopBackIN4base14circular_dequeINSt3__110unique_ptrINS_12ResourcePool12PoolResourceENS3_14default_deleteIS6_EEEEEEEENT_10value_typeEPSB_ = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEE13DestructRangeIS9_Li0EEEvPS9_SC_ = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISB_E4typeEEE5valueEPcE4typeESD_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESO_SQ_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2cc12ResourcePool12PoolResourceENS_14default_deleteIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN2cc12ResourcePoolEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_7WeakPtrIS4_EEEEEFvS6_EE3RunEPNS0_13BindStateBaseES6_ = comdat any

$_ZN4base8internal9BindStateIMN2cc12ResourcePoolEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN2cc12ResourcePoolEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE10MoveBufferERNS_8internal12VectorBufferIS8_EEmmPSC_PmSF_ = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEE9MoveRangeIS9_Li0EEEvPS9_SC_SC_ = comdat any

$_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE5eraseENS_8internal29circular_deque_const_iteratorIS8_EESC_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN2cc12ResourcePoolEFvmRKN3gpu9SyncTokenEbEJNS_7WeakPtrIS4_EEmEEEFvS8_bEE7RunOnceEPNS0_13BindStateBaseES8_b = comdat any

$_ZN4base8internal9BindStateIMN2cc12ResourcePoolEFvmRKN3gpu9SyncTokenEbEJNS_7WeakPtrIS3_EEmEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN2cc12ResourcePoolEFvmRKN3gpu9SyncTokenEbEJNS_7WeakPtrIS4_EEmEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2cc12ResourcePool12PoolResourceENS_14default_deleteIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS_9allocatorIS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN2cc12ResourcePoolEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN2cc12ResourcePoolEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN2cc12ResourcePoolEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

@_ZN2cc12ResourcePool23kDefaultExpirationDelayE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 5000000 }, align 8
@_ZN2cc12ResourcePool21kDefaultMaxFlushDelayE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 1000000 }, align 8
@_ZTVN2cc12ResourcePoolE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::ResourcePool"*)* @_ZN2cc12ResourcePoolD2Ev to i8*), i8* bitcast (void (%"class.cc::ResourcePool"*)* @_ZN2cc12ResourcePoolD0Ev to i8*), i8* bitcast (i1 (%"class.cc::ResourcePool"*, %"struct.base::trace_event::MemoryDumpArgs"*, %"class.base::trace_event::ProcessMemoryDump"*)* @_ZN2cc12ResourcePool12OnMemoryDumpERKN4base11trace_event14MemoryDumpArgsEPNS2_17ProcessMemoryDumpE to i8*)] }, align 8
@.str = private unnamed_addr constant [17 x i8] c"cc::ResourcePool\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"ResourcePool\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"../../cc/resources/resource_pool.cc\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"pool_resource\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"found_busy == busy_resources_.end()\00", align 1
@.str.5 = private unnamed_addr constant [40 x i8] c"found_unused == unused_resources_.end()\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"it->second.get()\00", align 1
@.str.8 = private unnamed_addr constant [32 x i8] c"ScheduleEvictExpiredResourcesIn\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"cc/tile_memory/provider_%d\00", align 1
@_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE = external constant [0 x i8], align 1
@_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE = external constant [0 x i8], align 1
@.str.10 = private unnamed_addr constant [40 x i8] c"cc/tile_memory/provider_%d/resource_%zd\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"free_size\00", align 1
@_ZN2cc12_GLOBAL__N_117g_next_tracing_idE = internal global { { { i32 } } } zeroinitializer, align 4
@__const._ZN3viz20TransferableResource12MakeSoftwareERKN3gpu7MailboxERKN3gfx4SizeENS_14ResourceFormatE.r = private unnamed_addr constant { %"class.util::IdType.11", i8, [3 x i8], %"class.gfx::Size", i32, [4 x i8], <{ %"struct.gpu::Mailbox", { i8, i8, [6 x i8], %"class.util::IdType", i64 }, i32, [4 x i8] }>, %"class.gfx::ColorSpace", { { { { i8, [3 x i8], %union.anon } } } }, i8, [3 x i8], i32, i8, [7 x i8], %"class.absl::optional.65" } { %"class.util::IdType.11" { %"class.base::StrongAlias.12" { i32 -1431655766 } }, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", <{ %"struct.gpu::Mailbox", { i8, i8, [6 x i8], %"class.util::IdType", i64 }, i32, [4 x i8] }> <{ %"struct.gpu::Mailbox" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, { i8, i8, [6 x i8], %"class.util::IdType", i64 } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.util::IdType" { %"class.base::StrongAlias" { i64 -6148914691236517206 } }, i64 -6148914691236517206 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { %"struct.gfx::HDRMetadata" { %"struct.gfx::MasteringMetadata" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 } } } } } }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.absl::optional.65" { %"class.absl::optional_internal::optional_data.66" { %"class.absl::optional_internal::optional_data_base.67" { %"class.absl::optional_internal::optional_data_dtor_base.68" { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.69 { %"struct.gpu::VulkanYCbCrInfo" <{ i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } } } } } }, align 8
@.str.14 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.15 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.18 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.22 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.24 = private unnamed_addr constant [55 x i8] c"../../components/viz/common/resources/resource_sizes.h\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"!size.IsEmpty()\00", align 1

@_ZN2cc12ResourcePoolC1EPN3viz22ClientResourceProviderEPNS1_15ContextProviderE13scoped_refptrIN4base22SingleThreadTaskRunnerEERKNS7_9TimeDeltaEb = hidden unnamed_addr alias void (%"class.cc::ResourcePool"*, %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::TimeDelta"*, i1), void (%"class.cc::ResourcePool"*, %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::TimeDelta"*, i1)* @_ZN2cc12ResourcePoolC2EPN3viz22ClientResourceProviderEPNS1_15ContextProviderE13scoped_refptrIN4base22SingleThreadTaskRunnerEERKNS7_9TimeDeltaEb
@_ZN2cc12ResourcePoolD1Ev = hidden unnamed_addr alias void (%"class.cc::ResourcePool"*), void (%"class.cc::ResourcePool"*)* @_ZN2cc12ResourcePoolD2Ev
@_ZN2cc12ResourcePool12PoolResourceC1EmRKN3gfx4SizeEN3viz14ResourceFormatERKNS2_10ColorSpaceE = hidden unnamed_addr alias void (%"class.cc::ResourcePool::PoolResource"*, i64, %"class.gfx::Size"*, i32, %"class.gfx::ColorSpace"*), void (%"class.cc::ResourcePool::PoolResource"*, i64, %"class.gfx::Size"*, i32, %"class.gfx::ColorSpace"*)* @_ZN2cc12ResourcePool12PoolResourceC2EmRKN3gfx4SizeEN3viz14ResourceFormatERKNS2_10ColorSpaceE
@_ZN2cc12ResourcePool12PoolResourceD1Ev = hidden unnamed_addr alias void (%"class.cc::ResourcePool::PoolResource"*), void (%"class.cc::ResourcePool::PoolResource"*)* @_ZN2cc12ResourcePool12PoolResourceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool10GpuBacking36InitOverlayCandidateAndTextureTargetEN3viz14ResourceFormatERKN3gpu12CapabilitiesEb(%"class.cc::ResourcePool::GpuBacking"* nocapture, i32, %"struct.gpu::Capabilities"* dereferenceable(480), i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %3, label %5, label %9

5:                                                ; preds = %4
  %6 = getelementptr inbounds %"struct.gpu::Capabilities", %"struct.gpu::Capabilities"* %2, i64 0, i32 101
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %5, %4
  %10 = getelementptr inbounds %"class.cc::ResourcePool::GpuBacking", %"class.cc::ResourcePool::GpuBacking"* %0, i64 0, i32 4
  store i8 0, i8* %10, align 4
  br label %18

11:                                               ; preds = %5
  %12 = tail call zeroext i1 @_ZN3viz32IsGpuMemoryBufferFormatSupportedENS_14ResourceFormatE(i32 %1) #11
  %13 = getelementptr inbounds %"class.cc::ResourcePool::GpuBacking", %"class.cc::ResourcePool::GpuBacking"* %0, i64 0, i32 4
  %14 = zext i1 %12 to i8
  store i8 %14, i8* %13, align 4
  br i1 %12, label %15, label %18

15:                                               ; preds = %11
  %16 = tail call i32 @_ZN3viz12BufferFormatENS_14ResourceFormatE(i32 %1) #11
  %17 = tail call i32 @_ZN3gpu22GetBufferTextureTargetEN3gfx11BufferUsageENS0_12BufferFormatERKNS_12CapabilitiesE(i32 1, i32 %16, %"struct.gpu::Capabilities"* dereferenceable(480) %2) #11
  br label %18

18:                                               ; preds = %11, %9, %15
  %19 = phi i32 [ %17, %15 ], [ 3553, %9 ], [ 3553, %11 ]
  %20 = getelementptr inbounds %"class.cc::ResourcePool::GpuBacking", %"class.cc::ResourcePool::GpuBacking"* %0, i64 0, i32 3
  store i32 %19, i32* %20, align 8
  ret void
}

declare zeroext i1 @_ZN3viz32IsGpuMemoryBufferFormatSupportedENS_14ResourceFormatE(i32) local_unnamed_addr #1

declare i32 @_ZN3gpu22GetBufferTextureTargetEN3gfx11BufferUsageENS0_12BufferFormatERKNS_12CapabilitiesE(i32, i32, %"struct.gpu::Capabilities"* dereferenceable(480)) local_unnamed_addr #1

declare i32 @_ZN3viz12BufferFormatENS_14ResourceFormatE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePoolC2EPN3viz22ClientResourceProviderEPNS1_15ContextProviderE13scoped_refptrIN4base22SingleThreadTaskRunnerEERKNS7_9TimeDeltaEb(%"class.cc::ResourcePool"*, %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::TimeDelta"* nocapture readonly dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::internal::WeakReference", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.base::RepeatingCallback", align 8
  %10 = alloca %"class.base::WeakPtr", align 8
  %11 = ptrtoint %"class.base::SingleThreadTaskRunner"* %3 to i64
  %12 = zext i1 %5 to i8
  %13 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12ResourcePoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 1
  store %"class.viz::ClientResourceProvider"* %1, %"class.viz::ClientResourceProvider"** %15, align 8
  %16 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 2
  store %"class.viz::ContextProvider"* %2, %"class.viz::ContextProvider"** %16, align 8
  %17 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 3
  %18 = bitcast %class.scoped_refptr* %17 to i64*
  store i64 %11, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  %20 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 4, i32 0
  %21 = load i64, i64* %19, align 8
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 5
  store i8 %12, i8* %22, align 8
  %23 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 6
  %24 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN2cc12_GLOBAL__N_117g_next_tracing_idE, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  store i32 %24, i32* %23, align 4
  %25 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 7
  store i64 1, i64* %25, align 8
  %26 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 8
  %27 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15
  %28 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %30 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 0
  %31 = bitcast %"class.std::__1::__tree_node_base"** %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #11
  %32 = bitcast i64* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 42, i1 false)
  %33 = bitcast %"class.base::circular_deque"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 64, i1 false)
  store %"class.std::__1::__tree_end_node"* %29, %"class.std::__1::__tree_end_node"** %30, align 8
  %34 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 18
  %35 = bitcast %"class.std::__1::unique_ptr.34"* %34 to i64*
  %36 = bitcast %"class.std::__1::unique_ptr.34"* %34 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9223372036854775807>, <2 x i64>* %36, align 8
  %37 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 20
  %38 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #11
  %39 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %38, i64 0, i32 0
  store %"class.base::TickClock"* %39, %"class.base::TickClock"** %37, align 8
  %40 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 21
  %41 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %40, i64 0, i32 0
  %42 = ptrtoint %"class.cc::ResourcePool"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %41, i64 %42) #11
  %43 = tail call %"class.base::trace_event::MemoryDumpManager"* @_ZN4base11trace_event17MemoryDumpManager11GetInstanceEv() #11
  %44 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %17, i64 0, i32 0
  %45 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %44, align 8
  %46 = icmp eq %"class.base::SingleThreadTaskRunner"* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %6
  %48 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %45, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 1 monotonic
  br label %50

50:                                               ; preds = %6, %47
  tail call void @_ZN4base11trace_event17MemoryDumpManager20RegisterDumpProviderEPNS0_18MemoryDumpProviderEPKc13scoped_refptrINS_22SingleThreadTaskRunnerEE(%"class.base::trace_event::MemoryDumpManager"* %43, %"class.base::trace_event::MemoryDumpProvider"* %13, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), %"class.base::SingleThreadTaskRunner"* %45) #11
  %51 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 108) #11
  %52 = bitcast %"class.base::RepeatingCallback"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  %53 = bitcast %"class.base::WeakPtr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #11
  %54 = bitcast %"class.base::internal::WeakReference"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11, !noalias !3
  %55 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %40, i64 0, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %7, %"class.base::internal::WeakReferenceOwner"* %55) #11, !noalias !3
  %56 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 21, i32 0, i32 1
  %57 = load i64, i64* %56, align 8, !noalias !3
  %58 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %58, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %7, i64 %57) #11
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11, !noalias !3
  %59 = call i8* @_Znwm(i64 64) #12, !noalias !6
  %60 = bitcast i8* %59 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %60, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN2cc12ResourcePoolEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_7WeakPtrIS4_EEEEEFvS6_EE3RunEPNS0_13BindStateBaseES6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN2cc12ResourcePoolEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN2cc12ResourcePoolEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE) #11, !noalias !6
  %61 = getelementptr inbounds i8, i8* %59, i64 32
  %62 = bitcast i8* %61 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.cc::ResourcePool"*, i32)* @_ZN2cc12ResourcePool16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE to i64), i64 0>, <2 x i64>* %62, align 8, !noalias !6
  %63 = getelementptr inbounds i8, i8* %59, i64 48
  %64 = bitcast i8* %63 to %"class.base::internal::WeakReference"*
  %65 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %64, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %65) #11, !noalias !6
  %66 = getelementptr inbounds i8, i8* %59, i64 56
  %67 = bitcast i8* %66 to i64*
  %68 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8, !noalias !6
  store i64 %69, i64* %67, align 8, !noalias !6
  %70 = bitcast %"class.base::RepeatingCallback"* %9 to i8**
  store i8* %59, i8** %70, align 8, !alias.scope !6
  %71 = call i8* @_Znwm(i64 48) #12
  %72 = bitcast i8* %71 to %"class.base::MemoryPressureListener"*
  call void @_ZN4base22MemoryPressureListenerC1ERKNS_8LocationERKNS_17RepeatingCallbackIFvNS0_19MemoryPressureLevelEEEE(%"class.base::MemoryPressureListener"* nonnull %72, %"class.base::Location"* nonnull dereferenceable(32) %8, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %9) #11
  %73 = ptrtoint i8* %71 to i64
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %34, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.base::MemoryPressureListener"*, %"class.base::MemoryPressureListener"** %74, align 8
  store i64 %73, i64* %35, align 8
  %76 = icmp eq %"class.base::MemoryPressureListener"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %50
  call void @_ZN4base22MemoryPressureListenerD1Ev(%"class.base::MemoryPressureListener"* nonnull %75) #11
  %78 = bitcast %"class.base::MemoryPressureListener"* %75 to i8*
  call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %50, %77
  %80 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %80) #11
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %58) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #1

declare %"class.base::trace_event::MemoryDumpManager"* @_ZN4base11trace_event17MemoryDumpManager11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN4base11trace_event17MemoryDumpManager20RegisterDumpProviderEPNS0_18MemoryDumpProviderEPKc13scoped_refptrINS_22SingleThreadTaskRunnerEE(%"class.base::trace_event::MemoryDumpManager"*, %"class.base::trace_event::MemoryDumpProvider"*, i8*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE(%"class.cc::ResourcePool"*, i32) #0 align 2 {
  %3 = icmp eq i32 %1, 2
  br i1 %3, label %4, label %51

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15
  %6 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %27, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0, i32 1
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %5, i64 0, i32 0
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i64 [ %9, %11 ], [ %25, %19 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = load i64, i64* %12, align 8
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi i64 [ %18, %17 ], [ %15, %14 ]
  %21 = add i64 %20, -1
  %22 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %13, i64 %21) #11
  %23 = tail call %"class.cc::ResourcePool::PoolResource"* @_ZN2cc7PopBackIN4base14circular_dequeINSt3__110unique_ptrINS_12ResourcePool12PoolResourceENS3_14default_deleteIS6_EEEEEEEENT_10value_typeEPSB_(%"class.base::circular_deque"* %5) #11
  tail call void @_ZN2cc12ResourcePool14DeleteResourceENSt3__110unique_ptrINS0_12PoolResourceENS1_14default_deleteIS3_EEEE(%"class.cc::ResourcePool"* %0, %"class.cc::ResourcePool::PoolResource"* %23) #11
  %24 = load i64, i64* %6, align 8
  %25 = load i64, i64* %8, align 8
  %26 = icmp eq i64 %24, %25
  br i1 %26, label %27, label %14

27:                                               ; preds = %19, %4
  %28 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 19, i32 0, i32 0
  store i64 9223372036854775807, i64* %28, align 8
  %29 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 2
  %30 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %29, align 8
  %31 = icmp eq %"class.viz::ContextProvider"* %30, null
  br i1 %31, label %51, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.viz::ContextProvider"* %30 to %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)***
  %34 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)**, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*** %33, align 8
  %35 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %34, i64 12
  %36 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %35, align 8
  %37 = tail call %"class.gpu::gles2::GLES2Interface"* %36(%"class.viz::ContextProvider"* nonnull %30) #11
  %38 = bitcast %"class.gpu::gles2::GLES2Interface"* %37 to void (%"class.gpu::gles2::GLES2Interface"*)***
  %39 = load void (%"class.gpu::gles2::GLES2Interface"*)**, void (%"class.gpu::gles2::GLES2Interface"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*)*, void (%"class.gpu::gles2::GLES2Interface"*)** %39, i64 162
  %41 = load void (%"class.gpu::gles2::GLES2Interface"*)*, void (%"class.gpu::gles2::GLES2Interface"*)** %40, align 8
  tail call void %41(%"class.gpu::gles2::GLES2Interface"* %37) #11
  %42 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %29, align 8
  %43 = bitcast %"class.viz::ContextProvider"* %42 to %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)***
  %44 = load %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)**, %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)*, %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)** %44, i64 7
  %46 = load %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)*, %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)** %45, align 8
  %47 = tail call %"class.gpu::ContextSupport"* %46(%"class.viz::ContextProvider"* %42) #11
  %48 = bitcast %"class.gpu::ContextSupport"* %47 to void (%"class.gpu::ContextSupport"*)***
  %49 = load void (%"class.gpu::ContextSupport"*)**, void (%"class.gpu::ContextSupport"*)*** %48, align 8
  %50 = load void (%"class.gpu::ContextSupport"*)*, void (%"class.gpu::ContextSupport"*)** %49, align 8
  tail call void %50(%"class.gpu::ContextSupport"* %47) #11
  br label %51

51:                                               ; preds = %32, %27, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePoolD2Ev(%"class.cc::ResourcePool"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12ResourcePoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call %"class.base::trace_event::MemoryDumpManager"* @_ZN4base11trace_event17MemoryDumpManager11GetInstanceEv() #11
  %4 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 0
  tail call void @_ZN4base11trace_event17MemoryDumpManager22UnregisterDumpProviderEPNS0_18MemoryDumpProviderE(%"class.base::trace_event::MemoryDumpManager"* %3, %"class.base::trace_event::MemoryDumpProvider"* %4) #11
  %5 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16
  %6 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %33, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15
  %13 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 1
  %14 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0, i32 1
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %12, i64 0, i32 0
  br label %16

16:                                               ; preds = %11, %23
  %17 = tail call %"class.cc::ResourcePool::PoolResource"* @_ZN2cc7PopBackIN4base14circular_dequeINSt3__110unique_ptrINS_12ResourcePool12PoolResourceENS3_14default_deleteIS6_EEEEEEEENT_10value_typeEPSB_(%"class.base::circular_deque"* %5)
  %18 = ptrtoint %"class.cc::ResourcePool::PoolResource"* %17 to i64
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %12, i64 1) #11
  %19 = load i64, i64* %13, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = load i64, i64* %14, align 8
  br label %23

23:                                               ; preds = %16, %21
  %24 = phi i64 [ %22, %21 ], [ %19, %16 ]
  %25 = add i64 %24, -1
  store i64 %25, i64* %13, align 8
  %26 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %15, i64 %25) #11
  %27 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  store i64 %18, i64* %27, align 8
  %28 = load i64, i64* %13, align 8
  %29 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %15, i64 %28) #11
  %30 = load i64, i64* %6, align 8
  %31 = load i64, i64* %8, align 8
  %32 = icmp eq i64 %30, %31
  br i1 %32, label %33, label %16

33:                                               ; preds = %23, %1
  %34 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 8
  %35 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 9
  %36 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 11
  %37 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15
  %38 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 1
  %39 = bitcast i64* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false)
  %40 = load i64, i64* %38, align 8
  %41 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %40, %42
  br i1 %43, label %61, label %44

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 12
  br label %46

46:                                               ; preds = %59, %44
  %47 = phi i64 [ %60, %59 ], [ 0, %44 ]
  %48 = load i64, i64* %45, align 8
  %49 = icmp ugt i64 %48, %47
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = load i64, i64* %36, align 8
  %52 = load i64, i64* %34, align 8
  %53 = icmp ugt i64 %51, %52
  br i1 %53, label %54, label %61

54:                                               ; preds = %50, %46
  %55 = tail call %"class.cc::ResourcePool::PoolResource"* @_ZN2cc7PopBackIN4base14circular_dequeINSt3__110unique_ptrINS_12ResourcePool12PoolResourceENS3_14default_deleteIS6_EEEEEEEENT_10value_typeEPSB_(%"class.base::circular_deque"* %37) #11
  tail call void @_ZN2cc12ResourcePool14DeleteResourceENSt3__110unique_ptrINS0_12PoolResourceENS1_14default_deleteIS3_EEEE(%"class.cc::ResourcePool"* %0, %"class.cc::ResourcePool::PoolResource"* %55) #11
  %56 = load i64, i64* %38, align 8
  %57 = load i64, i64* %41, align 8
  %58 = icmp eq i64 %56, %57
  br i1 %58, label %61, label %59

59:                                               ; preds = %54
  %60 = load i64, i64* %35, align 8
  br label %46

61:                                               ; preds = %50, %54, %33
  %62 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 21, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %62) #11
  %63 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %64 = load %"class.base::MemoryPressureListener"*, %"class.base::MemoryPressureListener"** %63, align 8
  store %"class.base::MemoryPressureListener"* null, %"class.base::MemoryPressureListener"** %63, align 8
  %65 = icmp eq %"class.base::MemoryPressureListener"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %61
  tail call void @_ZN4base22MemoryPressureListenerD1Ev(%"class.base::MemoryPressureListener"* nonnull %64) #11
  %67 = bitcast %"class.base::MemoryPressureListener"* %64 to i8*
  tail call void @_ZdlPv(i8* %67) #12
  br label %68

68:                                               ; preds = %61, %66
  %69 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0
  %70 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %71 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"class.std::__1::__tree_node"**
  %72 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %71, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2cc12ResourcePool12PoolResourceENS_14default_deleteIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %69, %"class.std::__1::__tree_node"* %72) #11
  %73 = load i64, i64* %6, align 8
  %74 = load i64, i64* %8, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE13DestructRangeEmm(%"class.base::circular_deque"* %5, i64 %73, i64 %74) #11
  %75 = bitcast %"class.base::circular_deque"* %5 to i8**
  %76 = load i8*, i8** %75, align 8
  tail call void @free(i8* %76) #11
  %77 = load i64, i64* %38, align 8
  %78 = load i64, i64* %41, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE13DestructRangeEmm(%"class.base::circular_deque"* %37, i64 %77, i64 %78) #11
  %79 = bitcast %"class.base::circular_deque"* %37 to i8**
  %80 = load i8*, i8** %79, align 8
  tail call void @free(i8* %80) #11
  %81 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 3, i32 0
  %82 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %81, align 8
  %83 = icmp eq %"class.base::SingleThreadTaskRunner"* %82, null
  br i1 %83, label %92, label %84

84:                                               ; preds = %68
  %85 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %82, i64 0, i32 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw sub i32* %86, i32 1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %85, i64 -2
  %91 = bitcast %"class.base::RefCountedThreadSafe"* %90 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %91) #11
  br label %92

92:                                               ; preds = %68, %84, %89
  ret void
}

declare void @_ZN4base11trace_event17MemoryDumpManager22UnregisterDumpProviderEPNS0_18MemoryDumpProviderE(%"class.base::trace_event::MemoryDumpManager"*, %"class.base::trace_event::MemoryDumpProvider"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool22DidFinishUsingResourceENSt3__110unique_ptrINS0_12PoolResourceENS1_14default_deleteIS3_EEEE(%"class.cc::ResourcePool"*, %"class.cc::ResourcePool::PoolResource"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.cc::ResourcePool::PoolResource"* %1 to i64
  %4 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %4, i64 1) #11
  %5 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  br label %11

11:                                               ; preds = %8, %2
  %12 = phi i64 [ %10, %8 ], [ %6, %2 ]
  %13 = add i64 %12, -1
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %4, i64 0, i32 0
  %15 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %14, i64 %13) #11
  %16 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  store i64 %3, i64* %16, align 8
  %17 = load i64, i64* %5, align 8
  %18 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %14, i64 %17) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cc::ResourcePool::PoolResource"* @_ZN2cc7PopBackIN4base14circular_dequeINSt3__110unique_ptrINS_12ResourcePool12PoolResourceENS3_14default_deleteIS6_EEEEEEEENT_10value_typeEPSB_(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ %3, %1 ]
  %10 = add i64 %9, -1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %12 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %11, i64 %10) #11
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %13, align 8
  store %"class.cc::ResourcePool::PoolResource"* null, %"class.cc::ResourcePool::PoolResource"** %13, align 8
  %15 = load i64, i64* %2, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  br label %20

20:                                               ; preds = %8, %17
  %21 = phi i64 [ %19, %17 ], [ %15, %8 ]
  %22 = add i64 %21, -1
  store i64 %22, i64* %2, align 8
  %23 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %11, i64 %22) #11
  %24 = load i64, i64* %2, align 8
  %25 = add i64 %24, 1
  %26 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %11, i64 %25) #11
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEE13DestructRangeIS9_Li0EEEvPS9_SC_(%"class.base::internal::VectorBuffer"* %11, %"class.std::__1::unique_ptr"* %23, %"class.std::__1::unique_ptr"* %26) #11
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %0) #11
  ret %"class.cc::ResourcePool::PoolResource"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool22SetResourceUsageLimitsEmm(%"class.cc::ResourcePool"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 8
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 9
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 11
  %7 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15
  %8 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 12
  br label %15

15:                                               ; preds = %28, %13
  %16 = phi i64 [ %29, %28 ], [ %2, %13 ]
  %17 = load i64, i64* %14, align 8
  %18 = icmp ugt i64 %17, %16
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = load i64, i64* %6, align 8
  %21 = load i64, i64* %4, align 8
  %22 = icmp ugt i64 %20, %21
  br i1 %22, label %23, label %30

23:                                               ; preds = %19, %15
  %24 = tail call %"class.cc::ResourcePool::PoolResource"* @_ZN2cc7PopBackIN4base14circular_dequeINSt3__110unique_ptrINS_12ResourcePool12PoolResourceENS3_14default_deleteIS6_EEEEEEEENT_10value_typeEPSB_(%"class.base::circular_deque"* %7) #11
  tail call void @_ZN2cc12ResourcePool14DeleteResourceENSt3__110unique_ptrINS0_12PoolResourceENS1_14default_deleteIS3_EEEE(%"class.cc::ResourcePool"* %0, %"class.cc::ResourcePool::PoolResource"* %24) #11
  %25 = load i64, i64* %8, align 8
  %26 = load i64, i64* %10, align 8
  %27 = icmp eq i64 %25, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = load i64, i64* %5, align 8
  br label %15

30:                                               ; preds = %19, %23, %3
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePoolD0Ev(%"class.cc::ResourcePool"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2cc12ResourcePoolD2Ev(%"class.cc::ResourcePool"* %0) #11
  %2 = bitcast %"class.cc::ResourcePool"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::ResourcePool::PoolResource"* @_ZN2cc12ResourcePool13ReuseResourceERKN3gfx4SizeEN3viz14ResourceFormatERKNS1_10ColorSpaceE(%"class.cc::ResourcePool"*, %"class.gfx::Size"* dereferenceable(8), i32, %"class.gfx::ColorSpace"* dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15
  %6 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %204, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %15 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %16 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0, i32 1
  br label %17

17:                                               ; preds = %11, %172
  %18 = phi i64 [ %7, %11 ], [ %176, %172 ]
  %19 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %12, i64 %18) #11
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %20, align 8
  %22 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %21, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, %2
  br i1 %24, label %25, label %172

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %21, i64 0, i32 1
  %27 = load i8, i8* %13, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = load i32, i32* %14, align 4
  %31 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %26, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %51, label %172

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %26, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* %14, align 4
  %38 = icmp slt i32 %36, %37
  br i1 %38, label %172, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %21, i64 0, i32 1, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = load i32, i32* %15, align 4
  %43 = icmp slt i32 %41, %42
  br i1 %43, label %172, label %44

44:                                               ; preds = %39
  %45 = tail call i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"* %26) #11
  %46 = sitofp i32 %45 to float
  %47 = tail call i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"* %1) #11
  %48 = sitofp i32 %47 to float
  %49 = fdiv float %46, %48
  %50 = fcmp ule float %49, 2.000000e+00
  br i1 %50, label %56, label %172

51:                                               ; preds = %29
  %52 = load i32, i32* %15, align 4
  %53 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %21, i64 0, i32 1, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %172

56:                                               ; preds = %44, %51
  %57 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %21, i64 0, i32 3
  %58 = tail call zeroext i1 @_ZNK3gfx10ColorSpaceneERKS0_(%"class.gfx::ColorSpace"* %57, %"class.gfx::ColorSpace"* dereferenceable(68) %3) #11
  br i1 %58, label %172, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %21, i64 0, i32 2
  %61 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %12, i64 %18) #11
  %62 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17
  %63 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %21, i64 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to %"class.std::__1::__tree_node"**
  %67 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node"* %67, null
  br i1 %68, label %97, label %69

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %71

71:                                               ; preds = %93, %69
  %72 = phi %"class.std::__1::__tree_node"* [ %96, %93 ], [ %67, %69 ]
  %73 = phi %"class.std::__1::__tree_node_base"** [ %95, %93 ], [ %70, %69 ]
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %72, i64 0, i32 1, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp ult i64 %64, %75
  br i1 %76, label %77, label %83

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %72, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, null
  br i1 %80, label %81, label %93

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %72, i64 0, i32 0, i32 0
  br label %99

83:                                               ; preds = %71
  %84 = icmp ult i64 %75, %64
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %72, i64 0, i32 0, i32 1
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %72, i64 0, i32 0, i32 0
  br label %99

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %72, i64 0, i32 0, i32 0
  br label %99

93:                                               ; preds = %85, %77
  %94 = phi %"class.std::__1::__tree_node_base"* [ %79, %77 ], [ %87, %85 ]
  %95 = phi %"class.std::__1::__tree_node_base"** [ %78, %77 ], [ %86, %85 ]
  %96 = bitcast %"class.std::__1::__tree_node_base"* %94 to %"class.std::__1::__tree_node"*
  br label %71

97:                                               ; preds = %59
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 0, i32 0
  br label %99

99:                                               ; preds = %97, %91, %89, %81
  %100 = phi %"class.std::__1::__tree_end_node"* [ %65, %97 ], [ %82, %81 ], [ %90, %89 ], [ %92, %91 ]
  %101 = phi %"class.std::__1::__tree_node_base"** [ %98, %97 ], [ %78, %81 ], [ %86, %89 ], [ %73, %91 ]
  %102 = bitcast %"class.std::__1::__tree_node_base"** %101 to %"class.std::__1::__tree_node"**
  %103 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node"* %103, null
  br i1 %104, label %105, label %132

105:                                              ; preds = %99
  %106 = tail call i8* @_Znwm(i64 48) #12, !noalias !11
  %107 = getelementptr inbounds i8, i8* %106, i64 32
  %108 = bitcast i8* %107 to i64*
  store i64 %64, i64* %108, align 8, !noalias !11
  %109 = getelementptr inbounds i8, i8* %106, i64 40
  %110 = bitcast i8* %109 to i64*
  store i64 0, i64* %110, align 8, !noalias !11
  %111 = bitcast i8* %106 to %"class.std::__1::__tree_node"*
  %112 = bitcast i8* %106 to %"class.std::__1::__tree_node_base"*
  %113 = getelementptr inbounds i8, i8* %106, i64 16
  %114 = bitcast i8* %113 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %100, %"class.std::__1::__tree_end_node"** %114, align 8
  %115 = bitcast %"class.std::__1::__tree_node_base"** %101 to i8**
  store i8* %106, i8** %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %62, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 0, i32 0
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %105
  %122 = ptrtoint %"class.std::__1::__tree_node_base"* %119 to i64
  %123 = bitcast %"class.std::__1::map"* %62 to i64*
  store i64 %122, i64* %123, align 8
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  br label %125

125:                                              ; preds = %121, %105
  %126 = phi %"class.std::__1::__tree_node_base"* [ %112, %105 ], [ %124, %121 ]
  %127 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0, i32 0
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %128, %"class.std::__1::__tree_node_base"* %126) #11
  %129 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 2, i32 0, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, 1
  store i64 %131, i64* %129, align 8
  br label %132

132:                                              ; preds = %99, %125
  %133 = phi %"class.std::__1::__tree_node"* [ %111, %125 ], [ %103, %99 ]
  %134 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 1, i32 0, i32 1
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr"* %61 to i64*
  %137 = load i64, i64* %136, align 8
  store %"class.cc::ResourcePool::PoolResource"* null, %"class.cc::ResourcePool::PoolResource"** %135, align 8
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %134, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %138, align 8
  %140 = bitcast %"class.std::__1::unique_ptr"* %134 to i64*
  store i64 %137, i64* %140, align 8
  %141 = icmp eq %"class.cc::ResourcePool::PoolResource"* %139, null
  br i1 %141, label %162, label %142

142:                                              ; preds = %132
  %143 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %139, i64 0, i32 10, i32 0, i32 0, i32 0
  %144 = load %"class.cc::ResourcePool::SoftwareBacking"*, %"class.cc::ResourcePool::SoftwareBacking"** %143, align 8
  store %"class.cc::ResourcePool::SoftwareBacking"* null, %"class.cc::ResourcePool::SoftwareBacking"** %143, align 8
  %145 = icmp eq %"class.cc::ResourcePool::SoftwareBacking"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %142
  %147 = bitcast %"class.cc::ResourcePool::SoftwareBacking"* %144 to void (%"class.cc::ResourcePool::SoftwareBacking"*)***
  %148 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)**, void (%"class.cc::ResourcePool::SoftwareBacking"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %148, i64 1
  %150 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %149, align 8
  tail call void %150(%"class.cc::ResourcePool::SoftwareBacking"* nonnull %144) #11
  br label %151

151:                                              ; preds = %146, %142
  %152 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %139, i64 0, i32 9, i32 0, i32 0, i32 0
  %153 = load %"class.cc::ResourcePool::GpuBacking"*, %"class.cc::ResourcePool::GpuBacking"** %152, align 8
  store %"class.cc::ResourcePool::GpuBacking"* null, %"class.cc::ResourcePool::GpuBacking"** %152, align 8
  %154 = icmp eq %"class.cc::ResourcePool::GpuBacking"* %153, null
  br i1 %154, label %160, label %155

155:                                              ; preds = %151
  %156 = bitcast %"class.cc::ResourcePool::GpuBacking"* %153 to void (%"class.cc::ResourcePool::GpuBacking"*)***
  %157 = load void (%"class.cc::ResourcePool::GpuBacking"*)**, void (%"class.cc::ResourcePool::GpuBacking"*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %157, i64 1
  %159 = load void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %158, align 8
  tail call void %159(%"class.cc::ResourcePool::GpuBacking"* nonnull %153) #11
  br label %160

160:                                              ; preds = %155, %151
  %161 = bitcast %"class.cc::ResourcePool::PoolResource"* %139 to i8*
  tail call void @_ZdlPv(i8* %161) #12
  br label %162

162:                                              ; preds = %132, %160
  %163 = load i64, i64* %6, align 8
  %164 = icmp ult i64 %18, %163
  br i1 %164, label %168, label %165

165:                                              ; preds = %162
  %166 = sub i64 %18, %163
  %167 = load i64, i64* %16, align 8
  br label %179

168:                                              ; preds = %162
  %169 = load i64, i64* %16, align 8
  %170 = sub i64 %18, %163
  %171 = add i64 %170, %169
  br label %179

172:                                              ; preds = %29, %34, %39, %17, %51, %56, %44
  %173 = add i64 %18, 1
  %174 = load i64, i64* %16, align 8
  %175 = icmp eq i64 %173, %174
  %176 = select i1 %175, i64 0, i64 %173
  %177 = load i64, i64* %8, align 8
  %178 = icmp eq i64 %176, %177
  br i1 %178, label %204, label %17

179:                                              ; preds = %165, %168
  %180 = phi i64 [ %167, %165 ], [ %169, %168 ]
  %181 = phi i64 [ %166, %165 ], [ %171, %168 ]
  %182 = add i64 %163, 1
  %183 = add i64 %182, %181
  %184 = urem i64 %183, %180
  %185 = tail call { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE5eraseENS_8internal29circular_deque_const_iteratorIS8_EESC_(%"class.base::circular_deque"* %5, %"class.base::circular_deque"* %5, i64 %18, %"class.base::circular_deque"* %5, i64 %184) #11
  %186 = load i32, i32* %60, align 4
  %187 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %26, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = tail call i32 @_ZN3viz12BitsPerPixelENS_14ResourceFormatE(i32 %186) #11
  %190 = sext i32 %189 to i64
  %191 = sext i32 %188 to i64
  %192 = mul nsw i64 %190, %191
  %193 = icmp eq i64 %192, 0
  %194 = add nsw i64 %192, 7
  %195 = lshr i64 %194, 3
  %196 = select i1 %193, i64 0, i64 %195
  %197 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %21, i64 0, i32 1, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = sext i32 %198 to i64
  %200 = mul i64 %196, %199
  %201 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 10
  %202 = load i64, i64* %201, align 8
  %203 = add i64 %200, %202
  store i64 %203, i64* %201, align 8
  br label %204

204:                                              ; preds = %172, %4, %179
  %205 = phi %"class.cc::ResourcePool::PoolResource"* [ %21, %179 ], [ null, %4 ], [ null, %172 ]
  ret %"class.cc::ResourcePool::PoolResource"* %205
}

declare zeroext i1 @_ZNK3gfx10ColorSpaceneERKS0_(%"class.gfx::ColorSpace"*, %"class.gfx::ColorSpace"* dereferenceable(68)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::ResourcePool::PoolResource"* @_ZN2cc12ResourcePool14CreateResourceERKN3gfx4SizeEN3viz14ResourceFormatERKNS1_10ColorSpaceE(%"class.cc::ResourcePool"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, %"class.gfx::ColorSpace"* nocapture readonly dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 7
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 1
  store i64 %7, i64* %5, align 8
  %8 = tail call i8* @_Znwm(i64 144) #12
  %9 = bitcast i8* %8 to %"class.cc::ResourcePool::PoolResource"*
  %10 = bitcast i8* %8 to i64*
  store i64 %6, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast %"class.gfx::Size"* %1 to i64*
  %13 = bitcast i8* %11 to i64*
  %14 = load i64, i64* %12, align 4
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i32*
  store i32 %2, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 20
  %18 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 68, i1 false) #11
  %19 = getelementptr inbounds i8, i8* %8, i64 88
  %20 = getelementptr inbounds i8, i8* %8, i64 124
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 33, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 20, i1 false) #11
  %21 = ptrtoint i8* %8 to i64
  %22 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %23 = tail call i32 @_ZN3viz12BitsPerPixelENS_14ResourceFormatE(i32 %2) #11
  %24 = sext i32 %23 to i64
  %25 = shl i64 %14, 32
  %26 = ashr exact i64 %25, 32
  %27 = mul nsw i64 %26, %24
  %28 = icmp eq i64 %27, 0
  %29 = add nsw i64 %27, 7
  %30 = lshr i64 %29, 3
  %31 = select i1 %28, i64 0, i64 %30
  %32 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  %35 = mul i64 %31, %34
  %36 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 11
  %37 = bitcast i64* %36 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 8
  %39 = insertelement <2 x i64> <i64 undef, i64 1>, i64 %35, i32 0
  %40 = add <2 x i64> %39, %38
  %41 = bitcast i64* %36 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %41, align 8
  %42 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17
  %43 = load i64, i64* %10, align 8
  %44 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_node"**
  %46 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node"* %46, null
  br i1 %47, label %76, label %48

48:                                               ; preds = %4
  %49 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %50

50:                                               ; preds = %72, %48
  %51 = phi %"class.std::__1::__tree_node"* [ %75, %72 ], [ %46, %48 ]
  %52 = phi %"class.std::__1::__tree_node_base"** [ %74, %72 ], [ %49, %48 ]
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 1, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp ult i64 %43, %54
  br i1 %55, label %56, label %62

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %60, label %72

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  br label %78

62:                                               ; preds = %50
  %63 = icmp ult i64 %54, %43
  br i1 %63, label %64, label %70

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  br label %78

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  br label %78

72:                                               ; preds = %64, %56
  %73 = phi %"class.std::__1::__tree_node_base"* [ %58, %56 ], [ %66, %64 ]
  %74 = phi %"class.std::__1::__tree_node_base"** [ %57, %56 ], [ %65, %64 ]
  %75 = bitcast %"class.std::__1::__tree_node_base"* %73 to %"class.std::__1::__tree_node"*
  br label %50

76:                                               ; preds = %4
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 0, i32 0
  br label %78

78:                                               ; preds = %76, %70, %68, %60
  %79 = phi %"class.std::__1::__tree_end_node"* [ %44, %76 ], [ %61, %60 ], [ %69, %68 ], [ %71, %70 ]
  %80 = phi %"class.std::__1::__tree_node_base"** [ %77, %76 ], [ %57, %60 ], [ %65, %68 ], [ %52, %70 ]
  %81 = bitcast %"class.std::__1::__tree_node_base"** %80 to %"class.std::__1::__tree_node"**
  %82 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node"* %82, null
  br i1 %83, label %84, label %111

84:                                               ; preds = %78
  %85 = tail call i8* @_Znwm(i64 48) #12, !noalias !14
  %86 = getelementptr inbounds i8, i8* %85, i64 32
  %87 = bitcast i8* %86 to i64*
  store i64 %43, i64* %87, align 8, !noalias !14
  %88 = getelementptr inbounds i8, i8* %85, i64 40
  %89 = bitcast i8* %88 to i64*
  store i64 0, i64* %89, align 8, !noalias !14
  %90 = bitcast i8* %85 to %"class.std::__1::__tree_node"*
  %91 = bitcast i8* %85 to %"class.std::__1::__tree_node_base"*
  %92 = getelementptr inbounds i8, i8* %85, i64 16
  %93 = bitcast i8* %92 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %79, %"class.std::__1::__tree_end_node"** %93, align 8
  %94 = bitcast %"class.std::__1::__tree_node_base"** %80 to i8**
  store i8* %85, i8** %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %42, i64 0, i32 0, i32 0
  %96 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %84
  %101 = ptrtoint %"class.std::__1::__tree_node_base"* %98 to i64
  %102 = bitcast %"class.std::__1::map"* %42 to i64*
  store i64 %101, i64* %102, align 8
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  br label %104

104:                                              ; preds = %100, %84
  %105 = phi %"class.std::__1::__tree_node_base"* [ %91, %84 ], [ %103, %100 ]
  %106 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %107, %"class.std::__1::__tree_node_base"* %105) #11
  %108 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 2, i32 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = add i64 %109, 1
  store i64 %110, i64* %108, align 8
  br label %111

111:                                              ; preds = %78, %104
  %112 = phi %"class.std::__1::__tree_node"* [ %90, %104 ], [ %82, %78 ]
  %113 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %112, i64 0, i32 1, i32 0, i32 1
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %114, align 8
  %116 = bitcast %"class.std::__1::unique_ptr"* %113 to i64*
  store i64 %21, i64* %116, align 8
  %117 = icmp eq %"class.cc::ResourcePool::PoolResource"* %115, null
  br i1 %117, label %138, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %115, i64 0, i32 10, i32 0, i32 0, i32 0
  %120 = load %"class.cc::ResourcePool::SoftwareBacking"*, %"class.cc::ResourcePool::SoftwareBacking"** %119, align 8
  store %"class.cc::ResourcePool::SoftwareBacking"* null, %"class.cc::ResourcePool::SoftwareBacking"** %119, align 8
  %121 = icmp eq %"class.cc::ResourcePool::SoftwareBacking"* %120, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %118
  %123 = bitcast %"class.cc::ResourcePool::SoftwareBacking"* %120 to void (%"class.cc::ResourcePool::SoftwareBacking"*)***
  %124 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)**, void (%"class.cc::ResourcePool::SoftwareBacking"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %124, i64 1
  %126 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %125, align 8
  tail call void %126(%"class.cc::ResourcePool::SoftwareBacking"* nonnull %120) #11
  br label %127

127:                                              ; preds = %122, %118
  %128 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %115, i64 0, i32 9, i32 0, i32 0, i32 0
  %129 = load %"class.cc::ResourcePool::GpuBacking"*, %"class.cc::ResourcePool::GpuBacking"** %128, align 8
  store %"class.cc::ResourcePool::GpuBacking"* null, %"class.cc::ResourcePool::GpuBacking"** %128, align 8
  %130 = icmp eq %"class.cc::ResourcePool::GpuBacking"* %129, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %127
  %132 = bitcast %"class.cc::ResourcePool::GpuBacking"* %129 to void (%"class.cc::ResourcePool::GpuBacking"*)***
  %133 = load void (%"class.cc::ResourcePool::GpuBacking"*)**, void (%"class.cc::ResourcePool::GpuBacking"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %133, i64 1
  %135 = load void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %134, align 8
  tail call void %135(%"class.cc::ResourcePool::GpuBacking"* nonnull %129) #11
  br label %136

136:                                              ; preds = %131, %127
  %137 = bitcast %"class.cc::ResourcePool::PoolResource"* %115 to i8*
  tail call void @_ZdlPv(i8* %137) #12
  br label %138

138:                                              ; preds = %136, %111
  %139 = load i32, i32* %22, align 4
  %140 = tail call i32 @_ZN3viz12BitsPerPixelENS_14ResourceFormatE(i32 %2) #11
  %141 = sext i32 %140 to i64
  %142 = sext i32 %139 to i64
  %143 = mul nsw i64 %141, %142
  %144 = icmp eq i64 %143, 0
  %145 = add nsw i64 %143, 7
  %146 = lshr i64 %145, 3
  %147 = select i1 %144, i64 0, i64 %146
  %148 = load i32, i32* %32, align 4
  %149 = sext i32 %148 to i64
  %150 = mul i64 %147, %149
  %151 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 10
  %152 = load i64, i64* %151, align 8
  %153 = add i64 %150, %152
  store i64 %153, i64* %151, align 8
  ret %"class.cc::ResourcePool::PoolResource"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool15AcquireResourceERKN3gfx4SizeEN3viz14ResourceFormatERKNS1_10ColorSpaceE(%"class.cc::ResourcePool::InUsePoolResource"* noalias nocapture sret, %"class.cc::ResourcePool"*, %"class.gfx::Size"* dereferenceable(8), i32, %"class.gfx::ColorSpace"* dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %6 = tail call %"class.cc::ResourcePool::PoolResource"* @_ZN2cc12ResourcePool13ReuseResourceERKN3gfx4SizeEN3viz14ResourceFormatERKNS1_10ColorSpaceE(%"class.cc::ResourcePool"* %1, %"class.gfx::Size"* dereferenceable(8) %2, i32 %3, %"class.gfx::ColorSpace"* dereferenceable(68) %4)
  %7 = icmp eq %"class.cc::ResourcePool::PoolResource"* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %5
  %9 = tail call %"class.cc::ResourcePool::PoolResource"* @_ZN2cc12ResourcePool14CreateResourceERKN3gfx4SizeEN3viz14ResourceFormatERKNS1_10ColorSpaceE(%"class.cc::ResourcePool"* %1, %"class.gfx::Size"* dereferenceable(8) %2, i32 %3, %"class.gfx::ColorSpace"* dereferenceable(68) %4)
  br label %10

10:                                               ; preds = %5, %8
  %11 = phi %"class.cc::ResourcePool::PoolResource"* [ %6, %5 ], [ %9, %8 ]
  %12 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 2
  %13 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %12, align 8
  %14 = icmp ne %"class.viz::ContextProvider"* %13, null
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %"class.cc::ResourcePool::InUsePoolResource", %"class.cc::ResourcePool::InUsePoolResource"* %0, i64 0, i32 0
  store i8 %15, i8* %16, align 8
  %17 = getelementptr inbounds %"class.cc::ResourcePool::InUsePoolResource", %"class.cc::ResourcePool::InUsePoolResource"* %0, i64 0, i32 1
  store %"class.cc::ResourcePool::PoolResource"* %11, %"class.cc::ResourcePool::PoolResource"** %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool34TryAcquireResourceForPartialRasterEmRKN3gfx4RectEmPS2_RKNS1_10ColorSpaceE(%"class.cc::ResourcePool::InUsePoolResource"* noalias nocapture sret, %"class.cc::ResourcePool"*, i64, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), i64, %"class.gfx::Rect"* nocapture, %"class.gfx::ColorSpace"* dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.gfx::Rect", align 4
  %9 = alloca %"class.gfx::Rect", align 4
  %10 = alloca %"class.gfx::Rect", align 4
  %11 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 16, i1 false)
  %12 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 15
  %13 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 15, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 15, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, %14
  br i1 %17, label %23, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %12, i64 0, i32 0
  %20 = bitcast %"class.gfx::Rect"* %9 to i8*
  %21 = bitcast %"class.gfx::Rect"* %3 to i8*
  %22 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 15, i32 0, i32 1
  br label %36

23:                                               ; preds = %76, %7
  %24 = phi %"class.base::circular_deque"* [ %12, %7 ], [ %77, %76 ]
  %25 = phi i64 [ %14, %7 ], [ %78, %76 ]
  %26 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 16, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 16, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %27, %29
  br i1 %30, label %86, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 16, i32 0
  %33 = bitcast %"class.gfx::Rect"* %8 to i8*
  %34 = bitcast %"class.gfx::Rect"* %3 to i8*
  %35 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 16, i32 0, i32 1
  br label %95

36:                                               ; preds = %18, %76
  %37 = phi i32 [ 0, %18 ], [ %79, %76 ]
  %38 = phi i64 [ %14, %18 ], [ %78, %76 ]
  %39 = phi %"class.base::circular_deque"* [ %12, %18 ], [ %77, %76 ]
  %40 = phi i64 [ %16, %18 ], [ %83, %76 ]
  %41 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %19, i64 %40) #11
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %42, align 8
  %44 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %43, i64 0, i32 3
  %45 = call zeroext i1 @_ZNK3gfx10ColorSpaceneERKS0_(%"class.gfx::ColorSpace"* %44, %"class.gfx::ColorSpace"* dereferenceable(68) %6) #11
  br i1 %45, label %76, label %46

46:                                               ; preds = %36
  %47 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %43, i64 0, i32 4
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %4
  br i1 %49, label %50, label %76

50:                                               ; preds = %46
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 4 %21, i64 16, i1 false) #11
  %51 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %43, i64 0, i32 6
  %52 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %43, i64 0, i32 6, i32 1, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %43, i64 0, i32 6, i32 1, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %55
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %9, %"class.gfx::Rect"* dereferenceable(16) %51) #11
  br label %60

60:                                               ; preds = %50, %55, %59
  store i64 %2, i64* %47, align 8
  %61 = bitcast %"class.gfx::Rect"* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* nonnull align 4 %20, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #11
  %62 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %43, i64 0, i32 6, i32 1
  %63 = call i64 @_ZNK3gfx4Size14GetCheckedAreaEv(%"class.gfx::Size"* %62) #11
  %64 = trunc i64 %63 to i8
  %65 = lshr i64 %63, 32
  %66 = trunc i64 %65 to i32
  %67 = icmp eq i8 %64, 0
  %68 = select i1 %67, i32 2147483647, i32 %66, !prof !17
  %69 = load i64, i64* %13, align 8
  %70 = icmp eq i64 %38, %69
  %71 = icmp slt i32 %68, %37
  %72 = or i1 %70, %71
  %73 = select i1 %72, %"class.base::circular_deque"* %12, %"class.base::circular_deque"* %39
  %74 = select i1 %72, i64 %40, i64 %38
  %75 = select i1 %72, i32 %68, i32 %37
  br label %76

76:                                               ; preds = %60, %46, %36
  %77 = phi %"class.base::circular_deque"* [ %39, %36 ], [ %39, %46 ], [ %73, %60 ]
  %78 = phi i64 [ %38, %36 ], [ %38, %46 ], [ %74, %60 ]
  %79 = phi i32 [ %37, %36 ], [ %37, %46 ], [ %75, %60 ]
  %80 = add i64 %40, 1
  %81 = load i64, i64* %22, align 8
  %82 = icmp eq i64 %80, %81
  %83 = select i1 %82, i64 0, i64 %80
  %84 = load i64, i64* %13, align 8
  %85 = icmp eq i64 %83, %84
  br i1 %85, label %23, label %36

86:                                               ; preds = %115, %23
  %87 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 17
  %88 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %87, i64 0, i32 0, i32 0
  %89 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %88, align 8
  %90 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %91 = icmp eq %"class.std::__1::__tree_end_node"* %89, %90
  br i1 %91, label %121, label %92

92:                                               ; preds = %86
  %93 = bitcast %"class.gfx::Rect"* %10 to i8*
  %94 = bitcast %"class.gfx::Rect"* %3 to i8*
  br label %124

95:                                               ; preds = %31, %115
  %96 = phi i64 [ %27, %31 ], [ %119, %115 ]
  %97 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %32, i64 %96) #11
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %98, align 8
  %100 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %99, i64 0, i32 4
  %101 = load i64, i64* %100, align 8
  %102 = icmp eq i64 %101, %4
  br i1 %102, label %103, label %115

103:                                              ; preds = %95
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %34, i64 16, i1 false) #11
  %104 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %99, i64 0, i32 6
  %105 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %99, i64 0, i32 6, i32 1, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %113, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %99, i64 0, i32 6, i32 1, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %113, label %112

112:                                              ; preds = %108
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %8, %"class.gfx::Rect"* dereferenceable(16) %104) #11
  br label %113

113:                                              ; preds = %103, %108, %112
  store i64 %2, i64* %100, align 8
  %114 = bitcast %"class.gfx::Rect"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* nonnull align 4 %33, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #11
  br label %115

115:                                              ; preds = %113, %95
  %116 = add i64 %96, 1
  %117 = load i64, i64* %35, align 8
  %118 = icmp eq i64 %116, %117
  %119 = select i1 %118, i64 0, i64 %116
  %120 = icmp eq i64 %119, %29
  br i1 %120, label %86, label %95

121:                                              ; preds = %172, %86
  %122 = load i64, i64* %13, align 8
  %123 = icmp eq i64 %25, %122
  br i1 %123, label %326, label %175

124:                                              ; preds = %92, %172
  %125 = phi %"class.std::__1::__tree_end_node"* [ %89, %92 ], [ %173, %172 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 5
  %127 = bitcast %"class.std::__1::__tree_end_node"* %126 to %"class.cc::ResourcePool::PoolResource"**
  %128 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %127, align 8
  %129 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %128, i64 0, i32 4
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq i64 %130, %4
  br i1 %131, label %132, label %144

132:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %93, i8* align 4 %94, i64 16, i1 false) #11
  %133 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %128, i64 0, i32 6
  %134 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %128, i64 0, i32 6, i32 1, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %142, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %128, i64 0, i32 6, i32 1, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %142, label %141

141:                                              ; preds = %137
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %10, %"class.gfx::Rect"* dereferenceable(16) %133) #11
  br label %142

142:                                              ; preds = %132, %137, %141
  store i64 %2, i64* %129, align 8
  %143 = bitcast %"class.gfx::Rect"* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* nonnull align 4 %93, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #11
  br label %144

144:                                              ; preds = %142, %124
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 1, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, null
  br i1 %147, label %148, label %156

148:                                              ; preds = %144
  %149 = bitcast %"class.std::__1::__tree_end_node"* %125 to %"class.std::__1::__tree_node_base"*
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 2
  %151 = bitcast %"class.std::__1::__tree_end_node"* %150 to %"class.std::__1::__tree_end_node"**
  %152 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %151, align 8
  %153 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %152, i64 0, i32 0
  %154 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %154, %149
  br i1 %155, label %172, label %163

156:                                              ; preds = %144, %156
  %157 = phi %"class.std::__1::__tree_node_base"* [ %159, %156 ], [ %146, %144 ]
  %158 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %157, i64 0, i32 0, i32 0
  %159 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %158, align 8
  %160 = icmp eq %"class.std::__1::__tree_node_base"* %159, null
  br i1 %160, label %161, label %156

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %157, i64 0, i32 0
  br label %172

163:                                              ; preds = %148, %163
  %164 = phi %"class.std::__1::__tree_end_node"** [ %167, %163 ], [ %151, %148 ]
  %165 = bitcast %"class.std::__1::__tree_end_node"** %164 to %"class.std::__1::__tree_node_base"**
  %166 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %166, i64 0, i32 2
  %168 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %167, align 8
  %169 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %168, i64 0, i32 0
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %169, align 8
  %171 = icmp eq %"class.std::__1::__tree_node_base"* %170, %166
  br i1 %171, label %172, label %163

172:                                              ; preds = %163, %148, %161
  %173 = phi %"class.std::__1::__tree_end_node"* [ %162, %161 ], [ %152, %148 ], [ %168, %163 ]
  %174 = icmp eq %"class.std::__1::__tree_end_node"* %173, %90
  br i1 %174, label %121, label %124

175:                                              ; preds = %121
  %176 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %24, i64 0, i32 0
  %177 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %176, i64 %25) #11
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %178, align 8
  %180 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %176, i64 %25) #11
  %181 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %179, i64 0, i32 0
  %182 = load i64, i64* %181, align 8
  %183 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_node"**
  %184 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %183, align 8
  %185 = icmp eq %"class.std::__1::__tree_node"* %184, null
  br i1 %185, label %214, label %186

186:                                              ; preds = %175
  %187 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %188

188:                                              ; preds = %210, %186
  %189 = phi %"class.std::__1::__tree_node"* [ %213, %210 ], [ %184, %186 ]
  %190 = phi %"class.std::__1::__tree_node_base"** [ %212, %210 ], [ %187, %186 ]
  %191 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %189, i64 0, i32 1, i32 0, i32 0
  %192 = load i64, i64* %191, align 8
  %193 = icmp ult i64 %182, %192
  br i1 %193, label %194, label %200

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %189, i64 0, i32 0, i32 0, i32 0
  %196 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %195, align 8
  %197 = icmp eq %"class.std::__1::__tree_node_base"* %196, null
  br i1 %197, label %198, label %210

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %189, i64 0, i32 0, i32 0
  br label %216

200:                                              ; preds = %188
  %201 = icmp ult i64 %192, %182
  br i1 %201, label %202, label %208

202:                                              ; preds = %200
  %203 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %189, i64 0, i32 0, i32 1
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, null
  br i1 %205, label %206, label %210

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %189, i64 0, i32 0, i32 0
  br label %216

208:                                              ; preds = %200
  %209 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %189, i64 0, i32 0, i32 0
  br label %216

210:                                              ; preds = %202, %194
  %211 = phi %"class.std::__1::__tree_node_base"* [ %196, %194 ], [ %204, %202 ]
  %212 = phi %"class.std::__1::__tree_node_base"** [ %195, %194 ], [ %203, %202 ]
  %213 = bitcast %"class.std::__1::__tree_node_base"* %211 to %"class.std::__1::__tree_node"*
  br label %188

214:                                              ; preds = %175
  %215 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 0, i32 0
  br label %216

216:                                              ; preds = %214, %208, %206, %198
  %217 = phi %"class.std::__1::__tree_end_node"* [ %90, %214 ], [ %199, %198 ], [ %207, %206 ], [ %209, %208 ]
  %218 = phi %"class.std::__1::__tree_node_base"** [ %215, %214 ], [ %195, %198 ], [ %203, %206 ], [ %190, %208 ]
  %219 = bitcast %"class.std::__1::__tree_node_base"** %218 to %"class.std::__1::__tree_node"**
  %220 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %219, align 8
  %221 = icmp eq %"class.std::__1::__tree_node"* %220, null
  br i1 %221, label %222, label %248

222:                                              ; preds = %216
  %223 = call i8* @_Znwm(i64 48) #12, !noalias !18
  %224 = getelementptr inbounds i8, i8* %223, i64 32
  %225 = bitcast i8* %224 to i64*
  store i64 %182, i64* %225, align 8, !noalias !18
  %226 = getelementptr inbounds i8, i8* %223, i64 40
  %227 = bitcast i8* %226 to i64*
  store i64 0, i64* %227, align 8, !noalias !18
  %228 = bitcast i8* %223 to %"class.std::__1::__tree_node"*
  %229 = bitcast i8* %223 to %"class.std::__1::__tree_node_base"*
  %230 = getelementptr inbounds i8, i8* %223, i64 16
  %231 = bitcast i8* %230 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %223, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %217, %"class.std::__1::__tree_end_node"** %231, align 8
  %232 = bitcast %"class.std::__1::__tree_node_base"** %218 to i8**
  store i8* %223, i8** %232, align 8
  %233 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %88, align 8
  %234 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %233, i64 0, i32 0
  %235 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %234, align 8
  %236 = icmp eq %"class.std::__1::__tree_node_base"* %235, null
  br i1 %236, label %241, label %237

237:                                              ; preds = %222
  %238 = ptrtoint %"class.std::__1::__tree_node_base"* %235 to i64
  %239 = bitcast %"class.std::__1::map"* %87 to i64*
  store i64 %238, i64* %239, align 8
  %240 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %218, align 8
  br label %241

241:                                              ; preds = %237, %222
  %242 = phi %"class.std::__1::__tree_node_base"* [ %229, %222 ], [ %240, %237 ]
  %243 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0, i32 0
  %244 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %243, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %244, %"class.std::__1::__tree_node_base"* %242) #11
  %245 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 17, i32 0, i32 2, i32 0, i32 0
  %246 = load i64, i64* %245, align 8
  %247 = add i64 %246, 1
  store i64 %247, i64* %245, align 8
  br label %248

248:                                              ; preds = %216, %241
  %249 = phi %"class.std::__1::__tree_node"* [ %228, %241 ], [ %220, %216 ]
  %250 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 1, i32 0, i32 1
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 0, i32 0, i32 0, i32 0
  %252 = bitcast %"class.std::__1::unique_ptr"* %180 to i64*
  %253 = load i64, i64* %252, align 8
  store %"class.cc::ResourcePool::PoolResource"* null, %"class.cc::ResourcePool::PoolResource"** %251, align 8
  %254 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %250, i64 0, i32 0, i32 0, i32 0
  %255 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %254, align 8
  %256 = bitcast %"class.std::__1::unique_ptr"* %250 to i64*
  store i64 %253, i64* %256, align 8
  %257 = icmp eq %"class.cc::ResourcePool::PoolResource"* %255, null
  br i1 %257, label %278, label %258

258:                                              ; preds = %248
  %259 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %255, i64 0, i32 10, i32 0, i32 0, i32 0
  %260 = load %"class.cc::ResourcePool::SoftwareBacking"*, %"class.cc::ResourcePool::SoftwareBacking"** %259, align 8
  store %"class.cc::ResourcePool::SoftwareBacking"* null, %"class.cc::ResourcePool::SoftwareBacking"** %259, align 8
  %261 = icmp eq %"class.cc::ResourcePool::SoftwareBacking"* %260, null
  br i1 %261, label %267, label %262

262:                                              ; preds = %258
  %263 = bitcast %"class.cc::ResourcePool::SoftwareBacking"* %260 to void (%"class.cc::ResourcePool::SoftwareBacking"*)***
  %264 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)**, void (%"class.cc::ResourcePool::SoftwareBacking"*)*** %263, align 8
  %265 = getelementptr inbounds void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %264, i64 1
  %266 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %265, align 8
  call void %266(%"class.cc::ResourcePool::SoftwareBacking"* nonnull %260) #11
  br label %267

267:                                              ; preds = %262, %258
  %268 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %255, i64 0, i32 9, i32 0, i32 0, i32 0
  %269 = load %"class.cc::ResourcePool::GpuBacking"*, %"class.cc::ResourcePool::GpuBacking"** %268, align 8
  store %"class.cc::ResourcePool::GpuBacking"* null, %"class.cc::ResourcePool::GpuBacking"** %268, align 8
  %270 = icmp eq %"class.cc::ResourcePool::GpuBacking"* %269, null
  br i1 %270, label %276, label %271

271:                                              ; preds = %267
  %272 = bitcast %"class.cc::ResourcePool::GpuBacking"* %269 to void (%"class.cc::ResourcePool::GpuBacking"*)***
  %273 = load void (%"class.cc::ResourcePool::GpuBacking"*)**, void (%"class.cc::ResourcePool::GpuBacking"*)*** %272, align 8
  %274 = getelementptr inbounds void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %273, i64 1
  %275 = load void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %274, align 8
  call void %275(%"class.cc::ResourcePool::GpuBacking"* nonnull %269) #11
  br label %276

276:                                              ; preds = %271, %267
  %277 = bitcast %"class.cc::ResourcePool::PoolResource"* %255 to i8*
  call void @_ZdlPv(i8* %277) #12
  br label %278

278:                                              ; preds = %248, %276
  %279 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %24, i64 0, i32 1
  %280 = load i64, i64* %279, align 8
  %281 = icmp ult i64 %25, %280
  br i1 %281, label %286, label %282

282:                                              ; preds = %278
  %283 = sub i64 %25, %280
  %284 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %24, i64 0, i32 0, i32 1
  %285 = load i64, i64* %284, align 8
  br label %291

286:                                              ; preds = %278
  %287 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %24, i64 0, i32 0, i32 1
  %288 = load i64, i64* %287, align 8
  %289 = sub i64 %25, %280
  %290 = add i64 %289, %288
  br label %291

291:                                              ; preds = %282, %286
  %292 = phi i64 [ %285, %282 ], [ %288, %286 ]
  %293 = phi i64 [ %283, %282 ], [ %290, %286 ]
  %294 = add i64 %280, 1
  %295 = add i64 %294, %293
  %296 = urem i64 %295, %292
  %297 = call { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE5eraseENS_8internal29circular_deque_const_iteratorIS8_EESC_(%"class.base::circular_deque"* %12, %"class.base::circular_deque"* %24, i64 %25, %"class.base::circular_deque"* %24, i64 %296) #11
  %298 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %179, i64 0, i32 2
  %299 = load i32, i32* %298, align 4
  %300 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %179, i64 0, i32 1, i32 0
  %301 = load i32, i32* %300, align 4
  %302 = call i32 @_ZN3viz12BitsPerPixelENS_14ResourceFormatE(i32 %299) #11
  %303 = sext i32 %302 to i64
  %304 = sext i32 %301 to i64
  %305 = mul nsw i64 %303, %304
  %306 = icmp eq i64 %305, 0
  %307 = add nsw i64 %305, 7
  %308 = lshr i64 %307, 3
  %309 = select i1 %306, i64 0, i64 %308
  %310 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %179, i64 0, i32 1, i32 1
  %311 = load i32, i32* %310, align 4
  %312 = sext i32 %311 to i64
  %313 = mul i64 %309, %312
  %314 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 10
  %315 = load i64, i64* %314, align 8
  %316 = add i64 %313, %315
  store i64 %316, i64* %314, align 8
  %317 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %179, i64 0, i32 6
  %318 = bitcast %"class.gfx::Rect"* %317 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %318, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %318, i8 0, i64 16, i1 false)
  %319 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %179, i64 0, i32 4
  store i64 0, i64* %319, align 8
  %320 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %1, i64 0, i32 2
  %321 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %320, align 8
  %322 = icmp ne %"class.viz::ContextProvider"* %321, null
  %323 = zext i1 %322 to i8
  %324 = getelementptr inbounds %"class.cc::ResourcePool::InUsePoolResource", %"class.cc::ResourcePool::InUsePoolResource"* %0, i64 0, i32 0
  store i8 %323, i8* %324, align 8
  %325 = getelementptr inbounds %"class.cc::ResourcePool::InUsePoolResource", %"class.cc::ResourcePool::InUsePoolResource"* %0, i64 0, i32 1
  store %"class.cc::ResourcePool::PoolResource"* %179, %"class.cc::ResourcePool::PoolResource"** %325, align 8
  br label %328

326:                                              ; preds = %121
  %327 = getelementptr inbounds %"class.cc::ResourcePool::InUsePoolResource", %"class.cc::ResourcePool::InUsePoolResource"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %327, i8 0, i64 16, i1 false)
  br label %328

328:                                              ; preds = %326, %291
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool38UpdateResourceContentIdAndInvalidationEPNS0_12PoolResourceEmRKN3gfx4RectE(%"class.cc::ResourcePool::PoolResource"*, i64, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Rect", align 4
  %5 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 %6, i64 16, i1 false)
  %7 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 6, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 6, i32 1, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %4, %"class.gfx::Rect"* dereferenceable(16) %7) #11
  br label %16

16:                                               ; preds = %3, %15, %11
  %17 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 4
  store i64 %1, i64* %17, align 8
  %18 = bitcast %"class.gfx::Rect"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 4 %5, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void
}

declare i64 @_ZNK3gfx4Size14GetCheckedAreaEv(%"class.gfx::Size"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool18OnResourceReleasedEmRKN3gpu9SyncTokenEb(%"class.cc::ResourcePool"*, i64, %"struct.gpu::SyncToken"* nocapture readonly dereferenceable(24), i1 zeroext) #0 align 2 {
  %5 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16
  %6 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %5, i64 0, i32 0
  %11 = icmp eq i64 %7, %9
  br i1 %11, label %28, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 0, i32 1
  br label %14

14:                                               ; preds = %22, %12
  %15 = phi i64 [ %7, %12 ], [ %26, %22 ]
  %16 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %15) #11
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %17, align 8
  %19 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %18, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, %1
  br i1 %21, label %28, label %22

22:                                               ; preds = %14
  %23 = add i64 %15, 1
  %24 = load i64, i64* %13, align 8
  %25 = icmp eq i64 %23, %24
  %26 = select i1 %25, i64 0, i64 %23
  %27 = icmp eq i64 %26, %9
  br i1 %27, label %28, label %14

28:                                               ; preds = %14, %22, %4
  %29 = phi i64 [ %7, %4 ], [ %15, %14 ], [ %9, %22 ]
  %30 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %29) #11
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %31, align 8
  br i1 %3, label %41, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 14
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %32, i64 0, i32 7
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %56, label %41

41:                                               ; preds = %37, %33, %28
  %42 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %29) #11
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %43, align 8
  store %"class.cc::ResourcePool::PoolResource"* null, %"class.cc::ResourcePool::PoolResource"** %43, align 8
  tail call void @_ZN2cc12ResourcePool14DeleteResourceENSt3__110unique_ptrINS0_12PoolResourceENS1_14default_deleteIS3_EEEE(%"class.cc::ResourcePool"* %0, %"class.cc::ResourcePool::PoolResource"* %44)
  %45 = load i64, i64* %6, align 8
  %46 = icmp ult i64 %29, %45
  br i1 %46, label %51, label %47

47:                                               ; preds = %41
  %48 = sub i64 %29, %45
  %49 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  br label %97

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %29, %45
  %55 = add i64 %54, %53
  br label %97

56:                                               ; preds = %37
  %57 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %32, i64 0, i32 8, i32 0, i32 0
  store i32 0, i32* %57, align 4
  %58 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 2
  %59 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %58, align 8
  %60 = icmp eq %"class.viz::ContextProvider"* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %32, i64 0, i32 9, i32 0, i32 0, i32 0
  %63 = load %"class.cc::ResourcePool::GpuBacking"*, %"class.cc::ResourcePool::GpuBacking"** %62, align 8
  %64 = getelementptr inbounds %"class.cc::ResourcePool::GpuBacking", %"class.cc::ResourcePool::GpuBacking"* %63, i64 0, i32 6, i32 0
  %65 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %2, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 24, i1 false)
  br label %66

66:                                               ; preds = %56, %61
  %67 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %29) #11
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.std::__1::unique_ptr"* %67 to i64*
  %70 = load i64, i64* %69, align 8
  store %"class.cc::ResourcePool::PoolResource"* null, %"class.cc::ResourcePool::PoolResource"** %68, align 8
  %71 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %71, i64 1) #11
  %72 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %66, %75
  %79 = phi i64 [ %77, %75 ], [ %73, %66 ]
  %80 = add i64 %79, -1
  store i64 %80, i64* %72, align 8
  %81 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %71, i64 0, i32 0
  %82 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %81, i64 %80) #11
  %83 = bitcast %"class.std::__1::unique_ptr"* %82 to i64*
  store i64 %70, i64* %83, align 8
  %84 = load i64, i64* %72, align 8
  %85 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %81, i64 %84) #11
  %86 = load i64, i64* %6, align 8
  %87 = icmp ult i64 %29, %86
  br i1 %87, label %92, label %88

88:                                               ; preds = %78
  %89 = sub i64 %29, %86
  %90 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  br label %97

92:                                               ; preds = %78
  %93 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %29, %86
  %96 = add i64 %95, %94
  br label %97

97:                                               ; preds = %92, %88, %51, %47
  %98 = phi i64 [ %45, %47 ], [ %45, %51 ], [ %86, %88 ], [ %86, %92 ]
  %99 = phi i64 [ %48, %47 ], [ %55, %51 ], [ %89, %88 ], [ %96, %92 ]
  %100 = phi i64 [ %50, %47 ], [ %53, %51 ], [ %91, %88 ], [ %94, %92 ]
  %101 = add i64 %98, 1
  %102 = add i64 %101, %99
  %103 = urem i64 %102, %100
  %104 = tail call { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE5eraseENS_8internal29circular_deque_const_iteratorIS8_EESC_(%"class.base::circular_deque"* %5, %"class.base::circular_deque"* %5, i64 %29, %"class.base::circular_deque"* %5, i64 %103) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool14DeleteResourceENSt3__110unique_ptrINS0_12PoolResourceENS1_14default_deleteIS3_EEEE(%"class.cc::ResourcePool"* nocapture, %"class.cc::ResourcePool::PoolResource"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %1, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = tail call i32 @_ZN3viz12BitsPerPixelENS_14ResourceFormatE(i32 %4) #11
  %8 = sext i32 %7 to i64
  %9 = sext i32 %6 to i64
  %10 = mul nsw i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = add nsw i64 %10, 7
  %13 = lshr i64 %12, 3
  %14 = select i1 %11, i64 0, i64 %13
  %15 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %1, i64 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = mul i64 %14, %17
  %19 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 11
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %18
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 12
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 19, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 9223372036854775807
  br i1 %27, label %28, label %40

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 20
  %30 = load %"class.base::TickClock"*, %"class.base::TickClock"** %29, align 8
  %31 = bitcast %"class.base::TickClock"* %30 to i64 (%"class.base::TickClock"*)***
  %32 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %31, align 8
  %33 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %32, i64 2
  %34 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %33, align 8
  %35 = tail call i64 %34(%"class.base::TickClock"* %30) #11
  %36 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %35, i64 1000000) #11
  %37 = extractvalue { i64, i1 } %36, 1
  %38 = extractvalue { i64, i1 } %36, 0
  %39 = select i1 %37, i64 9223372036854775807, i64 %38, !prof !17
  store i64 %39, i64* %25, align 8
  br label %40

40:                                               ; preds = %28, %2
  %41 = icmp eq %"class.cc::ResourcePool::PoolResource"* %1, null
  br i1 %41, label %62, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %44 = load %"class.cc::ResourcePool::SoftwareBacking"*, %"class.cc::ResourcePool::SoftwareBacking"** %43, align 8
  store %"class.cc::ResourcePool::SoftwareBacking"* null, %"class.cc::ResourcePool::SoftwareBacking"** %43, align 8
  %45 = icmp eq %"class.cc::ResourcePool::SoftwareBacking"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.cc::ResourcePool::SoftwareBacking"* %44 to void (%"class.cc::ResourcePool::SoftwareBacking"*)***
  %48 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)**, void (%"class.cc::ResourcePool::SoftwareBacking"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %48, i64 1
  %50 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %49, align 8
  tail call void %50(%"class.cc::ResourcePool::SoftwareBacking"* nonnull %44) #11
  br label %51

51:                                               ; preds = %46, %42
  %52 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %1, i64 0, i32 9, i32 0, i32 0, i32 0
  %53 = load %"class.cc::ResourcePool::GpuBacking"*, %"class.cc::ResourcePool::GpuBacking"** %52, align 8
  store %"class.cc::ResourcePool::GpuBacking"* null, %"class.cc::ResourcePool::GpuBacking"** %52, align 8
  %54 = icmp eq %"class.cc::ResourcePool::GpuBacking"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.cc::ResourcePool::GpuBacking"* %53 to void (%"class.cc::ResourcePool::GpuBacking"*)***
  %57 = load void (%"class.cc::ResourcePool::GpuBacking"*)**, void (%"class.cc::ResourcePool::GpuBacking"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %57, i64 1
  %59 = load void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %58, align 8
  tail call void %59(%"class.cc::ResourcePool::GpuBacking"* nonnull %53) #11
  br label %60

60:                                               ; preds = %55, %51
  %61 = bitcast %"class.cc::ResourcePool::PoolResource"* %1 to i8*
  tail call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %40, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc12ResourcePool16PrepareForExportERKNS0_17InUsePoolResourceE(%"class.cc::ResourcePool"*, %"class.cc::ResourcePool::InUsePoolResource"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"struct.viz::TransferableResource", align 8
  %5 = alloca %"struct.viz::TransferableResource", align 8
  %6 = alloca %"struct.viz::TransferableResource", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::WeakPtr", align 8
  %9 = getelementptr inbounds %"class.cc::ResourcePool::InUsePoolResource", %"class.cc::ResourcePool::InUsePoolResource"* %1, i64 0, i32 1
  %10 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %9, align 8
  %11 = bitcast %"struct.viz::TransferableResource"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %11) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast ({ %"class.util::IdType.11", i8, [3 x i8], %"class.gfx::Size", i32, [4 x i8], <{ %"struct.gpu::Mailbox", { i8, i8, [6 x i8], %"class.util::IdType", i64 }, i32, [4 x i8] }>, %"class.gfx::ColorSpace", { { { { i8, [3 x i8], %union.anon } } } }, i8, [3 x i8], i32, i8, [7 x i8], %"class.absl::optional.65" }* @__const._ZN3viz20TransferableResource12MakeSoftwareERKN3gpu7MailboxERKN3gfx4SizeENS_14ResourceFormatE.r to i8*), i64 256, i1 false)
  call void @_ZN3viz20TransferableResourceC1Ev(%"struct.viz::TransferableResource"* nonnull %4) #11
  %12 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %10, i64 0, i32 9, i32 0, i32 0, i32 0
  %13 = load %"class.cc::ResourcePool::GpuBacking"*, %"class.cc::ResourcePool::GpuBacking"** %12, align 8
  %14 = icmp eq %"class.cc::ResourcePool::GpuBacking"* %13, null
  br i1 %14, label %44, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.cc::ResourcePool::GpuBacking", %"class.cc::ResourcePool::GpuBacking"* %13, i64 0, i32 1
  %17 = call zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"* %16) #11
  br i1 %17, label %18, label %21

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %10, i64 0, i32 8, i32 0, i32 0
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %10, i64 0, i32 7
  store i8 1, i8* %20, align 8
  br label %93

21:                                               ; preds = %15
  %22 = bitcast %"struct.viz::TransferableResource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.cc::ResourcePool::GpuBacking", %"class.cc::ResourcePool::GpuBacking"* %13, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %10, i64 0, i32 1
  %26 = getelementptr inbounds %"class.cc::ResourcePool::GpuBacking", %"class.cc::ResourcePool::GpuBacking"* %13, i64 0, i32 4
  %27 = load i8, i8* %26, align 4, !range !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 bitcast ({ %"class.util::IdType.11", i8, [3 x i8], %"class.gfx::Size", i32, [4 x i8], <{ %"struct.gpu::Mailbox", { i8, i8, [6 x i8], %"class.util::IdType", i64 }, i32, [4 x i8] }>, %"class.gfx::ColorSpace", { { { { i8, [3 x i8], %union.anon } } } }, i8, [3 x i8], i32, i8, [7 x i8], %"class.absl::optional.65" }* @__const._ZN3viz20TransferableResource12MakeSoftwareERKN3gpu7MailboxERKN3gfx4SizeENS_14ResourceFormatE.r to i8*), i64 256, i1 false) #11
  call void @_ZN3viz20TransferableResourceC1Ev(%"struct.viz::TransferableResource"* nonnull %5) #11
  %28 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %5, i64 0, i32 1
  store i8 0, i8* %28, align 4, !alias.scope !21
  %29 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %5, i64 0, i32 9
  store i32 9729, i32* %29, align 4, !alias.scope !21
  %30 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %5, i64 0, i32 5, i32 0, i32 0, i64 0
  %31 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %16, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 1 %31, i64 16, i1 false) #11
  %32 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %5, i64 0, i32 5, i32 2
  store i32 %24, i32* %32, align 8, !alias.scope !21
  %33 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %5, i64 0, i32 5, i32 1, i32 0
  %34 = getelementptr inbounds %"class.cc::ResourcePool::GpuBacking", %"class.cc::ResourcePool::GpuBacking"* %13, i64 0, i32 2, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false) #11
  %35 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %5, i64 0, i32 2
  %36 = bitcast %"class.gfx::Size"* %25 to i64*
  %37 = bitcast %"class.gfx::Size"* %35 to i64*
  %38 = load i64, i64* %36, align 4, !noalias !21
  store i64 %38, i64* %37, align 8, !alias.scope !21
  %39 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %5, i64 0, i32 8
  store i8 %27, i8* %39, align 8, !alias.scope !21
  %40 = call dereferenceable(256) %"struct.viz::TransferableResource"* @_ZN3viz20TransferableResourceaSERKS0_(%"struct.viz::TransferableResource"* nonnull %4, %"struct.viz::TransferableResource"* nonnull dereferenceable(256) %5) #11
  call void @_ZN3viz20TransferableResourceD1Ev(%"struct.viz::TransferableResource"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %22) #11
  %41 = getelementptr inbounds %"class.cc::ResourcePool::GpuBacking", %"class.cc::ResourcePool::GpuBacking"* %13, i64 0, i32 5
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %4, i64 0, i32 10
  store i8 %42, i8* %43, align 8
  br label %60

44:                                               ; preds = %2
  %45 = bitcast %"struct.viz::TransferableResource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %10, i64 0, i32 10, i32 0, i32 0, i32 0
  %47 = load %"class.cc::ResourcePool::SoftwareBacking"*, %"class.cc::ResourcePool::SoftwareBacking"** %46, align 8
  %48 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %10, i64 0, i32 1
  %49 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %10, i64 0, i32 2
  %50 = load i32, i32* %49, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* align 8 bitcast ({ %"class.util::IdType.11", i8, [3 x i8], %"class.gfx::Size", i32, [4 x i8], <{ %"struct.gpu::Mailbox", { i8, i8, [6 x i8], %"class.util::IdType", i64 }, i32, [4 x i8] }>, %"class.gfx::ColorSpace", { { { { i8, [3 x i8], %union.anon } } } }, i8, [3 x i8], i32, i8, [7 x i8], %"class.absl::optional.65" }* @__const._ZN3viz20TransferableResource12MakeSoftwareERKN3gpu7MailboxERKN3gfx4SizeENS_14ResourceFormatE.r to i8*), i64 256, i1 false) #11
  call void @_ZN3viz20TransferableResourceC1Ev(%"struct.viz::TransferableResource"* nonnull %6) #11
  %51 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %6, i64 0, i32 1
  store i8 1, i8* %51, align 4, !alias.scope !24
  %52 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %6, i64 0, i32 5, i32 0, i32 0, i64 0
  %53 = getelementptr inbounds %"class.cc::ResourcePool::SoftwareBacking", %"class.cc::ResourcePool::SoftwareBacking"* %47, i64 0, i32 1, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 1 %53, i64 16, i1 false) #11
  %54 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %6, i64 0, i32 2
  %55 = bitcast %"class.gfx::Size"* %48 to i64*
  %56 = bitcast %"class.gfx::Size"* %54 to i64*
  %57 = load i64, i64* %55, align 4, !noalias !24
  store i64 %57, i64* %56, align 8, !alias.scope !24
  %58 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %6, i64 0, i32 3
  store i32 %50, i32* %58, align 8, !alias.scope !24
  %59 = call dereferenceable(256) %"struct.viz::TransferableResource"* @_ZN3viz20TransferableResourceaSERKS0_(%"struct.viz::TransferableResource"* nonnull %4, %"struct.viz::TransferableResource"* nonnull dereferenceable(256) %6) #11
  call void @_ZN3viz20TransferableResourceD1Ev(%"struct.viz::TransferableResource"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %45) #11
  br label %60

60:                                               ; preds = %21, %44
  %61 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %10, i64 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %4, i64 0, i32 3
  store i32 %62, i32* %63, align 8
  %64 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %4, i64 0, i32 6, i32 0
  %65 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %10, i64 0, i32 3, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 4 %65, i64 68, i1 false)
  %66 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 1
  %67 = load %"class.viz::ClientResourceProvider"*, %"class.viz::ClientResourceProvider"** %66, align 8
  %68 = bitcast %"class.base::WeakPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #11
  %69 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #11, !noalias !27
  %70 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 21, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %70) #11, !noalias !27
  %71 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 21, i32 0, i32 1
  %72 = load i64, i64* %71, align 8, !noalias !27
  %73 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %73, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %72) #11
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #11, !noalias !27
  %74 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %10, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = call i8* @_Znwm(i64 72) #12, !noalias !30
  %77 = bitcast i8* %76 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %77, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)* @_ZN4base8internal7InvokerINS0_9BindStateIMN2cc12ResourcePoolEFvmRKN3gpu9SyncTokenEbEJNS_7WeakPtrIS4_EEmEEEFvS8_bEE7RunOnceEPNS0_13BindStateBaseES8_b to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN2cc12ResourcePoolEFvmRKN3gpu9SyncTokenEbEJNS_7WeakPtrIS3_EEmEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN2cc12ResourcePoolEFvmRKN3gpu9SyncTokenEbEJNS_7WeakPtrIS4_EEmEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE) #11, !noalias !30
  %78 = getelementptr inbounds i8, i8* %76, i64 32
  %79 = bitcast i8* %78 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.cc::ResourcePool"*, i64, %"struct.gpu::SyncToken"*, i1)* @_ZN2cc12ResourcePool18OnResourceReleasedEmRKN3gpu9SyncTokenEb to i64), i64 0>, <2 x i64>* %79, align 8, !noalias !30
  %80 = getelementptr inbounds i8, i8* %76, i64 48
  %81 = bitcast i8* %80 to %"class.base::internal::WeakReference"*
  %82 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %81, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %82) #11, !noalias !30
  %83 = getelementptr inbounds i8, i8* %76, i64 56
  %84 = bitcast i8* %83 to i64*
  %85 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8, !noalias !30
  store i64 %86, i64* %84, align 8, !noalias !30
  %87 = getelementptr inbounds i8, i8* %76, i64 64
  %88 = bitcast i8* %87 to i64*
  store i64 %75, i64* %88, align 8, !noalias !30
  %89 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %76, i8** %89, align 8, !alias.scope !30
  %90 = call i32 @_ZN3viz22ClientResourceProvider14ImportResourceERKNS_20TransferableResourceEN4base12OnceCallbackIFvRKN3gpu9SyncTokenEbEEE(%"class.viz::ClientResourceProvider"* %67, %"struct.viz::TransferableResource"* nonnull dereferenceable(256) %4, %"class.base::OnceCallback"* nonnull %7) #11
  %91 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %10, i64 0, i32 8, i32 0, i32 0
  store i32 %90, i32* %91, align 4
  %92 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %92) #11
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %73) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #11
  br label %93

93:                                               ; preds = %18, %60
  %94 = phi i1 [ true, %60 ], [ false, %18 ]
  call void @_ZN3viz20TransferableResourceD1Ev(%"struct.viz::TransferableResource"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %11) #11
  ret i1 %94
}

declare void @_ZN3viz20TransferableResourceC1Ev(%"struct.viz::TransferableResource"*) unnamed_addr #1

declare zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"*) local_unnamed_addr #1

declare dereferenceable(256) %"struct.viz::TransferableResource"* @_ZN3viz20TransferableResourceaSERKS0_(%"struct.viz::TransferableResource"*, %"struct.viz::TransferableResource"* dereferenceable(256)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3viz20TransferableResourceD1Ev(%"struct.viz::TransferableResource"*) unnamed_addr #3

declare i32 @_ZN3viz22ClientResourceProvider14ImportResourceERKNS_20TransferableResourceEN4base12OnceCallbackIFvRKN3gpu9SyncTokenEbEEE(%"class.viz::ClientResourceProvider"*, %"struct.viz::TransferableResource"* dereferenceable(256), %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool19InvalidateResourcesEv(%"class.cc::ResourcePool"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, %5
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15
  br label %9

9:                                                ; preds = %7, %9
  %10 = tail call %"class.cc::ResourcePool::PoolResource"* @_ZN2cc7PopBackIN4base14circular_dequeINSt3__110unique_ptrINS_12ResourcePool12PoolResourceENS3_14default_deleteIS6_EEEEEEEENT_10value_typeEPSB_(%"class.base::circular_deque"* %8)
  tail call void @_ZN2cc12ResourcePool14DeleteResourceENSt3__110unique_ptrINS0_12PoolResourceENS1_14default_deleteIS3_EEEE(%"class.cc::ResourcePool"* %0, %"class.cc::ResourcePool::PoolResource"* %10)
  %11 = load i64, i64* %2, align 8
  %12 = load i64, i64* %4, align 8
  %13 = icmp eq i64 %11, %12
  br i1 %13, label %14, label %9

14:                                               ; preds = %9, %1
  %15 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 0
  %22 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 0, i32 1
  br label %28

23:                                               ; preds = %28, %14
  %24 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 0
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %27 = icmp eq %"class.std::__1::__tree_end_node"* %25, %26
  br i1 %27, label %39, label %40

28:                                               ; preds = %20, %28
  %29 = phi i64 [ %16, %20 ], [ %37, %28 ]
  %30 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %21, i64 %29) #11
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %31, align 8
  %33 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %32, i64 0, i32 7
  store i8 1, i8* %33, align 8
  %34 = add i64 %29, 1
  %35 = load i64, i64* %22, align 8
  %36 = icmp eq i64 %34, %35
  %37 = select i1 %36, i64 0, i64 %34
  %38 = icmp eq i64 %37, %18
  br i1 %38, label %23, label %28

39:                                               ; preds = %73, %23
  ret void

40:                                               ; preds = %23, %73
  %41 = phi %"class.std::__1::__tree_end_node"* [ %74, %73 ], [ %25, %23 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 5
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.cc::ResourcePool::PoolResource"**
  %44 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %43, align 8
  %45 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %44, i64 0, i32 7
  store i8 1, i8* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 1, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %57

49:                                               ; preds = %40
  %50 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.std::__1::__tree_node_base"*
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 2
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_end_node"**
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, %50
  br i1 %56, label %73, label %64

57:                                               ; preds = %40, %57
  %58 = phi %"class.std::__1::__tree_node_base"* [ %60, %57 ], [ %47, %40 ]
  %59 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %62, label %57

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %58, i64 0, i32 0
  br label %73

64:                                               ; preds = %49, %64
  %65 = phi %"class.std::__1::__tree_end_node"** [ %68, %64 ], [ %52, %49 ]
  %66 = bitcast %"class.std::__1::__tree_end_node"** %65 to %"class.std::__1::__tree_node_base"**
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %69 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, %67
  br i1 %72, label %73, label %64

73:                                               ; preds = %64, %49, %62
  %74 = phi %"class.std::__1::__tree_end_node"* [ %63, %62 ], [ %53, %49 ], [ %69, %64 ]
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %74, %26
  br i1 %75, label %39, label %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool15ReleaseResourceENS0_17InUsePoolResourceE(%"class.cc::ResourcePool"*, %"class.cc::ResourcePool::InUsePoolResource"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.cc::ResourcePool::InUsePoolResource", %"class.cc::ResourcePool::InUsePoolResource"* %1, i64 0, i32 1
  %9 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %8, align 8
  store %"class.cc::ResourcePool::PoolResource"* null, %"class.cc::ResourcePool::PoolResource"** %8, align 8
  %10 = icmp eq %"class.cc::ResourcePool::PoolResource"* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 364, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0)) #11
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br label %14

14:                                               ; preds = %2, %11
  %15 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17
  %16 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %9, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node"**
  %20 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node"* %20, null
  br i1 %21, label %43, label %22

22:                                               ; preds = %14, %22
  %23 = phi %"class.std::__1::__tree_end_node"* [ %33, %22 ], [ %18, %14 ]
  %24 = phi %"class.std::__1::__tree_node"* [ %34, %22 ], [ %20, %14 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp ult i64 %26, %17
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::__tree_node_base"** %28 to %"class.std::__1::__tree_node"**
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::__tree_node"* %24 to %"class.std::__1::__tree_node"**
  %32 = select i1 %27, %"class.std::__1::__tree_node"** %29, %"class.std::__1::__tree_node"** %31
  %33 = select i1 %27, %"class.std::__1::__tree_end_node"* %23, %"class.std::__1::__tree_end_node"* %30
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %32, align 8
  %35 = icmp eq %"class.std::__1::__tree_node"* %34, null
  br i1 %35, label %36, label %22

36:                                               ; preds = %22
  %37 = icmp eq %"class.std::__1::__tree_end_node"* %33, %18
  br i1 %37, label %43, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 4
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = icmp ult i64 %17, %41
  br i1 %42, label %43, label %108

43:                                               ; preds = %38, %36, %14
  %44 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 0
  %49 = icmp eq i64 %45, %47
  br i1 %49, label %74, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 0, i32 1
  br label %52

52:                                               ; preds = %61, %50
  %53 = phi i64 [ %45, %50 ], [ %65, %61 ]
  %54 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %48, i64 %53) #11
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %55, align 8
  %57 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %56, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = load i64, i64* %16, align 8
  %60 = icmp eq i64 %58, %59
  br i1 %60, label %67, label %61

61:                                               ; preds = %52
  %62 = add i64 %53, 1
  %63 = load i64, i64* %51, align 8
  %64 = icmp eq i64 %62, %63
  %65 = select i1 %64, i64 0, i64 %62
  %66 = icmp eq i64 %65, %47
  br i1 %66, label %67, label %52

67:                                               ; preds = %52, %61
  %68 = phi i64 [ %47, %61 ], [ %53, %52 ]
  %69 = load i64, i64* %46, align 8
  %70 = icmp eq i64 %68, %69
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 379, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0)) #11
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %74

74:                                               ; preds = %43, %67, %71
  %75 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0
  %80 = icmp eq i64 %76, %78
  br i1 %80, label %105, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0, i32 1
  br label %83

83:                                               ; preds = %92, %81
  %84 = phi i64 [ %76, %81 ], [ %96, %92 ]
  %85 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %79, i64 %84) #11
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %86, align 8
  %88 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %87, i64 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = load i64, i64* %16, align 8
  %91 = icmp eq i64 %89, %90
  br i1 %91, label %98, label %92

92:                                               ; preds = %83
  %93 = add i64 %84, 1
  %94 = load i64, i64* %82, align 8
  %95 = icmp eq i64 %93, %94
  %96 = select i1 %95, i64 0, i64 %93
  %97 = icmp eq i64 %96, %78
  br i1 %97, label %98, label %83

98:                                               ; preds = %83, %92
  %99 = phi i64 [ %78, %92 ], [ %84, %83 ]
  %100 = load i64, i64* %77, align 8
  %101 = icmp eq i64 %99, %100
  br i1 %101, label %105, label %102

102:                                              ; preds = %98
  %103 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 387, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64 0)) #11
  %104 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #11
  br label %105

105:                                              ; preds = %74, %98, %102
  %106 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 390, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)) #11
  %107 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #11
  br label %108

108:                                              ; preds = %38, %105
  %109 = phi %"class.std::__1::__tree_end_node"* [ %18, %105 ], [ %33, %38 ]
  %110 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %109, i64 5
  %111 = bitcast %"class.std::__1::__tree_end_node"* %110 to %"class.cc::ResourcePool::PoolResource"**
  %112 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %111, align 8
  %113 = icmp eq %"class.cc::ResourcePool::PoolResource"* %112, null
  br i1 %113, label %114, label %117

114:                                              ; preds = %108
  %115 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 396, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #11
  %116 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #11
  br label %117

117:                                              ; preds = %108, %114
  %118 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 20
  %119 = load %"class.base::TickClock"*, %"class.base::TickClock"** %118, align 8
  %120 = bitcast %"class.base::TickClock"* %119 to i64 (%"class.base::TickClock"*)***
  %121 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %120, align 8
  %122 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %121, i64 2
  %123 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %122, align 8
  %124 = call i64 %123(%"class.base::TickClock"* %119) #11
  %125 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %9, i64 0, i32 5, i32 0, i32 0
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %9, i64 0, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %9, i64 0, i32 1, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = call i32 @_ZN3viz12BitsPerPixelENS_14ResourceFormatE(i32 %127) #11
  %131 = sext i32 %130 to i64
  %132 = sext i32 %129 to i64
  %133 = mul nsw i64 %131, %132
  %134 = icmp eq i64 %133, 0
  %135 = add nsw i64 %133, 7
  %136 = lshr i64 %135, 3
  %137 = select i1 %134, i64 0, i64 %136
  %138 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %9, i64 0, i32 1, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = sext i32 %139 to i64
  %141 = mul i64 %137, %140
  %142 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 10
  %143 = load i64, i64* %142, align 8
  %144 = sub i64 %143, %141
  store i64 %144, i64* %142, align 8
  %145 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %9, i64 0, i32 8, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %117
  %149 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %149, i64 1) #11
  %150 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %183

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 0, i32 1
  %155 = load i64, i64* %154, align 8
  br label %183

156:                                              ; preds = %117
  %157 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %9, i64 0, i32 7
  %158 = load i8, i8* %157, align 8, !range !2
  %159 = icmp eq i8 %158, 0
  %160 = bitcast %"class.std::__1::__tree_end_node"* %110 to i64*
  %161 = load i64, i64* %160, align 8
  store %"class.cc::ResourcePool::PoolResource"* null, %"class.cc::ResourcePool::PoolResource"** %111, align 8
  br i1 %159, label %164, label %162

162:                                              ; preds = %156
  %163 = inttoptr i64 %161 to %"class.cc::ResourcePool::PoolResource"*
  call void @_ZN2cc12ResourcePool14DeleteResourceENSt3__110unique_ptrINS0_12PoolResourceENS1_14default_deleteIS3_EEEE(%"class.cc::ResourcePool"* %0, %"class.cc::ResourcePool::PoolResource"* %163)
  br label %180

164:                                              ; preds = %156
  %165 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %165, i64 1) #11
  %166 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %172

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0, i32 1
  %171 = load i64, i64* %170, align 8
  br label %172

172:                                              ; preds = %164, %169
  %173 = phi i64 [ %171, %169 ], [ %167, %164 ]
  %174 = add i64 %173, -1
  store i64 %174, i64* %166, align 8
  %175 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %165, i64 0, i32 0
  %176 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %175, i64 %174) #11
  %177 = bitcast %"class.std::__1::unique_ptr"* %176 to i64*
  store i64 %161, i64* %177, align 8
  %178 = load i64, i64* %166, align 8
  %179 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %175, i64 %178) #11
  br label %180

180:                                              ; preds = %162, %172
  %181 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %15, i64 0, i32 0
  %182 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2cc12ResourcePool12PoolResourceENS_14default_deleteIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS_9allocatorIS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE(%"class.std::__1::__tree"* %181, %"class.std::__1::__tree_end_node"* %109) #11
  br label %197

183:                                              ; preds = %148, %153
  %184 = phi i64 [ %155, %153 ], [ %151, %148 ]
  %185 = add i64 %184, -1
  store i64 %185, i64* %150, align 8
  %186 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %149, i64 0, i32 0
  %187 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %186, i64 %185) #11
  %188 = bitcast %"class.std::__1::__tree_end_node"* %110 to i64*
  %189 = load i64, i64* %188, align 8
  store %"class.cc::ResourcePool::PoolResource"* null, %"class.cc::ResourcePool::PoolResource"** %111, align 8
  %190 = bitcast %"class.std::__1::unique_ptr"* %187 to i64*
  store i64 %189, i64* %190, align 8
  %191 = load i64, i64* %150, align 8
  %192 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %186, i64 %191) #11
  %193 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %15, i64 0, i32 0
  %194 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2cc12ResourcePool12PoolResourceENS_14default_deleteIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS_9allocatorIS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE(%"class.std::__1::__tree"* %193, %"class.std::__1::__tree_end_node"* %109) #11
  %195 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 1
  %196 = load %"class.viz::ClientResourceProvider"*, %"class.viz::ClientResourceProvider"** %195, align 8
  call void @_ZN3viz22ClientResourceProvider22RemoveImportedResourceEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.viz::ClientResourceProvider"* %196, i32 %146) #11
  br label %197

197:                                              ; preds = %180, %183
  %198 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 4, i32 0
  %199 = load i64, i64* %198, align 8
  call void @_ZN2cc12ResourcePool31ScheduleEvictExpiredResourcesInEN4base9TimeDeltaE(%"class.cc::ResourcePool"* %0, i64 %199)
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN3viz22ClientResourceProvider22RemoveImportedResourceEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.viz::ClientResourceProvider"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool31ScheduleEvictExpiredResourcesInEN4base9TimeDeltaE(%"class.cc::ResourcePool"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback.78", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 13
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %38

10:                                               ; preds = %2
  store i8 1, i8* %7, align 8
  %11 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 3, i32 0
  %12 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %11, align 8
  %13 = bitcast %"class.base::SingleThreadTaskRunner"* %12 to %"class.base::TaskRunner"*
  %14 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 507) #11
  %15 = bitcast %"class.base::WeakPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  %16 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11, !noalias !35
  %17 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 21, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %17) #11, !noalias !35
  %18 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 21, i32 0, i32 1
  %19 = load i64, i64* %18, align 8, !noalias !35
  %20 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %20, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %19) #11
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11, !noalias !35
  %21 = call i8* @_Znwm(i64 64) #12, !noalias !38
  %22 = bitcast i8* %21 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %22, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN2cc12ResourcePoolEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN2cc12ResourcePoolEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN2cc12ResourcePoolEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #11, !noalias !38
  %23 = getelementptr inbounds i8, i8* %21, i64 32
  %24 = bitcast i8* %23 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.cc::ResourcePool"*)* @_ZN2cc12ResourcePool21EvictExpiredResourcesEv to i64), i64 0>, <2 x i64>* %24, align 8, !noalias !38
  %25 = getelementptr inbounds i8, i8* %21, i64 48
  %26 = bitcast i8* %25 to %"class.base::internal::WeakReference"*
  %27 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %26, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %27) #11, !noalias !38
  %28 = getelementptr inbounds i8, i8* %21, i64 56
  %29 = bitcast i8* %28 to i64*
  %30 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !38
  store i64 %31, i64* %29, align 8, !noalias !38
  %32 = bitcast %"class.base::OnceCallback.78"* %5 to i8**
  store i8* %21, i8** %32, align 8, !alias.scope !38
  %33 = bitcast %"class.base::SingleThreadTaskRunner"* %12 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.78"*, i64)***
  %34 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.78"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.78"*, i64)*** %33, align 8
  %35 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.78"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.78"*, i64)** %34, align 8
  %36 = call zeroext i1 %35(%"class.base::TaskRunner"* %13, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback.78"* nonnull %5, i64 %1) #11
  %37 = getelementptr inbounds %"class.base::OnceCallback.78", %"class.base::OnceCallback.78"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #11
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #11
  br label %38

38:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool17OnContentReplacedERKNS0_17InUsePoolResourceEm(%"class.cc::ResourcePool"* nocapture readnone, %"class.cc::ResourcePool::InUsePoolResource"* nocapture readonly dereferenceable(16), i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::ResourcePool::InUsePoolResource", %"class.cc::ResourcePool::InUsePoolResource"* %1, i64 0, i32 1
  %5 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %5, i64 0, i32 4
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %5, i64 0, i32 6
  %8 = bitcast %"class.gfx::Rect"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool19ReduceResourceUsageEv(%"class.cc::ResourcePool"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 11
  %3 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15
  %4 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %26, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 12
  %11 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 9
  %12 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 8
  br label %13

13:                                               ; preds = %9, %21
  %14 = load i64, i64* %10, align 8
  %15 = load i64, i64* %11, align 8
  %16 = icmp ugt i64 %14, %15
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = load i64, i64* %2, align 8
  %19 = load i64, i64* %12, align 8
  %20 = icmp ugt i64 %18, %19
  br i1 %20, label %21, label %26

21:                                               ; preds = %13, %17
  %22 = tail call %"class.cc::ResourcePool::PoolResource"* @_ZN2cc7PopBackIN4base14circular_dequeINSt3__110unique_ptrINS_12ResourcePool12PoolResourceENS3_14default_deleteIS6_EEEEEEEENT_10value_typeEPSB_(%"class.base::circular_deque"* %3)
  tail call void @_ZN2cc12ResourcePool14DeleteResourceENSt3__110unique_ptrINS0_12PoolResourceENS1_14default_deleteIS3_EEEE(%"class.cc::ResourcePool"* %0, %"class.cc::ResourcePool::PoolResource"* %22)
  %23 = load i64, i64* %4, align 8
  %24 = load i64, i64* %6, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %26, label %13

26:                                               ; preds = %17, %21, %1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2cc12ResourcePool20ResourceUsageTooHighEv(%"class.cc::ResourcePool"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 12
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 9
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %3, %5
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 11
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 8
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %9, %11
  br label %13

13:                                               ; preds = %7, %1
  %14 = phi i1 [ true, %1 ], [ %12, %7 ]
  ret i1 %14
}

declare void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool21EvictExpiredResourcesEv(%"class.cc::ResourcePool"*) #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 13
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 20
  %7 = load %"class.base::TickClock"*, %"class.base::TickClock"** %6, align 8
  %8 = bitcast %"class.base::TickClock"* %7 to i64 (%"class.base::TickClock"*)***
  %9 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %9, i64 2
  %11 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %10, align 8
  %12 = tail call i64 %11(%"class.base::TickClock"* %7) #11
  %13 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 4, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %12, i64* %16, align 8
  %17 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %18 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15
  %19 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %20, %22
  br i1 %23, label %54, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0, i32 1
  %26 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %18, i64 0, i32 0
  br label %27

27:                                               ; preds = %41, %24
  %28 = phi i64 [ %22, %24 ], [ %44, %41 ]
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = load i64, i64* %25, align 8
  br label %32

32:                                               ; preds = %30, %27
  %33 = phi i64 [ %31, %30 ], [ %28, %27 ]
  %34 = add i64 %33, -1
  %35 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %26, i64 %34) #11
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %36, align 8
  %38 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %37, i64 0, i32 5, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp sgt i64 %39, %17
  br i1 %40, label %46, label %41

41:                                               ; preds = %32
  %42 = call %"class.cc::ResourcePool::PoolResource"* @_ZN2cc7PopBackIN4base14circular_dequeINSt3__110unique_ptrINS_12ResourcePool12PoolResourceENS3_14default_deleteIS6_EEEEEEEENT_10value_typeEPSB_(%"class.base::circular_deque"* %18) #11
  call void @_ZN2cc12ResourcePool14DeleteResourceENSt3__110unique_ptrINS0_12PoolResourceENS1_14default_deleteIS3_EEEE(%"class.cc::ResourcePool"* %0, %"class.cc::ResourcePool::PoolResource"* %42) #11
  %43 = load i64, i64* %19, align 8
  %44 = load i64, i64* %21, align 8
  %45 = icmp eq i64 %43, %44
  br i1 %45, label %54, label %27

46:                                               ; preds = %32
  %47 = load i64, i64* %19, align 8
  %48 = load i64, i64* %21, align 8
  %49 = icmp eq i64 %47, %48
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 19, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp sgt i64 %52, %12
  br i1 %53, label %82, label %54

54:                                               ; preds = %41, %1, %50, %46
  %55 = phi i64 [ %47, %50 ], [ %47, %46 ], [ %20, %1 ], [ %43, %41 ]
  %56 = phi i64 [ %48, %50 ], [ %48, %46 ], [ %20, %1 ], [ %43, %41 ]
  %57 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 19, i32 0, i32 0
  store i64 9223372036854775807, i64* %57, align 8
  %58 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 2
  %59 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %58, align 8
  %60 = icmp eq %"class.viz::ContextProvider"* %59, null
  br i1 %60, label %82, label %61

61:                                               ; preds = %54
  %62 = bitcast %"class.viz::ContextProvider"* %59 to %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)***
  %63 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)**, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %63, i64 12
  %65 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %64, align 8
  %66 = call %"class.gpu::gles2::GLES2Interface"* %65(%"class.viz::ContextProvider"* nonnull %59) #11
  %67 = bitcast %"class.gpu::gles2::GLES2Interface"* %66 to void (%"class.gpu::gles2::GLES2Interface"*)***
  %68 = load void (%"class.gpu::gles2::GLES2Interface"*)**, void (%"class.gpu::gles2::GLES2Interface"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*)*, void (%"class.gpu::gles2::GLES2Interface"*)** %68, i64 162
  %70 = load void (%"class.gpu::gles2::GLES2Interface"*)*, void (%"class.gpu::gles2::GLES2Interface"*)** %69, align 8
  call void %70(%"class.gpu::gles2::GLES2Interface"* %66) #11
  %71 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %58, align 8
  %72 = bitcast %"class.viz::ContextProvider"* %71 to %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)***
  %73 = load %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)**, %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)*** %72, align 8
  %74 = getelementptr inbounds %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)*, %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)** %73, i64 7
  %75 = load %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)*, %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)** %74, align 8
  %76 = call %"class.gpu::ContextSupport"* %75(%"class.viz::ContextProvider"* %71) #11
  %77 = bitcast %"class.gpu::ContextSupport"* %76 to void (%"class.gpu::ContextSupport"*)***
  %78 = load void (%"class.gpu::ContextSupport"*)**, void (%"class.gpu::ContextSupport"*)*** %77, align 8
  %79 = load void (%"class.gpu::ContextSupport"*)*, void (%"class.gpu::ContextSupport"*)** %78, align 8
  call void %79(%"class.gpu::ContextSupport"* %76) #11
  %80 = load i64, i64* %19, align 8
  %81 = load i64, i64* %21, align 8
  br label %82

82:                                               ; preds = %50, %61, %54
  %83 = phi i64 [ %48, %50 ], [ %81, %61 ], [ %56, %54 ]
  %84 = phi i64 [ %47, %50 ], [ %80, %61 ], [ %55, %54 ]
  %85 = icmp eq i64 %84, %83
  br i1 %85, label %130, label %86

86:                                               ; preds = %82
  %87 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87)
  %88 = icmp eq i64 %83, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  br label %92

92:                                               ; preds = %86, %89
  %93 = phi i64 [ %91, %89 ], [ %83, %86 ]
  %94 = add i64 %93, -1
  %95 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0
  %96 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %95, i64 %94) #11
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %96, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %97, align 8
  %99 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %98, i64 0, i32 5, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = load i64, i64* %13, align 8
  %102 = add i64 %101, -9223372036854775807
  %103 = icmp ult i64 %102, 2
  br i1 %103, label %111, label %104

104:                                              ; preds = %92
  %105 = icmp slt i64 %101, 0
  %106 = select i1 %105, i64 -9223372036854775808, i64 9223372036854775807
  %107 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %100, i64 %101) #11
  %108 = extractvalue { i64, i1 } %107, 1
  %109 = extractvalue { i64, i1 } %107, 0
  %110 = select i1 %108, i64 %106, i64 %109, !prof !17
  br label %119

111:                                              ; preds = %92
  %112 = add i64 %100, -9223372036854775807
  %113 = icmp ugt i64 %112, 1
  %114 = icmp eq i64 %100, %101
  %115 = or i1 %114, %113
  br i1 %115, label %119, label %116

116:                                              ; preds = %111
  %117 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i64 0, i64 0)) #11
  %118 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #11
  br label %119

119:                                              ; preds = %104, %111, %116
  %120 = phi i64 [ %110, %104 ], [ %101, %111 ], [ %101, %116 ]
  store i64 %120, i64* %4, align 8
  %121 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 19
  %122 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %121, i64 0, i32 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = icmp slt i64 %123, %120
  %125 = bitcast i64* %4 to %"class.base::TimeTicks"*
  %126 = select i1 %124, %"class.base::TimeTicks"* %121, %"class.base::TimeTicks"* %125
  %127 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %126, i64 0, i32 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = sub nsw i64 %128, %12
  call void @_ZN2cc12ResourcePool31ScheduleEvictExpiredResourcesInEN4base9TimeDeltaE(%"class.cc::ResourcePool"* %0, i64 %129)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87)
  br label %130

130:                                              ; preds = %119, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool26EvictResourcesNotUsedSinceEN4base9TimeTicksE(%"class.cc::ResourcePool"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15
  %4 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 0
  br label %12

12:                                               ; preds = %9, %26
  %13 = phi i64 [ %7, %9 ], [ %29, %26 ]
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %12
  %16 = load i64, i64* %10, align 8
  br label %17

17:                                               ; preds = %12, %15
  %18 = phi i64 [ %16, %15 ], [ %13, %12 ]
  %19 = add i64 %18, -1
  %20 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %11, i64 %19) #11
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %21, align 8
  %23 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %22, i64 0, i32 5, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp sgt i64 %24, %1
  br i1 %25, label %31, label %26

26:                                               ; preds = %17
  %27 = tail call %"class.cc::ResourcePool::PoolResource"* @_ZN2cc7PopBackIN4base14circular_dequeINSt3__110unique_ptrINS_12ResourcePool12PoolResourceENS3_14default_deleteIS6_EEEEEEEENT_10value_typeEPSB_(%"class.base::circular_deque"* %3)
  tail call void @_ZN2cc12ResourcePool14DeleteResourceENSt3__110unique_ptrINS0_12PoolResourceENS1_14default_deleteIS3_EEEE(%"class.cc::ResourcePool"* %0, %"class.cc::ResourcePool::PoolResource"* %27)
  %28 = load i64, i64* %4, align 8
  %29 = load i64, i64* %6, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %31, label %12

31:                                               ; preds = %17, %26, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool21FlushEvictedResourcesEv(%"class.cc::ResourcePool"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 19, i32 0, i32 0
  store i64 9223372036854775807, i64* %2, align 8
  %3 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 2
  %4 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %3, align 8
  %5 = icmp eq %"class.viz::ContextProvider"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.viz::ContextProvider"* %4 to %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)***
  %8 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)**, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %8, i64 12
  %10 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %9, align 8
  %11 = tail call %"class.gpu::gles2::GLES2Interface"* %10(%"class.viz::ContextProvider"* nonnull %4) #11
  %12 = bitcast %"class.gpu::gles2::GLES2Interface"* %11 to void (%"class.gpu::gles2::GLES2Interface"*)***
  %13 = load void (%"class.gpu::gles2::GLES2Interface"*)**, void (%"class.gpu::gles2::GLES2Interface"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*)*, void (%"class.gpu::gles2::GLES2Interface"*)** %13, i64 162
  %15 = load void (%"class.gpu::gles2::GLES2Interface"*)*, void (%"class.gpu::gles2::GLES2Interface"*)** %14, align 8
  tail call void %15(%"class.gpu::gles2::GLES2Interface"* %11) #11
  %16 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %3, align 8
  %17 = bitcast %"class.viz::ContextProvider"* %16 to %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)***
  %18 = load %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)**, %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)*, %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)** %18, i64 7
  %20 = load %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)*, %"class.gpu::ContextSupport"* (%"class.viz::ContextProvider"*)** %19, align 8
  %21 = tail call %"class.gpu::ContextSupport"* %20(%"class.viz::ContextProvider"* %16) #11
  %22 = bitcast %"class.gpu::ContextSupport"* %21 to void (%"class.gpu::ContextSupport"*)***
  %23 = load void (%"class.gpu::ContextSupport"*)**, void (%"class.gpu::ContextSupport"*)*** %22, align 8
  %24 = load void (%"class.gpu::ContextSupport"*)*, void (%"class.gpu::ContextSupport"*)** %23, align 8
  tail call void %24(%"class.gpu::ContextSupport"* %21) #11
  br label %25

25:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc12ResourcePool26GetUsageTimeForLRUResourceEv(%"class.cc::ResourcePool"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, %5
  br i1 %6, label %17, label %7

7:                                                ; preds = %1
  %8 = icmp eq i64 %5, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %12

12:                                               ; preds = %7, %9
  %13 = phi i64 [ %11, %9 ], [ %5, %7 ]
  %14 = add i64 %13, -1
  %15 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0
  %16 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %15, i64 %14) #11
  br label %29

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i64 [ %23, %21 ], [ %19, %17 ]
  %26 = add i64 %25, -1
  %27 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 0
  %28 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %27, i64 %26) #11
  br label %29

29:                                               ; preds = %24, %12
  %30 = phi %"class.std::__1::unique_ptr"* [ %28, %24 ], [ %16, %12 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %31, align 8
  %33 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %32, i64 0, i32 5, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  ret i64 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc12ResourcePool12OnMemoryDumpERKN4base11trace_event14MemoryDumpArgsEPNS2_17ProcessMemoryDumpE(%"class.cc::ResourcePool"*, %"struct.base::trace_event::MemoryDumpArgs"* nocapture readonly dereferenceable(16), %"class.base::trace_event::ProcessMemoryDump"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"struct.base::trace_event::MemoryDumpArgs", %"struct.base::trace_event::MemoryDumpArgs"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 6
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i32, i32* %10, align 4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i32 %12) #11
  %13 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #11
  %14 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 11
  %15 = load i64, i64* %14, align 8
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %13, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE, i64 0, i64 0), i64 %15) #11
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %8, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  br label %109

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %34, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0
  %32 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 6
  %33 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 15, i32 0, i32 1
  br label %44

34:                                               ; preds = %44, %24
  %35 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %36, %38
  br i1 %39, label %55, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 0
  %42 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 6
  %43 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 16, i32 0, i32 1
  br label %62

44:                                               ; preds = %30, %44
  %45 = phi i64 [ %26, %30 ], [ %53, %44 ]
  %46 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %31, i64 %45) #11
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %47, align 8
  %49 = load i32, i32* %32, align 4
  tail call void @_ZNK2cc12ResourcePool12PoolResource12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEiPKN3viz22ClientResourceProviderEb(%"class.cc::ResourcePool::PoolResource"* %48, %"class.base::trace_event::ProcessMemoryDump"* %2, i32 %49, %"class.viz::ClientResourceProvider"* undef, i1 zeroext true)
  %50 = add i64 %45, 1
  %51 = load i64, i64* %33, align 8
  %52 = icmp eq i64 %50, %51
  %53 = select i1 %52, i64 0, i64 %50
  %54 = icmp eq i64 %53, %28
  br i1 %54, label %34, label %44

55:                                               ; preds = %62, %34
  %56 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 0
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %59 = icmp eq %"class.std::__1::__tree_end_node"* %57, %58
  br i1 %59, label %109, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.cc::ResourcePool", %"class.cc::ResourcePool"* %0, i64 0, i32 6
  br label %73

62:                                               ; preds = %40, %62
  %63 = phi i64 [ %36, %40 ], [ %71, %62 ]
  %64 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %41, i64 %63) #11
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %65, align 8
  %67 = load i32, i32* %42, align 4
  tail call void @_ZNK2cc12ResourcePool12PoolResource12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEiPKN3viz22ClientResourceProviderEb(%"class.cc::ResourcePool::PoolResource"* %66, %"class.base::trace_event::ProcessMemoryDump"* %2, i32 %67, %"class.viz::ClientResourceProvider"* undef, i1 zeroext false)
  %68 = add i64 %63, 1
  %69 = load i64, i64* %43, align 8
  %70 = icmp eq i64 %68, %69
  %71 = select i1 %70, i64 0, i64 %68
  %72 = icmp eq i64 %71, %38
  br i1 %72, label %55, label %62

73:                                               ; preds = %60, %106
  %74 = phi %"class.std::__1::__tree_end_node"* [ %57, %60 ], [ %107, %106 ]
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 5
  %76 = bitcast %"class.std::__1::__tree_end_node"* %75 to %"class.cc::ResourcePool::PoolResource"**
  %77 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %76, align 8
  %78 = load i32, i32* %61, align 4
  tail call void @_ZNK2cc12ResourcePool12PoolResource12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEiPKN3viz22ClientResourceProviderEb(%"class.cc::ResourcePool::PoolResource"* %77, %"class.base::trace_event::ProcessMemoryDump"* %2, i32 %78, %"class.viz::ClientResourceProvider"* undef, i1 zeroext false)
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 1, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %81, label %82, label %90

82:                                               ; preds = %73
  %83 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.std::__1::__tree_node_base"*
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 2
  %85 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"class.std::__1::__tree_end_node"**
  %86 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, %83
  br i1 %89, label %106, label %97

90:                                               ; preds = %73, %90
  %91 = phi %"class.std::__1::__tree_node_base"* [ %93, %90 ], [ %80, %73 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %91, i64 0, i32 0, i32 0
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  %94 = icmp eq %"class.std::__1::__tree_node_base"* %93, null
  br i1 %94, label %95, label %90

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %91, i64 0, i32 0
  br label %106

97:                                               ; preds = %82, %97
  %98 = phi %"class.std::__1::__tree_end_node"** [ %101, %97 ], [ %85, %82 ]
  %99 = bitcast %"class.std::__1::__tree_end_node"** %98 to %"class.std::__1::__tree_node_base"**
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %100, i64 0, i32 2
  %102 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %101, align 8
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %102, i64 0, i32 0
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, %100
  br i1 %105, label %106, label %97

106:                                              ; preds = %97, %82, %95
  %107 = phi %"class.std::__1::__tree_end_node"* [ %96, %95 ], [ %86, %82 ], [ %102, %97 ]
  %108 = icmp eq %"class.std::__1::__tree_end_node"* %107, %58
  br i1 %108, label %109, label %73

109:                                              ; preds = %106, %55, %23
  ret i1 true
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc12ResourcePool12PoolResource12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEiPKN3viz22ClientResourceProviderEb(%"class.cc::ResourcePool::PoolResource"* nocapture readonly, %"class.base::trace_event::ProcessMemoryDump"*, i32, %"class.viz::ClientResourceProvider"* nocapture readnone, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i64, i64* %10, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %7, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), i32 %2, i64 %12) #11
  %13 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #11
  %14 = call %"class.base::trace_event::MemoryDumpManager"* @_ZN4base11trace_event17MemoryDumpManager11GetInstanceEv() #11
  %15 = getelementptr inbounds %"class.base::trace_event::MemoryDumpManager", %"class.base::trace_event::MemoryDumpManager"* %14, i64 0, i32 7
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %18 = load %"class.cc::ResourcePool::SoftwareBacking"*, %"class.cc::ResourcePool::SoftwareBacking"** %17, align 8
  %19 = icmp eq %"class.cc::ResourcePool::SoftwareBacking"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDump", %"class.base::trace_event::MemoryAllocatorDump"* %13, i64 0, i32 1
  %22 = bitcast %"class.cc::ResourcePool::SoftwareBacking"* %18 to void (%"class.cc::ResourcePool::SoftwareBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)***
  %23 = load void (%"class.cc::ResourcePool::SoftwareBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)**, void (%"class.cc::ResourcePool::SoftwareBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.cc::ResourcePool::SoftwareBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)*, void (%"class.cc::ResourcePool::SoftwareBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)** %23, i64 2
  %25 = load void (%"class.cc::ResourcePool::SoftwareBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)*, void (%"class.cc::ResourcePool::SoftwareBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)** %24, align 8
  call void %25(%"class.cc::ResourcePool::SoftwareBacking"* nonnull %18, %"class.base::trace_event::ProcessMemoryDump"* %1, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %21, i64 %16, i32 2) #11
  br label %36

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %28 = load %"class.cc::ResourcePool::GpuBacking"*, %"class.cc::ResourcePool::GpuBacking"** %27, align 8
  %29 = icmp eq %"class.cc::ResourcePool::GpuBacking"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDump", %"class.base::trace_event::MemoryAllocatorDump"* %13, i64 0, i32 1
  %32 = bitcast %"class.cc::ResourcePool::GpuBacking"* %28 to void (%"class.cc::ResourcePool::GpuBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)***
  %33 = load void (%"class.cc::ResourcePool::GpuBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)**, void (%"class.cc::ResourcePool::GpuBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.cc::ResourcePool::GpuBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)*, void (%"class.cc::ResourcePool::GpuBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)** %33, i64 2
  %35 = load void (%"class.cc::ResourcePool::GpuBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)*, void (%"class.cc::ResourcePool::GpuBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)** %34, align 8
  call void %35(%"class.cc::ResourcePool::GpuBacking"* nonnull %28, %"class.base::trace_event::ProcessMemoryDump"* %1, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %31, i64 %16, i32 2) #11
  br label %36

36:                                               ; preds = %26, %30, %20
  %37 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 1, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 1, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %42, %36
  %47 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 197, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0)) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  %49 = load i32, i32* %39, align 4
  br label %50

50:                                               ; preds = %42, %46
  %51 = phi i32 [ %40, %42 ], [ %49, %46 ]
  %52 = call i32 @_ZN3viz12BitsPerPixelENS_14ResourceFormatE(i32 %38) #11
  %53 = sext i32 %52 to i64
  %54 = sext i32 %51 to i64
  %55 = mul nsw i64 %53, %54
  %56 = icmp eq i64 %55, 0
  %57 = add nsw i64 %55, 7
  %58 = lshr i64 %57, 3
  %59 = select i1 %56, i64 0, i64 %58
  %60 = icmp eq i64 %59, 0
  %61 = add nuw nsw i64 %59, 3
  %62 = and i64 %61, 4611686018427387900
  %63 = select i1 %60, i64 0, i64 %62
  %64 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 1, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = sext i32 %65 to i64
  %67 = mul i64 %63, %66
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %13, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE, i64 0, i64 0), i64 %67) #11
  br i1 %4, label %68, label %69

68:                                               ; preds = %50
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE, i64 0, i64 0), i64 %67) #11
  br label %69

69:                                               ; preds = %68, %50
  %70 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %69
  %75 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %69, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool12PoolResourceC2EmRKN3gfx4SizeEN3viz14ResourceFormatERKNS2_10ColorSpaceE(%"class.cc::ResourcePool::PoolResource"* nocapture, i64, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, %"class.gfx::ColorSpace"* nocapture readonly dereferenceable(68)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 1
  %8 = bitcast %"class.gfx::Size"* %2 to i64*
  %9 = bitcast %"class.gfx::Size"* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 2
  store i32 %3, i32* %11, align 8
  %12 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %4, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 68, i1 false)
  %14 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 8, i32 0, i32 0
  %16 = bitcast i64* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 33, i1 false)
  %17 = bitcast i32* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12ResourcePool12PoolResourceD2Ev(%"class.cc::ResourcePool::PoolResource"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %3 = load %"class.cc::ResourcePool::SoftwareBacking"*, %"class.cc::ResourcePool::SoftwareBacking"** %2, align 8
  store %"class.cc::ResourcePool::SoftwareBacking"* null, %"class.cc::ResourcePool::SoftwareBacking"** %2, align 8
  %4 = icmp eq %"class.cc::ResourcePool::SoftwareBacking"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.cc::ResourcePool::SoftwareBacking"* %3 to void (%"class.cc::ResourcePool::SoftwareBacking"*)***
  %7 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)**, void (%"class.cc::ResourcePool::SoftwareBacking"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %7, i64 1
  %9 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %8, align 8
  tail call void %9(%"class.cc::ResourcePool::SoftwareBacking"* nonnull %3) #11
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %12 = load %"class.cc::ResourcePool::GpuBacking"*, %"class.cc::ResourcePool::GpuBacking"** %11, align 8
  store %"class.cc::ResourcePool::GpuBacking"* null, %"class.cc::ResourcePool::GpuBacking"** %11, align 8
  %13 = icmp eq %"class.cc::ResourcePool::GpuBacking"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.cc::ResourcePool::GpuBacking"* %12 to void (%"class.cc::ResourcePool::GpuBacking"*)***
  %16 = load void (%"class.cc::ResourcePool::GpuBacking"*)**, void (%"class.cc::ResourcePool::GpuBacking"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %16, i64 1
  %18 = load void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %17, align 8
  tail call void %18(%"class.cc::ResourcePool::GpuBacking"* nonnull %12) #11
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #11
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !17
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #11
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %26, i8* %27) #11
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #11
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #7

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEE13DestructRangeIS9_Li0EEEvPS9_SC_(%"class.base::internal::VectorBuffer"* %7, %"class.std::__1::unique_ptr"* %8, %"class.std::__1::unique_ptr"* %12)
  %13 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.std::__1::unique_ptr"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEE13DestructRangeIS9_Li0EEEvPS9_SC_(%"class.base::internal::VectorBuffer"* %7, %"class.std::__1::unique_ptr"* %15, %"class.std::__1::unique_ptr"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEE13DestructRangeIS9_Li0EEEvPS9_SC_(%"class.base::internal::VectorBuffer"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.std::__1::unique_ptr"*, align 8
  %6 = alloca %"class.std::__1::unique_ptr"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"** %5, align 8
  store %"class.std::__1::unique_ptr"* %2, %"class.std::__1::unique_ptr"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"class.std::__1::unique_ptr"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::unique_ptr"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISB_E4typeEEE5valueEPcE4typeESD_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESO_SQ_) #11
  %17 = bitcast %"class.std::__1::unique_ptr"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISB_E4typeEEE5valueEPcE4typeESD_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESO_SQ_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8* %16, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr"* %26, %27
  br i1 %28, label %59, label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.std::__1::unique_ptr"* [ %56, %54 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %31, align 8
  store %"class.cc::ResourcePool::PoolResource"* null, %"class.cc::ResourcePool::PoolResource"** %31, align 8
  %33 = icmp eq %"class.cc::ResourcePool::PoolResource"* %32, null
  br i1 %33, label %54, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %32, i64 0, i32 10, i32 0, i32 0, i32 0
  %36 = load %"class.cc::ResourcePool::SoftwareBacking"*, %"class.cc::ResourcePool::SoftwareBacking"** %35, align 8
  store %"class.cc::ResourcePool::SoftwareBacking"* null, %"class.cc::ResourcePool::SoftwareBacking"** %35, align 8
  %37 = icmp eq %"class.cc::ResourcePool::SoftwareBacking"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.cc::ResourcePool::SoftwareBacking"* %36 to void (%"class.cc::ResourcePool::SoftwareBacking"*)***
  %40 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)**, void (%"class.cc::ResourcePool::SoftwareBacking"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %40, i64 1
  %42 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %41, align 8
  call void %42(%"class.cc::ResourcePool::SoftwareBacking"* nonnull %36) #11
  br label %43

43:                                               ; preds = %38, %34
  %44 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %32, i64 0, i32 9, i32 0, i32 0, i32 0
  %45 = load %"class.cc::ResourcePool::GpuBacking"*, %"class.cc::ResourcePool::GpuBacking"** %44, align 8
  store %"class.cc::ResourcePool::GpuBacking"* null, %"class.cc::ResourcePool::GpuBacking"** %44, align 8
  %46 = icmp eq %"class.cc::ResourcePool::GpuBacking"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.cc::ResourcePool::GpuBacking"* %45 to void (%"class.cc::ResourcePool::GpuBacking"*)***
  %49 = load void (%"class.cc::ResourcePool::GpuBacking"*)**, void (%"class.cc::ResourcePool::GpuBacking"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %49, i64 1
  %51 = load void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %50, align 8
  call void %51(%"class.cc::ResourcePool::GpuBacking"* nonnull %45) #11
  br label %52

52:                                               ; preds = %47, %43
  %53 = bitcast %"class.cc::ResourcePool::PoolResource"* %32 to i8*
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %29, %52
  %55 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 1
  store %"class.std::__1::unique_ptr"* %56, %"class.std::__1::unique_ptr"** %5, align 8
  %57 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %58 = icmp eq %"class.std::__1::unique_ptr"* %56, %57
  br i1 %58, label %59, label %29

59:                                               ; preds = %54, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %1
  ret %"class.std::__1::unique_ptr"* %25
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISB_E4typeEEE5valueEPcE4typeESD_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESO_SQ_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2cc12ResourcePool12PoolResourceENS_14default_deleteIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %35, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2cc12ResourcePool12PoolResourceENS_14default_deleteIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2cc12ResourcePool12PoolResourceENS_14default_deleteIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %10, align 8
  store %"class.cc::ResourcePool::PoolResource"* null, %"class.cc::ResourcePool::PoolResource"** %10, align 8
  %12 = icmp eq %"class.cc::ResourcePool::PoolResource"* %11, null
  br i1 %12, label %33, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %11, i64 0, i32 10, i32 0, i32 0, i32 0
  %15 = load %"class.cc::ResourcePool::SoftwareBacking"*, %"class.cc::ResourcePool::SoftwareBacking"** %14, align 8
  store %"class.cc::ResourcePool::SoftwareBacking"* null, %"class.cc::ResourcePool::SoftwareBacking"** %14, align 8
  %16 = icmp eq %"class.cc::ResourcePool::SoftwareBacking"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.cc::ResourcePool::SoftwareBacking"* %15 to void (%"class.cc::ResourcePool::SoftwareBacking"*)***
  %19 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)**, void (%"class.cc::ResourcePool::SoftwareBacking"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %19, i64 1
  %21 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %20, align 8
  tail call void %21(%"class.cc::ResourcePool::SoftwareBacking"* nonnull %15) #11
  br label %22

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %11, i64 0, i32 9, i32 0, i32 0, i32 0
  %24 = load %"class.cc::ResourcePool::GpuBacking"*, %"class.cc::ResourcePool::GpuBacking"** %23, align 8
  store %"class.cc::ResourcePool::GpuBacking"* null, %"class.cc::ResourcePool::GpuBacking"** %23, align 8
  %25 = icmp eq %"class.cc::ResourcePool::GpuBacking"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.cc::ResourcePool::GpuBacking"* %24 to void (%"class.cc::ResourcePool::GpuBacking"*)***
  %28 = load void (%"class.cc::ResourcePool::GpuBacking"*)**, void (%"class.cc::ResourcePool::GpuBacking"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %28, i64 1
  %30 = load void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %29, align 8
  tail call void %30(%"class.cc::ResourcePool::GpuBacking"* nonnull %24) #11
  br label %31

31:                                               ; preds = %26, %22
  %32 = bitcast %"class.cc::ResourcePool::PoolResource"* %11 to i8*
  tail call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %4, %31
  %34 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %2, %33
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base22MemoryPressureListenerD1Ev(%"class.base::MemoryPressureListener"*) unnamed_addr #3

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN2cc12ResourcePoolEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_7WeakPtrIS4_EEEEEFvS6_EE3RunEPNS0_13BindStateBaseES6_(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #11
  br i1 %7, label %8, label %43

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.cc::ResourcePool"**
  %11 = load %"class.cc::ResourcePool"*, %"class.cc::ResourcePool"** %10, align 8
  %12 = icmp eq %"class.cc::ResourcePool"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #11
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #11
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.cc::ResourcePool"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.cc::ResourcePool"*, i32)**
  %38 = load void (%"class.cc::ResourcePool"*, i32)*, void (%"class.cc::ResourcePool"*, i32)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.cc::ResourcePool"*, i32)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.cc::ResourcePool"*, i32)* [ %38, %32 ], [ %40, %39 ]
  call void %42(%"class.cc::ResourcePool"* %29, i32 %1) #11
  br label %43

43:                                               ; preds = %2, %8, %41
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN2cc12ResourcePoolEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN2cc12ResourcePoolEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #11
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.cc::ResourcePool"**
  %9 = load %"class.cc::ResourcePool"*, %"class.cc::ResourcePool"** %8, align 8
  %10 = icmp ne %"class.cc::ResourcePool"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #11
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN4base22MemoryPressureListenerC1ERKNS_8LocationERKNS_17RepeatingCallbackIFvNS0_19MemoryPressureLevelEEEE(%"class.base::MemoryPressureListener"*, %"class.base::Location"* dereferenceable(32), %"class.base::RepeatingCallback"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #11
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #11
  br i1 %31, label %32, label %33, !prof !17

32:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #11
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE10MoveBufferERNS_8internal12VectorBufferIS8_EEmmPSC_PmSF_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #11
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #11
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE10MoveBufferERNS_8internal12VectorBufferIS8_EEmmPSC_PmSF_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEE9MoveRangeIS9_Li0EEEvPS9_SC_SC_(%"class.std::__1::unique_ptr"* %11, %"class.std::__1::unique_ptr"* %12, %"class.std::__1::unique_ptr"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEE9MoveRangeIS9_Li0EEEvPS9_SC_SC_(%"class.std::__1::unique_ptr"* %19, %"class.std::__1::unique_ptr"* %20, %"class.std::__1::unique_ptr"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEE9MoveRangeIS9_Li0EEEvPS9_SC_SC_(%"class.std::__1::unique_ptr"* %24, %"class.std::__1::unique_ptr"* %25, %"class.std::__1::unique_ptr"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEE9MoveRangeIS9_Li0EEEvPS9_SC_SC_(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"class.std::__1::unique_ptr"* %0 to i64
  %6 = icmp ult %"class.std::__1::unique_ptr"* %2, %1
  br i1 %6, label %7, label %23

7:                                                ; preds = %3
  %8 = ptrtoint %"class.std::__1::unique_ptr"* %2 to i64
  %9 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #11
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #11
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !17

16:                                               ; preds = %7
  tail call void @llvm.trap() #11
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %3, %17, %20
  %24 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %24, label %58, label %25

25:                                               ; preds = %23, %54
  %26 = phi %"class.std::__1::unique_ptr"* [ %56, %54 ], [ %2, %23 ]
  %27 = phi %"class.std::__1::unique_ptr"* [ %55, %54 ], [ %0, %23 ]
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::unique_ptr"* %27 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.cc::ResourcePool::PoolResource"* null, %"class.cc::ResourcePool::PoolResource"** %28, align 8
  %31 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  store i64 %30, i64* %31, align 8
  %32 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %28, align 8
  store %"class.cc::ResourcePool::PoolResource"* null, %"class.cc::ResourcePool::PoolResource"** %28, align 8
  %33 = icmp eq %"class.cc::ResourcePool::PoolResource"* %32, null
  br i1 %33, label %54, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %32, i64 0, i32 10, i32 0, i32 0, i32 0
  %36 = load %"class.cc::ResourcePool::SoftwareBacking"*, %"class.cc::ResourcePool::SoftwareBacking"** %35, align 8
  store %"class.cc::ResourcePool::SoftwareBacking"* null, %"class.cc::ResourcePool::SoftwareBacking"** %35, align 8
  %37 = icmp eq %"class.cc::ResourcePool::SoftwareBacking"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.cc::ResourcePool::SoftwareBacking"* %36 to void (%"class.cc::ResourcePool::SoftwareBacking"*)***
  %40 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)**, void (%"class.cc::ResourcePool::SoftwareBacking"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %40, i64 1
  %42 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %41, align 8
  call void %42(%"class.cc::ResourcePool::SoftwareBacking"* nonnull %36) #11
  br label %43

43:                                               ; preds = %38, %34
  %44 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %32, i64 0, i32 9, i32 0, i32 0, i32 0
  %45 = load %"class.cc::ResourcePool::GpuBacking"*, %"class.cc::ResourcePool::GpuBacking"** %44, align 8
  store %"class.cc::ResourcePool::GpuBacking"* null, %"class.cc::ResourcePool::GpuBacking"** %44, align 8
  %46 = icmp eq %"class.cc::ResourcePool::GpuBacking"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.cc::ResourcePool::GpuBacking"* %45 to void (%"class.cc::ResourcePool::GpuBacking"*)***
  %49 = load void (%"class.cc::ResourcePool::GpuBacking"*)**, void (%"class.cc::ResourcePool::GpuBacking"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %49, i64 1
  %51 = load void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %50, align 8
  call void %51(%"class.cc::ResourcePool::GpuBacking"* nonnull %45) #11
  br label %52

52:                                               ; preds = %47, %43
  %53 = bitcast %"class.cc::ResourcePool::PoolResource"* %32 to i8*
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %25, %52
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 1
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 1
  %57 = icmp eq %"class.std::__1::unique_ptr"* %55, %1
  br i1 %57, label %58, label %25

58:                                               ; preds = %54, %23
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %1
  ret %"class.std::__1::unique_ptr"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE5eraseENS_8internal29circular_deque_const_iteratorIS8_EESC_(%"class.base::circular_deque"*, %"class.base::circular_deque"*, i64, %"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = icmp eq i64 %2, %4
  br i1 %6, label %63, label %7

7:                                                ; preds = %5
  %8 = icmp ult i64 %2, %4
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %2)
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEE13DestructRangeIS9_Li0EEEvPS9_SC_(%"class.base::internal::VectorBuffer"* %9, %"class.std::__1::unique_ptr"* %10, %"class.std::__1::unique_ptr"* %14)
  %15 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0)
  br label %16

16:                                               ; preds = %7, %11
  %17 = phi %"class.std::__1::unique_ptr"* [ %15, %11 ], [ %10, %7 ]
  %18 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %4)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEE13DestructRangeIS9_Li0EEEvPS9_SC_(%"class.base::internal::VectorBuffer"* %9, %"class.std::__1::unique_ptr"* %17, %"class.std::__1::unique_ptr"* %18)
  %19 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, %2
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  store i64 %4, i64* %19, align 8
  br label %63

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  br label %27

27:                                               ; preds = %50, %23
  %28 = phi i64 [ %20, %23 ], [ %61, %50 ]
  %29 = phi i64 [ %4, %23 ], [ %57, %50 ]
  %30 = phi i64 [ %2, %23 ], [ %60, %50 ]
  %31 = icmp ult i64 %29, %28
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  %33 = sub i64 %29, %28
  br label %38

34:                                               ; preds = %27
  %35 = load i64, i64* %26, align 8
  %36 = sub i64 %29, %28
  %37 = add i64 %36, %35
  br label %38

38:                                               ; preds = %34, %32
  %39 = phi i64 [ %33, %32 ], [ %37, %34 ]
  %40 = icmp ult i64 %25, %28
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  %42 = sub i64 %25, %28
  br label %47

43:                                               ; preds = %38
  %44 = load i64, i64* %26, align 8
  %45 = sub i64 %25, %28
  %46 = add i64 %45, %44
  br label %47

47:                                               ; preds = %41, %43
  %48 = phi i64 [ %42, %41 ], [ %46, %43 ]
  %49 = icmp ult i64 %39, %48
  br i1 %49, label %50, label %62

50:                                               ; preds = %47
  %51 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %29)
  %52 = add i64 %29, 1
  %53 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %52)
  %54 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %30)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS2_14default_deleteIS6_EEEEE9MoveRangeIS9_Li0EEEvPS9_SC_SC_(%"class.std::__1::unique_ptr"* %51, %"class.std::__1::unique_ptr"* %53, %"class.std::__1::unique_ptr"* %54)
  %55 = load i64, i64* %26, align 8
  %56 = icmp eq i64 %52, %55
  %57 = select i1 %56, i64 0, i64 %52
  %58 = add i64 %30, 1
  %59 = icmp eq i64 %58, %55
  %60 = select i1 %59, i64 0, i64 %58
  %61 = load i64, i64* %19, align 8
  br label %27

62:                                               ; preds = %47
  store i64 %30, i64* %24, align 8
  br label %63

63:                                               ; preds = %5, %62, %22
  %64 = phi i64 [ %4, %22 ], [ %2, %62 ], [ %2, %5 ]
  %65 = insertvalue { %"class.base::circular_deque"*, i64 } undef, %"class.base::circular_deque"* %0, 0
  %66 = insertvalue { %"class.base::circular_deque"*, i64 } %65, i64 %64, 1
  ret { %"class.base::circular_deque"*, i64 } %66
}

declare i32 @_ZN3viz12BitsPerPixelENS_14ResourceFormatE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN2cc12ResourcePoolEFvmRKN3gpu9SyncTokenEbEJNS_7WeakPtrIS4_EEmEEEFvS8_bEE7RunOnceEPNS0_13BindStateBaseES8_b(%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"* dereferenceable(24), i1 zeroext) #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 2
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to i64*
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::internal::WeakReference"*
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #11
  br i1 %10, label %11, label %47

11:                                               ; preds = %3
  %12 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 1
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %12 to %"class.cc::ResourcePool"**
  %14 = load %"class.cc::ResourcePool"*, %"class.cc::ResourcePool"** %13, align 8
  %15 = icmp eq %"class.cc::ResourcePool"* %14, null
  br i1 %15, label %47, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.base::internal::BindStateBase"* %5 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %20 = bitcast void ()** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #11
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #11
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %26

26:                                               ; preds = %23, %16
  %27 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #11
  %28 = bitcast void (%"class.base::internal::BindStateBase"*)** %12 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = select i1 %27, i8* %29, i8* null
  %31 = getelementptr inbounds i8, i8* %30, i64 %21
  %32 = bitcast i8* %31 to %"class.cc::ResourcePool"*
  %33 = and i64 %18, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %26
  %36 = bitcast i8* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = add i64 %18, -1
  %39 = getelementptr i8, i8* %37, i64 %38
  %40 = bitcast i8* %39 to void (%"class.cc::ResourcePool"*, i64, %"struct.gpu::SyncToken"*, i1)**
  %41 = load void (%"class.cc::ResourcePool"*, i64, %"struct.gpu::SyncToken"*, i1)*, void (%"class.cc::ResourcePool"*, i64, %"struct.gpu::SyncToken"*, i1)** %40, align 8
  br label %44

42:                                               ; preds = %26
  %43 = inttoptr i64 %18 to void (%"class.cc::ResourcePool"*, i64, %"struct.gpu::SyncToken"*, i1)*
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi void (%"class.cc::ResourcePool"*, i64, %"struct.gpu::SyncToken"*, i1)* [ %41, %35 ], [ %43, %42 ]
  %46 = load i64, i64* %8, align 8
  call void %45(%"class.cc::ResourcePool"* %32, i64 %46, %"struct.gpu::SyncToken"* dereferenceable(24) %1, i1 zeroext %2) #11
  br label %47

47:                                               ; preds = %3, %11, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN2cc12ResourcePoolEFvmRKN3gpu9SyncTokenEbEJNS_7WeakPtrIS3_EEmEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN2cc12ResourcePoolEFvmRKN3gpu9SyncTokenEbEJNS_7WeakPtrIS4_EEmEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #11
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.cc::ResourcePool"**
  %9 = load %"class.cc::ResourcePool"*, %"class.cc::ResourcePool"** %8, align 8
  %10 = icmp ne %"class.cc::ResourcePool"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #11
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #11
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #11
  br i1 %37, label %38, label %39, !prof !17

38:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #11
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN2cc12ResourcePool12PoolResourceENS1_14default_deleteIS5_EEEEE10MoveBufferERNS_8internal12VectorBufferIS8_EEmmPSC_PmSF_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #11
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #11
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2cc12ResourcePool12PoolResourceENS_14default_deleteIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS_9allocatorIS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #11
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.cc::ResourcePool::PoolResource"**
  %47 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %46, align 8
  store %"class.cc::ResourcePool::PoolResource"* null, %"class.cc::ResourcePool::PoolResource"** %46, align 8
  %48 = icmp eq %"class.cc::ResourcePool::PoolResource"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %47, i64 0, i32 10, i32 0, i32 0, i32 0
  %51 = load %"class.cc::ResourcePool::SoftwareBacking"*, %"class.cc::ResourcePool::SoftwareBacking"** %50, align 8
  store %"class.cc::ResourcePool::SoftwareBacking"* null, %"class.cc::ResourcePool::SoftwareBacking"** %50, align 8
  %52 = icmp eq %"class.cc::ResourcePool::SoftwareBacking"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.cc::ResourcePool::SoftwareBacking"* %51 to void (%"class.cc::ResourcePool::SoftwareBacking"*)***
  %55 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)**, void (%"class.cc::ResourcePool::SoftwareBacking"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %55, i64 1
  %57 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %56, align 8
  tail call void %57(%"class.cc::ResourcePool::SoftwareBacking"* nonnull %51) #11
  br label %58

58:                                               ; preds = %53, %49
  %59 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %47, i64 0, i32 9, i32 0, i32 0, i32 0
  %60 = load %"class.cc::ResourcePool::GpuBacking"*, %"class.cc::ResourcePool::GpuBacking"** %59, align 8
  store %"class.cc::ResourcePool::GpuBacking"* null, %"class.cc::ResourcePool::GpuBacking"** %59, align 8
  %61 = icmp eq %"class.cc::ResourcePool::GpuBacking"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = bitcast %"class.cc::ResourcePool::GpuBacking"* %60 to void (%"class.cc::ResourcePool::GpuBacking"*)***
  %64 = load void (%"class.cc::ResourcePool::GpuBacking"*)**, void (%"class.cc::ResourcePool::GpuBacking"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %64, i64 1
  %66 = load void (%"class.cc::ResourcePool::GpuBacking"*)*, void (%"class.cc::ResourcePool::GpuBacking"*)** %65, align 8
  tail call void %66(%"class.cc::ResourcePool::GpuBacking"* nonnull %60) #11
  br label %67

67:                                               ; preds = %62, %58
  %68 = bitcast %"class.cc::ResourcePool::PoolResource"* %47 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %38, %67
  %70 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %70) #12
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN2cc12ResourcePoolEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #11
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.cc::ResourcePool"**
  %10 = load %"class.cc::ResourcePool"*, %"class.cc::ResourcePool"** %9, align 8
  %11 = icmp eq %"class.cc::ResourcePool"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #11
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #11
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.cc::ResourcePool"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.cc::ResourcePool"*)**
  %37 = load void (%"class.cc::ResourcePool"*)*, void (%"class.cc::ResourcePool"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.cc::ResourcePool"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.cc::ResourcePool"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.cc::ResourcePool"* %28) #11
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN2cc12ResourcePoolEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN2cc12ResourcePoolEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #11
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.cc::ResourcePool"**
  %9 = load %"class.cc::ResourcePool"*, %"class.cc::ResourcePool"** %8, align 8
  %10 = icmp ne %"class.cc::ResourcePool"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #11
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryIN2cc12ResourcePoolEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryIN2cc12ResourcePoolEE10GetWeakPtrEv"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN2cc12ResourcePoolEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN2cc12ResourcePoolEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base13BindRepeatingIMN2cc12ResourcePoolEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!10 = distinct !{!10, !"_ZN4base13BindRepeatingIMN2cc12ResourcePoolEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2cc12ResourcePool12PoolResourceENS_14default_deleteIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSL_IJEEEEEENS2_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISR_EEEEEEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2cc12ResourcePool12PoolResourceENS_14default_deleteIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSL_IJEEEEEENS2_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISR_EEEEEEDpOT_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2cc12ResourcePool12PoolResourceENS_14default_deleteIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSL_IJEEEEEENS2_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISR_EEEEEEDpOT_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2cc12ResourcePool12PoolResourceENS_14default_deleteIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSL_IJEEEEEENS2_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISR_EEEEEEDpOT_"}
!17 = !{!"branch_weights", i32 1, i32 2000}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2cc12ResourcePool12PoolResourceENS_14default_deleteIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSL_IJEEEEEENS2_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISR_EEEEEEDpOT_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN2cc12ResourcePool12PoolResourceENS_14default_deleteIS5_EEEEEENS_19__map_value_compareImS9_NS_4lessImEELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSL_IJEEEEEENS2_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISR_EEEEEEDpOT_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3viz20TransferableResource6MakeGLERKN3gpu7MailboxEjjRKNS1_9SyncTokenERKN3gfx4SizeEb: argument 0"}
!23 = distinct !{!23, !"_ZN3viz20TransferableResource6MakeGLERKN3gpu7MailboxEjjRKNS1_9SyncTokenERKN3gfx4SizeEb"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN3viz20TransferableResource12MakeSoftwareERKN3gpu7MailboxERKN3gfx4SizeENS_14ResourceFormatE: argument 0"}
!26 = distinct !{!26, !"_ZN3viz20TransferableResource12MakeSoftwareERKN3gpu7MailboxERKN3gfx4SizeENS_14ResourceFormatE"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK4base14WeakPtrFactoryIN2cc12ResourcePoolEE10GetWeakPtrEv: argument 0"}
!29 = distinct !{!29, !"_ZNK4base14WeakPtrFactoryIN2cc12ResourcePoolEE10GetWeakPtrEv"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2cc12ResourcePoolEFvmRKN3gpu9SyncTokenEbEJNS_7WeakPtrIS4_EEmEEEDcOT0_DpOT1_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2cc12ResourcePoolEFvmRKN3gpu9SyncTokenEbEJNS_7WeakPtrIS4_EEmEEEDcOT0_DpOT1_"}
!33 = distinct !{!33, !34, !"_ZN4base8BindOnceIMN2cc12ResourcePoolEFvmRKN3gpu9SyncTokenEbEJNS_7WeakPtrIS2_EEmEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8BindOnceIMN2cc12ResourcePoolEFvmRKN3gpu9SyncTokenEbEJNS_7WeakPtrIS2_EEmEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK4base14WeakPtrFactoryIN2cc12ResourcePoolEE10GetWeakPtrEv: argument 0"}
!37 = distinct !{!37, !"_ZNK4base14WeakPtrFactoryIN2cc12ResourcePoolEE10GetWeakPtrEv"}
!38 = !{!39, !41}
!39 = distinct !{!39, !40, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2cc12ResourcePoolEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!40 = distinct !{!40, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2cc12ResourcePoolEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!41 = distinct !{!41, !42, !"_ZN4base8BindOnceIMN2cc12ResourcePoolEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!42 = distinct !{!42, !"_ZN4base8BindOnceIMN2cc12ResourcePoolEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
