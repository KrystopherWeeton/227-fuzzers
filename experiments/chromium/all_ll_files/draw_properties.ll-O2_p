; ModuleID = '../../cc/layers/draw_properties.cc'
source_filename = "../../cc/layers/draw_properties.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }

@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4

@_ZN2cc14DrawPropertiesC1Ev = hidden unnamed_addr alias void (%"struct.cc::DrawProperties"*), void (%"struct.cc::DrawProperties"*)* @_ZN2cc14DrawPropertiesC2Ev
@_ZN2cc14DrawPropertiesD1Ev = hidden unnamed_addr alias void (%"struct.cc::DrawProperties"*), void (%"struct.cc::DrawProperties"*)* @_ZN2cc14DrawPropertiesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14DrawPropertiesC2Ev(%"struct.cc::DrawProperties"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.cc::DrawProperties"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #4
  %3 = getelementptr inbounds %"struct.cc::DrawProperties", %"struct.cc::DrawProperties"* %0, i64 0, i32 0, i32 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"struct.cc::DrawProperties", %"struct.cc::DrawProperties"* %0, i64 0, i32 1
  %5 = bitcast %"class.gfx::Transform"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #4
  %6 = getelementptr inbounds %"struct.cc::DrawProperties", %"struct.cc::DrawProperties"* %0, i64 0, i32 1, i32 0, i32 1
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"struct.cc::DrawProperties", %"struct.cc::DrawProperties"* %0, i64 0, i32 2
  tail call void @_ZN2cc9OcclusionC1Ev(%"class.cc::Occlusion"* %7) #4
  %8 = getelementptr inbounds %"struct.cc::DrawProperties", %"struct.cc::DrawProperties"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"struct.cc::DrawProperties", %"struct.cc::DrawProperties"* %0, i64 0, i32 7
  %10 = bitcast float* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 7, i1 false)
  %11 = bitcast %"class.gfx::Rect"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 100, i1 false)
  ret void
}

declare void @_ZN2cc9OcclusionC1Ev(%"class.cc::Occlusion"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14DrawPropertiesD2Ev(%"struct.cc::DrawProperties"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::DrawProperties", %"struct.cc::DrawProperties"* %0, i64 0, i32 2, i32 2
  tail call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* %2) #4
  %3 = getelementptr inbounds %"struct.cc::DrawProperties", %"struct.cc::DrawProperties"* %0, i64 0, i32 2, i32 1
  tail call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* %3) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
