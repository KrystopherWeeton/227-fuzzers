; ModuleID = '../../v8/src/runtime/runtime-literals.cc'
source_filename = "../../v8/src/runtime/runtime-literals.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.1137" = type { %"struct.std::__1::__atomic_base.1138" }
%"struct.std::__1::__atomic_base.1138" = type { %"struct.std::__1::__atomic_base.1139" }
%"struct.std::__1::__atomic_base.1139" = type { %"struct.std::__1::__cxx_atomic_impl.1140" }
%"struct.std::__1::__cxx_atomic_impl.1140" = type { %"struct.std::__1::__cxx_atomic_base_impl.1141" }
%"struct.std::__1::__cxx_atomic_base_impl.1141" = type { i32 }
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.969"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.978", i32, i8, i8, i32, i32, %"class.std::__1::vector.984", %"class.std::__1::vector.984", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.991", i64, %"class.std::__1::unordered_map.992", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1048", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1086", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1120", %"class.std::__1::vector.1124", %"class.std::__1::vector.1124", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1132" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ %union.anon.1131, i32, [4 x i8] }>
%union.anon.1131 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon.956, %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%union.anon.956 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.964" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"class.std::__1::__compressed_pair.959" }
%"struct.std::__1::pair.958" = type opaque
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"struct.std::__1::pair.958"** }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.969" = type { %"class.std::__1::__vector_base.970" }
%"class.std::__1::__vector_base.970" = type { %"class.v8::internal::Handle.971"*, %"class.v8::internal::Handle.971"*, %"class.std::__1::__compressed_pair.972" }
%"class.v8::internal::Handle.971" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.v8::internal::Handle.971"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.977", [128 x i8] }
%"class.v8::internal::Vector.977" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.984" = type { %"class.std::__1::__vector_base.985" }
%"class.std::__1::__vector_base.985" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.987" }
%"struct.std::__1::__compressed_pair_elem.987" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.991" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.992" = type { %"class.std::__1::__hash_table.993" }
%"class.std::__1::__hash_table.993" = type <{ %"class.std::__1::unique_ptr.994", %"class.std::__1::__compressed_pair.1004", %"class.std::__1::__compressed_pair.1009", %"class.std::__1::__compressed_pair.1012", [4 x i8] }>
%"class.std::__1::unique_ptr.994" = type { %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996", %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"struct.std::__1::__hash_node_base.997"** }
%"struct.std::__1::__hash_node_base.997" = type { %"struct.std::__1::__hash_node_base.997"* }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.std::__1::__bucket_list_deallocator.999" }
%"class.std::__1::__bucket_list_deallocator.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"struct.std::__1::__hash_node_base.997" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1016", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1045", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1046", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1016" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1041, %union.anon.1043, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1041 = type { i64 }
%union.anon.1043 = type { i64 }
%"class.std::__1::weak_ptr.1045" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1046" = type { %"class.v8::PersistentBase.1047" }
%"class.v8::PersistentBase.1047" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1017", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1017" = type { %"class.std::__1::__hash_table.1018" }
%"class.std::__1::__hash_table.1018" = type <{ %"class.std::__1::unique_ptr.1019", %"class.std::__1::__compressed_pair.1029", %"class.std::__1::__compressed_pair.1034", %"class.std::__1::__compressed_pair.1037", [4 x i8] }>
%"class.std::__1::unique_ptr.1019" = type { %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021", %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"struct.std::__1::__hash_node_base.1022"** }
%"struct.std::__1::__hash_node_base.1022" = type { %"struct.std::__1::__hash_node_base.1022"* }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.std::__1::__bucket_list_deallocator.1024" }
%"class.std::__1::__bucket_list_deallocator.1024" = type { %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"struct.std::__1::__hash_node_base.1022" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1077", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1053", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1057", %"class.std::__1::unique_ptr.1063", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1069", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1053" = type { %"struct.std::__1::__atomic_base.1054" }
%"struct.std::__1::__atomic_base.1054" = type { %"struct.std::__1::__cxx_atomic_impl.1055" }
%"struct.std::__1::__cxx_atomic_impl.1055" = type { %"struct.std::__1::__cxx_atomic_base_impl.1056" }
%"struct.std::__1::__cxx_atomic_base_impl.1056" = type { i32 }
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::unique_ptr.1063" = type { %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1069" = type { %"class.std::__1::__vector_base.1070" }
%"class.std::__1::__vector_base.1070" = type { %"struct.std::__1::pair.1071"*, %"struct.std::__1::pair.1071"*, %"class.std::__1::__compressed_pair.1072" }
%"struct.std::__1::pair.1071" = type opaque
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"struct.std::__1::pair.1071"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1094" }
%"class.std::__1::unordered_map.1094" = type { %"class.std::__1::__hash_table.1095" }
%"class.std::__1::__hash_table.1095" = type <{ %"class.std::__1::unique_ptr.1096", %"class.std::__1::__compressed_pair.1106", %"class.std::__1::__compressed_pair.1111", %"class.std::__1::__compressed_pair.1114", [4 x i8] }>
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098", %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"struct.std::__1::__hash_node_base.1099"** }
%"struct.std::__1::__hash_node_base.1099" = type { %"struct.std::__1::__hash_node_base.1099"* }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"class.std::__1::__bucket_list_deallocator.1101" }
%"class.std::__1::__bucket_list_deallocator.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"struct.std::__1::__hash_node_base.1099" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1120" = type { %"struct.std::__1::__atomic_base.1121" }
%"struct.std::__1::__atomic_base.1121" = type { %"struct.std::__1::__cxx_atomic_impl.1122" }
%"struct.std::__1::__cxx_atomic_impl.1122" = type { %"struct.std::__1::__cxx_atomic_base_impl.1123" }
%"struct.std::__1::__cxx_atomic_base_impl.1123" = type { %"class.std::__1::vector.1124"* }
%"class.std::__1::vector.1124" = type { %"class.std::__1::__vector_base.1125" }
%"class.std::__1::__vector_base.1125" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1126" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor" = type <{ %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"*, i32, [4 x i8] }>
%"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext" = type { %"class.v8::internal::Isolate"* }
%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192" = type <{ %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"*, i32, [4 x i8] }>
%"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext" = type { %"class.v8::internal::AllocationSiteContext" }
%"class.v8::internal::AllocationSiteContext" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1168", %"class.v8::internal::Handle.1168" }
%"class.v8::internal::Handle.1168" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195" = type <{ %"class.v8::internal::AllocationSiteUsageContext"*, i32, [4 x i8] }>
%"class.v8::internal::AllocationSiteUsageContext" = type <{ %"class.v8::internal::AllocationSiteContext", %"class.v8::internal::Handle.1168", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1147" = type { %"class.std::__1::__compressed_pair.1148" }
%"class.std::__1::__compressed_pair.1148" = type { %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::internal::tracing::ScopedTracer" = type { %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data" }
%"struct.v8::internal::tracing::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::Representation" = type { i8 }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef" = type { %"class.v8::internal::JSObject" }

$_ZN2v88internal8JSObject17FastPropertyAtPutENS0_10FieldIndexENS0_6ObjectENS0_16WriteBarrierModeE = comdat any

$_ZNK2v88internal14Representation8MnemonicEv = comdat any

@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1137", align 4
@_ZZN2v88internalL33Stats_Runtime_CreateObjectLiteralEiPmPNS0_7IsolateEE28trace_event_unique_atomic604 = internal global i64 0, align 8
@.str = private unnamed_addr constant [31 x i8] c"disabled-by-default-v8.runtime\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"V8.Runtime_Runtime_CreateObjectLiteral\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"args[0].IsHeapObject()\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"args[1].IsTaggedIndex()\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"args[2].IsObjectBoilerplateDescription()\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"args[3].IsSmi()\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"literals_slot.ToInt() < vector->length()\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"unimplemented code\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.17 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@_ZN2v88internal24FLAG_track_double_fieldsE = external local_unnamed_addr global i8, align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"FastLiteral\00", align 1
@_ZN2v88internal32FLAG_allocation_site_pretenuringE = external local_unnamed_addr global i8, align 1
@_ZZN2v88internalL54Stats_Runtime_CreateObjectLiteralWithoutAllocationSiteEiPmPNS0_7IsolateEE28trace_event_unique_atomic622 = internal global i64 0, align 8
@.str.19 = private unnamed_addr constant [60 x i8] c"V8.Runtime_Runtime_CreateObjectLiteralWithoutAllocationSite\00", align 1
@.str.20 = private unnamed_addr constant [41 x i8] c"args[0].IsObjectBoilerplateDescription()\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"args[1].IsSmi()\00", align 1
@_ZZN2v88internalL53Stats_Runtime_CreateArrayLiteralWithoutAllocationSiteEiPmPNS0_7IsolateEE28trace_event_unique_atomic632 = internal global i64 0, align 8
@.str.22 = private unnamed_addr constant [59 x i8] c"V8.Runtime_Runtime_CreateArrayLiteralWithoutAllocationSite\00", align 1
@.str.23 = private unnamed_addr constant [40 x i8] c"args[0].IsArrayBoilerplateDescription()\00", align 1
@_ZZN2v88internalL32Stats_Runtime_CreateArrayLiteralEiPmPNS0_7IsolateEE28trace_event_unique_atomic642 = internal global i64 0, align 8
@.str.24 = private unnamed_addr constant [38 x i8] c"V8.Runtime_Runtime_CreateArrayLiteral\00", align 1
@.str.25 = private unnamed_addr constant [40 x i8] c"args[2].IsArrayBoilerplateDescription()\00", align 1
@_ZZN2v88internalL33Stats_Runtime_CreateRegExpLiteralEiPmPNS0_7IsolateEE28trace_event_unique_atomic660 = internal global i64 0, align 8
@.str.26 = private unnamed_addr constant [39 x i8] c"V8.Runtime_Runtime_CreateRegExpLiteral\00", align 1
@.str.27 = private unnamed_addr constant [19 x i8] c"args[2].IsString()\00", align 1
@.str.28 = private unnamed_addr constant [30 x i8] c"!HasBoilerplate(literal_site)\00", align 1
@switch.table._ZNK2v88internal14Representation8MnemonicEv = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)], align 8
@switch.table._ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS0_26AllocationSiteUsageContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE = private unnamed_addr constant [5 x i64] [i64 0, i64 0, i64 16384, i64 0, i64 0], align 8

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal27Runtime_CreateObjectLiteralEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", align 8
  %5 = alloca %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", align 8
  %6 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192", align 8
  %7 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", align 8
  %8 = alloca %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", align 8
  %9 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195", align 8
  %10 = alloca %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", align 8
  %11 = alloca %"class.v8::internal::AllocationSiteUsageContext", align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1137", %"struct.std::__1::atomic.1137"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %3
  %15 = tail call fastcc i64 @_ZN2v88internalL33Stats_Runtime_CreateObjectLiteralEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %338

16:                                               ; preds = %3
  %17 = ptrtoint i64* %1 to i64
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %19 = bitcast %"struct.v8::internal::HandleScopeData"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %22 = load i64*, i64** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %23, align 8
  %26 = load i64, i64* %1, align 8
  %27 = and i64 %26, 1
  %28 = icmp eq i64 %27, 0
  %29 = inttoptr i64 %20 to i64*
  br i1 %28, label %30, label %31, !prof !3

30:                                               ; preds = %16
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

31:                                               ; preds = %16
  %32 = add i64 %17, -8
  %33 = inttoptr i64 %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %41, !prof !4

37:                                               ; preds = %31
  %38 = ashr i64 %34, 1
  %39 = add nsw i64 %38, 1073741824
  %40 = icmp ult i64 %39, 2147483648
  br i1 %40, label %42, label %41, !prof !2

41:                                               ; preds = %37, %31
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #7
  unreachable

42:                                               ; preds = %37
  %43 = lshr i64 %34, 1
  %44 = trunc i64 %43 to i32
  %45 = add i64 %17, -16
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %61, label %50, !prof !5

50:                                               ; preds = %42
  %51 = and i64 %47, -4294967296
  %52 = add i64 %47, -1
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %51, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = icmp eq i16 %59, 130
  br i1 %60, label %62, label %61, !prof !2

61:                                               ; preds = %50, %42
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

62:                                               ; preds = %50
  %63 = add i64 %17, -24
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %69, label %68, !prof !2

68:                                               ; preds = %62
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #7
  unreachable

69:                                               ; preds = %62
  %70 = trunc i64 %65 to i32
  %71 = ashr i32 %70, 1
  %72 = and i64 %26, -4294967296
  %73 = add i64 %26, -1
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %72, %76
  %78 = add i64 %77, 7
  %79 = inttoptr i64 %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  %81 = icmp ne i16 %80, 167
  %82 = icmp eq i64* %1, null
  %83 = or i1 %82, %81
  br i1 %83, label %84, label %99

84:                                               ; preds = %69
  %85 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119CreateObjectLiteralEPNS0_7IsolateENS0_6HandleINS0_28ObjectBoilerplateDescriptionEEEiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %46, i32 %71, i8 zeroext 0) #5
  %86 = and i32 %70, 2
  %87 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %88 = icmp ne i8 %87, 0
  %89 = icmp eq i32 %86, 0
  %90 = or i1 %89, %88
  br i1 %90, label %91, label %317

91:                                               ; preds = %84
  %92 = bitcast %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #5
  %93 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %8, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %93, align 8
  %94 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #5
  %95 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %7, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %8, %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"** %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %7, i64 0, i32 1
  store i32 0, i32* %96, align 8
  %97 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* nonnull %7, i64* %85) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #5
  %98 = icmp eq i64* %97, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #5
  br i1 %98, label %320, label %317

99:                                               ; preds = %69
  %100 = add i64 %26, 3
  %101 = inttoptr i64 %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = icmp sgt i32 %102, %44
  br i1 %103, label %105, label %104, !prof !2

104:                                              ; preds = %99
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #7
  unreachable

105:                                              ; preds = %99
  %106 = shl i64 %43, 34
  %107 = ashr exact i64 %106, 32
  %108 = add nsw i64 %107, 31
  %109 = add i64 %108, %26
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %72, %112
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %115 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %114, align 8
  %116 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %115, null
  br i1 %116, label %120, label %117

117:                                              ; preds = %105
  %118 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %115, i64 %113) #5
  %119 = load i64, i64* %118, align 8
  br label %130

120:                                              ; preds = %105
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %122 = icmp eq i64* %22, %29
  br i1 %122, label %123, label %125

123:                                              ; preds = %120
  %124 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %125

125:                                              ; preds = %123, %120
  %126 = phi i64* [ %124, %123 ], [ %29, %120 ]
  %127 = ptrtoint i64* %126 to i64
  %128 = add i64 %127, 8
  %129 = inttoptr i64 %128 to i64*
  store i64* %129, i64** %121, align 8
  store i64 %113, i64* %126, align 8
  br label %130

130:                                              ; preds = %125, %117
  %131 = phi i64 [ %119, %117 ], [ %113, %125 ]
  %132 = phi i64* [ %118, %117 ], [ %126, %125 ]
  %133 = and i32 %71, 1
  %134 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %135 = icmp eq i8 %134, 0
  %136 = select i1 %135, i32 %133, i32 0
  %137 = and i64 %131, 1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %162, label %139

139:                                              ; preds = %130
  %140 = and i64 %131, -4294967296
  %141 = add i64 %131, 3
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %140, %144
  %146 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %114, align 8
  %147 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %146, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %139
  %149 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %146, i64 %145) #5
  br label %265

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %152 = load i64*, i64** %151, align 8
  %153 = load i64*, i64** %21, align 8
  %154 = icmp eq i64* %152, %153
  br i1 %154, label %155, label %157

155:                                              ; preds = %150
  %156 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %157

157:                                              ; preds = %155, %150
  %158 = phi i64* [ %156, %155 ], [ %152, %150 ]
  %159 = ptrtoint i64* %158 to i64
  %160 = add i64 %159, 8
  %161 = inttoptr i64 %160 to i64*
  store i64* %161, i64** %151, align 8
  store i64 %145, i64* %158, align 8
  br label %265

162:                                              ; preds = %130
  %163 = and i32 %71, 4
  %164 = trunc i64 %131 to i32
  %165 = or i32 %163, %164
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %184

167:                                              ; preds = %162
  %168 = load i64, i64* %1, align 8
  %169 = add i64 %168, %108
  %170 = inttoptr i64 %169 to i32*
  store atomic volatile i32 2, i32* %170 release, align 4
  %171 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119CreateObjectLiteralEPNS0_7IsolateENS0_6HandleINS0_28ObjectBoilerplateDescriptionEEEiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %46, i32 %71, i8 zeroext 0) #5
  %172 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %173 = icmp ne i8 %172, 0
  %174 = icmp eq i32 %133, 0
  %175 = or i1 %174, %173
  br i1 %175, label %176, label %317

176:                                              ; preds = %167
  %177 = bitcast %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #5
  %178 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %5, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %178, align 8
  %179 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %179) #5
  %180 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %4, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %5, %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"** %180, align 8
  %181 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %4, i64 0, i32 1
  store i32 0, i32* %181, align 8
  %182 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* nonnull %4, i64* %171) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %179) #5
  %183 = icmp eq i64* %182, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #5
  br i1 %183, label %320, label %317

184:                                              ; preds = %162
  %185 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119CreateObjectLiteralEPNS0_7IsolateENS0_6HandleINS0_28ObjectBoilerplateDescriptionEEEiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %46, i32 %71, i8 zeroext 1) #5
  %186 = bitcast %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #5
  %187 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %188 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %10, i64 0, i32 0, i32 0
  %189 = bitcast i64** %187 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 16, i1 false) #5
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %188, align 8
  %190 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_129AllocationSiteCreationContext13EnterNewScopeEv(%"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* nonnull %10) #5
  %191 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %191) #5
  %192 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %6, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %10, %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"** %192, align 8
  %193 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %6, i64 0, i32 1
  store i32 0, i32* %193, align 8
  %194 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_29AllocationSiteCreationContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* nonnull %6, i64* %185) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %191) #5
  %195 = icmp eq i64* %194, null
  br i1 %195, label %264, label %196

196:                                              ; preds = %184
  %197 = icmp eq i64* %185, null
  br i1 %197, label %229, label %198

198:                                              ; preds = %196
  %199 = load i64, i64* %190, align 8
  %200 = load i64, i64* %185, align 8
  %201 = add i64 %199, 3
  %202 = inttoptr i64 %201 to i32*
  %203 = trunc i64 %200 to i32
  store atomic volatile i32 %203, i32* %202 release, align 4
  %204 = and i64 %200, 1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %229, label %206

206:                                              ; preds = %198
  %207 = and i64 %199, -262144
  %208 = or i64 %207, 8
  %209 = inttoptr i64 %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = and i64 %210, 262144
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %217, label %213

213:                                              ; preds = %206
  %214 = or i64 %207, 16
  %215 = inttoptr i64 %214 to %"class.v8::internal::Heap"**
  %216 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %215, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %216, i64 %199, i64 %201, i64 %200) #5
  br label %217

217:                                              ; preds = %213, %206
  %218 = and i64 %200, -262144
  %219 = or i64 %218, 8
  %220 = inttoptr i64 %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = and i64 %221, 24
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %229, label %224

224:                                              ; preds = %217
  %225 = load i64, i64* %209, align 8
  %226 = and i64 %225, 24
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %224
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %199, i64 %201, i64 %200) #5
  br label %229

229:                                              ; preds = %228, %224, %217, %198, %196
  %230 = load i64, i64* %1, align 8
  %231 = load i64, i64* %190, align 8
  %232 = add i64 %230, %108
  %233 = inttoptr i64 %232 to i32*
  %234 = trunc i64 %231 to i32
  store atomic volatile i32 %234, i32* %233 release, align 4
  %235 = and i64 %231, 1
  %236 = icmp ne i64 %235, 0
  %237 = icmp ne i32 %234, 3
  %238 = and i1 %237, %236
  br i1 %238, label %239, label %263

239:                                              ; preds = %229
  %240 = and i64 %230, -262144
  %241 = or i64 %240, 8
  %242 = inttoptr i64 %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = and i64 %243, 262144
  %245 = icmp eq i64 %244, 0
  %246 = and i64 %231, -3
  br i1 %245, label %251, label %247

247:                                              ; preds = %239
  %248 = or i64 %240, 16
  %249 = inttoptr i64 %248 to %"class.v8::internal::Heap"**
  %250 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %249, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %250, i64 %230, i64 %232, i64 %246) #5
  br label %251

251:                                              ; preds = %247, %239
  %252 = and i64 %231, -262144
  %253 = or i64 %252, 8
  %254 = inttoptr i64 %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = and i64 %255, 24
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %263, label %258

258:                                              ; preds = %251
  %259 = load i64, i64* %242, align 8
  %260 = and i64 %259, 24
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %258
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %230, i64 %232, i64 %246) #5
  br label %263

263:                                              ; preds = %262, %258, %251, %229
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #5
  br label %265

264:                                              ; preds = %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #5
  br label %320

265:                                              ; preds = %263, %157, %148
  %266 = phi i64* [ %185, %263 ], [ %149, %148 ], [ %158, %157 ]
  %267 = phi i64* [ %190, %263 ], [ %132, %148 ], [ %132, %157 ]
  %268 = bitcast %"class.v8::internal::AllocationSiteUsageContext"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %268) #5
  %269 = lshr i32 %71, 1
  %270 = trunc i32 %269 to i8
  %271 = and i8 %270, 1
  %272 = xor i8 %271, 1
  %273 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %274 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %11, i64 0, i32 0, i32 0
  %275 = getelementptr inbounds i64*, i64** %273, i64 1
  %276 = bitcast i64** %275 to i64*
  store i64 0, i64* %276, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %274, align 8
  %277 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %11, i64 0, i32 1, i32 0, i32 0
  store i64* %267, i64** %277, align 8
  %278 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %11, i64 0, i32 2
  store i8 %272, i8* %278, align 8
  store i64* %267, i64** %273, align 8
  %279 = load i64, i64* %267, align 8
  %280 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %281 = load i64*, i64** %280, align 8
  %282 = load i64*, i64** %21, align 8
  %283 = icmp eq i64* %281, %282
  br i1 %283, label %284, label %286

284:                                              ; preds = %265
  %285 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %286

286:                                              ; preds = %284, %265
  %287 = phi i64* [ %285, %284 ], [ %281, %265 ]
  %288 = ptrtoint i64* %287 to i64
  %289 = add i64 %288, 8
  %290 = inttoptr i64 %289 to i64*
  store i64* %290, i64** %280, align 8
  store i64 %279, i64* %287, align 8
  %291 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %287, i64** %291, align 8
  %292 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %274, align 8
  %293 = load i64, i64* %287, align 8
  %294 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %292, i64 0, i32 31, i32 4
  %295 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %294, align 8
  %296 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %295, null
  br i1 %296, label %299, label %297

297:                                              ; preds = %286
  %298 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %295, i64 %293) #5
  br label %312

299:                                              ; preds = %286
  %300 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %292, i64 0, i32 31, i32 0
  %301 = load i64*, i64** %300, align 8
  %302 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %292, i64 0, i32 31, i32 1
  %303 = load i64*, i64** %302, align 8
  %304 = icmp eq i64* %301, %303
  br i1 %304, label %305, label %307

305:                                              ; preds = %299
  %306 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %292) #5
  br label %307

307:                                              ; preds = %305, %299
  %308 = phi i64* [ %306, %305 ], [ %301, %299 ]
  %309 = ptrtoint i64* %308 to i64
  %310 = add i64 %309, 8
  %311 = inttoptr i64 %310 to i64*
  store i64* %311, i64** %300, align 8
  store i64 %293, i64* %308, align 8
  br label %312

312:                                              ; preds = %307, %297
  %313 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %313) #5
  %314 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %9, i64 0, i32 0
  store %"class.v8::internal::AllocationSiteUsageContext"* %11, %"class.v8::internal::AllocationSiteUsageContext"** %314, align 8
  %315 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %9, i64 0, i32 1
  store i32 %136, i32* %315, align 8
  %316 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS0_26AllocationSiteUsageContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* nonnull %9, i64* %266) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %313) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %268) #5
  br label %317

317:                                              ; preds = %312, %176, %167, %91, %84
  %318 = phi i64* [ %316, %312 ], [ %85, %91 ], [ %85, %84 ], [ %171, %176 ], [ %171, %167 ]
  %319 = icmp eq i64* %318, null
  br i1 %319, label %320, label %322

320:                                              ; preds = %317, %264, %176, %91
  %321 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %322

322:                                              ; preds = %320, %317
  %323 = phi i64* [ %321, %320 ], [ %318, %317 ]
  %324 = load i64, i64* %323, align 8
  %325 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %325, label %338, label %326

326:                                              ; preds = %322
  %327 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %18, i64 0, i32 0
  %328 = load i64*, i64** %327, align 8
  store i64 %20, i64* %19, align 8
  %329 = load i32, i32* %23, align 8
  %330 = add nsw i32 %329, -1
  store i32 %330, i32* %23, align 8
  %331 = load i64*, i64** %21, align 8
  %332 = icmp eq i64* %331, %22
  br i1 %332, label %335, label %333

333:                                              ; preds = %326
  store i64* %22, i64** %21, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %334 = load i64*, i64** %327, align 8
  br label %335

335:                                              ; preds = %333, %326
  %336 = phi i64* [ %334, %333 ], [ %29, %326 ]
  %337 = phi i64* [ %22, %333 ], [ %328, %326 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %336, i64* %337) #5
  br label %338

338:                                              ; preds = %335, %322, %14
  %339 = phi i64 [ %15, %14 ], [ %324, %322 ], [ %324, %335 ]
  ret i64 %339
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL33Stats_Runtime_CreateObjectLiteralEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1147"], align 16
  %5 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", align 8
  %6 = alloca %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", align 8
  %7 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192", align 8
  %8 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", align 8
  %9 = alloca %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", align 8
  %10 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195", align 8
  %11 = alloca %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", align 8
  %12 = alloca %"class.v8::internal::AllocationSiteUsageContext", align 8
  %13 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %14 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %15 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 40, i1 false) #5
  %16 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1137", %"struct.std::__1::atomic.1137"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18, !prof !2

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %13, i64 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %13, i64 0, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %22 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %22, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %23, %"class.v8::internal::RuntimeCallStats"** %19, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %23, %"class.v8::internal::RuntimeCallTimer"* %20, i32 419) #5
  br label %24

24:                                               ; preds = %3, %18
  %25 = load atomic i64, i64* @_ZZN2v88internalL33Stats_Runtime_CreateObjectLiteralEiPmPNS0_7IsolateEE28trace_event_unique_atomic604 monotonic, align 8
  %26 = inttoptr i64 %25 to i8*
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %36

28:                                               ; preds = %24
  %29 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %30 = bitcast %"class.v8::TracingController"* %29 to i8* (%"class.v8::TracingController"*, i8*)***
  %31 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %30, align 8
  %32 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %31, i64 2
  %33 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %32, align 8
  %34 = call i8* %33(%"class.v8::TracingController"* %29, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #5
  %35 = ptrtoint i8* %34 to i64
  store atomic volatile i64 %35, i64* @_ZZN2v88internalL33Stats_Runtime_CreateObjectLiteralEiPmPNS0_7IsolateEE28trace_event_unique_atomic604 monotonic, align 8
  br label %36

36:                                               ; preds = %24, %28
  %37 = phi i8* [ %26, %24 ], [ %34, %28 ]
  %38 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #5
  %39 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %39, align 8
  %40 = load atomic i8, i8* %37 monotonic, align 1
  %41 = and i8 %40, 5
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %74, label %43

43:                                               ; preds = %36
  %44 = bitcast [2 x %"class.std::__1::unique_ptr.1147"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #5
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1147"], [2 x %"class.std::__1::unique_ptr.1147"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 0, i64 16, i1 false) #5
  %46 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %47 = bitcast %"class.v8::TracingController"* %46 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)***
  %48 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)*** %47, align 8
  %49 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)** %48, i64 3
  %50 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)** %49, align 8
  %51 = call i64 %50(%"class.v8::TracingController"* %46, i8 signext 88, i8* %37, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1147"* nonnull %45, i32 0) #5
  %52 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1147"], [2 x %"class.std::__1::unique_ptr.1147"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %53 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %52, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %52, align 8
  %54 = icmp eq %"class.v8::ConvertableToTraceFormat"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = bitcast %"class.v8::ConvertableToTraceFormat"* %53 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %57 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %57, i64 1
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, align 8
  call void %59(%"class.v8::ConvertableToTraceFormat"* nonnull %53) #5
  br label %60

60:                                               ; preds = %55, %43
  %61 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1147"], [2 x %"class.std::__1::unique_ptr.1147"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %61, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %61, align 16
  %63 = icmp eq %"class.v8::ConvertableToTraceFormat"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.v8::ConvertableToTraceFormat"* %62 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %66 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %66, i64 1
  %68 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %67, align 8
  call void %68(%"class.v8::ConvertableToTraceFormat"* nonnull %62) #5
  br label %69

69:                                               ; preds = %60, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #5
  %70 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1
  %71 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %70, i64 0, i32 0
  store i8* %37, i8** %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i8** %72, align 8
  %73 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1, i32 2
  store i64 %51, i64* %73, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %70, %"struct.v8::internal::tracing::ScopedTracer::Data"** %39, align 8
  br label %74

74:                                               ; preds = %36, %69
  %75 = ptrtoint i64* %1 to i64
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %77 = bitcast %"struct.v8::internal::HandleScopeData"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %80 = load i64*, i64** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %81, align 8
  %84 = load i64, i64* %1, align 8
  %85 = and i64 %84, 1
  %86 = icmp eq i64 %85, 0
  %87 = inttoptr i64 %78 to i64*
  br i1 %86, label %88, label %89, !prof !3

88:                                               ; preds = %74
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

89:                                               ; preds = %74
  %90 = add i64 %75, -8
  %91 = inttoptr i64 %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = and i64 %92, 1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %99, !prof !4

95:                                               ; preds = %89
  %96 = ashr i64 %92, 1
  %97 = add nsw i64 %96, 1073741824
  %98 = icmp ult i64 %97, 2147483648
  br i1 %98, label %100, label %99, !prof !2

99:                                               ; preds = %95, %89
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #7
  unreachable

100:                                              ; preds = %95
  %101 = lshr i64 %92, 1
  %102 = trunc i64 %101 to i32
  %103 = add i64 %75, -16
  %104 = inttoptr i64 %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = and i64 %105, 1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %119, label %108, !prof !5

108:                                              ; preds = %100
  %109 = and i64 %105, -4294967296
  %110 = add i64 %105, -1
  %111 = inttoptr i64 %110 to i32*
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = zext i32 %112 to i64
  %114 = or i64 %109, %113
  %115 = add i64 %114, 7
  %116 = inttoptr i64 %115 to i16*
  %117 = load atomic i16, i16* %116 monotonic, align 2
  %118 = icmp eq i16 %117, 130
  br i1 %118, label %120, label %119, !prof !2

119:                                              ; preds = %108, %100
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

120:                                              ; preds = %108
  %121 = add i64 %75, -24
  %122 = inttoptr i64 %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = and i64 %123, 1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %127, label %126, !prof !2

126:                                              ; preds = %120
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #7
  unreachable

127:                                              ; preds = %120
  %128 = trunc i64 %123 to i32
  %129 = ashr i32 %128, 1
  %130 = and i64 %84, -4294967296
  %131 = add i64 %84, -1
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = zext i32 %133 to i64
  %135 = or i64 %130, %134
  %136 = add i64 %135, 7
  %137 = inttoptr i64 %136 to i16*
  %138 = load atomic i16, i16* %137 monotonic, align 2
  %139 = icmp ne i16 %138, 167
  %140 = icmp eq i64* %1, null
  %141 = or i1 %140, %139
  br i1 %141, label %142, label %157

142:                                              ; preds = %127
  %143 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119CreateObjectLiteralEPNS0_7IsolateENS0_6HandleINS0_28ObjectBoilerplateDescriptionEEEiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %104, i32 %129, i8 zeroext 0) #5
  %144 = and i32 %128, 2
  %145 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %146 = icmp ne i8 %145, 0
  %147 = icmp eq i32 %144, 0
  %148 = or i1 %147, %146
  br i1 %148, label %149, label %375

149:                                              ; preds = %142
  %150 = bitcast %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #5
  %151 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %9, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %151, align 8
  %152 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #5
  %153 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %8, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %9, %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"** %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %8, i64 0, i32 1
  store i32 0, i32* %154, align 8
  %155 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* nonnull %8, i64* %143) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #5
  %156 = icmp eq i64* %155, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #5
  br i1 %156, label %378, label %375

157:                                              ; preds = %127
  %158 = add i64 %84, 3
  %159 = inttoptr i64 %158 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = icmp sgt i32 %160, %102
  br i1 %161, label %163, label %162, !prof !2

162:                                              ; preds = %157
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #7
  unreachable

163:                                              ; preds = %157
  %164 = shl i64 %101, 34
  %165 = ashr exact i64 %164, 32
  %166 = add nsw i64 %165, 31
  %167 = add i64 %166, %84
  %168 = inttoptr i64 %167 to i32*
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = zext i32 %169 to i64
  %171 = or i64 %130, %170
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %173 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %172, align 8
  %174 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %173, null
  br i1 %174, label %178, label %175

175:                                              ; preds = %163
  %176 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %173, i64 %171) #5
  %177 = load i64, i64* %176, align 8
  br label %188

178:                                              ; preds = %163
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %180 = icmp eq i64* %80, %87
  br i1 %180, label %181, label %183

181:                                              ; preds = %178
  %182 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %183

183:                                              ; preds = %181, %178
  %184 = phi i64* [ %182, %181 ], [ %87, %178 ]
  %185 = ptrtoint i64* %184 to i64
  %186 = add i64 %185, 8
  %187 = inttoptr i64 %186 to i64*
  store i64* %187, i64** %179, align 8
  store i64 %171, i64* %184, align 8
  br label %188

188:                                              ; preds = %183, %175
  %189 = phi i64 [ %177, %175 ], [ %171, %183 ]
  %190 = phi i64* [ %176, %175 ], [ %184, %183 ]
  %191 = and i32 %129, 1
  %192 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %193 = icmp eq i8 %192, 0
  %194 = select i1 %193, i32 %191, i32 0
  %195 = and i64 %189, 1
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %220, label %197

197:                                              ; preds = %188
  %198 = and i64 %189, -4294967296
  %199 = add i64 %189, 3
  %200 = inttoptr i64 %199 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i64
  %203 = or i64 %198, %202
  %204 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %172, align 8
  %205 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %197
  %207 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %204, i64 %203) #5
  br label %323

208:                                              ; preds = %197
  %209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %210 = load i64*, i64** %209, align 8
  %211 = load i64*, i64** %79, align 8
  %212 = icmp eq i64* %210, %211
  br i1 %212, label %213, label %215

213:                                              ; preds = %208
  %214 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %215

215:                                              ; preds = %213, %208
  %216 = phi i64* [ %214, %213 ], [ %210, %208 ]
  %217 = ptrtoint i64* %216 to i64
  %218 = add i64 %217, 8
  %219 = inttoptr i64 %218 to i64*
  store i64* %219, i64** %209, align 8
  store i64 %203, i64* %216, align 8
  br label %323

220:                                              ; preds = %188
  %221 = and i32 %129, 4
  %222 = trunc i64 %189 to i32
  %223 = or i32 %221, %222
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %242

225:                                              ; preds = %220
  %226 = load i64, i64* %1, align 8
  %227 = add i64 %226, %166
  %228 = inttoptr i64 %227 to i32*
  store atomic volatile i32 2, i32* %228 release, align 4
  %229 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119CreateObjectLiteralEPNS0_7IsolateENS0_6HandleINS0_28ObjectBoilerplateDescriptionEEEiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %104, i32 %129, i8 zeroext 0) #5
  %230 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %231 = icmp ne i8 %230, 0
  %232 = icmp eq i32 %191, 0
  %233 = or i1 %232, %231
  br i1 %233, label %234, label %375

234:                                              ; preds = %225
  %235 = bitcast %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #5
  %236 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %236, align 8
  %237 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %237) #5
  %238 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %5, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %6, %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"** %238, align 8
  %239 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %5, i64 0, i32 1
  store i32 0, i32* %239, align 8
  %240 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* nonnull %5, i64* %229) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %237) #5
  %241 = icmp eq i64* %240, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #5
  br i1 %241, label %378, label %375

242:                                              ; preds = %220
  %243 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119CreateObjectLiteralEPNS0_7IsolateENS0_6HandleINS0_28ObjectBoilerplateDescriptionEEEiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %104, i32 %129, i8 zeroext 1) #5
  %244 = bitcast %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %244) #5
  %245 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %246 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %11, i64 0, i32 0, i32 0
  %247 = bitcast i64** %245 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %247, i8 0, i64 16, i1 false) #5
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %246, align 8
  %248 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_129AllocationSiteCreationContext13EnterNewScopeEv(%"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* nonnull %11) #5
  %249 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %249) #5
  %250 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %7, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %11, %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"** %250, align 8
  %251 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %7, i64 0, i32 1
  store i32 0, i32* %251, align 8
  %252 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_29AllocationSiteCreationContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* nonnull %7, i64* %243) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %249) #5
  %253 = icmp eq i64* %252, null
  br i1 %253, label %322, label %254

254:                                              ; preds = %242
  %255 = icmp eq i64* %243, null
  br i1 %255, label %287, label %256

256:                                              ; preds = %254
  %257 = load i64, i64* %248, align 8
  %258 = load i64, i64* %243, align 8
  %259 = add i64 %257, 3
  %260 = inttoptr i64 %259 to i32*
  %261 = trunc i64 %258 to i32
  store atomic volatile i32 %261, i32* %260 release, align 4
  %262 = and i64 %258, 1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %287, label %264

264:                                              ; preds = %256
  %265 = and i64 %257, -262144
  %266 = or i64 %265, 8
  %267 = inttoptr i64 %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = and i64 %268, 262144
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %275, label %271

271:                                              ; preds = %264
  %272 = or i64 %265, 16
  %273 = inttoptr i64 %272 to %"class.v8::internal::Heap"**
  %274 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %273, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %274, i64 %257, i64 %259, i64 %258) #5
  br label %275

275:                                              ; preds = %271, %264
  %276 = and i64 %258, -262144
  %277 = or i64 %276, 8
  %278 = inttoptr i64 %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = and i64 %279, 24
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %287, label %282

282:                                              ; preds = %275
  %283 = load i64, i64* %267, align 8
  %284 = and i64 %283, 24
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %282
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %257, i64 %259, i64 %258) #5
  br label %287

287:                                              ; preds = %286, %282, %275, %256, %254
  %288 = load i64, i64* %1, align 8
  %289 = load i64, i64* %248, align 8
  %290 = add i64 %288, %166
  %291 = inttoptr i64 %290 to i32*
  %292 = trunc i64 %289 to i32
  store atomic volatile i32 %292, i32* %291 release, align 4
  %293 = and i64 %289, 1
  %294 = icmp ne i64 %293, 0
  %295 = icmp ne i32 %292, 3
  %296 = and i1 %295, %294
  br i1 %296, label %297, label %321

297:                                              ; preds = %287
  %298 = and i64 %288, -262144
  %299 = or i64 %298, 8
  %300 = inttoptr i64 %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = and i64 %301, 262144
  %303 = icmp eq i64 %302, 0
  %304 = and i64 %289, -3
  br i1 %303, label %309, label %305

305:                                              ; preds = %297
  %306 = or i64 %298, 16
  %307 = inttoptr i64 %306 to %"class.v8::internal::Heap"**
  %308 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %307, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %308, i64 %288, i64 %290, i64 %304) #5
  br label %309

309:                                              ; preds = %305, %297
  %310 = and i64 %289, -262144
  %311 = or i64 %310, 8
  %312 = inttoptr i64 %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = and i64 %313, 24
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %321, label %316

316:                                              ; preds = %309
  %317 = load i64, i64* %300, align 8
  %318 = and i64 %317, 24
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %321

320:                                              ; preds = %316
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %288, i64 %290, i64 %304) #5
  br label %321

321:                                              ; preds = %320, %316, %309, %287
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %244) #5
  br label %323

322:                                              ; preds = %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %244) #5
  br label %378

323:                                              ; preds = %321, %215, %206
  %324 = phi i64* [ %243, %321 ], [ %207, %206 ], [ %216, %215 ]
  %325 = phi i64* [ %248, %321 ], [ %190, %206 ], [ %190, %215 ]
  %326 = bitcast %"class.v8::internal::AllocationSiteUsageContext"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %326) #5
  %327 = lshr i32 %129, 1
  %328 = trunc i32 %327 to i8
  %329 = and i8 %328, 1
  %330 = xor i8 %329, 1
  %331 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %332 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %12, i64 0, i32 0, i32 0
  %333 = getelementptr inbounds i64*, i64** %331, i64 1
  %334 = bitcast i64** %333 to i64*
  store i64 0, i64* %334, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %332, align 8
  %335 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %12, i64 0, i32 1, i32 0, i32 0
  store i64* %325, i64** %335, align 8
  %336 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %12, i64 0, i32 2
  store i8 %330, i8* %336, align 8
  store i64* %325, i64** %331, align 8
  %337 = load i64, i64* %325, align 8
  %338 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %339 = load i64*, i64** %338, align 8
  %340 = load i64*, i64** %79, align 8
  %341 = icmp eq i64* %339, %340
  br i1 %341, label %342, label %344

342:                                              ; preds = %323
  %343 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %344

344:                                              ; preds = %342, %323
  %345 = phi i64* [ %343, %342 ], [ %339, %323 ]
  %346 = ptrtoint i64* %345 to i64
  %347 = add i64 %346, 8
  %348 = inttoptr i64 %347 to i64*
  store i64* %348, i64** %338, align 8
  store i64 %337, i64* %345, align 8
  %349 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %345, i64** %349, align 8
  %350 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %332, align 8
  %351 = load i64, i64* %345, align 8
  %352 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %350, i64 0, i32 31, i32 4
  %353 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %352, align 8
  %354 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %353, null
  br i1 %354, label %357, label %355

355:                                              ; preds = %344
  %356 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %353, i64 %351) #5
  br label %370

357:                                              ; preds = %344
  %358 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %350, i64 0, i32 31, i32 0
  %359 = load i64*, i64** %358, align 8
  %360 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %350, i64 0, i32 31, i32 1
  %361 = load i64*, i64** %360, align 8
  %362 = icmp eq i64* %359, %361
  br i1 %362, label %363, label %365

363:                                              ; preds = %357
  %364 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %350) #5
  br label %365

365:                                              ; preds = %363, %357
  %366 = phi i64* [ %364, %363 ], [ %359, %357 ]
  %367 = ptrtoint i64* %366 to i64
  %368 = add i64 %367, 8
  %369 = inttoptr i64 %368 to i64*
  store i64* %369, i64** %358, align 8
  store i64 %351, i64* %366, align 8
  br label %370

370:                                              ; preds = %365, %355
  %371 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %371) #5
  %372 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %10, i64 0, i32 0
  store %"class.v8::internal::AllocationSiteUsageContext"* %12, %"class.v8::internal::AllocationSiteUsageContext"** %372, align 8
  %373 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %10, i64 0, i32 1
  store i32 %194, i32* %373, align 8
  %374 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS0_26AllocationSiteUsageContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* nonnull %10, i64* %324) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %371) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %326) #5
  br label %375

375:                                              ; preds = %370, %234, %225, %149, %142
  %376 = phi i64* [ %374, %370 ], [ %143, %149 ], [ %143, %142 ], [ %229, %234 ], [ %229, %225 ]
  %377 = icmp eq i64* %376, null
  br i1 %377, label %378, label %380

378:                                              ; preds = %375, %322, %234, %149
  %379 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %380

380:                                              ; preds = %378, %375
  %381 = phi i64* [ %379, %378 ], [ %376, %375 ]
  %382 = load i64, i64* %381, align 8
  %383 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %383, label %396, label %384

384:                                              ; preds = %380
  %385 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %76, i64 0, i32 0
  %386 = load i64*, i64** %385, align 8
  store i64 %78, i64* %77, align 8
  %387 = load i32, i32* %81, align 8
  %388 = add nsw i32 %387, -1
  store i32 %388, i32* %81, align 8
  %389 = load i64*, i64** %79, align 8
  %390 = icmp eq i64* %389, %80
  br i1 %390, label %393, label %391

391:                                              ; preds = %384
  store i64* %80, i64** %79, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %392 = load i64*, i64** %385, align 8
  br label %393

393:                                              ; preds = %391, %384
  %394 = phi i64* [ %392, %391 ], [ %87, %384 ]
  %395 = phi i64* [ %80, %391 ], [ %386, %384 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %394, i64* %395) #5
  br label %396

396:                                              ; preds = %380, %393
  %397 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %39, align 8
  %398 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %397, null
  br i1 %398, label %415, label %399

399:                                              ; preds = %396
  %400 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1, i32 0
  %401 = load i8*, i8** %400, align 8
  %402 = load atomic i8, i8* %401 monotonic, align 1
  %403 = icmp eq i8 %402, 0
  br i1 %403, label %415, label %404

404:                                              ; preds = %399
  %405 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %406 = load i8*, i8** %400, align 8
  %407 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1, i32 1
  %408 = load i8*, i8** %407, align 8
  %409 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1, i32 2
  %410 = load i64, i64* %409, align 8
  %411 = bitcast %"class.v8::TracingController"* %405 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %412 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %411, align 8
  %413 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %412, i64 5
  %414 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %413, align 8
  call void %414(%"class.v8::TracingController"* %405, i8* %406, i8* %408, i64 %410) #5
  br label %415

415:                                              ; preds = %396, %399, %404
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #5
  %416 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %13, i64 0, i32 0
  %417 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %416, align 8
  %418 = icmp eq %"class.v8::internal::RuntimeCallStats"* %417, null
  br i1 %418, label %421, label %419, !prof !2

419:                                              ; preds = %415
  %420 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %13, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %417, %"class.v8::internal::RuntimeCallTimer"* %420) #5
  br label %421

421:                                              ; preds = %415, %419
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #5
  ret i64 %382
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal48Runtime_CreateObjectLiteralWithoutAllocationSiteEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", align 8
  %5 = alloca %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1137", %"struct.std::__1::atomic.1137"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %3
  %9 = tail call fastcc i64 @_ZN2v88internalL54Stats_Runtime_CreateObjectLiteralWithoutAllocationSiteEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %82

10:                                               ; preds = %3
  %11 = ptrtoint i64* %1 to i64
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %13 = bitcast %"struct.v8::internal::HandleScopeData"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %17, align 8
  %20 = load i64, i64* %1, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %34, label %23, !prof !5

23:                                               ; preds = %10
  %24 = and i64 %20, -4294967296
  %25 = add i64 %20, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 130
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %23, %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.20, i64 0, i64 0)) #7
  unreachable

35:                                               ; preds = %23
  %36 = add i64 %11, -8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %42, label %41, !prof !2

41:                                               ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #7
  unreachable

42:                                               ; preds = %35
  %43 = trunc i64 %38 to i32
  %44 = ashr i32 %43, 1
  %45 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119CreateObjectLiteralEPNS0_7IsolateENS0_6HandleINS0_28ObjectBoilerplateDescriptionEEEiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %1, i32 %44, i8 zeroext 0) #5
  %46 = and i32 %43, 2
  %47 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %48 = icmp ne i8 %47, 0
  %49 = icmp eq i32 %46, 0
  %50 = or i1 %49, %48
  br i1 %50, label %51, label %61

51:                                               ; preds = %42
  %52 = bitcast %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #5
  %53 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %5, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %53, align 8
  %54 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #5
  %55 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %4, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %5, %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"** %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %4, i64 0, i32 1
  store i32 0, i32* %56, align 8
  %57 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* nonnull %4, i64* %45) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #5
  %58 = icmp eq i64* %57, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #5
  %59 = icmp eq i64* %45, null
  %60 = or i1 %59, %58
  br i1 %60, label %63, label %65

61:                                               ; preds = %42
  %62 = icmp eq i64* %45, null
  br i1 %62, label %63, label %65

63:                                               ; preds = %61, %51
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %65

65:                                               ; preds = %63, %61, %51
  %66 = phi i64* [ %64, %63 ], [ %45, %51 ], [ %45, %61 ]
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %65
  %70 = inttoptr i64 %14 to i64*
  %71 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %12, i64 0, i32 0
  %72 = load i64*, i64** %71, align 8
  store i64 %14, i64* %13, align 8
  %73 = load i32, i32* %17, align 8
  %74 = add nsw i32 %73, -1
  store i32 %74, i32* %17, align 8
  %75 = load i64*, i64** %15, align 8
  %76 = icmp eq i64* %75, %16
  br i1 %76, label %79, label %77

77:                                               ; preds = %69
  store i64* %16, i64** %15, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %78 = load i64*, i64** %71, align 8
  br label %79

79:                                               ; preds = %77, %69
  %80 = phi i64* [ %78, %77 ], [ %70, %69 ]
  %81 = phi i64* [ %16, %77 ], [ %72, %69 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %80, i64* %81) #5
  br label %82

82:                                               ; preds = %79, %65, %8
  %83 = phi i64 [ %9, %8 ], [ %67, %65 ], [ %67, %79 ]
  ret i64 %83
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL54Stats_Runtime_CreateObjectLiteralWithoutAllocationSiteEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1147"], align 16
  %5 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", align 8
  %6 = alloca %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", align 8
  %7 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %8 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %9 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 40, i1 false) #5
  %10 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1137", %"struct.std::__1::atomic.1137"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %16 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %16, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallStats"** %13, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallTimer"* %14, i32 420) #5
  br label %18

18:                                               ; preds = %3, %12
  %19 = load atomic i64, i64* @_ZZN2v88internalL54Stats_Runtime_CreateObjectLiteralWithoutAllocationSiteEiPmPNS0_7IsolateEE28trace_event_unique_atomic622 monotonic, align 8
  %20 = inttoptr i64 %19 to i8*
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  %23 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %24 = bitcast %"class.v8::TracingController"* %23 to i8* (%"class.v8::TracingController"*, i8*)***
  %25 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %24, align 8
  %26 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %25, i64 2
  %27 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %26, align 8
  %28 = call i8* %27(%"class.v8::TracingController"* %23, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #5
  %29 = ptrtoint i8* %28 to i64
  store atomic volatile i64 %29, i64* @_ZZN2v88internalL54Stats_Runtime_CreateObjectLiteralWithoutAllocationSiteEiPmPNS0_7IsolateEE28trace_event_unique_atomic622 monotonic, align 8
  br label %30

30:                                               ; preds = %18, %22
  %31 = phi i8* [ %20, %18 ], [ %28, %22 ]
  %32 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #5
  %33 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  %34 = load atomic i8, i8* %31 monotonic, align 1
  %35 = and i8 %34, 5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %68, label %37

37:                                               ; preds = %30
  %38 = bitcast [2 x %"class.std::__1::unique_ptr.1147"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #5
  %39 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1147"], [2 x %"class.std::__1::unique_ptr.1147"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 0, i64 16, i1 false) #5
  %40 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %41 = bitcast %"class.v8::TracingController"* %40 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)***
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)** %42, i64 3
  %44 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)** %43, align 8
  %45 = call i64 %44(%"class.v8::TracingController"* %40, i8 signext 88, i8* %31, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.19, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1147"* nonnull %39, i32 0) #5
  %46 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1147"], [2 x %"class.std::__1::unique_ptr.1147"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %47 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %46, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %46, align 8
  %48 = icmp eq %"class.v8::ConvertableToTraceFormat"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %37
  %50 = bitcast %"class.v8::ConvertableToTraceFormat"* %47 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, i64 1
  %53 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %52, align 8
  call void %53(%"class.v8::ConvertableToTraceFormat"* nonnull %47) #5
  br label %54

54:                                               ; preds = %49, %37
  %55 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1147"], [2 x %"class.std::__1::unique_ptr.1147"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %55, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %55, align 16
  %57 = icmp eq %"class.v8::ConvertableToTraceFormat"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.v8::ConvertableToTraceFormat"* %56 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, i64 1
  %62 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %61, align 8
  call void %62(%"class.v8::ConvertableToTraceFormat"* nonnull %56) #5
  br label %63

63:                                               ; preds = %54, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #5
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, i64 0, i32 0
  store i8* %31, i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.19, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  store i64 %45, i64* %67, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  br label %68

68:                                               ; preds = %30, %63
  %69 = ptrtoint i64* %1 to i64
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %71 = bitcast %"struct.v8::internal::HandleScopeData"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %75, align 8
  %78 = load i64, i64* %1, align 8
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %92, label %81, !prof !5

81:                                               ; preds = %68
  %82 = and i64 %78, -4294967296
  %83 = add i64 %78, -1
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %82, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = icmp eq i16 %90, 130
  br i1 %91, label %93, label %92, !prof !2

92:                                               ; preds = %81, %68
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.20, i64 0, i64 0)) #7
  unreachable

93:                                               ; preds = %81
  %94 = add i64 %69, -8
  %95 = inttoptr i64 %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = and i64 %96, 1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %100, label %99, !prof !2

99:                                               ; preds = %93
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #7
  unreachable

100:                                              ; preds = %93
  %101 = trunc i64 %96 to i32
  %102 = ashr i32 %101, 1
  %103 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119CreateObjectLiteralEPNS0_7IsolateENS0_6HandleINS0_28ObjectBoilerplateDescriptionEEEiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %1, i32 %102, i8 zeroext 0) #5
  %104 = and i32 %101, 2
  %105 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq i32 %104, 0
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %119

109:                                              ; preds = %100
  %110 = bitcast %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #5
  %111 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %111, align 8
  %112 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112) #5
  %113 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %5, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %6, %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"** %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %5, i64 0, i32 1
  store i32 0, i32* %114, align 8
  %115 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* nonnull %5, i64* %103) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112) #5
  %116 = icmp eq i64* %115, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #5
  %117 = icmp eq i64* %103, null
  %118 = or i1 %117, %116
  br i1 %118, label %121, label %123

119:                                              ; preds = %100
  %120 = icmp eq i64* %103, null
  br i1 %120, label %121, label %123

121:                                              ; preds = %119, %109
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %123

123:                                              ; preds = %121, %119, %109
  %124 = phi i64* [ %122, %121 ], [ %103, %109 ], [ %103, %119 ]
  %125 = load i64, i64* %124, align 8
  %126 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %123
  %128 = inttoptr i64 %72 to i64*
  %129 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %70, i64 0, i32 0
  %130 = load i64*, i64** %129, align 8
  store i64 %72, i64* %71, align 8
  %131 = load i32, i32* %75, align 8
  %132 = add nsw i32 %131, -1
  store i32 %132, i32* %75, align 8
  %133 = load i64*, i64** %73, align 8
  %134 = icmp eq i64* %133, %74
  br i1 %134, label %137, label %135

135:                                              ; preds = %127
  store i64* %74, i64** %73, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %136 = load i64*, i64** %129, align 8
  br label %137

137:                                              ; preds = %135, %127
  %138 = phi i64* [ %136, %135 ], [ %128, %127 ]
  %139 = phi i64* [ %74, %135 ], [ %130, %127 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %138, i64* %139) #5
  br label %140

140:                                              ; preds = %123, %137
  %141 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  %142 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %141, null
  br i1 %142, label %159, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = load atomic i8, i8* %145 monotonic, align 1
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %143
  %149 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %150 = load i8*, i8** %144, align 8
  %151 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  %152 = load i8*, i8** %151, align 8
  %153 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::TracingController"* %149 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %156 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %155, align 8
  %157 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %156, i64 5
  %158 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %157, align 8
  call void %158(%"class.v8::TracingController"* %149, i8* %150, i8* %152, i64 %154) #5
  br label %159

159:                                              ; preds = %140, %143, %148
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #5
  %160 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %161 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %160, align 8
  %162 = icmp eq %"class.v8::internal::RuntimeCallStats"* %161, null
  br i1 %162, label %165, label %163, !prof !2

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %161, %"class.v8::internal::RuntimeCallTimer"* %164) #5
  br label %165

165:                                              ; preds = %159, %163
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #5
  ret i64 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal47Runtime_CreateArrayLiteralWithoutAllocationSiteEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", align 8
  %5 = alloca %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1137", %"struct.std::__1::atomic.1137"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %3
  %9 = tail call fastcc i64 @_ZN2v88internalL53Stats_Runtime_CreateArrayLiteralWithoutAllocationSiteEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %80

10:                                               ; preds = %3
  %11 = ptrtoint i64* %1 to i64
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %13 = bitcast %"struct.v8::internal::HandleScopeData"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %17, align 8
  %20 = load i64, i64* %1, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %34, label %23, !prof !5

23:                                               ; preds = %10
  %24 = and i64 %20, -4294967296
  %25 = add i64 %20, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 91
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %23, %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #7
  unreachable

35:                                               ; preds = %23
  %36 = add i64 %11, -8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %42, label %41, !prof !2

41:                                               ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #7
  unreachable

42:                                               ; preds = %35
  %43 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118CreateArrayLiteralEPNS0_7IsolateENS0_6HandleINS0_27ArrayBoilerplateDescriptionEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %1, i8 zeroext 0) #5
  %44 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %45 = icmp ne i8 %44, 0
  %46 = and i64 %38, 2
  %47 = icmp eq i64 %46, 0
  %48 = or i1 %47, %45
  br i1 %48, label %49, label %59

49:                                               ; preds = %42
  %50 = bitcast %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #5
  %51 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %5, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %51, align 8
  %52 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #5
  %53 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %4, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %5, %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %4, i64 0, i32 1
  store i32 0, i32* %54, align 8
  %55 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* nonnull %4, i64* %43) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #5
  %56 = icmp eq i64* %55, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #5
  %57 = icmp eq i64* %43, null
  %58 = or i1 %57, %56
  br i1 %58, label %61, label %63

59:                                               ; preds = %42
  %60 = icmp eq i64* %43, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %59, %49
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %63

63:                                               ; preds = %61, %59, %49
  %64 = phi i64* [ %62, %61 ], [ %43, %49 ], [ %43, %59 ]
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %63
  %68 = inttoptr i64 %14 to i64*
  %69 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %12, i64 0, i32 0
  %70 = load i64*, i64** %69, align 8
  store i64 %14, i64* %13, align 8
  %71 = load i32, i32* %17, align 8
  %72 = add nsw i32 %71, -1
  store i32 %72, i32* %17, align 8
  %73 = load i64*, i64** %15, align 8
  %74 = icmp eq i64* %73, %16
  br i1 %74, label %77, label %75

75:                                               ; preds = %67
  store i64* %16, i64** %15, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %76 = load i64*, i64** %69, align 8
  br label %77

77:                                               ; preds = %75, %67
  %78 = phi i64* [ %76, %75 ], [ %68, %67 ]
  %79 = phi i64* [ %16, %75 ], [ %70, %67 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %78, i64* %79) #5
  br label %80

80:                                               ; preds = %77, %63, %8
  %81 = phi i64 [ %9, %8 ], [ %65, %63 ], [ %65, %77 ]
  ret i64 %81
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL53Stats_Runtime_CreateArrayLiteralWithoutAllocationSiteEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1147"], align 16
  %5 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", align 8
  %6 = alloca %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", align 8
  %7 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %8 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %9 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 40, i1 false) #5
  %10 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1137", %"struct.std::__1::atomic.1137"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %16 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %16, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallStats"** %13, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %17, %"class.v8::internal::RuntimeCallTimer"* %14, i32 418) #5
  br label %18

18:                                               ; preds = %3, %12
  %19 = load atomic i64, i64* @_ZZN2v88internalL53Stats_Runtime_CreateArrayLiteralWithoutAllocationSiteEiPmPNS0_7IsolateEE28trace_event_unique_atomic632 monotonic, align 8
  %20 = inttoptr i64 %19 to i8*
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  %23 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %24 = bitcast %"class.v8::TracingController"* %23 to i8* (%"class.v8::TracingController"*, i8*)***
  %25 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %24, align 8
  %26 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %25, i64 2
  %27 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %26, align 8
  %28 = call i8* %27(%"class.v8::TracingController"* %23, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #5
  %29 = ptrtoint i8* %28 to i64
  store atomic volatile i64 %29, i64* @_ZZN2v88internalL53Stats_Runtime_CreateArrayLiteralWithoutAllocationSiteEiPmPNS0_7IsolateEE28trace_event_unique_atomic632 monotonic, align 8
  br label %30

30:                                               ; preds = %18, %22
  %31 = phi i8* [ %20, %18 ], [ %28, %22 ]
  %32 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #5
  %33 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  %34 = load atomic i8, i8* %31 monotonic, align 1
  %35 = and i8 %34, 5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %68, label %37

37:                                               ; preds = %30
  %38 = bitcast [2 x %"class.std::__1::unique_ptr.1147"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #5
  %39 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1147"], [2 x %"class.std::__1::unique_ptr.1147"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 0, i64 16, i1 false) #5
  %40 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %41 = bitcast %"class.v8::TracingController"* %40 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)***
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)** %42, i64 3
  %44 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)** %43, align 8
  %45 = call i64 %44(%"class.v8::TracingController"* %40, i8 signext 88, i8* %31, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1147"* nonnull %39, i32 0) #5
  %46 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1147"], [2 x %"class.std::__1::unique_ptr.1147"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %47 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %46, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %46, align 8
  %48 = icmp eq %"class.v8::ConvertableToTraceFormat"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %37
  %50 = bitcast %"class.v8::ConvertableToTraceFormat"* %47 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, i64 1
  %53 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %52, align 8
  call void %53(%"class.v8::ConvertableToTraceFormat"* nonnull %47) #5
  br label %54

54:                                               ; preds = %49, %37
  %55 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1147"], [2 x %"class.std::__1::unique_ptr.1147"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %55, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %55, align 16
  %57 = icmp eq %"class.v8::ConvertableToTraceFormat"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.v8::ConvertableToTraceFormat"* %56 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, i64 1
  %62 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %61, align 8
  call void %62(%"class.v8::ConvertableToTraceFormat"* nonnull %56) #5
  br label %63

63:                                               ; preds = %54, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #5
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, i64 0, i32 0
  store i8* %31, i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  store i64 %45, i64* %67, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  br label %68

68:                                               ; preds = %30, %63
  %69 = ptrtoint i64* %1 to i64
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %71 = bitcast %"struct.v8::internal::HandleScopeData"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %75, align 8
  %78 = load i64, i64* %1, align 8
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %92, label %81, !prof !5

81:                                               ; preds = %68
  %82 = and i64 %78, -4294967296
  %83 = add i64 %78, -1
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %82, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = icmp eq i16 %90, 91
  br i1 %91, label %93, label %92, !prof !2

92:                                               ; preds = %81, %68
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #7
  unreachable

93:                                               ; preds = %81
  %94 = add i64 %69, -8
  %95 = inttoptr i64 %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = and i64 %96, 1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %100, label %99, !prof !2

99:                                               ; preds = %93
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #7
  unreachable

100:                                              ; preds = %93
  %101 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118CreateArrayLiteralEPNS0_7IsolateENS0_6HandleINS0_27ArrayBoilerplateDescriptionEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %1, i8 zeroext 0) #5
  %102 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %103 = icmp ne i8 %102, 0
  %104 = and i64 %96, 2
  %105 = icmp eq i64 %104, 0
  %106 = or i1 %105, %103
  br i1 %106, label %107, label %117

107:                                              ; preds = %100
  %108 = bitcast %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #5
  %109 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %109, align 8
  %110 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #5
  %111 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %5, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %6, %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"** %111, align 8
  %112 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %5, i64 0, i32 1
  store i32 0, i32* %112, align 8
  %113 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* nonnull %5, i64* %101) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #5
  %114 = icmp eq i64* %113, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #5
  %115 = icmp eq i64* %101, null
  %116 = or i1 %115, %114
  br i1 %116, label %119, label %121

117:                                              ; preds = %100
  %118 = icmp eq i64* %101, null
  br i1 %118, label %119, label %121

119:                                              ; preds = %117, %107
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %121

121:                                              ; preds = %119, %117, %107
  %122 = phi i64* [ %120, %119 ], [ %101, %107 ], [ %101, %117 ]
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %121
  %126 = inttoptr i64 %72 to i64*
  %127 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %70, i64 0, i32 0
  %128 = load i64*, i64** %127, align 8
  store i64 %72, i64* %71, align 8
  %129 = load i32, i32* %75, align 8
  %130 = add nsw i32 %129, -1
  store i32 %130, i32* %75, align 8
  %131 = load i64*, i64** %73, align 8
  %132 = icmp eq i64* %131, %74
  br i1 %132, label %135, label %133

133:                                              ; preds = %125
  store i64* %74, i64** %73, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %134 = load i64*, i64** %127, align 8
  br label %135

135:                                              ; preds = %133, %125
  %136 = phi i64* [ %134, %133 ], [ %126, %125 ]
  %137 = phi i64* [ %74, %133 ], [ %128, %125 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %136, i64* %137) #5
  br label %138

138:                                              ; preds = %121, %135
  %139 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %33, align 8
  %140 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %139, null
  br i1 %140, label %157, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = load atomic i8, i8* %143 monotonic, align 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %141
  %147 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %148 = load i8*, i8** %142, align 8
  %149 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  %150 = load i8*, i8** %149, align 8
  %151 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.v8::TracingController"* %147 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %154 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %154, i64 5
  %156 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %155, align 8
  call void %156(%"class.v8::TracingController"* %147, i8* %148, i8* %150, i64 %152) #5
  br label %157

157:                                              ; preds = %138, %141, %146
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #5
  %158 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %159 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %158, align 8
  %160 = icmp eq %"class.v8::internal::RuntimeCallStats"* %159, null
  br i1 %160, label %163, label %161, !prof !2

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %159, %"class.v8::internal::RuntimeCallTimer"* %162) #5
  br label %163

163:                                              ; preds = %157, %161
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #5
  ret i64 %123
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal26Runtime_CreateArrayLiteralEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", align 8
  %5 = alloca %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", align 8
  %6 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192", align 8
  %7 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", align 8
  %8 = alloca %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", align 8
  %9 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195", align 8
  %10 = alloca %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", align 8
  %11 = alloca %"class.v8::internal::AllocationSiteUsageContext", align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1137", %"struct.std::__1::atomic.1137"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %3
  %15 = tail call fastcc i64 @_ZN2v88internalL32Stats_Runtime_CreateArrayLiteralEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %338

16:                                               ; preds = %3
  %17 = ptrtoint i64* %1 to i64
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %19 = bitcast %"struct.v8::internal::HandleScopeData"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %22 = load i64*, i64** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %23, align 8
  %26 = load i64, i64* %1, align 8
  %27 = and i64 %26, 1
  %28 = icmp eq i64 %27, 0
  %29 = inttoptr i64 %20 to i64*
  br i1 %28, label %30, label %31, !prof !3

30:                                               ; preds = %16
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

31:                                               ; preds = %16
  %32 = add i64 %17, -8
  %33 = inttoptr i64 %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %41, !prof !4

37:                                               ; preds = %31
  %38 = ashr i64 %34, 1
  %39 = add nsw i64 %38, 1073741824
  %40 = icmp ult i64 %39, 2147483648
  br i1 %40, label %42, label %41, !prof !2

41:                                               ; preds = %37, %31
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #7
  unreachable

42:                                               ; preds = %37
  %43 = lshr i64 %34, 1
  %44 = trunc i64 %43 to i32
  %45 = add i64 %17, -16
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %61, label %50, !prof !5

50:                                               ; preds = %42
  %51 = and i64 %47, -4294967296
  %52 = add i64 %47, -1
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %51, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = icmp eq i16 %59, 91
  br i1 %60, label %62, label %61, !prof !2

61:                                               ; preds = %50, %42
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25, i64 0, i64 0)) #7
  unreachable

62:                                               ; preds = %50
  %63 = add i64 %17, -24
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %69, label %68, !prof !2

68:                                               ; preds = %62
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #7
  unreachable

69:                                               ; preds = %62
  %70 = trunc i64 %65 to i32
  %71 = ashr i32 %70, 1
  %72 = and i64 %26, -4294967296
  %73 = add i64 %26, -1
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %72, %76
  %78 = add i64 %77, 7
  %79 = inttoptr i64 %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  %81 = icmp ne i16 %80, 167
  %82 = icmp eq i64* %1, null
  %83 = or i1 %82, %81
  br i1 %83, label %84, label %99

84:                                               ; preds = %69
  %85 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118CreateArrayLiteralEPNS0_7IsolateENS0_6HandleINS0_27ArrayBoilerplateDescriptionEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %46, i8 zeroext 0) #5
  %86 = and i32 %70, 2
  %87 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %88 = icmp ne i8 %87, 0
  %89 = icmp eq i32 %86, 0
  %90 = or i1 %89, %88
  br i1 %90, label %91, label %317

91:                                               ; preds = %84
  %92 = bitcast %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #5
  %93 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %8, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %93, align 8
  %94 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #5
  %95 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %7, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %8, %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"** %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %7, i64 0, i32 1
  store i32 0, i32* %96, align 8
  %97 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* nonnull %7, i64* %85) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #5
  %98 = icmp eq i64* %97, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #5
  br i1 %98, label %320, label %317

99:                                               ; preds = %69
  %100 = add i64 %26, 3
  %101 = inttoptr i64 %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = icmp sgt i32 %102, %44
  br i1 %103, label %105, label %104, !prof !2

104:                                              ; preds = %99
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #7
  unreachable

105:                                              ; preds = %99
  %106 = shl i64 %43, 34
  %107 = ashr exact i64 %106, 32
  %108 = add nsw i64 %107, 31
  %109 = add i64 %108, %26
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %72, %112
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %115 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %114, align 8
  %116 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %115, null
  br i1 %116, label %120, label %117

117:                                              ; preds = %105
  %118 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %115, i64 %113) #5
  %119 = load i64, i64* %118, align 8
  br label %130

120:                                              ; preds = %105
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %122 = icmp eq i64* %22, %29
  br i1 %122, label %123, label %125

123:                                              ; preds = %120
  %124 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %125

125:                                              ; preds = %123, %120
  %126 = phi i64* [ %124, %123 ], [ %29, %120 ]
  %127 = ptrtoint i64* %126 to i64
  %128 = add i64 %127, 8
  %129 = inttoptr i64 %128 to i64*
  store i64* %129, i64** %121, align 8
  store i64 %113, i64* %126, align 8
  br label %130

130:                                              ; preds = %125, %117
  %131 = phi i64 [ %119, %117 ], [ %113, %125 ]
  %132 = phi i64* [ %118, %117 ], [ %126, %125 ]
  %133 = and i32 %71, 1
  %134 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %135 = icmp eq i8 %134, 0
  %136 = select i1 %135, i32 %133, i32 0
  %137 = and i64 %131, 1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %162, label %139

139:                                              ; preds = %130
  %140 = and i64 %131, -4294967296
  %141 = add i64 %131, 3
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %140, %144
  %146 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %114, align 8
  %147 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %146, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %139
  %149 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %146, i64 %145) #5
  br label %265

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %152 = load i64*, i64** %151, align 8
  %153 = load i64*, i64** %21, align 8
  %154 = icmp eq i64* %152, %153
  br i1 %154, label %155, label %157

155:                                              ; preds = %150
  %156 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %157

157:                                              ; preds = %155, %150
  %158 = phi i64* [ %156, %155 ], [ %152, %150 ]
  %159 = ptrtoint i64* %158 to i64
  %160 = add i64 %159, 8
  %161 = inttoptr i64 %160 to i64*
  store i64* %161, i64** %151, align 8
  store i64 %145, i64* %158, align 8
  br label %265

162:                                              ; preds = %130
  %163 = and i32 %71, 4
  %164 = trunc i64 %131 to i32
  %165 = or i32 %163, %164
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %184

167:                                              ; preds = %162
  %168 = load i64, i64* %1, align 8
  %169 = add i64 %168, %108
  %170 = inttoptr i64 %169 to i32*
  store atomic volatile i32 2, i32* %170 release, align 4
  %171 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118CreateArrayLiteralEPNS0_7IsolateENS0_6HandleINS0_27ArrayBoilerplateDescriptionEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %46, i8 zeroext 0) #5
  %172 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %173 = icmp ne i8 %172, 0
  %174 = icmp eq i32 %133, 0
  %175 = or i1 %174, %173
  br i1 %175, label %176, label %317

176:                                              ; preds = %167
  %177 = bitcast %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #5
  %178 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %5, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %178, align 8
  %179 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %179) #5
  %180 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %4, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %5, %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"** %180, align 8
  %181 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %4, i64 0, i32 1
  store i32 0, i32* %181, align 8
  %182 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* nonnull %4, i64* %171) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %179) #5
  %183 = icmp eq i64* %182, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #5
  br i1 %183, label %320, label %317

184:                                              ; preds = %162
  %185 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118CreateArrayLiteralEPNS0_7IsolateENS0_6HandleINS0_27ArrayBoilerplateDescriptionEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %46, i8 zeroext 1) #5
  %186 = bitcast %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #5
  %187 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %188 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %10, i64 0, i32 0, i32 0
  %189 = bitcast i64** %187 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 16, i1 false) #5
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %188, align 8
  %190 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_129AllocationSiteCreationContext13EnterNewScopeEv(%"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* nonnull %10) #5
  %191 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %191) #5
  %192 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %6, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %10, %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"** %192, align 8
  %193 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %6, i64 0, i32 1
  store i32 0, i32* %193, align 8
  %194 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_29AllocationSiteCreationContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* nonnull %6, i64* %185) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %191) #5
  %195 = icmp eq i64* %194, null
  br i1 %195, label %264, label %196

196:                                              ; preds = %184
  %197 = icmp eq i64* %185, null
  br i1 %197, label %229, label %198

198:                                              ; preds = %196
  %199 = load i64, i64* %190, align 8
  %200 = load i64, i64* %185, align 8
  %201 = add i64 %199, 3
  %202 = inttoptr i64 %201 to i32*
  %203 = trunc i64 %200 to i32
  store atomic volatile i32 %203, i32* %202 release, align 4
  %204 = and i64 %200, 1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %229, label %206

206:                                              ; preds = %198
  %207 = and i64 %199, -262144
  %208 = or i64 %207, 8
  %209 = inttoptr i64 %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = and i64 %210, 262144
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %217, label %213

213:                                              ; preds = %206
  %214 = or i64 %207, 16
  %215 = inttoptr i64 %214 to %"class.v8::internal::Heap"**
  %216 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %215, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %216, i64 %199, i64 %201, i64 %200) #5
  br label %217

217:                                              ; preds = %213, %206
  %218 = and i64 %200, -262144
  %219 = or i64 %218, 8
  %220 = inttoptr i64 %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = and i64 %221, 24
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %229, label %224

224:                                              ; preds = %217
  %225 = load i64, i64* %209, align 8
  %226 = and i64 %225, 24
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %224
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %199, i64 %201, i64 %200) #5
  br label %229

229:                                              ; preds = %228, %224, %217, %198, %196
  %230 = load i64, i64* %1, align 8
  %231 = load i64, i64* %190, align 8
  %232 = add i64 %230, %108
  %233 = inttoptr i64 %232 to i32*
  %234 = trunc i64 %231 to i32
  store atomic volatile i32 %234, i32* %233 release, align 4
  %235 = and i64 %231, 1
  %236 = icmp ne i64 %235, 0
  %237 = icmp ne i32 %234, 3
  %238 = and i1 %237, %236
  br i1 %238, label %239, label %263

239:                                              ; preds = %229
  %240 = and i64 %230, -262144
  %241 = or i64 %240, 8
  %242 = inttoptr i64 %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = and i64 %243, 262144
  %245 = icmp eq i64 %244, 0
  %246 = and i64 %231, -3
  br i1 %245, label %251, label %247

247:                                              ; preds = %239
  %248 = or i64 %240, 16
  %249 = inttoptr i64 %248 to %"class.v8::internal::Heap"**
  %250 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %249, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %250, i64 %230, i64 %232, i64 %246) #5
  br label %251

251:                                              ; preds = %247, %239
  %252 = and i64 %231, -262144
  %253 = or i64 %252, 8
  %254 = inttoptr i64 %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = and i64 %255, 24
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %263, label %258

258:                                              ; preds = %251
  %259 = load i64, i64* %242, align 8
  %260 = and i64 %259, 24
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %258
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %230, i64 %232, i64 %246) #5
  br label %263

263:                                              ; preds = %262, %258, %251, %229
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #5
  br label %265

264:                                              ; preds = %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #5
  br label %320

265:                                              ; preds = %263, %157, %148
  %266 = phi i64* [ %185, %263 ], [ %149, %148 ], [ %158, %157 ]
  %267 = phi i64* [ %190, %263 ], [ %132, %148 ], [ %132, %157 ]
  %268 = bitcast %"class.v8::internal::AllocationSiteUsageContext"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %268) #5
  %269 = lshr i32 %71, 1
  %270 = trunc i32 %269 to i8
  %271 = and i8 %270, 1
  %272 = xor i8 %271, 1
  %273 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %274 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %11, i64 0, i32 0, i32 0
  %275 = getelementptr inbounds i64*, i64** %273, i64 1
  %276 = bitcast i64** %275 to i64*
  store i64 0, i64* %276, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %274, align 8
  %277 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %11, i64 0, i32 1, i32 0, i32 0
  store i64* %267, i64** %277, align 8
  %278 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %11, i64 0, i32 2
  store i8 %272, i8* %278, align 8
  store i64* %267, i64** %273, align 8
  %279 = load i64, i64* %267, align 8
  %280 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %281 = load i64*, i64** %280, align 8
  %282 = load i64*, i64** %21, align 8
  %283 = icmp eq i64* %281, %282
  br i1 %283, label %284, label %286

284:                                              ; preds = %265
  %285 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %286

286:                                              ; preds = %284, %265
  %287 = phi i64* [ %285, %284 ], [ %281, %265 ]
  %288 = ptrtoint i64* %287 to i64
  %289 = add i64 %288, 8
  %290 = inttoptr i64 %289 to i64*
  store i64* %290, i64** %280, align 8
  store i64 %279, i64* %287, align 8
  %291 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %287, i64** %291, align 8
  %292 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %274, align 8
  %293 = load i64, i64* %287, align 8
  %294 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %292, i64 0, i32 31, i32 4
  %295 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %294, align 8
  %296 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %295, null
  br i1 %296, label %299, label %297

297:                                              ; preds = %286
  %298 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %295, i64 %293) #5
  br label %312

299:                                              ; preds = %286
  %300 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %292, i64 0, i32 31, i32 0
  %301 = load i64*, i64** %300, align 8
  %302 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %292, i64 0, i32 31, i32 1
  %303 = load i64*, i64** %302, align 8
  %304 = icmp eq i64* %301, %303
  br i1 %304, label %305, label %307

305:                                              ; preds = %299
  %306 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %292) #5
  br label %307

307:                                              ; preds = %305, %299
  %308 = phi i64* [ %306, %305 ], [ %301, %299 ]
  %309 = ptrtoint i64* %308 to i64
  %310 = add i64 %309, 8
  %311 = inttoptr i64 %310 to i64*
  store i64* %311, i64** %300, align 8
  store i64 %293, i64* %308, align 8
  br label %312

312:                                              ; preds = %307, %297
  %313 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %313) #5
  %314 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %9, i64 0, i32 0
  store %"class.v8::internal::AllocationSiteUsageContext"* %11, %"class.v8::internal::AllocationSiteUsageContext"** %314, align 8
  %315 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %9, i64 0, i32 1
  store i32 %136, i32* %315, align 8
  %316 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS0_26AllocationSiteUsageContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* nonnull %9, i64* %266) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %313) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %268) #5
  br label %317

317:                                              ; preds = %312, %176, %167, %91, %84
  %318 = phi i64* [ %316, %312 ], [ %85, %91 ], [ %85, %84 ], [ %171, %176 ], [ %171, %167 ]
  %319 = icmp eq i64* %318, null
  br i1 %319, label %320, label %322

320:                                              ; preds = %317, %264, %176, %91
  %321 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %322

322:                                              ; preds = %320, %317
  %323 = phi i64* [ %321, %320 ], [ %318, %317 ]
  %324 = load i64, i64* %323, align 8
  %325 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %325, label %338, label %326

326:                                              ; preds = %322
  %327 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %18, i64 0, i32 0
  %328 = load i64*, i64** %327, align 8
  store i64 %20, i64* %19, align 8
  %329 = load i32, i32* %23, align 8
  %330 = add nsw i32 %329, -1
  store i32 %330, i32* %23, align 8
  %331 = load i64*, i64** %21, align 8
  %332 = icmp eq i64* %331, %22
  br i1 %332, label %335, label %333

333:                                              ; preds = %326
  store i64* %22, i64** %21, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %334 = load i64*, i64** %327, align 8
  br label %335

335:                                              ; preds = %333, %326
  %336 = phi i64* [ %334, %333 ], [ %29, %326 ]
  %337 = phi i64* [ %22, %333 ], [ %328, %326 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %336, i64* %337) #5
  br label %338

338:                                              ; preds = %335, %322, %14
  %339 = phi i64 [ %15, %14 ], [ %324, %322 ], [ %324, %335 ]
  ret i64 %339
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL32Stats_Runtime_CreateArrayLiteralEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1147"], align 16
  %5 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", align 8
  %6 = alloca %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", align 8
  %7 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192", align 8
  %8 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", align 8
  %9 = alloca %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", align 8
  %10 = alloca %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195", align 8
  %11 = alloca %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", align 8
  %12 = alloca %"class.v8::internal::AllocationSiteUsageContext", align 8
  %13 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %14 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %15 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 40, i1 false) #5
  %16 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1137", %"struct.std::__1::atomic.1137"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18, !prof !2

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %13, i64 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %13, i64 0, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %22 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %22, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %23, %"class.v8::internal::RuntimeCallStats"** %19, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %23, %"class.v8::internal::RuntimeCallTimer"* %20, i32 417) #5
  br label %24

24:                                               ; preds = %3, %18
  %25 = load atomic i64, i64* @_ZZN2v88internalL32Stats_Runtime_CreateArrayLiteralEiPmPNS0_7IsolateEE28trace_event_unique_atomic642 monotonic, align 8
  %26 = inttoptr i64 %25 to i8*
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %36

28:                                               ; preds = %24
  %29 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %30 = bitcast %"class.v8::TracingController"* %29 to i8* (%"class.v8::TracingController"*, i8*)***
  %31 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %30, align 8
  %32 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %31, i64 2
  %33 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %32, align 8
  %34 = call i8* %33(%"class.v8::TracingController"* %29, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #5
  %35 = ptrtoint i8* %34 to i64
  store atomic volatile i64 %35, i64* @_ZZN2v88internalL32Stats_Runtime_CreateArrayLiteralEiPmPNS0_7IsolateEE28trace_event_unique_atomic642 monotonic, align 8
  br label %36

36:                                               ; preds = %24, %28
  %37 = phi i8* [ %26, %24 ], [ %34, %28 ]
  %38 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #5
  %39 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %39, align 8
  %40 = load atomic i8, i8* %37 monotonic, align 1
  %41 = and i8 %40, 5
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %74, label %43

43:                                               ; preds = %36
  %44 = bitcast [2 x %"class.std::__1::unique_ptr.1147"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #5
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1147"], [2 x %"class.std::__1::unique_ptr.1147"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 0, i64 16, i1 false) #5
  %46 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %47 = bitcast %"class.v8::TracingController"* %46 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)***
  %48 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)*** %47, align 8
  %49 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)** %48, i64 3
  %50 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)** %49, align 8
  %51 = call i64 %50(%"class.v8::TracingController"* %46, i8 signext 88, i8* %37, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.24, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1147"* nonnull %45, i32 0) #5
  %52 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1147"], [2 x %"class.std::__1::unique_ptr.1147"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %53 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %52, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %52, align 8
  %54 = icmp eq %"class.v8::ConvertableToTraceFormat"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = bitcast %"class.v8::ConvertableToTraceFormat"* %53 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %57 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %57, i64 1
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, align 8
  call void %59(%"class.v8::ConvertableToTraceFormat"* nonnull %53) #5
  br label %60

60:                                               ; preds = %55, %43
  %61 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1147"], [2 x %"class.std::__1::unique_ptr.1147"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %61, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %61, align 16
  %63 = icmp eq %"class.v8::ConvertableToTraceFormat"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.v8::ConvertableToTraceFormat"* %62 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %66 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %66, i64 1
  %68 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %67, align 8
  call void %68(%"class.v8::ConvertableToTraceFormat"* nonnull %62) #5
  br label %69

69:                                               ; preds = %60, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #5
  %70 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1
  %71 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %70, i64 0, i32 0
  store i8* %37, i8** %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.24, i64 0, i64 0), i8** %72, align 8
  %73 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1, i32 2
  store i64 %51, i64* %73, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %70, %"struct.v8::internal::tracing::ScopedTracer::Data"** %39, align 8
  br label %74

74:                                               ; preds = %36, %69
  %75 = ptrtoint i64* %1 to i64
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %77 = bitcast %"struct.v8::internal::HandleScopeData"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %80 = load i64*, i64** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %81, align 8
  %84 = load i64, i64* %1, align 8
  %85 = and i64 %84, 1
  %86 = icmp eq i64 %85, 0
  %87 = inttoptr i64 %78 to i64*
  br i1 %86, label %88, label %89, !prof !3

88:                                               ; preds = %74
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

89:                                               ; preds = %74
  %90 = add i64 %75, -8
  %91 = inttoptr i64 %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = and i64 %92, 1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %99, !prof !4

95:                                               ; preds = %89
  %96 = ashr i64 %92, 1
  %97 = add nsw i64 %96, 1073741824
  %98 = icmp ult i64 %97, 2147483648
  br i1 %98, label %100, label %99, !prof !2

99:                                               ; preds = %95, %89
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #7
  unreachable

100:                                              ; preds = %95
  %101 = lshr i64 %92, 1
  %102 = trunc i64 %101 to i32
  %103 = add i64 %75, -16
  %104 = inttoptr i64 %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = and i64 %105, 1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %119, label %108, !prof !5

108:                                              ; preds = %100
  %109 = and i64 %105, -4294967296
  %110 = add i64 %105, -1
  %111 = inttoptr i64 %110 to i32*
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = zext i32 %112 to i64
  %114 = or i64 %109, %113
  %115 = add i64 %114, 7
  %116 = inttoptr i64 %115 to i16*
  %117 = load atomic i16, i16* %116 monotonic, align 2
  %118 = icmp eq i16 %117, 91
  br i1 %118, label %120, label %119, !prof !2

119:                                              ; preds = %108, %100
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25, i64 0, i64 0)) #7
  unreachable

120:                                              ; preds = %108
  %121 = add i64 %75, -24
  %122 = inttoptr i64 %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = and i64 %123, 1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %127, label %126, !prof !2

126:                                              ; preds = %120
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #7
  unreachable

127:                                              ; preds = %120
  %128 = trunc i64 %123 to i32
  %129 = ashr i32 %128, 1
  %130 = and i64 %84, -4294967296
  %131 = add i64 %84, -1
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = zext i32 %133 to i64
  %135 = or i64 %130, %134
  %136 = add i64 %135, 7
  %137 = inttoptr i64 %136 to i16*
  %138 = load atomic i16, i16* %137 monotonic, align 2
  %139 = icmp ne i16 %138, 167
  %140 = icmp eq i64* %1, null
  %141 = or i1 %140, %139
  br i1 %141, label %142, label %157

142:                                              ; preds = %127
  %143 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118CreateArrayLiteralEPNS0_7IsolateENS0_6HandleINS0_27ArrayBoilerplateDescriptionEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %104, i8 zeroext 0) #5
  %144 = and i32 %128, 2
  %145 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %146 = icmp ne i8 %145, 0
  %147 = icmp eq i32 %144, 0
  %148 = or i1 %147, %146
  br i1 %148, label %149, label %375

149:                                              ; preds = %142
  %150 = bitcast %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #5
  %151 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %9, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %151, align 8
  %152 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #5
  %153 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %8, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %9, %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"** %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %8, i64 0, i32 1
  store i32 0, i32* %154, align 8
  %155 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* nonnull %8, i64* %143) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #5
  %156 = icmp eq i64* %155, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #5
  br i1 %156, label %378, label %375

157:                                              ; preds = %127
  %158 = add i64 %84, 3
  %159 = inttoptr i64 %158 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = icmp sgt i32 %160, %102
  br i1 %161, label %163, label %162, !prof !2

162:                                              ; preds = %157
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #7
  unreachable

163:                                              ; preds = %157
  %164 = shl i64 %101, 34
  %165 = ashr exact i64 %164, 32
  %166 = add nsw i64 %165, 31
  %167 = add i64 %166, %84
  %168 = inttoptr i64 %167 to i32*
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = zext i32 %169 to i64
  %171 = or i64 %130, %170
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %173 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %172, align 8
  %174 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %173, null
  br i1 %174, label %178, label %175

175:                                              ; preds = %163
  %176 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %173, i64 %171) #5
  %177 = load i64, i64* %176, align 8
  br label %188

178:                                              ; preds = %163
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %180 = icmp eq i64* %80, %87
  br i1 %180, label %181, label %183

181:                                              ; preds = %178
  %182 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %183

183:                                              ; preds = %181, %178
  %184 = phi i64* [ %182, %181 ], [ %87, %178 ]
  %185 = ptrtoint i64* %184 to i64
  %186 = add i64 %185, 8
  %187 = inttoptr i64 %186 to i64*
  store i64* %187, i64** %179, align 8
  store i64 %171, i64* %184, align 8
  br label %188

188:                                              ; preds = %183, %175
  %189 = phi i64 [ %177, %175 ], [ %171, %183 ]
  %190 = phi i64* [ %176, %175 ], [ %184, %183 ]
  %191 = and i32 %129, 1
  %192 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %193 = icmp eq i8 %192, 0
  %194 = select i1 %193, i32 %191, i32 0
  %195 = and i64 %189, 1
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %220, label %197

197:                                              ; preds = %188
  %198 = and i64 %189, -4294967296
  %199 = add i64 %189, 3
  %200 = inttoptr i64 %199 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i64
  %203 = or i64 %198, %202
  %204 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %172, align 8
  %205 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %197
  %207 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %204, i64 %203) #5
  br label %323

208:                                              ; preds = %197
  %209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %210 = load i64*, i64** %209, align 8
  %211 = load i64*, i64** %79, align 8
  %212 = icmp eq i64* %210, %211
  br i1 %212, label %213, label %215

213:                                              ; preds = %208
  %214 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %215

215:                                              ; preds = %213, %208
  %216 = phi i64* [ %214, %213 ], [ %210, %208 ]
  %217 = ptrtoint i64* %216 to i64
  %218 = add i64 %217, 8
  %219 = inttoptr i64 %218 to i64*
  store i64* %219, i64** %209, align 8
  store i64 %203, i64* %216, align 8
  br label %323

220:                                              ; preds = %188
  %221 = and i32 %129, 4
  %222 = trunc i64 %189 to i32
  %223 = or i32 %221, %222
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %242

225:                                              ; preds = %220
  %226 = load i64, i64* %1, align 8
  %227 = add i64 %226, %166
  %228 = inttoptr i64 %227 to i32*
  store atomic volatile i32 2, i32* %228 release, align 4
  %229 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118CreateArrayLiteralEPNS0_7IsolateENS0_6HandleINS0_27ArrayBoilerplateDescriptionEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %104, i8 zeroext 0) #5
  %230 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !6
  %231 = icmp ne i8 %230, 0
  %232 = icmp eq i32 %191, 0
  %233 = or i1 %232, %231
  br i1 %233, label %234, label %375

234:                                              ; preds = %225
  %235 = bitcast %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #5
  %236 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %236, align 8
  %237 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %237) #5
  %238 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %5, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %6, %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"** %238, align 8
  %239 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %5, i64 0, i32 1
  store i32 0, i32* %239, align 8
  %240 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* nonnull %5, i64* %229) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %237) #5
  %241 = icmp eq i64* %240, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #5
  br i1 %241, label %378, label %375

242:                                              ; preds = %220
  %243 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118CreateArrayLiteralEPNS0_7IsolateENS0_6HandleINS0_27ArrayBoilerplateDescriptionEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* %104, i8 zeroext 1) #5
  %244 = bitcast %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %244) #5
  %245 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %246 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %11, i64 0, i32 0, i32 0
  %247 = bitcast i64** %245 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %247, i8 0, i64 16, i1 false) #5
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %246, align 8
  %248 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_129AllocationSiteCreationContext13EnterNewScopeEv(%"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* nonnull %11) #5
  %249 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %249) #5
  %250 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %7, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %11, %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"** %250, align 8
  %251 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %7, i64 0, i32 1
  store i32 0, i32* %251, align 8
  %252 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_29AllocationSiteCreationContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* nonnull %7, i64* %243) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %249) #5
  %253 = icmp eq i64* %252, null
  br i1 %253, label %322, label %254

254:                                              ; preds = %242
  %255 = icmp eq i64* %243, null
  br i1 %255, label %287, label %256

256:                                              ; preds = %254
  %257 = load i64, i64* %248, align 8
  %258 = load i64, i64* %243, align 8
  %259 = add i64 %257, 3
  %260 = inttoptr i64 %259 to i32*
  %261 = trunc i64 %258 to i32
  store atomic volatile i32 %261, i32* %260 release, align 4
  %262 = and i64 %258, 1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %287, label %264

264:                                              ; preds = %256
  %265 = and i64 %257, -262144
  %266 = or i64 %265, 8
  %267 = inttoptr i64 %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = and i64 %268, 262144
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %275, label %271

271:                                              ; preds = %264
  %272 = or i64 %265, 16
  %273 = inttoptr i64 %272 to %"class.v8::internal::Heap"**
  %274 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %273, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %274, i64 %257, i64 %259, i64 %258) #5
  br label %275

275:                                              ; preds = %271, %264
  %276 = and i64 %258, -262144
  %277 = or i64 %276, 8
  %278 = inttoptr i64 %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = and i64 %279, 24
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %287, label %282

282:                                              ; preds = %275
  %283 = load i64, i64* %267, align 8
  %284 = and i64 %283, 24
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %282
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %257, i64 %259, i64 %258) #5
  br label %287

287:                                              ; preds = %286, %282, %275, %256, %254
  %288 = load i64, i64* %1, align 8
  %289 = load i64, i64* %248, align 8
  %290 = add i64 %288, %166
  %291 = inttoptr i64 %290 to i32*
  %292 = trunc i64 %289 to i32
  store atomic volatile i32 %292, i32* %291 release, align 4
  %293 = and i64 %289, 1
  %294 = icmp ne i64 %293, 0
  %295 = icmp ne i32 %292, 3
  %296 = and i1 %295, %294
  br i1 %296, label %297, label %321

297:                                              ; preds = %287
  %298 = and i64 %288, -262144
  %299 = or i64 %298, 8
  %300 = inttoptr i64 %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = and i64 %301, 262144
  %303 = icmp eq i64 %302, 0
  %304 = and i64 %289, -3
  br i1 %303, label %309, label %305

305:                                              ; preds = %297
  %306 = or i64 %298, 16
  %307 = inttoptr i64 %306 to %"class.v8::internal::Heap"**
  %308 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %307, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %308, i64 %288, i64 %290, i64 %304) #5
  br label %309

309:                                              ; preds = %305, %297
  %310 = and i64 %289, -262144
  %311 = or i64 %310, 8
  %312 = inttoptr i64 %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = and i64 %313, 24
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %321, label %316

316:                                              ; preds = %309
  %317 = load i64, i64* %300, align 8
  %318 = and i64 %317, 24
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %321

320:                                              ; preds = %316
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %288, i64 %290, i64 %304) #5
  br label %321

321:                                              ; preds = %320, %316, %309, %287
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %244) #5
  br label %323

322:                                              ; preds = %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %244) #5
  br label %378

323:                                              ; preds = %321, %215, %206
  %324 = phi i64* [ %243, %321 ], [ %207, %206 ], [ %216, %215 ]
  %325 = phi i64* [ %248, %321 ], [ %190, %206 ], [ %190, %215 ]
  %326 = bitcast %"class.v8::internal::AllocationSiteUsageContext"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %326) #5
  %327 = lshr i32 %129, 1
  %328 = trunc i32 %327 to i8
  %329 = and i8 %328, 1
  %330 = xor i8 %329, 1
  %331 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %332 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %12, i64 0, i32 0, i32 0
  %333 = getelementptr inbounds i64*, i64** %331, i64 1
  %334 = bitcast i64** %333 to i64*
  store i64 0, i64* %334, align 8
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %332, align 8
  %335 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %12, i64 0, i32 1, i32 0, i32 0
  store i64* %325, i64** %335, align 8
  %336 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %12, i64 0, i32 2
  store i8 %330, i8* %336, align 8
  store i64* %325, i64** %331, align 8
  %337 = load i64, i64* %325, align 8
  %338 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %339 = load i64*, i64** %338, align 8
  %340 = load i64*, i64** %79, align 8
  %341 = icmp eq i64* %339, %340
  br i1 %341, label %342, label %344

342:                                              ; preds = %323
  %343 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %344

344:                                              ; preds = %342, %323
  %345 = phi i64* [ %343, %342 ], [ %339, %323 ]
  %346 = ptrtoint i64* %345 to i64
  %347 = add i64 %346, 8
  %348 = inttoptr i64 %347 to i64*
  store i64* %348, i64** %338, align 8
  store i64 %337, i64* %345, align 8
  %349 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %345, i64** %349, align 8
  %350 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %332, align 8
  %351 = load i64, i64* %345, align 8
  %352 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %350, i64 0, i32 31, i32 4
  %353 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %352, align 8
  %354 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %353, null
  br i1 %354, label %357, label %355

355:                                              ; preds = %344
  %356 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %353, i64 %351) #5
  br label %370

357:                                              ; preds = %344
  %358 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %350, i64 0, i32 31, i32 0
  %359 = load i64*, i64** %358, align 8
  %360 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %350, i64 0, i32 31, i32 1
  %361 = load i64*, i64** %360, align 8
  %362 = icmp eq i64* %359, %361
  br i1 %362, label %363, label %365

363:                                              ; preds = %357
  %364 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %350) #5
  br label %365

365:                                              ; preds = %363, %357
  %366 = phi i64* [ %364, %363 ], [ %359, %357 ]
  %367 = ptrtoint i64* %366 to i64
  %368 = add i64 %367, 8
  %369 = inttoptr i64 %368 to i64*
  store i64* %369, i64** %358, align 8
  store i64 %351, i64* %366, align 8
  br label %370

370:                                              ; preds = %365, %355
  %371 = bitcast %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %371) #5
  %372 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %10, i64 0, i32 0
  store %"class.v8::internal::AllocationSiteUsageContext"* %12, %"class.v8::internal::AllocationSiteUsageContext"** %372, align 8
  %373 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %10, i64 0, i32 1
  store i32 %194, i32* %373, align 8
  %374 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS0_26AllocationSiteUsageContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* nonnull %10, i64* %324) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %371) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %326) #5
  br label %375

375:                                              ; preds = %370, %234, %225, %149, %142
  %376 = phi i64* [ %374, %370 ], [ %143, %149 ], [ %143, %142 ], [ %229, %234 ], [ %229, %225 ]
  %377 = icmp eq i64* %376, null
  br i1 %377, label %378, label %380

378:                                              ; preds = %375, %322, %234, %149
  %379 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %380

380:                                              ; preds = %378, %375
  %381 = phi i64* [ %379, %378 ], [ %376, %375 ]
  %382 = load i64, i64* %381, align 8
  %383 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %383, label %396, label %384

384:                                              ; preds = %380
  %385 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %76, i64 0, i32 0
  %386 = load i64*, i64** %385, align 8
  store i64 %78, i64* %77, align 8
  %387 = load i32, i32* %81, align 8
  %388 = add nsw i32 %387, -1
  store i32 %388, i32* %81, align 8
  %389 = load i64*, i64** %79, align 8
  %390 = icmp eq i64* %389, %80
  br i1 %390, label %393, label %391

391:                                              ; preds = %384
  store i64* %80, i64** %79, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %392 = load i64*, i64** %385, align 8
  br label %393

393:                                              ; preds = %391, %384
  %394 = phi i64* [ %392, %391 ], [ %87, %384 ]
  %395 = phi i64* [ %80, %391 ], [ %386, %384 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %394, i64* %395) #5
  br label %396

396:                                              ; preds = %380, %393
  %397 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %39, align 8
  %398 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %397, null
  br i1 %398, label %415, label %399

399:                                              ; preds = %396
  %400 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1, i32 0
  %401 = load i8*, i8** %400, align 8
  %402 = load atomic i8, i8* %401 monotonic, align 1
  %403 = icmp eq i8 %402, 0
  br i1 %403, label %415, label %404

404:                                              ; preds = %399
  %405 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %406 = load i8*, i8** %400, align 8
  %407 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1, i32 1
  %408 = load i8*, i8** %407, align 8
  %409 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1, i32 2
  %410 = load i64, i64* %409, align 8
  %411 = bitcast %"class.v8::TracingController"* %405 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %412 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %411, align 8
  %413 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %412, i64 5
  %414 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %413, align 8
  call void %414(%"class.v8::TracingController"* %405, i8* %406, i8* %408, i64 %410) #5
  br label %415

415:                                              ; preds = %396, %399, %404
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #5
  %416 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %13, i64 0, i32 0
  %417 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %416, align 8
  %418 = icmp eq %"class.v8::internal::RuntimeCallStats"* %417, null
  br i1 %418, label %421, label %419, !prof !2

419:                                              ; preds = %415
  %420 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %13, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %417, %"class.v8::internal::RuntimeCallTimer"* %420) #5
  br label %421

421:                                              ; preds = %415, %419
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #5
  ret i64 %382
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal27Runtime_CreateRegExpLiteralEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1137", %"struct.std::__1::atomic.1137"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL33Stats_Runtime_CreateRegExpLiteralEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %245

8:                                                ; preds = %3
  %9 = ptrtoint i64* %1 to i64
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = load i64, i64* %1, align 8
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %12 to i64*
  br i1 %20, label %22, label %23, !prof !3

22:                                               ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

23:                                               ; preds = %8
  %24 = add i64 %9, -8
  %25 = inttoptr i64 %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %33, !prof !4

29:                                               ; preds = %23
  %30 = ashr i64 %26, 1
  %31 = add nsw i64 %30, 1073741824
  %32 = icmp ult i64 %31, 2147483648
  br i1 %32, label %34, label %33, !prof !2

33:                                               ; preds = %29, %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #7
  unreachable

34:                                               ; preds = %29
  %35 = add i64 %9, -16
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %51, label %40, !prof !5

40:                                               ; preds = %34
  %41 = and i64 %37, -4294967296
  %42 = add i64 %37, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %41, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp ult i16 %49, 64
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %40, %34
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i64 0, i64 0)) #7
  unreachable

52:                                               ; preds = %40
  %53 = add i64 %9, -24
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %59, label %58, !prof !2

58:                                               ; preds = %52
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #7
  unreachable

59:                                               ; preds = %52
  %60 = trunc i64 %55 to i32
  %61 = ashr i32 %60, 1
  %62 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %63 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 0, i32 1
  %66 = load i8, i8* %65, align 8, !range !6
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 1, i64 0
  br label %78

70:                                               ; preds = %64, %59
  %71 = and i64 %18, -262144
  %72 = or i64 %71, 16
  %73 = inttoptr i64 %72 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = add i64 %74, -41416
  %76 = inttoptr i64 %75 to %"class.v8::internal::Isolate"*
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %76, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %78

78:                                               ; preds = %70, %68
  %79 = phi i64* [ %77, %70 ], [ %69, %68 ]
  %80 = getelementptr inbounds i64, i64* %79, i64 4
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %18 to i32
  %83 = trunc i64 %81 to i32
  %84 = icmp eq i32 %82, %83
  br i1 %84, label %85, label %90

85:                                               ; preds = %78
  %86 = tail call i64* @_ZN2v88internal8JSRegExp3NewEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS_4base5FlagsINS1_4FlagEiEEj(%"class.v8::internal::Isolate"* %2, i64* %36, i32 %61, i32 0) #5
  %87 = icmp eq i64* %86, null
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %89 = select i1 %87, i64* %88, i64* %86
  br label %229

90:                                               ; preds = %78
  %91 = and i64 %18, -4294967296
  %92 = shl i64 %26, 33
  %93 = ashr exact i64 %92, 32
  %94 = and i64 %93, -4
  %95 = add nsw i64 %94, 31
  %96 = add i64 %95, %18
  %97 = inttoptr i64 %96 to i32*
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = zext i32 %98 to i64
  %100 = or i64 %91, %99
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %102 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %101, align 8
  %103 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %90
  %105 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %102, i64 %100) #5
  %106 = load i64, i64* %105, align 8
  br label %117

107:                                              ; preds = %90
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %109 = icmp eq i64* %14, %21
  br i1 %109, label %110, label %112

110:                                              ; preds = %107
  %111 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %112

112:                                              ; preds = %110, %107
  %113 = phi i64* [ %111, %110 ], [ %21, %107 ]
  %114 = ptrtoint i64* %113 to i64
  %115 = add i64 %114, 8
  %116 = inttoptr i64 %115 to i64*
  store i64* %116, i64** %108, align 8
  store i64 %100, i64* %113, align 8
  br label %117

117:                                              ; preds = %112, %104
  %118 = phi i64 [ %106, %104 ], [ %100, %112 ]
  %119 = phi i64* [ %105, %104 ], [ %113, %112 ]
  %120 = and i64 %118, 1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %123, label %122, !prof !2

122:                                              ; preds = %117
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0)) #7
  unreachable

123:                                              ; preds = %117
  %124 = tail call i64* @_ZN2v88internal8JSRegExp3NewEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS_4base5FlagsINS1_4FlagEiEEj(%"class.v8::internal::Isolate"* %2, i64* %36, i32 %61, i32 0) #5
  %125 = icmp eq i64* %124, null
  br i1 %125, label %126, label %128

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %229

128:                                              ; preds = %123
  %129 = load i64, i64* %119, align 8
  %130 = trunc i64 %129 to i32
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %136

132:                                              ; preds = %128
  %133 = load i64, i64* %1, align 8
  %134 = add i64 %133, %95
  %135 = inttoptr i64 %134 to i32*
  store atomic volatile i32 2, i32* %135 release, align 4
  br label %229

136:                                              ; preds = %128
  %137 = load i64, i64* %124, align 8
  %138 = and i64 %137, -4294967296
  %139 = add i64 %137, 11
  %140 = inttoptr i64 %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %138, %142
  %144 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %101, align 8
  %145 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %144, null
  br i1 %145, label %148, label %146

146:                                              ; preds = %136
  %147 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %144, i64 %143) #5
  br label %160

148:                                              ; preds = %136
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %150 = load i64*, i64** %149, align 8
  %151 = load i64*, i64** %13, align 8
  %152 = icmp eq i64* %150, %151
  br i1 %152, label %153, label %155

153:                                              ; preds = %148
  %154 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %155

155:                                              ; preds = %153, %148
  %156 = phi i64* [ %154, %153 ], [ %150, %148 ]
  %157 = ptrtoint i64* %156 to i64
  %158 = add i64 %157, 8
  %159 = inttoptr i64 %158 to i64*
  store i64* %159, i64** %149, align 8
  store i64 %143, i64* %156, align 8
  br label %160

160:                                              ; preds = %155, %146
  %161 = phi i64* [ %147, %146 ], [ %156, %155 ]
  %162 = load i64, i64* %124, align 8
  %163 = and i64 %162, -4294967296
  %164 = add i64 %162, 15
  %165 = inttoptr i64 %164 to i32*
  %166 = load i32, i32* %165, align 4
  %167 = zext i32 %166 to i64
  %168 = or i64 %163, %167
  %169 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %101, align 8
  %170 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %160
  %172 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %169, i64 %168) #5
  br label %185

173:                                              ; preds = %160
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %175 = load i64*, i64** %174, align 8
  %176 = load i64*, i64** %13, align 8
  %177 = icmp eq i64* %175, %176
  br i1 %177, label %178, label %180

178:                                              ; preds = %173
  %179 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %180

180:                                              ; preds = %178, %173
  %181 = phi i64* [ %179, %178 ], [ %175, %173 ]
  %182 = ptrtoint i64* %181 to i64
  %183 = add i64 %182, 8
  %184 = inttoptr i64 %183 to i64*
  store i64* %184, i64** %174, align 8
  store i64 %168, i64* %181, align 8
  br label %185

185:                                              ; preds = %180, %171
  %186 = phi i64* [ %172, %171 ], [ %181, %180 ]
  %187 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %188 = load i64, i64* %124, align 8
  %189 = and i64 %188, -4294967296
  %190 = add i64 %188, 19
  %191 = inttoptr i64 %190 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = zext i32 %192 to i64
  %194 = or i64 %189, %193
  %195 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE31NewRegExpBoilerplateDescriptionENS0_6HandleINS0_10FixedArrayEEENS4_INS0_6StringEEENS0_3SmiE(%"class.v8::internal::FactoryBase"* %187, i64* %161, i64* %186, i64 %194) #5
  %196 = load i64, i64* %1, align 8
  %197 = load i64, i64* %195, align 8
  %198 = add i64 %196, %95
  %199 = inttoptr i64 %198 to i32*
  %200 = trunc i64 %197 to i32
  store atomic volatile i32 %200, i32* %199 release, align 4
  %201 = and i64 %197, 1
  %202 = icmp ne i64 %201, 0
  %203 = icmp ne i32 %200, 3
  %204 = and i1 %203, %202
  br i1 %204, label %205, label %229

205:                                              ; preds = %185
  %206 = and i64 %196, -262144
  %207 = or i64 %206, 8
  %208 = inttoptr i64 %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = and i64 %209, 262144
  %211 = icmp eq i64 %210, 0
  %212 = and i64 %197, -3
  br i1 %211, label %217, label %213

213:                                              ; preds = %205
  %214 = or i64 %206, 16
  %215 = inttoptr i64 %214 to %"class.v8::internal::Heap"**
  %216 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %215, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %216, i64 %196, i64 %198, i64 %212) #5
  br label %217

217:                                              ; preds = %205, %213
  %218 = and i64 %197, -262144
  %219 = or i64 %218, 8
  %220 = inttoptr i64 %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = and i64 %221, 24
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %229, label %224

224:                                              ; preds = %217
  %225 = load i64, i64* %208, align 8
  %226 = and i64 %225, 24
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %224
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %196, i64 %198, i64 %212) #5
  br label %229

229:                                              ; preds = %228, %224, %217, %185, %132, %126, %85
  %230 = phi i64* [ %124, %132 ], [ %127, %126 ], [ %124, %217 ], [ %124, %224 ], [ %124, %228 ], [ %89, %85 ], [ %124, %185 ]
  %231 = load i64, i64* %230, align 8
  %232 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %232, label %245, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %235 = load i64*, i64** %234, align 8
  store i64 %12, i64* %11, align 8
  %236 = load i32, i32* %15, align 8
  %237 = add nsw i32 %236, -1
  store i32 %237, i32* %15, align 8
  %238 = load i64*, i64** %13, align 8
  %239 = icmp eq i64* %238, %14
  br i1 %239, label %242, label %240

240:                                              ; preds = %233
  store i64* %14, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %241 = load i64*, i64** %234, align 8
  br label %242

242:                                              ; preds = %240, %233
  %243 = phi i64* [ %241, %240 ], [ %21, %233 ]
  %244 = phi i64* [ %14, %240 ], [ %235, %233 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %243, i64* %244) #5
  br label %245

245:                                              ; preds = %242, %229, %6
  %246 = phi i64 [ %7, %6 ], [ %231, %229 ], [ %231, %242 ]
  ret i64 %246
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL33Stats_Runtime_CreateRegExpLiteralEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1147"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #5
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1137", %"struct.std::__1::atomic.1137"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 421) #5
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL33Stats_Runtime_CreateRegExpLiteralEiPmPNS0_7IsolateEE28trace_event_unique_atomic660 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #5
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL33Stats_Runtime_CreateRegExpLiteralEiPmPNS0_7IsolateEE28trace_event_unique_atomic660 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #5
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1147"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #5
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1147"], [2 x %"class.std::__1::unique_ptr.1147"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #5
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1147"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.26, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1147"* nonnull %37, i32 0) #5
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1147"], [2 x %"class.std::__1::unique_ptr.1147"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #5
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1147"], [2 x %"class.std::__1::unique_ptr.1147"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #5
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #5
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.26, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = ptrtoint i64* %1 to i64
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %69 = bitcast %"struct.v8::internal::HandleScopeData"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %73, align 8
  %76 = load i64, i64* %1, align 8
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = inttoptr i64 %70 to i64*
  br i1 %78, label %80, label %81, !prof !3

80:                                               ; preds = %66
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

81:                                               ; preds = %66
  %82 = add i64 %67, -8
  %83 = inttoptr i64 %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %91, !prof !4

87:                                               ; preds = %81
  %88 = ashr i64 %84, 1
  %89 = add nsw i64 %88, 1073741824
  %90 = icmp ult i64 %89, 2147483648
  br i1 %90, label %92, label %91, !prof !2

91:                                               ; preds = %87, %81
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #7
  unreachable

92:                                               ; preds = %87
  %93 = add i64 %67, -16
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %109, label %98, !prof !5

98:                                               ; preds = %92
  %99 = and i64 %95, -4294967296
  %100 = add i64 %95, -1
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %99, %103
  %105 = add i64 %104, 7
  %106 = inttoptr i64 %105 to i16*
  %107 = load atomic i16, i16* %106 monotonic, align 2
  %108 = icmp ult i16 %107, 64
  br i1 %108, label %110, label %109, !prof !2

109:                                              ; preds = %98, %92
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i64 0, i64 0)) #7
  unreachable

110:                                              ; preds = %98
  %111 = add i64 %67, -24
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %117, label %116, !prof !2

116:                                              ; preds = %110
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #7
  unreachable

117:                                              ; preds = %110
  %118 = trunc i64 %113 to i32
  %119 = ashr i32 %118, 1
  %120 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %121 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %120, i64 0, i32 0, i32 1
  %124 = load i8, i8* %123, align 8, !range !6
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %120, i64 0, i32 1, i64 0
  br label %136

128:                                              ; preds = %122, %117
  %129 = and i64 %76, -262144
  %130 = or i64 %129, 16
  %131 = inttoptr i64 %130 to i64*
  %132 = load i64, i64* %131, align 16
  %133 = add i64 %132, -41416
  %134 = inttoptr i64 %133 to %"class.v8::internal::Isolate"*
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %134, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %136

136:                                              ; preds = %128, %126
  %137 = phi i64* [ %135, %128 ], [ %127, %126 ]
  %138 = getelementptr inbounds i64, i64* %137, i64 4
  %139 = load i64, i64* %138, align 8
  %140 = trunc i64 %76 to i32
  %141 = trunc i64 %139 to i32
  %142 = icmp eq i32 %140, %141
  br i1 %142, label %143, label %148

143:                                              ; preds = %136
  %144 = call i64* @_ZN2v88internal8JSRegExp3NewEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS_4base5FlagsINS1_4FlagEiEEj(%"class.v8::internal::Isolate"* %2, i64* %94, i32 %119, i32 0) #5
  %145 = icmp eq i64* %144, null
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %147 = select i1 %145, i64* %146, i64* %144
  br label %287

148:                                              ; preds = %136
  %149 = and i64 %76, -4294967296
  %150 = shl i64 %84, 33
  %151 = ashr exact i64 %150, 32
  %152 = and i64 %151, -4
  %153 = add nsw i64 %152, 31
  %154 = add i64 %153, %76
  %155 = inttoptr i64 %154 to i32*
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = zext i32 %156 to i64
  %158 = or i64 %149, %157
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %160 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %159, align 8
  %161 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %160, null
  br i1 %161, label %165, label %162

162:                                              ; preds = %148
  %163 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %160, i64 %158) #5
  %164 = load i64, i64* %163, align 8
  br label %175

165:                                              ; preds = %148
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %167 = icmp eq i64* %72, %79
  br i1 %167, label %168, label %170

168:                                              ; preds = %165
  %169 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %170

170:                                              ; preds = %168, %165
  %171 = phi i64* [ %169, %168 ], [ %79, %165 ]
  %172 = ptrtoint i64* %171 to i64
  %173 = add i64 %172, 8
  %174 = inttoptr i64 %173 to i64*
  store i64* %174, i64** %166, align 8
  store i64 %158, i64* %171, align 8
  br label %175

175:                                              ; preds = %170, %162
  %176 = phi i64 [ %164, %162 ], [ %158, %170 ]
  %177 = phi i64* [ %163, %162 ], [ %171, %170 ]
  %178 = and i64 %176, 1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %181, label %180, !prof !2

180:                                              ; preds = %175
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0)) #7
  unreachable

181:                                              ; preds = %175
  %182 = call i64* @_ZN2v88internal8JSRegExp3NewEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS_4base5FlagsINS1_4FlagEiEEj(%"class.v8::internal::Isolate"* %2, i64* %94, i32 %119, i32 0) #5
  %183 = icmp eq i64* %182, null
  br i1 %183, label %184, label %186

184:                                              ; preds = %181
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %287

186:                                              ; preds = %181
  %187 = load i64, i64* %177, align 8
  %188 = trunc i64 %187 to i32
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %194

190:                                              ; preds = %186
  %191 = load i64, i64* %1, align 8
  %192 = add i64 %191, %153
  %193 = inttoptr i64 %192 to i32*
  store atomic volatile i32 2, i32* %193 release, align 4
  br label %287

194:                                              ; preds = %186
  %195 = load i64, i64* %182, align 8
  %196 = and i64 %195, -4294967296
  %197 = add i64 %195, 11
  %198 = inttoptr i64 %197 to i32*
  %199 = load i32, i32* %198, align 4
  %200 = zext i32 %199 to i64
  %201 = or i64 %196, %200
  %202 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %159, align 8
  %203 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %202, null
  br i1 %203, label %206, label %204

204:                                              ; preds = %194
  %205 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %202, i64 %201) #5
  br label %218

206:                                              ; preds = %194
  %207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %208 = load i64*, i64** %207, align 8
  %209 = load i64*, i64** %71, align 8
  %210 = icmp eq i64* %208, %209
  br i1 %210, label %211, label %213

211:                                              ; preds = %206
  %212 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %213

213:                                              ; preds = %211, %206
  %214 = phi i64* [ %212, %211 ], [ %208, %206 ]
  %215 = ptrtoint i64* %214 to i64
  %216 = add i64 %215, 8
  %217 = inttoptr i64 %216 to i64*
  store i64* %217, i64** %207, align 8
  store i64 %201, i64* %214, align 8
  br label %218

218:                                              ; preds = %213, %204
  %219 = phi i64* [ %205, %204 ], [ %214, %213 ]
  %220 = load i64, i64* %182, align 8
  %221 = and i64 %220, -4294967296
  %222 = add i64 %220, 15
  %223 = inttoptr i64 %222 to i32*
  %224 = load i32, i32* %223, align 4
  %225 = zext i32 %224 to i64
  %226 = or i64 %221, %225
  %227 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %159, align 8
  %228 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %227, null
  br i1 %228, label %231, label %229

229:                                              ; preds = %218
  %230 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %227, i64 %226) #5
  br label %243

231:                                              ; preds = %218
  %232 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %233 = load i64*, i64** %232, align 8
  %234 = load i64*, i64** %71, align 8
  %235 = icmp eq i64* %233, %234
  br i1 %235, label %236, label %238

236:                                              ; preds = %231
  %237 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %238

238:                                              ; preds = %236, %231
  %239 = phi i64* [ %237, %236 ], [ %233, %231 ]
  %240 = ptrtoint i64* %239 to i64
  %241 = add i64 %240, 8
  %242 = inttoptr i64 %241 to i64*
  store i64* %242, i64** %232, align 8
  store i64 %226, i64* %239, align 8
  br label %243

243:                                              ; preds = %238, %229
  %244 = phi i64* [ %230, %229 ], [ %239, %238 ]
  %245 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %246 = load i64, i64* %182, align 8
  %247 = and i64 %246, -4294967296
  %248 = add i64 %246, 19
  %249 = inttoptr i64 %248 to i32*
  %250 = load i32, i32* %249, align 4
  %251 = zext i32 %250 to i64
  %252 = or i64 %247, %251
  %253 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE31NewRegExpBoilerplateDescriptionENS0_6HandleINS0_10FixedArrayEEENS4_INS0_6StringEEENS0_3SmiE(%"class.v8::internal::FactoryBase"* %245, i64* %219, i64* %244, i64 %252) #5
  %254 = load i64, i64* %1, align 8
  %255 = load i64, i64* %253, align 8
  %256 = add i64 %254, %153
  %257 = inttoptr i64 %256 to i32*
  %258 = trunc i64 %255 to i32
  store atomic volatile i32 %258, i32* %257 release, align 4
  %259 = and i64 %255, 1
  %260 = icmp ne i64 %259, 0
  %261 = icmp ne i32 %258, 3
  %262 = and i1 %261, %260
  br i1 %262, label %263, label %287

263:                                              ; preds = %243
  %264 = and i64 %254, -262144
  %265 = or i64 %264, 8
  %266 = inttoptr i64 %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = and i64 %267, 262144
  %269 = icmp eq i64 %268, 0
  %270 = and i64 %255, -3
  br i1 %269, label %275, label %271

271:                                              ; preds = %263
  %272 = or i64 %264, 16
  %273 = inttoptr i64 %272 to %"class.v8::internal::Heap"**
  %274 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %273, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %274, i64 %254, i64 %256, i64 %270) #5
  br label %275

275:                                              ; preds = %263, %271
  %276 = and i64 %255, -262144
  %277 = or i64 %276, 8
  %278 = inttoptr i64 %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = and i64 %279, 24
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %287, label %282

282:                                              ; preds = %275
  %283 = load i64, i64* %266, align 8
  %284 = and i64 %283, 24
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %282
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %254, i64 %256, i64 %270) #5
  br label %287

287:                                              ; preds = %286, %282, %275, %243, %190, %184, %143
  %288 = phi i64* [ %182, %190 ], [ %185, %184 ], [ %182, %275 ], [ %182, %282 ], [ %182, %286 ], [ %147, %143 ], [ %182, %243 ]
  %289 = load i64, i64* %288, align 8
  %290 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %290, label %303, label %291

291:                                              ; preds = %287
  %292 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %68, i64 0, i32 0
  %293 = load i64*, i64** %292, align 8
  store i64 %70, i64* %69, align 8
  %294 = load i32, i32* %73, align 8
  %295 = add nsw i32 %294, -1
  store i32 %295, i32* %73, align 8
  %296 = load i64*, i64** %71, align 8
  %297 = icmp eq i64* %296, %72
  br i1 %297, label %300, label %298

298:                                              ; preds = %291
  store i64* %72, i64** %71, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %299 = load i64*, i64** %292, align 8
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i64* [ %299, %298 ], [ %79, %291 ]
  %302 = phi i64* [ %72, %298 ], [ %293, %291 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %301, i64* %302) #5
  br label %303

303:                                              ; preds = %287, %300
  %304 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %305 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %304, null
  br i1 %305, label %322, label %306

306:                                              ; preds = %303
  %307 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %308 = load i8*, i8** %307, align 8
  %309 = load atomic i8, i8* %308 monotonic, align 1
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %322, label %311

311:                                              ; preds = %306
  %312 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %313 = load i8*, i8** %307, align 8
  %314 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %315 = load i8*, i8** %314, align 8
  %316 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %317 = load i64, i64* %316, align 8
  %318 = bitcast %"class.v8::TracingController"* %312 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %319 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %318, align 8
  %320 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %319, i64 5
  %321 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %320, align 8
  call void %321(%"class.v8::TracingController"* %312, i8* %313, i8* %315, i64 %317) #5
  br label %322

322:                                              ; preds = %303, %306, %311
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #5
  %323 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %324 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %323, align 8
  %325 = icmp eq %"class.v8::internal::RuntimeCallStats"* %324, null
  br i1 %325, label %328, label %326, !prof !2

326:                                              ; preds = %322
  %327 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %324, %"class.v8::internal::RuntimeCallTimer"* %327) #5
  br label %328

328:                                              ; preds = %322, %326
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #5
  ret i64 %289
}

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #3

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.assume(i1) #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_129AllocationSiteCreationContext13EnterNewScopeEv(%"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  %5 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %0, i64 0, i32 0, i32 0
  %6 = bitcast %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %0 to %"class.v8::internal::Factory"**
  %7 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %6, align 8
  br i1 %4, label %8, label %46

8:                                                ; preds = %1
  %9 = tail call i64* @_ZN2v88internal7Factory17NewAllocationSiteEb(%"class.v8::internal::Factory"* %7, i1 zeroext true) #5
  store i64* %9, i64** %2, align 8
  %10 = load i64, i64* %9, align 8
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %8
  %18 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %11) #5
  br label %19

19:                                               ; preds = %8, %17
  %20 = phi i64* [ %18, %17 ], [ %13, %8 ]
  %21 = ptrtoint i64* %20 to i64
  %22 = add i64 %21, 8
  %23 = inttoptr i64 %22 to i64*
  store i64* %23, i64** %12, align 8
  store i64 %10, i64* %20, align 8
  %24 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %20, i64** %24, align 8
  %25 = load i64*, i64** %2, align 8
  %26 = load i64, i64* %25, align 8
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 31, i32 4
  %29 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %28, align 8
  %30 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %19
  %32 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %29, i64 %26) #5
  br label %83

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 31, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 31, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %35, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %27) #5
  br label %41

41:                                               ; preds = %39, %33
  %42 = phi i64* [ %40, %39 ], [ %35, %33 ]
  %43 = ptrtoint i64* %42 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  store i64* %45, i64** %34, align 8
  store i64 %26, i64* %42, align 8
  br label %83

46:                                               ; preds = %1
  %47 = tail call i64* @_ZN2v88internal7Factory17NewAllocationSiteEb(%"class.v8::internal::Factory"* %7, i1 zeroext false) #5
  %48 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = load i64, i64* %47, align 8
  %52 = add i64 %50, 7
  %53 = inttoptr i64 %52 to i32*
  %54 = trunc i64 %51 to i32
  store atomic volatile i32 %54, i32* %53 monotonic, align 4
  %55 = and i64 %51, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %80, label %57

57:                                               ; preds = %46
  %58 = and i64 %50, -262144
  %59 = or i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 262144
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %57
  %65 = or i64 %58, 16
  %66 = inttoptr i64 %65 to %"class.v8::internal::Heap"**
  %67 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %66, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %67, i64 %50, i64 %52, i64 %51) #5
  br label %68

68:                                               ; preds = %64, %57
  %69 = and i64 %51, -262144
  %70 = or i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 24
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %68
  %76 = load i64, i64* %60, align 8
  %77 = and i64 %76, 24
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %75
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %50, i64 %52, i64 %51) #5
  br label %80

80:                                               ; preds = %46, %68, %75, %79
  %81 = load i64, i64* %47, align 8
  %82 = load i64*, i64** %48, align 8
  store i64 %81, i64* %82, align 8
  br label %83

83:                                               ; preds = %41, %31, %80
  %84 = phi i64* [ %47, %80 ], [ %32, %31 ], [ %42, %41 ]
  ret i64* %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"*, i64*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Representation", align 1
  %4 = ptrtoint i64* %1 to i64
  %5 = getelementptr %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"*, %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"** %5, align 8
  %7 = getelementptr %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext", %"class.v8::internal::(anonymous namespace)::DeprecationUpdateContext"* %6, i64 0, i32 0
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 6, i32 1, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %8) #5
  br label %680

19:                                               ; preds = %12, %2
  %20 = load i64, i64* %1, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %20, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i64 %22, 4294967295
  %27 = icmp eq i64 %26, 0
  tail call void @llvm.assume(i1 %27) #5
  %28 = zext i32 %25 to i64
  %29 = or i64 %22, %28
  %30 = add i64 %29, 11
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 acquire, align 4
  %33 = and i32 %32, 16777216
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %19
  tail call void @_ZN2v88internal8JSObject15MigrateInstanceEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %8, i64* %1) #5
  br label %36

36:                                               ; preds = %19, %35
  br i1 %11, label %680, label %37

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31
  %39 = bitcast %"struct.v8::internal::HandleScopeData"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %43, align 8
  %46 = load i64, i64* %1, align 8
  %47 = load i64, i64* %21, align 8
  %48 = add i64 %46, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i64 %47, 4294967295
  %52 = icmp eq i64 %51, 0
  tail call void @llvm.assume(i1 %52) #5
  %53 = zext i32 %50 to i64
  %54 = or i64 %47, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = icmp eq i16 %57, 1085
  %59 = inttoptr i64 %40 to i64*
  br i1 %58, label %434, label %60

60:                                               ; preds = %37
  %61 = load atomic i32, i32* %49 monotonic, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %47, %62
  %64 = add i64 %63, 11
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2097152
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %295

69:                                               ; preds = %60
  %70 = load atomic i32, i32* %49 monotonic, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %47, %71
  %73 = add i64 %72, 23
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %47, %76
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %79 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %78, align 8
  %80 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %69
  %82 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %79, i64 %77) #5
  br label %93

83:                                               ; preds = %69
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %85 = icmp eq i64* %42, %59
  br i1 %85, label %86, label %88

86:                                               ; preds = %83
  %87 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %88

88:                                               ; preds = %86, %83
  %89 = phi i64* [ %87, %86 ], [ %59, %83 ]
  %90 = ptrtoint i64* %89 to i64
  %91 = add i64 %90, 8
  %92 = inttoptr i64 %91 to i64*
  store i64* %92, i64** %84, align 8
  store i64 %77, i64* %89, align 8
  br label %93

93:                                               ; preds = %81, %88
  %94 = phi i64* [ %82, %81 ], [ %89, %88 ]
  %95 = load i64, i64* %1, align 8
  %96 = load i64, i64* %21, align 8
  %97 = add i64 %95, -1
  %98 = inttoptr i64 %97 to i32*
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i64 %96, 4294967295
  %101 = icmp eq i64 %100, 0
  tail call void @llvm.assume(i1 %101) #5
  %102 = zext i32 %99 to i64
  %103 = or i64 %96, %102
  %104 = add i64 %103, 11
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 acquire, align 4
  %107 = lshr i32 %106, 10
  %108 = and i32 %107, 1023
  %109 = zext i32 %108 to i64
  %110 = icmp eq i32 %108, 0
  br i1 %110, label %417, label %111

111:                                              ; preds = %93
  %112 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %3, i64 0, i32 0
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  br label %114

114:                                              ; preds = %111, %292
  %115 = phi i64 [ 0, %111 ], [ %293, %292 ]
  %116 = load i64, i64* %94, align 8
  %117 = mul nuw nsw i64 %115, 51539607552
  %118 = add nuw nsw i64 %117, 68719476736
  %119 = lshr exact i64 %118, 32
  %120 = or i64 %119, 3
  %121 = add i64 %116, %120
  %122 = inttoptr i64 %121 to i32*
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = ashr i32 %123, 1
  %125 = load i64, i64* %1, align 8
  %126 = load i64, i64* %21, align 8
  %127 = add i64 %125, -1
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i64 %126, 4294967295
  %131 = icmp eq i64 %130, 0
  tail call void @llvm.assume(i1 %131) #5
  %132 = zext i32 %129 to i64
  %133 = or i64 %126, %132
  %134 = lshr i32 %124, 19
  %135 = and i32 %134, 1023
  %136 = lshr i32 %124, 6
  %137 = trunc i32 %136 to i8
  %138 = and i8 %137, 7
  %139 = add i64 %133, 3
  %140 = inttoptr i64 %139 to i8*
  %141 = load atomic i8, i8* %140 monotonic, align 1
  %142 = zext i8 %141 to i32
  %143 = add i64 %133, 4
  %144 = inttoptr i64 %143 to i8*
  %145 = load atomic i8, i8* %144 monotonic, align 1
  %146 = zext i8 %145 to i32
  %147 = sub nsw i32 %142, %146
  %148 = icmp slt i32 %135, %147
  br i1 %148, label %149, label %157

149:                                              ; preds = %114
  %150 = load atomic i8, i8* %144 monotonic, align 1
  %151 = zext i8 %150 to i64
  %152 = shl nuw nsw i64 %151, 28
  %153 = load atomic i8, i8* %144 monotonic, align 1
  %154 = zext i8 %153 to i32
  %155 = add nuw nsw i32 %135, %154
  %156 = shl nuw nsw i32 %155, 2
  br label %161

157:                                              ; preds = %114
  %158 = sub nsw i32 %135, %147
  %159 = shl nsw i32 %158, 2
  %160 = add nsw i32 %159, 8
  br label %161

161:                                              ; preds = %157, %149
  %162 = phi i32 [ %156, %149 ], [ %160, %157 ]
  %163 = phi i64 [ %152, %149 ], [ 536870912, %157 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %112) #5
  store i8 %138, i8* %112, align 1
  %164 = icmp ult i8 %138, 5
  br i1 %164, label %167, label %165

165:                                              ; preds = %161
  %166 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %3) #5
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i8* %166) #5
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #7
  unreachable

167:                                              ; preds = %161
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %112) #5
  %168 = zext i1 %148 to i64
  %169 = shl nuw nsw i64 %168, 13
  %170 = sext i32 %162 to i64
  %171 = sext i32 %147 to i64
  %172 = shl nsw i64 %171, 16
  %173 = or i64 %169, %172
  %174 = or i64 %173, %170
  %175 = or i64 %174, %163
  %176 = and i64 %174, 8192
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %182, label %178

178:                                              ; preds = %167
  %179 = and i64 %170, 8191
  %180 = add i64 %127, %179
  %181 = inttoptr i64 %180 to i32*
  br label %243

182:                                              ; preds = %167
  %183 = add i64 %125, 3
  %184 = inttoptr i64 %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = zext i32 %185 to i64
  %187 = or i64 %126, %186
  %188 = and i64 %186, 1
  %189 = icmp eq i64 %188, 0
  %190 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %189, label %213, label %191

191:                                              ; preds = %182
  %192 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %190, null
  br i1 %192, label %199, label %193

193:                                              ; preds = %191
  %194 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %190, i64 0, i32 0, i32 1
  %195 = load i8, i8* %194, align 8, !range !6
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %199, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %190, i64 0, i32 1, i64 0
  br label %207

199:                                              ; preds = %193, %191
  %200 = and i64 %125, -262144
  %201 = or i64 %200, 16
  %202 = inttoptr i64 %201 to i64*
  %203 = load i64, i64* %202, align 16
  %204 = add i64 %203, -41416
  %205 = inttoptr i64 %204 to %"class.v8::internal::Isolate"*
  %206 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %205, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %207

207:                                              ; preds = %199, %197
  %208 = phi i64* [ %206, %199 ], [ %198, %197 ]
  %209 = getelementptr inbounds i64, i64* %208, i64 29
  %210 = load i64, i64* %209, align 8
  %211 = trunc i64 %210 to i32
  %212 = icmp eq i32 %185, %211
  br i1 %212, label %213, label %233

213:                                              ; preds = %207, %182
  %214 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %190, null
  br i1 %214, label %221, label %215

215:                                              ; preds = %213
  %216 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %190, i64 0, i32 0, i32 1
  %217 = load i8, i8* %216, align 8, !range !6
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %190, i64 0, i32 1, i64 0
  br label %229

221:                                              ; preds = %215, %213
  %222 = and i64 %125, -262144
  %223 = or i64 %222, 16
  %224 = inttoptr i64 %223 to i64*
  %225 = load i64, i64* %224, align 16
  %226 = add i64 %225, -41416
  %227 = inttoptr i64 %226 to %"class.v8::internal::Isolate"*
  %228 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %227, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %229

229:                                              ; preds = %221, %219
  %230 = phi i64* [ %228, %221 ], [ %220, %219 ]
  %231 = getelementptr inbounds i64, i64* %230, i64 106
  %232 = load i64, i64* %231, align 8
  br label %233

233:                                              ; preds = %229, %207
  %234 = phi i64 [ %232, %229 ], [ %187, %207 ]
  %235 = lshr i64 %175, 26
  %236 = and i64 %235, 124
  %237 = and i64 %170, 8188
  %238 = add nuw nsw i64 %237, 7
  %239 = sub nsw i64 %238, %236
  %240 = add i64 %239, %234
  %241 = inttoptr i64 %240 to i32*
  %242 = load atomic i32, i32* %241 monotonic, align 4
  br label %243

243:                                              ; preds = %178, %233
  %244 = phi i32* [ %181, %178 ], [ %241, %233 ]
  %245 = load i32, i32* %244, align 4
  %246 = zext i32 %245 to i64
  %247 = or i64 %126, %246
  %248 = and i64 %246, 1
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %292, label %250

250:                                              ; preds = %243
  %251 = add i64 %247, -1
  %252 = inttoptr i64 %251 to i32*
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = zext i32 %253 to i64
  %255 = or i64 %126, %254
  %256 = add i64 %255, 7
  %257 = inttoptr i64 %256 to i16*
  %258 = load atomic i16, i16* %257 monotonic, align 2
  %259 = icmp ugt i16 %258, 188
  br i1 %259, label %260, label %292

260:                                              ; preds = %250
  %261 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %78, align 8
  %262 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %261, null
  br i1 %262, label %268, label %263

263:                                              ; preds = %260
  %264 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %261, i64 %247) #5
  %265 = load i64, i64* %264, align 8
  %266 = add i64 %265, -1
  %267 = inttoptr i64 %266 to i32*
  br label %279

268:                                              ; preds = %260
  %269 = load i64*, i64** %113, align 8
  %270 = load i64*, i64** %41, align 8
  %271 = icmp eq i64* %269, %270
  br i1 %271, label %272, label %274

272:                                              ; preds = %268
  %273 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %274

274:                                              ; preds = %272, %268
  %275 = phi i64* [ %273, %272 ], [ %269, %268 ]
  %276 = ptrtoint i64* %275 to i64
  %277 = add i64 %276, 8
  %278 = inttoptr i64 %277 to i64*
  store i64* %278, i64** %113, align 8
  store i64 %247, i64* %275, align 8
  br label %279

279:                                              ; preds = %263, %274
  %280 = phi i32* [ %267, %263 ], [ %252, %274 ]
  %281 = phi i64 [ %265, %263 ], [ %247, %274 ]
  %282 = phi i64* [ %264, %263 ], [ %275, %274 ]
  %283 = and i64 %281, -4294967296
  %284 = load atomic i32, i32* %280 monotonic, align 4
  %285 = zext i32 %284 to i64
  %286 = or i64 %283, %285
  %287 = add i64 %286, 7
  %288 = inttoptr i64 %287 to i16*
  %289 = load atomic i16, i16* %288 monotonic, align 2
  %290 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %0, i64* %282) #5
  %291 = icmp eq i64* %290, null
  br i1 %291, label %665, label %292

292:                                              ; preds = %279, %243, %250
  %293 = add nuw nsw i64 %115, 1
  %294 = icmp eq i64 %293, %109
  br i1 %294, label %417, label %114

295:                                              ; preds = %60
  %296 = add i64 %46, 3
  %297 = inttoptr i64 %296 to i32*
  %298 = load i32, i32* %297, align 4
  %299 = zext i32 %298 to i64
  %300 = or i64 %47, %299
  %301 = and i64 %299, 1
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %324

303:                                              ; preds = %295
  %304 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %305 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %304, null
  br i1 %305, label %312, label %306

306:                                              ; preds = %303
  %307 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %304, i64 0, i32 0, i32 1
  %308 = load i8, i8* %307, align 8, !range !6
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %312, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %304, i64 0, i32 1, i64 0
  br label %320

312:                                              ; preds = %306, %303
  %313 = and i64 %46, -262144
  %314 = or i64 %313, 16
  %315 = inttoptr i64 %314 to i64*
  %316 = load i64, i64* %315, align 16
  %317 = add i64 %316, -41416
  %318 = inttoptr i64 %317 to %"class.v8::internal::Isolate"*
  %319 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %318, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %320

320:                                              ; preds = %312, %310
  %321 = phi i64* [ %319, %312 ], [ %311, %310 ]
  %322 = getelementptr inbounds i64, i64* %321, i64 115
  %323 = load i64, i64* %322, align 8
  br label %324

324:                                              ; preds = %295, %320
  %325 = phi i64 [ %323, %320 ], [ %300, %295 ]
  %326 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %327 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %326, align 8
  %328 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %327, null
  br i1 %328, label %332, label %329

329:                                              ; preds = %324
  %330 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %327, i64 %325) #5
  %331 = load i64, i64* %330, align 8
  br label %342

332:                                              ; preds = %324
  %333 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %334 = icmp eq i64* %42, %59
  br i1 %334, label %335, label %337

335:                                              ; preds = %332
  %336 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %337

337:                                              ; preds = %335, %332
  %338 = phi i64* [ %336, %335 ], [ %59, %332 ]
  %339 = ptrtoint i64* %338 to i64
  %340 = add i64 %339, 8
  %341 = inttoptr i64 %340 to i64*
  store i64* %341, i64** %333, align 8
  store i64 %325, i64* %338, align 8
  br label %342

342:                                              ; preds = %329, %337
  %343 = phi i64 [ %331, %329 ], [ %325, %337 ]
  %344 = phi i64* [ %330, %329 ], [ %338, %337 ]
  %345 = add i64 %343, 15
  %346 = inttoptr i64 %345 to i32*
  %347 = load atomic i32, i32* %346 monotonic, align 4
  %348 = ashr i32 %347, 1
  %349 = sext i32 %348 to i64
  %350 = icmp eq i32 %348, 0
  br i1 %350, label %417, label %351

351:                                              ; preds = %342
  %352 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  br label %353

353:                                              ; preds = %415, %351
  %354 = phi i64 [ %343, %351 ], [ %416, %415 ]
  %355 = phi i64 [ 0, %351 ], [ %413, %415 ]
  %356 = load i64, i64* %21, align 8
  %357 = mul i64 %355, 51539607552
  %358 = add i64 %357, 103079215104
  %359 = ashr exact i64 %358, 32
  %360 = add nsw i64 %359, 7
  %361 = add i64 %360, %354
  %362 = inttoptr i64 %361 to i32*
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i64 %356, 4294967295
  %365 = icmp eq i64 %364, 0
  tail call void @llvm.assume(i1 %365) #5
  %366 = zext i32 %363 to i64
  %367 = or i64 %356, %366
  %368 = and i64 %366, 1
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %412, label %370

370:                                              ; preds = %353
  %371 = add i64 %367, -1
  %372 = inttoptr i64 %371 to i32*
  %373 = load atomic i32, i32* %372 monotonic, align 4
  %374 = zext i32 %373 to i64
  %375 = or i64 %356, %374
  %376 = add i64 %375, 7
  %377 = inttoptr i64 %376 to i16*
  %378 = load atomic i16, i16* %377 monotonic, align 2
  %379 = icmp ugt i16 %378, 188
  br i1 %379, label %380, label %412

380:                                              ; preds = %370
  %381 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %326, align 8
  %382 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %381, null
  br i1 %382, label %388, label %383

383:                                              ; preds = %380
  %384 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %381, i64 %367) #5
  %385 = load i64, i64* %384, align 8
  %386 = add i64 %385, -1
  %387 = inttoptr i64 %386 to i32*
  br label %399

388:                                              ; preds = %380
  %389 = load i64*, i64** %352, align 8
  %390 = load i64*, i64** %41, align 8
  %391 = icmp eq i64* %389, %390
  br i1 %391, label %392, label %394

392:                                              ; preds = %388
  %393 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %394

394:                                              ; preds = %392, %388
  %395 = phi i64* [ %393, %392 ], [ %389, %388 ]
  %396 = ptrtoint i64* %395 to i64
  %397 = add i64 %396, 8
  %398 = inttoptr i64 %397 to i64*
  store i64* %398, i64** %352, align 8
  store i64 %367, i64* %395, align 8
  br label %399

399:                                              ; preds = %383, %394
  %400 = phi i32* [ %387, %383 ], [ %372, %394 ]
  %401 = phi i64 [ %385, %383 ], [ %367, %394 ]
  %402 = phi i64* [ %384, %383 ], [ %395, %394 ]
  %403 = and i64 %401, -4294967296
  %404 = load atomic i32, i32* %400 monotonic, align 4
  %405 = zext i32 %404 to i64
  %406 = or i64 %403, %405
  %407 = add i64 %406, 7
  %408 = inttoptr i64 %407 to i16*
  %409 = load atomic i16, i16* %408 monotonic, align 2
  %410 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %0, i64* %402) #5
  %411 = icmp eq i64* %410, null
  br i1 %411, label %665, label %412

412:                                              ; preds = %399, %353, %370
  %413 = add i64 %355, 1
  %414 = icmp eq i64 %413, %349
  br i1 %414, label %417, label %415

415:                                              ; preds = %412
  %416 = load i64, i64* %344, align 8
  br label %353

417:                                              ; preds = %412, %292, %342, %93
  %418 = load i64, i64* %1, align 8
  %419 = load i64, i64* %21, align 8
  %420 = add i64 %418, 7
  %421 = inttoptr i64 %420 to i32*
  %422 = load i32, i32* %421, align 4
  %423 = and i64 %419, 4294967295
  %424 = icmp eq i64 %423, 0
  tail call void @llvm.assume(i1 %424) #5
  %425 = zext i32 %422 to i64
  %426 = or i64 %419, %425
  %427 = add i64 %426, 3
  %428 = inttoptr i64 %427 to i32*
  %429 = load i32, i32* %428, align 4
  %430 = icmp ult i32 %429, 2
  br i1 %430, label %665, label %431

431:                                              ; preds = %417
  %432 = add i64 %418, -1
  %433 = inttoptr i64 %432 to i32*
  br label %434

434:                                              ; preds = %431, %37
  %435 = phi i32* [ %433, %431 ], [ %49, %37 ]
  %436 = phi i64 [ %419, %431 ], [ %47, %37 ]
  %437 = phi i64 [ %418, %431 ], [ %46, %37 ]
  %438 = load atomic i32, i32* %435 monotonic, align 4
  %439 = and i64 %436, 4294967295
  %440 = icmp eq i64 %439, 0
  tail call void @llvm.assume(i1 %440) #5
  %441 = zext i32 %438 to i64
  %442 = or i64 %436, %441
  %443 = add i64 %442, 10
  %444 = inttoptr i64 %443 to i8*
  %445 = load i8, i8* %444, align 1
  %446 = lshr i8 %445, 2
  switch i8 %446, label %665 [
    i8 2, label %447
    i8 10, label %447
    i8 8, label %447
    i8 6, label %447
    i8 11, label %447
    i8 9, label %447
    i8 7, label %447
    i8 3, label %447
    i8 12, label %563
    i8 13, label %662
    i8 14, label %662
    i8 15, label %663
    i8 16, label %663
    i8 17, label %664
    i8 18, label %664
    i8 19, label %664
    i8 20, label %664
    i8 21, label %664
    i8 22, label %664
    i8 23, label %664
    i8 24, label %664
    i8 25, label %664
    i8 26, label %664
    i8 27, label %664
    i8 28, label %664
    i8 29, label %664
    i8 30, label %664
    i8 31, label %664
    i8 32, label %664
    i8 33, label %664
    i8 34, label %664
    i8 35, label %664
    i8 36, label %664
    i8 37, label %664
    i8 38, label %664
  ]

447:                                              ; preds = %434, %434, %434, %434, %434, %434, %434, %434
  %448 = add i64 %437, 7
  %449 = inttoptr i64 %448 to i32*
  %450 = load i32, i32* %449, align 4
  %451 = zext i32 %450 to i64
  %452 = or i64 %436, %451
  %453 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %454 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %453, align 8
  %455 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %454, null
  br i1 %455, label %459, label %456

456:                                              ; preds = %447
  %457 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %454, i64 %452) #5
  %458 = load i64, i64* %457, align 8
  br label %471

459:                                              ; preds = %447
  %460 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %461 = load i64*, i64** %460, align 8
  %462 = load i64*, i64** %41, align 8
  %463 = icmp eq i64* %461, %462
  br i1 %463, label %464, label %466

464:                                              ; preds = %459
  %465 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %466

466:                                              ; preds = %464, %459
  %467 = phi i64* [ %465, %464 ], [ %461, %459 ]
  %468 = ptrtoint i64* %467 to i64
  %469 = add i64 %468, 8
  %470 = inttoptr i64 %469 to i64*
  store i64* %470, i64** %460, align 8
  store i64 %452, i64* %467, align 8
  br label %471

471:                                              ; preds = %456, %466
  %472 = phi i64 [ %458, %456 ], [ %452, %466 ]
  %473 = phi i64* [ %457, %456 ], [ %467, %466 ]
  %474 = load i64, i64* %21, align 8
  %475 = add i64 %472, -1
  %476 = inttoptr i64 %475 to i32*
  %477 = load atomic i32, i32* %476 monotonic, align 4
  %478 = and i64 %474, 4294967295
  %479 = icmp eq i64 %478, 0
  tail call void @llvm.assume(i1 %479) #5
  %480 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 13
  %481 = load i64, i64* %480, align 8
  %482 = trunc i64 %481 to i32
  %483 = icmp eq i32 %477, %482
  br i1 %483, label %665, label %484

484:                                              ; preds = %471
  %485 = add i64 %472, 3
  %486 = inttoptr i64 %485 to i32*
  %487 = load i32, i32* %486, align 4
  %488 = icmp sgt i32 %487, 1
  br i1 %488, label %489, label %665

489:                                              ; preds = %484
  %490 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  br label %491

491:                                              ; preds = %561, %489
  %492 = phi i64 [ %472, %489 ], [ %553, %561 ]
  %493 = phi i64 [ %474, %489 ], [ %562, %561 ]
  %494 = phi i64 [ 0, %489 ], [ %554, %561 ]
  %495 = trunc i64 %494 to i32
  %496 = shl i32 %495, 2
  %497 = sext i32 %496 to i64
  %498 = add i64 %492, 7
  %499 = add i64 %498, %497
  %500 = inttoptr i64 %499 to i32*
  %501 = load atomic i32, i32* %500 monotonic, align 4
  %502 = and i64 %493, 4294967295
  %503 = icmp eq i64 %502, 0
  tail call void @llvm.assume(i1 %503) #5
  %504 = zext i32 %501 to i64
  %505 = or i64 %493, %504
  %506 = and i64 %504, 1
  %507 = icmp eq i64 %506, 0
  br i1 %507, label %552, label %508

508:                                              ; preds = %491
  %509 = add i64 %505, -1
  %510 = inttoptr i64 %509 to i32*
  %511 = load atomic i32, i32* %510 monotonic, align 4
  %512 = zext i32 %511 to i64
  %513 = or i64 %493, %512
  %514 = add i64 %513, 7
  %515 = inttoptr i64 %514 to i16*
  %516 = load atomic i16, i16* %515 monotonic, align 2
  %517 = icmp ugt i16 %516, 188
  br i1 %517, label %518, label %552

518:                                              ; preds = %508
  %519 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %453, align 8
  %520 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %519, null
  br i1 %520, label %526, label %521

521:                                              ; preds = %518
  %522 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %519, i64 %505) #5
  %523 = load i64, i64* %522, align 8
  %524 = add i64 %523, -1
  %525 = inttoptr i64 %524 to i32*
  br label %537

526:                                              ; preds = %518
  %527 = load i64*, i64** %490, align 8
  %528 = load i64*, i64** %41, align 8
  %529 = icmp eq i64* %527, %528
  br i1 %529, label %530, label %532

530:                                              ; preds = %526
  %531 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %532

532:                                              ; preds = %530, %526
  %533 = phi i64* [ %531, %530 ], [ %527, %526 ]
  %534 = ptrtoint i64* %533 to i64
  %535 = add i64 %534, 8
  %536 = inttoptr i64 %535 to i64*
  store i64* %536, i64** %490, align 8
  store i64 %505, i64* %533, align 8
  br label %537

537:                                              ; preds = %521, %532
  %538 = phi i32* [ %525, %521 ], [ %510, %532 ]
  %539 = phi i64 [ %523, %521 ], [ %505, %532 ]
  %540 = phi i64* [ %522, %521 ], [ %533, %532 ]
  %541 = and i64 %539, -4294967296
  %542 = load atomic i32, i32* %538 monotonic, align 4
  %543 = zext i32 %542 to i64
  %544 = or i64 %541, %543
  %545 = add i64 %544, 7
  %546 = inttoptr i64 %545 to i16*
  %547 = load atomic i16, i16* %546 monotonic, align 2
  %548 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %0, i64* %540) #5
  %549 = icmp eq i64* %548, null
  br i1 %549, label %665, label %550

550:                                              ; preds = %537
  %551 = load i64, i64* %473, align 8
  br label %552

552:                                              ; preds = %550, %491, %508
  %553 = phi i64 [ %551, %550 ], [ %492, %491 ], [ %492, %508 ]
  %554 = add nuw nsw i64 %494, 1
  %555 = add i64 %553, 3
  %556 = inttoptr i64 %555 to i32*
  %557 = load i32, i32* %556, align 4
  %558 = ashr i32 %557, 1
  %559 = sext i32 %558 to i64
  %560 = icmp slt i64 %554, %559
  br i1 %560, label %561, label %665

561:                                              ; preds = %552
  %562 = load i64, i64* %21, align 8
  br label %491

563:                                              ; preds = %434
  %564 = add i64 %437, 7
  %565 = inttoptr i64 %564 to i32*
  %566 = load i32, i32* %565, align 4
  %567 = zext i32 %566 to i64
  %568 = or i64 %436, %567
  %569 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %570 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %569, align 8
  %571 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %570, null
  br i1 %571, label %575, label %572

572:                                              ; preds = %563
  %573 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %570, i64 %568) #5
  %574 = load i64, i64* %573, align 8
  br label %587

575:                                              ; preds = %563
  %576 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %577 = load i64*, i64** %576, align 8
  %578 = load i64*, i64** %41, align 8
  %579 = icmp eq i64* %577, %578
  br i1 %579, label %580, label %582

580:                                              ; preds = %575
  %581 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %582

582:                                              ; preds = %580, %575
  %583 = phi i64* [ %581, %580 ], [ %577, %575 ]
  %584 = ptrtoint i64* %583 to i64
  %585 = add i64 %584, 8
  %586 = inttoptr i64 %585 to i64*
  store i64* %586, i64** %576, align 8
  store i64 %568, i64* %583, align 8
  br label %587

587:                                              ; preds = %572, %582
  %588 = phi i64 [ %574, %572 ], [ %568, %582 ]
  %589 = phi i64* [ %573, %572 ], [ %583, %582 ]
  %590 = add i64 %588, 15
  %591 = inttoptr i64 %590 to i32*
  %592 = load atomic i32, i32* %591 monotonic, align 4
  %593 = ashr i32 %592, 1
  %594 = sext i32 %593 to i64
  %595 = icmp eq i32 %593, 0
  br i1 %595, label %665, label %596

596:                                              ; preds = %587
  %597 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  br label %598

598:                                              ; preds = %660, %596
  %599 = phi i64 [ %588, %596 ], [ %661, %660 ]
  %600 = phi i64 [ 0, %596 ], [ %658, %660 ]
  %601 = load i64, i64* %21, align 8
  %602 = mul i64 %600, 51539607552
  %603 = add i64 %602, 85899345920
  %604 = ashr exact i64 %603, 32
  %605 = add nsw i64 %604, 7
  %606 = add i64 %605, %599
  %607 = inttoptr i64 %606 to i32*
  %608 = load atomic i32, i32* %607 monotonic, align 4
  %609 = and i64 %601, 4294967295
  %610 = icmp eq i64 %609, 0
  tail call void @llvm.assume(i1 %610) #5
  %611 = zext i32 %608 to i64
  %612 = or i64 %601, %611
  %613 = and i64 %611, 1
  %614 = icmp eq i64 %613, 0
  br i1 %614, label %657, label %615

615:                                              ; preds = %598
  %616 = add i64 %612, -1
  %617 = inttoptr i64 %616 to i32*
  %618 = load atomic i32, i32* %617 monotonic, align 4
  %619 = zext i32 %618 to i64
  %620 = or i64 %601, %619
  %621 = add i64 %620, 7
  %622 = inttoptr i64 %621 to i16*
  %623 = load atomic i16, i16* %622 monotonic, align 2
  %624 = icmp ugt i16 %623, 188
  br i1 %624, label %625, label %657

625:                                              ; preds = %615
  %626 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %569, align 8
  %627 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %626, null
  br i1 %627, label %633, label %628

628:                                              ; preds = %625
  %629 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %626, i64 %612) #5
  %630 = load i64, i64* %629, align 8
  %631 = add i64 %630, -1
  %632 = inttoptr i64 %631 to i32*
  br label %644

633:                                              ; preds = %625
  %634 = load i64*, i64** %597, align 8
  %635 = load i64*, i64** %41, align 8
  %636 = icmp eq i64* %634, %635
  br i1 %636, label %637, label %639

637:                                              ; preds = %633
  %638 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %639

639:                                              ; preds = %637, %633
  %640 = phi i64* [ %638, %637 ], [ %634, %633 ]
  %641 = ptrtoint i64* %640 to i64
  %642 = add i64 %641, 8
  %643 = inttoptr i64 %642 to i64*
  store i64* %643, i64** %597, align 8
  store i64 %612, i64* %640, align 8
  br label %644

644:                                              ; preds = %628, %639
  %645 = phi i32* [ %632, %628 ], [ %617, %639 ]
  %646 = phi i64 [ %630, %628 ], [ %612, %639 ]
  %647 = phi i64* [ %629, %628 ], [ %640, %639 ]
  %648 = and i64 %646, -4294967296
  %649 = load atomic i32, i32* %645 monotonic, align 4
  %650 = zext i32 %649 to i64
  %651 = or i64 %648, %650
  %652 = add i64 %651, 7
  %653 = inttoptr i64 %652 to i16*
  %654 = load atomic i16, i16* %653 monotonic, align 2
  %655 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_24DeprecationUpdateContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor"* %0, i64* %647) #5
  %656 = icmp eq i64* %655, null
  br i1 %656, label %665, label %657

657:                                              ; preds = %644, %598, %615
  %658 = add i64 %600, 1
  %659 = icmp eq i64 %658, %594
  br i1 %659, label %665, label %660

660:                                              ; preds = %657
  %661 = load i64, i64* %589, align 8
  br label %598

662:                                              ; preds = %434, %434
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0)) #7
  unreachable

663:                                              ; preds = %434, %434
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #7
  unreachable

664:                                              ; preds = %434, %434, %434, %434, %434, %434, %434, %434, %434, %434, %434, %434, %434, %434, %434, %434, %434, %434, %434, %434, %434, %434
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #7
  unreachable

665:                                              ; preds = %399, %279, %657, %644, %537, %552, %587, %484, %471, %434, %417
  %666 = phi i64 [ %4, %417 ], [ %4, %434 ], [ %4, %471 ], [ %4, %484 ], [ %4, %587 ], [ 0, %537 ], [ %4, %552 ], [ %4, %657 ], [ 0, %644 ], [ 0, %279 ], [ 0, %399 ]
  %667 = icmp eq %"class.v8::internal::Isolate"* %8, null
  br i1 %667, label %680, label %668

668:                                              ; preds = %665
  %669 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %38, i64 0, i32 0
  %670 = load i64*, i64** %669, align 8
  store i64 %40, i64* %39, align 8
  %671 = load i32, i32* %43, align 8
  %672 = add nsw i32 %671, -1
  store i32 %672, i32* %43, align 8
  %673 = load i64*, i64** %41, align 8
  %674 = icmp eq i64* %673, %42
  br i1 %674, label %677, label %675

675:                                              ; preds = %668
  store i64* %42, i64** %41, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %8) #5
  %676 = load i64*, i64** %669, align 8
  br label %677

677:                                              ; preds = %675, %668
  %678 = phi i64* [ %676, %675 ], [ %59, %668 ]
  %679 = phi i64* [ %42, %675 ], [ %670, %668 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %678, i64* %679) #5
  br label %680

680:                                              ; preds = %36, %665, %677, %17
  %681 = phi i64 [ 0, %17 ], [ %4, %36 ], [ %666, %665 ], [ %666, %677 ]
  %682 = inttoptr i64 %681 to i64*
  ret i64* %682
}

declare i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal8JSObject15MigrateInstanceEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory30CopyJSObjectWithAllocationSiteENS0_6HandleINS0_8JSObjectEEENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"*, i64*, i64*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8JSObject17FastPropertyAtPutENS0_10FieldIndexENS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::JSObject"*, i64, i64, i32) local_unnamed_addr #6 comdat align 2 {
  %5 = and i64 %1, 8192
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %51, label %7

7:                                                ; preds = %4
  %8 = and i64 %1, 8191
  %9 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %8, -1
  %12 = add i64 %10, %11
  %13 = inttoptr i64 %12 to i32*
  %14 = trunc i64 %2 to i32
  store atomic volatile i32 %14, i32* %13 monotonic, align 4
  switch i32 %3, label %31 [
    i32 0, label %140
    i32 4, label %15
  ]

15:                                               ; preds = %7
  %16 = load i64, i64* %9, align 8
  %17 = add i64 %16, %11
  %18 = and i64 %2, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %140, label %20

20:                                               ; preds = %15
  %21 = and i64 %16, -262144
  %22 = or i64 %21, 8
  %23 = inttoptr i64 %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 262144
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %20
  %28 = or i64 %21, 16
  %29 = inttoptr i64 %28 to %"class.v8::internal::Heap"**
  %30 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %29, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %30, i64 %16, i64 %17, i64 %2) #5
  br label %34

31:                                               ; preds = %7
  %32 = and i64 %2, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %140, label %34

34:                                               ; preds = %20, %27, %31
  %35 = load i64, i64* %9, align 8
  %36 = add i64 %35, %11
  %37 = and i64 %2, -262144
  %38 = or i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 24
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %140, label %43

43:                                               ; preds = %34
  %44 = and i64 %35, -262144
  %45 = or i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 24
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %140

50:                                               ; preds = %43
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %35, i64 %36, i64 %2) #5
  br label %140

51:                                               ; preds = %4
  %52 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, -4294967296
  %55 = add i64 %53, 3
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %54, %58
  %60 = and i64 %58, 1
  %61 = icmp eq i64 %60, 0
  %62 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %61, label %85, label %63

63:                                               ; preds = %51
  %64 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %62, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 0, i32 1
  %67 = load i8, i8* %66, align 8, !range !6
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 1, i64 0
  br label %79

71:                                               ; preds = %65, %63
  %72 = and i64 %53, -262144
  %73 = or i64 %72, 16
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 16
  %76 = add i64 %75, -41416
  %77 = inttoptr i64 %76 to %"class.v8::internal::Isolate"*
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %77, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %79

79:                                               ; preds = %71, %69
  %80 = phi i64* [ %78, %71 ], [ %70, %69 ]
  %81 = getelementptr inbounds i64, i64* %80, i64 29
  %82 = load i64, i64* %81, align 8
  %83 = trunc i64 %82 to i32
  %84 = icmp eq i32 %57, %83
  br i1 %84, label %85, label %105

85:                                               ; preds = %79, %51
  %86 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %62, null
  br i1 %86, label %93, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 0, i32 1
  %89 = load i8, i8* %88, align 8, !range !6
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 1, i64 0
  br label %101

93:                                               ; preds = %87, %85
  %94 = and i64 %53, -262144
  %95 = or i64 %94, 16
  %96 = inttoptr i64 %95 to i64*
  %97 = load i64, i64* %96, align 16
  %98 = add i64 %97, -41416
  %99 = inttoptr i64 %98 to %"class.v8::internal::Isolate"*
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %101

101:                                              ; preds = %93, %91
  %102 = phi i64* [ %100, %93 ], [ %92, %91 ]
  %103 = getelementptr inbounds i64, i64* %102, i64 106
  %104 = load i64, i64* %103, align 8
  br label %105

105:                                              ; preds = %79, %101
  %106 = phi i64 [ %104, %101 ], [ %59, %79 ]
  %107 = lshr i64 %1, 26
  %108 = and i64 %107, 124
  %109 = and i64 %1, 8188
  %110 = add nuw nsw i64 %109, 7
  %111 = sub nsw i64 %110, %108
  %112 = add i64 %111, %106
  %113 = inttoptr i64 %112 to i32*
  %114 = trunc i64 %2 to i32
  store atomic volatile i32 %114, i32* %113 monotonic, align 4
  %115 = and i64 %2, 1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %140, label %117

117:                                              ; preds = %105
  %118 = and i64 %106, -262144
  %119 = or i64 %118, 8
  %120 = inttoptr i64 %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = and i64 %121, 262144
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %128, label %124

124:                                              ; preds = %117
  %125 = or i64 %118, 16
  %126 = inttoptr i64 %125 to %"class.v8::internal::Heap"**
  %127 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %126, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %127, i64 %106, i64 %112, i64 %2) #5
  br label %128

128:                                              ; preds = %124, %117
  %129 = and i64 %2, -262144
  %130 = or i64 %129, 8
  %131 = inttoptr i64 %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = and i64 %132, 24
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %140, label %135

135:                                              ; preds = %128
  %136 = load i64, i64* %120, align 8
  %137 = and i64 %136, 24
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %135
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %106, i64 %112, i64 %2) #5
  br label %140

140:                                              ; preds = %139, %135, %128, %105, %50, %43, %34, %31, %15, %7
  ret void
}

declare i64 @_ZN2v88internal23GetCurrentStackPositionEv() local_unnamed_addr #3

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp ult i8 %3, 6
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #7
  unreachable

6:                                                ; preds = %1
  %7 = sext i8 %3 to i64
  %8 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZNK2v88internal14Representation8MnemonicEv, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  ret i8* %9
}

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #3

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_119CreateObjectLiteralEPNS0_7IsolateENS0_6HandleINS0_28ObjectBoilerplateDescriptionEEEiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i32, i8 zeroext) unnamed_addr #0 {
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 19
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %7, %16
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %19 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %20 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %4
  %22 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %19, i64 %17) #5
  br label %36

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %31

31:                                               ; preds = %29, %23
  %32 = phi i64* [ %30, %29 ], [ %25, %23 ]
  %33 = ptrtoint i64* %32 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  store i64* %35, i64** %24, align 8
  store i64 %17, i64* %32, align 8
  br label %36

36:                                               ; preds = %21, %31
  %37 = phi i64* [ %22, %21 ], [ %32, %31 ]
  %38 = and i32 %2, 8
  %39 = icmp eq i32 %38, 0
  %40 = and i32 %2, 16
  %41 = icmp ne i32 %40, 0
  %42 = load i64, i64* %1, align 8
  %43 = add i64 %42, 3
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %58

48:                                               ; preds = %36
  %49 = lshr i32 %45, 1
  %50 = shl i32 %49, 2
  %51 = add i32 %50, -4
  %52 = sext i32 %51 to i64
  %53 = add i64 %42, 7
  %54 = add i64 %53, %52
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = ashr i32 %56, 1
  br label %62

58:                                               ; preds = %36
  %59 = ashr i32 %45, 1
  %60 = add nsw i32 %59, -1
  %61 = sdiv i32 %60, 2
  br label %62

62:                                               ; preds = %48, %58
  %63 = phi i32 [ %57, %48 ], [ %61, %58 ]
  br i1 %41, label %64, label %89

64:                                               ; preds = %62
  %65 = load i64, i64* %37, align 8
  %66 = and i64 %65, -4294967296
  %67 = add i64 %65, 723
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %66, %70
  %72 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %73 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %64
  %75 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %72, i64 %71) #5
  br label %92

76:                                               ; preds = %64
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %80 = load i64*, i64** %79, align 8
  %81 = icmp eq i64* %78, %80
  br i1 %81, label %82, label %84

82:                                               ; preds = %76
  %83 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %84

84:                                               ; preds = %82, %76
  %85 = phi i64* [ %83, %82 ], [ %78, %76 ]
  %86 = ptrtoint i64* %85 to i64
  %87 = add i64 %86, 8
  %88 = inttoptr i64 %87 to i64*
  store i64* %88, i64** %77, align 8
  store i64 %71, i64* %85, align 8
  br label %92

89:                                               ; preds = %62
  %90 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %91 = tail call i64* @_ZN2v88internal7Factory25ObjectLiteralMapFromCacheENS0_6HandleINS0_13NativeContextEEEi(%"class.v8::internal::Factory"* %90, i64* %37, i32 %63) #5
  br label %92

92:                                               ; preds = %84, %74, %89
  %93 = phi i64* [ %91, %89 ], [ %75, %74 ], [ %85, %84 ]
  %94 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %95 = load i64, i64* %93, align 8
  %96 = add i64 %95, 11
  %97 = inttoptr i64 %96 to i32*
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2097152
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %92
  %102 = tail call i64* @_ZN2v88internal7Factory22NewSlowJSObjectFromMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %94, i64* %93, i32 %63, i8 zeroext %3, i64* null) #5
  br label %105

103:                                              ; preds = %92
  %104 = tail call i64* @_ZN2v88internal7Factory18NewJSObjectFromMapENS0_6HandleINS0_3MapEEENS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %94, i64* %93, i8 zeroext %3, i64* null) #5
  br label %105

105:                                              ; preds = %101, %103
  %106 = phi i64* [ %102, %101 ], [ %104, %103 ]
  br i1 %39, label %107, label %109

107:                                              ; preds = %105
  %108 = tail call i64* @_ZN2v88internal8JSObject17NormalizeElementsENS0_6HandleIS1_EE(i64* %106) #5
  br label %109

109:                                              ; preds = %105, %107
  %110 = load i64, i64* %1, align 8
  %111 = add i64 %110, 3
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = ashr i32 %113, 1
  %115 = add nsw i32 %114, -1
  %116 = icmp sgt i32 %115, 1
  br i1 %116, label %117, label %124

117:                                              ; preds = %109
  %118 = lshr i32 %115, 1
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 3
  %123 = zext i32 %118 to i64
  br label %132

124:                                              ; preds = %305, %109
  %125 = load i64, i64* %93, align 8
  %126 = add i64 %125, 11
  %127 = inttoptr i64 %126 to i32*
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2097152
  %130 = icmp eq i32 %129, 0
  %131 = or i1 %41, %130
  br i1 %131, label %331, label %310

132:                                              ; preds = %308, %117
  %133 = phi i64 [ %110, %117 ], [ %309, %308 ]
  %134 = phi i64 [ 0, %117 ], [ %306, %308 ]
  %135 = load i64, i64* %119, align 8
  %136 = trunc i64 %134 to i32
  %137 = shl i32 %136, 3
  %138 = or i32 %137, 4
  %139 = sext i32 %138 to i64
  %140 = add nsw i64 %139, 7
  %141 = add i64 %140, %133
  %142 = inttoptr i64 %141 to i32*
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i64 %135, 4294967295
  %145 = icmp eq i64 %144, 0
  tail call void @llvm.assume(i1 %145) #5
  %146 = zext i32 %143 to i64
  %147 = or i64 %135, %146
  %148 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %149 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %132
  %151 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %148, i64 %147) #5
  br label %163

152:                                              ; preds = %132
  %153 = load i64*, i64** %120, align 8
  %154 = load i64*, i64** %121, align 8
  %155 = icmp eq i64* %153, %154
  br i1 %155, label %156, label %158

156:                                              ; preds = %152
  %157 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %158

158:                                              ; preds = %156, %152
  %159 = phi i64* [ %157, %156 ], [ %153, %152 ]
  %160 = ptrtoint i64* %159 to i64
  %161 = add i64 %160, 8
  %162 = inttoptr i64 %161 to i64*
  store i64* %162, i64** %120, align 8
  store i64 %147, i64* %159, align 8
  br label %163

163:                                              ; preds = %150, %158
  %164 = phi i64* [ %151, %150 ], [ %159, %158 ]
  %165 = load i64, i64* %1, align 8
  %166 = load i64, i64* %119, align 8
  %167 = add i32 %138, 4
  %168 = or i32 %167, 7
  %169 = sext i32 %168 to i64
  %170 = add i64 %165, %169
  %171 = inttoptr i64 %170 to i32*
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i64 %166, 4294967295
  %174 = icmp eq i64 %173, 0
  tail call void @llvm.assume(i1 %174) #5
  %175 = zext i32 %172 to i64
  %176 = or i64 %166, %175
  %177 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %178 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %177, null
  br i1 %178, label %183, label %179

179:                                              ; preds = %163
  %180 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %177, i64 %176) #5
  %181 = load i64, i64* %180, align 8
  %182 = ptrtoint i64* %180 to i64
  br label %194

183:                                              ; preds = %163
  %184 = load i64*, i64** %120, align 8
  %185 = load i64*, i64** %121, align 8
  %186 = icmp eq i64* %184, %185
  br i1 %186, label %187, label %189

187:                                              ; preds = %183
  %188 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %189

189:                                              ; preds = %187, %183
  %190 = phi i64* [ %188, %187 ], [ %184, %183 ]
  %191 = ptrtoint i64* %190 to i64
  %192 = add i64 %191, 8
  %193 = inttoptr i64 %192 to i64*
  store i64* %193, i64** %120, align 8
  store i64 %176, i64* %190, align 8
  br label %194

194:                                              ; preds = %179, %189
  %195 = phi i64 [ %182, %179 ], [ %191, %189 ]
  %196 = phi i64 [ %181, %179 ], [ %176, %189 ]
  %197 = phi i64* [ %180, %179 ], [ %190, %189 ]
  %198 = and i64 %196, 1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %231, label %200

200:                                              ; preds = %194
  %201 = load i64, i64* %119, align 8
  %202 = add i64 %196, -1
  %203 = inttoptr i64 %202 to i32*
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i64 %201, 4294967295
  %206 = icmp eq i64 %205, 0
  tail call void @llvm.assume(i1 %206) #5
  %207 = zext i32 %204 to i64
  %208 = or i64 %201, %207
  %209 = add i64 %208, 7
  %210 = inttoptr i64 %209 to i16*
  %211 = load atomic i16, i16* %210 monotonic, align 2
  %212 = icmp eq i16 %211, 91
  br i1 %212, label %213, label %216

213:                                              ; preds = %200
  %214 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118CreateArrayLiteralEPNS0_7IsolateENS0_6HandleINS0_27ArrayBoilerplateDescriptionEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %197, i8 zeroext %3)
  %215 = ptrtoint i64* %214 to i64
  br label %231

216:                                              ; preds = %200
  %217 = load atomic i32, i32* %203 monotonic, align 4
  %218 = zext i32 %217 to i64
  %219 = or i64 %201, %218
  %220 = add i64 %219, 7
  %221 = inttoptr i64 %220 to i16*
  %222 = load atomic i16, i16* %221 monotonic, align 2
  %223 = icmp eq i16 %222, 130
  br i1 %223, label %224, label %231

224:                                              ; preds = %216
  %225 = add i64 %196, 7
  %226 = inttoptr i64 %225 to i32*
  %227 = load i32, i32* %226, align 4
  %228 = ashr i32 %227, 1
  %229 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119CreateObjectLiteralEPNS0_7IsolateENS0_6HandleINS0_28ObjectBoilerplateDescriptionEEEiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %197, i32 %228, i8 zeroext %3)
  %230 = ptrtoint i64* %229 to i64
  br label %231

231:                                              ; preds = %194, %213, %224, %216
  %232 = phi i64 [ %215, %213 ], [ %230, %224 ], [ %195, %216 ], [ %195, %194 ]
  %233 = load i64, i64* %164, align 8
  %234 = and i64 %233, 1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %241

236:                                              ; preds = %231
  %237 = trunc i64 %233 to i32
  %238 = icmp slt i32 %237, 0
  br i1 %238, label %300, label %239

239:                                              ; preds = %236
  %240 = lshr i32 %237, 1
  br label %266

241:                                              ; preds = %231
  %242 = and i64 %233, -4294967296
  %243 = add i64 %233, -1
  %244 = inttoptr i64 %243 to i32*
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = zext i32 %245 to i64
  %247 = or i64 %242, %246
  %248 = add i64 %247, 7
  %249 = inttoptr i64 %248 to i16*
  %250 = load atomic i16, i16* %249 monotonic, align 2
  %251 = icmp eq i16 %250, 66
  br i1 %251, label %252, label %300

252:                                              ; preds = %241
  %253 = add i64 %233, 3
  %254 = inttoptr i64 %253 to double*
  %255 = load double, double* %254, align 1
  %256 = fadd double %255, 0x4330000000000000
  %257 = bitcast double %256 to i64
  %258 = and i64 %257, -4294967296
  %259 = icmp eq i64 %258, 4841369599423283200
  br i1 %259, label %260, label %300

260:                                              ; preds = %252
  %261 = trunc i64 %257 to i32
  %262 = uitofp i32 %261 to double
  %263 = fcmp oeq double %255, %262
  %264 = icmp ne i32 %261, -1
  %265 = and i1 %264, %263
  br i1 %265, label %266, label %300

266:                                              ; preds = %260, %239
  %267 = phi i32 [ %240, %239 ], [ %261, %260 ]
  %268 = inttoptr i64 %232 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = load i64, i64* %122, align 8
  %271 = trunc i64 %269 to i32
  %272 = trunc i64 %270 to i32
  %273 = icmp eq i32 %271, %272
  br i1 %273, label %274, label %294

274:                                              ; preds = %266
  %275 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %276 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %275, null
  br i1 %276, label %280, label %277

277:                                              ; preds = %274
  %278 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %275, i64 0) #5
  %279 = ptrtoint i64* %278 to i64
  br label %291

280:                                              ; preds = %274
  %281 = load i64*, i64** %120, align 8
  %282 = load i64*, i64** %121, align 8
  %283 = icmp eq i64* %281, %282
  br i1 %283, label %284, label %286

284:                                              ; preds = %280
  %285 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %286

286:                                              ; preds = %284, %280
  %287 = phi i64* [ %285, %284 ], [ %281, %280 ]
  %288 = ptrtoint i64* %287 to i64
  %289 = add i64 %288, 8
  %290 = inttoptr i64 %289 to i64*
  store i64* %290, i64** %120, align 8
  store i64 0, i64* %287, align 8
  br label %291

291:                                              ; preds = %277, %286
  %292 = phi i64 [ %279, %277 ], [ %288, %286 ]
  %293 = inttoptr i64 %292 to i64*
  br label %294

294:                                              ; preds = %291, %266
  %295 = phi i64* [ %293, %291 ], [ %268, %266 ]
  %296 = zext i32 %267 to i64
  %297 = tail call i64* @_ZN2v88internal8JSObject29SetOwnElementIgnoreAttributesENS0_6HandleIS1_EEmNS2_INS0_6ObjectEEENS0_18PropertyAttributesE(i64* %106, i64 %296, i64* %295, i32 0) #5
  %298 = icmp eq i64* %297, null
  br i1 %298, label %299, label %305, !prof !3

299:                                              ; preds = %294
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0)) #7
  unreachable

300:                                              ; preds = %252, %241, %236, %260
  %301 = inttoptr i64 %232 to i64*
  %302 = tail call i64* @_ZN2v88internal8JSObject30SetOwnPropertyIgnoreAttributesENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(i64* %106, i64* %164, i64* %301, i32 0) #5
  %303 = icmp eq i64* %302, null
  br i1 %303, label %304, label %305, !prof !3

304:                                              ; preds = %300
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0)) #7
  unreachable

305:                                              ; preds = %300, %294
  %306 = add nuw nsw i64 %134, 1
  %307 = icmp eq i64 %306, %123
  br i1 %307, label %124, label %308

308:                                              ; preds = %305
  %309 = load i64, i64* %1, align 8
  br label %132

310:                                              ; preds = %124
  %311 = load i64, i64* %106, align 8
  %312 = and i64 %311, -4294967296
  %313 = add i64 %311, -1
  %314 = inttoptr i64 %313 to i32*
  %315 = load atomic i32, i32* %314 monotonic, align 4
  %316 = zext i32 %315 to i64
  %317 = or i64 %312, %316
  %318 = add i64 %317, 5
  %319 = inttoptr i64 %318 to i8*
  %320 = load atomic i8, i8* %319 monotonic, align 1
  %321 = zext i8 %320 to i32
  %322 = icmp ugt i8 %320, 2
  br i1 %322, label %323, label %329

323:                                              ; preds = %310
  %324 = add i64 %317, 3
  %325 = inttoptr i64 %324 to i8*
  %326 = load atomic i8, i8* %325 monotonic, align 1
  %327 = zext i8 %326 to i32
  %328 = sub nsw i32 %327, %321
  br label %329

329:                                              ; preds = %310, %323
  %330 = phi i32 [ %328, %323 ], [ %321, %310 ]
  tail call void @_ZN2v88internal8JSObject17MigrateSlowToFastENS0_6HandleIS1_EEiPKc(i64* %106, i32 %330, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i64 0, i64 0)) #5
  br label %331

331:                                              ; preds = %124, %329
  ret i64* %106
}

declare i64* @_ZN2v88internal7Factory25ObjectLiteralMapFromCacheENS0_6HandleINS0_13NativeContextEEEi(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal8JSObject17NormalizeElementsENS0_6HandleIS1_EE(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_118CreateArrayLiteralEPNS0_7IsolateENS0_6HandleINS0_27ArrayBoilerplateDescriptionEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) unnamed_addr #0 {
  %4 = load i64, i64* %1, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 1
  %9 = trunc i32 %8 to i8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %4, 7
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = and i64 %11, 4294967295
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #5
  %17 = zext i32 %14 to i64
  %18 = or i64 %11, %17
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %20 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %19, align 8
  %21 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %3
  %23 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %20, i64 %18) #5
  br label %37

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = icmp eq i64* %26, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %32

32:                                               ; preds = %30, %24
  %33 = phi i64* [ %31, %30 ], [ %26, %24 ]
  %34 = ptrtoint i64* %33 to i64
  %35 = add i64 %34, 8
  %36 = inttoptr i64 %35 to i64*
  store i64* %36, i64** %25, align 8
  store i64 %18, i64* %33, align 8
  br label %37

37:                                               ; preds = %22, %32
  %38 = phi i64* [ %23, %22 ], [ %33, %32 ]
  %39 = and i8 %9, -2
  %40 = icmp eq i8 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %37
  %42 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %43 = tail call i64* @_ZN2v88internal7Factory20CopyFixedDoubleArrayENS0_6HandleINS0_16FixedDoubleArrayEEE(%"class.v8::internal::Factory"* %42, i64* %38) #5
  br label %250

44:                                               ; preds = %37
  %45 = load i64, i64* %38, align 8
  %46 = load i64, i64* %10, align 8
  %47 = add i64 %45, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i64 %46, 4294967295
  %51 = icmp eq i64 %50, 0
  tail call void @llvm.assume(i1 %51) #5
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 13
  %53 = load i64, i64* %52, align 8
  %54 = trunc i64 %53 to i32
  %55 = icmp eq i32 %49, %54
  %56 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br i1 %55, label %250, label %57

57:                                               ; preds = %44
  %58 = tail call i64* @_ZN2v88internal7Factory14CopyFixedArrayENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::Factory"* %56, i64* %38) #5
  %59 = load i64, i64* %38, align 8
  %60 = add i64 %59, 3
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %250

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %66 = bitcast %"struct.v8::internal::HandleScopeData"* %65 to i64*
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %70 = icmp eq %"class.v8::internal::Isolate"* %0, null
  %71 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %65, i64 0, i32 0
  br label %72

72:                                               ; preds = %64, %241
  %73 = phi i64 [ 0, %64 ], [ %242, %241 ]
  %74 = load i64, i64* %58, align 8
  %75 = load i64, i64* %10, align 8
  %76 = trunc i64 %73 to i32
  %77 = shl i32 %76, 2
  %78 = sext i32 %77 to i64
  %79 = add nsw i64 %78, 7
  %80 = add i64 %74, %79
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i64 %75, 4294967295
  %84 = icmp eq i64 %83, 0
  tail call void @llvm.assume(i1 %84) #5
  %85 = zext i32 %82 to i64
  %86 = or i64 %75, %85
  %87 = and i64 %85, 1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %241, label %89

89:                                               ; preds = %72
  %90 = add i64 %86, -1
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %75, %93
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i16*
  %97 = load atomic i16, i16* %96 monotonic, align 2
  %98 = icmp eq i16 %97, 91
  br i1 %98, label %99, label %163

99:                                               ; preds = %89
  %100 = load i64, i64* %66, align 8
  %101 = load i64*, i64** %67, align 8
  %102 = load i32, i32* %68, align 8
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %68, align 8
  %104 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %19, align 8
  %105 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %104, null
  %106 = inttoptr i64 %100 to i64*
  br i1 %105, label %109, label %107

107:                                              ; preds = %99
  %108 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %104, i64 %86) #5
  br label %118

109:                                              ; preds = %99
  %110 = icmp eq i64* %101, %106
  br i1 %110, label %111, label %113

111:                                              ; preds = %109
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %113

113:                                              ; preds = %111, %109
  %114 = phi i64* [ %112, %111 ], [ %106, %109 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %69, align 8
  store i64 %86, i64* %114, align 8
  br label %118

118:                                              ; preds = %107, %113
  %119 = phi i64* [ %108, %107 ], [ %114, %113 ]
  %120 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118CreateArrayLiteralEPNS0_7IsolateENS0_6HandleINS0_27ArrayBoilerplateDescriptionEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %119, i8 zeroext %2)
  %121 = load i64, i64* %58, align 8
  %122 = load i64, i64* %120, align 8
  %123 = add i64 %121, %79
  %124 = inttoptr i64 %123 to i32*
  %125 = trunc i64 %122 to i32
  store atomic volatile i32 %125, i32* %124 monotonic, align 4
  %126 = and i64 %122, 1
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %151, label %128

128:                                              ; preds = %118
  %129 = and i64 %121, -262144
  %130 = or i64 %129, 8
  %131 = inttoptr i64 %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = and i64 %132, 262144
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %139, label %135

135:                                              ; preds = %128
  %136 = or i64 %129, 16
  %137 = inttoptr i64 %136 to %"class.v8::internal::Heap"**
  %138 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %137, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %138, i64 %121, i64 %123, i64 %122) #5
  br label %139

139:                                              ; preds = %135, %128
  %140 = and i64 %122, -262144
  %141 = or i64 %140, 8
  %142 = inttoptr i64 %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = and i64 %143, 24
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %151, label %146

146:                                              ; preds = %139
  %147 = load i64, i64* %131, align 8
  %148 = and i64 %147, 24
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %146
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %121, i64 %123, i64 %122) #5
  br label %151

151:                                              ; preds = %118, %139, %146, %150
  br i1 %70, label %241, label %152

152:                                              ; preds = %151
  %153 = load i64*, i64** %71, align 8
  store i64 %100, i64* %66, align 8
  %154 = load i32, i32* %68, align 8
  %155 = add nsw i32 %154, -1
  store i32 %155, i32* %68, align 8
  %156 = load i64*, i64** %67, align 8
  %157 = icmp eq i64* %156, %101
  br i1 %157, label %160, label %158

158:                                              ; preds = %152
  store i64* %101, i64** %67, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #5
  %159 = load i64*, i64** %71, align 8
  br label %160

160:                                              ; preds = %158, %152
  %161 = phi i64* [ %159, %158 ], [ %106, %152 ]
  %162 = phi i64* [ %101, %158 ], [ %153, %152 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %161, i64* %162) #5
  br label %241

163:                                              ; preds = %89
  %164 = load atomic i32, i32* %91 monotonic, align 4
  %165 = zext i32 %164 to i64
  %166 = or i64 %75, %165
  %167 = add i64 %166, 7
  %168 = inttoptr i64 %167 to i16*
  %169 = load atomic i16, i16* %168 monotonic, align 2
  %170 = icmp eq i16 %169, 130
  br i1 %170, label %171, label %241

171:                                              ; preds = %163
  %172 = load i64, i64* %66, align 8
  %173 = load i64*, i64** %67, align 8
  %174 = load i32, i32* %68, align 8
  %175 = add nsw i32 %174, 1
  store i32 %175, i32* %68, align 8
  %176 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %19, align 8
  %177 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %176, null
  %178 = inttoptr i64 %172 to i64*
  br i1 %177, label %182, label %179

179:                                              ; preds = %171
  %180 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %176, i64 %86) #5
  %181 = load i64, i64* %180, align 8
  br label %191

182:                                              ; preds = %171
  %183 = icmp eq i64* %173, %178
  br i1 %183, label %184, label %186

184:                                              ; preds = %182
  %185 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %186

186:                                              ; preds = %184, %182
  %187 = phi i64* [ %185, %184 ], [ %178, %182 ]
  %188 = ptrtoint i64* %187 to i64
  %189 = add i64 %188, 8
  %190 = inttoptr i64 %189 to i64*
  store i64* %190, i64** %69, align 8
  store i64 %86, i64* %187, align 8
  br label %191

191:                                              ; preds = %179, %186
  %192 = phi i64 [ %181, %179 ], [ %86, %186 ]
  %193 = phi i64* [ %180, %179 ], [ %187, %186 ]
  %194 = add i64 %192, 7
  %195 = inttoptr i64 %194 to i32*
  %196 = load i32, i32* %195, align 4
  %197 = ashr i32 %196, 1
  %198 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119CreateObjectLiteralEPNS0_7IsolateENS0_6HandleINS0_28ObjectBoilerplateDescriptionEEEiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %193, i32 %197, i8 zeroext %2)
  %199 = load i64, i64* %58, align 8
  %200 = load i64, i64* %198, align 8
  %201 = add i64 %199, %79
  %202 = inttoptr i64 %201 to i32*
  %203 = trunc i64 %200 to i32
  store atomic volatile i32 %203, i32* %202 monotonic, align 4
  %204 = and i64 %200, 1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %229, label %206

206:                                              ; preds = %191
  %207 = and i64 %199, -262144
  %208 = or i64 %207, 8
  %209 = inttoptr i64 %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = and i64 %210, 262144
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %217, label %213

213:                                              ; preds = %206
  %214 = or i64 %207, 16
  %215 = inttoptr i64 %214 to %"class.v8::internal::Heap"**
  %216 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %215, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %216, i64 %199, i64 %201, i64 %200) #5
  br label %217

217:                                              ; preds = %213, %206
  %218 = and i64 %200, -262144
  %219 = or i64 %218, 8
  %220 = inttoptr i64 %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = and i64 %221, 24
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %229, label %224

224:                                              ; preds = %217
  %225 = load i64, i64* %209, align 8
  %226 = and i64 %225, 24
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %224
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %199, i64 %201, i64 %200) #5
  br label %229

229:                                              ; preds = %191, %217, %224, %228
  br i1 %70, label %241, label %230

230:                                              ; preds = %229
  %231 = load i64*, i64** %71, align 8
  store i64 %172, i64* %66, align 8
  %232 = load i32, i32* %68, align 8
  %233 = add nsw i32 %232, -1
  store i32 %233, i32* %68, align 8
  %234 = load i64*, i64** %67, align 8
  %235 = icmp eq i64* %234, %173
  br i1 %235, label %238, label %236

236:                                              ; preds = %230
  store i64* %173, i64** %67, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #5
  %237 = load i64*, i64** %71, align 8
  br label %238

238:                                              ; preds = %236, %230
  %239 = phi i64* [ %237, %236 ], [ %178, %230 ]
  %240 = phi i64* [ %173, %236 ], [ %231, %230 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %239, i64* %240) #5
  br label %241

241:                                              ; preds = %238, %229, %160, %151, %72, %163
  %242 = add nuw nsw i64 %73, 1
  %243 = load i64, i64* %38, align 8
  %244 = add i64 %243, 3
  %245 = inttoptr i64 %244 to i32*
  %246 = load i32, i32* %245, align 4
  %247 = ashr i32 %246, 1
  %248 = sext i32 %247 to i64
  %249 = icmp slt i64 %242, %248
  br i1 %249, label %72, label %250

250:                                              ; preds = %241, %44, %57, %41
  %251 = phi %"class.v8::internal::Factory"* [ %56, %57 ], [ %42, %41 ], [ %56, %44 ], [ %56, %241 ]
  %252 = phi i64* [ %58, %57 ], [ %43, %41 ], [ %38, %44 ], [ %58, %241 ]
  %253 = load i64, i64* %252, align 8
  %254 = add i64 %253, 3
  %255 = inttoptr i64 %254 to i32*
  %256 = load i32, i32* %255, align 4
  %257 = ashr i32 %256, 1
  %258 = tail call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %251, i64* %252, i8 zeroext %9, i32 %257, i8 zeroext %2) #5
  ret i64* %258
}

declare i64* @_ZN2v88internal8JSObject29SetOwnElementIgnoreAttributesENS0_6HandleIS1_EEmNS2_INS0_6ObjectEEENS0_18PropertyAttributesE(i64*, i64, i64*, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal8JSObject30SetOwnPropertyIgnoreAttributesENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(i64*, i64*, i64*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal8JSObject17MigrateSlowToFastENS0_6HandleIS1_EEiPKc(i64*, i32, i8*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory22NewSlowJSObjectFromMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"*, i64*, i32, i8 zeroext, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory18NewJSObjectFromMapENS0_6HandleINS0_3MapEEENS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"*, i64*, i8 zeroext, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory20CopyFixedDoubleArrayENS0_6HandleINS0_16FixedDoubleArrayEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory14CopyFixedArrayENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext, i32, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory17NewAllocationSiteEb(%"class.v8::internal::Factory"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_29AllocationSiteCreationContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"*, i64*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Representation", align 1
  %4 = ptrtoint i64* %1 to i64
  %5 = getelementptr %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"*, %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext", %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 6, i32 1, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %8) #5
  br label %840

19:                                               ; preds = %12, %2
  %20 = load i64, i64* %1, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %20, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i64 %22, 4294967295
  %27 = icmp eq i64 %26, 0
  tail call void @llvm.assume(i1 %27) #5
  %28 = zext i32 %25 to i64
  %29 = or i64 %22, %28
  %30 = add i64 %29, 11
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 acquire, align 4
  %33 = and i32 %32, 16777216
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %19
  tail call void @_ZN2v88internal8JSObject15MigrateInstanceEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %8, i64* %1) #5
  br label %36

36:                                               ; preds = %19, %35
  br i1 %11, label %840, label %37

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31
  %39 = bitcast %"struct.v8::internal::HandleScopeData"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %43, align 8
  %46 = load i64, i64* %1, align 8
  %47 = load i64, i64* %21, align 8
  %48 = add i64 %46, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i64 %47, 4294967295
  %52 = icmp eq i64 %51, 0
  tail call void @llvm.assume(i1 %52) #5
  %53 = zext i32 %50 to i64
  %54 = or i64 %47, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = icmp eq i16 %57, 1085
  %59 = inttoptr i64 %40 to i64*
  br i1 %58, label %514, label %60

60:                                               ; preds = %37
  %61 = load atomic i32, i32* %49 monotonic, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %47, %62
  %64 = add i64 %63, 11
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2097152
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %335

69:                                               ; preds = %60
  %70 = load atomic i32, i32* %49 monotonic, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %47, %71
  %73 = add i64 %72, 23
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %47, %76
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %79 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %78, align 8
  %80 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %69
  %82 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %79, i64 %77) #5
  br label %93

83:                                               ; preds = %69
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %85 = icmp eq i64* %42, %59
  br i1 %85, label %86, label %88

86:                                               ; preds = %83
  %87 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %88

88:                                               ; preds = %86, %83
  %89 = phi i64* [ %87, %86 ], [ %59, %83 ]
  %90 = ptrtoint i64* %89 to i64
  %91 = add i64 %90, 8
  %92 = inttoptr i64 %91 to i64*
  store i64* %92, i64** %84, align 8
  store i64 %77, i64* %89, align 8
  br label %93

93:                                               ; preds = %81, %88
  %94 = phi i64* [ %82, %81 ], [ %89, %88 ]
  %95 = load i64, i64* %1, align 8
  %96 = load i64, i64* %21, align 8
  %97 = add i64 %95, -1
  %98 = inttoptr i64 %97 to i32*
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i64 %96, 4294967295
  %101 = icmp eq i64 %100, 0
  tail call void @llvm.assume(i1 %101) #5
  %102 = zext i32 %99 to i64
  %103 = or i64 %96, %102
  %104 = add i64 %103, 11
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 acquire, align 4
  %107 = lshr i32 %106, 10
  %108 = and i32 %107, 1023
  %109 = zext i32 %108 to i64
  %110 = icmp eq i32 %108, 0
  br i1 %110, label %497, label %111

111:                                              ; preds = %93
  %112 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %3, i64 0, i32 0
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  br label %114

114:                                              ; preds = %111, %332
  %115 = phi i64 [ 0, %111 ], [ %333, %332 ]
  %116 = load i64, i64* %94, align 8
  %117 = mul nuw nsw i64 %115, 51539607552
  %118 = add nuw nsw i64 %117, 68719476736
  %119 = lshr exact i64 %118, 32
  %120 = or i64 %119, 3
  %121 = add i64 %116, %120
  %122 = inttoptr i64 %121 to i32*
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = ashr i32 %123, 1
  %125 = load i64, i64* %1, align 8
  %126 = load i64, i64* %21, align 8
  %127 = add i64 %125, -1
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i64 %126, 4294967295
  %131 = icmp eq i64 %130, 0
  tail call void @llvm.assume(i1 %131) #5
  %132 = zext i32 %129 to i64
  %133 = or i64 %126, %132
  %134 = lshr i32 %124, 19
  %135 = and i32 %134, 1023
  %136 = lshr i32 %124, 6
  %137 = trunc i32 %136 to i8
  %138 = and i8 %137, 7
  %139 = add i64 %133, 3
  %140 = inttoptr i64 %139 to i8*
  %141 = load atomic i8, i8* %140 monotonic, align 1
  %142 = zext i8 %141 to i32
  %143 = add i64 %133, 4
  %144 = inttoptr i64 %143 to i8*
  %145 = load atomic i8, i8* %144 monotonic, align 1
  %146 = zext i8 %145 to i32
  %147 = sub nsw i32 %142, %146
  %148 = icmp slt i32 %135, %147
  br i1 %148, label %149, label %157

149:                                              ; preds = %114
  %150 = load atomic i8, i8* %144 monotonic, align 1
  %151 = zext i8 %150 to i64
  %152 = shl nuw nsw i64 %151, 28
  %153 = load atomic i8, i8* %144 monotonic, align 1
  %154 = zext i8 %153 to i32
  %155 = add nuw nsw i32 %135, %154
  %156 = shl nuw nsw i32 %155, 2
  br label %161

157:                                              ; preds = %114
  %158 = sub nsw i32 %135, %147
  %159 = shl nsw i32 %158, 2
  %160 = add nsw i32 %159, 8
  br label %161

161:                                              ; preds = %157, %149
  %162 = phi i32 [ %156, %149 ], [ %160, %157 ]
  %163 = phi i64 [ %152, %149 ], [ 536870912, %157 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %112) #5
  store i8 %138, i8* %112, align 1
  %164 = icmp ult i8 %138, 5
  br i1 %164, label %167, label %165

165:                                              ; preds = %161
  %166 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %3) #5
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i8* %166) #5
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #7
  unreachable

167:                                              ; preds = %161
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %112) #5
  %168 = zext i1 %148 to i64
  %169 = shl nuw nsw i64 %168, 13
  %170 = sext i32 %162 to i64
  %171 = sext i32 %147 to i64
  %172 = shl nsw i64 %171, 16
  %173 = or i64 %169, %172
  %174 = or i64 %173, %170
  %175 = or i64 %174, %163
  %176 = and i64 %174, 8192
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %182, label %178

178:                                              ; preds = %167
  %179 = and i64 %170, 8191
  %180 = add i64 %127, %179
  %181 = inttoptr i64 %180 to i32*
  br label %243

182:                                              ; preds = %167
  %183 = add i64 %125, 3
  %184 = inttoptr i64 %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = zext i32 %185 to i64
  %187 = or i64 %126, %186
  %188 = and i64 %186, 1
  %189 = icmp eq i64 %188, 0
  %190 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %189, label %213, label %191

191:                                              ; preds = %182
  %192 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %190, null
  br i1 %192, label %199, label %193

193:                                              ; preds = %191
  %194 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %190, i64 0, i32 0, i32 1
  %195 = load i8, i8* %194, align 8, !range !6
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %199, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %190, i64 0, i32 1, i64 0
  br label %207

199:                                              ; preds = %193, %191
  %200 = and i64 %125, -262144
  %201 = or i64 %200, 16
  %202 = inttoptr i64 %201 to i64*
  %203 = load i64, i64* %202, align 16
  %204 = add i64 %203, -41416
  %205 = inttoptr i64 %204 to %"class.v8::internal::Isolate"*
  %206 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %205, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %207

207:                                              ; preds = %199, %197
  %208 = phi i64* [ %206, %199 ], [ %198, %197 ]
  %209 = getelementptr inbounds i64, i64* %208, i64 29
  %210 = load i64, i64* %209, align 8
  %211 = trunc i64 %210 to i32
  %212 = icmp eq i32 %185, %211
  br i1 %212, label %213, label %233

213:                                              ; preds = %207, %182
  %214 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %190, null
  br i1 %214, label %221, label %215

215:                                              ; preds = %213
  %216 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %190, i64 0, i32 0, i32 1
  %217 = load i8, i8* %216, align 8, !range !6
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %190, i64 0, i32 1, i64 0
  br label %229

221:                                              ; preds = %215, %213
  %222 = and i64 %125, -262144
  %223 = or i64 %222, 16
  %224 = inttoptr i64 %223 to i64*
  %225 = load i64, i64* %224, align 16
  %226 = add i64 %225, -41416
  %227 = inttoptr i64 %226 to %"class.v8::internal::Isolate"*
  %228 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %227, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %229

229:                                              ; preds = %221, %219
  %230 = phi i64* [ %228, %221 ], [ %220, %219 ]
  %231 = getelementptr inbounds i64, i64* %230, i64 106
  %232 = load i64, i64* %231, align 8
  br label %233

233:                                              ; preds = %229, %207
  %234 = phi i64 [ %232, %229 ], [ %187, %207 ]
  %235 = lshr i64 %175, 26
  %236 = and i64 %235, 124
  %237 = and i64 %170, 8188
  %238 = add nuw nsw i64 %237, 7
  %239 = sub nsw i64 %238, %236
  %240 = add i64 %239, %234
  %241 = inttoptr i64 %240 to i32*
  %242 = load atomic i32, i32* %241 monotonic, align 4
  br label %243

243:                                              ; preds = %178, %233
  %244 = phi i32* [ %181, %178 ], [ %241, %233 ]
  %245 = load i32, i32* %244, align 4
  %246 = zext i32 %245 to i64
  %247 = or i64 %126, %246
  %248 = and i64 %246, 1
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %332, label %250

250:                                              ; preds = %243
  %251 = add i64 %247, -1
  %252 = inttoptr i64 %251 to i32*
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = zext i32 %253 to i64
  %255 = or i64 %126, %254
  %256 = add i64 %255, 7
  %257 = inttoptr i64 %256 to i16*
  %258 = load atomic i16, i16* %257 monotonic, align 2
  %259 = icmp ugt i16 %258, 188
  br i1 %259, label %260, label %332

260:                                              ; preds = %250
  %261 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %78, align 8
  %262 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %261, null
  br i1 %262, label %268, label %263

263:                                              ; preds = %260
  %264 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %261, i64 %247) #5
  %265 = load i64, i64* %264, align 8
  %266 = add i64 %265, -1
  %267 = inttoptr i64 %266 to i32*
  br label %279

268:                                              ; preds = %260
  %269 = load i64*, i64** %113, align 8
  %270 = load i64*, i64** %41, align 8
  %271 = icmp eq i64* %269, %270
  br i1 %271, label %272, label %274

272:                                              ; preds = %268
  %273 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %274

274:                                              ; preds = %272, %268
  %275 = phi i64* [ %273, %272 ], [ %269, %268 ]
  %276 = ptrtoint i64* %275 to i64
  %277 = add i64 %276, 8
  %278 = inttoptr i64 %277 to i64*
  store i64* %278, i64** %113, align 8
  store i64 %247, i64* %275, align 8
  br label %279

279:                                              ; preds = %263, %274
  %280 = phi i32* [ %267, %263 ], [ %252, %274 ]
  %281 = phi i64 [ %265, %263 ], [ %247, %274 ]
  %282 = phi i64* [ %264, %263 ], [ %275, %274 ]
  %283 = and i64 %281, -4294967296
  %284 = load atomic i32, i32* %280 monotonic, align 4
  %285 = zext i32 %284 to i64
  %286 = or i64 %283, %285
  %287 = add i64 %286, 7
  %288 = inttoptr i64 %287 to i16*
  %289 = load atomic i16, i16* %288 monotonic, align 2
  %290 = icmp eq i16 %289, 1085
  br i1 %290, label %293, label %291

291:                                              ; preds = %279
  %292 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_29AllocationSiteCreationContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %0, i64* %282) #5
  br label %329

293:                                              ; preds = %279
  %294 = load %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"*, %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"** %5, align 8
  %295 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_129AllocationSiteCreationContext13EnterNewScopeEv(%"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %294) #5
  %296 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_29AllocationSiteCreationContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %0, i64* %282) #5
  %297 = icmp eq i64* %282, null
  br i1 %297, label %329, label %298

298:                                              ; preds = %293
  %299 = load i64, i64* %295, align 8
  %300 = load i64, i64* %282, align 8
  %301 = add i64 %299, 3
  %302 = inttoptr i64 %301 to i32*
  %303 = trunc i64 %300 to i32
  store atomic volatile i32 %303, i32* %302 release, align 4
  %304 = and i64 %300, 1
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %329, label %306

306:                                              ; preds = %298
  %307 = and i64 %299, -262144
  %308 = or i64 %307, 8
  %309 = inttoptr i64 %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = and i64 %310, 262144
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %317, label %313

313:                                              ; preds = %306
  %314 = or i64 %307, 16
  %315 = inttoptr i64 %314 to %"class.v8::internal::Heap"**
  %316 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %315, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %316, i64 %299, i64 %301, i64 %300) #5
  br label %317

317:                                              ; preds = %313, %306
  %318 = and i64 %300, -262144
  %319 = or i64 %318, 8
  %320 = inttoptr i64 %319 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = and i64 %321, 24
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %329, label %324

324:                                              ; preds = %317
  %325 = load i64, i64* %309, align 8
  %326 = and i64 %325, 24
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %329

328:                                              ; preds = %324
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %299, i64 %301, i64 %300) #5
  br label %329

329:                                              ; preds = %293, %298, %317, %324, %328, %291
  %330 = phi i64* [ %292, %291 ], [ %296, %328 ], [ %296, %324 ], [ %296, %317 ], [ %296, %298 ], [ %296, %293 ]
  %331 = icmp eq i64* %330, null
  br i1 %331, label %825, label %332

332:                                              ; preds = %329, %243, %250
  %333 = add nuw nsw i64 %115, 1
  %334 = icmp eq i64 %333, %109
  br i1 %334, label %497, label %114

335:                                              ; preds = %60
  %336 = add i64 %46, 3
  %337 = inttoptr i64 %336 to i32*
  %338 = load i32, i32* %337, align 4
  %339 = zext i32 %338 to i64
  %340 = or i64 %47, %339
  %341 = and i64 %339, 1
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %343, label %364

343:                                              ; preds = %335
  %344 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %345 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %344, null
  br i1 %345, label %352, label %346

346:                                              ; preds = %343
  %347 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %344, i64 0, i32 0, i32 1
  %348 = load i8, i8* %347, align 8, !range !6
  %349 = icmp eq i8 %348, 0
  br i1 %349, label %352, label %350

350:                                              ; preds = %346
  %351 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %344, i64 0, i32 1, i64 0
  br label %360

352:                                              ; preds = %346, %343
  %353 = and i64 %46, -262144
  %354 = or i64 %353, 16
  %355 = inttoptr i64 %354 to i64*
  %356 = load i64, i64* %355, align 16
  %357 = add i64 %356, -41416
  %358 = inttoptr i64 %357 to %"class.v8::internal::Isolate"*
  %359 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %358, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %360

360:                                              ; preds = %352, %350
  %361 = phi i64* [ %359, %352 ], [ %351, %350 ]
  %362 = getelementptr inbounds i64, i64* %361, i64 115
  %363 = load i64, i64* %362, align 8
  br label %364

364:                                              ; preds = %335, %360
  %365 = phi i64 [ %363, %360 ], [ %340, %335 ]
  %366 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %367 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %366, align 8
  %368 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %367, null
  br i1 %368, label %372, label %369

369:                                              ; preds = %364
  %370 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %367, i64 %365) #5
  %371 = load i64, i64* %370, align 8
  br label %382

372:                                              ; preds = %364
  %373 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %374 = icmp eq i64* %42, %59
  br i1 %374, label %375, label %377

375:                                              ; preds = %372
  %376 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %377

377:                                              ; preds = %375, %372
  %378 = phi i64* [ %376, %375 ], [ %59, %372 ]
  %379 = ptrtoint i64* %378 to i64
  %380 = add i64 %379, 8
  %381 = inttoptr i64 %380 to i64*
  store i64* %381, i64** %373, align 8
  store i64 %365, i64* %378, align 8
  br label %382

382:                                              ; preds = %369, %377
  %383 = phi i64 [ %371, %369 ], [ %365, %377 ]
  %384 = phi i64* [ %370, %369 ], [ %378, %377 ]
  %385 = add i64 %383, 15
  %386 = inttoptr i64 %385 to i32*
  %387 = load atomic i32, i32* %386 monotonic, align 4
  %388 = ashr i32 %387, 1
  %389 = sext i32 %388 to i64
  %390 = icmp eq i32 %388, 0
  br i1 %390, label %497, label %391

391:                                              ; preds = %382
  %392 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  br label %393

393:                                              ; preds = %495, %391
  %394 = phi i64 [ %383, %391 ], [ %496, %495 ]
  %395 = phi i64 [ 0, %391 ], [ %493, %495 ]
  %396 = load i64, i64* %21, align 8
  %397 = mul i64 %395, 51539607552
  %398 = add i64 %397, 103079215104
  %399 = ashr exact i64 %398, 32
  %400 = add nsw i64 %399, 7
  %401 = add i64 %400, %394
  %402 = inttoptr i64 %401 to i32*
  %403 = load atomic i32, i32* %402 monotonic, align 4
  %404 = and i64 %396, 4294967295
  %405 = icmp eq i64 %404, 0
  tail call void @llvm.assume(i1 %405) #5
  %406 = zext i32 %403 to i64
  %407 = or i64 %396, %406
  %408 = and i64 %406, 1
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %492, label %410

410:                                              ; preds = %393
  %411 = add i64 %407, -1
  %412 = inttoptr i64 %411 to i32*
  %413 = load atomic i32, i32* %412 monotonic, align 4
  %414 = zext i32 %413 to i64
  %415 = or i64 %396, %414
  %416 = add i64 %415, 7
  %417 = inttoptr i64 %416 to i16*
  %418 = load atomic i16, i16* %417 monotonic, align 2
  %419 = icmp ugt i16 %418, 188
  br i1 %419, label %420, label %492

420:                                              ; preds = %410
  %421 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %366, align 8
  %422 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %421, null
  br i1 %422, label %428, label %423

423:                                              ; preds = %420
  %424 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %421, i64 %407) #5
  %425 = load i64, i64* %424, align 8
  %426 = add i64 %425, -1
  %427 = inttoptr i64 %426 to i32*
  br label %439

428:                                              ; preds = %420
  %429 = load i64*, i64** %392, align 8
  %430 = load i64*, i64** %41, align 8
  %431 = icmp eq i64* %429, %430
  br i1 %431, label %432, label %434

432:                                              ; preds = %428
  %433 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %434

434:                                              ; preds = %432, %428
  %435 = phi i64* [ %433, %432 ], [ %429, %428 ]
  %436 = ptrtoint i64* %435 to i64
  %437 = add i64 %436, 8
  %438 = inttoptr i64 %437 to i64*
  store i64* %438, i64** %392, align 8
  store i64 %407, i64* %435, align 8
  br label %439

439:                                              ; preds = %423, %434
  %440 = phi i32* [ %427, %423 ], [ %412, %434 ]
  %441 = phi i64 [ %425, %423 ], [ %407, %434 ]
  %442 = phi i64* [ %424, %423 ], [ %435, %434 ]
  %443 = and i64 %441, -4294967296
  %444 = load atomic i32, i32* %440 monotonic, align 4
  %445 = zext i32 %444 to i64
  %446 = or i64 %443, %445
  %447 = add i64 %446, 7
  %448 = inttoptr i64 %447 to i16*
  %449 = load atomic i16, i16* %448 monotonic, align 2
  %450 = icmp eq i16 %449, 1085
  br i1 %450, label %453, label %451

451:                                              ; preds = %439
  %452 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_29AllocationSiteCreationContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %0, i64* %442) #5
  br label %489

453:                                              ; preds = %439
  %454 = load %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"*, %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"** %5, align 8
  %455 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_129AllocationSiteCreationContext13EnterNewScopeEv(%"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %454) #5
  %456 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_29AllocationSiteCreationContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %0, i64* %442) #5
  %457 = icmp eq i64* %442, null
  br i1 %457, label %489, label %458

458:                                              ; preds = %453
  %459 = load i64, i64* %455, align 8
  %460 = load i64, i64* %442, align 8
  %461 = add i64 %459, 3
  %462 = inttoptr i64 %461 to i32*
  %463 = trunc i64 %460 to i32
  store atomic volatile i32 %463, i32* %462 release, align 4
  %464 = and i64 %460, 1
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %489, label %466

466:                                              ; preds = %458
  %467 = and i64 %459, -262144
  %468 = or i64 %467, 8
  %469 = inttoptr i64 %468 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = and i64 %470, 262144
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %477, label %473

473:                                              ; preds = %466
  %474 = or i64 %467, 16
  %475 = inttoptr i64 %474 to %"class.v8::internal::Heap"**
  %476 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %475, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %476, i64 %459, i64 %461, i64 %460) #5
  br label %477

477:                                              ; preds = %473, %466
  %478 = and i64 %460, -262144
  %479 = or i64 %478, 8
  %480 = inttoptr i64 %479 to i64*
  %481 = load i64, i64* %480, align 8
  %482 = and i64 %481, 24
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %489, label %484

484:                                              ; preds = %477
  %485 = load i64, i64* %469, align 8
  %486 = and i64 %485, 24
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %488, label %489

488:                                              ; preds = %484
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %459, i64 %461, i64 %460) #5
  br label %489

489:                                              ; preds = %453, %458, %477, %484, %488, %451
  %490 = phi i64* [ %452, %451 ], [ %456, %488 ], [ %456, %484 ], [ %456, %477 ], [ %456, %458 ], [ %456, %453 ]
  %491 = icmp eq i64* %490, null
  br i1 %491, label %825, label %492

492:                                              ; preds = %489, %393, %410
  %493 = add i64 %395, 1
  %494 = icmp eq i64 %493, %389
  br i1 %494, label %497, label %495

495:                                              ; preds = %492
  %496 = load i64, i64* %384, align 8
  br label %393

497:                                              ; preds = %492, %332, %382, %93
  %498 = load i64, i64* %1, align 8
  %499 = load i64, i64* %21, align 8
  %500 = add i64 %498, 7
  %501 = inttoptr i64 %500 to i32*
  %502 = load i32, i32* %501, align 4
  %503 = and i64 %499, 4294967295
  %504 = icmp eq i64 %503, 0
  tail call void @llvm.assume(i1 %504) #5
  %505 = zext i32 %502 to i64
  %506 = or i64 %499, %505
  %507 = add i64 %506, 3
  %508 = inttoptr i64 %507 to i32*
  %509 = load i32, i32* %508, align 4
  %510 = icmp ult i32 %509, 2
  br i1 %510, label %825, label %511

511:                                              ; preds = %497
  %512 = add i64 %498, -1
  %513 = inttoptr i64 %512 to i32*
  br label %514

514:                                              ; preds = %511, %37
  %515 = phi i32* [ %513, %511 ], [ %49, %37 ]
  %516 = phi i64 [ %499, %511 ], [ %47, %37 ]
  %517 = phi i64 [ %498, %511 ], [ %46, %37 ]
  %518 = load atomic i32, i32* %515 monotonic, align 4
  %519 = and i64 %516, 4294967295
  %520 = icmp eq i64 %519, 0
  tail call void @llvm.assume(i1 %520) #5
  %521 = zext i32 %518 to i64
  %522 = or i64 %516, %521
  %523 = add i64 %522, 10
  %524 = inttoptr i64 %523 to i8*
  %525 = load i8, i8* %524, align 1
  %526 = lshr i8 %525, 2
  switch i8 %526, label %825 [
    i8 2, label %527
    i8 10, label %527
    i8 8, label %527
    i8 6, label %527
    i8 11, label %527
    i8 9, label %527
    i8 7, label %527
    i8 3, label %527
    i8 12, label %683
    i8 13, label %822
    i8 14, label %822
    i8 15, label %823
    i8 16, label %823
    i8 17, label %824
    i8 18, label %824
    i8 19, label %824
    i8 20, label %824
    i8 21, label %824
    i8 22, label %824
    i8 23, label %824
    i8 24, label %824
    i8 25, label %824
    i8 26, label %824
    i8 27, label %824
    i8 28, label %824
    i8 29, label %824
    i8 30, label %824
    i8 31, label %824
    i8 32, label %824
    i8 33, label %824
    i8 34, label %824
    i8 35, label %824
    i8 36, label %824
    i8 37, label %824
    i8 38, label %824
  ]

527:                                              ; preds = %514, %514, %514, %514, %514, %514, %514, %514
  %528 = add i64 %517, 7
  %529 = inttoptr i64 %528 to i32*
  %530 = load i32, i32* %529, align 4
  %531 = zext i32 %530 to i64
  %532 = or i64 %516, %531
  %533 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %534 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %533, align 8
  %535 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %534, null
  br i1 %535, label %539, label %536

536:                                              ; preds = %527
  %537 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %534, i64 %532) #5
  %538 = load i64, i64* %537, align 8
  br label %551

539:                                              ; preds = %527
  %540 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %541 = load i64*, i64** %540, align 8
  %542 = load i64*, i64** %41, align 8
  %543 = icmp eq i64* %541, %542
  br i1 %543, label %544, label %546

544:                                              ; preds = %539
  %545 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %546

546:                                              ; preds = %544, %539
  %547 = phi i64* [ %545, %544 ], [ %541, %539 ]
  %548 = ptrtoint i64* %547 to i64
  %549 = add i64 %548, 8
  %550 = inttoptr i64 %549 to i64*
  store i64* %550, i64** %540, align 8
  store i64 %532, i64* %547, align 8
  br label %551

551:                                              ; preds = %536, %546
  %552 = phi i64 [ %538, %536 ], [ %532, %546 ]
  %553 = phi i64* [ %537, %536 ], [ %547, %546 ]
  %554 = load i64, i64* %21, align 8
  %555 = add i64 %552, -1
  %556 = inttoptr i64 %555 to i32*
  %557 = load atomic i32, i32* %556 monotonic, align 4
  %558 = and i64 %554, 4294967295
  %559 = icmp eq i64 %558, 0
  tail call void @llvm.assume(i1 %559) #5
  %560 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 13
  %561 = load i64, i64* %560, align 8
  %562 = trunc i64 %561 to i32
  %563 = icmp eq i32 %557, %562
  br i1 %563, label %825, label %564

564:                                              ; preds = %551
  %565 = add i64 %552, 3
  %566 = inttoptr i64 %565 to i32*
  %567 = load i32, i32* %566, align 4
  %568 = icmp sgt i32 %567, 1
  br i1 %568, label %569, label %825

569:                                              ; preds = %564
  %570 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  br label %571

571:                                              ; preds = %681, %569
  %572 = phi i64 [ %552, %569 ], [ %673, %681 ]
  %573 = phi i64 [ %554, %569 ], [ %682, %681 ]
  %574 = phi i64 [ 0, %569 ], [ %674, %681 ]
  %575 = trunc i64 %574 to i32
  %576 = shl i32 %575, 2
  %577 = sext i32 %576 to i64
  %578 = add i64 %572, 7
  %579 = add i64 %578, %577
  %580 = inttoptr i64 %579 to i32*
  %581 = load atomic i32, i32* %580 monotonic, align 4
  %582 = and i64 %573, 4294967295
  %583 = icmp eq i64 %582, 0
  tail call void @llvm.assume(i1 %583) #5
  %584 = zext i32 %581 to i64
  %585 = or i64 %573, %584
  %586 = and i64 %584, 1
  %587 = icmp eq i64 %586, 0
  br i1 %587, label %672, label %588

588:                                              ; preds = %571
  %589 = add i64 %585, -1
  %590 = inttoptr i64 %589 to i32*
  %591 = load atomic i32, i32* %590 monotonic, align 4
  %592 = zext i32 %591 to i64
  %593 = or i64 %573, %592
  %594 = add i64 %593, 7
  %595 = inttoptr i64 %594 to i16*
  %596 = load atomic i16, i16* %595 monotonic, align 2
  %597 = icmp ugt i16 %596, 188
  br i1 %597, label %598, label %672

598:                                              ; preds = %588
  %599 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %533, align 8
  %600 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %599, null
  br i1 %600, label %606, label %601

601:                                              ; preds = %598
  %602 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %599, i64 %585) #5
  %603 = load i64, i64* %602, align 8
  %604 = add i64 %603, -1
  %605 = inttoptr i64 %604 to i32*
  br label %617

606:                                              ; preds = %598
  %607 = load i64*, i64** %570, align 8
  %608 = load i64*, i64** %41, align 8
  %609 = icmp eq i64* %607, %608
  br i1 %609, label %610, label %612

610:                                              ; preds = %606
  %611 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %612

612:                                              ; preds = %610, %606
  %613 = phi i64* [ %611, %610 ], [ %607, %606 ]
  %614 = ptrtoint i64* %613 to i64
  %615 = add i64 %614, 8
  %616 = inttoptr i64 %615 to i64*
  store i64* %616, i64** %570, align 8
  store i64 %585, i64* %613, align 8
  br label %617

617:                                              ; preds = %601, %612
  %618 = phi i32* [ %605, %601 ], [ %590, %612 ]
  %619 = phi i64 [ %603, %601 ], [ %585, %612 ]
  %620 = phi i64* [ %602, %601 ], [ %613, %612 ]
  %621 = and i64 %619, -4294967296
  %622 = load atomic i32, i32* %618 monotonic, align 4
  %623 = zext i32 %622 to i64
  %624 = or i64 %621, %623
  %625 = add i64 %624, 7
  %626 = inttoptr i64 %625 to i16*
  %627 = load atomic i16, i16* %626 monotonic, align 2
  %628 = icmp eq i16 %627, 1085
  br i1 %628, label %631, label %629

629:                                              ; preds = %617
  %630 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_29AllocationSiteCreationContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %0, i64* %620) #5
  br label %667

631:                                              ; preds = %617
  %632 = load %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"*, %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"** %5, align 8
  %633 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_129AllocationSiteCreationContext13EnterNewScopeEv(%"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %632) #5
  %634 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_29AllocationSiteCreationContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %0, i64* %620) #5
  %635 = icmp eq i64* %620, null
  br i1 %635, label %667, label %636

636:                                              ; preds = %631
  %637 = load i64, i64* %633, align 8
  %638 = load i64, i64* %620, align 8
  %639 = add i64 %637, 3
  %640 = inttoptr i64 %639 to i32*
  %641 = trunc i64 %638 to i32
  store atomic volatile i32 %641, i32* %640 release, align 4
  %642 = and i64 %638, 1
  %643 = icmp eq i64 %642, 0
  br i1 %643, label %667, label %644

644:                                              ; preds = %636
  %645 = and i64 %637, -262144
  %646 = or i64 %645, 8
  %647 = inttoptr i64 %646 to i64*
  %648 = load i64, i64* %647, align 8
  %649 = and i64 %648, 262144
  %650 = icmp eq i64 %649, 0
  br i1 %650, label %655, label %651

651:                                              ; preds = %644
  %652 = or i64 %645, 16
  %653 = inttoptr i64 %652 to %"class.v8::internal::Heap"**
  %654 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %653, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %654, i64 %637, i64 %639, i64 %638) #5
  br label %655

655:                                              ; preds = %651, %644
  %656 = and i64 %638, -262144
  %657 = or i64 %656, 8
  %658 = inttoptr i64 %657 to i64*
  %659 = load i64, i64* %658, align 8
  %660 = and i64 %659, 24
  %661 = icmp eq i64 %660, 0
  br i1 %661, label %667, label %662

662:                                              ; preds = %655
  %663 = load i64, i64* %647, align 8
  %664 = and i64 %663, 24
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %666, label %667

666:                                              ; preds = %662
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %637, i64 %639, i64 %638) #5
  br label %667

667:                                              ; preds = %631, %636, %655, %662, %666, %629
  %668 = phi i64* [ %630, %629 ], [ %634, %666 ], [ %634, %662 ], [ %634, %655 ], [ %634, %636 ], [ %634, %631 ]
  %669 = icmp eq i64* %668, null
  br i1 %669, label %825, label %670

670:                                              ; preds = %667
  %671 = load i64, i64* %553, align 8
  br label %672

672:                                              ; preds = %670, %571, %588
  %673 = phi i64 [ %671, %670 ], [ %572, %571 ], [ %572, %588 ]
  %674 = add nuw nsw i64 %574, 1
  %675 = add i64 %673, 3
  %676 = inttoptr i64 %675 to i32*
  %677 = load i32, i32* %676, align 4
  %678 = ashr i32 %677, 1
  %679 = sext i32 %678 to i64
  %680 = icmp slt i64 %674, %679
  br i1 %680, label %681, label %825

681:                                              ; preds = %672
  %682 = load i64, i64* %21, align 8
  br label %571

683:                                              ; preds = %514
  %684 = add i64 %517, 7
  %685 = inttoptr i64 %684 to i32*
  %686 = load i32, i32* %685, align 4
  %687 = zext i32 %686 to i64
  %688 = or i64 %516, %687
  %689 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %690 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %689, align 8
  %691 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %690, null
  br i1 %691, label %695, label %692

692:                                              ; preds = %683
  %693 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %690, i64 %688) #5
  %694 = load i64, i64* %693, align 8
  br label %707

695:                                              ; preds = %683
  %696 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %697 = load i64*, i64** %696, align 8
  %698 = load i64*, i64** %41, align 8
  %699 = icmp eq i64* %697, %698
  br i1 %699, label %700, label %702

700:                                              ; preds = %695
  %701 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %702

702:                                              ; preds = %700, %695
  %703 = phi i64* [ %701, %700 ], [ %697, %695 ]
  %704 = ptrtoint i64* %703 to i64
  %705 = add i64 %704, 8
  %706 = inttoptr i64 %705 to i64*
  store i64* %706, i64** %696, align 8
  store i64 %688, i64* %703, align 8
  br label %707

707:                                              ; preds = %692, %702
  %708 = phi i64 [ %694, %692 ], [ %688, %702 ]
  %709 = phi i64* [ %693, %692 ], [ %703, %702 ]
  %710 = add i64 %708, 15
  %711 = inttoptr i64 %710 to i32*
  %712 = load atomic i32, i32* %711 monotonic, align 4
  %713 = ashr i32 %712, 1
  %714 = sext i32 %713 to i64
  %715 = icmp eq i32 %713, 0
  br i1 %715, label %825, label %716

716:                                              ; preds = %707
  %717 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  br label %718

718:                                              ; preds = %820, %716
  %719 = phi i64 [ %708, %716 ], [ %821, %820 ]
  %720 = phi i64 [ 0, %716 ], [ %818, %820 ]
  %721 = load i64, i64* %21, align 8
  %722 = mul i64 %720, 51539607552
  %723 = add i64 %722, 85899345920
  %724 = ashr exact i64 %723, 32
  %725 = add nsw i64 %724, 7
  %726 = add i64 %725, %719
  %727 = inttoptr i64 %726 to i32*
  %728 = load atomic i32, i32* %727 monotonic, align 4
  %729 = and i64 %721, 4294967295
  %730 = icmp eq i64 %729, 0
  tail call void @llvm.assume(i1 %730) #5
  %731 = zext i32 %728 to i64
  %732 = or i64 %721, %731
  %733 = and i64 %731, 1
  %734 = icmp eq i64 %733, 0
  br i1 %734, label %817, label %735

735:                                              ; preds = %718
  %736 = add i64 %732, -1
  %737 = inttoptr i64 %736 to i32*
  %738 = load atomic i32, i32* %737 monotonic, align 4
  %739 = zext i32 %738 to i64
  %740 = or i64 %721, %739
  %741 = add i64 %740, 7
  %742 = inttoptr i64 %741 to i16*
  %743 = load atomic i16, i16* %742 monotonic, align 2
  %744 = icmp ugt i16 %743, 188
  br i1 %744, label %745, label %817

745:                                              ; preds = %735
  %746 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %689, align 8
  %747 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %746, null
  br i1 %747, label %753, label %748

748:                                              ; preds = %745
  %749 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %746, i64 %732) #5
  %750 = load i64, i64* %749, align 8
  %751 = add i64 %750, -1
  %752 = inttoptr i64 %751 to i32*
  br label %764

753:                                              ; preds = %745
  %754 = load i64*, i64** %717, align 8
  %755 = load i64*, i64** %41, align 8
  %756 = icmp eq i64* %754, %755
  br i1 %756, label %757, label %759

757:                                              ; preds = %753
  %758 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #5
  br label %759

759:                                              ; preds = %757, %753
  %760 = phi i64* [ %758, %757 ], [ %754, %753 ]
  %761 = ptrtoint i64* %760 to i64
  %762 = add i64 %761, 8
  %763 = inttoptr i64 %762 to i64*
  store i64* %763, i64** %717, align 8
  store i64 %732, i64* %760, align 8
  br label %764

764:                                              ; preds = %748, %759
  %765 = phi i32* [ %752, %748 ], [ %737, %759 ]
  %766 = phi i64 [ %750, %748 ], [ %732, %759 ]
  %767 = phi i64* [ %749, %748 ], [ %760, %759 ]
  %768 = and i64 %766, -4294967296
  %769 = load atomic i32, i32* %765 monotonic, align 4
  %770 = zext i32 %769 to i64
  %771 = or i64 %768, %770
  %772 = add i64 %771, 7
  %773 = inttoptr i64 %772 to i16*
  %774 = load atomic i16, i16* %773 monotonic, align 2
  %775 = icmp eq i16 %774, 1085
  br i1 %775, label %778, label %776

776:                                              ; preds = %764
  %777 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_29AllocationSiteCreationContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %0, i64* %767) #5
  br label %814

778:                                              ; preds = %764
  %779 = load %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"*, %"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"** %5, align 8
  %780 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_129AllocationSiteCreationContext13EnterNewScopeEv(%"class.v8::internal::(anonymous namespace)::AllocationSiteCreationContext"* %779) #5
  %781 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS1_29AllocationSiteCreationContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1192"* %0, i64* %767) #5
  %782 = icmp eq i64* %767, null
  br i1 %782, label %814, label %783

783:                                              ; preds = %778
  %784 = load i64, i64* %780, align 8
  %785 = load i64, i64* %767, align 8
  %786 = add i64 %784, 3
  %787 = inttoptr i64 %786 to i32*
  %788 = trunc i64 %785 to i32
  store atomic volatile i32 %788, i32* %787 release, align 4
  %789 = and i64 %785, 1
  %790 = icmp eq i64 %789, 0
  br i1 %790, label %814, label %791

791:                                              ; preds = %783
  %792 = and i64 %784, -262144
  %793 = or i64 %792, 8
  %794 = inttoptr i64 %793 to i64*
  %795 = load i64, i64* %794, align 8
  %796 = and i64 %795, 262144
  %797 = icmp eq i64 %796, 0
  br i1 %797, label %802, label %798

798:                                              ; preds = %791
  %799 = or i64 %792, 16
  %800 = inttoptr i64 %799 to %"class.v8::internal::Heap"**
  %801 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %800, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %801, i64 %784, i64 %786, i64 %785) #5
  br label %802

802:                                              ; preds = %798, %791
  %803 = and i64 %785, -262144
  %804 = or i64 %803, 8
  %805 = inttoptr i64 %804 to i64*
  %806 = load i64, i64* %805, align 8
  %807 = and i64 %806, 24
  %808 = icmp eq i64 %807, 0
  br i1 %808, label %814, label %809

809:                                              ; preds = %802
  %810 = load i64, i64* %794, align 8
  %811 = and i64 %810, 24
  %812 = icmp eq i64 %811, 0
  br i1 %812, label %813, label %814

813:                                              ; preds = %809
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %784, i64 %786, i64 %785) #5
  br label %814

814:                                              ; preds = %778, %783, %802, %809, %813, %776
  %815 = phi i64* [ %777, %776 ], [ %781, %813 ], [ %781, %809 ], [ %781, %802 ], [ %781, %783 ], [ %781, %778 ]
  %816 = icmp eq i64* %815, null
  br i1 %816, label %825, label %817

817:                                              ; preds = %814, %718, %735
  %818 = add i64 %720, 1
  %819 = icmp eq i64 %818, %714
  br i1 %819, label %825, label %820

820:                                              ; preds = %817
  %821 = load i64, i64* %709, align 8
  br label %718

822:                                              ; preds = %514, %514
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0)) #7
  unreachable

823:                                              ; preds = %514, %514
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #7
  unreachable

824:                                              ; preds = %514, %514, %514, %514, %514, %514, %514, %514, %514, %514, %514, %514, %514, %514, %514, %514, %514, %514, %514, %514, %514, %514
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #7
  unreachable

825:                                              ; preds = %489, %329, %817, %814, %667, %672, %707, %564, %551, %514, %497
  %826 = phi i64 [ %4, %497 ], [ %4, %514 ], [ %4, %551 ], [ %4, %564 ], [ %4, %707 ], [ 0, %667 ], [ %4, %672 ], [ %4, %817 ], [ 0, %814 ], [ 0, %329 ], [ 0, %489 ]
  %827 = icmp eq %"class.v8::internal::Isolate"* %8, null
  br i1 %827, label %840, label %828

828:                                              ; preds = %825
  %829 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %38, i64 0, i32 0
  %830 = load i64*, i64** %829, align 8
  store i64 %40, i64* %39, align 8
  %831 = load i32, i32* %43, align 8
  %832 = add nsw i32 %831, -1
  store i32 %832, i32* %43, align 8
  %833 = load i64*, i64** %41, align 8
  %834 = icmp eq i64* %833, %42
  br i1 %834, label %837, label %835

835:                                              ; preds = %828
  store i64* %42, i64** %41, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %8) #5
  %836 = load i64*, i64** %829, align 8
  br label %837

837:                                              ; preds = %835, %828
  %838 = phi i64* [ %836, %835 ], [ %59, %828 ]
  %839 = phi i64* [ %42, %835 ], [ %830, %828 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %838, i64* %839) #5
  br label %840

840:                                              ; preds = %36, %825, %837, %17
  %841 = phi i64 [ 0, %17 ], [ %4, %36 ], [ %826, %825 ], [ %826, %837 ]
  %842 = inttoptr i64 %841 to i64*
  ret i64* %842
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS0_26AllocationSiteUsageContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"*, i64*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Representation", align 1
  %4 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %6 = getelementptr %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::AllocationSiteUsageContext"*, %"class.v8::internal::AllocationSiteUsageContext"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195", %"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %20, label %13

13:                                               ; preds = %2
  %14 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 6, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %14, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %9) #5
  br label %1080

20:                                               ; preds = %13, %2
  %21 = load i64, i64* %1, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 4
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %21, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i64 %23, 4294967295
  %28 = icmp eq i64 %27, 0
  tail call void @llvm.assume(i1 %28) #5
  %29 = zext i32 %26 to i64
  %30 = or i64 %23, %29
  %31 = add i64 %30, 11
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 acquire, align 4
  %34 = and i32 %33, 16777216
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %20
  tail call void @_ZN2v88internal8JSObject15MigrateInstanceEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %9, i64* %1) #5
  br label %37

37:                                               ; preds = %20, %36
  %38 = load %"class.v8::internal::AllocationSiteUsageContext"*, %"class.v8::internal::AllocationSiteUsageContext"** %6, align 8
  %39 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 8, !range !6
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %69, label %42

42:                                               ; preds = %37
  %43 = load i64, i64* %1, align 8
  %44 = and i64 %43, -4294967296
  %45 = add i64 %43, -1
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !6
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %42
  switch i16 %52, label %69 [
    i16 1085, label %66
    i16 1057, label %66
  ]

56:                                               ; preds = %42
  %57 = icmp eq i16 %52, 1085
  br i1 %57, label %58, label %69

58:                                               ; preds = %56
  %59 = load atomic i32, i32* %46 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %44, %60
  %62 = add i64 %61, 10
  %63 = inttoptr i64 %62 to i8*
  %64 = load i8, i8* %63, align 1
  %65 = icmp ult i8 %64, 8
  br i1 %65, label %66, label %69

66:                                               ; preds = %58, %55, %55
  %67 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %38, i64 0, i32 0, i32 2, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  br label %69

69:                                               ; preds = %58, %56, %55, %37, %66
  %70 = phi i64* [ %68, %66 ], [ null, %37 ], [ null, %55 ], [ null, %56 ], [ null, %58 ]
  %71 = bitcast %"class.v8::internal::Isolate"* %9 to %"class.v8::internal::Factory"*
  %72 = tail call i64* @_ZN2v88internal7Factory30CopyJSObjectWithAllocationSiteENS0_6HandleINS0_8JSObjectEEENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %71, i64* %1, i64* %70) #5
  br i1 %12, label %73, label %75

73:                                               ; preds = %69
  %74 = ptrtoint i64* %72 to i64
  br label %1080

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31
  %77 = bitcast %"struct.v8::internal::HandleScopeData"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %80 = load i64*, i64** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %81, align 8
  %84 = load i64, i64* %72, align 8
  %85 = load i64, i64* %22, align 8
  %86 = add i64 %84, -1
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i64 %85, 4294967295
  %90 = icmp eq i64 %89, 0
  tail call void @llvm.assume(i1 %90) #5
  %91 = zext i32 %88 to i64
  %92 = or i64 %85, %91
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i16*
  %95 = load atomic i16, i16* %94 monotonic, align 2
  %96 = icmp eq i16 %95, 1085
  %97 = inttoptr i64 %78 to i64*
  br i1 %96, label %652, label %98

98:                                               ; preds = %75
  %99 = load atomic i32, i32* %87 monotonic, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %85, %100
  %102 = add i64 %101, 11
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2097152
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %420

107:                                              ; preds = %98
  %108 = load atomic i32, i32* %87 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %85, %109
  %111 = add i64 %110, 23
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i64
  %115 = or i64 %85, %114
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %117 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %116, align 8
  %118 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %107
  %120 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %117, i64 %115) #5
  br label %131

121:                                              ; preds = %107
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %123 = icmp eq i64* %80, %97
  br i1 %123, label %124, label %126

124:                                              ; preds = %121
  %125 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #5
  br label %126

126:                                              ; preds = %124, %121
  %127 = phi i64* [ %125, %124 ], [ %97, %121 ]
  %128 = ptrtoint i64* %127 to i64
  %129 = add i64 %128, 8
  %130 = inttoptr i64 %129 to i64*
  store i64* %130, i64** %122, align 8
  store i64 %115, i64* %127, align 8
  br label %131

131:                                              ; preds = %119, %126
  %132 = phi i64* [ %120, %119 ], [ %127, %126 ]
  %133 = load i64, i64* %72, align 8
  %134 = load i64, i64* %22, align 8
  %135 = add i64 %133, -1
  %136 = inttoptr i64 %135 to i32*
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i64 %134, 4294967295
  %139 = icmp eq i64 %138, 0
  tail call void @llvm.assume(i1 %139) #5
  %140 = zext i32 %137 to i64
  %141 = or i64 %134, %140
  %142 = add i64 %141, 11
  %143 = inttoptr i64 %142 to i32*
  %144 = load atomic i32, i32* %143 acquire, align 4
  %145 = lshr i32 %144, 10
  %146 = and i32 %145, 1023
  %147 = zext i32 %146 to i64
  %148 = icmp eq i32 %146, 0
  br i1 %148, label %633, label %149

149:                                              ; preds = %131
  %150 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %3, i64 0, i32 0
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %152 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %4, i64 0, i32 0
  %154 = bitcast %"class.v8::internal::Isolate"* %9 to %"class.v8::internal::FactoryBase"*
  %155 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %5, i64 0, i32 0
  br label %157

157:                                              ; preds = %149, %417
  %158 = phi i64 [ 0, %149 ], [ %418, %417 ]
  %159 = load i64, i64* %132, align 8
  %160 = mul nuw nsw i64 %158, 51539607552
  %161 = add nuw nsw i64 %160, 68719476736
  %162 = lshr exact i64 %161, 32
  %163 = or i64 %162, 3
  %164 = add i64 %159, %163
  %165 = inttoptr i64 %164 to i32*
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = ashr i32 %166, 1
  %168 = load i64, i64* %72, align 8
  %169 = load i64, i64* %22, align 8
  %170 = add i64 %168, -1
  %171 = inttoptr i64 %170 to i32*
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i64 %169, 4294967295
  %174 = icmp eq i64 %173, 0
  call void @llvm.assume(i1 %174) #5
  %175 = zext i32 %172 to i64
  %176 = or i64 %169, %175
  %177 = lshr i32 %167, 19
  %178 = and i32 %177, 1023
  %179 = lshr i32 %167, 6
  %180 = trunc i32 %179 to i8
  %181 = and i8 %180, 7
  %182 = add i64 %176, 3
  %183 = inttoptr i64 %182 to i8*
  %184 = load atomic i8, i8* %183 monotonic, align 1
  %185 = zext i8 %184 to i32
  %186 = add i64 %176, 4
  %187 = inttoptr i64 %186 to i8*
  %188 = load atomic i8, i8* %187 monotonic, align 1
  %189 = zext i8 %188 to i32
  %190 = sub nsw i32 %185, %189
  %191 = icmp slt i32 %178, %190
  br i1 %191, label %192, label %200

192:                                              ; preds = %157
  %193 = load atomic i8, i8* %187 monotonic, align 1
  %194 = zext i8 %193 to i64
  %195 = shl nuw nsw i64 %194, 28
  %196 = load atomic i8, i8* %187 monotonic, align 1
  %197 = zext i8 %196 to i32
  %198 = add nuw nsw i32 %178, %197
  %199 = shl nuw nsw i32 %198, 2
  br label %204

200:                                              ; preds = %157
  %201 = sub nsw i32 %178, %190
  %202 = shl nsw i32 %201, 2
  %203 = add nsw i32 %202, 8
  br label %204

204:                                              ; preds = %200, %192
  %205 = phi i32 [ %199, %192 ], [ %203, %200 ]
  %206 = phi i64 [ %195, %192 ], [ 536870912, %200 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %150) #5
  store i8 %181, i8* %150, align 1
  %207 = icmp ult i8 %181, 5
  br i1 %207, label %210, label %208

208:                                              ; preds = %204
  %209 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %3) #5
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i8* %209) #5
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #7
  unreachable

210:                                              ; preds = %204
  %211 = zext i8 %181 to i64
  %212 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS0_26AllocationSiteUsageContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE, i64 0, i64 %211
  %213 = load i64, i64* %212, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %150) #5
  %214 = zext i1 %191 to i64
  %215 = shl nuw nsw i64 %214, 13
  %216 = sext i32 %205 to i64
  %217 = sext i32 %190 to i64
  %218 = shl nsw i64 %217, 16
  %219 = or i64 %215, %218
  %220 = or i64 %219, %216
  %221 = or i64 %220, %206
  %222 = or i64 %213, %221
  %223 = and i64 %220, 8192
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %229, label %225

225:                                              ; preds = %210
  %226 = and i64 %216, 8191
  %227 = add i64 %170, %226
  %228 = inttoptr i64 %227 to i32*
  br label %290

229:                                              ; preds = %210
  %230 = add i64 %168, 3
  %231 = inttoptr i64 %230 to i32*
  %232 = load i32, i32* %231, align 4
  %233 = zext i32 %232 to i64
  %234 = or i64 %169, %233
  %235 = and i64 %233, 1
  %236 = icmp eq i64 %235, 0
  %237 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %236, label %260, label %238

238:                                              ; preds = %229
  %239 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %237, null
  br i1 %239, label %246, label %240

240:                                              ; preds = %238
  %241 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %237, i64 0, i32 0, i32 1
  %242 = load i8, i8* %241, align 8, !range !6
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %246, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %237, i64 0, i32 1, i64 0
  br label %254

246:                                              ; preds = %240, %238
  %247 = and i64 %168, -262144
  %248 = or i64 %247, 16
  %249 = inttoptr i64 %248 to i64*
  %250 = load i64, i64* %249, align 16
  %251 = add i64 %250, -41416
  %252 = inttoptr i64 %251 to %"class.v8::internal::Isolate"*
  %253 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %252, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %254

254:                                              ; preds = %246, %244
  %255 = phi i64* [ %253, %246 ], [ %245, %244 ]
  %256 = getelementptr inbounds i64, i64* %255, i64 29
  %257 = load i64, i64* %256, align 8
  %258 = trunc i64 %257 to i32
  %259 = icmp eq i32 %232, %258
  br i1 %259, label %260, label %280

260:                                              ; preds = %254, %229
  %261 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %237, null
  br i1 %261, label %268, label %262

262:                                              ; preds = %260
  %263 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %237, i64 0, i32 0, i32 1
  %264 = load i8, i8* %263, align 8, !range !6
  %265 = icmp eq i8 %264, 0
  br i1 %265, label %268, label %266

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %237, i64 0, i32 1, i64 0
  br label %276

268:                                              ; preds = %262, %260
  %269 = and i64 %168, -262144
  %270 = or i64 %269, 16
  %271 = inttoptr i64 %270 to i64*
  %272 = load i64, i64* %271, align 16
  %273 = add i64 %272, -41416
  %274 = inttoptr i64 %273 to %"class.v8::internal::Isolate"*
  %275 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %274, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %276

276:                                              ; preds = %268, %266
  %277 = phi i64* [ %275, %268 ], [ %267, %266 ]
  %278 = getelementptr inbounds i64, i64* %277, i64 106
  %279 = load i64, i64* %278, align 8
  br label %280

280:                                              ; preds = %276, %254
  %281 = phi i64 [ %279, %276 ], [ %234, %254 ]
  %282 = lshr i64 %221, 26
  %283 = and i64 %282, 124
  %284 = and i64 %216, 8188
  %285 = add nuw nsw i64 %284, 7
  %286 = sub nsw i64 %285, %283
  %287 = add i64 %286, %281
  %288 = inttoptr i64 %287 to i32*
  %289 = load atomic i32, i32* %288 monotonic, align 4
  br label %290

290:                                              ; preds = %225, %280
  %291 = phi i32* [ %228, %225 ], [ %288, %280 ]
  %292 = load i32, i32* %291, align 4
  %293 = zext i32 %292 to i64
  %294 = or i64 %169, %293
  %295 = and i64 %293, 1
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %399, label %297

297:                                              ; preds = %290
  %298 = add i64 %294, -1
  %299 = inttoptr i64 %298 to i32*
  %300 = load atomic i32, i32* %299 monotonic, align 4
  %301 = zext i32 %300 to i64
  %302 = or i64 %169, %301
  %303 = add i64 %302, 7
  %304 = inttoptr i64 %303 to i16*
  %305 = load atomic i16, i16* %304 monotonic, align 2
  %306 = icmp ugt i16 %305, 188
  br i1 %306, label %307, label %399

307:                                              ; preds = %297
  %308 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %116, align 8
  %309 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %308, null
  br i1 %309, label %315, label %310

310:                                              ; preds = %307
  %311 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %308, i64 %294) #5
  %312 = load i64, i64* %311, align 8
  %313 = add i64 %312, -1
  %314 = inttoptr i64 %313 to i32*
  br label %326

315:                                              ; preds = %307
  %316 = load i64*, i64** %151, align 8
  %317 = load i64*, i64** %79, align 8
  %318 = icmp eq i64* %316, %317
  br i1 %318, label %319, label %321

319:                                              ; preds = %315
  %320 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #5
  br label %321

321:                                              ; preds = %319, %315
  %322 = phi i64* [ %320, %319 ], [ %316, %315 ]
  %323 = ptrtoint i64* %322 to i64
  %324 = add i64 %323, 8
  %325 = inttoptr i64 %324 to i64*
  store i64* %325, i64** %151, align 8
  store i64 %294, i64* %322, align 8
  br label %326

326:                                              ; preds = %310, %321
  %327 = phi i32* [ %314, %310 ], [ %299, %321 ]
  %328 = phi i64 [ %312, %310 ], [ %294, %321 ]
  %329 = phi i64* [ %311, %310 ], [ %322, %321 ]
  %330 = and i64 %328, -4294967296
  %331 = load atomic i32, i32* %327 monotonic, align 4
  %332 = zext i32 %331 to i64
  %333 = or i64 %330, %332
  %334 = add i64 %333, 7
  %335 = inttoptr i64 %334 to i16*
  %336 = load atomic i16, i16* %335 monotonic, align 2
  %337 = icmp eq i16 %336, 1085
  br i1 %337, label %338, label %396

338:                                              ; preds = %326
  %339 = load %"class.v8::internal::AllocationSiteUsageContext"*, %"class.v8::internal::AllocationSiteUsageContext"** %6, align 8
  %340 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %339, i64 0, i32 0, i32 1, i32 0, i32 0
  %341 = load i64*, i64** %340, align 8
  %342 = icmp eq i64* %341, null
  br i1 %342, label %343, label %362

343:                                              ; preds = %338
  %344 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %339, i64 0, i32 1, i32 0, i32 0
  %345 = load i64*, i64** %344, align 8
  store i64* %345, i64** %340, align 8
  %346 = load i64, i64* %345, align 8
  %347 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %339, i64 0, i32 0, i32 0
  %348 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %347, align 8
  %349 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %348, i64 0, i32 31, i32 0
  %350 = load i64*, i64** %349, align 8
  %351 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %348, i64 0, i32 31, i32 1
  %352 = load i64*, i64** %351, align 8
  %353 = icmp eq i64* %350, %352
  br i1 %353, label %354, label %356

354:                                              ; preds = %343
  %355 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %348) #5
  br label %356

356:                                              ; preds = %354, %343
  %357 = phi i64* [ %355, %354 ], [ %350, %343 ]
  %358 = ptrtoint i64* %357 to i64
  %359 = add i64 %358, 8
  %360 = inttoptr i64 %359 to i64*
  store i64* %360, i64** %349, align 8
  store i64 %346, i64* %357, align 8
  %361 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %339, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %357, i64** %361, align 8
  br label %373

362:                                              ; preds = %338
  %363 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %339, i64 0, i32 0, i32 2, i32 0, i32 0
  %364 = load i64*, i64** %363, align 8
  %365 = load i64, i64* %364, align 8
  %366 = and i64 %365, -4294967296
  %367 = add i64 %365, 7
  %368 = inttoptr i64 %367 to i32*
  %369 = load i32, i32* %368, align 4
  %370 = zext i32 %369 to i64
  %371 = or i64 %366, %370
  store i64 %371, i64* %364, align 8
  %372 = load i64*, i64** %363, align 8
  br label %373

373:                                              ; preds = %362, %356
  %374 = phi i64* [ %372, %362 ], [ %357, %356 ]
  %375 = load i64, i64* %374, align 8
  %376 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %339, i64 0, i32 0, i32 0
  %377 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %376, align 8
  %378 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %377, i64 0, i32 31, i32 4
  %379 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %378, align 8
  %380 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %379, null
  br i1 %380, label %383, label %381

381:                                              ; preds = %373
  %382 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %379, i64 %375) #5
  br label %396

383:                                              ; preds = %373
  %384 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %377, i64 0, i32 31, i32 0
  %385 = load i64*, i64** %384, align 8
  %386 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %377, i64 0, i32 31, i32 1
  %387 = load i64*, i64** %386, align 8
  %388 = icmp eq i64* %385, %387
  br i1 %388, label %389, label %391

389:                                              ; preds = %383
  %390 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %377) #5
  br label %391

391:                                              ; preds = %389, %383
  %392 = phi i64* [ %390, %389 ], [ %385, %383 ]
  %393 = ptrtoint i64* %392 to i64
  %394 = add i64 %393, 8
  %395 = inttoptr i64 %394 to i64*
  store i64* %395, i64** %384, align 8
  store i64 %375, i64* %392, align 8
  br label %396

396:                                              ; preds = %391, %381, %326
  %397 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS0_26AllocationSiteUsageContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %0, i64* %329) #5
  %398 = icmp eq i64* %397, null
  br i1 %398, label %1065, label %409

399:                                              ; preds = %290, %297
  %400 = icmp eq i8 %181, 2
  br i1 %400, label %401, label %417

401:                                              ; preds = %399
  %402 = add i64 %294, 3
  %403 = inttoptr i64 %402 to i64*
  %404 = load i64, i64* %403, align 1
  %405 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %154) #5
  %406 = load i64, i64* %405, align 8
  %407 = add i64 %406, 3
  %408 = inttoptr i64 %407 to i64*
  store i64 %404, i64* %408, align 1
  br label %409

409:                                              ; preds = %396, %401
  %410 = phi %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* [ %5, %401 ], [ %4, %396 ]
  %411 = phi i64* [ %155, %401 ], [ %152, %396 ]
  %412 = phi i64* [ %405, %401 ], [ %397, %396 ]
  %413 = phi %"class.v8::internal::JSObject"* [ %156, %401 ], [ %153, %396 ]
  %414 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %410 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %414) #5
  %415 = load i64, i64* %72, align 8
  store i64 %415, i64* %411, align 8
  %416 = load i64, i64* %412, align 8
  call void @_ZN2v88internal8JSObject17FastPropertyAtPutENS0_10FieldIndexENS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::JSObject"* nonnull %413, i64 %222, i64 %416, i32 4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %414) #5
  br label %417

417:                                              ; preds = %409, %399
  %418 = add nuw nsw i64 %158, 1
  %419 = icmp eq i64 %418, %147
  br i1 %419, label %633, label %157

420:                                              ; preds = %98
  %421 = add i64 %84, 3
  %422 = inttoptr i64 %421 to i32*
  %423 = load i32, i32* %422, align 4
  %424 = zext i32 %423 to i64
  %425 = or i64 %85, %424
  %426 = and i64 %424, 1
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %449

428:                                              ; preds = %420
  %429 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %430 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %429, null
  br i1 %430, label %437, label %431

431:                                              ; preds = %428
  %432 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %429, i64 0, i32 0, i32 1
  %433 = load i8, i8* %432, align 8, !range !6
  %434 = icmp eq i8 %433, 0
  br i1 %434, label %437, label %435

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %429, i64 0, i32 1, i64 0
  br label %445

437:                                              ; preds = %431, %428
  %438 = and i64 %84, -262144
  %439 = or i64 %438, 16
  %440 = inttoptr i64 %439 to i64*
  %441 = load i64, i64* %440, align 16
  %442 = add i64 %441, -41416
  %443 = inttoptr i64 %442 to %"class.v8::internal::Isolate"*
  %444 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %443, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %445

445:                                              ; preds = %437, %435
  %446 = phi i64* [ %444, %437 ], [ %436, %435 ]
  %447 = getelementptr inbounds i64, i64* %446, i64 115
  %448 = load i64, i64* %447, align 8
  br label %449

449:                                              ; preds = %420, %445
  %450 = phi i64 [ %448, %445 ], [ %425, %420 ]
  %451 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %452 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %451, align 8
  %453 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %452, null
  br i1 %453, label %457, label %454

454:                                              ; preds = %449
  %455 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %452, i64 %450) #5
  %456 = load i64, i64* %455, align 8
  br label %467

457:                                              ; preds = %449
  %458 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %459 = icmp eq i64* %80, %97
  br i1 %459, label %460, label %462

460:                                              ; preds = %457
  %461 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #5
  br label %462

462:                                              ; preds = %460, %457
  %463 = phi i64* [ %461, %460 ], [ %97, %457 ]
  %464 = ptrtoint i64* %463 to i64
  %465 = add i64 %464, 8
  %466 = inttoptr i64 %465 to i64*
  store i64* %466, i64** %458, align 8
  store i64 %450, i64* %463, align 8
  br label %467

467:                                              ; preds = %454, %462
  %468 = phi i64 [ %456, %454 ], [ %450, %462 ]
  %469 = phi i64* [ %455, %454 ], [ %463, %462 ]
  %470 = add i64 %468, 15
  %471 = inttoptr i64 %470 to i32*
  %472 = load atomic i32, i32* %471 monotonic, align 4
  %473 = ashr i32 %472, 1
  %474 = sext i32 %473 to i64
  %475 = icmp eq i32 %473, 0
  br i1 %475, label %633, label %476

476:                                              ; preds = %467
  %477 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  br label %478

478:                                              ; preds = %631, %476
  %479 = phi i64 [ %468, %476 ], [ %632, %631 ]
  %480 = phi i64 [ 0, %476 ], [ %629, %631 ]
  %481 = load i64, i64* %22, align 8
  %482 = mul i64 %480, 51539607552
  %483 = add i64 %482, 103079215104
  %484 = ashr exact i64 %483, 32
  %485 = add nsw i64 %484, 7
  %486 = add i64 %479, %485
  %487 = inttoptr i64 %486 to i32*
  %488 = load atomic i32, i32* %487 monotonic, align 4
  %489 = and i64 %481, 4294967295
  %490 = icmp eq i64 %489, 0
  tail call void @llvm.assume(i1 %490) #5
  %491 = zext i32 %488 to i64
  %492 = or i64 %481, %491
  %493 = and i64 %491, 1
  %494 = icmp eq i64 %493, 0
  br i1 %494, label %628, label %495

495:                                              ; preds = %478
  %496 = add i64 %492, -1
  %497 = inttoptr i64 %496 to i32*
  %498 = load atomic i32, i32* %497 monotonic, align 4
  %499 = zext i32 %498 to i64
  %500 = or i64 %481, %499
  %501 = add i64 %500, 7
  %502 = inttoptr i64 %501 to i16*
  %503 = load atomic i16, i16* %502 monotonic, align 2
  %504 = icmp ugt i16 %503, 188
  br i1 %504, label %505, label %628

505:                                              ; preds = %495
  %506 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %451, align 8
  %507 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %506, null
  br i1 %507, label %513, label %508

508:                                              ; preds = %505
  %509 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %506, i64 %492) #5
  %510 = load i64, i64* %509, align 8
  %511 = add i64 %510, -1
  %512 = inttoptr i64 %511 to i32*
  br label %524

513:                                              ; preds = %505
  %514 = load i64*, i64** %477, align 8
  %515 = load i64*, i64** %79, align 8
  %516 = icmp eq i64* %514, %515
  br i1 %516, label %517, label %519

517:                                              ; preds = %513
  %518 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #5
  br label %519

519:                                              ; preds = %517, %513
  %520 = phi i64* [ %518, %517 ], [ %514, %513 ]
  %521 = ptrtoint i64* %520 to i64
  %522 = add i64 %521, 8
  %523 = inttoptr i64 %522 to i64*
  store i64* %523, i64** %477, align 8
  store i64 %492, i64* %520, align 8
  br label %524

524:                                              ; preds = %508, %519
  %525 = phi i32* [ %512, %508 ], [ %497, %519 ]
  %526 = phi i64 [ %510, %508 ], [ %492, %519 ]
  %527 = phi i64* [ %509, %508 ], [ %520, %519 ]
  %528 = and i64 %526, -4294967296
  %529 = load atomic i32, i32* %525 monotonic, align 4
  %530 = zext i32 %529 to i64
  %531 = or i64 %528, %530
  %532 = add i64 %531, 7
  %533 = inttoptr i64 %532 to i16*
  %534 = load atomic i16, i16* %533 monotonic, align 2
  %535 = icmp eq i16 %534, 1085
  br i1 %535, label %536, label %594

536:                                              ; preds = %524
  %537 = load %"class.v8::internal::AllocationSiteUsageContext"*, %"class.v8::internal::AllocationSiteUsageContext"** %6, align 8
  %538 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %537, i64 0, i32 0, i32 1, i32 0, i32 0
  %539 = load i64*, i64** %538, align 8
  %540 = icmp eq i64* %539, null
  br i1 %540, label %541, label %560

541:                                              ; preds = %536
  %542 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %537, i64 0, i32 1, i32 0, i32 0
  %543 = load i64*, i64** %542, align 8
  store i64* %543, i64** %538, align 8
  %544 = load i64, i64* %543, align 8
  %545 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %537, i64 0, i32 0, i32 0
  %546 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %545, align 8
  %547 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %546, i64 0, i32 31, i32 0
  %548 = load i64*, i64** %547, align 8
  %549 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %546, i64 0, i32 31, i32 1
  %550 = load i64*, i64** %549, align 8
  %551 = icmp eq i64* %548, %550
  br i1 %551, label %552, label %554

552:                                              ; preds = %541
  %553 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %546) #5
  br label %554

554:                                              ; preds = %552, %541
  %555 = phi i64* [ %553, %552 ], [ %548, %541 ]
  %556 = ptrtoint i64* %555 to i64
  %557 = add i64 %556, 8
  %558 = inttoptr i64 %557 to i64*
  store i64* %558, i64** %547, align 8
  store i64 %544, i64* %555, align 8
  %559 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %537, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %555, i64** %559, align 8
  br label %571

560:                                              ; preds = %536
  %561 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %537, i64 0, i32 0, i32 2, i32 0, i32 0
  %562 = load i64*, i64** %561, align 8
  %563 = load i64, i64* %562, align 8
  %564 = and i64 %563, -4294967296
  %565 = add i64 %563, 7
  %566 = inttoptr i64 %565 to i32*
  %567 = load i32, i32* %566, align 4
  %568 = zext i32 %567 to i64
  %569 = or i64 %564, %568
  store i64 %569, i64* %562, align 8
  %570 = load i64*, i64** %561, align 8
  br label %571

571:                                              ; preds = %560, %554
  %572 = phi i64* [ %570, %560 ], [ %555, %554 ]
  %573 = load i64, i64* %572, align 8
  %574 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %537, i64 0, i32 0, i32 0
  %575 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %574, align 8
  %576 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %575, i64 0, i32 31, i32 4
  %577 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %576, align 8
  %578 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %577, null
  br i1 %578, label %581, label %579

579:                                              ; preds = %571
  %580 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %577, i64 %573) #5
  br label %594

581:                                              ; preds = %571
  %582 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %575, i64 0, i32 31, i32 0
  %583 = load i64*, i64** %582, align 8
  %584 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %575, i64 0, i32 31, i32 1
  %585 = load i64*, i64** %584, align 8
  %586 = icmp eq i64* %583, %585
  br i1 %586, label %587, label %589

587:                                              ; preds = %581
  %588 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %575) #5
  br label %589

589:                                              ; preds = %587, %581
  %590 = phi i64* [ %588, %587 ], [ %583, %581 ]
  %591 = ptrtoint i64* %590 to i64
  %592 = add i64 %591, 8
  %593 = inttoptr i64 %592 to i64*
  store i64* %593, i64** %582, align 8
  store i64 %573, i64* %590, align 8
  br label %594

594:                                              ; preds = %589, %579, %524
  %595 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS0_26AllocationSiteUsageContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %0, i64* %527) #5
  %596 = icmp eq i64* %595, null
  br i1 %596, label %1065, label %597

597:                                              ; preds = %594
  %598 = load i64, i64* %469, align 8
  %599 = load i64, i64* %595, align 8
  %600 = add i64 %598, %485
  %601 = inttoptr i64 %600 to i32*
  %602 = trunc i64 %599 to i32
  store atomic volatile i32 %602, i32* %601 monotonic, align 4
  %603 = and i64 %599, 1
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %628, label %605

605:                                              ; preds = %597
  %606 = and i64 %598, -262144
  %607 = or i64 %606, 8
  %608 = inttoptr i64 %607 to i64*
  %609 = load i64, i64* %608, align 8
  %610 = and i64 %609, 262144
  %611 = icmp eq i64 %610, 0
  br i1 %611, label %616, label %612

612:                                              ; preds = %605
  %613 = or i64 %606, 16
  %614 = inttoptr i64 %613 to %"class.v8::internal::Heap"**
  %615 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %614, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %615, i64 %598, i64 %600, i64 %599) #5
  br label %616

616:                                              ; preds = %612, %605
  %617 = and i64 %599, -262144
  %618 = or i64 %617, 8
  %619 = inttoptr i64 %618 to i64*
  %620 = load i64, i64* %619, align 8
  %621 = and i64 %620, 24
  %622 = icmp eq i64 %621, 0
  br i1 %622, label %628, label %623

623:                                              ; preds = %616
  %624 = load i64, i64* %608, align 8
  %625 = and i64 %624, 24
  %626 = icmp eq i64 %625, 0
  br i1 %626, label %627, label %628

627:                                              ; preds = %623
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %598, i64 %600, i64 %599) #5
  br label %628

628:                                              ; preds = %478, %495, %597, %616, %623, %627
  %629 = add i64 %480, 1
  %630 = icmp eq i64 %629, %474
  br i1 %630, label %633, label %631

631:                                              ; preds = %628
  %632 = load i64, i64* %469, align 8
  br label %478

633:                                              ; preds = %628, %417, %467, %131
  %634 = load i64, i64* %72, align 8
  %635 = load i64, i64* %22, align 8
  %636 = add i64 %634, 7
  %637 = inttoptr i64 %636 to i32*
  %638 = load i32, i32* %637, align 4
  %639 = and i64 %635, 4294967295
  %640 = icmp eq i64 %639, 0
  call void @llvm.assume(i1 %640) #5
  %641 = zext i32 %638 to i64
  %642 = or i64 %635, %641
  %643 = add i64 %642, 3
  %644 = inttoptr i64 %643 to i32*
  %645 = load i32, i32* %644, align 4
  %646 = icmp ult i32 %645, 2
  br i1 %646, label %650, label %647

647:                                              ; preds = %633
  %648 = add i64 %634, -1
  %649 = inttoptr i64 %648 to i32*
  br label %652

650:                                              ; preds = %633
  %651 = ptrtoint i64* %72 to i64
  br label %1065

652:                                              ; preds = %647, %75
  %653 = phi i32* [ %649, %647 ], [ %87, %75 ]
  %654 = phi i64 [ %635, %647 ], [ %85, %75 ]
  %655 = phi i64 [ %634, %647 ], [ %84, %75 ]
  %656 = load atomic i32, i32* %653 monotonic, align 4
  %657 = and i64 %654, 4294967295
  %658 = icmp eq i64 %657, 0
  call void @llvm.assume(i1 %658) #5
  %659 = zext i32 %656 to i64
  %660 = or i64 %654, %659
  %661 = add i64 %660, 10
  %662 = inttoptr i64 %661 to i8*
  %663 = load i8, i8* %662, align 1
  %664 = lshr i8 %663, 2
  switch i8 %664, label %1063 [
    i8 2, label %665
    i8 10, label %665
    i8 8, label %665
    i8 6, label %665
    i8 11, label %665
    i8 9, label %665
    i8 7, label %665
    i8 3, label %665
    i8 12, label %870
    i8 13, label %1060
    i8 14, label %1060
    i8 15, label %1061
    i8 16, label %1061
    i8 17, label %1062
    i8 18, label %1062
    i8 19, label %1062
    i8 20, label %1062
    i8 21, label %1062
    i8 22, label %1062
    i8 23, label %1062
    i8 24, label %1062
    i8 25, label %1062
    i8 26, label %1062
    i8 27, label %1062
    i8 28, label %1062
    i8 29, label %1062
    i8 30, label %1062
    i8 31, label %1062
    i8 32, label %1062
    i8 33, label %1062
    i8 34, label %1062
    i8 35, label %1062
    i8 36, label %1062
    i8 37, label %1062
    i8 38, label %1062
  ]

665:                                              ; preds = %652, %652, %652, %652, %652, %652, %652, %652
  %666 = add i64 %655, 7
  %667 = inttoptr i64 %666 to i32*
  %668 = load i32, i32* %667, align 4
  %669 = zext i32 %668 to i64
  %670 = or i64 %654, %669
  %671 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %672 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %671, align 8
  %673 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %672, null
  br i1 %673, label %677, label %674

674:                                              ; preds = %665
  %675 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %672, i64 %670) #5
  %676 = load i64, i64* %675, align 8
  br label %689

677:                                              ; preds = %665
  %678 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %679 = load i64*, i64** %678, align 8
  %680 = load i64*, i64** %79, align 8
  %681 = icmp eq i64* %679, %680
  br i1 %681, label %682, label %684

682:                                              ; preds = %677
  %683 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #5
  br label %684

684:                                              ; preds = %682, %677
  %685 = phi i64* [ %683, %682 ], [ %679, %677 ]
  %686 = ptrtoint i64* %685 to i64
  %687 = add i64 %686, 8
  %688 = inttoptr i64 %687 to i64*
  store i64* %688, i64** %678, align 8
  store i64 %670, i64* %685, align 8
  br label %689

689:                                              ; preds = %674, %684
  %690 = phi i64 [ %676, %674 ], [ %670, %684 ]
  %691 = phi i64* [ %675, %674 ], [ %685, %684 ]
  %692 = load i64, i64* %22, align 8
  %693 = add i64 %690, -1
  %694 = inttoptr i64 %693 to i32*
  %695 = load atomic i32, i32* %694 monotonic, align 4
  %696 = and i64 %692, 4294967295
  %697 = icmp eq i64 %696, 0
  call void @llvm.assume(i1 %697) #5
  %698 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 13
  %699 = load i64, i64* %698, align 8
  %700 = trunc i64 %699 to i32
  %701 = icmp eq i32 %695, %700
  br i1 %701, label %1063, label %702

702:                                              ; preds = %689
  %703 = add i64 %690, 3
  %704 = inttoptr i64 %703 to i32*
  %705 = load i32, i32* %704, align 4
  %706 = icmp sgt i32 %705, 1
  br i1 %706, label %707, label %1063

707:                                              ; preds = %702
  %708 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  br label %709

709:                                              ; preds = %868, %707
  %710 = phi i64 [ %692, %707 ], [ %869, %868 ]
  %711 = phi i64 [ 0, %707 ], [ %860, %868 ]
  %712 = phi i64 [ %690, %707 ], [ %861, %868 ]
  %713 = trunc i64 %711 to i32
  %714 = shl i32 %713, 2
  %715 = sext i32 %714 to i64
  %716 = add nsw i64 %715, 7
  %717 = add i64 %716, %712
  %718 = inttoptr i64 %717 to i32*
  %719 = load atomic i32, i32* %718 monotonic, align 4
  %720 = and i64 %710, 4294967295
  %721 = icmp eq i64 %720, 0
  call void @llvm.assume(i1 %721) #5
  %722 = zext i32 %719 to i64
  %723 = or i64 %710, %722
  %724 = and i64 %722, 1
  %725 = icmp eq i64 %724, 0
  br i1 %725, label %859, label %726

726:                                              ; preds = %709
  %727 = add i64 %723, -1
  %728 = inttoptr i64 %727 to i32*
  %729 = load atomic i32, i32* %728 monotonic, align 4
  %730 = zext i32 %729 to i64
  %731 = or i64 %710, %730
  %732 = add i64 %731, 7
  %733 = inttoptr i64 %732 to i16*
  %734 = load atomic i16, i16* %733 monotonic, align 2
  %735 = icmp ugt i16 %734, 188
  br i1 %735, label %736, label %859

736:                                              ; preds = %726
  %737 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %671, align 8
  %738 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %737, null
  br i1 %738, label %744, label %739

739:                                              ; preds = %736
  %740 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %737, i64 %723) #5
  %741 = load i64, i64* %740, align 8
  %742 = add i64 %741, -1
  %743 = inttoptr i64 %742 to i32*
  br label %755

744:                                              ; preds = %736
  %745 = load i64*, i64** %708, align 8
  %746 = load i64*, i64** %79, align 8
  %747 = icmp eq i64* %745, %746
  br i1 %747, label %748, label %750

748:                                              ; preds = %744
  %749 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #5
  br label %750

750:                                              ; preds = %748, %744
  %751 = phi i64* [ %749, %748 ], [ %745, %744 ]
  %752 = ptrtoint i64* %751 to i64
  %753 = add i64 %752, 8
  %754 = inttoptr i64 %753 to i64*
  store i64* %754, i64** %708, align 8
  store i64 %723, i64* %751, align 8
  br label %755

755:                                              ; preds = %739, %750
  %756 = phi i32* [ %743, %739 ], [ %728, %750 ]
  %757 = phi i64 [ %741, %739 ], [ %723, %750 ]
  %758 = phi i64* [ %740, %739 ], [ %751, %750 ]
  %759 = and i64 %757, -4294967296
  %760 = load atomic i32, i32* %756 monotonic, align 4
  %761 = zext i32 %760 to i64
  %762 = or i64 %759, %761
  %763 = add i64 %762, 7
  %764 = inttoptr i64 %763 to i16*
  %765 = load atomic i16, i16* %764 monotonic, align 2
  %766 = icmp eq i16 %765, 1085
  br i1 %766, label %767, label %825

767:                                              ; preds = %755
  %768 = load %"class.v8::internal::AllocationSiteUsageContext"*, %"class.v8::internal::AllocationSiteUsageContext"** %6, align 8
  %769 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %768, i64 0, i32 0, i32 1, i32 0, i32 0
  %770 = load i64*, i64** %769, align 8
  %771 = icmp eq i64* %770, null
  br i1 %771, label %772, label %791

772:                                              ; preds = %767
  %773 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %768, i64 0, i32 1, i32 0, i32 0
  %774 = load i64*, i64** %773, align 8
  store i64* %774, i64** %769, align 8
  %775 = load i64, i64* %774, align 8
  %776 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %768, i64 0, i32 0, i32 0
  %777 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %776, align 8
  %778 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %777, i64 0, i32 31, i32 0
  %779 = load i64*, i64** %778, align 8
  %780 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %777, i64 0, i32 31, i32 1
  %781 = load i64*, i64** %780, align 8
  %782 = icmp eq i64* %779, %781
  br i1 %782, label %783, label %785

783:                                              ; preds = %772
  %784 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %777) #5
  br label %785

785:                                              ; preds = %783, %772
  %786 = phi i64* [ %784, %783 ], [ %779, %772 ]
  %787 = ptrtoint i64* %786 to i64
  %788 = add i64 %787, 8
  %789 = inttoptr i64 %788 to i64*
  store i64* %789, i64** %778, align 8
  store i64 %775, i64* %786, align 8
  %790 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %768, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %786, i64** %790, align 8
  br label %802

791:                                              ; preds = %767
  %792 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %768, i64 0, i32 0, i32 2, i32 0, i32 0
  %793 = load i64*, i64** %792, align 8
  %794 = load i64, i64* %793, align 8
  %795 = and i64 %794, -4294967296
  %796 = add i64 %794, 7
  %797 = inttoptr i64 %796 to i32*
  %798 = load i32, i32* %797, align 4
  %799 = zext i32 %798 to i64
  %800 = or i64 %795, %799
  store i64 %800, i64* %793, align 8
  %801 = load i64*, i64** %792, align 8
  br label %802

802:                                              ; preds = %791, %785
  %803 = phi i64* [ %801, %791 ], [ %786, %785 ]
  %804 = load i64, i64* %803, align 8
  %805 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %768, i64 0, i32 0, i32 0
  %806 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %805, align 8
  %807 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %806, i64 0, i32 31, i32 4
  %808 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %807, align 8
  %809 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %808, null
  br i1 %809, label %812, label %810

810:                                              ; preds = %802
  %811 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %808, i64 %804) #5
  br label %825

812:                                              ; preds = %802
  %813 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %806, i64 0, i32 31, i32 0
  %814 = load i64*, i64** %813, align 8
  %815 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %806, i64 0, i32 31, i32 1
  %816 = load i64*, i64** %815, align 8
  %817 = icmp eq i64* %814, %816
  br i1 %817, label %818, label %820

818:                                              ; preds = %812
  %819 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %806) #5
  br label %820

820:                                              ; preds = %818, %812
  %821 = phi i64* [ %819, %818 ], [ %814, %812 ]
  %822 = ptrtoint i64* %821 to i64
  %823 = add i64 %822, 8
  %824 = inttoptr i64 %823 to i64*
  store i64* %824, i64** %813, align 8
  store i64 %804, i64* %821, align 8
  br label %825

825:                                              ; preds = %820, %810, %755
  %826 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS0_26AllocationSiteUsageContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %0, i64* %758) #5
  %827 = icmp eq i64* %826, null
  br i1 %827, label %1065, label %828

828:                                              ; preds = %825
  %829 = load i64, i64* %691, align 8
  %830 = load i64, i64* %826, align 8
  %831 = add i64 %829, %716
  %832 = inttoptr i64 %831 to i32*
  %833 = trunc i64 %830 to i32
  store atomic volatile i32 %833, i32* %832 monotonic, align 4
  %834 = and i64 %830, 1
  %835 = icmp eq i64 %834, 0
  br i1 %835, label %859, label %836

836:                                              ; preds = %828
  %837 = and i64 %829, -262144
  %838 = or i64 %837, 8
  %839 = inttoptr i64 %838 to i64*
  %840 = load i64, i64* %839, align 8
  %841 = and i64 %840, 262144
  %842 = icmp eq i64 %841, 0
  br i1 %842, label %847, label %843

843:                                              ; preds = %836
  %844 = or i64 %837, 16
  %845 = inttoptr i64 %844 to %"class.v8::internal::Heap"**
  %846 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %845, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %846, i64 %829, i64 %831, i64 %830) #5
  br label %847

847:                                              ; preds = %843, %836
  %848 = and i64 %830, -262144
  %849 = or i64 %848, 8
  %850 = inttoptr i64 %849 to i64*
  %851 = load i64, i64* %850, align 8
  %852 = and i64 %851, 24
  %853 = icmp eq i64 %852, 0
  br i1 %853, label %859, label %854

854:                                              ; preds = %847
  %855 = load i64, i64* %839, align 8
  %856 = and i64 %855, 24
  %857 = icmp eq i64 %856, 0
  br i1 %857, label %858, label %859

858:                                              ; preds = %854
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %829, i64 %831, i64 %830) #5
  br label %859

859:                                              ; preds = %709, %726, %828, %847, %854, %858
  %860 = add nuw nsw i64 %711, 1
  %861 = load i64, i64* %691, align 8
  %862 = add i64 %861, 3
  %863 = inttoptr i64 %862 to i32*
  %864 = load i32, i32* %863, align 4
  %865 = ashr i32 %864, 1
  %866 = sext i32 %865 to i64
  %867 = icmp slt i64 %860, %866
  br i1 %867, label %868, label %1063

868:                                              ; preds = %859
  %869 = load i64, i64* %22, align 8
  br label %709

870:                                              ; preds = %652
  %871 = add i64 %655, 7
  %872 = inttoptr i64 %871 to i32*
  %873 = load i32, i32* %872, align 4
  %874 = zext i32 %873 to i64
  %875 = or i64 %654, %874
  %876 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %877 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %876, align 8
  %878 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %877, null
  br i1 %878, label %882, label %879

879:                                              ; preds = %870
  %880 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %877, i64 %875) #5
  %881 = load i64, i64* %880, align 8
  br label %894

882:                                              ; preds = %870
  %883 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %884 = load i64*, i64** %883, align 8
  %885 = load i64*, i64** %79, align 8
  %886 = icmp eq i64* %884, %885
  br i1 %886, label %887, label %889

887:                                              ; preds = %882
  %888 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #5
  br label %889

889:                                              ; preds = %887, %882
  %890 = phi i64* [ %888, %887 ], [ %884, %882 ]
  %891 = ptrtoint i64* %890 to i64
  %892 = add i64 %891, 8
  %893 = inttoptr i64 %892 to i64*
  store i64* %893, i64** %883, align 8
  store i64 %875, i64* %890, align 8
  br label %894

894:                                              ; preds = %879, %889
  %895 = phi i64 [ %881, %879 ], [ %875, %889 ]
  %896 = phi i64* [ %880, %879 ], [ %890, %889 ]
  %897 = add i64 %895, 15
  %898 = inttoptr i64 %897 to i32*
  %899 = load atomic i32, i32* %898 monotonic, align 4
  %900 = ashr i32 %899, 1
  %901 = sext i32 %900 to i64
  %902 = icmp eq i32 %900, 0
  br i1 %902, label %1063, label %903

903:                                              ; preds = %894
  %904 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  br label %905

905:                                              ; preds = %1058, %903
  %906 = phi i64 [ %895, %903 ], [ %1059, %1058 ]
  %907 = phi i64 [ 0, %903 ], [ %1056, %1058 ]
  %908 = load i64, i64* %22, align 8
  %909 = mul i64 %907, 51539607552
  %910 = add i64 %909, 85899345920
  %911 = ashr exact i64 %910, 32
  %912 = add nsw i64 %911, 7
  %913 = add i64 %906, %912
  %914 = inttoptr i64 %913 to i32*
  %915 = load atomic i32, i32* %914 monotonic, align 4
  %916 = and i64 %908, 4294967295
  %917 = icmp eq i64 %916, 0
  call void @llvm.assume(i1 %917) #5
  %918 = zext i32 %915 to i64
  %919 = or i64 %908, %918
  %920 = and i64 %918, 1
  %921 = icmp eq i64 %920, 0
  br i1 %921, label %1055, label %922

922:                                              ; preds = %905
  %923 = add i64 %919, -1
  %924 = inttoptr i64 %923 to i32*
  %925 = load atomic i32, i32* %924 monotonic, align 4
  %926 = zext i32 %925 to i64
  %927 = or i64 %908, %926
  %928 = add i64 %927, 7
  %929 = inttoptr i64 %928 to i16*
  %930 = load atomic i16, i16* %929 monotonic, align 2
  %931 = icmp ugt i16 %930, 188
  br i1 %931, label %932, label %1055

932:                                              ; preds = %922
  %933 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %876, align 8
  %934 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %933, null
  br i1 %934, label %940, label %935

935:                                              ; preds = %932
  %936 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %933, i64 %919) #5
  %937 = load i64, i64* %936, align 8
  %938 = add i64 %937, -1
  %939 = inttoptr i64 %938 to i32*
  br label %951

940:                                              ; preds = %932
  %941 = load i64*, i64** %904, align 8
  %942 = load i64*, i64** %79, align 8
  %943 = icmp eq i64* %941, %942
  br i1 %943, label %944, label %946

944:                                              ; preds = %940
  %945 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #5
  br label %946

946:                                              ; preds = %944, %940
  %947 = phi i64* [ %945, %944 ], [ %941, %940 ]
  %948 = ptrtoint i64* %947 to i64
  %949 = add i64 %948, 8
  %950 = inttoptr i64 %949 to i64*
  store i64* %950, i64** %904, align 8
  store i64 %919, i64* %947, align 8
  br label %951

951:                                              ; preds = %935, %946
  %952 = phi i32* [ %939, %935 ], [ %924, %946 ]
  %953 = phi i64 [ %937, %935 ], [ %919, %946 ]
  %954 = phi i64* [ %936, %935 ], [ %947, %946 ]
  %955 = and i64 %953, -4294967296
  %956 = load atomic i32, i32* %952 monotonic, align 4
  %957 = zext i32 %956 to i64
  %958 = or i64 %955, %957
  %959 = add i64 %958, 7
  %960 = inttoptr i64 %959 to i16*
  %961 = load atomic i16, i16* %960 monotonic, align 2
  %962 = icmp eq i16 %961, 1085
  br i1 %962, label %963, label %1021

963:                                              ; preds = %951
  %964 = load %"class.v8::internal::AllocationSiteUsageContext"*, %"class.v8::internal::AllocationSiteUsageContext"** %6, align 8
  %965 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %964, i64 0, i32 0, i32 1, i32 0, i32 0
  %966 = load i64*, i64** %965, align 8
  %967 = icmp eq i64* %966, null
  br i1 %967, label %968, label %987

968:                                              ; preds = %963
  %969 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %964, i64 0, i32 1, i32 0, i32 0
  %970 = load i64*, i64** %969, align 8
  store i64* %970, i64** %965, align 8
  %971 = load i64, i64* %970, align 8
  %972 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %964, i64 0, i32 0, i32 0
  %973 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %972, align 8
  %974 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %973, i64 0, i32 31, i32 0
  %975 = load i64*, i64** %974, align 8
  %976 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %973, i64 0, i32 31, i32 1
  %977 = load i64*, i64** %976, align 8
  %978 = icmp eq i64* %975, %977
  br i1 %978, label %979, label %981

979:                                              ; preds = %968
  %980 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %973) #5
  br label %981

981:                                              ; preds = %979, %968
  %982 = phi i64* [ %980, %979 ], [ %975, %968 ]
  %983 = ptrtoint i64* %982 to i64
  %984 = add i64 %983, 8
  %985 = inttoptr i64 %984 to i64*
  store i64* %985, i64** %974, align 8
  store i64 %971, i64* %982, align 8
  %986 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %964, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %982, i64** %986, align 8
  br label %998

987:                                              ; preds = %963
  %988 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %964, i64 0, i32 0, i32 2, i32 0, i32 0
  %989 = load i64*, i64** %988, align 8
  %990 = load i64, i64* %989, align 8
  %991 = and i64 %990, -4294967296
  %992 = add i64 %990, 7
  %993 = inttoptr i64 %992 to i32*
  %994 = load i32, i32* %993, align 4
  %995 = zext i32 %994 to i64
  %996 = or i64 %991, %995
  store i64 %996, i64* %989, align 8
  %997 = load i64*, i64** %988, align 8
  br label %998

998:                                              ; preds = %987, %981
  %999 = phi i64* [ %997, %987 ], [ %982, %981 ]
  %1000 = load i64, i64* %999, align 8
  %1001 = getelementptr inbounds %"class.v8::internal::AllocationSiteUsageContext", %"class.v8::internal::AllocationSiteUsageContext"* %964, i64 0, i32 0, i32 0
  %1002 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1001, align 8
  %1003 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1002, i64 0, i32 31, i32 4
  %1004 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %1003, align 8
  %1005 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1004, null
  br i1 %1005, label %1008, label %1006

1006:                                             ; preds = %998
  %1007 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1004, i64 %1000) #5
  br label %1021

1008:                                             ; preds = %998
  %1009 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1002, i64 0, i32 31, i32 0
  %1010 = load i64*, i64** %1009, align 8
  %1011 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1002, i64 0, i32 31, i32 1
  %1012 = load i64*, i64** %1011, align 8
  %1013 = icmp eq i64* %1010, %1012
  br i1 %1013, label %1014, label %1016

1014:                                             ; preds = %1008
  %1015 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1002) #5
  br label %1016

1016:                                             ; preds = %1014, %1008
  %1017 = phi i64* [ %1015, %1014 ], [ %1010, %1008 ]
  %1018 = ptrtoint i64* %1017 to i64
  %1019 = add i64 %1018, 8
  %1020 = inttoptr i64 %1019 to i64*
  store i64* %1020, i64** %1009, align 8
  store i64 %1000, i64* %1017, align 8
  br label %1021

1021:                                             ; preds = %1016, %1006, %951
  %1022 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_119JSObjectWalkVisitorINS0_26AllocationSiteUsageContextEE13StructureWalkENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::(anonymous namespace)::JSObjectWalkVisitor.1195"* %0, i64* %954) #5
  %1023 = icmp eq i64* %1022, null
  br i1 %1023, label %1065, label %1024

1024:                                             ; preds = %1021
  %1025 = load i64, i64* %896, align 8
  %1026 = load i64, i64* %1022, align 8
  %1027 = add i64 %1025, %912
  %1028 = inttoptr i64 %1027 to i32*
  %1029 = trunc i64 %1026 to i32
  store atomic volatile i32 %1029, i32* %1028 monotonic, align 4
  %1030 = and i64 %1026, 1
  %1031 = icmp eq i64 %1030, 0
  br i1 %1031, label %1055, label %1032

1032:                                             ; preds = %1024
  %1033 = and i64 %1025, -262144
  %1034 = or i64 %1033, 8
  %1035 = inttoptr i64 %1034 to i64*
  %1036 = load i64, i64* %1035, align 8
  %1037 = and i64 %1036, 262144
  %1038 = icmp eq i64 %1037, 0
  br i1 %1038, label %1043, label %1039

1039:                                             ; preds = %1032
  %1040 = or i64 %1033, 16
  %1041 = inttoptr i64 %1040 to %"class.v8::internal::Heap"**
  %1042 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1041, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1042, i64 %1025, i64 %1027, i64 %1026) #5
  br label %1043

1043:                                             ; preds = %1039, %1032
  %1044 = and i64 %1026, -262144
  %1045 = or i64 %1044, 8
  %1046 = inttoptr i64 %1045 to i64*
  %1047 = load i64, i64* %1046, align 8
  %1048 = and i64 %1047, 24
  %1049 = icmp eq i64 %1048, 0
  br i1 %1049, label %1055, label %1050

1050:                                             ; preds = %1043
  %1051 = load i64, i64* %1035, align 8
  %1052 = and i64 %1051, 24
  %1053 = icmp eq i64 %1052, 0
  br i1 %1053, label %1054, label %1055

1054:                                             ; preds = %1050
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1025, i64 %1027, i64 %1026) #5
  br label %1055

1055:                                             ; preds = %905, %922, %1024, %1043, %1050, %1054
  %1056 = add i64 %907, 1
  %1057 = icmp eq i64 %1056, %901
  br i1 %1057, label %1063, label %1058

1058:                                             ; preds = %1055
  %1059 = load i64, i64* %896, align 8
  br label %905

1060:                                             ; preds = %652, %652
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0)) #7
  unreachable

1061:                                             ; preds = %652, %652
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #7
  unreachable

1062:                                             ; preds = %652, %652, %652, %652, %652, %652, %652, %652, %652, %652, %652, %652, %652, %652, %652, %652, %652, %652, %652, %652, %652, %652
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #7
  unreachable

1063:                                             ; preds = %1055, %859, %894, %702, %689, %652
  %1064 = ptrtoint i64* %72 to i64
  br label %1065

1065:                                             ; preds = %594, %396, %1021, %825, %1063, %650
  %1066 = phi i64 [ %1064, %1063 ], [ %651, %650 ], [ 0, %825 ], [ 0, %1021 ], [ 0, %396 ], [ 0, %594 ]
  %1067 = icmp eq %"class.v8::internal::Isolate"* %9, null
  br i1 %1067, label %1080, label %1068

1068:                                             ; preds = %1065
  %1069 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %76, i64 0, i32 0
  %1070 = load i64*, i64** %1069, align 8
  store i64 %78, i64* %77, align 8
  %1071 = load i32, i32* %81, align 8
  %1072 = add nsw i32 %1071, -1
  store i32 %1072, i32* %81, align 8
  %1073 = load i64*, i64** %79, align 8
  %1074 = icmp eq i64* %1073, %80
  br i1 %1074, label %1077, label %1075

1075:                                             ; preds = %1068
  store i64* %80, i64** %79, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %9) #5
  %1076 = load i64*, i64** %1069, align 8
  br label %1077

1077:                                             ; preds = %1075, %1068
  %1078 = phi i64* [ %1076, %1075 ], [ %97, %1068 ]
  %1079 = phi i64* [ %80, %1075 ], [ %1070, %1068 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1078, i64* %1079) #5
  br label %1080

1080:                                             ; preds = %73, %1065, %1077, %18
  %1081 = phi i64 [ 0, %18 ], [ %74, %73 ], [ %1066, %1065 ], [ %1066, %1077 ]
  %1082 = inttoptr i64 %1081 to i64*
  ret i64* %1082
}

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal8JSRegExp3NewEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS_4base5FlagsINS1_4FlagEiEEj(%"class.v8::internal::Isolate"*, i64*, i32, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE31NewRegExpBoilerplateDescriptionENS0_6HandleINS0_10FixedArrayEEENS4_INS0_6StringEEENS0_3SmiE(%"class.v8::internal::FactoryBase"*, i64*, i64*, i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2146410443, i32 1073205}
!5 = !{!"branch_weights", i32 1073205, i32 2146410443}
!6 = !{i8 0, i8 2}
