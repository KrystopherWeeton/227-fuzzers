; ModuleID = '../../third_party/blink/renderer/platform/animation/compositor_transform_operations.cc'
source_filename = "../../third_party/blink/renderer/platform/animation/compositor_transform_operations.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::TransformOperations" = type { %"class.std::__1::vector", %"class.std::__1::unordered_map" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"*, %"class.std::__1::__compressed_pair" }
%"struct.gfx::TransformOperation" = type { i32, %"class.gfx::Transform", %union.anon }
%union.anon = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.anon.3, float }
%struct.anon.3 = type { float, float, float }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.gfx::TransformOperation"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.20", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { float }
%"class.blink::CompositorTransformOperations" = type { %"class.gfx::TransformOperations" }

@__const._ZN5blink29CompositorTransformOperations12AppendMatrixERK10SkMatrix44.transform = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(64) %"class.gfx::TransformOperations"* @_ZNK5blink29CompositorTransformOperations24AsGfxTransformOperationsEv(%"class.blink::CompositorTransformOperations"* readnone) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %0, i64 0, i32 0
  ret %"class.gfx::TransformOperations"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorTransformOperations29ReleaseGfxTransformOperationsEv(%"class.gfx::TransformOperations"* noalias sret, %"class.blink::CompositorTransformOperations"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %1, i64 0, i32 0
  tail call void @_ZN3gfx19TransformOperationsC1ERKS0_(%"class.gfx::TransformOperations"* %0, %"class.gfx::TransformOperations"* dereferenceable(64) %3) #4
  ret void
}

declare void @_ZN3gfx19TransformOperationsC1ERKS0_(%"class.gfx::TransformOperations"*, %"class.gfx::TransformOperations"* dereferenceable(64)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink29CompositorTransformOperations12CanBlendWithERKS0_(%"class.blink::CompositorTransformOperations"*, %"class.blink::CompositorTransformOperations"* dereferenceable(64)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK3gfx19TransformOperations12CanBlendWithERKS0_(%"class.gfx::TransformOperations"* %3, %"class.gfx::TransformOperations"* dereferenceable(64) %4) #4
  ret i1 %5
}

declare zeroext i1 @_ZNK3gfx19TransformOperations12CanBlendWithERKS0_(%"class.gfx::TransformOperations"*, %"class.gfx::TransformOperations"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorTransformOperations15AppendTranslateEddd(%"class.blink::CompositorTransformOperations"*, double, double, double) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %0, i64 0, i32 0
  %6 = fptrunc double %1 to float
  %7 = fptrunc double %2 to float
  %8 = fptrunc double %3 to float
  tail call void @_ZN3gfx19TransformOperations15AppendTranslateEfff(%"class.gfx::TransformOperations"* %5, float %6, float %7, float %8) #4
  ret void
}

declare void @_ZN3gfx19TransformOperations15AppendTranslateEfff(%"class.gfx::TransformOperations"*, float, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorTransformOperations12AppendRotateEdddd(%"class.blink::CompositorTransformOperations"*, double, double, double, double) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %0, i64 0, i32 0
  %7 = fptrunc double %1 to float
  %8 = fptrunc double %2 to float
  %9 = fptrunc double %3 to float
  %10 = fptrunc double %4 to float
  tail call void @_ZN3gfx19TransformOperations12AppendRotateEffff(%"class.gfx::TransformOperations"* %6, float %7, float %8, float %9, float %10) #4
  ret void
}

declare void @_ZN3gfx19TransformOperations12AppendRotateEffff(%"class.gfx::TransformOperations"*, float, float, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorTransformOperations11AppendScaleEddd(%"class.blink::CompositorTransformOperations"*, double, double, double) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %0, i64 0, i32 0
  %6 = fptrunc double %1 to float
  %7 = fptrunc double %2 to float
  %8 = fptrunc double %3 to float
  tail call void @_ZN3gfx19TransformOperations11AppendScaleEfff(%"class.gfx::TransformOperations"* %5, float %6, float %7, float %8) #4
  ret void
}

declare void @_ZN3gfx19TransformOperations11AppendScaleEfff(%"class.gfx::TransformOperations"*, float, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorTransformOperations11AppendSkewXEd(%"class.blink::CompositorTransformOperations"*, double) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %0, i64 0, i32 0
  %4 = fptrunc double %1 to float
  tail call void @_ZN3gfx19TransformOperations11AppendSkewXEf(%"class.gfx::TransformOperations"* %3, float %4) #4
  ret void
}

declare void @_ZN3gfx19TransformOperations11AppendSkewXEf(%"class.gfx::TransformOperations"*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorTransformOperations11AppendSkewYEd(%"class.blink::CompositorTransformOperations"*, double) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %0, i64 0, i32 0
  %4 = fptrunc double %1 to float
  tail call void @_ZN3gfx19TransformOperations11AppendSkewYEf(%"class.gfx::TransformOperations"* %3, float %4) #4
  ret void
}

declare void @_ZN3gfx19TransformOperations11AppendSkewYEf(%"class.gfx::TransformOperations"*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorTransformOperations10AppendSkewEdd(%"class.blink::CompositorTransformOperations"*, double, double) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %0, i64 0, i32 0
  %5 = fptrunc double %1 to float
  %6 = fptrunc double %2 to float
  tail call void @_ZN3gfx19TransformOperations10AppendSkewEff(%"class.gfx::TransformOperations"* %4, float %5, float %6) #4
  ret void
}

declare void @_ZN3gfx19TransformOperations10AppendSkewEff(%"class.gfx::TransformOperations"*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorTransformOperations17AppendPerspectiveEd(%"class.blink::CompositorTransformOperations"*, double) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %0, i64 0, i32 0
  %4 = fptrunc double %1 to float
  tail call void @_ZN3gfx19TransformOperations17AppendPerspectiveEf(%"class.gfx::TransformOperations"* %3, float %4) #4
  ret void
}

declare void @_ZN3gfx19TransformOperations17AppendPerspectiveEf(%"class.gfx::TransformOperations"*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorTransformOperations12AppendMatrixERK10SkMatrix44(%"class.blink::CompositorTransformOperations"*, %class.SkMatrix44* nocapture readonly dereferenceable(68)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %4) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN5blink29CompositorTransformOperations12AppendMatrixERK10SkMatrix44.transform to i8*), i64 68, i1 false)
  %5 = bitcast %class.SkMatrix44* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 %5, i64 65, i1 false)
  %6 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %0, i64 0, i32 0
  call void @_ZN3gfx19TransformOperations12AppendMatrixERKNS_9TransformE(%"class.gfx::TransformOperations"* %6, %"class.gfx::Transform"* nonnull dereferenceable(68) %3) #4
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %4) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN3gfx19TransformOperations12AppendMatrixERKNS_9TransformE(%"class.gfx::TransformOperations"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink29CompositorTransformOperations10IsIdentityEv(%"class.blink::CompositorTransformOperations"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK3gfx19TransformOperations10IsIdentityEv(%"class.gfx::TransformOperations"* %2) #4
  ret i1 %3
}

declare zeroext i1 @_ZNK3gfx19TransformOperations10IsIdentityEv(%"class.gfx::TransformOperations"*) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
