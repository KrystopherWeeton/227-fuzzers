; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/common/treecoder.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/common/treecoder.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.vp8_token_struct = type { i32, i32 }

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @vp8_tokens_from_tree(%struct.vp8_token_struct* nocapture, i8* nocapture readonly) local_unnamed_addr #0 {
  tail call fastcc void @tree2tok(%struct.vp8_token_struct* %0, i8* %1, i32 0, i32 0, i32 0)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc void @tree2tok(%struct.vp8_token_struct* nocapture, i8* nocapture readonly, i32, i32, i32) unnamed_addr #0 {
  %6 = shl nsw i32 %3, 1
  %7 = add nsw i32 %4, 1
  %8 = sext i32 %2 to i64
  %9 = add nsw i64 %8, 1
  %10 = getelementptr inbounds i8, i8* %1, i64 %8
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  %13 = icmp slt i8 %11, 1
  br i1 %13, label %14, label %19

14:                                               ; preds = %5
  %15 = sub nsw i32 0, %12
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.vp8_token_struct, %struct.vp8_token_struct* %0, i64 %16, i32 0
  store i32 %6, i32* %17, align 4
  %18 = getelementptr inbounds %struct.vp8_token_struct, %struct.vp8_token_struct* %0, i64 %16, i32 1
  store i32 %7, i32* %18, align 4
  br label %20

19:                                               ; preds = %5
  tail call fastcc void @tree2tok(%struct.vp8_token_struct* %0, i8* %1, i32 %12, i32 %6, i32 %7)
  br label %20

20:                                               ; preds = %19, %14
  %21 = or i32 %6, 1
  %22 = getelementptr inbounds i8, i8* %1, i64 %9
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp slt i8 %23, 1
  br i1 %25, label %27, label %26

26:                                               ; preds = %20
  tail call fastcc void @tree2tok(%struct.vp8_token_struct* %0, i8* %1, i32 %24, i32 %21, i32 %7)
  br label %32

27:                                               ; preds = %20
  %28 = sub nsw i32 0, %24
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %struct.vp8_token_struct, %struct.vp8_token_struct* %0, i64 %29, i32 0
  store i32 %21, i32* %30, align 4
  %31 = getelementptr inbounds %struct.vp8_token_struct, %struct.vp8_token_struct* %0, i64 %29, i32 1
  store i32 %7, i32* %31, align 4
  br label %32

32:                                               ; preds = %27, %26
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @vp8_tokens_from_tree_offset(%struct.vp8_token_struct* nocapture, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = sext i32 %2 to i64
  %5 = sub nsw i64 0, %4
  %6 = getelementptr inbounds %struct.vp8_token_struct, %struct.vp8_token_struct* %0, i64 %5
  tail call fastcc void @tree2tok(%struct.vp8_token_struct* %6, i8* %1, i32 0, i32 0, i32 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_tree_probs_from_distribution(i32, %struct.vp8_token_struct* nocapture readonly, i8* nocapture readonly, i8* nocapture, [2 x i32]* nocapture, i32* nocapture readonly, i32, i32) local_unnamed_addr #1 {
  %9 = add i32 %0, -1
  %10 = bitcast [2 x i32]* %4 to i8*
  %11 = icmp sgt i32 %9, 1
  %12 = select i1 %11, i32 %9, i32 1
  %13 = zext i32 %12 to i64
  %14 = shl nuw nsw i64 %13, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 %14, i1 false) #3
  %15 = sext i32 %0 to i64
  br label %16

16:                                               ; preds = %42, %8
  %17 = phi i64 [ 0, %8 ], [ %43, %42 ]
  %18 = getelementptr inbounds %struct.vp8_token_struct, %struct.vp8_token_struct* %1, i64 %17, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.vp8_token_struct, %struct.vp8_token_struct* %1, i64 %17, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds i32, i32* %5, i64 %17
  %23 = load i32, i32* %22, align 4
  br label %24

24:                                               ; preds = %24, %16
  %25 = phi i32 [ %19, %16 ], [ %27, %24 ]
  %26 = phi i8 [ 0, %16 ], [ %40, %24 ]
  %27 = add nsw i32 %25, -1
  %28 = lshr i32 %21, %27
  %29 = and i32 %28, 1
  %30 = sext i8 %26 to i32
  %31 = ashr i32 %30, 1
  %32 = sext i32 %31 to i64
  %33 = zext i32 %29 to i64
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 %32, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = add i32 %35, %23
  store i32 %36, i32* %34, align 4
  %37 = add nuw nsw i32 %29, %30
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %2, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = icmp sgt i8 %40, 0
  br i1 %41, label %24, label %42

42:                                               ; preds = %24
  %43 = add nuw nsw i64 %17, 1
  %44 = icmp slt i64 %43, %15
  br i1 %44, label %16, label %45

45:                                               ; preds = %42
  %46 = icmp eq i32 %7, 0
  %47 = sext i32 %9 to i64
  br label %48

48:                                               ; preds = %45, %67
  %49 = phi i64 [ 0, %45 ], [ %70, %67 ]
  %50 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 %49, i64 0
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 %49, i64 1
  %53 = load i32, i32* %52, align 4
  %54 = add i32 %53, %51
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %48
  %57 = mul i32 %51, %6
  %58 = lshr i32 %54, 1
  %59 = select i1 %46, i32 0, i32 %58
  %60 = add i32 %59, %57
  %61 = udiv i32 %60, %54
  %62 = icmp ult i32 %61, 256
  %63 = icmp ugt i32 %54, %60
  %64 = select i1 %63, i32 1, i32 %61
  %65 = select i1 %62, i32 %64, i32 255
  %66 = trunc i32 %65 to i8
  br label %67

67:                                               ; preds = %48, %56
  %68 = phi i8 [ %66, %56 ], [ -128, %48 ]
  %69 = getelementptr inbounds i8, i8* %3, i64 %49
  store i8 %68, i8* %69, align 1
  %70 = add nuw nsw i64 %49, 1
  %71 = icmp slt i64 %70, %47
  br i1 %71, label %48, label %72

72:                                               ; preds = %67
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
