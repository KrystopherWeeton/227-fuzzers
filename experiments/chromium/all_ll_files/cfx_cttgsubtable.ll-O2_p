; ModuleID = '../../third_party/pdfium/core/fpdfapi/font/cfx_cttgsubtable.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/font/cfx_cttgsubtable.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_CTTGSUBTable = type { %"class.std::__1::set", %"class.std::__1::vector", %"class.std::__1::vector.21", %"class.std::__1::vector.28" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.CFX_CTTGSUBTable::TScriptRecord"*, %"struct.CFX_CTTGSUBTable::TScriptRecord"*, %"class.std::__1::__compressed_pair.16" }
%"struct.CFX_CTTGSUBTable::TScriptRecord" = type { i32, i16, %"class.std::__1::vector.4" }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"struct.CFX_CTTGSUBTable::TLangSysRecord"*, %"struct.CFX_CTTGSUBTable::TLangSysRecord"*, %"class.std::__1::__compressed_pair.11" }
%"struct.CFX_CTTGSUBTable::TLangSysRecord" = type { i32, i16, i16, %"class.std::__1::vector.6" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i16*, i16*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i16* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.CFX_CTTGSUBTable::TLangSysRecord"* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.CFX_CTTGSUBTable::TScriptRecord"* }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"struct.CFX_CTTGSUBTable::TFeatureRecord"*, %"struct.CFX_CTTGSUBTable::TFeatureRecord"*, %"class.std::__1::__compressed_pair.23" }
%"struct.CFX_CTTGSUBTable::TFeatureRecord" = type { i32, i16, %"class.std::__1::vector.6" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.CFX_CTTGSUBTable::TFeatureRecord"* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.CFX_CTTGSUBTable::TLookup"*, %"struct.CFX_CTTGSUBTable::TLookup"*, %"class.std::__1::__compressed_pair.37" }
%"struct.CFX_CTTGSUBTable::TLookup" = type { i16, i16, %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.CFX_CTTGSUBTable::TSubTableBase"* }
%"struct.CFX_CTTGSUBTable::TSubTableBase" = type { i32 (...)**, i16, %"class.std::__1::unique_ptr.47" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* }
%"struct.CFX_CTTGSUBTable::TCoverageFormatBase" = type <{ i32 (...)**, i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.CFX_CTTGSUBTable::TLookup"* }
%"struct.CFX_CTTGSUBTable::TRangeRecord" = type { i16, i16, i16 }
%"struct.CFX_CTTGSUBTable::TCoverageFormat1" = type { %"struct.CFX_CTTGSUBTable::TCoverageFormatBase.base", %"class.std::__1::vector.6" }
%"struct.CFX_CTTGSUBTable::TCoverageFormatBase.base" = type <{ i32 (...)**, i16 }>
%"struct.CFX_CTTGSUBTable::TCoverageFormat2" = type { %"struct.CFX_CTTGSUBTable::TCoverageFormatBase.base", %"class.std::__1::vector.56" }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"struct.CFX_CTTGSUBTable::TRangeRecord"*, %"struct.CFX_CTTGSUBTable::TRangeRecord"*, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.CFX_CTTGSUBTable::TRangeRecord"* }
%"struct.CFX_CTTGSUBTable::TDevice" = type { i16, i16, i16 }
%"struct.CFX_CTTGSUBTable::TSubTable1" = type <{ %"struct.CFX_CTTGSUBTable::TSubTableBase", i16, [6 x i8] }>
%"struct.CFX_CTTGSUBTable::TSubTable2" = type { %"struct.CFX_CTTGSUBTable::TSubTableBase", %"class.std::__1::vector.6" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTVN16CFX_CTTGSUBTable16TCoverageFormat1E = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.CFX_CTTGSUBTable::TCoverageFormat1"*)* @_ZN16CFX_CTTGSUBTable16TCoverageFormat1D2Ev to i8*), i8* bitcast (void (%"struct.CFX_CTTGSUBTable::TCoverageFormat1"*)* @_ZN16CFX_CTTGSUBTable16TCoverageFormat1D0Ev to i8*)] }, align 8
@_ZTVN16CFX_CTTGSUBTable16TCoverageFormat2E = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.CFX_CTTGSUBTable::TCoverageFormat2"*)* @_ZN16CFX_CTTGSUBTable16TCoverageFormat2D2Ev to i8*), i8* bitcast (void (%"struct.CFX_CTTGSUBTable::TCoverageFormat2"*)* @_ZN16CFX_CTTGSUBTable16TCoverageFormat2D0Ev to i8*)] }, align 8
@_ZTVN16CFX_CTTGSUBTable13TSubTableBaseE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)* @_ZN16CFX_CTTGSUBTable13TSubTableBaseD2Ev to i8*), i8* bitcast (void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)* @_ZN16CFX_CTTGSUBTable13TSubTableBaseD0Ev to i8*)] }, align 8
@_ZTVN16CFX_CTTGSUBTable10TSubTable1E = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)* @_ZN16CFX_CTTGSUBTable13TSubTableBaseD2Ev to i8*), i8* bitcast (void (%"struct.CFX_CTTGSUBTable::TSubTable1"*)* @_ZN16CFX_CTTGSUBTable10TSubTable1D0Ev to i8*)] }, align 8
@_ZTVN16CFX_CTTGSUBTable10TSubTable2E = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.CFX_CTTGSUBTable::TSubTable2"*)* @_ZN16CFX_CTTGSUBTable10TSubTable2D2Ev to i8*), i8* bitcast (void (%"struct.CFX_CTTGSUBTable::TSubTable2"*)* @_ZN16CFX_CTTGSUBTable10TSubTable2D0Ev to i8*)] }, align 8

@_ZN16CFX_CTTGSUBTableC1EPKh = hidden unnamed_addr alias void (%class.CFX_CTTGSUBTable*, i8*), void (%class.CFX_CTTGSUBTable*, i8*)* @_ZN16CFX_CTTGSUBTableC2EPKh
@_ZN16CFX_CTTGSUBTableD1Ev = hidden unnamed_addr alias void (%class.CFX_CTTGSUBTable*), void (%class.CFX_CTTGSUBTable*)* @_ZN16CFX_CTTGSUBTableD2Ev
@_ZN16CFX_CTTGSUBTable14TLangSysRecordC1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TLangSysRecord"*), void (%"struct.CFX_CTTGSUBTable::TLangSysRecord"*)* @_ZN16CFX_CTTGSUBTable14TLangSysRecordC2Ev
@_ZN16CFX_CTTGSUBTable14TLangSysRecordD1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TLangSysRecord"*), void (%"struct.CFX_CTTGSUBTable::TLangSysRecord"*)* @_ZN16CFX_CTTGSUBTable14TLangSysRecordD2Ev
@_ZN16CFX_CTTGSUBTable13TScriptRecordC1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TScriptRecord"*), void (%"struct.CFX_CTTGSUBTable::TScriptRecord"*)* @_ZN16CFX_CTTGSUBTable13TScriptRecordC2Ev
@_ZN16CFX_CTTGSUBTable13TScriptRecordD1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TScriptRecord"*), void (%"struct.CFX_CTTGSUBTable::TScriptRecord"*)* @_ZN16CFX_CTTGSUBTable13TScriptRecordD2Ev
@_ZN16CFX_CTTGSUBTable14TFeatureRecordC1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TFeatureRecord"*), void (%"struct.CFX_CTTGSUBTable::TFeatureRecord"*)* @_ZN16CFX_CTTGSUBTable14TFeatureRecordC2Ev
@_ZN16CFX_CTTGSUBTable14TFeatureRecordD1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TFeatureRecord"*), void (%"struct.CFX_CTTGSUBTable::TFeatureRecord"*)* @_ZN16CFX_CTTGSUBTable14TFeatureRecordD2Ev
@_ZN16CFX_CTTGSUBTable12TRangeRecordC1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TRangeRecord"*), void (%"struct.CFX_CTTGSUBTable::TRangeRecord"*)* @_ZN16CFX_CTTGSUBTable12TRangeRecordC2Ev
@_ZN16CFX_CTTGSUBTable16TCoverageFormat1C1Em = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TCoverageFormat1"*, i64), void (%"struct.CFX_CTTGSUBTable::TCoverageFormat1"*, i64)* @_ZN16CFX_CTTGSUBTable16TCoverageFormat1C2Em
@_ZN16CFX_CTTGSUBTable16TCoverageFormat1D1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TCoverageFormat1"*), void (%"struct.CFX_CTTGSUBTable::TCoverageFormat1"*)* @_ZN16CFX_CTTGSUBTable16TCoverageFormat1D2Ev
@_ZN16CFX_CTTGSUBTable16TCoverageFormat2C1Em = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TCoverageFormat2"*, i64), void (%"struct.CFX_CTTGSUBTable::TCoverageFormat2"*, i64)* @_ZN16CFX_CTTGSUBTable16TCoverageFormat2C2Em
@_ZN16CFX_CTTGSUBTable16TCoverageFormat2D1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TCoverageFormat2"*), void (%"struct.CFX_CTTGSUBTable::TCoverageFormat2"*)* @_ZN16CFX_CTTGSUBTable16TCoverageFormat2D2Ev
@_ZN16CFX_CTTGSUBTable7TDeviceC1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TDevice"*), void (%"struct.CFX_CTTGSUBTable::TDevice"*)* @_ZN16CFX_CTTGSUBTable7TDeviceC2Ev
@_ZN16CFX_CTTGSUBTable13TSubTableBaseC1Et = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*, i16), void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*, i16)* @_ZN16CFX_CTTGSUBTable13TSubTableBaseC2Et
@_ZN16CFX_CTTGSUBTable13TSubTableBaseD1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*), void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)* @_ZN16CFX_CTTGSUBTable13TSubTableBaseD2Ev
@_ZN16CFX_CTTGSUBTable10TSubTable1C1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TSubTable1"*), void (%"struct.CFX_CTTGSUBTable::TSubTable1"*)* @_ZN16CFX_CTTGSUBTable10TSubTable1C2Ev
@_ZN16CFX_CTTGSUBTable10TSubTable1D2Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TSubTable1"*), bitcast (void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)* @_ZN16CFX_CTTGSUBTable13TSubTableBaseD2Ev to void (%"struct.CFX_CTTGSUBTable::TSubTable1"*)*)
@_ZN16CFX_CTTGSUBTable10TSubTable1D1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TSubTable1"*), bitcast (void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)* @_ZN16CFX_CTTGSUBTable13TSubTableBaseD2Ev to void (%"struct.CFX_CTTGSUBTable::TSubTable1"*)*)
@_ZN16CFX_CTTGSUBTable10TSubTable2C1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TSubTable2"*), void (%"struct.CFX_CTTGSUBTable::TSubTable2"*)* @_ZN16CFX_CTTGSUBTable10TSubTable2C2Ev
@_ZN16CFX_CTTGSUBTable10TSubTable2D1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TSubTable2"*), void (%"struct.CFX_CTTGSUBTable::TSubTable2"*)* @_ZN16CFX_CTTGSUBTable10TSubTable2D2Ev
@_ZN16CFX_CTTGSUBTable7TLookupC1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TLookup"*), void (%"struct.CFX_CTTGSUBTable::TLookup"*)* @_ZN16CFX_CTTGSUBTable7TLookupC2Ev
@_ZN16CFX_CTTGSUBTable7TLookupD1Ev = hidden unnamed_addr alias void (%"struct.CFX_CTTGSUBTable::TLookup"*), void (%"struct.CFX_CTTGSUBTable::TLookup"*)* @_ZN16CFX_CTTGSUBTable7TLookupD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTableC2EPKh(%class.CFX_CTTGSUBTable*, i8*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 72, i1 false)
  %10 = load i8, i8* %1, align 1
  %11 = zext i8 %10 to i32
  %12 = shl nuw i32 %11, 24
  %13 = getelementptr inbounds i8, i8* %1, i64 1
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 16
  %17 = or i32 %16, %12
  %18 = getelementptr inbounds i8, i8* %1, i64 2
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 8
  %22 = or i32 %17, %21
  %23 = getelementptr inbounds i8, i8* %1, i64 3
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = or i32 %22, %25
  %27 = icmp eq i32 %26, 65536
  br i1 %27, label %28, label %231

28:                                               ; preds = %2
  %29 = getelementptr inbounds i8, i8* %1, i64 4
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = shl nuw nsw i64 %31, 8
  %33 = getelementptr inbounds i8, i8* %1, i64 5
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i64
  %36 = or i64 %32, %35
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  %38 = getelementptr inbounds i8, i8* %1, i64 6
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = shl nuw nsw i64 %40, 8
  %42 = getelementptr inbounds i8, i8* %1, i64 7
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i64
  %45 = or i64 %41, %44
  %46 = getelementptr inbounds i8, i8* %1, i64 %45
  %47 = getelementptr inbounds i8, i8* %1, i64 8
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = shl nuw nsw i64 %49, 8
  %51 = getelementptr inbounds i8, i8* %1, i64 9
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i64
  %54 = or i64 %50, %53
  %55 = getelementptr inbounds i8, i8* %1, i64 %54
  tail call void @_ZN16CFX_CTTGSUBTable15ParseScriptListEPKh(%class.CFX_CTTGSUBTable* %0, i8* %37) #10
  tail call void @_ZN16CFX_CTTGSUBTable16ParseFeatureListEPKh(%class.CFX_CTTGSUBTable* %0, i8* %46) #10
  tail call void @_ZN16CFX_CTTGSUBTable15ParseLookupListEPKh(%class.CFX_CTTGSUBTable* %0, i8* %55) #10
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %57 = load %"struct.CFX_CTTGSUBTable::TScriptRecord"*, %"struct.CFX_CTTGSUBTable::TScriptRecord"** %56, align 8
  %58 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 1, i32 0, i32 1
  %59 = load %"struct.CFX_CTTGSUBTable::TScriptRecord"*, %"struct.CFX_CTTGSUBTable::TScriptRecord"** %58, align 8
  %60 = icmp eq %"struct.CFX_CTTGSUBTable::TScriptRecord"* %57, %59
  br i1 %60, label %67, label %61

61:                                               ; preds = %28
  %62 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %8, i64 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  %65 = bitcast %class.CFX_CTTGSUBTable* %0 to i64*
  %66 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %71

67:                                               ; preds = %78, %28
  %68 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %157, label %231

71:                                               ; preds = %61, %78
  %72 = phi %"struct.CFX_CTTGSUBTable::TScriptRecord"* [ %57, %61 ], [ %79, %78 ]
  %73 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %72, i64 0, i32 2, i32 0, i32 0
  %74 = load %"struct.CFX_CTTGSUBTable::TLangSysRecord"*, %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %73, align 8
  %75 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %72, i64 0, i32 2, i32 0, i32 1
  %76 = load %"struct.CFX_CTTGSUBTable::TLangSysRecord"*, %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %75, align 8
  %77 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %74, %76
  br i1 %77, label %78, label %81

78:                                               ; preds = %88, %71
  %79 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %72, i64 1
  %80 = icmp eq %"struct.CFX_CTTGSUBTable::TScriptRecord"* %79, %59
  br i1 %80, label %67, label %71

81:                                               ; preds = %71, %88
  %82 = phi %"struct.CFX_CTTGSUBTable::TLangSysRecord"* [ %89, %88 ], [ %74, %71 ]
  %83 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %82, i64 0, i32 3, i32 0, i32 0
  %84 = load i16*, i16** %83, align 8
  %85 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %82, i64 0, i32 3, i32 0, i32 1
  %86 = load i16*, i16** %85, align 8
  %87 = icmp eq i16* %84, %86
  br i1 %87, label %88, label %91

88:                                               ; preds = %154, %81
  %89 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %82, i64 1
  %90 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %89, %76
  br i1 %90, label %78, label %81

91:                                               ; preds = %81, %154
  %92 = phi i16* [ %155, %154 ], [ %84, %81 ]
  %93 = load i16, i16* %92, align 2
  %94 = zext i16 %93 to i64
  %95 = load %"struct.CFX_CTTGSUBTable::TFeatureRecord"*, %"struct.CFX_CTTGSUBTable::TFeatureRecord"** %62, align 8
  %96 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %95, i64 %94, i32 0
  %97 = load i32, i32* %96, align 8
  switch i32 %97, label %154 [
    i32 1987212338, label %98
    i32 1986359924, label %98
  ]

98:                                               ; preds = %91, %91
  %99 = zext i16 %93 to i32
  %100 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %63, align 8
  %101 = icmp eq %"class.std::__1::__tree_node"* %100, null
  br i1 %101, label %128, label %102

102:                                              ; preds = %98, %124
  %103 = phi %"class.std::__1::__tree_node"* [ %127, %124 ], [ %100, %98 ]
  %104 = phi %"class.std::__1::__tree_node_base"** [ %126, %124 ], [ %3, %98 ]
  %105 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = icmp ugt i32 %106, %99
  br i1 %107, label %108, label %114

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, null
  br i1 %111, label %112, label %124

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 0, i32 0
  br label %128

114:                                              ; preds = %102
  %115 = icmp ult i32 %106, %99
  br i1 %115, label %116, label %122

116:                                              ; preds = %114
  %117 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 0, i32 1
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, null
  br i1 %119, label %120, label %124

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 0, i32 0
  br label %128

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 0, i32 0
  br label %128

124:                                              ; preds = %116, %108
  %125 = phi %"class.std::__1::__tree_node_base"* [ %110, %108 ], [ %118, %116 ]
  %126 = phi %"class.std::__1::__tree_node_base"** [ %109, %108 ], [ %117, %116 ]
  %127 = bitcast %"class.std::__1::__tree_node_base"* %125 to %"class.std::__1::__tree_node"*
  br label %102

128:                                              ; preds = %98, %122, %120, %112
  %129 = phi %"class.std::__1::__tree_end_node"* [ %113, %112 ], [ %121, %120 ], [ %123, %122 ], [ %4, %98 ]
  %130 = phi %"class.std::__1::__tree_node_base"** [ %109, %112 ], [ %117, %120 ], [ %104, %122 ], [ %64, %98 ]
  %131 = bitcast %"class.std::__1::__tree_node_base"** %130 to %"class.std::__1::__tree_node"**
  %132 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %131, align 8
  %133 = icmp eq %"class.std::__1::__tree_node"* %132, null
  br i1 %133, label %134, label %154

134:                                              ; preds = %128
  %135 = tail call i8* @_Znwm(i64 32) #11, !noalias !2
  %136 = getelementptr inbounds i8, i8* %135, i64 28
  %137 = bitcast i8* %136 to i32*
  store i32 %99, i32* %137, align 4, !noalias !2
  %138 = bitcast i8* %135 to %"class.std::__1::__tree_node_base"*
  %139 = getelementptr inbounds i8, i8* %135, i64 16
  %140 = bitcast i8* %139 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %129, %"class.std::__1::__tree_end_node"** %140, align 8
  %141 = bitcast %"class.std::__1::__tree_node_base"** %130 to i8**
  store i8* %135, i8** %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, null
  br i1 %145, label %149, label %146

146:                                              ; preds = %134
  %147 = ptrtoint %"class.std::__1::__tree_node_base"* %144 to i64
  store i64 %147, i64* %65, align 8
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  br label %149

149:                                              ; preds = %146, %134
  %150 = phi %"class.std::__1::__tree_node_base"* [ %138, %134 ], [ %148, %146 ]
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %151, %"class.std::__1::__tree_node_base"* %150) #10
  %152 = load i64, i64* %66, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %66, align 8
  br label %154

154:                                              ; preds = %149, %128, %91
  %155 = getelementptr inbounds i16, i16* %92, i64 1
  %156 = icmp eq i16* %155, %86
  br i1 %156, label %88, label %91

157:                                              ; preds = %67
  %158 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %8, i64 0, i32 0, i32 0
  %159 = load %"struct.CFX_CTTGSUBTable::TFeatureRecord"*, %"struct.CFX_CTTGSUBTable::TFeatureRecord"** %158, align 8
  %160 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 2, i32 0, i32 1
  %161 = load %"struct.CFX_CTTGSUBTable::TFeatureRecord"*, %"struct.CFX_CTTGSUBTable::TFeatureRecord"** %160, align 8
  %162 = icmp eq %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %159, %161
  br i1 %162, label %231, label %163

163:                                              ; preds = %157
  %164 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %165 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  %166 = bitcast %class.CFX_CTTGSUBTable* %0 to i64*
  br label %167

167:                                              ; preds = %163, %227
  %168 = phi i32 [ 0, %163 ], [ %228, %227 ]
  %169 = phi %"struct.CFX_CTTGSUBTable::TFeatureRecord"* [ %159, %163 ], [ %229, %227 ]
  %170 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %169, i64 0, i32 0
  %171 = load i32, i32* %170, align 8
  switch i32 %171, label %227 [
    i32 1987212338, label %172
    i32 1986359924, label %172
  ]

172:                                              ; preds = %167, %167
  %173 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %164, align 8
  %174 = icmp eq %"class.std::__1::__tree_node"* %173, null
  br i1 %174, label %201, label %175

175:                                              ; preds = %172, %197
  %176 = phi %"class.std::__1::__tree_node"* [ %200, %197 ], [ %173, %172 ]
  %177 = phi %"class.std::__1::__tree_node_base"** [ %199, %197 ], [ %3, %172 ]
  %178 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %176, i64 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = icmp ult i32 %168, %179
  br i1 %180, label %181, label %187

181:                                              ; preds = %175
  %182 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %176, i64 0, i32 0, i32 0, i32 0
  %183 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %182, align 8
  %184 = icmp eq %"class.std::__1::__tree_node_base"* %183, null
  br i1 %184, label %185, label %197

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %176, i64 0, i32 0, i32 0
  br label %201

187:                                              ; preds = %175
  %188 = icmp ult i32 %179, %168
  br i1 %188, label %189, label %195

189:                                              ; preds = %187
  %190 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %176, i64 0, i32 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %193, label %197

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %176, i64 0, i32 0, i32 0
  br label %201

195:                                              ; preds = %187
  %196 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %176, i64 0, i32 0, i32 0
  br label %201

197:                                              ; preds = %189, %181
  %198 = phi %"class.std::__1::__tree_node_base"* [ %183, %181 ], [ %191, %189 ]
  %199 = phi %"class.std::__1::__tree_node_base"** [ %182, %181 ], [ %190, %189 ]
  %200 = bitcast %"class.std::__1::__tree_node_base"* %198 to %"class.std::__1::__tree_node"*
  br label %175

201:                                              ; preds = %172, %195, %193, %185
  %202 = phi %"class.std::__1::__tree_end_node"* [ %186, %185 ], [ %194, %193 ], [ %196, %195 ], [ %4, %172 ]
  %203 = phi %"class.std::__1::__tree_node_base"** [ %182, %185 ], [ %190, %193 ], [ %177, %195 ], [ %165, %172 ]
  %204 = bitcast %"class.std::__1::__tree_node_base"** %203 to %"class.std::__1::__tree_node"**
  %205 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %204, align 8
  %206 = icmp eq %"class.std::__1::__tree_node"* %205, null
  br i1 %206, label %207, label %227

207:                                              ; preds = %201
  %208 = tail call i8* @_Znwm(i64 32) #11, !noalias !5
  %209 = getelementptr inbounds i8, i8* %208, i64 28
  %210 = bitcast i8* %209 to i32*
  store i32 %168, i32* %210, align 4, !noalias !5
  %211 = bitcast i8* %208 to %"class.std::__1::__tree_node_base"*
  %212 = getelementptr inbounds i8, i8* %208, i64 16
  %213 = bitcast i8* %212 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %208, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %202, %"class.std::__1::__tree_end_node"** %213, align 8
  %214 = bitcast %"class.std::__1::__tree_node_base"** %203 to i8**
  store i8* %208, i8** %214, align 8
  %215 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %216 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %215, i64 0, i32 0
  %217 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %216, align 8
  %218 = icmp eq %"class.std::__1::__tree_node_base"* %217, null
  br i1 %218, label %222, label %219

219:                                              ; preds = %207
  %220 = ptrtoint %"class.std::__1::__tree_node_base"* %217 to i64
  store i64 %220, i64* %166, align 8
  %221 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  br label %222

222:                                              ; preds = %219, %207
  %223 = phi %"class.std::__1::__tree_node_base"* [ %211, %207 ], [ %221, %219 ]
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"* %223) #10
  %225 = load i64, i64* %68, align 8
  %226 = add i64 %225, 1
  store i64 %226, i64* %68, align 8
  br label %227

227:                                              ; preds = %222, %201, %167
  %228 = add nuw nsw i32 %168, 1
  %229 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %169, i64 1
  %230 = icmp eq %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %229, %161
  br i1 %230, label %231, label %167

231:                                              ; preds = %227, %157, %2, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_CTTGSUBTable13LoadGSUBTableEPKh(%class.CFX_CTTGSUBTable* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* %1, align 1
  %4 = zext i8 %3 to i32
  %5 = shl nuw i32 %4, 24
  %6 = getelementptr inbounds i8, i8* %1, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = shl nuw nsw i32 %8, 16
  %10 = or i32 %9, %5
  %11 = getelementptr inbounds i8, i8* %1, i64 2
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = shl nuw nsw i32 %13, 8
  %15 = or i32 %10, %14
  %16 = getelementptr inbounds i8, i8* %1, i64 3
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = or i32 %15, %18
  %20 = icmp eq i32 %19, 65536
  br i1 %20, label %21, label %49

21:                                               ; preds = %2
  %22 = getelementptr inbounds i8, i8* %1, i64 4
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i64
  %25 = shl nuw nsw i64 %24, 8
  %26 = getelementptr inbounds i8, i8* %1, i64 5
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i64
  %29 = or i64 %25, %28
  %30 = getelementptr inbounds i8, i8* %1, i64 %29
  %31 = getelementptr inbounds i8, i8* %1, i64 6
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = shl nuw nsw i64 %33, 8
  %35 = getelementptr inbounds i8, i8* %1, i64 7
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = or i64 %34, %37
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  %40 = getelementptr inbounds i8, i8* %1, i64 8
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = shl nuw nsw i64 %42, 8
  %44 = getelementptr inbounds i8, i8* %1, i64 9
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i64
  %47 = or i64 %43, %46
  %48 = getelementptr inbounds i8, i8* %1, i64 %47
  tail call void @_ZN16CFX_CTTGSUBTable15ParseScriptListEPKh(%class.CFX_CTTGSUBTable* %0, i8* %30) #10
  tail call void @_ZN16CFX_CTTGSUBTable16ParseFeatureListEPKh(%class.CFX_CTTGSUBTable* %0, i8* %39) #10
  tail call void @_ZN16CFX_CTTGSUBTable15ParseLookupListEPKh(%class.CFX_CTTGSUBTable* %0, i8* %48) #10
  br label %49

49:                                               ; preds = %2, %21
  %50 = phi i1 [ true, %21 ], [ false, %2 ]
  ret i1 %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTableD2Ev(%class.CFX_CTTGSUBTable*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.CFX_CTTGSUBTable::TLookup"*, %"struct.CFX_CTTGSUBTable::TLookup"** %3, align 8
  %5 = icmp eq %"struct.CFX_CTTGSUBTable::TLookup"* %4, null
  br i1 %5, label %48, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.CFX_CTTGSUBTable::TLookup"* %4 to i8*
  %8 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load %"struct.CFX_CTTGSUBTable::TLookup"*, %"struct.CFX_CTTGSUBTable::TLookup"** %8, align 8
  %10 = icmp eq %"struct.CFX_CTTGSUBTable::TLookup"* %9, %4
  br i1 %10, label %46, label %11

11:                                               ; preds = %6, %41
  %12 = phi %"struct.CFX_CTTGSUBTable::TLookup"* [ %13, %41 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %12, i64 -1, i32 2
  %15 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %15, align 8
  %17 = icmp eq %"class.std::__1::unique_ptr"* %16, null
  br i1 %17, label %41, label %18

18:                                               ; preds = %11
  %19 = bitcast %"class.std::__1::unique_ptr"* %16 to i8*
  %20 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %12, i64 -1, i32 2, i32 0, i32 1
  %21 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %22 = icmp eq %"class.std::__1::unique_ptr"* %21, %16
  br i1 %22, label %39, label %23

23:                                               ; preds = %18, %34
  %24 = phi %"class.std::__1::unique_ptr"* [ %25, %34 ], [ %21, %18 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 -1
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"struct.CFX_CTTGSUBTable::TSubTableBase"*, %"struct.CFX_CTTGSUBTable::TSubTableBase"** %26, align 8
  store %"struct.CFX_CTTGSUBTable::TSubTableBase"* null, %"struct.CFX_CTTGSUBTable::TSubTableBase"** %26, align 8
  %28 = icmp eq %"struct.CFX_CTTGSUBTable::TSubTableBase"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %23
  %30 = bitcast %"struct.CFX_CTTGSUBTable::TSubTableBase"* %27 to void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)***
  %31 = load void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)**, void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)*, void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)** %31, i64 1
  %33 = load void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)*, void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)** %32, align 8
  tail call void %33(%"struct.CFX_CTTGSUBTable::TSubTableBase"* nonnull %27) #10
  br label %34

34:                                               ; preds = %29, %23
  %35 = icmp eq %"class.std::__1::unique_ptr"* %25, %16
  br i1 %35, label %36, label %23

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::vector.30"* %14 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %18
  %40 = phi i8* [ %38, %36 ], [ %19, %18 ]
  store %"class.std::__1::unique_ptr"* %16, %"class.std::__1::unique_ptr"** %20, align 8
  tail call void @_ZdlPv(i8* %40) #11
  br label %41

41:                                               ; preds = %39, %11
  %42 = icmp eq %"struct.CFX_CTTGSUBTable::TLookup"* %13, %4
  br i1 %42, label %43, label %11

43:                                               ; preds = %41
  %44 = bitcast %"class.std::__1::vector.28"* %2 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %43, %6
  %47 = phi i8* [ %45, %43 ], [ %7, %6 ]
  store %"struct.CFX_CTTGSUBTable::TLookup"* %4, %"struct.CFX_CTTGSUBTable::TLookup"** %8, align 8
  tail call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %1, %46
  %49 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 2
  %50 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %49, i64 0, i32 0, i32 0
  %51 = load %"struct.CFX_CTTGSUBTable::TFeatureRecord"*, %"struct.CFX_CTTGSUBTable::TFeatureRecord"** %50, align 8
  %52 = icmp eq %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %51, null
  br i1 %52, label %76, label %53

53:                                               ; preds = %48
  %54 = bitcast %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %51 to i8*
  %55 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 2, i32 0, i32 1
  %56 = load %"struct.CFX_CTTGSUBTable::TFeatureRecord"*, %"struct.CFX_CTTGSUBTable::TFeatureRecord"** %55, align 8
  %57 = icmp eq %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %56, %51
  br i1 %57, label %74, label %58

58:                                               ; preds = %53, %69
  %59 = phi %"struct.CFX_CTTGSUBTable::TFeatureRecord"* [ %60, %69 ], [ %56, %53 ]
  %60 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %59, i64 -1
  %61 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %59, i64 -1, i32 2, i32 0, i32 0
  %62 = load i16*, i16** %61, align 8
  %63 = icmp eq i16* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %58
  %65 = ptrtoint i16* %62 to i64
  %66 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %59, i64 -1, i32 2, i32 0, i32 1
  %67 = bitcast i16** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = bitcast i16* %62 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %68) #10
  br label %69

69:                                               ; preds = %64, %58
  %70 = icmp eq %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %60, %51
  br i1 %70, label %71, label %58

71:                                               ; preds = %69
  %72 = bitcast %"class.std::__1::vector.21"* %49 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %71, %53
  %75 = phi i8* [ %73, %71 ], [ %54, %53 ]
  store %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %51, %"struct.CFX_CTTGSUBTable::TFeatureRecord"** %55, align 8
  tail call void @_ZdlPv(i8* %75) #11
  br label %76

76:                                               ; preds = %48, %74
  %77 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 1
  %78 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %77, i64 0, i32 0, i32 0
  %79 = load %"struct.CFX_CTTGSUBTable::TScriptRecord"*, %"struct.CFX_CTTGSUBTable::TScriptRecord"** %78, align 8
  %80 = icmp eq %"struct.CFX_CTTGSUBTable::TScriptRecord"* %79, null
  br i1 %80, label %123, label %81

81:                                               ; preds = %76
  %82 = bitcast %"struct.CFX_CTTGSUBTable::TScriptRecord"* %79 to i8*
  %83 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 1, i32 0, i32 1
  %84 = load %"struct.CFX_CTTGSUBTable::TScriptRecord"*, %"struct.CFX_CTTGSUBTable::TScriptRecord"** %83, align 8
  %85 = icmp eq %"struct.CFX_CTTGSUBTable::TScriptRecord"* %84, %79
  br i1 %85, label %121, label %86

86:                                               ; preds = %81, %116
  %87 = phi %"struct.CFX_CTTGSUBTable::TScriptRecord"* [ %88, %116 ], [ %84, %81 ]
  %88 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %87, i64 -1
  %89 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %87, i64 -1, i32 2
  %90 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %89, i64 0, i32 0, i32 0
  %91 = load %"struct.CFX_CTTGSUBTable::TLangSysRecord"*, %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %90, align 8
  %92 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %91, null
  br i1 %92, label %116, label %93

93:                                               ; preds = %86
  %94 = bitcast %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %91 to i8*
  %95 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %87, i64 -1, i32 2, i32 0, i32 1
  %96 = load %"struct.CFX_CTTGSUBTable::TLangSysRecord"*, %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %95, align 8
  %97 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %96, %91
  br i1 %97, label %114, label %98

98:                                               ; preds = %93, %109
  %99 = phi %"struct.CFX_CTTGSUBTable::TLangSysRecord"* [ %100, %109 ], [ %96, %93 ]
  %100 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %99, i64 -1
  %101 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %99, i64 -1, i32 3, i32 0, i32 0
  %102 = load i16*, i16** %101, align 8
  %103 = icmp eq i16* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %98
  %105 = ptrtoint i16* %102 to i64
  %106 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %99, i64 -1, i32 3, i32 0, i32 1
  %107 = bitcast i16** %106 to i64*
  store i64 %105, i64* %107, align 8
  %108 = bitcast i16* %102 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %108) #10
  br label %109

109:                                              ; preds = %104, %98
  %110 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %100, %91
  br i1 %110, label %111, label %98

111:                                              ; preds = %109
  %112 = bitcast %"class.std::__1::vector.4"* %89 to i8**
  %113 = load i8*, i8** %112, align 8
  br label %114

114:                                              ; preds = %111, %93
  %115 = phi i8* [ %113, %111 ], [ %94, %93 ]
  store %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %91, %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %95, align 8
  tail call void @_ZdlPv(i8* %115) #11
  br label %116

116:                                              ; preds = %114, %86
  %117 = icmp eq %"struct.CFX_CTTGSUBTable::TScriptRecord"* %88, %79
  br i1 %117, label %118, label %86

118:                                              ; preds = %116
  %119 = bitcast %"class.std::__1::vector"* %77 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %81
  %122 = phi i8* [ %120, %118 ], [ %82, %81 ]
  store %"struct.CFX_CTTGSUBTable::TScriptRecord"* %79, %"struct.CFX_CTTGSUBTable::TScriptRecord"** %83, align 8
  tail call void @_ZdlPv(i8* %122) #11
  br label %123

123:                                              ; preds = %76, %121
  %124 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 0, i32 0
  %125 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %126 = bitcast %"class.std::__1::__tree_end_node"* %125 to %"class.std::__1::__tree_node"**
  %127 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %126, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree"* %124, %"class.std::__1::__tree_node"* %127) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_CTTGSUBTable5ParseEPKhS1_S1_(%class.CFX_CTTGSUBTable* nocapture, i8*, i8*, i8*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN16CFX_CTTGSUBTable15ParseScriptListEPKh(%class.CFX_CTTGSUBTable* %0, i8* %1)
  tail call void @_ZN16CFX_CTTGSUBTable16ParseFeatureListEPKh(%class.CFX_CTTGSUBTable* %0, i8* %2)
  tail call void @_ZN16CFX_CTTGSUBTable15ParseLookupListEPKh(%class.CFX_CTTGSUBTable* %0, i8* %3)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK16CFX_CTTGSUBTable16GetVerticalGlyphEj(%class.CFX_CTTGSUBTable*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #10
  store i32 0, i32* %3, align 4
  %5 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %6, %7
  br i1 %8, label %83, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 3
  %12 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 3, i32 0, i32 1
  %13 = bitcast %"struct.CFX_CTTGSUBTable::TLookup"** %12 to i64*
  %14 = bitcast %"class.std::__1::vector.28"* %11 to i64*
  br label %15

15:                                               ; preds = %9, %80
  %16 = phi %"class.std::__1::__tree_end_node"* [ %6, %9 ], [ %81, %80 ]
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node"*
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = load %"struct.CFX_CTTGSUBTable::TFeatureRecord"*, %"struct.CFX_CTTGSUBTable::TFeatureRecord"** %10, align 8
  %22 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %21, i64 %20, i32 2, i32 0, i32 0
  %23 = load i16*, i16** %22, align 8
  %24 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %21, i64 %20, i32 2, i32 0, i32 1
  %25 = load i16*, i16** %24, align 8
  %26 = icmp eq i16* %23, %25
  br i1 %26, label %52, label %27

27:                                               ; preds = %15, %49
  %28 = phi i16* [ %50, %49 ], [ %23, %15 ]
  %29 = load i16, i16* %28, align 2
  %30 = load i64, i64* %13, align 8
  %31 = load i64, i64* %14, align 8
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 5
  %34 = icmp ult i64 %33, 2147483648
  %35 = inttoptr i64 %31 to %"struct.CFX_CTTGSUBTable::TLookup"*
  br i1 %34, label %37, label %36, !prof !8

36:                                               ; preds = %27
  tail call void @llvm.trap() #10
  unreachable

37:                                               ; preds = %27
  %38 = zext i16 %29 to i32
  %39 = trunc i64 %33 to i32
  %40 = icmp sgt i32 %39, %38
  br i1 %40, label %41, label %49

41:                                               ; preds = %37
  %42 = zext i16 %29 to i64
  %43 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %35, i64 %42
  %44 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %43, i64 0, i32 0
  %45 = load i16, i16* %44, align 8
  %46 = icmp eq i16 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = call zeroext i1 @_ZNK16CFX_CTTGSUBTable20GetVerticalGlyphSub2ERKNS_7TLookupEjPj(%class.CFX_CTTGSUBTable* %0, %"struct.CFX_CTTGSUBTable::TLookup"* dereferenceable(32) %43, i32 %1, i32* nonnull %3) #10
  br i1 %48, label %83, label %49

49:                                               ; preds = %47, %41, %37
  %50 = getelementptr inbounds i16, i16* %28, i64 1
  %51 = icmp eq i16* %50, %25
  br i1 %51, label %52, label %27

52:                                               ; preds = %49, %15
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, null
  br i1 %55, label %56, label %64

56:                                               ; preds = %52
  %57 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 2
  %59 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_end_node"**
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, %57
  br i1 %63, label %80, label %71

64:                                               ; preds = %52, %64
  %65 = phi %"class.std::__1::__tree_node_base"* [ %67, %64 ], [ %54, %52 ]
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %69, label %64

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %65, i64 0, i32 0
  br label %80

71:                                               ; preds = %56, %71
  %72 = phi %"class.std::__1::__tree_end_node"** [ %75, %71 ], [ %59, %56 ]
  %73 = bitcast %"class.std::__1::__tree_end_node"** %72 to %"class.std::__1::__tree_node_base"**
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %74, i64 0, i32 2
  %76 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %76, i64 0, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, %74
  br i1 %79, label %80, label %71

80:                                               ; preds = %71, %56, %69
  %81 = phi %"class.std::__1::__tree_end_node"* [ %70, %69 ], [ %60, %56 ], [ %76, %71 ]
  %82 = icmp eq %"class.std::__1::__tree_end_node"* %81, %7
  br i1 %82, label %83, label %15

83:                                               ; preds = %80, %47, %2
  %84 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #10
  ret i32 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16CFX_CTTGSUBTable19GetVerticalGlyphSubERKNS_14TFeatureRecordEjPj(%class.CFX_CTTGSUBTable* nocapture readonly, %"struct.CFX_CTTGSUBTable::TFeatureRecord"* nocapture readonly dereferenceable(32), i32, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %1, i64 0, i32 2, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %1, i64 0, i32 2, i32 0, i32 1
  %8 = load i16*, i16** %7, align 8
  %9 = icmp eq i16* %6, %8
  br i1 %9, label %40, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 3
  %12 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 3, i32 0, i32 1
  %13 = bitcast %"struct.CFX_CTTGSUBTable::TLookup"** %12 to i64*
  %14 = bitcast %"class.std::__1::vector.28"* %11 to i64*
  br label %15

15:                                               ; preds = %10, %37
  %16 = phi i16* [ %6, %10 ], [ %38, %37 ]
  %17 = load i16, i16* %16, align 2
  %18 = load i64, i64* %13, align 8
  %19 = load i64, i64* %14, align 8
  %20 = sub i64 %18, %19
  %21 = ashr exact i64 %20, 5
  %22 = icmp ult i64 %21, 2147483648
  %23 = inttoptr i64 %19 to %"struct.CFX_CTTGSUBTable::TLookup"*
  br i1 %22, label %25, label %24, !prof !8

24:                                               ; preds = %15
  tail call void @llvm.trap() #10
  unreachable

25:                                               ; preds = %15
  %26 = zext i16 %17 to i32
  %27 = trunc i64 %21 to i32
  %28 = icmp sgt i32 %27, %26
  br i1 %28, label %29, label %37

29:                                               ; preds = %25
  %30 = zext i16 %17 to i64
  %31 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %23, i64 %30
  %32 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %31, i64 0, i32 0
  %33 = load i16, i16* %32, align 8
  %34 = icmp eq i16 %33, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = tail call zeroext i1 @_ZNK16CFX_CTTGSUBTable20GetVerticalGlyphSub2ERKNS_7TLookupEjPj(%class.CFX_CTTGSUBTable* %0, %"struct.CFX_CTTGSUBTable::TLookup"* dereferenceable(32) %31, i32 %2, i32* %3)
  br i1 %36, label %40, label %37

37:                                               ; preds = %29, %35, %25
  %38 = getelementptr inbounds i16, i16* %16, i64 1
  %39 = icmp eq i16* %38, %8
  br i1 %39, label %40, label %15

40:                                               ; preds = %35, %37, %4
  %41 = phi i1 [ false, %4 ], [ false, %37 ], [ true, %35 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16CFX_CTTGSUBTable20GetVerticalGlyphSub2ERKNS_7TLookupEjPj(%class.CFX_CTTGSUBTable* nocapture readnone, %"struct.CFX_CTTGSUBTable::TLookup"* nocapture readonly dereferenceable(32), i32, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %1, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %1, i64 0, i32 2, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr"* %6, %8
  br i1 %9, label %159, label %10

10:                                               ; preds = %4, %156
  %11 = phi %"class.std::__1::unique_ptr"* [ %157, %156 ], [ %6, %4 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"struct.CFX_CTTGSUBTable::TSubTableBase"*, %"struct.CFX_CTTGSUBTable::TSubTableBase"** %12, align 8
  %14 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTableBase", %"struct.CFX_CTTGSUBTable::TSubTableBase"* %13, i64 0, i32 1
  %15 = load i16, i16* %14, align 8
  switch i16 %15, label %156 [
    i16 1, label %16
    i16 2, label %79
  ]

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTableBase", %"struct.CFX_CTTGSUBTable::TSubTableBase"* %13, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = load %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*, %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"** %17, align 8
  %19 = icmp eq %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %18, null
  br i1 %19, label %156, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormatBase", %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %18, i64 0, i32 1
  %22 = load i16, i16* %21, align 8
  switch i16 %22, label %156 [
    i16 1, label %23
    i16 2, label %41
  ]

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormatBase", %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %18, i64 1
  %25 = bitcast %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %24 to i16**
  %26 = load i16*, i16** %25, align 8
  %27 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormatBase", %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %18, i64 1, i32 1
  %28 = bitcast i16* %27 to i16**
  %29 = load i16*, i16** %28, align 8
  %30 = icmp eq i16* %26, %29
  br i1 %30, label %156, label %31

31:                                               ; preds = %23, %37
  %32 = phi i32 [ %38, %37 ], [ 0, %23 ]
  %33 = phi i16* [ %39, %37 ], [ %26, %23 ]
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i32
  %36 = icmp eq i32 %35, %2
  br i1 %36, label %70, label %37

37:                                               ; preds = %31
  %38 = add nuw nsw i32 %32, 1
  %39 = getelementptr inbounds i16, i16* %33, i64 1
  %40 = icmp eq i16* %39, %29
  br i1 %40, label %156, label %31

41:                                               ; preds = %20
  %42 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormatBase", %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %18, i64 1
  %43 = bitcast %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %42 to %"struct.CFX_CTTGSUBTable::TRangeRecord"**
  %44 = load %"struct.CFX_CTTGSUBTable::TRangeRecord"*, %"struct.CFX_CTTGSUBTable::TRangeRecord"** %43, align 8
  %45 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormatBase", %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %18, i64 1, i32 1
  %46 = bitcast i16* %45 to %"struct.CFX_CTTGSUBTable::TRangeRecord"**
  %47 = load %"struct.CFX_CTTGSUBTable::TRangeRecord"*, %"struct.CFX_CTTGSUBTable::TRangeRecord"** %46, align 8
  %48 = icmp eq %"struct.CFX_CTTGSUBTable::TRangeRecord"* %44, %47
  br i1 %48, label %156, label %49

49:                                               ; preds = %41, %60
  %50 = phi %"struct.CFX_CTTGSUBTable::TRangeRecord"* [ %61, %60 ], [ %44, %41 ]
  %51 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %50, i64 0, i32 0
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i32
  %54 = icmp ugt i32 %53, %2
  br i1 %54, label %60, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %50, i64 0, i32 1
  %57 = load i16, i16* %56, align 2
  %58 = zext i16 %57 to i32
  %59 = icmp ult i32 %58, %2
  br i1 %59, label %60, label %63

60:                                               ; preds = %55, %49
  %61 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %50, i64 1
  %62 = icmp eq %"struct.CFX_CTTGSUBTable::TRangeRecord"* %61, %47
  br i1 %62, label %156, label %49

63:                                               ; preds = %55
  %64 = zext i16 %52 to i32
  %65 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %50, i64 0, i32 2
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = sub i32 %2, %64
  %69 = add i32 %68, %67
  br label %70

70:                                               ; preds = %31, %63
  %71 = phi i32 [ %69, %63 ], [ %32, %31 ]
  %72 = icmp sgt i32 %71, -1
  br i1 %72, label %73, label %156

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTableBase", %"struct.CFX_CTTGSUBTable::TSubTableBase"* %13, i64 1
  %75 = bitcast %"struct.CFX_CTTGSUBTable::TSubTableBase"* %74 to i16*
  %76 = load i16, i16* %75, align 8
  %77 = sext i16 %76 to i32
  %78 = add i32 %77, %2
  store i32 %78, i32* %3, align 4
  br label %159

79:                                               ; preds = %10
  %80 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTableBase", %"struct.CFX_CTTGSUBTable::TSubTableBase"* %13, i64 0, i32 2, i32 0, i32 0, i32 0
  %81 = load %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*, %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"** %80, align 8
  %82 = icmp eq %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %81, null
  br i1 %82, label %156, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormatBase", %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %81, i64 0, i32 1
  %85 = load i16, i16* %84, align 8
  switch i16 %85, label %156 [
    i16 1, label %86
    i16 2, label %104
  ]

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormatBase", %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %81, i64 1
  %88 = bitcast %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %87 to i16**
  %89 = load i16*, i16** %88, align 8
  %90 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormatBase", %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %81, i64 1, i32 1
  %91 = bitcast i16* %90 to i16**
  %92 = load i16*, i16** %91, align 8
  %93 = icmp eq i16* %89, %92
  br i1 %93, label %156, label %94

94:                                               ; preds = %86, %100
  %95 = phi i32 [ %101, %100 ], [ 0, %86 ]
  %96 = phi i16* [ %102, %100 ], [ %89, %86 ]
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i32
  %99 = icmp eq i32 %98, %2
  br i1 %99, label %133, label %100

100:                                              ; preds = %94
  %101 = add nuw nsw i32 %95, 1
  %102 = getelementptr inbounds i16, i16* %96, i64 1
  %103 = icmp eq i16* %102, %92
  br i1 %103, label %156, label %94

104:                                              ; preds = %83
  %105 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormatBase", %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %81, i64 1
  %106 = bitcast %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %105 to %"struct.CFX_CTTGSUBTable::TRangeRecord"**
  %107 = load %"struct.CFX_CTTGSUBTable::TRangeRecord"*, %"struct.CFX_CTTGSUBTable::TRangeRecord"** %106, align 8
  %108 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormatBase", %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %81, i64 1, i32 1
  %109 = bitcast i16* %108 to %"struct.CFX_CTTGSUBTable::TRangeRecord"**
  %110 = load %"struct.CFX_CTTGSUBTable::TRangeRecord"*, %"struct.CFX_CTTGSUBTable::TRangeRecord"** %109, align 8
  %111 = icmp eq %"struct.CFX_CTTGSUBTable::TRangeRecord"* %107, %110
  br i1 %111, label %156, label %112

112:                                              ; preds = %104, %123
  %113 = phi %"struct.CFX_CTTGSUBTable::TRangeRecord"* [ %124, %123 ], [ %107, %104 ]
  %114 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %113, i64 0, i32 0
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = icmp ugt i32 %116, %2
  br i1 %117, label %123, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %113, i64 0, i32 1
  %120 = load i16, i16* %119, align 2
  %121 = zext i16 %120 to i32
  %122 = icmp ult i32 %121, %2
  br i1 %122, label %123, label %126

123:                                              ; preds = %118, %112
  %124 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %113, i64 1
  %125 = icmp eq %"struct.CFX_CTTGSUBTable::TRangeRecord"* %124, %110
  br i1 %125, label %156, label %112

126:                                              ; preds = %118
  %127 = zext i16 %115 to i32
  %128 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %113, i64 0, i32 2
  %129 = load i16, i16* %128, align 2
  %130 = zext i16 %129 to i32
  %131 = sub i32 %2, %127
  %132 = add i32 %131, %130
  br label %133

133:                                              ; preds = %94, %126
  %134 = phi i32 [ %132, %126 ], [ %95, %94 ]
  %135 = icmp sgt i32 %134, -1
  br i1 %135, label %136, label %156

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTableBase", %"struct.CFX_CTTGSUBTable::TSubTableBase"* %13, i64 1
  %138 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTableBase", %"struct.CFX_CTTGSUBTable::TSubTableBase"* %13, i64 1, i32 1
  %139 = bitcast i16* %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"struct.CFX_CTTGSUBTable::TSubTableBase"* %137 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = sub i64 %140, %142
  %144 = ashr exact i64 %143, 1
  %145 = icmp ult i64 %144, 2147483648
  br i1 %145, label %147, label %146, !prof !8

146:                                              ; preds = %136
  tail call void @llvm.trap() #10
  unreachable

147:                                              ; preds = %136
  %148 = trunc i64 %144 to i32
  %149 = icmp slt i32 %134, %148
  br i1 %149, label %150, label %156

150:                                              ; preds = %147
  %151 = inttoptr i64 %142 to i16*
  %152 = sext i32 %134 to i64
  %153 = getelementptr inbounds i16, i16* %151, i64 %152
  %154 = load i16, i16* %153, align 2
  %155 = zext i16 %154 to i32
  store i32 %155, i32* %3, align 4
  br label %159

156:                                              ; preds = %123, %100, %60, %37, %104, %86, %83, %79, %133, %147, %41, %23, %20, %16, %70, %10
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 1
  %158 = icmp eq %"class.std::__1::unique_ptr"* %157, %8
  br i1 %158, label %159, label %10

159:                                              ; preds = %156, %4, %73, %150
  %160 = phi i1 [ true, %150 ], [ true, %73 ], [ false, %4 ], [ false, %156 ]
  ret i1 %160
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK16CFX_CTTGSUBTable16GetCoverageIndexEPNS_19TCoverageFormatBaseEj(%class.CFX_CTTGSUBTable* nocapture readnone, %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* readonly, i32) local_unnamed_addr #2 align 2 {
  %4 = icmp eq %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %1, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormatBase", %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %1, i64 0, i32 1
  %7 = load i16, i16* %6, align 8
  switch i16 %7, label %55 [
    i16 1, label %8
    i16 2, label %26
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormatBase", %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %1, i64 1
  %10 = bitcast %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %9 to i16**
  %11 = load i16*, i16** %10, align 8
  %12 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormatBase", %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %1, i64 1, i32 1
  %13 = bitcast i16* %12 to i16**
  %14 = load i16*, i16** %13, align 8
  %15 = icmp eq i16* %11, %14
  br i1 %15, label %55, label %16

16:                                               ; preds = %8, %22
  %17 = phi i32 [ %23, %22 ], [ 0, %8 ]
  %18 = phi i16* [ %24, %22 ], [ %11, %8 ]
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = icmp eq i32 %20, %2
  br i1 %21, label %55, label %22

22:                                               ; preds = %16
  %23 = add nuw nsw i32 %17, 1
  %24 = getelementptr inbounds i16, i16* %18, i64 1
  %25 = icmp eq i16* %24, %14
  br i1 %25, label %55, label %16

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormatBase", %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %1, i64 1
  %28 = bitcast %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %27 to %"struct.CFX_CTTGSUBTable::TRangeRecord"**
  %29 = load %"struct.CFX_CTTGSUBTable::TRangeRecord"*, %"struct.CFX_CTTGSUBTable::TRangeRecord"** %28, align 8
  %30 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormatBase", %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %1, i64 1, i32 1
  %31 = bitcast i16* %30 to %"struct.CFX_CTTGSUBTable::TRangeRecord"**
  %32 = load %"struct.CFX_CTTGSUBTable::TRangeRecord"*, %"struct.CFX_CTTGSUBTable::TRangeRecord"** %31, align 8
  %33 = icmp eq %"struct.CFX_CTTGSUBTable::TRangeRecord"* %29, %32
  br i1 %33, label %55, label %34

34:                                               ; preds = %26, %45
  %35 = phi %"struct.CFX_CTTGSUBTable::TRangeRecord"* [ %46, %45 ], [ %29, %26 ]
  %36 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %35, i64 0, i32 0
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = icmp ugt i32 %38, %2
  br i1 %39, label %45, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %35, i64 0, i32 1
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = icmp ult i32 %43, %2
  br i1 %44, label %45, label %48

45:                                               ; preds = %40, %34
  %46 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %35, i64 1
  %47 = icmp eq %"struct.CFX_CTTGSUBTable::TRangeRecord"* %46, %32
  br i1 %47, label %55, label %34

48:                                               ; preds = %40
  %49 = zext i16 %37 to i32
  %50 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %35, i64 0, i32 2
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = sub i32 %2, %49
  %54 = add i32 %53, %52
  br label %55

55:                                               ; preds = %45, %22, %16, %26, %8, %48, %5, %3
  %56 = phi i32 [ -1, %3 ], [ -1, %5 ], [ %54, %48 ], [ -1, %8 ], [ -1, %26 ], [ -1, %22 ], [ %17, %16 ], [ -1, %45 ]
  ret i32 %56
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i8 @_ZNK16CFX_CTTGSUBTable8GetUInt8ERPKh(%class.CFX_CTTGSUBTable* nocapture readnone, i8** nocapture dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = load i8*, i8** %1, align 8
  %4 = load i8, i8* %3, align 1
  %5 = getelementptr inbounds i8, i8* %3, i64 1
  store i8* %5, i8** %1, align 8
  ret i8 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i16 @_ZNK16CFX_CTTGSUBTable8GetInt16ERPKh(%class.CFX_CTTGSUBTable* nocapture readnone, i8** nocapture dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = load i8*, i8** %1, align 8
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i16
  %6 = shl nuw i16 %5, 8
  %7 = getelementptr inbounds i8, i8* %3, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i16
  %10 = or i16 %6, %9
  %11 = getelementptr inbounds i8, i8* %3, i64 2
  store i8* %11, i8** %1, align 8
  ret i16 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i16 @_ZNK16CFX_CTTGSUBTable9GetUInt16ERPKh(%class.CFX_CTTGSUBTable* nocapture readnone, i8** nocapture dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = load i8*, i8** %1, align 8
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i16
  %6 = shl nuw i16 %5, 8
  %7 = getelementptr inbounds i8, i8* %3, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i16
  %10 = or i16 %6, %9
  %11 = getelementptr inbounds i8, i8* %3, i64 2
  store i8* %11, i8** %1, align 8
  ret i16 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK16CFX_CTTGSUBTable8GetInt32ERPKh(%class.CFX_CTTGSUBTable* nocapture readnone, i8** nocapture dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = load i8*, i8** %1, align 8
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i32
  %6 = shl nuw i32 %5, 24
  %7 = getelementptr inbounds i8, i8* %3, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl nuw nsw i32 %9, 16
  %11 = or i32 %10, %6
  %12 = getelementptr inbounds i8, i8* %3, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = shl nuw nsw i32 %14, 8
  %16 = or i32 %11, %15
  %17 = getelementptr inbounds i8, i8* %3, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = or i32 %16, %19
  %21 = getelementptr inbounds i8, i8* %3, i64 4
  store i8* %21, i8** %1, align 8
  ret i32 %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK16CFX_CTTGSUBTable9GetUInt32ERPKh(%class.CFX_CTTGSUBTable* nocapture readnone, i8** nocapture dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = load i8*, i8** %1, align 8
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i32
  %6 = shl nuw i32 %5, 24
  %7 = getelementptr inbounds i8, i8* %3, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl nuw nsw i32 %9, 16
  %11 = or i32 %10, %6
  %12 = getelementptr inbounds i8, i8* %3, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = shl nuw nsw i32 %14, 8
  %16 = or i32 %11, %15
  %17 = getelementptr inbounds i8, i8* %3, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = or i32 %16, %19
  %21 = getelementptr inbounds i8, i8* %3, i64 4
  store i8* %21, i8** %1, align 8
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable15ParseScriptListEPKh(%class.CFX_CTTGSUBTable* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* %1, align 1
  %4 = zext i8 %3 to i64
  %5 = shl nuw nsw i64 %4, 8
  %6 = getelementptr inbounds i8, i8* %1, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i64
  %9 = or i64 %5, %8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %74, label %11

11:                                               ; preds = %2
  %12 = shl nuw nsw i64 %9, 5
  %13 = tail call i8* @_Znwm(i64 %12) #11
  %14 = bitcast i8* %13 to %"struct.CFX_CTTGSUBTable::TScriptRecord"*
  %15 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %14, i64 %9
  %16 = shl nuw nsw i64 %9, 5
  %17 = add nsw i64 %16, -32
  %18 = lshr exact i64 %17, 5
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 7
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %11, %22
  %23 = phi %"struct.CFX_CTTGSUBTable::TScriptRecord"* [ %29, %22 ], [ %14, %11 ]
  %24 = phi i64 [ %30, %22 ], [ %20, %11 ]
  %25 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %23, i64 0, i32 0
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %23, i64 0, i32 1
  store i16 0, i16* %26, align 4
  %27 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %23, i64 0, i32 2
  %28 = bitcast %"class.std::__1::vector.4"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #10
  %29 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %23, i64 1
  %30 = add i64 %24, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %22, !llvm.loop !9

32:                                               ; preds = %22, %11
  %33 = phi %"struct.CFX_CTTGSUBTable::TScriptRecord"* [ %14, %11 ], [ %29, %22 ]
  %34 = icmp ult i64 %17, 224
  br i1 %34, label %71, label %35

35:                                               ; preds = %32, %35
  %36 = phi %"struct.CFX_CTTGSUBTable::TScriptRecord"* [ %69, %35 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 0, i32 0
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 0, i32 1
  store i16 0, i16* %38, align 4
  %39 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 0, i32 2
  %40 = bitcast %"class.std::__1::vector.4"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #10
  %41 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 1, i32 0
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 1, i32 1
  store i16 0, i16* %42, align 4
  %43 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 1, i32 2
  %44 = bitcast %"class.std::__1::vector.4"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #10
  %45 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 2, i32 0
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 2, i32 1
  store i16 0, i16* %46, align 4
  %47 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 2, i32 2
  %48 = bitcast %"class.std::__1::vector.4"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #10
  %49 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 3, i32 0
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 3, i32 1
  store i16 0, i16* %50, align 4
  %51 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 3, i32 2
  %52 = bitcast %"class.std::__1::vector.4"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #10
  %53 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 4, i32 0
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 4, i32 1
  store i16 0, i16* %54, align 4
  %55 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 4, i32 2
  %56 = bitcast %"class.std::__1::vector.4"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #10
  %57 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 5, i32 0
  store i32 0, i32* %57, align 8
  %58 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 5, i32 1
  store i16 0, i16* %58, align 4
  %59 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 5, i32 2
  %60 = bitcast %"class.std::__1::vector.4"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #10
  %61 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 6, i32 0
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 6, i32 1
  store i16 0, i16* %62, align 4
  %63 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 6, i32 2
  %64 = bitcast %"class.std::__1::vector.4"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #10
  %65 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 7, i32 0
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 7, i32 1
  store i16 0, i16* %66, align 4
  %67 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 7, i32 2
  %68 = bitcast %"class.std::__1::vector.4"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #10
  %69 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %36, i64 8
  %70 = icmp eq %"struct.CFX_CTTGSUBTable::TScriptRecord"* %69, %15
  br i1 %70, label %71, label %35

71:                                               ; preds = %35, %32
  %72 = ptrtoint i8* %13 to i64
  %73 = ptrtoint %"struct.CFX_CTTGSUBTable::TScriptRecord"* %15 to i64
  br label %74

74:                                               ; preds = %71, %2
  %75 = phi i64 [ 0, %2 ], [ %72, %71 ]
  %76 = phi i64 [ 0, %2 ], [ %73, %71 ]
  %77 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 1
  %78 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %77, i64 0, i32 0, i32 0
  %79 = load %"struct.CFX_CTTGSUBTable::TScriptRecord"*, %"struct.CFX_CTTGSUBTable::TScriptRecord"** %78, align 8
  %80 = icmp eq %"struct.CFX_CTTGSUBTable::TScriptRecord"* %79, null
  br i1 %80, label %124, label %81

81:                                               ; preds = %74
  %82 = bitcast %"struct.CFX_CTTGSUBTable::TScriptRecord"* %79 to i8*
  %83 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 1, i32 0, i32 1
  %84 = load %"struct.CFX_CTTGSUBTable::TScriptRecord"*, %"struct.CFX_CTTGSUBTable::TScriptRecord"** %83, align 8
  %85 = icmp eq %"struct.CFX_CTTGSUBTable::TScriptRecord"* %84, %79
  br i1 %85, label %121, label %86

86:                                               ; preds = %81, %116
  %87 = phi %"struct.CFX_CTTGSUBTable::TScriptRecord"* [ %88, %116 ], [ %84, %81 ]
  %88 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %87, i64 -1
  %89 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %87, i64 -1, i32 2
  %90 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %89, i64 0, i32 0, i32 0
  %91 = load %"struct.CFX_CTTGSUBTable::TLangSysRecord"*, %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %90, align 8
  %92 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %91, null
  br i1 %92, label %116, label %93

93:                                               ; preds = %86
  %94 = bitcast %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %91 to i8*
  %95 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %87, i64 -1, i32 2, i32 0, i32 1
  %96 = load %"struct.CFX_CTTGSUBTable::TLangSysRecord"*, %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %95, align 8
  %97 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %96, %91
  br i1 %97, label %114, label %98

98:                                               ; preds = %93, %109
  %99 = phi %"struct.CFX_CTTGSUBTable::TLangSysRecord"* [ %100, %109 ], [ %96, %93 ]
  %100 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %99, i64 -1
  %101 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %99, i64 -1, i32 3, i32 0, i32 0
  %102 = load i16*, i16** %101, align 8
  %103 = icmp eq i16* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %98
  %105 = ptrtoint i16* %102 to i64
  %106 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %99, i64 -1, i32 3, i32 0, i32 1
  %107 = bitcast i16** %106 to i64*
  store i64 %105, i64* %107, align 8
  %108 = bitcast i16* %102 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %108) #10
  br label %109

109:                                              ; preds = %104, %98
  %110 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %100, %91
  br i1 %110, label %111, label %98

111:                                              ; preds = %109
  %112 = bitcast %"class.std::__1::vector.4"* %89 to i8**
  %113 = load i8*, i8** %112, align 8
  br label %114

114:                                              ; preds = %111, %93
  %115 = phi i8* [ %113, %111 ], [ %94, %93 ]
  store %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %91, %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %95, align 8
  tail call void @_ZdlPv(i8* %115) #11
  br label %116

116:                                              ; preds = %114, %86
  %117 = icmp eq %"struct.CFX_CTTGSUBTable::TScriptRecord"* %88, %79
  br i1 %117, label %118, label %86

118:                                              ; preds = %116
  %119 = bitcast %"class.std::__1::vector"* %77 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %81
  %122 = phi i8* [ %120, %118 ], [ %82, %81 ]
  store %"struct.CFX_CTTGSUBTable::TScriptRecord"* %79, %"struct.CFX_CTTGSUBTable::TScriptRecord"** %83, align 8
  tail call void @_ZdlPv(i8* %122) #11
  %123 = bitcast %"class.std::__1::vector"* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 24, i1 false) #10
  br label %124

124:                                              ; preds = %74, %121
  %125 = bitcast %"class.std::__1::vector"* %77 to i64*
  store i64 %75, i64* %125, align 8
  %126 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 1, i32 0, i32 1
  %127 = bitcast %"struct.CFX_CTTGSUBTable::TScriptRecord"** %126 to i64*
  store i64 %76, i64* %127, align 8
  %128 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %129 = bitcast %"struct.CFX_CTTGSUBTable::TScriptRecord"** %128 to i64*
  store i64 %76, i64* %129, align 8
  %130 = inttoptr i64 %75 to %"struct.CFX_CTTGSUBTable::TScriptRecord"*
  %131 = inttoptr i64 %76 to %"struct.CFX_CTTGSUBTable::TScriptRecord"*
  %132 = icmp eq %"struct.CFX_CTTGSUBTable::TScriptRecord"* %130, %131
  br i1 %132, label %133, label %134

133:                                              ; preds = %134, %124
  ret void

134:                                              ; preds = %124, %134
  %135 = phi %"struct.CFX_CTTGSUBTable::TScriptRecord"* [ %165, %134 ], [ %130, %124 ]
  %136 = phi i8* [ %155, %134 ], [ %1, %124 ]
  %137 = getelementptr inbounds i8, i8* %136, i64 2
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = shl nuw i32 %139, 24
  %141 = getelementptr inbounds i8, i8* %136, i64 3
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = shl nuw nsw i32 %143, 16
  %145 = or i32 %144, %140
  %146 = getelementptr inbounds i8, i8* %136, i64 4
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i32
  %149 = shl nuw nsw i32 %148, 8
  %150 = or i32 %145, %149
  %151 = getelementptr inbounds i8, i8* %136, i64 5
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = or i32 %150, %153
  %155 = getelementptr inbounds i8, i8* %136, i64 6
  %156 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %135, i64 0, i32 0
  store i32 %154, i32* %156, align 8
  %157 = load i8, i8* %155, align 1
  %158 = zext i8 %157 to i64
  %159 = shl nuw nsw i64 %158, 8
  %160 = getelementptr inbounds i8, i8* %136, i64 7
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = or i64 %159, %162
  %164 = getelementptr inbounds i8, i8* %1, i64 %163
  tail call void @_ZN16CFX_CTTGSUBTable11ParseScriptEPKhPNS_13TScriptRecordE(%class.CFX_CTTGSUBTable* %0, i8* %164, %"struct.CFX_CTTGSUBTable::TScriptRecord"* %135)
  %165 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %135, i64 1
  %166 = icmp eq %"struct.CFX_CTTGSUBTable::TScriptRecord"* %165, %131
  br i1 %166, label %133, label %134
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable16ParseFeatureListEPKh(%class.CFX_CTTGSUBTable* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* %1, align 1
  %4 = zext i8 %3 to i64
  %5 = shl nuw nsw i64 %4, 8
  %6 = getelementptr inbounds i8, i8* %1, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i64
  %9 = or i64 %5, %8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %74, label %11

11:                                               ; preds = %2
  %12 = shl nuw nsw i64 %9, 5
  %13 = tail call i8* @_Znwm(i64 %12) #11
  %14 = bitcast i8* %13 to %"struct.CFX_CTTGSUBTable::TFeatureRecord"*
  %15 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %14, i64 %9
  %16 = shl nuw nsw i64 %9, 5
  %17 = add nsw i64 %16, -32
  %18 = lshr exact i64 %17, 5
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 7
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %11, %22
  %23 = phi %"struct.CFX_CTTGSUBTable::TFeatureRecord"* [ %29, %22 ], [ %14, %11 ]
  %24 = phi i64 [ %30, %22 ], [ %20, %11 ]
  %25 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %23, i64 0, i32 0
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %23, i64 0, i32 1
  store i16 0, i16* %26, align 4
  %27 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %23, i64 0, i32 2
  %28 = bitcast %"class.std::__1::vector.6"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #10
  %29 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %23, i64 1
  %30 = add i64 %24, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %22, !llvm.loop !11

32:                                               ; preds = %22, %11
  %33 = phi %"struct.CFX_CTTGSUBTable::TFeatureRecord"* [ %14, %11 ], [ %29, %22 ]
  %34 = icmp ult i64 %17, 224
  br i1 %34, label %71, label %35

35:                                               ; preds = %32, %35
  %36 = phi %"struct.CFX_CTTGSUBTable::TFeatureRecord"* [ %69, %35 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 0, i32 0
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 0, i32 1
  store i16 0, i16* %38, align 4
  %39 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 0, i32 2
  %40 = bitcast %"class.std::__1::vector.6"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #10
  %41 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 1, i32 0
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 1, i32 1
  store i16 0, i16* %42, align 4
  %43 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 1, i32 2
  %44 = bitcast %"class.std::__1::vector.6"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #10
  %45 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 2, i32 0
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 2, i32 1
  store i16 0, i16* %46, align 4
  %47 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 2, i32 2
  %48 = bitcast %"class.std::__1::vector.6"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #10
  %49 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 3, i32 0
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 3, i32 1
  store i16 0, i16* %50, align 4
  %51 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 3, i32 2
  %52 = bitcast %"class.std::__1::vector.6"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #10
  %53 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 4, i32 0
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 4, i32 1
  store i16 0, i16* %54, align 4
  %55 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 4, i32 2
  %56 = bitcast %"class.std::__1::vector.6"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #10
  %57 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 5, i32 0
  store i32 0, i32* %57, align 8
  %58 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 5, i32 1
  store i16 0, i16* %58, align 4
  %59 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 5, i32 2
  %60 = bitcast %"class.std::__1::vector.6"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #10
  %61 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 6, i32 0
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 6, i32 1
  store i16 0, i16* %62, align 4
  %63 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 6, i32 2
  %64 = bitcast %"class.std::__1::vector.6"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #10
  %65 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 7, i32 0
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 7, i32 1
  store i16 0, i16* %66, align 4
  %67 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 7, i32 2
  %68 = bitcast %"class.std::__1::vector.6"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #10
  %69 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %36, i64 8
  %70 = icmp eq %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %69, %15
  br i1 %70, label %71, label %35

71:                                               ; preds = %35, %32
  %72 = ptrtoint i8* %13 to i64
  %73 = ptrtoint %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %15 to i64
  br label %74

74:                                               ; preds = %71, %2
  %75 = phi i64 [ 0, %2 ], [ %72, %71 ]
  %76 = phi i64 [ 0, %2 ], [ %73, %71 ]
  %77 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 2
  %78 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %77, i64 0, i32 0, i32 0
  %79 = load %"struct.CFX_CTTGSUBTable::TFeatureRecord"*, %"struct.CFX_CTTGSUBTable::TFeatureRecord"** %78, align 8
  %80 = icmp eq %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %79, null
  br i1 %80, label %105, label %81

81:                                               ; preds = %74
  %82 = bitcast %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %79 to i8*
  %83 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 2, i32 0, i32 1
  %84 = load %"struct.CFX_CTTGSUBTable::TFeatureRecord"*, %"struct.CFX_CTTGSUBTable::TFeatureRecord"** %83, align 8
  %85 = icmp eq %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %84, %79
  br i1 %85, label %102, label %86

86:                                               ; preds = %81, %97
  %87 = phi %"struct.CFX_CTTGSUBTable::TFeatureRecord"* [ %88, %97 ], [ %84, %81 ]
  %88 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %87, i64 -1
  %89 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %87, i64 -1, i32 2, i32 0, i32 0
  %90 = load i16*, i16** %89, align 8
  %91 = icmp eq i16* %90, null
  br i1 %91, label %97, label %92

92:                                               ; preds = %86
  %93 = ptrtoint i16* %90 to i64
  %94 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %87, i64 -1, i32 2, i32 0, i32 1
  %95 = bitcast i16** %94 to i64*
  store i64 %93, i64* %95, align 8
  %96 = bitcast i16* %90 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %96) #10
  br label %97

97:                                               ; preds = %92, %86
  %98 = icmp eq %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %88, %79
  br i1 %98, label %99, label %86

99:                                               ; preds = %97
  %100 = bitcast %"class.std::__1::vector.21"* %77 to i8**
  %101 = load i8*, i8** %100, align 8
  br label %102

102:                                              ; preds = %99, %81
  %103 = phi i8* [ %101, %99 ], [ %82, %81 ]
  store %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %79, %"struct.CFX_CTTGSUBTable::TFeatureRecord"** %83, align 8
  tail call void @_ZdlPv(i8* %103) #11
  %104 = bitcast %"class.std::__1::vector.21"* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #10
  br label %105

105:                                              ; preds = %74, %102
  %106 = bitcast %"class.std::__1::vector.21"* %77 to i64*
  store i64 %75, i64* %106, align 8
  %107 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 2, i32 0, i32 1
  %108 = bitcast %"struct.CFX_CTTGSUBTable::TFeatureRecord"** %107 to i64*
  store i64 %76, i64* %108, align 8
  %109 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %110 = bitcast %"struct.CFX_CTTGSUBTable::TFeatureRecord"** %109 to i64*
  store i64 %76, i64* %110, align 8
  %111 = inttoptr i64 %75 to %"struct.CFX_CTTGSUBTable::TFeatureRecord"*
  %112 = inttoptr i64 %76 to %"struct.CFX_CTTGSUBTable::TFeatureRecord"*
  %113 = icmp eq %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %111, %112
  br i1 %113, label %116, label %114

114:                                              ; preds = %105
  %115 = getelementptr i8, i8* %1, i64 6
  br label %117

116:                                              ; preds = %357, %105
  ret void

117:                                              ; preds = %114, %357
  %118 = phi %"struct.CFX_CTTGSUBTable::TFeatureRecord"* [ %358, %357 ], [ %111, %114 ]
  %119 = phi i8* [ %138, %357 ], [ %1, %114 ]
  %120 = getelementptr inbounds i8, i8* %119, i64 2
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = shl nuw i32 %122, 24
  %124 = getelementptr inbounds i8, i8* %119, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = shl nuw nsw i32 %126, 16
  %128 = or i32 %127, %123
  %129 = getelementptr inbounds i8, i8* %119, i64 4
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = shl nuw nsw i32 %131, 8
  %133 = or i32 %128, %132
  %134 = getelementptr inbounds i8, i8* %119, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = or i32 %133, %136
  %138 = getelementptr inbounds i8, i8* %119, i64 6
  %139 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %118, i64 0, i32 0
  store i32 %137, i32* %139, align 8
  %140 = load i8, i8* %138, align 1
  %141 = zext i8 %140 to i64
  %142 = shl nuw nsw i64 %141, 8
  %143 = getelementptr inbounds i8, i8* %119, i64 7
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i64
  %146 = or i64 %142, %145
  %147 = getelementptr inbounds i8, i8* %1, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i16
  %150 = shl nuw i16 %149, 8
  %151 = getelementptr inbounds i8, i8* %147, i64 1
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i16
  %154 = or i16 %150, %153
  %155 = getelementptr inbounds i8, i8* %147, i64 2
  %156 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %118, i64 0, i32 1
  store i16 %154, i16* %156, align 4
  %157 = load i8, i8* %155, align 1
  %158 = zext i8 %157 to i64
  %159 = shl nuw nsw i64 %158, 8
  %160 = getelementptr inbounds i8, i8* %147, i64 3
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = or i64 %159, %162
  %164 = getelementptr inbounds i8, i8* %147, i64 4
  %165 = icmp eq i64 %163, 0
  br i1 %165, label %178, label %166

166:                                              ; preds = %117
  %167 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %163, i64 2) #10
  %168 = bitcast i8* %167 to i16*
  %169 = ptrtoint i8* %167 to i64
  %170 = getelementptr inbounds i16, i16* %168, i64 %163
  %171 = ptrtoint i16* %170 to i64
  %172 = add nsw i64 %163, -1
  %173 = getelementptr i16, i16* %168, i64 %172
  %174 = ptrtoint i16* %173 to i64
  %175 = sub i64 2, %169
  %176 = add i64 %175, %174
  %177 = and i64 %176, -2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %167, i8 0, i64 %177, i1 false) #10
  br label %178

178:                                              ; preds = %166, %117
  %179 = phi i64 [ 0, %117 ], [ %169, %166 ]
  %180 = phi i64 [ 0, %117 ], [ %171, %166 ]
  %181 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %118, i64 0, i32 2
  %182 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %181, i64 0, i32 0, i32 0
  %183 = load i16*, i16** %182, align 8
  %184 = icmp eq i16* %183, null
  br i1 %184, label %191, label %185

185:                                              ; preds = %178
  %186 = ptrtoint i16* %183 to i64
  %187 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %118, i64 0, i32 2, i32 0, i32 1
  %188 = bitcast i16** %187 to i64*
  store i64 %186, i64* %188, align 8
  %189 = bitcast i16* %183 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %189) #10
  %190 = bitcast %"class.std::__1::vector.6"* %181 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 24, i1 false) #10
  br label %191

191:                                              ; preds = %178, %185
  %192 = bitcast %"class.std::__1::vector.6"* %181 to i64*
  store i64 %179, i64* %192, align 8
  %193 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %118, i64 0, i32 2, i32 0, i32 1
  %194 = bitcast i16** %193 to i64*
  store i64 %180, i64* %194, align 8
  %195 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %118, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %196 = bitcast i16** %195 to i64*
  store i64 %180, i64* %196, align 8
  %197 = inttoptr i64 %179 to i16*
  %198 = inttoptr i64 %179 to i8*
  %199 = inttoptr i64 %180 to i16*
  %200 = icmp eq i16* %197, %199
  br i1 %200, label %357, label %201

201:                                              ; preds = %191
  %202 = getelementptr i16, i16* %199, i64 -1
  %203 = bitcast i16* %202 to i8*
  %204 = sub i64 0, %179
  %205 = getelementptr i8, i8* %203, i64 %204
  %206 = ptrtoint i8* %205 to i64
  %207 = lshr i64 %206, 1
  %208 = add nuw i64 %207, 1
  %209 = icmp ult i64 %208, 8
  br i1 %209, label %287, label %210

210:                                              ; preds = %201
  %211 = getelementptr i16, i16* %197, i64 1
  %212 = getelementptr i16, i16* %199, i64 -1
  %213 = bitcast i16* %212 to i8*
  %214 = sub i64 0, %179
  %215 = getelementptr i8, i8* %213, i64 %214
  %216 = ptrtoint i8* %215 to i64
  %217 = lshr i64 %216, 1
  %218 = getelementptr i16, i16* %211, i64 %217
  %219 = bitcast i16* %218 to i8*
  %220 = and i64 %216, -2
  %221 = add i64 %146, %220
  %222 = getelementptr i8, i8* %115, i64 %221
  %223 = icmp ugt i8* %222, %198
  %224 = icmp ult i8* %164, %219
  %225 = and i1 %223, %224
  br i1 %225, label %287, label %226

226:                                              ; preds = %210
  %227 = and i64 %208, -8
  %228 = getelementptr i16, i16* %197, i64 %227
  %229 = shl i64 %227, 1
  %230 = getelementptr i8, i8* %164, i64 %229
  %231 = add i64 %227, -8
  %232 = lshr exact i64 %231, 3
  %233 = add nuw nsw i64 %232, 1
  %234 = and i64 %233, 1
  %235 = icmp eq i64 %231, 0
  br i1 %235, label %269, label %236

236:                                              ; preds = %226
  %237 = sub nuw nsw i64 %233, %234
  br label %238

238:                                              ; preds = %238, %236
  %239 = phi i64 [ 0, %236 ], [ %266, %238 ]
  %240 = phi i64 [ %237, %236 ], [ %267, %238 ]
  %241 = getelementptr i16, i16* %197, i64 %239
  %242 = shl i64 %239, 1
  %243 = getelementptr i8, i8* %164, i64 %242
  %244 = bitcast i8* %243 to <16 x i8>*
  %245 = load <16 x i8>, <16 x i8>* %244, align 1
  %246 = shufflevector <16 x i8> %245, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %247 = shufflevector <16 x i8> %245, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %248 = zext <8 x i8> %246 to <8 x i16>
  %249 = shl nuw <8 x i16> %248, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %250 = zext <8 x i8> %247 to <8 x i16>
  %251 = or <8 x i16> %249, %250
  %252 = bitcast i16* %241 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %252, align 2, !alias.scope !12, !noalias !15
  %253 = or i64 %239, 8
  %254 = getelementptr i16, i16* %197, i64 %253
  %255 = shl i64 %253, 1
  %256 = getelementptr i8, i8* %164, i64 %255
  %257 = bitcast i8* %256 to <16 x i8>*
  %258 = load <16 x i8>, <16 x i8>* %257, align 1
  %259 = shufflevector <16 x i8> %258, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %260 = shufflevector <16 x i8> %258, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %261 = zext <8 x i8> %259 to <8 x i16>
  %262 = shl nuw <8 x i16> %261, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %263 = zext <8 x i8> %260 to <8 x i16>
  %264 = or <8 x i16> %262, %263
  %265 = bitcast i16* %254 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %265, align 2, !alias.scope !12, !noalias !15
  %266 = add i64 %239, 16
  %267 = add i64 %240, -2
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %238, !llvm.loop !17

269:                                              ; preds = %238, %226
  %270 = phi i64 [ 0, %226 ], [ %266, %238 ]
  %271 = icmp eq i64 %234, 0
  br i1 %271, label %285, label %272

272:                                              ; preds = %269
  %273 = getelementptr i16, i16* %197, i64 %270
  %274 = shl i64 %270, 1
  %275 = getelementptr i8, i8* %164, i64 %274
  %276 = bitcast i8* %275 to <16 x i8>*
  %277 = load <16 x i8>, <16 x i8>* %276, align 1
  %278 = shufflevector <16 x i8> %277, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %279 = shufflevector <16 x i8> %277, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %280 = zext <8 x i8> %278 to <8 x i16>
  %281 = shl nuw <8 x i16> %280, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %282 = zext <8 x i8> %279 to <8 x i16>
  %283 = or <8 x i16> %281, %282
  %284 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %283, <8 x i16>* %284, align 2, !alias.scope !12, !noalias !15
  br label %285

285:                                              ; preds = %269, %272
  %286 = icmp eq i64 %208, %227
  br i1 %286, label %357, label %287

287:                                              ; preds = %285, %210, %201
  %288 = phi i16* [ %197, %210 ], [ %197, %201 ], [ %228, %285 ]
  %289 = phi i8* [ %164, %210 ], [ %164, %201 ], [ %230, %285 ]
  %290 = ptrtoint i16* %288 to i64
  %291 = getelementptr i16, i16* %199, i64 -1
  %292 = ptrtoint i16* %291 to i64
  %293 = sub i64 %292, %290
  %294 = lshr i64 %293, 1
  %295 = add nuw i64 %294, 1
  %296 = and i64 %295, 3
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %313, label %298

298:                                              ; preds = %287, %298
  %299 = phi i16* [ %310, %298 ], [ %288, %287 ]
  %300 = phi i8* [ %309, %298 ], [ %289, %287 ]
  %301 = phi i64 [ %311, %298 ], [ %296, %287 ]
  %302 = load i8, i8* %300, align 1
  %303 = zext i8 %302 to i16
  %304 = shl nuw i16 %303, 8
  %305 = getelementptr inbounds i8, i8* %300, i64 1
  %306 = load i8, i8* %305, align 1
  %307 = zext i8 %306 to i16
  %308 = or i16 %304, %307
  %309 = getelementptr inbounds i8, i8* %300, i64 2
  store i16 %308, i16* %299, align 2
  %310 = getelementptr inbounds i16, i16* %299, i64 1
  %311 = add i64 %301, -1
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %298, !llvm.loop !19

313:                                              ; preds = %298, %287
  %314 = phi i16* [ %288, %287 ], [ %310, %298 ]
  %315 = phi i8* [ %289, %287 ], [ %309, %298 ]
  %316 = icmp ult i64 %293, 6
  br i1 %316, label %357, label %317

317:                                              ; preds = %313, %317
  %318 = phi i16* [ %355, %317 ], [ %314, %313 ]
  %319 = phi i8* [ %354, %317 ], [ %315, %313 ]
  %320 = load i8, i8* %319, align 1
  %321 = zext i8 %320 to i16
  %322 = shl nuw i16 %321, 8
  %323 = getelementptr inbounds i8, i8* %319, i64 1
  %324 = load i8, i8* %323, align 1
  %325 = zext i8 %324 to i16
  %326 = or i16 %322, %325
  %327 = getelementptr inbounds i8, i8* %319, i64 2
  store i16 %326, i16* %318, align 2
  %328 = getelementptr inbounds i16, i16* %318, i64 1
  %329 = load i8, i8* %327, align 1
  %330 = zext i8 %329 to i16
  %331 = shl nuw i16 %330, 8
  %332 = getelementptr inbounds i8, i8* %319, i64 3
  %333 = load i8, i8* %332, align 1
  %334 = zext i8 %333 to i16
  %335 = or i16 %331, %334
  %336 = getelementptr inbounds i8, i8* %319, i64 4
  store i16 %335, i16* %328, align 2
  %337 = getelementptr inbounds i16, i16* %318, i64 2
  %338 = load i8, i8* %336, align 1
  %339 = zext i8 %338 to i16
  %340 = shl nuw i16 %339, 8
  %341 = getelementptr inbounds i8, i8* %319, i64 5
  %342 = load i8, i8* %341, align 1
  %343 = zext i8 %342 to i16
  %344 = or i16 %340, %343
  %345 = getelementptr inbounds i8, i8* %319, i64 6
  store i16 %344, i16* %337, align 2
  %346 = getelementptr inbounds i16, i16* %318, i64 3
  %347 = load i8, i8* %345, align 1
  %348 = zext i8 %347 to i16
  %349 = shl nuw i16 %348, 8
  %350 = getelementptr inbounds i8, i8* %319, i64 7
  %351 = load i8, i8* %350, align 1
  %352 = zext i8 %351 to i16
  %353 = or i16 %349, %352
  %354 = getelementptr inbounds i8, i8* %319, i64 8
  store i16 %353, i16* %346, align 2
  %355 = getelementptr inbounds i16, i16* %318, i64 4
  %356 = icmp eq i16* %355, %199
  br i1 %356, label %357, label %317, !llvm.loop !20

357:                                              ; preds = %313, %317, %285, %191
  %358 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %118, i64 1
  %359 = icmp eq %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %358, %112
  br i1 %359, label %116, label %117
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable15ParseLookupListEPKh(%class.CFX_CTTGSUBTable* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* %1, align 1
  %4 = zext i8 %3 to i64
  %5 = shl nuw nsw i64 %4, 8
  %6 = getelementptr inbounds i8, i8* %1, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i64
  %9 = or i64 %5, %8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %74, label %11

11:                                               ; preds = %2
  %12 = shl nuw nsw i64 %9, 5
  %13 = tail call i8* @_Znwm(i64 %12) #11
  %14 = bitcast i8* %13 to %"struct.CFX_CTTGSUBTable::TLookup"*
  %15 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %14, i64 %9
  %16 = shl nuw nsw i64 %9, 5
  %17 = add nsw i64 %16, -32
  %18 = lshr exact i64 %17, 5
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 7
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %11, %22
  %23 = phi %"struct.CFX_CTTGSUBTable::TLookup"* [ %29, %22 ], [ %14, %11 ]
  %24 = phi i64 [ %30, %22 ], [ %20, %11 ]
  %25 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %23, i64 0, i32 0
  store i16 0, i16* %25, align 8
  %26 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %23, i64 0, i32 1
  store i16 0, i16* %26, align 2
  %27 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %23, i64 0, i32 2
  %28 = bitcast %"class.std::__1::vector.30"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #10
  %29 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %23, i64 1
  %30 = add i64 %24, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %22, !llvm.loop !21

32:                                               ; preds = %22, %11
  %33 = phi %"struct.CFX_CTTGSUBTable::TLookup"* [ %14, %11 ], [ %29, %22 ]
  %34 = icmp ult i64 %17, 224
  br i1 %34, label %71, label %35

35:                                               ; preds = %32, %35
  %36 = phi %"struct.CFX_CTTGSUBTable::TLookup"* [ %69, %35 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 0, i32 0
  store i16 0, i16* %37, align 8
  %38 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 0, i32 1
  store i16 0, i16* %38, align 2
  %39 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 0, i32 2
  %40 = bitcast %"class.std::__1::vector.30"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #10
  %41 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 1, i32 0
  store i16 0, i16* %41, align 8
  %42 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 1, i32 1
  store i16 0, i16* %42, align 2
  %43 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 1, i32 2
  %44 = bitcast %"class.std::__1::vector.30"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #10
  %45 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 2, i32 0
  store i16 0, i16* %45, align 8
  %46 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 2, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 2, i32 2
  %48 = bitcast %"class.std::__1::vector.30"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #10
  %49 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 3, i32 0
  store i16 0, i16* %49, align 8
  %50 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 3, i32 1
  store i16 0, i16* %50, align 2
  %51 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 3, i32 2
  %52 = bitcast %"class.std::__1::vector.30"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #10
  %53 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 4, i32 0
  store i16 0, i16* %53, align 8
  %54 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 4, i32 1
  store i16 0, i16* %54, align 2
  %55 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 4, i32 2
  %56 = bitcast %"class.std::__1::vector.30"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #10
  %57 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 5, i32 0
  store i16 0, i16* %57, align 8
  %58 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 5, i32 1
  store i16 0, i16* %58, align 2
  %59 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 5, i32 2
  %60 = bitcast %"class.std::__1::vector.30"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #10
  %61 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 6, i32 0
  store i16 0, i16* %61, align 8
  %62 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 6, i32 1
  store i16 0, i16* %62, align 2
  %63 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 6, i32 2
  %64 = bitcast %"class.std::__1::vector.30"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #10
  %65 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 7, i32 0
  store i16 0, i16* %65, align 8
  %66 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 7, i32 1
  store i16 0, i16* %66, align 2
  %67 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 7, i32 2
  %68 = bitcast %"class.std::__1::vector.30"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #10
  %69 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %36, i64 8
  %70 = icmp eq %"struct.CFX_CTTGSUBTable::TLookup"* %69, %15
  br i1 %70, label %71, label %35

71:                                               ; preds = %35, %32
  %72 = ptrtoint i8* %13 to i64
  %73 = ptrtoint %"struct.CFX_CTTGSUBTable::TLookup"* %15 to i64
  br label %74

74:                                               ; preds = %71, %2
  %75 = phi i64 [ 0, %2 ], [ %72, %71 ]
  %76 = phi i64 [ 0, %2 ], [ %73, %71 ]
  %77 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 3
  %78 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %77, i64 0, i32 0, i32 0
  %79 = load %"struct.CFX_CTTGSUBTable::TLookup"*, %"struct.CFX_CTTGSUBTable::TLookup"** %78, align 8
  %80 = icmp eq %"struct.CFX_CTTGSUBTable::TLookup"* %79, null
  br i1 %80, label %124, label %81

81:                                               ; preds = %74
  %82 = bitcast %"struct.CFX_CTTGSUBTable::TLookup"* %79 to i8*
  %83 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 3, i32 0, i32 1
  %84 = load %"struct.CFX_CTTGSUBTable::TLookup"*, %"struct.CFX_CTTGSUBTable::TLookup"** %83, align 8
  %85 = icmp eq %"struct.CFX_CTTGSUBTable::TLookup"* %84, %79
  br i1 %85, label %121, label %86

86:                                               ; preds = %81, %116
  %87 = phi %"struct.CFX_CTTGSUBTable::TLookup"* [ %88, %116 ], [ %84, %81 ]
  %88 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %87, i64 -1
  %89 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %87, i64 -1, i32 2
  %90 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %89, i64 0, i32 0, i32 0
  %91 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %90, align 8
  %92 = icmp eq %"class.std::__1::unique_ptr"* %91, null
  br i1 %92, label %116, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.std::__1::unique_ptr"* %91 to i8*
  %95 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %87, i64 -1, i32 2, i32 0, i32 1
  %96 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %95, align 8
  %97 = icmp eq %"class.std::__1::unique_ptr"* %96, %91
  br i1 %97, label %114, label %98

98:                                               ; preds = %93, %109
  %99 = phi %"class.std::__1::unique_ptr"* [ %100, %109 ], [ %96, %93 ]
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %99, i64 -1
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 0, i32 0, i32 0, i32 0
  %102 = load %"struct.CFX_CTTGSUBTable::TSubTableBase"*, %"struct.CFX_CTTGSUBTable::TSubTableBase"** %101, align 8
  store %"struct.CFX_CTTGSUBTable::TSubTableBase"* null, %"struct.CFX_CTTGSUBTable::TSubTableBase"** %101, align 8
  %103 = icmp eq %"struct.CFX_CTTGSUBTable::TSubTableBase"* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %98
  %105 = bitcast %"struct.CFX_CTTGSUBTable::TSubTableBase"* %102 to void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)***
  %106 = load void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)**, void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)*, void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)** %106, i64 1
  %108 = load void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)*, void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)** %107, align 8
  tail call void %108(%"struct.CFX_CTTGSUBTable::TSubTableBase"* nonnull %102) #10
  br label %109

109:                                              ; preds = %104, %98
  %110 = icmp eq %"class.std::__1::unique_ptr"* %100, %91
  br i1 %110, label %111, label %98

111:                                              ; preds = %109
  %112 = bitcast %"class.std::__1::vector.30"* %89 to i8**
  %113 = load i8*, i8** %112, align 8
  br label %114

114:                                              ; preds = %111, %93
  %115 = phi i8* [ %113, %111 ], [ %94, %93 ]
  store %"class.std::__1::unique_ptr"* %91, %"class.std::__1::unique_ptr"** %95, align 8
  tail call void @_ZdlPv(i8* %115) #11
  br label %116

116:                                              ; preds = %114, %86
  %117 = icmp eq %"struct.CFX_CTTGSUBTable::TLookup"* %88, %79
  br i1 %117, label %118, label %86

118:                                              ; preds = %116
  %119 = bitcast %"class.std::__1::vector.28"* %77 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %81
  %122 = phi i8* [ %120, %118 ], [ %82, %81 ]
  store %"struct.CFX_CTTGSUBTable::TLookup"* %79, %"struct.CFX_CTTGSUBTable::TLookup"** %83, align 8
  tail call void @_ZdlPv(i8* %122) #11
  %123 = bitcast %"class.std::__1::vector.28"* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 24, i1 false) #10
  br label %124

124:                                              ; preds = %74, %121
  %125 = bitcast %"class.std::__1::vector.28"* %77 to i64*
  store i64 %75, i64* %125, align 8
  %126 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 3, i32 0, i32 1
  %127 = bitcast %"struct.CFX_CTTGSUBTable::TLookup"** %126 to i64*
  store i64 %76, i64* %127, align 8
  %128 = getelementptr inbounds %class.CFX_CTTGSUBTable, %class.CFX_CTTGSUBTable* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %129 = bitcast %"struct.CFX_CTTGSUBTable::TLookup"** %128 to i64*
  store i64 %76, i64* %129, align 8
  %130 = inttoptr i64 %75 to %"struct.CFX_CTTGSUBTable::TLookup"*
  %131 = inttoptr i64 %76 to %"struct.CFX_CTTGSUBTable::TLookup"*
  %132 = icmp eq %"struct.CFX_CTTGSUBTable::TLookup"* %130, %131
  br i1 %132, label %133, label %134

133:                                              ; preds = %134, %124
  ret void

134:                                              ; preds = %124, %134
  %135 = phi i8* [ %137, %134 ], [ %1, %124 ]
  %136 = phi %"struct.CFX_CTTGSUBTable::TLookup"* [ %146, %134 ], [ %130, %124 ]
  %137 = getelementptr inbounds i8, i8* %135, i64 2
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i64
  %140 = shl nuw nsw i64 %139, 8
  %141 = getelementptr inbounds i8, i8* %135, i64 3
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i64
  %144 = or i64 %140, %143
  %145 = getelementptr inbounds i8, i8* %1, i64 %144
  tail call void @_ZN16CFX_CTTGSUBTable11ParseLookupEPKhPNS_7TLookupE(%class.CFX_CTTGSUBTable* %0, i8* %145, %"struct.CFX_CTTGSUBTable::TLookup"* %136)
  %146 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %136, i64 1
  %147 = icmp eq %"struct.CFX_CTTGSUBTable::TLookup"* %146, %131
  br i1 %147, label %133, label %134
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable11ParseScriptEPKhPNS_13TScriptRecordE(%class.CFX_CTTGSUBTable* nocapture readnone, i8*, %"struct.CFX_CTTGSUBTable::TScriptRecord"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = load i8, i8* %1, align 1
  %5 = zext i8 %4 to i16
  %6 = shl nuw i16 %5, 8
  %7 = getelementptr inbounds i8, i8* %1, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i16
  %10 = or i16 %6, %9
  %11 = getelementptr inbounds i8, i8* %1, i64 2
  %12 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %2, i64 0, i32 1
  store i16 %10, i16* %12, align 4
  %13 = load i8, i8* %11, align 1
  %14 = zext i8 %13 to i64
  %15 = shl nuw nsw i64 %14, 8
  %16 = getelementptr inbounds i8, i8* %1, i64 3
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i64
  %19 = or i64 %15, %18
  %20 = getelementptr inbounds i8, i8* %1, i64 4
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %3
  %23 = shl nuw nsw i64 %19, 5
  %24 = tail call i8* @_Znwm(i64 %23) #11
  %25 = bitcast i8* %24 to %"struct.CFX_CTTGSUBTable::TLangSysRecord"*
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %25, i64 %19
  %28 = ptrtoint %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %27 to i64
  %29 = add nsw i64 %19, -1
  %30 = getelementptr %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %25, i64 %29, i32 0
  %31 = ptrtoint i32* %30 to i64
  %32 = sub i64 32, %26
  %33 = add i64 %32, %31
  %34 = and i64 %33, -32
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 %34, i1 false) #10
  br label %35

35:                                               ; preds = %3, %22
  %36 = phi i64 [ 0, %3 ], [ %26, %22 ]
  %37 = phi i64 [ 0, %3 ], [ %28, %22 ]
  %38 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %2, i64 0, i32 2
  %39 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %38, i64 0, i32 0, i32 0
  %40 = load %"struct.CFX_CTTGSUBTable::TLangSysRecord"*, %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %39, align 8
  %41 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %40, null
  br i1 %41, label %66, label %42

42:                                               ; preds = %35
  %43 = bitcast %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %40 to i8*
  %44 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %2, i64 0, i32 2, i32 0, i32 1
  %45 = load %"struct.CFX_CTTGSUBTable::TLangSysRecord"*, %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %44, align 8
  %46 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %45, %40
  br i1 %46, label %63, label %47

47:                                               ; preds = %42, %58
  %48 = phi %"struct.CFX_CTTGSUBTable::TLangSysRecord"* [ %49, %58 ], [ %45, %42 ]
  %49 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %48, i64 -1
  %50 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %48, i64 -1, i32 3, i32 0, i32 0
  %51 = load i16*, i16** %50, align 8
  %52 = icmp eq i16* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %47
  %54 = ptrtoint i16* %51 to i64
  %55 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %48, i64 -1, i32 3, i32 0, i32 1
  %56 = bitcast i16** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast i16* %51 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %57) #10
  br label %58

58:                                               ; preds = %53, %47
  %59 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %49, %40
  br i1 %59, label %60, label %47

60:                                               ; preds = %58
  %61 = bitcast %"class.std::__1::vector.4"* %38 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %42
  %64 = phi i8* [ %62, %60 ], [ %43, %42 ]
  store %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %40, %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %44, align 8
  tail call void @_ZdlPv(i8* %64) #11
  %65 = bitcast %"class.std::__1::vector.4"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #10
  br label %66

66:                                               ; preds = %35, %63
  %67 = bitcast %"class.std::__1::vector.4"* %38 to i64*
  store i64 %36, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %2, i64 0, i32 2, i32 0, i32 1
  %69 = bitcast %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %68 to i64*
  store i64 %37, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %2, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %71 = bitcast %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %70 to i64*
  store i64 %37, i64* %71, align 8
  %72 = inttoptr i64 %36 to %"struct.CFX_CTTGSUBTable::TLangSysRecord"*
  %73 = inttoptr i64 %37 to %"struct.CFX_CTTGSUBTable::TLangSysRecord"*
  %74 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %72, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %66
  %76 = getelementptr i8, i8* %1, i64 8
  br label %78

77:                                               ; preds = %327, %66
  ret void

78:                                               ; preds = %75, %327
  %79 = phi %"struct.CFX_CTTGSUBTable::TLangSysRecord"* [ %328, %327 ], [ %72, %75 ]
  %80 = phi i8* [ %107, %327 ], [ %20, %75 ]
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = shl nuw i32 %82, 24
  %84 = getelementptr inbounds i8, i8* %80, i64 1
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = shl nuw nsw i32 %86, 16
  %88 = or i32 %87, %83
  %89 = getelementptr inbounds i8, i8* %80, i64 2
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = shl nuw nsw i32 %91, 8
  %93 = or i32 %88, %92
  %94 = getelementptr inbounds i8, i8* %80, i64 3
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = or i32 %93, %96
  %98 = getelementptr inbounds i8, i8* %80, i64 4
  %99 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %79, i64 0, i32 0
  store i32 %97, i32* %99, align 8
  %100 = load i8, i8* %98, align 1
  %101 = zext i8 %100 to i64
  %102 = shl nuw nsw i64 %101, 8
  %103 = getelementptr inbounds i8, i8* %80, i64 5
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = or i64 %102, %105
  %107 = getelementptr inbounds i8, i8* %80, i64 6
  %108 = getelementptr inbounds i8, i8* %1, i64 %106
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i16
  %111 = shl nuw i16 %110, 8
  %112 = getelementptr inbounds i8, i8* %108, i64 1
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i16
  %115 = or i16 %111, %114
  %116 = getelementptr inbounds i8, i8* %108, i64 2
  %117 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %79, i64 0, i32 1
  store i16 %115, i16* %117, align 4
  %118 = load i8, i8* %116, align 1
  %119 = zext i8 %118 to i16
  %120 = shl nuw i16 %119, 8
  %121 = getelementptr inbounds i8, i8* %108, i64 3
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i16
  %124 = or i16 %120, %123
  %125 = getelementptr inbounds i8, i8* %108, i64 4
  %126 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %79, i64 0, i32 2
  store i16 %124, i16* %126, align 2
  %127 = load i8, i8* %125, align 1
  %128 = zext i8 %127 to i64
  %129 = shl nuw nsw i64 %128, 8
  %130 = getelementptr inbounds i8, i8* %108, i64 5
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = or i64 %129, %132
  %134 = getelementptr inbounds i8, i8* %108, i64 6
  %135 = icmp eq i64 %133, 0
  br i1 %135, label %148, label %136

136:                                              ; preds = %78
  %137 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %133, i64 2) #10
  %138 = bitcast i8* %137 to i16*
  %139 = ptrtoint i8* %137 to i64
  %140 = getelementptr inbounds i16, i16* %138, i64 %133
  %141 = ptrtoint i16* %140 to i64
  %142 = add nsw i64 %133, -1
  %143 = getelementptr i16, i16* %138, i64 %142
  %144 = ptrtoint i16* %143 to i64
  %145 = sub i64 2, %139
  %146 = add i64 %145, %144
  %147 = and i64 %146, -2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %137, i8 0, i64 %147, i1 false) #10
  br label %148

148:                                              ; preds = %136, %78
  %149 = phi i64 [ 0, %78 ], [ %139, %136 ]
  %150 = phi i64 [ 0, %78 ], [ %141, %136 ]
  %151 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %79, i64 0, i32 3
  %152 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %151, i64 0, i32 0, i32 0
  %153 = load i16*, i16** %152, align 8
  %154 = icmp eq i16* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %148
  %156 = ptrtoint i16* %153 to i64
  %157 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %79, i64 0, i32 3, i32 0, i32 1
  %158 = bitcast i16** %157 to i64*
  store i64 %156, i64* %158, align 8
  %159 = bitcast i16* %153 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %159) #10
  %160 = bitcast %"class.std::__1::vector.6"* %151 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %160, i8 0, i64 24, i1 false) #10
  br label %161

161:                                              ; preds = %148, %155
  %162 = bitcast %"class.std::__1::vector.6"* %151 to i64*
  store i64 %149, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %79, i64 0, i32 3, i32 0, i32 1
  %164 = bitcast i16** %163 to i64*
  store i64 %150, i64* %164, align 8
  %165 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %79, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %166 = bitcast i16** %165 to i64*
  store i64 %150, i64* %166, align 8
  %167 = inttoptr i64 %149 to i16*
  %168 = inttoptr i64 %149 to i8*
  %169 = inttoptr i64 %150 to i16*
  %170 = icmp eq i16* %167, %169
  br i1 %170, label %327, label %171

171:                                              ; preds = %161
  %172 = getelementptr i16, i16* %169, i64 -1
  %173 = bitcast i16* %172 to i8*
  %174 = sub i64 0, %149
  %175 = getelementptr i8, i8* %173, i64 %174
  %176 = ptrtoint i8* %175 to i64
  %177 = lshr i64 %176, 1
  %178 = add nuw i64 %177, 1
  %179 = icmp ult i64 %178, 8
  br i1 %179, label %257, label %180

180:                                              ; preds = %171
  %181 = getelementptr i16, i16* %167, i64 1
  %182 = getelementptr i16, i16* %169, i64 -1
  %183 = bitcast i16* %182 to i8*
  %184 = sub i64 0, %149
  %185 = getelementptr i8, i8* %183, i64 %184
  %186 = ptrtoint i8* %185 to i64
  %187 = lshr i64 %186, 1
  %188 = getelementptr i16, i16* %181, i64 %187
  %189 = bitcast i16* %188 to i8*
  %190 = and i64 %186, -2
  %191 = add i64 %106, %190
  %192 = getelementptr i8, i8* %76, i64 %191
  %193 = icmp ugt i8* %192, %168
  %194 = icmp ult i8* %134, %189
  %195 = and i1 %193, %194
  br i1 %195, label %257, label %196

196:                                              ; preds = %180
  %197 = and i64 %178, -8
  %198 = getelementptr i16, i16* %167, i64 %197
  %199 = shl i64 %197, 1
  %200 = getelementptr i8, i8* %134, i64 %199
  %201 = add i64 %197, -8
  %202 = lshr exact i64 %201, 3
  %203 = add nuw nsw i64 %202, 1
  %204 = and i64 %203, 1
  %205 = icmp eq i64 %201, 0
  br i1 %205, label %239, label %206

206:                                              ; preds = %196
  %207 = sub nuw nsw i64 %203, %204
  br label %208

208:                                              ; preds = %208, %206
  %209 = phi i64 [ 0, %206 ], [ %236, %208 ]
  %210 = phi i64 [ %207, %206 ], [ %237, %208 ]
  %211 = getelementptr i16, i16* %167, i64 %209
  %212 = shl i64 %209, 1
  %213 = getelementptr i8, i8* %134, i64 %212
  %214 = bitcast i8* %213 to <16 x i8>*
  %215 = load <16 x i8>, <16 x i8>* %214, align 1
  %216 = shufflevector <16 x i8> %215, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %217 = shufflevector <16 x i8> %215, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %218 = zext <8 x i8> %216 to <8 x i16>
  %219 = shl nuw <8 x i16> %218, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %220 = zext <8 x i8> %217 to <8 x i16>
  %221 = or <8 x i16> %219, %220
  %222 = bitcast i16* %211 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %222, align 2, !alias.scope !22, !noalias !25
  %223 = or i64 %209, 8
  %224 = getelementptr i16, i16* %167, i64 %223
  %225 = shl i64 %223, 1
  %226 = getelementptr i8, i8* %134, i64 %225
  %227 = bitcast i8* %226 to <16 x i8>*
  %228 = load <16 x i8>, <16 x i8>* %227, align 1
  %229 = shufflevector <16 x i8> %228, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %230 = shufflevector <16 x i8> %228, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %231 = zext <8 x i8> %229 to <8 x i16>
  %232 = shl nuw <8 x i16> %231, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %233 = zext <8 x i8> %230 to <8 x i16>
  %234 = or <8 x i16> %232, %233
  %235 = bitcast i16* %224 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %235, align 2, !alias.scope !22, !noalias !25
  %236 = add i64 %209, 16
  %237 = add i64 %210, -2
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %208, !llvm.loop !27

239:                                              ; preds = %208, %196
  %240 = phi i64 [ 0, %196 ], [ %236, %208 ]
  %241 = icmp eq i64 %204, 0
  br i1 %241, label %255, label %242

242:                                              ; preds = %239
  %243 = getelementptr i16, i16* %167, i64 %240
  %244 = shl i64 %240, 1
  %245 = getelementptr i8, i8* %134, i64 %244
  %246 = bitcast i8* %245 to <16 x i8>*
  %247 = load <16 x i8>, <16 x i8>* %246, align 1
  %248 = shufflevector <16 x i8> %247, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %249 = shufflevector <16 x i8> %247, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %250 = zext <8 x i8> %248 to <8 x i16>
  %251 = shl nuw <8 x i16> %250, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %252 = zext <8 x i8> %249 to <8 x i16>
  %253 = or <8 x i16> %251, %252
  %254 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %254, align 2, !alias.scope !22, !noalias !25
  br label %255

255:                                              ; preds = %239, %242
  %256 = icmp eq i64 %178, %197
  br i1 %256, label %327, label %257

257:                                              ; preds = %255, %180, %171
  %258 = phi i16* [ %167, %180 ], [ %167, %171 ], [ %198, %255 ]
  %259 = phi i8* [ %134, %180 ], [ %134, %171 ], [ %200, %255 ]
  %260 = ptrtoint i16* %258 to i64
  %261 = getelementptr i16, i16* %169, i64 -1
  %262 = ptrtoint i16* %261 to i64
  %263 = sub i64 %262, %260
  %264 = lshr i64 %263, 1
  %265 = add nuw i64 %264, 1
  %266 = and i64 %265, 3
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %283, label %268

268:                                              ; preds = %257, %268
  %269 = phi i16* [ %280, %268 ], [ %258, %257 ]
  %270 = phi i8* [ %279, %268 ], [ %259, %257 ]
  %271 = phi i64 [ %281, %268 ], [ %266, %257 ]
  %272 = load i8, i8* %270, align 1
  %273 = zext i8 %272 to i16
  %274 = shl nuw i16 %273, 8
  %275 = getelementptr inbounds i8, i8* %270, i64 1
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i16
  %278 = or i16 %274, %277
  %279 = getelementptr inbounds i8, i8* %270, i64 2
  store i16 %278, i16* %269, align 2
  %280 = getelementptr inbounds i16, i16* %269, i64 1
  %281 = add i64 %271, -1
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %268, !llvm.loop !28

283:                                              ; preds = %268, %257
  %284 = phi i16* [ %258, %257 ], [ %280, %268 ]
  %285 = phi i8* [ %259, %257 ], [ %279, %268 ]
  %286 = icmp ult i64 %263, 6
  br i1 %286, label %327, label %287

287:                                              ; preds = %283, %287
  %288 = phi i16* [ %325, %287 ], [ %284, %283 ]
  %289 = phi i8* [ %324, %287 ], [ %285, %283 ]
  %290 = load i8, i8* %289, align 1
  %291 = zext i8 %290 to i16
  %292 = shl nuw i16 %291, 8
  %293 = getelementptr inbounds i8, i8* %289, i64 1
  %294 = load i8, i8* %293, align 1
  %295 = zext i8 %294 to i16
  %296 = or i16 %292, %295
  %297 = getelementptr inbounds i8, i8* %289, i64 2
  store i16 %296, i16* %288, align 2
  %298 = getelementptr inbounds i16, i16* %288, i64 1
  %299 = load i8, i8* %297, align 1
  %300 = zext i8 %299 to i16
  %301 = shl nuw i16 %300, 8
  %302 = getelementptr inbounds i8, i8* %289, i64 3
  %303 = load i8, i8* %302, align 1
  %304 = zext i8 %303 to i16
  %305 = or i16 %301, %304
  %306 = getelementptr inbounds i8, i8* %289, i64 4
  store i16 %305, i16* %298, align 2
  %307 = getelementptr inbounds i16, i16* %288, i64 2
  %308 = load i8, i8* %306, align 1
  %309 = zext i8 %308 to i16
  %310 = shl nuw i16 %309, 8
  %311 = getelementptr inbounds i8, i8* %289, i64 5
  %312 = load i8, i8* %311, align 1
  %313 = zext i8 %312 to i16
  %314 = or i16 %310, %313
  %315 = getelementptr inbounds i8, i8* %289, i64 6
  store i16 %314, i16* %307, align 2
  %316 = getelementptr inbounds i16, i16* %288, i64 3
  %317 = load i8, i8* %315, align 1
  %318 = zext i8 %317 to i16
  %319 = shl nuw i16 %318, 8
  %320 = getelementptr inbounds i8, i8* %289, i64 7
  %321 = load i8, i8* %320, align 1
  %322 = zext i8 %321 to i16
  %323 = or i16 %319, %322
  %324 = getelementptr inbounds i8, i8* %289, i64 8
  store i16 %323, i16* %316, align 2
  %325 = getelementptr inbounds i16, i16* %288, i64 4
  %326 = icmp eq i16* %325, %169
  br i1 %326, label %327, label %287, !llvm.loop !29

327:                                              ; preds = %283, %287, %255, %161
  %328 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %79, i64 1
  %329 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %328, %73
  br i1 %329, label %77, label %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable12ParseLangSysEPKhPNS_14TLangSysRecordE(%class.CFX_CTTGSUBTable* nocapture readnone, i8*, %"struct.CFX_CTTGSUBTable::TLangSysRecord"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = load i8, i8* %1, align 1
  %5 = zext i8 %4 to i16
  %6 = shl nuw i16 %5, 8
  %7 = getelementptr inbounds i8, i8* %1, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i16
  %10 = or i16 %6, %9
  %11 = getelementptr inbounds i8, i8* %1, i64 2
  %12 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %2, i64 0, i32 1
  store i16 %10, i16* %12, align 4
  %13 = load i8, i8* %11, align 1
  %14 = zext i8 %13 to i16
  %15 = shl nuw i16 %14, 8
  %16 = getelementptr inbounds i8, i8* %1, i64 3
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = or i16 %15, %18
  %20 = getelementptr inbounds i8, i8* %1, i64 4
  %21 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %2, i64 0, i32 2
  store i16 %19, i16* %21, align 2
  %22 = load i8, i8* %20, align 1
  %23 = zext i8 %22 to i64
  %24 = shl nuw nsw i64 %23, 8
  %25 = getelementptr inbounds i8, i8* %1, i64 5
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = or i64 %24, %27
  %29 = getelementptr inbounds i8, i8* %1, i64 6
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %43, label %31

31:                                               ; preds = %3
  %32 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %28, i64 2) #10
  %33 = bitcast i8* %32 to i16*
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds i16, i16* %33, i64 %28
  %36 = ptrtoint i16* %35 to i64
  %37 = add nsw i64 %28, -1
  %38 = getelementptr i16, i16* %33, i64 %37
  %39 = ptrtoint i16* %38 to i64
  %40 = sub i64 2, %34
  %41 = add i64 %40, %39
  %42 = and i64 %41, -2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %32, i8 0, i64 %42, i1 false) #10
  br label %43

43:                                               ; preds = %3, %31
  %44 = phi i64 [ 0, %3 ], [ %34, %31 ]
  %45 = phi i64 [ 0, %3 ], [ %36, %31 ]
  %46 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %2, i64 0, i32 3
  %47 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %46, i64 0, i32 0, i32 0
  %48 = load i16*, i16** %47, align 8
  %49 = icmp eq i16* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %43
  %51 = ptrtoint i16* %48 to i64
  %52 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %2, i64 0, i32 3, i32 0, i32 1
  %53 = bitcast i16** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast i16* %48 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %54) #10
  %55 = bitcast %"class.std::__1::vector.6"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #10
  br label %56

56:                                               ; preds = %43, %50
  %57 = bitcast %"class.std::__1::vector.6"* %46 to i64*
  store i64 %44, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %2, i64 0, i32 3, i32 0, i32 1
  %59 = bitcast i16** %58 to i64*
  store i64 %45, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %2, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %61 = bitcast i16** %60 to i64*
  store i64 %45, i64* %61, align 8
  %62 = inttoptr i64 %44 to i16*
  %63 = inttoptr i64 %44 to i8*
  %64 = inttoptr i64 %45 to i16*
  %65 = icmp eq i16* %62, %64
  br i1 %65, label %182, label %66

66:                                               ; preds = %56
  %67 = getelementptr i16, i16* %64, i64 -1
  %68 = bitcast i16* %67 to i8*
  %69 = sub i64 0, %44
  %70 = getelementptr i8, i8* %68, i64 %69
  %71 = ptrtoint i8* %70 to i64
  %72 = lshr i64 %71, 1
  %73 = add nuw i64 %72, 1
  %74 = icmp ult i64 %73, 8
  br i1 %74, label %75, label %105

75:                                               ; preds = %180, %105, %66
  %76 = phi i16* [ %62, %105 ], [ %62, %66 ], [ %123, %180 ]
  %77 = phi i8* [ %29, %105 ], [ %29, %66 ], [ %125, %180 ]
  %78 = ptrtoint i16* %76 to i64
  %79 = getelementptr i16, i16* %64, i64 -1
  %80 = ptrtoint i16* %79 to i64
  %81 = sub i64 %80, %78
  %82 = lshr i64 %81, 1
  %83 = add nuw i64 %82, 1
  %84 = and i64 %83, 3
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %101, label %86

86:                                               ; preds = %75, %86
  %87 = phi i16* [ %98, %86 ], [ %76, %75 ]
  %88 = phi i8* [ %97, %86 ], [ %77, %75 ]
  %89 = phi i64 [ %99, %86 ], [ %84, %75 ]
  %90 = load i8, i8* %88, align 1
  %91 = zext i8 %90 to i16
  %92 = shl nuw i16 %91, 8
  %93 = getelementptr inbounds i8, i8* %88, i64 1
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i16
  %96 = or i16 %92, %95
  %97 = getelementptr inbounds i8, i8* %88, i64 2
  store i16 %96, i16* %87, align 2
  %98 = getelementptr inbounds i16, i16* %87, i64 1
  %99 = add i64 %89, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %86, !llvm.loop !30

101:                                              ; preds = %86, %75
  %102 = phi i16* [ %76, %75 ], [ %98, %86 ]
  %103 = phi i8* [ %77, %75 ], [ %97, %86 ]
  %104 = icmp ult i64 %81, 6
  br i1 %104, label %182, label %183

105:                                              ; preds = %66
  %106 = getelementptr i16, i16* %64, i64 -1
  %107 = bitcast i16* %106 to i8*
  %108 = sub i64 0, %44
  %109 = getelementptr i8, i8* %107, i64 %108
  %110 = ptrtoint i8* %109 to i64
  %111 = lshr i64 %110, 1
  %112 = add nuw i64 %111, 1
  %113 = getelementptr i16, i16* %62, i64 %112
  %114 = bitcast i16* %113 to i8*
  %115 = add i64 %110, 8
  %116 = and i64 %115, -2
  %117 = getelementptr i8, i8* %1, i64 %116
  %118 = icmp ugt i8* %117, %63
  %119 = icmp ult i8* %29, %114
  %120 = and i1 %118, %119
  br i1 %120, label %75, label %121

121:                                              ; preds = %105
  %122 = and i64 %73, -8
  %123 = getelementptr i16, i16* %62, i64 %122
  %124 = shl i64 %122, 1
  %125 = getelementptr i8, i8* %29, i64 %124
  %126 = add i64 %122, -8
  %127 = lshr exact i64 %126, 3
  %128 = add nuw nsw i64 %127, 1
  %129 = and i64 %128, 1
  %130 = icmp eq i64 %126, 0
  br i1 %130, label %164, label %131

131:                                              ; preds = %121
  %132 = sub nuw nsw i64 %128, %129
  br label %133

133:                                              ; preds = %133, %131
  %134 = phi i64 [ 0, %131 ], [ %161, %133 ]
  %135 = phi i64 [ %132, %131 ], [ %162, %133 ]
  %136 = getelementptr i16, i16* %62, i64 %134
  %137 = shl i64 %134, 1
  %138 = getelementptr i8, i8* %29, i64 %137
  %139 = bitcast i8* %138 to <16 x i8>*
  %140 = load <16 x i8>, <16 x i8>* %139, align 1
  %141 = shufflevector <16 x i8> %140, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %142 = shufflevector <16 x i8> %140, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %143 = zext <8 x i8> %141 to <8 x i16>
  %144 = shl nuw <8 x i16> %143, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %145 = zext <8 x i8> %142 to <8 x i16>
  %146 = or <8 x i16> %144, %145
  %147 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %147, align 2, !alias.scope !31, !noalias !34
  %148 = or i64 %134, 8
  %149 = getelementptr i16, i16* %62, i64 %148
  %150 = shl i64 %148, 1
  %151 = getelementptr i8, i8* %29, i64 %150
  %152 = bitcast i8* %151 to <16 x i8>*
  %153 = load <16 x i8>, <16 x i8>* %152, align 1
  %154 = shufflevector <16 x i8> %153, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %155 = shufflevector <16 x i8> %153, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %156 = zext <8 x i8> %154 to <8 x i16>
  %157 = shl nuw <8 x i16> %156, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %158 = zext <8 x i8> %155 to <8 x i16>
  %159 = or <8 x i16> %157, %158
  %160 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %159, <8 x i16>* %160, align 2, !alias.scope !31, !noalias !34
  %161 = add i64 %134, 16
  %162 = add i64 %135, -2
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %133, !llvm.loop !36

164:                                              ; preds = %133, %121
  %165 = phi i64 [ 0, %121 ], [ %161, %133 ]
  %166 = icmp eq i64 %129, 0
  br i1 %166, label %180, label %167

167:                                              ; preds = %164
  %168 = getelementptr i16, i16* %62, i64 %165
  %169 = shl i64 %165, 1
  %170 = getelementptr i8, i8* %29, i64 %169
  %171 = bitcast i8* %170 to <16 x i8>*
  %172 = load <16 x i8>, <16 x i8>* %171, align 1
  %173 = shufflevector <16 x i8> %172, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %174 = shufflevector <16 x i8> %172, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %175 = zext <8 x i8> %173 to <8 x i16>
  %176 = shl nuw <8 x i16> %175, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %177 = zext <8 x i8> %174 to <8 x i16>
  %178 = or <8 x i16> %176, %177
  %179 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %178, <8 x i16>* %179, align 2, !alias.scope !31, !noalias !34
  br label %180

180:                                              ; preds = %164, %167
  %181 = icmp eq i64 %73, %122
  br i1 %181, label %182, label %75

182:                                              ; preds = %101, %183, %180, %56
  ret void

183:                                              ; preds = %101, %183
  %184 = phi i16* [ %221, %183 ], [ %102, %101 ]
  %185 = phi i8* [ %220, %183 ], [ %103, %101 ]
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i16
  %188 = shl nuw i16 %187, 8
  %189 = getelementptr inbounds i8, i8* %185, i64 1
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i16
  %192 = or i16 %188, %191
  %193 = getelementptr inbounds i8, i8* %185, i64 2
  store i16 %192, i16* %184, align 2
  %194 = getelementptr inbounds i16, i16* %184, i64 1
  %195 = load i8, i8* %193, align 1
  %196 = zext i8 %195 to i16
  %197 = shl nuw i16 %196, 8
  %198 = getelementptr inbounds i8, i8* %185, i64 3
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i16
  %201 = or i16 %197, %200
  %202 = getelementptr inbounds i8, i8* %185, i64 4
  store i16 %201, i16* %194, align 2
  %203 = getelementptr inbounds i16, i16* %184, i64 2
  %204 = load i8, i8* %202, align 1
  %205 = zext i8 %204 to i16
  %206 = shl nuw i16 %205, 8
  %207 = getelementptr inbounds i8, i8* %185, i64 5
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i16
  %210 = or i16 %206, %209
  %211 = getelementptr inbounds i8, i8* %185, i64 6
  store i16 %210, i16* %203, align 2
  %212 = getelementptr inbounds i16, i16* %184, i64 3
  %213 = load i8, i8* %211, align 1
  %214 = zext i8 %213 to i16
  %215 = shl nuw i16 %214, 8
  %216 = getelementptr inbounds i8, i8* %185, i64 7
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i16
  %219 = or i16 %215, %218
  %220 = getelementptr inbounds i8, i8* %185, i64 8
  store i16 %219, i16* %212, align 2
  %221 = getelementptr inbounds i16, i16* %184, i64 4
  %222 = icmp eq i16* %221, %64
  br i1 %222, label %182, label %183, !llvm.loop !37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable12ParseFeatureEPKhPNS_14TFeatureRecordE(%class.CFX_CTTGSUBTable* nocapture readnone, i8*, %"struct.CFX_CTTGSUBTable::TFeatureRecord"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = load i8, i8* %1, align 1
  %5 = zext i8 %4 to i16
  %6 = shl nuw i16 %5, 8
  %7 = getelementptr inbounds i8, i8* %1, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i16
  %10 = or i16 %6, %9
  %11 = getelementptr inbounds i8, i8* %1, i64 2
  %12 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %2, i64 0, i32 1
  store i16 %10, i16* %12, align 4
  %13 = load i8, i8* %11, align 1
  %14 = zext i8 %13 to i64
  %15 = shl nuw nsw i64 %14, 8
  %16 = getelementptr inbounds i8, i8* %1, i64 3
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i64
  %19 = or i64 %15, %18
  %20 = getelementptr inbounds i8, i8* %1, i64 4
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %3
  %23 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %19, i64 2) #10
  %24 = bitcast i8* %23 to i16*
  %25 = ptrtoint i8* %23 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %19
  %27 = ptrtoint i16* %26 to i64
  %28 = add nsw i64 %19, -1
  %29 = getelementptr i16, i16* %24, i64 %28
  %30 = ptrtoint i16* %29 to i64
  %31 = sub i64 2, %25
  %32 = add i64 %31, %30
  %33 = and i64 %32, -2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %23, i8 0, i64 %33, i1 false) #10
  br label %34

34:                                               ; preds = %3, %22
  %35 = phi i64 [ 0, %3 ], [ %25, %22 ]
  %36 = phi i64 [ 0, %3 ], [ %27, %22 ]
  %37 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %2, i64 0, i32 2
  %38 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %37, i64 0, i32 0, i32 0
  %39 = load i16*, i16** %38, align 8
  %40 = icmp eq i16* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %34
  %42 = ptrtoint i16* %39 to i64
  %43 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %2, i64 0, i32 2, i32 0, i32 1
  %44 = bitcast i16** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = bitcast i16* %39 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %45) #10
  %46 = bitcast %"class.std::__1::vector.6"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #10
  br label %47

47:                                               ; preds = %34, %41
  %48 = bitcast %"class.std::__1::vector.6"* %37 to i64*
  store i64 %35, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %2, i64 0, i32 2, i32 0, i32 1
  %50 = bitcast i16** %49 to i64*
  store i64 %36, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %2, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast i16** %51 to i64*
  store i64 %36, i64* %52, align 8
  %53 = inttoptr i64 %35 to i16*
  %54 = inttoptr i64 %35 to i8*
  %55 = inttoptr i64 %36 to i16*
  %56 = icmp eq i16* %53, %55
  br i1 %56, label %173, label %57

57:                                               ; preds = %47
  %58 = getelementptr i16, i16* %55, i64 -1
  %59 = bitcast i16* %58 to i8*
  %60 = sub i64 0, %35
  %61 = getelementptr i8, i8* %59, i64 %60
  %62 = ptrtoint i8* %61 to i64
  %63 = lshr i64 %62, 1
  %64 = add nuw i64 %63, 1
  %65 = icmp ult i64 %64, 8
  br i1 %65, label %66, label %96

66:                                               ; preds = %171, %96, %57
  %67 = phi i16* [ %53, %96 ], [ %53, %57 ], [ %114, %171 ]
  %68 = phi i8* [ %20, %96 ], [ %20, %57 ], [ %116, %171 ]
  %69 = ptrtoint i16* %67 to i64
  %70 = getelementptr i16, i16* %55, i64 -1
  %71 = ptrtoint i16* %70 to i64
  %72 = sub i64 %71, %69
  %73 = lshr i64 %72, 1
  %74 = add nuw i64 %73, 1
  %75 = and i64 %74, 3
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %66, %77
  %78 = phi i16* [ %89, %77 ], [ %67, %66 ]
  %79 = phi i8* [ %88, %77 ], [ %68, %66 ]
  %80 = phi i64 [ %90, %77 ], [ %75, %66 ]
  %81 = load i8, i8* %79, align 1
  %82 = zext i8 %81 to i16
  %83 = shl nuw i16 %82, 8
  %84 = getelementptr inbounds i8, i8* %79, i64 1
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i16
  %87 = or i16 %83, %86
  %88 = getelementptr inbounds i8, i8* %79, i64 2
  store i16 %87, i16* %78, align 2
  %89 = getelementptr inbounds i16, i16* %78, i64 1
  %90 = add i64 %80, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %77, !llvm.loop !38

92:                                               ; preds = %77, %66
  %93 = phi i16* [ %67, %66 ], [ %89, %77 ]
  %94 = phi i8* [ %68, %66 ], [ %88, %77 ]
  %95 = icmp ult i64 %72, 6
  br i1 %95, label %173, label %174

96:                                               ; preds = %57
  %97 = getelementptr i16, i16* %55, i64 -1
  %98 = bitcast i16* %97 to i8*
  %99 = sub i64 0, %35
  %100 = getelementptr i8, i8* %98, i64 %99
  %101 = ptrtoint i8* %100 to i64
  %102 = lshr i64 %101, 1
  %103 = add nuw i64 %102, 1
  %104 = getelementptr i16, i16* %53, i64 %103
  %105 = bitcast i16* %104 to i8*
  %106 = add i64 %101, 6
  %107 = and i64 %106, -2
  %108 = getelementptr i8, i8* %1, i64 %107
  %109 = icmp ugt i8* %108, %54
  %110 = icmp ult i8* %20, %105
  %111 = and i1 %109, %110
  br i1 %111, label %66, label %112

112:                                              ; preds = %96
  %113 = and i64 %64, -8
  %114 = getelementptr i16, i16* %53, i64 %113
  %115 = shl i64 %113, 1
  %116 = getelementptr i8, i8* %20, i64 %115
  %117 = add i64 %113, -8
  %118 = lshr exact i64 %117, 3
  %119 = add nuw nsw i64 %118, 1
  %120 = and i64 %119, 1
  %121 = icmp eq i64 %117, 0
  br i1 %121, label %155, label %122

122:                                              ; preds = %112
  %123 = sub nuw nsw i64 %119, %120
  br label %124

124:                                              ; preds = %124, %122
  %125 = phi i64 [ 0, %122 ], [ %152, %124 ]
  %126 = phi i64 [ %123, %122 ], [ %153, %124 ]
  %127 = getelementptr i16, i16* %53, i64 %125
  %128 = shl i64 %125, 1
  %129 = getelementptr i8, i8* %20, i64 %128
  %130 = bitcast i8* %129 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1
  %132 = shufflevector <16 x i8> %131, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %133 = shufflevector <16 x i8> %131, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %134 = zext <8 x i8> %132 to <8 x i16>
  %135 = shl nuw <8 x i16> %134, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %136 = zext <8 x i8> %133 to <8 x i16>
  %137 = or <8 x i16> %135, %136
  %138 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %138, align 2, !alias.scope !39, !noalias !42
  %139 = or i64 %125, 8
  %140 = getelementptr i16, i16* %53, i64 %139
  %141 = shl i64 %139, 1
  %142 = getelementptr i8, i8* %20, i64 %141
  %143 = bitcast i8* %142 to <16 x i8>*
  %144 = load <16 x i8>, <16 x i8>* %143, align 1
  %145 = shufflevector <16 x i8> %144, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %146 = shufflevector <16 x i8> %144, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %147 = zext <8 x i8> %145 to <8 x i16>
  %148 = shl nuw <8 x i16> %147, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %149 = zext <8 x i8> %146 to <8 x i16>
  %150 = or <8 x i16> %148, %149
  %151 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %151, align 2, !alias.scope !39, !noalias !42
  %152 = add i64 %125, 16
  %153 = add i64 %126, -2
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %124, !llvm.loop !44

155:                                              ; preds = %124, %112
  %156 = phi i64 [ 0, %112 ], [ %152, %124 ]
  %157 = icmp eq i64 %120, 0
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr i16, i16* %53, i64 %156
  %160 = shl i64 %156, 1
  %161 = getelementptr i8, i8* %20, i64 %160
  %162 = bitcast i8* %161 to <16 x i8>*
  %163 = load <16 x i8>, <16 x i8>* %162, align 1
  %164 = shufflevector <16 x i8> %163, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %165 = shufflevector <16 x i8> %163, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %166 = zext <8 x i8> %164 to <8 x i16>
  %167 = shl nuw <8 x i16> %166, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %168 = zext <8 x i8> %165 to <8 x i16>
  %169 = or <8 x i16> %167, %168
  %170 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %169, <8 x i16>* %170, align 2, !alias.scope !39, !noalias !42
  br label %171

171:                                              ; preds = %155, %158
  %172 = icmp eq i64 %64, %113
  br i1 %172, label %173, label %66

173:                                              ; preds = %92, %174, %171, %47
  ret void

174:                                              ; preds = %92, %174
  %175 = phi i16* [ %212, %174 ], [ %93, %92 ]
  %176 = phi i8* [ %211, %174 ], [ %94, %92 ]
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i16
  %179 = shl nuw i16 %178, 8
  %180 = getelementptr inbounds i8, i8* %176, i64 1
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i16
  %183 = or i16 %179, %182
  %184 = getelementptr inbounds i8, i8* %176, i64 2
  store i16 %183, i16* %175, align 2
  %185 = getelementptr inbounds i16, i16* %175, i64 1
  %186 = load i8, i8* %184, align 1
  %187 = zext i8 %186 to i16
  %188 = shl nuw i16 %187, 8
  %189 = getelementptr inbounds i8, i8* %176, i64 3
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i16
  %192 = or i16 %188, %191
  %193 = getelementptr inbounds i8, i8* %176, i64 4
  store i16 %192, i16* %185, align 2
  %194 = getelementptr inbounds i16, i16* %175, i64 2
  %195 = load i8, i8* %193, align 1
  %196 = zext i8 %195 to i16
  %197 = shl nuw i16 %196, 8
  %198 = getelementptr inbounds i8, i8* %176, i64 5
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i16
  %201 = or i16 %197, %200
  %202 = getelementptr inbounds i8, i8* %176, i64 6
  store i16 %201, i16* %194, align 2
  %203 = getelementptr inbounds i16, i16* %175, i64 3
  %204 = load i8, i8* %202, align 1
  %205 = zext i8 %204 to i16
  %206 = shl nuw i16 %205, 8
  %207 = getelementptr inbounds i8, i8* %176, i64 7
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i16
  %210 = or i16 %206, %209
  %211 = getelementptr inbounds i8, i8* %176, i64 8
  store i16 %210, i16* %203, align 2
  %212 = getelementptr inbounds i16, i16* %175, i64 4
  %213 = icmp eq i16* %212, %55
  br i1 %213, label %173, label %174, !llvm.loop !45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable11ParseLookupEPKhPNS_7TLookupE(%class.CFX_CTTGSUBTable* nocapture readnone, i8*, %"struct.CFX_CTTGSUBTable::TLookup"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = load i8, i8* %1, align 1
  %5 = zext i8 %4 to i16
  %6 = shl nuw i16 %5, 8
  %7 = getelementptr inbounds i8, i8* %1, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i16
  %10 = or i16 %6, %9
  %11 = getelementptr inbounds i8, i8* %1, i64 2
  %12 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %2, i64 0, i32 0
  store i16 %10, i16* %12, align 8
  %13 = load i8, i8* %11, align 1
  %14 = zext i8 %13 to i16
  %15 = shl nuw i16 %14, 8
  %16 = getelementptr inbounds i8, i8* %1, i64 3
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = or i16 %15, %18
  %20 = getelementptr inbounds i8, i8* %1, i64 4
  %21 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %2, i64 0, i32 1
  store i16 %19, i16* %21, align 2
  %22 = load i8, i8* %20, align 1
  %23 = zext i8 %22 to i64
  %24 = shl nuw nsw i64 %23, 8
  %25 = getelementptr inbounds i8, i8* %1, i64 5
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = or i64 %24, %27
  %29 = getelementptr inbounds i8, i8* %1, i64 6
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %44, label %31

31:                                               ; preds = %3
  %32 = shl nuw nsw i64 %28, 3
  %33 = tail call i8* @_Znwm(i64 %32) #11
  %34 = bitcast i8* %33 to %"class.std::__1::unique_ptr"*
  %35 = ptrtoint i8* %33 to i64
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %34, i64 %28
  %37 = ptrtoint %"class.std::__1::unique_ptr"* %36 to i64
  %38 = add nsw i64 %28, -1
  %39 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %34, i64 %38, i32 0, i32 0, i32 0
  %40 = ptrtoint %"struct.CFX_CTTGSUBTable::TSubTableBase"** %39 to i64
  %41 = sub i64 8, %35
  %42 = add i64 %41, %40
  %43 = and i64 %42, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 %43, i1 false) #10
  br label %44

44:                                               ; preds = %3, %31
  %45 = phi i64 [ 0, %3 ], [ %35, %31 ]
  %46 = phi i64 [ 0, %3 ], [ %37, %31 ]
  %47 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %2, i64 0, i32 2
  %48 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %48, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, null
  br i1 %50, label %76, label %51

51:                                               ; preds = %44
  %52 = bitcast %"class.std::__1::unique_ptr"* %49 to i8*
  %53 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %2, i64 0, i32 2, i32 0, i32 1
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %53, align 8
  %55 = icmp eq %"class.std::__1::unique_ptr"* %54, %49
  br i1 %55, label %72, label %56

56:                                               ; preds = %51, %67
  %57 = phi %"class.std::__1::unique_ptr"* [ %58, %67 ], [ %54, %51 ]
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 -1
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.CFX_CTTGSUBTable::TSubTableBase"*, %"struct.CFX_CTTGSUBTable::TSubTableBase"** %59, align 8
  store %"struct.CFX_CTTGSUBTable::TSubTableBase"* null, %"struct.CFX_CTTGSUBTable::TSubTableBase"** %59, align 8
  %61 = icmp eq %"struct.CFX_CTTGSUBTable::TSubTableBase"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %56
  %63 = bitcast %"struct.CFX_CTTGSUBTable::TSubTableBase"* %60 to void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)***
  %64 = load void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)**, void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)*, void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)** %64, i64 1
  %66 = load void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)*, void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)** %65, align 8
  tail call void %66(%"struct.CFX_CTTGSUBTable::TSubTableBase"* nonnull %60) #10
  br label %67

67:                                               ; preds = %62, %56
  %68 = icmp eq %"class.std::__1::unique_ptr"* %58, %49
  br i1 %68, label %69, label %56

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.30"* %47 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %69, %51
  %73 = phi i8* [ %71, %69 ], [ %52, %51 ]
  store %"class.std::__1::unique_ptr"* %49, %"class.std::__1::unique_ptr"** %53, align 8
  tail call void @_ZdlPv(i8* %73) #11
  %74 = bitcast %"class.std::__1::vector.30"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #10
  %75 = load i16, i16* %12, align 8
  br label %76

76:                                               ; preds = %44, %72
  %77 = phi i16 [ %10, %44 ], [ %75, %72 ]
  %78 = bitcast %"class.std::__1::vector.30"* %47 to i64*
  store i64 %45, i64* %78, align 8
  %79 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %2, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.std::__1::unique_ptr"** %79 to i64*
  store i64 %46, i64* %80, align 8
  %81 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %2, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"** %81 to i64*
  store i64 %46, i64* %82, align 8
  %83 = icmp ne i16 %77, 1
  %84 = inttoptr i64 %45 to %"class.std::__1::unique_ptr"*
  %85 = inttoptr i64 %46 to %"class.std::__1::unique_ptr"*
  %86 = icmp eq %"class.std::__1::unique_ptr"* %84, %85
  %87 = or i1 %83, %86
  br i1 %87, label %153, label %88

88:                                               ; preds = %76, %150
  %89 = phi %"class.std::__1::unique_ptr"* [ %151, %150 ], [ %84, %76 ]
  %90 = phi i8* [ %98, %150 ], [ %29, %76 ]
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i64
  %93 = shl nuw nsw i64 %92, 8
  %94 = getelementptr inbounds i8, i8* %90, i64 1
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i64
  %97 = or i64 %93, %96
  %98 = getelementptr inbounds i8, i8* %90, i64 2
  %99 = getelementptr inbounds i8, i8* %1, i64 %97
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i16
  %102 = shl nuw i16 %101, 8
  %103 = getelementptr inbounds i8, i8* %99, i64 1
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i16
  %106 = or i16 %102, %105
  switch i16 %106, label %139 [
    i16 1, label %107
    i16 2, label %136
  ]

107:                                              ; preds = %88
  %108 = getelementptr inbounds i8, i8* %99, i64 2
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i64
  %111 = shl nuw nsw i64 %110, 8
  %112 = getelementptr inbounds i8, i8* %99, i64 3
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i64
  %115 = or i64 %111, %114
  %116 = tail call i8* @_Znwm(i64 32) #11
  %117 = bitcast i8* %116 to i32 (...)***
  %118 = getelementptr inbounds i8, i8* %116, i64 8
  %119 = bitcast i8* %118 to i16*
  store i16 1, i16* %119, align 8
  %120 = getelementptr inbounds i8, i8* %116, i64 16
  %121 = bitcast i8* %120 to i64*
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable10TSubTable1E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  %122 = getelementptr inbounds i8, i8* %99, i64 %115
  %123 = tail call %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* @_ZN16CFX_CTTGSUBTable13ParseCoverageEPKh(%class.CFX_CTTGSUBTable* %0, i8* %122) #10
  %124 = ptrtoint %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %123 to i64
  store i64 %124, i64* %121, align 8
  %125 = getelementptr inbounds i8, i8* %99, i64 4
  %126 = load i8, i8* %125, align 1
  %127 = getelementptr inbounds i8, i8* %99, i64 5
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %126 to i16
  %130 = shl nuw i16 %129, 8
  %131 = zext i8 %128 to i16
  %132 = or i16 %130, %131
  %133 = getelementptr inbounds i8, i8* %116, i64 24
  %134 = bitcast i8* %133 to i16*
  store i16 %132, i16* %134, align 8
  %135 = ptrtoint i8* %116 to i64
  br label %139

136:                                              ; preds = %88
  %137 = tail call %"struct.CFX_CTTGSUBTable::TSubTable2"* @_ZN16CFX_CTTGSUBTable23ParseSingleSubstFormat2EPKh(%class.CFX_CTTGSUBTable* %0, i8* %99) #10
  %138 = ptrtoint %"struct.CFX_CTTGSUBTable::TSubTable2"* %137 to i64
  br label %139

139:                                              ; preds = %88, %107, %136
  %140 = phi i64 [ %138, %136 ], [ %135, %107 ], [ 0, %88 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 0, i32 0, i32 0, i32 0
  %142 = load %"struct.CFX_CTTGSUBTable::TSubTableBase"*, %"struct.CFX_CTTGSUBTable::TSubTableBase"** %141, align 8
  %143 = bitcast %"class.std::__1::unique_ptr"* %89 to i64*
  store i64 %140, i64* %143, align 8
  %144 = icmp eq %"struct.CFX_CTTGSUBTable::TSubTableBase"* %142, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"struct.CFX_CTTGSUBTable::TSubTableBase"* %142 to void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)***
  %147 = load void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)**, void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)*, void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)** %147, i64 1
  %149 = load void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)*, void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)** %148, align 8
  tail call void %149(%"struct.CFX_CTTGSUBTable::TSubTableBase"* nonnull %142) #10
  br label %150

150:                                              ; preds = %145, %139
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 1
  %152 = icmp eq %"class.std::__1::unique_ptr"* %151, %85
  br i1 %152, label %153, label %88

153:                                              ; preds = %150, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.CFX_CTTGSUBTable::TSubTableBase"* @_ZN16CFX_CTTGSUBTable16ParseSingleSubstEPKh(%class.CFX_CTTGSUBTable* nocapture readnone, i8*) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* %1, align 1
  %4 = zext i8 %3 to i16
  %5 = shl nuw i16 %4, 8
  %6 = getelementptr inbounds i8, i8* %1, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i16
  %9 = or i16 %5, %8
  switch i16 %9, label %42 [
    i16 1, label %10
    i16 2, label %39
  ]

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i64 2
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i64
  %14 = shl nuw nsw i64 %13, 8
  %15 = getelementptr inbounds i8, i8* %1, i64 3
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = or i64 %14, %17
  %19 = tail call i8* @_Znwm(i64 32) #11
  %20 = bitcast i8* %19 to i32 (...)***
  %21 = getelementptr inbounds i8, i8* %19, i64 8
  %22 = bitcast i8* %21 to i16*
  store i16 1, i16* %22, align 8
  %23 = getelementptr inbounds i8, i8* %19, i64 16
  %24 = bitcast i8* %23 to i64*
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable10TSubTable1E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %25 = getelementptr inbounds i8, i8* %1, i64 %18
  %26 = tail call %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* @_ZN16CFX_CTTGSUBTable13ParseCoverageEPKh(%class.CFX_CTTGSUBTable* %0, i8* %25) #10
  %27 = ptrtoint %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %26 to i64
  store i64 %27, i64* %24, align 8
  %28 = getelementptr inbounds i8, i8* %1, i64 4
  %29 = load i8, i8* %28, align 1
  %30 = getelementptr inbounds i8, i8* %1, i64 5
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %29 to i16
  %33 = shl nuw i16 %32, 8
  %34 = zext i8 %31 to i16
  %35 = or i16 %33, %34
  %36 = getelementptr inbounds i8, i8* %19, i64 24
  %37 = bitcast i8* %36 to i16*
  store i16 %35, i16* %37, align 8
  %38 = ptrtoint i8* %19 to i64
  br label %42

39:                                               ; preds = %2
  %40 = tail call %"struct.CFX_CTTGSUBTable::TSubTable2"* @_ZN16CFX_CTTGSUBTable23ParseSingleSubstFormat2EPKh(%class.CFX_CTTGSUBTable* %0, i8* %1)
  %41 = ptrtoint %"struct.CFX_CTTGSUBTable::TSubTable2"* %40 to i64
  br label %42

42:                                               ; preds = %2, %39, %10
  %43 = phi i64 [ %41, %39 ], [ %38, %10 ], [ 0, %2 ]
  %44 = inttoptr i64 %43 to %"struct.CFX_CTTGSUBTable::TSubTableBase"*
  ret %"struct.CFX_CTTGSUBTable::TSubTableBase"* %44
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* @_ZN16CFX_CTTGSUBTable13ParseCoverageEPKh(%class.CFX_CTTGSUBTable* nocapture readnone, i8*) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* %1, align 1
  %4 = zext i8 %3 to i16
  %5 = shl nuw i16 %4, 8
  %6 = getelementptr inbounds i8, i8* %1, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i16
  %9 = or i16 %5, %8
  switch i16 %9, label %197 [
    i16 1, label %10
    i16 2, label %194
  ]

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i64 2
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i16
  %14 = shl nuw i16 %13, 8
  %15 = getelementptr inbounds i8, i8* %1, i64 3
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i16
  %18 = or i16 %14, %17
  %19 = tail call i8* @_Znwm(i64 40) #11
  %20 = zext i16 %18 to i64
  %21 = bitcast i8* %19 to i32 (...)***
  %22 = getelementptr inbounds i8, i8* %19, i64 8
  %23 = bitcast i8* %22 to i16*
  store i16 1, i16* %23, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable16TCoverageFormat1E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %24 = getelementptr inbounds i8, i8* %19, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #10
  %25 = icmp eq i16 %18, 0
  br i1 %25, label %192, label %26

26:                                               ; preds = %10
  %27 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %20, i64 2) #10
  %28 = bitcast i8* %27 to i16*
  %29 = getelementptr inbounds i8, i8* %19, i64 24
  %30 = bitcast i8* %24 to i8**
  store i8* %27, i8** %30, align 8
  %31 = getelementptr inbounds i16, i16* %28, i64 %20
  %32 = getelementptr inbounds i8, i8* %19, i64 32
  %33 = bitcast i8* %32 to i16**
  store i16* %31, i16** %33, align 8
  %34 = bitcast i8* %29 to i64*
  %35 = ptrtoint i8* %27 to i64
  %36 = add nsw i64 %20, -1
  %37 = getelementptr i16, i16* %28, i64 %36
  %38 = ptrtoint i16* %37 to i64
  %39 = sub i64 2, %35
  %40 = add i64 %39, %38
  %41 = and i64 %40, -2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %27, i8 0, i64 %41, i1 false) #10
  %42 = ptrtoint i16* %31 to i64
  store i64 %42, i64* %34, align 8
  %43 = icmp eq i16* %31, %28
  br i1 %43, label %192, label %44

44:                                               ; preds = %26
  %45 = getelementptr inbounds i8, i8* %1, i64 4
  %46 = shl nuw nsw i64 %20, 1
  %47 = add nsw i64 %46, -2
  %48 = lshr exact i64 %47, 1
  %49 = add nuw i64 %48, 1
  %50 = icmp ult i64 %49, 8
  br i1 %50, label %120, label %51

51:                                               ; preds = %44
  %52 = shl nuw nsw i64 %20, 1
  %53 = getelementptr i8, i8* %27, i64 %52
  %54 = add nuw nsw i64 %52, 4
  %55 = getelementptr i8, i8* %1, i64 %54
  %56 = icmp ult i8* %27, %55
  %57 = icmp ult i8* %45, %53
  %58 = and i1 %56, %57
  br i1 %58, label %120, label %59

59:                                               ; preds = %51
  %60 = and i64 %49, -8
  %61 = getelementptr i16, i16* %28, i64 %60
  %62 = shl i64 %60, 1
  %63 = getelementptr i8, i8* %45, i64 %62
  %64 = add i64 %60, -8
  %65 = lshr exact i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %64, 0
  br i1 %68, label %102, label %69

69:                                               ; preds = %59
  %70 = sub nuw nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %99, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %100, %71 ]
  %74 = getelementptr i16, i16* %28, i64 %72
  %75 = shl i64 %72, 1
  %76 = getelementptr i8, i8* %45, i64 %75
  %77 = bitcast i8* %76 to <16 x i8>*
  %78 = load <16 x i8>, <16 x i8>* %77, align 1
  %79 = shufflevector <16 x i8> %78, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %80 = shufflevector <16 x i8> %78, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %81 = zext <8 x i8> %79 to <8 x i16>
  %82 = shl nuw <8 x i16> %81, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %83 = zext <8 x i8> %80 to <8 x i16>
  %84 = or <8 x i16> %82, %83
  %85 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %85, align 2, !alias.scope !46, !noalias !49
  %86 = or i64 %72, 8
  %87 = getelementptr i16, i16* %28, i64 %86
  %88 = shl i64 %86, 1
  %89 = getelementptr i8, i8* %45, i64 %88
  %90 = bitcast i8* %89 to <16 x i8>*
  %91 = load <16 x i8>, <16 x i8>* %90, align 1
  %92 = shufflevector <16 x i8> %91, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %93 = shufflevector <16 x i8> %91, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %94 = zext <8 x i8> %92 to <8 x i16>
  %95 = shl nuw <8 x i16> %94, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %96 = zext <8 x i8> %93 to <8 x i16>
  %97 = or <8 x i16> %95, %96
  %98 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %98, align 2, !alias.scope !46, !noalias !49
  %99 = add i64 %72, 16
  %100 = add i64 %73, -2
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %71, !llvm.loop !51

102:                                              ; preds = %71, %59
  %103 = phi i64 [ 0, %59 ], [ %99, %71 ]
  %104 = icmp eq i64 %67, 0
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr i16, i16* %28, i64 %103
  %107 = shl i64 %103, 1
  %108 = getelementptr i8, i8* %45, i64 %107
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1
  %111 = shufflevector <16 x i8> %110, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %112 = shufflevector <16 x i8> %110, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %113 = zext <8 x i8> %111 to <8 x i16>
  %114 = shl nuw <8 x i16> %113, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %115 = zext <8 x i8> %112 to <8 x i16>
  %116 = or <8 x i16> %114, %115
  %117 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %117, align 2, !alias.scope !46, !noalias !49
  br label %118

118:                                              ; preds = %102, %105
  %119 = icmp eq i64 %49, %60
  br i1 %119, label %192, label %120

120:                                              ; preds = %118, %51, %44
  %121 = phi i16* [ %28, %51 ], [ %28, %44 ], [ %61, %118 ]
  %122 = phi i8* [ %45, %51 ], [ %45, %44 ], [ %63, %118 ]
  %123 = ptrtoint i16* %121 to i64
  %124 = shl nuw nsw i64 %20, 1
  %125 = add nsw i64 %124, -2
  %126 = sub i64 %125, %123
  %127 = getelementptr i8, i8* %27, i64 %126
  %128 = ptrtoint i8* %127 to i64
  %129 = lshr i64 %128, 1
  %130 = add nuw i64 %129, 1
  %131 = and i64 %130, 3
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %148, label %133

133:                                              ; preds = %120, %133
  %134 = phi i16* [ %145, %133 ], [ %121, %120 ]
  %135 = phi i8* [ %144, %133 ], [ %122, %120 ]
  %136 = phi i64 [ %146, %133 ], [ %131, %120 ]
  %137 = load i8, i8* %135, align 1
  %138 = zext i8 %137 to i16
  %139 = shl nuw i16 %138, 8
  %140 = getelementptr inbounds i8, i8* %135, i64 1
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i16
  %143 = or i16 %139, %142
  %144 = getelementptr inbounds i8, i8* %135, i64 2
  store i16 %143, i16* %134, align 2
  %145 = getelementptr inbounds i16, i16* %134, i64 1
  %146 = add i64 %136, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %133, !llvm.loop !52

148:                                              ; preds = %133, %120
  %149 = phi i16* [ %121, %120 ], [ %145, %133 ]
  %150 = phi i8* [ %122, %120 ], [ %144, %133 ]
  %151 = icmp ult i8* %127, inttoptr (i64 6 to i8*)
  br i1 %151, label %192, label %152

152:                                              ; preds = %148, %152
  %153 = phi i16* [ %190, %152 ], [ %149, %148 ]
  %154 = phi i8* [ %189, %152 ], [ %150, %148 ]
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i16
  %157 = shl nuw i16 %156, 8
  %158 = getelementptr inbounds i8, i8* %154, i64 1
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i16
  %161 = or i16 %157, %160
  %162 = getelementptr inbounds i8, i8* %154, i64 2
  store i16 %161, i16* %153, align 2
  %163 = getelementptr inbounds i16, i16* %153, i64 1
  %164 = load i8, i8* %162, align 1
  %165 = zext i8 %164 to i16
  %166 = shl nuw i16 %165, 8
  %167 = getelementptr inbounds i8, i8* %154, i64 3
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i16
  %170 = or i16 %166, %169
  %171 = getelementptr inbounds i8, i8* %154, i64 4
  store i16 %170, i16* %163, align 2
  %172 = getelementptr inbounds i16, i16* %153, i64 2
  %173 = load i8, i8* %171, align 1
  %174 = zext i8 %173 to i16
  %175 = shl nuw i16 %174, 8
  %176 = getelementptr inbounds i8, i8* %154, i64 5
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i16
  %179 = or i16 %175, %178
  %180 = getelementptr inbounds i8, i8* %154, i64 6
  store i16 %179, i16* %172, align 2
  %181 = getelementptr inbounds i16, i16* %153, i64 3
  %182 = load i8, i8* %180, align 1
  %183 = zext i8 %182 to i16
  %184 = shl nuw i16 %183, 8
  %185 = getelementptr inbounds i8, i8* %154, i64 7
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i16
  %188 = or i16 %184, %187
  %189 = getelementptr inbounds i8, i8* %154, i64 8
  store i16 %188, i16* %181, align 2
  %190 = getelementptr inbounds i16, i16* %153, i64 4
  %191 = icmp eq i16* %190, %31
  br i1 %191, label %192, label %152, !llvm.loop !53

192:                                              ; preds = %148, %152, %118, %26, %10
  %193 = ptrtoint i8* %19 to i64
  br label %197

194:                                              ; preds = %2
  %195 = tail call %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* @_ZN16CFX_CTTGSUBTable20ParseCoverageFormat2EPKh(%class.CFX_CTTGSUBTable* undef, i8* %1)
  %196 = ptrtoint %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* %195 to i64
  br label %197

197:                                              ; preds = %2, %194, %192
  %198 = phi i64 [ %196, %194 ], [ %193, %192 ], [ 0, %2 ]
  %199 = inttoptr i64 %198 to %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*
  ret %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %199
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.CFX_CTTGSUBTable::TCoverageFormat1"* @_ZN16CFX_CTTGSUBTable20ParseCoverageFormat1EPKh(%class.CFX_CTTGSUBTable* nocapture readnone, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 2
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i16
  %6 = shl nuw i16 %5, 8
  %7 = getelementptr inbounds i8, i8* %1, i64 3
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i16
  %10 = or i16 %6, %9
  %11 = tail call i8* @_Znwm(i64 40) #11
  %12 = bitcast i8* %11 to %"struct.CFX_CTTGSUBTable::TCoverageFormat1"*
  %13 = zext i16 %10 to i64
  %14 = bitcast i8* %11 to i32 (...)***
  %15 = getelementptr inbounds i8, i8* %11, i64 8
  %16 = bitcast i8* %15 to i16*
  store i16 1, i16* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable16TCoverageFormat1E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %17 = getelementptr inbounds i8, i8* %11, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10
  %18 = icmp eq i16 %10, 0
  br i1 %18, label %145, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds i8, i8* %1, i64 4
  %21 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %13, i64 2) #10
  %22 = bitcast i8* %21 to i16*
  %23 = getelementptr inbounds i8, i8* %11, i64 24
  %24 = bitcast i8* %17 to i8**
  store i8* %21, i8** %24, align 8
  %25 = getelementptr inbounds i16, i16* %22, i64 %13
  %26 = getelementptr inbounds i8, i8* %11, i64 32
  %27 = bitcast i8* %26 to i16**
  store i16* %25, i16** %27, align 8
  %28 = bitcast i8* %23 to i64*
  %29 = ptrtoint i8* %21 to i64
  %30 = add nsw i64 %13, -1
  %31 = getelementptr i16, i16* %22, i64 %30
  %32 = ptrtoint i16* %31 to i64
  %33 = sub i64 2, %29
  %34 = add i64 %33, %32
  %35 = and i64 %34, -2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %21, i8 0, i64 %35, i1 false) #10
  %36 = ptrtoint i16* %25 to i64
  store i64 %36, i64* %28, align 8
  %37 = icmp eq i16* %25, %22
  br i1 %37, label %145, label %38

38:                                               ; preds = %19
  %39 = shl nuw nsw i64 %13, 1
  %40 = add nsw i64 %39, -2
  %41 = lshr exact i64 %40, 1
  %42 = add nuw i64 %41, 1
  %43 = icmp ult i64 %42, 8
  br i1 %43, label %44, label %76

44:                                               ; preds = %143, %76, %38
  %45 = phi i16* [ %22, %76 ], [ %22, %38 ], [ %86, %143 ]
  %46 = phi i8* [ %20, %76 ], [ %20, %38 ], [ %88, %143 ]
  %47 = ptrtoint i16* %45 to i64
  %48 = shl nuw nsw i64 %13, 1
  %49 = add nsw i64 %48, -2
  %50 = sub i64 %49, %47
  %51 = getelementptr i8, i8* %21, i64 %50
  %52 = ptrtoint i8* %51 to i64
  %53 = lshr i64 %52, 1
  %54 = add nuw i64 %53, 1
  %55 = and i64 %54, 3
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %72, label %57

57:                                               ; preds = %44, %57
  %58 = phi i16* [ %69, %57 ], [ %45, %44 ]
  %59 = phi i8* [ %68, %57 ], [ %46, %44 ]
  %60 = phi i64 [ %70, %57 ], [ %55, %44 ]
  %61 = load i8, i8* %59, align 1
  %62 = zext i8 %61 to i16
  %63 = shl nuw i16 %62, 8
  %64 = getelementptr inbounds i8, i8* %59, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i16
  %67 = or i16 %63, %66
  %68 = getelementptr inbounds i8, i8* %59, i64 2
  store i16 %67, i16* %58, align 2
  %69 = getelementptr inbounds i16, i16* %58, i64 1
  %70 = add i64 %60, -1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %57, !llvm.loop !54

72:                                               ; preds = %57, %44
  %73 = phi i16* [ %45, %44 ], [ %69, %57 ]
  %74 = phi i8* [ %46, %44 ], [ %68, %57 ]
  %75 = icmp ult i8* %51, inttoptr (i64 6 to i8*)
  br i1 %75, label %145, label %146

76:                                               ; preds = %38
  %77 = shl nuw nsw i64 %13, 1
  %78 = getelementptr i8, i8* %21, i64 %77
  %79 = add nuw nsw i64 %77, 4
  %80 = getelementptr i8, i8* %1, i64 %79
  %81 = icmp ult i8* %21, %80
  %82 = icmp ult i8* %20, %78
  %83 = and i1 %81, %82
  br i1 %83, label %44, label %84

84:                                               ; preds = %76
  %85 = and i64 %42, -8
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = shl i64 %85, 1
  %88 = getelementptr i8, i8* %20, i64 %87
  %89 = add i64 %85, -8
  %90 = lshr exact i64 %89, 3
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 1
  %93 = icmp eq i64 %89, 0
  br i1 %93, label %127, label %94

94:                                               ; preds = %84
  %95 = sub nuw nsw i64 %91, %92
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 0, %94 ], [ %124, %96 ]
  %98 = phi i64 [ %95, %94 ], [ %125, %96 ]
  %99 = getelementptr i16, i16* %22, i64 %97
  %100 = shl i64 %97, 1
  %101 = getelementptr i8, i8* %20, i64 %100
  %102 = bitcast i8* %101 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1
  %104 = shufflevector <16 x i8> %103, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %105 = shufflevector <16 x i8> %103, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %106 = zext <8 x i8> %104 to <8 x i16>
  %107 = shl nuw <8 x i16> %106, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %108 = zext <8 x i8> %105 to <8 x i16>
  %109 = or <8 x i16> %107, %108
  %110 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %110, align 2, !alias.scope !55, !noalias !58
  %111 = or i64 %97, 8
  %112 = getelementptr i16, i16* %22, i64 %111
  %113 = shl i64 %111, 1
  %114 = getelementptr i8, i8* %20, i64 %113
  %115 = bitcast i8* %114 to <16 x i8>*
  %116 = load <16 x i8>, <16 x i8>* %115, align 1
  %117 = shufflevector <16 x i8> %116, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %118 = shufflevector <16 x i8> %116, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %119 = zext <8 x i8> %117 to <8 x i16>
  %120 = shl nuw <8 x i16> %119, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %121 = zext <8 x i8> %118 to <8 x i16>
  %122 = or <8 x i16> %120, %121
  %123 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %123, align 2, !alias.scope !55, !noalias !58
  %124 = add i64 %97, 16
  %125 = add i64 %98, -2
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %96, !llvm.loop !60

127:                                              ; preds = %96, %84
  %128 = phi i64 [ 0, %84 ], [ %124, %96 ]
  %129 = icmp eq i64 %92, 0
  br i1 %129, label %143, label %130

130:                                              ; preds = %127
  %131 = getelementptr i16, i16* %22, i64 %128
  %132 = shl i64 %128, 1
  %133 = getelementptr i8, i8* %20, i64 %132
  %134 = bitcast i8* %133 to <16 x i8>*
  %135 = load <16 x i8>, <16 x i8>* %134, align 1
  %136 = shufflevector <16 x i8> %135, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %137 = shufflevector <16 x i8> %135, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %138 = zext <8 x i8> %136 to <8 x i16>
  %139 = shl nuw <8 x i16> %138, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %140 = zext <8 x i8> %137 to <8 x i16>
  %141 = or <8 x i16> %139, %140
  %142 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %142, align 2, !alias.scope !55, !noalias !58
  br label %143

143:                                              ; preds = %127, %130
  %144 = icmp eq i64 %42, %85
  br i1 %144, label %145, label %44

145:                                              ; preds = %72, %146, %143, %2, %19
  ret %"struct.CFX_CTTGSUBTable::TCoverageFormat1"* %12

146:                                              ; preds = %72, %146
  %147 = phi i16* [ %184, %146 ], [ %73, %72 ]
  %148 = phi i8* [ %183, %146 ], [ %74, %72 ]
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i16
  %151 = shl nuw i16 %150, 8
  %152 = getelementptr inbounds i8, i8* %148, i64 1
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i16
  %155 = or i16 %151, %154
  %156 = getelementptr inbounds i8, i8* %148, i64 2
  store i16 %155, i16* %147, align 2
  %157 = getelementptr inbounds i16, i16* %147, i64 1
  %158 = load i8, i8* %156, align 1
  %159 = zext i8 %158 to i16
  %160 = shl nuw i16 %159, 8
  %161 = getelementptr inbounds i8, i8* %148, i64 3
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i16
  %164 = or i16 %160, %163
  %165 = getelementptr inbounds i8, i8* %148, i64 4
  store i16 %164, i16* %157, align 2
  %166 = getelementptr inbounds i16, i16* %147, i64 2
  %167 = load i8, i8* %165, align 1
  %168 = zext i8 %167 to i16
  %169 = shl nuw i16 %168, 8
  %170 = getelementptr inbounds i8, i8* %148, i64 5
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i16
  %173 = or i16 %169, %172
  %174 = getelementptr inbounds i8, i8* %148, i64 6
  store i16 %173, i16* %166, align 2
  %175 = getelementptr inbounds i16, i16* %147, i64 3
  %176 = load i8, i8* %174, align 1
  %177 = zext i8 %176 to i16
  %178 = shl nuw i16 %177, 8
  %179 = getelementptr inbounds i8, i8* %148, i64 7
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i16
  %182 = or i16 %178, %181
  %183 = getelementptr inbounds i8, i8* %148, i64 8
  store i16 %182, i16* %175, align 2
  %184 = getelementptr inbounds i16, i16* %147, i64 4
  %185 = icmp eq i16* %184, %25
  br i1 %185, label %145, label %146, !llvm.loop !61
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* @_ZN16CFX_CTTGSUBTable20ParseCoverageFormat2EPKh(%class.CFX_CTTGSUBTable* nocapture readnone, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 2
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i16
  %6 = shl nuw i16 %5, 8
  %7 = getelementptr inbounds i8, i8* %1, i64 3
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i16
  %10 = or i16 %6, %9
  %11 = tail call i8* @_Znwm(i64 40) #11
  %12 = bitcast i8* %11 to %"struct.CFX_CTTGSUBTable::TCoverageFormat2"*
  %13 = zext i16 %10 to i64
  %14 = bitcast i8* %11 to i32 (...)***
  %15 = getelementptr inbounds i8, i8* %11, i64 8
  %16 = bitcast i8* %15 to i16*
  store i16 2, i16* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable16TCoverageFormat2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %17 = getelementptr inbounds i8, i8* %11, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10
  %18 = icmp eq i16 %10, 0
  br i1 %18, label %41, label %19

19:                                               ; preds = %2
  %20 = mul nuw nsw i64 %13, 6
  %21 = tail call i8* @_Znwm(i64 %20) #11
  %22 = bitcast i8* %21 to %"struct.CFX_CTTGSUBTable::TRangeRecord"*
  %23 = getelementptr inbounds i8, i8* %11, i64 24
  %24 = bitcast i8* %17 to i8**
  store i8* %21, i8** %24, align 8
  %25 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %22, i64 %13
  %26 = getelementptr inbounds i8, i8* %11, i64 32
  %27 = bitcast i8* %26 to %"struct.CFX_CTTGSUBTable::TRangeRecord"**
  store %"struct.CFX_CTTGSUBTable::TRangeRecord"* %25, %"struct.CFX_CTTGSUBTable::TRangeRecord"** %27, align 8
  %28 = bitcast i8* %23 to i64*
  %29 = ptrtoint i8* %21 to i64
  %30 = add nsw i64 %13, -1
  %31 = getelementptr %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %22, i64 %30, i32 0
  %32 = ptrtoint i16* %31 to i64
  %33 = sub i64 %32, %29
  %34 = urem i64 %33, 6
  %35 = add i64 %33, 6
  %36 = sub i64 %35, %34
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %21, i8 0, i64 %36, i1 false) #10
  %37 = ptrtoint %"struct.CFX_CTTGSUBTable::TRangeRecord"* %25 to i64
  store i64 %37, i64* %28, align 8
  %38 = icmp eq %"struct.CFX_CTTGSUBTable::TRangeRecord"* %25, %22
  br i1 %38, label %41, label %39

39:                                               ; preds = %19
  %40 = getelementptr inbounds i8, i8* %1, i64 4
  br label %42

41:                                               ; preds = %42, %2, %19
  ret %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* %12

42:                                               ; preds = %39, %42
  %43 = phi %"struct.CFX_CTTGSUBTable::TRangeRecord"* [ %72, %42 ], [ %22, %39 ]
  %44 = phi i8* [ %70, %42 ], [ %40, %39 ]
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i16
  %47 = shl nuw i16 %46, 8
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  %51 = or i16 %47, %50
  %52 = getelementptr inbounds i8, i8* %44, i64 2
  %53 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %43, i64 0, i32 0
  store i16 %51, i16* %53, align 2
  %54 = load i8, i8* %52, align 1
  %55 = zext i8 %54 to i16
  %56 = shl nuw i16 %55, 8
  %57 = getelementptr inbounds i8, i8* %44, i64 3
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  %60 = or i16 %56, %59
  %61 = getelementptr inbounds i8, i8* %44, i64 4
  %62 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %43, i64 0, i32 1
  store i16 %60, i16* %62, align 2
  %63 = load i8, i8* %61, align 1
  %64 = zext i8 %63 to i16
  %65 = shl nuw i16 %64, 8
  %66 = getelementptr inbounds i8, i8* %44, i64 5
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i16
  %69 = or i16 %65, %68
  %70 = getelementptr inbounds i8, i8* %44, i64 6
  %71 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %43, i64 0, i32 2
  store i16 %69, i16* %71, align 2
  %72 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %43, i64 1
  %73 = icmp eq %"struct.CFX_CTTGSUBTable::TRangeRecord"* %72, %25
  br i1 %73, label %41, label %42
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.CFX_CTTGSUBTable::TSubTable1"* @_ZN16CFX_CTTGSUBTable23ParseSingleSubstFormat1EPKh(%class.CFX_CTTGSUBTable* nocapture readnone, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 2
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i64
  %6 = shl nuw nsw i64 %5, 8
  %7 = getelementptr inbounds i8, i8* %1, i64 3
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i64
  %10 = or i64 %6, %9
  %11 = tail call i8* @_Znwm(i64 32) #11
  %12 = bitcast i8* %11 to %"struct.CFX_CTTGSUBTable::TSubTable1"*
  %13 = bitcast i8* %11 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %11, i64 8
  %15 = bitcast i8* %14 to i16*
  store i16 1, i16* %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 16
  %17 = bitcast i8* %16 to i64*
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable10TSubTable1E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %18 = getelementptr inbounds i8, i8* %1, i64 %10
  %19 = tail call %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* @_ZN16CFX_CTTGSUBTable13ParseCoverageEPKh(%class.CFX_CTTGSUBTable* %0, i8* %18)
  %20 = ptrtoint %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %19 to i64
  store i64 %20, i64* %17, align 8
  %21 = getelementptr inbounds i8, i8* %1, i64 4
  %22 = load i8, i8* %21, align 1
  %23 = getelementptr inbounds i8, i8* %1, i64 5
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %22 to i16
  %26 = shl nuw i16 %25, 8
  %27 = zext i8 %24 to i16
  %28 = or i16 %26, %27
  %29 = getelementptr inbounds i8, i8* %11, i64 24
  %30 = bitcast i8* %29 to i16*
  store i16 %28, i16* %30, align 8
  ret %"struct.CFX_CTTGSUBTable::TSubTable1"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.CFX_CTTGSUBTable::TSubTable2"* @_ZN16CFX_CTTGSUBTable23ParseSingleSubstFormat2EPKh(%class.CFX_CTTGSUBTable* nocapture readnone, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 2
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i64
  %6 = shl nuw nsw i64 %5, 8
  %7 = getelementptr inbounds i8, i8* %1, i64 3
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i64
  %10 = or i64 %6, %9
  %11 = tail call i8* @_Znwm(i64 48) #11
  %12 = bitcast i8* %11 to %"struct.CFX_CTTGSUBTable::TSubTable2"*
  %13 = bitcast i8* %11 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %11, i64 8
  %15 = bitcast i8* %14 to i16*
  store i16 2, i16* %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 16
  %17 = bitcast i8* %16 to i64*
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable10TSubTable2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #10
  %19 = getelementptr inbounds i8, i8* %1, i64 %10
  %20 = tail call %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* @_ZN16CFX_CTTGSUBTable13ParseCoverageEPKh(%class.CFX_CTTGSUBTable* %0, i8* %19)
  %21 = ptrtoint %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %20 to i64
  store i64 %21, i64* %17, align 8
  %22 = getelementptr inbounds i8, i8* %1, i64 4
  %23 = load i8, i8* %22, align 1
  %24 = getelementptr inbounds i8, i8* %1, i64 5
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %23 to i64
  %27 = shl nuw nsw i64 %26, 8
  %28 = zext i8 %25 to i64
  %29 = or i64 %27, %28
  %30 = getelementptr inbounds i8, i8* %1, i64 6
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %2
  %33 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %29, i64 2) #10
  %34 = bitcast i8* %33 to i16*
  %35 = ptrtoint i8* %33 to i64
  %36 = getelementptr inbounds i16, i16* %34, i64 %29
  %37 = ptrtoint i16* %36 to i64
  %38 = add nsw i64 %29, -1
  %39 = getelementptr i16, i16* %34, i64 %38
  %40 = ptrtoint i16* %39 to i64
  %41 = sub i64 2, %35
  %42 = add i64 %41, %40
  %43 = and i64 %42, -2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %33, i8 0, i64 %43, i1 false) #10
  br label %44

44:                                               ; preds = %2, %32
  %45 = phi i64 [ 0, %2 ], [ %35, %32 ]
  %46 = phi i64 [ 0, %2 ], [ %37, %32 ]
  %47 = bitcast i8* %18 to i64*
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %11, i64 32
  %49 = bitcast i8* %48 to i64*
  store i64 %46, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %11, i64 40
  %51 = bitcast i8* %50 to i64*
  store i64 %46, i64* %51, align 8
  %52 = inttoptr i64 %45 to i16*
  %53 = inttoptr i64 %45 to i8*
  %54 = inttoptr i64 %46 to i16*
  %55 = icmp eq i16* %52, %54
  br i1 %55, label %172, label %56

56:                                               ; preds = %44
  %57 = getelementptr i16, i16* %54, i64 -1
  %58 = bitcast i16* %57 to i8*
  %59 = sub i64 0, %45
  %60 = getelementptr i8, i8* %58, i64 %59
  %61 = ptrtoint i8* %60 to i64
  %62 = lshr i64 %61, 1
  %63 = add nuw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %65, label %95

65:                                               ; preds = %170, %95, %56
  %66 = phi i16* [ %52, %95 ], [ %52, %56 ], [ %113, %170 ]
  %67 = phi i8* [ %30, %95 ], [ %30, %56 ], [ %115, %170 ]
  %68 = ptrtoint i16* %66 to i64
  %69 = getelementptr i16, i16* %54, i64 -1
  %70 = ptrtoint i16* %69 to i64
  %71 = sub i64 %70, %68
  %72 = lshr i64 %71, 1
  %73 = add nuw i64 %72, 1
  %74 = and i64 %73, 3
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %91, label %76

76:                                               ; preds = %65, %76
  %77 = phi i16* [ %88, %76 ], [ %66, %65 ]
  %78 = phi i8* [ %87, %76 ], [ %67, %65 ]
  %79 = phi i64 [ %89, %76 ], [ %74, %65 ]
  %80 = load i8, i8* %78, align 1
  %81 = zext i8 %80 to i16
  %82 = shl nuw i16 %81, 8
  %83 = getelementptr inbounds i8, i8* %78, i64 1
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i16
  %86 = or i16 %82, %85
  %87 = getelementptr inbounds i8, i8* %78, i64 2
  store i16 %86, i16* %77, align 2
  %88 = getelementptr inbounds i16, i16* %77, i64 1
  %89 = add i64 %79, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %76, !llvm.loop !62

91:                                               ; preds = %76, %65
  %92 = phi i16* [ %66, %65 ], [ %88, %76 ]
  %93 = phi i8* [ %67, %65 ], [ %87, %76 ]
  %94 = icmp ult i64 %71, 6
  br i1 %94, label %172, label %173

95:                                               ; preds = %56
  %96 = getelementptr i16, i16* %54, i64 -1
  %97 = bitcast i16* %96 to i8*
  %98 = sub i64 0, %45
  %99 = getelementptr i8, i8* %97, i64 %98
  %100 = ptrtoint i8* %99 to i64
  %101 = lshr i64 %100, 1
  %102 = add nuw i64 %101, 1
  %103 = getelementptr i16, i16* %52, i64 %102
  %104 = bitcast i16* %103 to i8*
  %105 = add i64 %100, 8
  %106 = and i64 %105, -2
  %107 = getelementptr i8, i8* %1, i64 %106
  %108 = icmp ugt i8* %107, %53
  %109 = icmp ult i8* %30, %104
  %110 = and i1 %108, %109
  br i1 %110, label %65, label %111

111:                                              ; preds = %95
  %112 = and i64 %63, -8
  %113 = getelementptr i16, i16* %52, i64 %112
  %114 = shl i64 %112, 1
  %115 = getelementptr i8, i8* %30, i64 %114
  %116 = add i64 %112, -8
  %117 = lshr exact i64 %116, 3
  %118 = add nuw nsw i64 %117, 1
  %119 = and i64 %118, 1
  %120 = icmp eq i64 %116, 0
  br i1 %120, label %154, label %121

121:                                              ; preds = %111
  %122 = sub nuw nsw i64 %118, %119
  br label %123

123:                                              ; preds = %123, %121
  %124 = phi i64 [ 0, %121 ], [ %151, %123 ]
  %125 = phi i64 [ %122, %121 ], [ %152, %123 ]
  %126 = getelementptr i16, i16* %52, i64 %124
  %127 = shl i64 %124, 1
  %128 = getelementptr i8, i8* %30, i64 %127
  %129 = bitcast i8* %128 to <16 x i8>*
  %130 = load <16 x i8>, <16 x i8>* %129, align 1
  %131 = shufflevector <16 x i8> %130, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %132 = shufflevector <16 x i8> %130, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %133 = zext <8 x i8> %131 to <8 x i16>
  %134 = shl nuw <8 x i16> %133, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %135 = zext <8 x i8> %132 to <8 x i16>
  %136 = or <8 x i16> %134, %135
  %137 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %137, align 2, !alias.scope !63, !noalias !66
  %138 = or i64 %124, 8
  %139 = getelementptr i16, i16* %52, i64 %138
  %140 = shl i64 %138, 1
  %141 = getelementptr i8, i8* %30, i64 %140
  %142 = bitcast i8* %141 to <16 x i8>*
  %143 = load <16 x i8>, <16 x i8>* %142, align 1
  %144 = shufflevector <16 x i8> %143, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %145 = shufflevector <16 x i8> %143, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %146 = zext <8 x i8> %144 to <8 x i16>
  %147 = shl nuw <8 x i16> %146, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %148 = zext <8 x i8> %145 to <8 x i16>
  %149 = or <8 x i16> %147, %148
  %150 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %150, align 2, !alias.scope !63, !noalias !66
  %151 = add i64 %124, 16
  %152 = add i64 %125, -2
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %123, !llvm.loop !68

154:                                              ; preds = %123, %111
  %155 = phi i64 [ 0, %111 ], [ %151, %123 ]
  %156 = icmp eq i64 %119, 0
  br i1 %156, label %170, label %157

157:                                              ; preds = %154
  %158 = getelementptr i16, i16* %52, i64 %155
  %159 = shl i64 %155, 1
  %160 = getelementptr i8, i8* %30, i64 %159
  %161 = bitcast i8* %160 to <16 x i8>*
  %162 = load <16 x i8>, <16 x i8>* %161, align 1
  %163 = shufflevector <16 x i8> %162, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %164 = shufflevector <16 x i8> %162, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %165 = zext <8 x i8> %163 to <8 x i16>
  %166 = shl nuw <8 x i16> %165, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %167 = zext <8 x i8> %164 to <8 x i16>
  %168 = or <8 x i16> %166, %167
  %169 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %169, align 2, !alias.scope !63, !noalias !66
  br label %170

170:                                              ; preds = %154, %157
  %171 = icmp eq i64 %63, %112
  br i1 %171, label %172, label %65

172:                                              ; preds = %91, %173, %170, %44
  ret %"struct.CFX_CTTGSUBTable::TSubTable2"* %12

173:                                              ; preds = %91, %173
  %174 = phi i16* [ %211, %173 ], [ %92, %91 ]
  %175 = phi i8* [ %210, %173 ], [ %93, %91 ]
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i16
  %178 = shl nuw i16 %177, 8
  %179 = getelementptr inbounds i8, i8* %175, i64 1
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i16
  %182 = or i16 %178, %181
  %183 = getelementptr inbounds i8, i8* %175, i64 2
  store i16 %182, i16* %174, align 2
  %184 = getelementptr inbounds i16, i16* %174, i64 1
  %185 = load i8, i8* %183, align 1
  %186 = zext i8 %185 to i16
  %187 = shl nuw i16 %186, 8
  %188 = getelementptr inbounds i8, i8* %175, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i16
  %191 = or i16 %187, %190
  %192 = getelementptr inbounds i8, i8* %175, i64 4
  store i16 %191, i16* %184, align 2
  %193 = getelementptr inbounds i16, i16* %174, i64 2
  %194 = load i8, i8* %192, align 1
  %195 = zext i8 %194 to i16
  %196 = shl nuw i16 %195, 8
  %197 = getelementptr inbounds i8, i8* %175, i64 5
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i16
  %200 = or i16 %196, %199
  %201 = getelementptr inbounds i8, i8* %175, i64 6
  store i16 %200, i16* %193, align 2
  %202 = getelementptr inbounds i16, i16* %174, i64 3
  %203 = load i8, i8* %201, align 1
  %204 = zext i8 %203 to i16
  %205 = shl nuw i16 %204, 8
  %206 = getelementptr inbounds i8, i8* %175, i64 7
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i16
  %209 = or i16 %205, %208
  %210 = getelementptr inbounds i8, i8* %175, i64 8
  store i16 %209, i16* %202, align 2
  %211 = getelementptr inbounds i16, i16* %174, i64 4
  %212 = icmp eq i16* %211, %54
  br i1 %212, label %172, label %173, !llvm.loop !69
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable14TLangSysRecordC2Ev(%"struct.CFX_CTTGSUBTable::TLangSysRecord"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable14TLangSysRecordD2Ev(%"struct.CFX_CTTGSUBTable::TLangSysRecord"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load i16*, i16** %2, align 8
  %4 = icmp eq i16* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i16* %3 to i64
  %7 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast i16** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i16* %3 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %9) #10
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable13TScriptRecordC2Ev(%"struct.CFX_CTTGSUBTable::TScriptRecord"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %0, i64 0, i32 1
  store i16 0, i16* %3, align 4
  %4 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::vector.4"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable13TScriptRecordD2Ev(%"struct.CFX_CTTGSUBTable::TScriptRecord"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.CFX_CTTGSUBTable::TLangSysRecord"*, %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %3, align 8
  %5 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %4 to i8*
  %8 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TScriptRecord", %"struct.CFX_CTTGSUBTable::TScriptRecord"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"struct.CFX_CTTGSUBTable::TLangSysRecord"*, %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %8, align 8
  %10 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"struct.CFX_CTTGSUBTable::TLangSysRecord"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %12, i64 -1, i32 3, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = icmp eq i16* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = ptrtoint i16* %15 to i64
  %19 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLangSysRecord", %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %12, i64 -1, i32 3, i32 0, i32 1
  %20 = bitcast i16** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast i16* %15 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %21) #10
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.4"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"struct.CFX_CTTGSUBTable::TLangSysRecord"* %4, %"struct.CFX_CTTGSUBTable::TLangSysRecord"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable14TFeatureRecordC2Ev(%"struct.CFX_CTTGSUBTable::TFeatureRecord"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %0, i64 0, i32 1
  store i16 0, i16* %3, align 4
  %4 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::vector.6"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable14TFeatureRecordD2Ev(%"struct.CFX_CTTGSUBTable::TFeatureRecord"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i16*, i16** %2, align 8
  %4 = icmp eq i16* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i16* %3 to i64
  %7 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TFeatureRecord", %"struct.CFX_CTTGSUBTable::TFeatureRecord"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast i16** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i16* %3 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %9) #10
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CFX_CTTGSUBTable12TRangeRecordC2Ev(%"struct.CFX_CTTGSUBTable::TRangeRecord"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %0, i64 0, i32 0
  store i16 0, i16* %2, align 2
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %0, i64 0, i32 1
  store i16 0, i16* %3, align 2
  %4 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %0, i64 0, i32 2
  store i16 0, i16* %4, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable16TCoverageFormat1C2Em(%"struct.CFX_CTTGSUBTable::TCoverageFormat1"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat1", %"struct.CFX_CTTGSUBTable::TCoverageFormat1"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat1", %"struct.CFX_CTTGSUBTable::TCoverageFormat1"* %0, i64 0, i32 0, i32 1
  store i16 1, i16* %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable16TCoverageFormat1E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat1", %"struct.CFX_CTTGSUBTable::TCoverageFormat1"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector.6"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %28, label %8

8:                                                ; preds = %2
  %9 = icmp slt i64 %1, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %8
  %11 = bitcast %"class.std::__1::vector.6"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %11) #12
  unreachable

12:                                               ; preds = %8
  %13 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %1, i64 2) #10
  %14 = bitcast i8* %13 to i16*
  %15 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat1", %"struct.CFX_CTTGSUBTable::TCoverageFormat1"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = bitcast %"class.std::__1::vector.6"* %5 to i8**
  store i8* %13, i8** %16, align 8
  %17 = getelementptr inbounds i16, i16* %14, i64 %1
  %18 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat1", %"struct.CFX_CTTGSUBTable::TCoverageFormat1"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i16* %17, i16** %18, align 8
  %19 = bitcast i16** %15 to i64*
  %20 = ptrtoint i8* %13 to i64
  %21 = add nsw i64 %1, -1
  %22 = getelementptr i16, i16* %14, i64 %21
  %23 = ptrtoint i16* %22 to i64
  %24 = sub i64 2, %20
  %25 = add i64 %24, %23
  %26 = and i64 %25, -2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %13, i8 0, i64 %26, i1 false) #10
  %27 = ptrtoint i16* %17 to i64
  store i64 %27, i64* %19, align 8
  br label %28

28:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable16TCoverageFormat1D2Ev(%"struct.CFX_CTTGSUBTable::TCoverageFormat1"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat1", %"struct.CFX_CTTGSUBTable::TCoverageFormat1"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable16TCoverageFormat1E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat1", %"struct.CFX_CTTGSUBTable::TCoverageFormat1"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i16*, i16** %3, align 8
  %5 = icmp eq i16* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i16* %4 to i64
  %8 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat1", %"struct.CFX_CTTGSUBTable::TCoverageFormat1"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i16** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i16* %4 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %10) #10
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable16TCoverageFormat1D0Ev(%"struct.CFX_CTTGSUBTable::TCoverageFormat1"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat1", %"struct.CFX_CTTGSUBTable::TCoverageFormat1"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable16TCoverageFormat1E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat1", %"struct.CFX_CTTGSUBTable::TCoverageFormat1"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i16*, i16** %3, align 8
  %5 = icmp eq i16* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i16* %4 to i64
  %8 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat1", %"struct.CFX_CTTGSUBTable::TCoverageFormat1"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i16** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i16* %4 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %10) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"struct.CFX_CTTGSUBTable::TCoverageFormat1"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable16TCoverageFormat2C2Em(%"struct.CFX_CTTGSUBTable::TCoverageFormat2"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat2", %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat2", %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* %0, i64 0, i32 0, i32 1
  store i16 2, i16* %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable16TCoverageFormat2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat2", %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector.56"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %30, label %8

8:                                                ; preds = %2
  %9 = icmp ugt i64 %1, 3074457345618258602
  br i1 %9, label %10, label %12

10:                                               ; preds = %8
  %11 = bitcast %"class.std::__1::vector.56"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %11) #12
  unreachable

12:                                               ; preds = %8
  %13 = mul i64 %1, 6
  %14 = tail call i8* @_Znwm(i64 %13) #11
  %15 = bitcast i8* %14 to %"struct.CFX_CTTGSUBTable::TRangeRecord"*
  %16 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat2", %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast %"class.std::__1::vector.56"* %5 to i8**
  store i8* %14, i8** %17, align 8
  %18 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %15, i64 %1
  %19 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat2", %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.CFX_CTTGSUBTable::TRangeRecord"* %18, %"struct.CFX_CTTGSUBTable::TRangeRecord"** %19, align 8
  %20 = bitcast %"struct.CFX_CTTGSUBTable::TRangeRecord"** %16 to i64*
  %21 = ptrtoint i8* %14 to i64
  %22 = add nsw i64 %1, -1
  %23 = getelementptr %"struct.CFX_CTTGSUBTable::TRangeRecord", %"struct.CFX_CTTGSUBTable::TRangeRecord"* %15, i64 %22, i32 0
  %24 = ptrtoint i16* %23 to i64
  %25 = sub i64 %24, %21
  %26 = urem i64 %25, 6
  %27 = add i64 %25, 6
  %28 = sub i64 %27, %26
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %14, i8 0, i64 %28, i1 false) #10
  %29 = ptrtoint %"struct.CFX_CTTGSUBTable::TRangeRecord"* %18 to i64
  store i64 %29, i64* %20, align 8
  br label %30

30:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable16TCoverageFormat2D2Ev(%"struct.CFX_CTTGSUBTable::TCoverageFormat2"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat2", %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable16TCoverageFormat2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat2", %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.CFX_CTTGSUBTable::TRangeRecord"*, %"struct.CFX_CTTGSUBTable::TRangeRecord"** %3, align 8
  %5 = icmp eq %"struct.CFX_CTTGSUBTable::TRangeRecord"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.CFX_CTTGSUBTable::TRangeRecord"* %4 to i64
  %8 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat2", %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.CFX_CTTGSUBTable::TRangeRecord"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.CFX_CTTGSUBTable::TRangeRecord"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable16TCoverageFormat2D0Ev(%"struct.CFX_CTTGSUBTable::TCoverageFormat2"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat2", %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable16TCoverageFormat2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat2", %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.CFX_CTTGSUBTable::TRangeRecord"*, %"struct.CFX_CTTGSUBTable::TRangeRecord"** %3, align 8
  %5 = icmp eq %"struct.CFX_CTTGSUBTable::TRangeRecord"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.CFX_CTTGSUBTable::TRangeRecord"* %4 to i64
  %8 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TCoverageFormat2", %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.CFX_CTTGSUBTable::TRangeRecord"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.CFX_CTTGSUBTable::TRangeRecord"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"struct.CFX_CTTGSUBTable::TCoverageFormat2"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CFX_CTTGSUBTable7TDeviceC2Ev(%"struct.CFX_CTTGSUBTable::TDevice"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TDevice", %"struct.CFX_CTTGSUBTable::TDevice"* %0, i64 0, i32 0
  store i16 0, i16* %2, align 2
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TDevice", %"struct.CFX_CTTGSUBTable::TDevice"* %0, i64 0, i32 1
  store i16 0, i16* %3, align 2
  %4 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TDevice", %"struct.CFX_CTTGSUBTable::TDevice"* %0, i64 0, i32 2
  store i16 0, i16* %4, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CFX_CTTGSUBTable13TSubTableBaseC2Et(%"struct.CFX_CTTGSUBTable::TSubTableBase"* nocapture, i16 zeroext) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTableBase", %"struct.CFX_CTTGSUBTable::TSubTableBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable13TSubTableBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTableBase", %"struct.CFX_CTTGSUBTable::TSubTableBase"* %0, i64 0, i32 1
  store i16 %1, i16* %4, align 8
  %5 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTableBase", %"struct.CFX_CTTGSUBTable::TSubTableBase"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__1::unique_ptr.47"* %5 to i64*
  store i64 0, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable13TSubTableBaseD2Ev(%"struct.CFX_CTTGSUBTable::TSubTableBase"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTableBase", %"struct.CFX_CTTGSUBTable::TSubTableBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable13TSubTableBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTableBase", %"struct.CFX_CTTGSUBTable::TSubTableBase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*, %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"** %3, align 8
  store %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* null, %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"** %3, align 8
  %5 = icmp eq %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %4 to void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)***
  %8 = load void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)**, void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)*, void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)** %8, i64 1
  %10 = load void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)*, void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)** %9, align 8
  tail call void %10(%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable13TSubTableBaseD0Ev(%"struct.CFX_CTTGSUBTable::TSubTableBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTableBase", %"struct.CFX_CTTGSUBTable::TSubTableBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable13TSubTableBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTableBase", %"struct.CFX_CTTGSUBTable::TSubTableBase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*, %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"** %3, align 8
  store %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* null, %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"** %3, align 8
  %5 = icmp eq %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %4 to void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)***
  %8 = load void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)**, void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)*, void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)** %8, i64 1
  %10 = load void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)*, void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)** %9, align 8
  tail call void %10(%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"struct.CFX_CTTGSUBTable::TSubTableBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CFX_CTTGSUBTable10TSubTable1C2Ev(%"struct.CFX_CTTGSUBTable::TSubTable1"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable1", %"struct.CFX_CTTGSUBTable::TSubTable1"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable1", %"struct.CFX_CTTGSUBTable::TSubTable1"* %0, i64 0, i32 0, i32 1
  store i16 1, i16* %3, align 8
  %4 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable1", %"struct.CFX_CTTGSUBTable::TSubTable1"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"class.std::__1::unique_ptr.47"* %4 to i64*
  store i64 0, i64* %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable10TSubTable1E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable10TSubTable1D0Ev(%"struct.CFX_CTTGSUBTable::TSubTable1"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable1", %"struct.CFX_CTTGSUBTable::TSubTable1"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable13TSubTableBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable1", %"struct.CFX_CTTGSUBTable::TSubTable1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*, %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"** %3, align 8
  store %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* null, %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"** %3, align 8
  %5 = icmp eq %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %4 to void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)***
  %8 = load void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)**, void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)*, void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)** %8, i64 1
  %10 = load void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)*, void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)** %9, align 8
  tail call void %10(%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"struct.CFX_CTTGSUBTable::TSubTable1"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable10TSubTable2C2Ev(%"struct.CFX_CTTGSUBTable::TSubTable2"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable2", %"struct.CFX_CTTGSUBTable::TSubTable2"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable2", %"struct.CFX_CTTGSUBTable::TSubTable2"* %0, i64 0, i32 0, i32 1
  store i16 2, i16* %3, align 8
  %4 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable2", %"struct.CFX_CTTGSUBTable::TSubTable2"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"class.std::__1::unique_ptr.47"* %4 to i64*
  store i64 0, i64* %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable10TSubTable2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %6 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable2", %"struct.CFX_CTTGSUBTable::TSubTable2"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector.6"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable10TSubTable2D2Ev(%"struct.CFX_CTTGSUBTable::TSubTable2"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable2", %"struct.CFX_CTTGSUBTable::TSubTable2"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable10TSubTable2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable2", %"struct.CFX_CTTGSUBTable::TSubTable2"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i16*, i16** %3, align 8
  %5 = icmp eq i16* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i16* %4 to i64
  %8 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable2", %"struct.CFX_CTTGSUBTable::TSubTable2"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i16** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i16* %4 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %10) #10
  br label %11

11:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable13TSubTableBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable2", %"struct.CFX_CTTGSUBTable::TSubTable2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*, %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"** %12, align 8
  store %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* null, %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"** %12, align 8
  %14 = icmp eq %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %13 to void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)***
  %17 = load void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)**, void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)*, void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)** %17, i64 1
  %19 = load void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)*, void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)** %18, align 8
  tail call void %19(%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* nonnull %13) #10
  br label %20

20:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable10TSubTable2D0Ev(%"struct.CFX_CTTGSUBTable::TSubTable2"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable2", %"struct.CFX_CTTGSUBTable::TSubTable2"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable10TSubTable2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable2", %"struct.CFX_CTTGSUBTable::TSubTable2"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i16*, i16** %3, align 8
  %5 = icmp eq i16* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i16* %4 to i64
  %8 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable2", %"struct.CFX_CTTGSUBTable::TSubTable2"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i16** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i16* %4 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %10) #10
  br label %11

11:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN16CFX_CTTGSUBTable13TSubTableBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TSubTable2", %"struct.CFX_CTTGSUBTable::TSubTable2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*, %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"** %12, align 8
  store %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* null, %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"** %12, align 8
  %14 = icmp eq %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* %13 to void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)***
  %17 = load void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)**, void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)*, void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)** %17, i64 1
  %19 = load void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)*, void (%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"*)** %18, align 8
  tail call void %19(%"struct.CFX_CTTGSUBTable::TCoverageFormatBase"* nonnull %13) #10
  br label %20

20:                                               ; preds = %11, %15
  %21 = bitcast %"struct.CFX_CTTGSUBTable::TSubTable2"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable7TLookupC2Ev(%"struct.CFX_CTTGSUBTable::TLookup"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %0, i64 0, i32 0
  store i16 0, i16* %2, align 8
  %3 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %0, i64 0, i32 1
  store i16 0, i16* %3, align 2
  %4 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::vector.30"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_CTTGSUBTable7TLookupD2Ev(%"struct.CFX_CTTGSUBTable::TLookup"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  %8 = getelementptr inbounds %"struct.CFX_CTTGSUBTable::TLookup", %"struct.CFX_CTTGSUBTable::TLookup"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"struct.CFX_CTTGSUBTable::TSubTableBase"*, %"struct.CFX_CTTGSUBTable::TSubTableBase"** %14, align 8
  store %"struct.CFX_CTTGSUBTable::TSubTableBase"* null, %"struct.CFX_CTTGSUBTable::TSubTableBase"** %14, align 8
  %16 = icmp eq %"struct.CFX_CTTGSUBTable::TSubTableBase"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"struct.CFX_CTTGSUBTable::TSubTableBase"* %15 to void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)***
  %19 = load void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)**, void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)*, void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)** %19, i64 1
  %21 = load void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)*, void (%"struct.CFX_CTTGSUBTable::TSubTableBase"*)** %20, align 8
  tail call void %21(%"struct.CFX_CTTGSUBTable::TSubTableBase"* nonnull %15) #10
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.30"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr"* %4, %"class.std::__1::unique_ptr"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !70
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !70
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !70
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64, i64) local_unnamed_addr #9

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!8 = !{!"branch_weights", i32 2000, i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.isvectorized", i32 1}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !10}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !18}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !18}
!30 = distinct !{!30, !10}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !18}
!37 = distinct !{!37, !18}
!38 = distinct !{!38, !10}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !18}
!45 = distinct !{!45, !18}
!46 = !{!47}
!47 = distinct !{!47, !48}
!48 = distinct !{!48, !"LVerDomain"}
!49 = !{!50}
!50 = distinct !{!50, !48}
!51 = distinct !{!51, !18}
!52 = distinct !{!52, !10}
!53 = distinct !{!53, !18}
!54 = distinct !{!54, !10}
!55 = !{!56}
!56 = distinct !{!56, !57}
!57 = distinct !{!57, !"LVerDomain"}
!58 = !{!59}
!59 = distinct !{!59, !57}
!60 = distinct !{!60, !18}
!61 = distinct !{!61, !18}
!62 = distinct !{!62, !10}
!63 = !{!64}
!64 = distinct !{!64, !65}
!65 = distinct !{!65, !"LVerDomain"}
!66 = !{!67}
!67 = distinct !{!67, !65}
!68 = distinct !{!68, !18}
!69 = distinct !{!69, !18}
!70 = !{i8 0, i8 2}
