; ModuleID = '../../ui/events/ozone/evdev/touch_evdev_debug_buffer.cc'
source_filename = "../../ui/events/ozone/evdev/touch_evdev_debug_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::TouchEventLogEvdev" = type { i32, %"class.std::__1::unique_ptr", i32, %"class.std::__1::basic_string", %"class.std::__1::vector" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.ui::TouchEventLogEvdev::TouchEvent"* }
%"struct.ui::TouchEventLogEvdev::TouchEvent" = type { %struct.input_event, i32 }
%struct.input_event = type { %struct.timeval, i16, i16, i32 }
%struct.timeval = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::TouchEventLogEvdev::AbsAxisData"*, %"struct.ui::TouchEventLogEvdev::AbsAxisData"*, %"class.std::__1::__compressed_pair.4" }
%"struct.ui::TouchEventLogEvdev::AbsAxisData" = type { i32, %struct.input_absinfo }
%struct.input_absinfo = type { i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.ui::TouchEventLogEvdev::AbsAxisData"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.ui::EventDeviceInfo" = type <{ [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [64 x %struct.input_absinfo], [14 x %"class.std::__1::vector.9"], %"class.std::__1::basic_string", %struct.input_id, %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { i32*, i32*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i32* }
%struct.input_id = type { i16, i16, i16, i16 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@.str.1 = private unnamed_addr constant [14 x i8] c"# device: %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"# absinfo: %d %d %d %d %d %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"E: %ld.%06ld %04x %04x %d %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"s\00", align 1

@_ZN2ui18TouchEventLogEvdevC1Ev = hidden unnamed_addr alias void (%"class.ui::TouchEventLogEvdev"*), void (%"class.ui::TouchEventLogEvdev"*)* @_ZN2ui18TouchEventLogEvdevC2Ev
@_ZN2ui18TouchEventLogEvdevD1Ev = hidden unnamed_addr alias void (%"class.ui::TouchEventLogEvdev"*), void (%"class.ui::TouchEventLogEvdev"*)* @_ZN2ui18TouchEventLogEvdevD2Ev
@_ZN2ui18TouchEventLogEvdev11AbsAxisDataC1EiRK13input_absinfo = hidden unnamed_addr alias void (%"struct.ui::TouchEventLogEvdev::AbsAxisData"*, i32, %struct.input_absinfo*), void (%"struct.ui::TouchEventLogEvdev::AbsAxisData"*, i32, %struct.input_absinfo*)* @_ZN2ui18TouchEventLogEvdev11AbsAxisDataC2EiRK13input_absinfo
@_ZN2ui18TouchEventLogEvdev11AbsAxisDataC1ERKS1_ = hidden unnamed_addr alias void (%"struct.ui::TouchEventLogEvdev::AbsAxisData"*, %"struct.ui::TouchEventLogEvdev::AbsAxisData"*), void (%"struct.ui::TouchEventLogEvdev::AbsAxisData"*, %"struct.ui::TouchEventLogEvdev::AbsAxisData"*)* @_ZN2ui18TouchEventLogEvdev11AbsAxisDataC2ERKS1_
@_ZN2ui18TouchEventLogEvdev11AbsAxisDataD1Ev = hidden unnamed_addr alias void (%"struct.ui::TouchEventLogEvdev::AbsAxisData"*), void (%"struct.ui::TouchEventLogEvdev::AbsAxisData"*)* @_ZN2ui18TouchEventLogEvdev11AbsAxisDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18TouchEventLogEvdevC2Ev(%"class.ui::TouchEventLogEvdev"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 0
  store i32 65536, i32* %2, align 8
  %3 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 1
  %4 = tail call i8* @_Znam(i64 2097152) #9
  %5 = ptrtoint i8* %4 to i64
  %6 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 3
  %9 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18TouchEventLogEvdevD2Ev(%"class.ui::TouchEventLogEvdev"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"struct.ui::TouchEventLogEvdev::AbsAxisData"*, %"struct.ui::TouchEventLogEvdev::AbsAxisData"** %2, align 8
  %4 = icmp eq %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %3 to i64
  %7 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast %"struct.ui::TouchEventLogEvdev::AbsAxisData"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 3
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.ui::TouchEventLogEvdev::TouchEvent"*, %"struct.ui::TouchEventLogEvdev::TouchEvent"** %20, align 8
  store %"struct.ui::TouchEventLogEvdev::TouchEvent"* null, %"struct.ui::TouchEventLogEvdev::TouchEvent"** %20, align 8
  %22 = icmp eq %"struct.ui::TouchEventLogEvdev::TouchEvent"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %"struct.ui::TouchEventLogEvdev::TouchEvent"* %21 to i8*
  tail call void @_ZdaPv(i8* %24) #9
  br label %25

25:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18TouchEventLogEvdev10InitializeERKNS_15EventDeviceInfoE(%"class.ui::TouchEventLogEvdev"*, %"class.ui::EventDeviceInfo"* dereferenceable(2104)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.input_absinfo, align 8
  %4 = alloca %struct.input_absinfo, align 4
  %5 = getelementptr inbounds %"class.ui::EventDeviceInfo", %"class.ui::EventDeviceInfo"* %1, i64 0, i32 11
  %6 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 3
  %7 = icmp eq %"class.std::__1::basic_string"* %6, %5
  br i1 %7, label %37, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %12, label %27, label %17

17:                                               ; preds = %8
  br i1 %16, label %21, label %18

18:                                               ; preds = %17
  %19 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #10
  br label %37

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.ui::EventDeviceInfo", %"class.ui::EventDeviceInfo"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %6, i8* %23, i64 %25) #10
  br label %37

27:                                               ; preds = %8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.ui::EventDeviceInfo", %"class.ui::EventDeviceInfo"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %33 = zext i8 %15 to i64
  %34 = select i1 %16, i8* %29, i8* %32
  %35 = select i1 %16, i64 %31, i64 %33
  %36 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %6, i8* %34, i64 %35) #10
  br label %37

37:                                               ; preds = %2, %18, %21, %27
  %38 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 4
  %39 = bitcast %struct.input_absinfo* %3 to i8*
  %40 = bitcast %struct.input_absinfo* %4 to i8*
  %41 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 4, i32 0, i32 1
  %42 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast %"struct.ui::TouchEventLogEvdev::AbsAxisData"** %41 to i64*
  %44 = bitcast %"class.std::__1::vector"* %38 to i64*
  %45 = bitcast %"struct.ui::TouchEventLogEvdev::AbsAxisData"** %42 to i64*
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %38, i64 0, i32 0, i32 0
  br label %48

47:                                               ; preds = %119
  ret void

48:                                               ; preds = %119, %37
  %49 = phi i32 [ 0, %37 ], [ %120, %119 ]
  %50 = call zeroext i1 @_ZNK2ui15EventDeviceInfo11HasAbsEventEj(%"class.ui::EventDeviceInfo"* %1, i32 %49) #10
  br i1 %50, label %51, label %119

51:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #10
  call void @_ZNK2ui15EventDeviceInfo16GetAbsInfoByCodeEj(%struct.input_absinfo* nonnull sret %4, %"class.ui::EventDeviceInfo"* %1, i32 %49) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 4 %40, i64 24, i1 false)
  %52 = load %"struct.ui::TouchEventLogEvdev::AbsAxisData"*, %"struct.ui::TouchEventLogEvdev::AbsAxisData"** %41, align 8
  %53 = load %"struct.ui::TouchEventLogEvdev::AbsAxisData"*, %"struct.ui::TouchEventLogEvdev::AbsAxisData"** %42, align 8
  %54 = icmp ult %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %52, %53
  %55 = ptrtoint %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %53 to i64
  br i1 %54, label %56, label %62

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %52, i64 0, i32 0
  store i32 %49, i32* %57, align 4
  %58 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %52, i64 0, i32 1
  %59 = bitcast %struct.input_absinfo* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* nonnull align 8 %39, i64 24, i1 false)
  %60 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %52, i64 1
  %61 = ptrtoint %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %60 to i64
  store i64 %61, i64* %43, align 8
  br label %118

62:                                               ; preds = %51
  %63 = ptrtoint %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %52 to i64
  %64 = load i64, i64* %44, align 8
  %65 = sub i64 %63, %64
  %66 = sdiv exact i64 %65, 28
  %67 = add nsw i64 %66, 1
  %68 = icmp ugt i64 %67, 658812288346769700
  br i1 %68, label %69, label %71

69:                                               ; preds = %62
  %70 = bitcast %"class.std::__1::vector"* %38 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #11
  unreachable

71:                                               ; preds = %62
  %72 = sub i64 %55, %64
  %73 = sdiv exact i64 %72, 28
  %74 = icmp ult i64 %73, 329406144173384850
  br i1 %74, label %75, label %80

75:                                               ; preds = %71
  %76 = shl nsw i64 %73, 1
  %77 = icmp ult i64 %76, %67
  %78 = select i1 %77, i64 %67, i64 %76
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %75, %71
  %81 = phi i64 [ %78, %75 ], [ 658812288346769700, %71 ]
  %82 = mul i64 %81, 28
  %83 = call i8* @_Znwm(i64 %82) #9
  %84 = bitcast i8* %83 to %"struct.ui::TouchEventLogEvdev::AbsAxisData"*
  br label %85

85:                                               ; preds = %80, %75
  %86 = phi i64 [ %81, %80 ], [ 0, %75 ]
  %87 = phi %"struct.ui::TouchEventLogEvdev::AbsAxisData"* [ %84, %80 ], [ null, %75 ]
  %88 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %87, i64 %66
  %89 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %87, i64 %86
  %90 = ptrtoint %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %89 to i64
  %91 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %88, i64 0, i32 0
  store i32 %49, i32* %91, align 4
  %92 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %87, i64 %66, i32 1
  %93 = bitcast %struct.input_absinfo* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* nonnull align 8 %39, i64 24, i1 false)
  %94 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %88, i64 1
  %95 = ptrtoint %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %94 to i64
  %96 = load %"struct.ui::TouchEventLogEvdev::AbsAxisData"*, %"struct.ui::TouchEventLogEvdev::AbsAxisData"** %46, align 8
  %97 = load %"struct.ui::TouchEventLogEvdev::AbsAxisData"*, %"struct.ui::TouchEventLogEvdev::AbsAxisData"** %41, align 8
  %98 = icmp eq %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %97, %96
  br i1 %98, label %99, label %101

99:                                               ; preds = %85
  %100 = ptrtoint %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %96 to i64
  br label %111

101:                                              ; preds = %85, %101
  %102 = phi %"struct.ui::TouchEventLogEvdev::AbsAxisData"* [ %104, %101 ], [ %88, %85 ]
  %103 = phi %"struct.ui::TouchEventLogEvdev::AbsAxisData"* [ %105, %101 ], [ %97, %85 ]
  %104 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %102, i64 -1
  %105 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %103, i64 -1
  %106 = bitcast %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %104 to i8*
  %107 = bitcast %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 28, i1 false) #10
  %108 = icmp eq %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %105, %96
  br i1 %108, label %109, label %101

109:                                              ; preds = %101
  %110 = load i64, i64* %44, align 8
  br label %111

111:                                              ; preds = %109, %99
  %112 = phi %"struct.ui::TouchEventLogEvdev::AbsAxisData"* [ %88, %99 ], [ %104, %109 ]
  %113 = phi i64 [ %100, %99 ], [ %110, %109 ]
  %114 = ptrtoint %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %112 to i64
  store i64 %114, i64* %44, align 8
  store i64 %95, i64* %43, align 8
  store i64 %90, i64* %45, align 8
  %115 = icmp eq i64 %113, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %111
  %117 = inttoptr i64 %113 to i8*
  call void @_ZdlPv(i8* %117) #9
  br label %118

118:                                              ; preds = %56, %111, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39)
  br label %119

119:                                              ; preds = %48, %118
  %120 = add nuw nsw i32 %49, 1
  %121 = icmp eq i32 %120, 64
  br i1 %121, label %47, label %48
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK2ui15EventDeviceInfo11HasAbsEventEj(%"class.ui::EventDeviceInfo"*, i32) local_unnamed_addr #3

declare void @_ZNK2ui15EventDeviceInfo16GetAbsInfoByCodeEj(%struct.input_absinfo* sret, %"class.ui::EventDeviceInfo"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18TouchEventLogEvdev12ProcessEventEmPK11input_event(%"class.ui::TouchEventLogEvdev"* nocapture, i64, %struct.input_event* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.input_event, %struct.input_event* %2, i64 0, i32 1
  %5 = load i16, i16* %4, align 8
  switch i16 %5, label %29 [
    i16 3, label %10
    i16 0, label %10
    i16 1, label %6
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.input_event, %struct.input_event* %2, i64 0, i32 2
  %8 = load i16, i16* %7, align 2
  %9 = icmp eq i16 %8, 330
  br i1 %9, label %10, label %29

10:                                               ; preds = %3, %3, %6
  %11 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"struct.ui::TouchEventLogEvdev::TouchEvent"*, %"struct.ui::TouchEventLogEvdev::TouchEvent"** %14, align 8
  %16 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::TouchEvent", %"struct.ui::TouchEventLogEvdev::TouchEvent"* %15, i64 %13
  %17 = bitcast %"struct.ui::TouchEventLogEvdev::TouchEvent"* %16 to i8*
  %18 = bitcast %struct.input_event* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false)
  %19 = trunc i64 %1 to i32
  %20 = load i32, i32* %11, align 8
  %21 = sext i32 %20 to i64
  %22 = load %"struct.ui::TouchEventLogEvdev::TouchEvent"*, %"struct.ui::TouchEventLogEvdev::TouchEvent"** %14, align 8
  %23 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::TouchEvent", %"struct.ui::TouchEventLogEvdev::TouchEvent"* %22, i64 %21, i32 1
  store i32 %19, i32* %23, align 8
  %24 = load i32, i32* %11, align 8
  %25 = add nsw i32 %24, 1
  %26 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = srem i32 %25, %27
  store i32 %28, i32* %11, align 8
  br label %29

29:                                               ; preds = %3, %10, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18TouchEventLogEvdev7DumpLogEPKc(%"class.ui::TouchEventLogEvdev"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::FilePath", align 8
  %5 = alloca %"class.base::File", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.base::FilePath"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = icmp eq i8* %1, null
  %12 = bitcast %"class.base::FilePath"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  br i1 %11, label %15, label %13

13:                                               ; preds = %2
  %14 = tail call i64 @strlen(i8* nonnull %1) #10
  br label %18

15:                                               ; preds = %2
  %16 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #10
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %18

18:                                               ; preds = %13, %15
  %19 = phi i64 [ 0, %15 ], [ %14, %13 ]
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %4, i8* %1, i64 %19) #10
  %20 = bitcast %"class.base::File"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %20) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 56, i1 false)
  call void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"* nonnull %5, %"class.base::FilePath"* nonnull dereferenceable(24) %4, i32 66) #10
  %21 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #10
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  store i8 0, i8* %25, align 1
  store i8 0, i8* %21, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 3
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  %34 = load i8, i8* %32, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %18
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  br label %41

39:                                               ; preds = %18
  %40 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  br label %41

41:                                               ; preds = %36, %39
  %42 = phi i8* [ %38, %36 ], [ %40, %39 ]
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8* %42) #10
  %43 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i8*, i8** %28, align 8
  %48 = load i64, i64* %29, align 8
  %49 = zext i8 %45 to i64
  %50 = select i1 %46, i8* %47, i8* %27
  %51 = select i1 %46, i64 %48, i64 %49
  %52 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %50, i64 %51) #10
  %53 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 4
  %54 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 4, i32 0, i32 1
  %55 = bitcast %"struct.ui::TouchEventLogEvdev::AbsAxisData"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::vector"* %53 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %56, %58
  br i1 %59, label %67, label %60

60:                                               ; preds = %41
  %61 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  br label %80

67:                                               ; preds = %106, %41
  %68 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %113

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 2
  %73 = getelementptr inbounds %"class.ui::TouchEventLogEvdev", %"class.ui::TouchEventLogEvdev"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %74 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  br label %133

80:                                               ; preds = %60, %106
  %81 = phi i64 [ %58, %60 ], [ %109, %106 ]
  %82 = phi i64 [ 0, %60 ], [ %107, %106 ]
  %83 = inttoptr i64 %81 to %"struct.ui::TouchEventLogEvdev::AbsAxisData"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #10
  %84 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %83, i64 %82, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 24, i1 false)
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %83, i64 %82, i32 1, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %83, i64 %82, i32 1, i32 3
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %83, i64 %82, i32 1, i32 4
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %83, i64 %82, i32 1, i32 5
  %93 = load i32, i32* %92, align 4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i32 %85, i32 %87, i32 %87, i32 %89, i32 %91, i32 %93) #10
  %94 = load i8, i8* %65, align 1
  %95 = icmp slt i8 %94, 0
  %96 = load i8*, i8** %62, align 8
  %97 = load i64, i64* %63, align 8
  %98 = zext i8 %94 to i64
  %99 = select i1 %95, i8* %96, i8* %61
  %100 = select i1 %95, i64 %97, i64 %98
  %101 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %99, i64 %100) #10
  %102 = load i8, i8* %65, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %80
  %105 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %105) #9
  br label %106

106:                                              ; preds = %80, %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #10
  %107 = add nuw i64 %82, 1
  %108 = load i64, i64* %55, align 8
  %109 = load i64, i64* %57, align 8
  %110 = sub i64 %108, %109
  %111 = sdiv exact i64 %110, 28
  %112 = icmp ult i64 %107, %111
  br i1 %112, label %80, label %67

113:                                              ; preds = %176, %67
  %114 = load i8, i8* %25, align 1
  %115 = icmp slt i8 %114, 0
  %116 = load i8*, i8** %22, align 8
  %117 = load i64, i64* %23, align 8
  %118 = zext i8 %114 to i64
  %119 = select i1 %115, i8* %116, i8* %21
  %120 = select i1 %115, i64 %117, i64 %118
  %121 = trunc i64 %120 to i32
  %122 = call i32 @_ZN4base4File5WriteElPKci(%"class.base::File"* nonnull %5, i64 0, i8* %119, i32 %121) #10
  %123 = load i8, i8* %44, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %113
  %126 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %126) #9
  br label %127

127:                                              ; preds = %113, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  %128 = load i8, i8* %25, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %127
  %131 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %131) #9
  br label %132

132:                                              ; preds = %127, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #10
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %20) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  ret void

133:                                              ; preds = %71, %176
  %134 = phi i32 [ %69, %71 ], [ %177, %176 ]
  %135 = phi i32 [ 0, %71 ], [ %178, %176 ]
  %136 = load i32, i32* %72, align 8
  %137 = add nsw i32 %136, %135
  %138 = srem i32 %137, %134
  %139 = sext i32 %138 to i64
  %140 = load %"struct.ui::TouchEventLogEvdev::TouchEvent"*, %"struct.ui::TouchEventLogEvdev::TouchEvent"** %73, align 8
  %141 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::TouchEvent", %"struct.ui::TouchEventLogEvdev::TouchEvent"* %140, i64 %139, i32 0, i32 0, i32 0
  %142 = load i64, i64* %141, align 8
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %148

144:                                              ; preds = %133
  %145 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::TouchEvent", %"struct.ui::TouchEventLogEvdev::TouchEvent"* %140, i64 %139, i32 0, i32 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %176, label %148

148:                                              ; preds = %144, %133
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 24, i1 false)
  %149 = load i64, i64* %141, align 8
  %150 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::TouchEvent", %"struct.ui::TouchEventLogEvdev::TouchEvent"* %140, i64 %139, i32 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::TouchEvent", %"struct.ui::TouchEventLogEvdev::TouchEvent"* %140, i64 %139, i32 0, i32 1
  %153 = load i16, i16* %152, align 8
  %154 = zext i16 %153 to i32
  %155 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::TouchEvent", %"struct.ui::TouchEventLogEvdev::TouchEvent"* %140, i64 %139, i32 0, i32 2
  %156 = load i16, i16* %155, align 2
  %157 = zext i16 %156 to i32
  %158 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::TouchEvent", %"struct.ui::TouchEventLogEvdev::TouchEvent"* %140, i64 %139, i32 0, i32 3
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::TouchEvent", %"struct.ui::TouchEventLogEvdev::TouchEvent"* %140, i64 %139, i32 1
  %161 = load i32, i32* %160, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i64 %149, i64 %151, i32 %154, i32 %157, i32 %159, i32 %161) #10
  %162 = load i8, i8* %78, align 1
  %163 = icmp slt i8 %162, 0
  %164 = load i8*, i8** %75, align 8
  %165 = load i64, i64* %76, align 8
  %166 = zext i8 %162 to i64
  %167 = select i1 %163, i8* %164, i8* %74
  %168 = select i1 %163, i64 %165, i64 %166
  %169 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %167, i64 %168) #10
  %170 = load i8, i8* %78, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %174

172:                                              ; preds = %148
  %173 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %173) #9
  br label %174

174:                                              ; preds = %148, %172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #10
  %175 = load i32, i32* %68, align 8
  br label %176

176:                                              ; preds = %144, %174
  %177 = phi i32 [ %134, %144 ], [ %175, %174 ]
  %178 = add nuw nsw i32 %135, 1
  %179 = icmp slt i32 %178, %177
  br i1 %179, label %133, label %113
}

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"*, %"class.base::FilePath"* dereferenceable(24), i32) unnamed_addr #3

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #3

declare i32 @_ZN4base4File5WriteElPKci(%"class.base::File"*, i64, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18TouchEventLogEvdev11AbsAxisDataC2EiRK13input_absinfo(%"struct.ui::TouchEventLogEvdev::AbsAxisData"* nocapture, i32, %struct.input_absinfo* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"struct.ui::TouchEventLogEvdev::AbsAxisData", %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %0, i64 0, i32 1
  %6 = bitcast %struct.input_absinfo* %5 to i8*
  %7 = bitcast %struct.input_absinfo* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18TouchEventLogEvdev11AbsAxisDataC2ERKS1_(%"struct.ui::TouchEventLogEvdev::AbsAxisData"* nocapture, %"struct.ui::TouchEventLogEvdev::AbsAxisData"* nocapture readonly dereferenceable(28)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %0 to i8*
  %4 = bitcast %"struct.ui::TouchEventLogEvdev::AbsAxisData"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 28, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui18TouchEventLogEvdev11AbsAxisDataD2Ev(%"struct.ui::TouchEventLogEvdev::AbsAxisData"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
