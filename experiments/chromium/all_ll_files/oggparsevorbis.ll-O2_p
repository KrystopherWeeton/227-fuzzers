; ModuleID = '../../third_party/ffmpeg/libavformat/oggparsevorbis.c'
source_filename = "../../third_party/ffmpeg/libavformat/oggparsevorbis.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVMetadataConv = type { i8*, i8* }
%struct.ogg_codec = type { i8*, i8, i8*, i32 (%struct.AVFormatContext*, i32)*, i32 (%struct.AVFormatContext*, i32)*, i64 (%struct.AVFormatContext*, i32, i64, i64*)*, i32, i32, void (%struct.AVFormatContext*, i32)* }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type { i32, i32 }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, i32 (%struct.AVFormatContext*)*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, i8*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, i8*, %struct.AVProbeData, [17 x i64], i8*, i32, i32, i32, i32, i32, i32, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext*, i32, %struct.AVCodecContext*, i32, i32, %struct.anon, i32, i32, %struct.FFFrac*, %struct.anon.0*, %struct.AVIndexEntry*, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], [17 x i64], i64, i8, i8, i32, %struct.AVRational, %struct.AVProbeData, %struct.AVPacketList* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.anon = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.anon.0 = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVDictionaryEntry = type { i8*, i8* }
%struct.ogg = type { %struct.ogg_stream*, i32, i32, i32, i64, %struct.ogg_state* }
%struct.ogg_stream = type { i8*, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i32, %struct.ogg_codec*, i32, i32, i32, [255 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i8* }
%struct.ogg_state = type { i64, i32, %struct.ogg_state*, i32, [1 x %struct.ogg_stream] }
%struct.oggvorbis_private = type { [3 x i32], [3 x i8*], %struct.AVVorbisParseContext*, i64, i32 }
%struct.AVVorbisParseContext = type opaque

@.str = private unnamed_addr constant [23 x i8] c"METADATA_BLOCK_PICTURE\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"out-of-memory error. Skipping cover art block.\0A\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"Failed to parse cover art block.\0A\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"%td bytes of comment header remain\0A\00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c"truncated comment header, %i comments not found\0A\00", align 1
@ff_vorbiscomment_metadata_conv = external constant [0 x %struct.AVMetadataConv], align 8
@.str.6 = private unnamed_addr constant [8 x i8] c"\01vorbis\00", align 1
@ff_vorbis_codec = hidden local_unnamed_addr constant %struct.ogg_codec { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i8 7, i8* null, i32 (%struct.AVFormatContext*, i32)* @vorbis_header, i32 (%struct.AVFormatContext*, i32)* @vorbis_packet, i64 (%struct.AVFormatContext*, i32, i64, i64*)* null, i32 0, i32 3, void (%struct.AVFormatContext*, i32)* @vorbis_cleanup }, align 8
@.str.7 = private unnamed_addr constant [8 x i8] c"CHAPTER\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"%03d\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"%02d:%02d:%02d.%03d\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"NAME\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"Channel change is not supported\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_vorbis_stream_comment(%struct.AVFormatContext*, %struct.AVStream*, i8*, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1, i64 0, i32 11
  %6 = tail call i32 @ff_vorbis_comment(%struct.AVFormatContext* %0, %struct.AVDictionary** %5, i8* %2, i32 %3, i32 1)
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1, i64 0, i32 16
  %10 = load i32, i32* %9, align 4
  %11 = or i32 %10, 1
  store i32 %11, i32* %9, align 4
  br label %12

12:                                               ; preds = %8, %4
  ret i32 %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_vorbis_comment(%struct.AVFormatContext*, %struct.AVDictionary**, i8*, i32, i32) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = sext i32 %3 to i64
  %15 = getelementptr inbounds i8, i8* %2, i64 %14
  %16 = icmp slt i32 %3, 8
  br i1 %16, label %227, label %17

17:                                               ; preds = %5
  %18 = bitcast i8* %2 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = ptrtoint i8* %15 to i64
  %21 = add nsw i64 %14, -8
  %22 = sext i32 %19 to i64
  %23 = icmp slt i64 %21, %22
  %24 = icmp slt i32 %19, 0
  %25 = or i1 %24, %23
  br i1 %25, label %227, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds i8, i8* %2, i64 4
  %28 = getelementptr inbounds i8, i8* %27, i64 %22
  %29 = getelementptr inbounds i8, i8* %28, i64 4
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast i8* %28 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = sub i64 %20, %30
  %34 = icmp sgt i64 %33, 3
  %35 = icmp ne i32 %32, 0
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %212

37:                                               ; preds = %26
  %38 = bitcast i8** %11 to i8*
  %39 = bitcast i8** %12 to i8*
  %40 = icmp ne i32 %4, 0
  %41 = bitcast i32* %6 to i8*
  %42 = bitcast i32* %7 to i8*
  %43 = bitcast i32* %8 to i8*
  %44 = bitcast i32* %9 to i8*
  %45 = bitcast i32* %10 to i8*
  %46 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 27
  %47 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 28
  %48 = bitcast i8** %13 to i8*
  %49 = bitcast %struct.AVFormatContext* %0 to i8*
  br label %50

50:                                               ; preds = %37, %202
  %51 = phi i32 [ %32, %37 ], [ %67, %202 ]
  %52 = phi i32 [ 0, %37 ], [ %203, %202 ]
  %53 = phi i64 [ %30, %37 ], [ %66, %202 ]
  %54 = inttoptr i64 %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 4
  %56 = ptrtoint i8* %55 to i64
  %57 = inttoptr i64 %53 to i32*
  %58 = load i32, i32* %57, align 1
  %59 = sub i64 %20, %56
  %60 = sext i32 %58 to i64
  %61 = icmp slt i64 %59, %60
  %62 = icmp slt i32 %58, 0
  %63 = or i1 %62, %61
  br i1 %63, label %208, label %64

64:                                               ; preds = %50
  %65 = getelementptr inbounds i8, i8* %55, i64 %60
  %66 = ptrtoint i8* %65 to i64
  %67 = add i32 %51, -1
  %68 = call i8* @memchr(i8* %55, i32 61, i64 %60) #6
  %69 = icmp eq i8* %68, null
  br i1 %69, label %202, label %70

70:                                               ; preds = %64
  %71 = ptrtoint i8* %68 to i64
  %72 = sub i64 %71, %56
  %73 = trunc i64 %72 to i32
  %74 = sub nsw i32 %58, %73
  %75 = add nsw i32 %74, -1
  %76 = getelementptr inbounds i8, i8* %68, i64 1
  %77 = icmp ne i32 %73, 0
  %78 = icmp ne i32 %75, 0
  %79 = and i1 %77, %78
  br i1 %79, label %80, label %202

80:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %81 = shl i64 %72, 32
  %82 = add i64 %81, 4294967296
  %83 = ashr exact i64 %82, 32
  %84 = call noalias i8* @av_malloc(i64 %83) #7
  store i8* %84, i8** %11, align 8
  %85 = sext i32 %74 to i64
  %86 = call noalias i8* @av_malloc(i64 %85) #7
  store i8* %86, i8** %12, align 8
  %87 = load i8*, i8** %11, align 8
  %88 = icmp ne i8* %87, null
  %89 = icmp ne i8* %86, null
  %90 = and i1 %89, %88
  br i1 %90, label %91, label %226

91:                                               ; preds = %80
  %92 = ashr exact i64 %81, 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %87, i8* align 1 %55, i64 %92, i1 false)
  %93 = load i8*, i8** %11, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 %92
  store i8 0, i8* %94, align 1
  %95 = load i8*, i8** %12, align 8
  %96 = sext i32 %75 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %95, i8* align 1 %76, i64 %96, i1 false)
  %97 = load i8*, i8** %12, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 %96
  store i8 0, i8* %98, align 1
  %99 = load i8*, i8** %11, align 8
  %100 = call i32 @av_strcasecmp(i8* %99, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0)) #7
  %101 = icmp eq i32 %100, 0
  %102 = and i1 %40, %101
  br i1 %102, label %103, label %124

103:                                              ; preds = %91
  %104 = mul nsw i64 %96, 3
  %105 = sdiv i64 %104, 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %13, align 8
  %106 = shl i64 %105, 32
  %107 = ashr exact i64 %106, 32
  %108 = call noalias i8* @av_malloc(i64 %107) #7
  store i8* %108, i8** %13, align 8
  %109 = icmp eq i8* %108, null
  br i1 %109, label %110, label %111

110:                                              ; preds = %103
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 24, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0)) #7
  call void @av_freep(i8* nonnull %38) #7
  call void @av_freep(i8* nonnull %39) #7
  br label %201

111:                                              ; preds = %103
  %112 = trunc i64 %105 to i32
  %113 = load i8*, i8** %12, align 8
  %114 = call i32 @av_base64_decode(i8* nonnull %108, i8* %113, i32 %112) #7
  call void @av_freep(i8* nonnull %38) #7
  call void @av_freep(i8* nonnull %39) #7
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %111
  %117 = load i8*, i8** %13, align 8
  %118 = call i32 @ff_flac_parse_picture(%struct.AVFormatContext* %0, i8* %117, i32 %114, i32 0) #7
  br label %119

119:                                              ; preds = %116, %111
  %120 = phi i32 [ %118, %116 ], [ %114, %111 ]
  call void @av_freep(i8* nonnull %48) #7
  %121 = icmp slt i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %201

123:                                              ; preds = %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #7
  br label %199

124:                                              ; preds = %91
  %125 = load i8*, i8** %11, align 8
  %126 = load i8*, i8** %12, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #7
  store i32 -1431655766, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #7
  store i32 -1431655766, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #7
  store i32 -1431655766, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #7
  store i32 -1431655766, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #7
  store i32 -1431655766, i32* %10, align 4
  %127 = call i64 @strlen(i8* %125) #6
  %128 = trunc i64 %127 to i32
  %129 = icmp slt i32 %128, 9
  br i1 %129, label %186, label %130

130:                                              ; preds = %124
  %131 = call i32 @av_strncasecmp(i8* %125, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i64 7) #7
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %186

133:                                              ; preds = %130
  %134 = getelementptr inbounds i8, i8* %125, i64 7
  %135 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %134, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i32* nonnull %6) #7
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %137, label %186

137:                                              ; preds = %133
  %138 = icmp slt i32 %128, 11
  br i1 %138, label %139, label %156

139:                                              ; preds = %137
  %140 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %126, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i32* nonnull %7, i32* nonnull %8, i32* nonnull %9, i32* nonnull %10) #7
  %141 = icmp slt i32 %140, 4
  br i1 %141, label %186, label %142

142:                                              ; preds = %139
  %143 = load i32, i32* %6, align 4
  %144 = load i32, i32* %10, align 4
  %145 = load i32, i32* %9, align 4
  %146 = load i32, i32* %8, align 4
  %147 = load i32, i32* %7, align 4
  %148 = mul nsw i32 %147, 60
  %149 = add nsw i32 %148, %146
  %150 = mul nsw i32 %149, 60
  %151 = add nsw i32 %150, %145
  %152 = mul nsw i32 %151, 1000
  %153 = add nsw i32 %152, %144
  %154 = sext i32 %153 to i64
  %155 = call %struct.AVChapter* @avpriv_new_chapter(%struct.AVFormatContext* %0, i32 %143, i64 4294967296001, i64 %154, i64 -9223372036854775808, i8* null) #7
  call void @av_free(i8* %126) #7
  br label %185

156:                                              ; preds = %137
  %157 = shl i64 %127, 32
  %158 = ashr exact i64 %157, 32
  %159 = getelementptr inbounds i8, i8* %125, i64 -4
  %160 = getelementptr inbounds i8, i8* %159, i64 %158
  %161 = call i32 @av_strcasecmp(i8* %160, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)) #7
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %186

163:                                              ; preds = %156
  %164 = load i32, i32* %46, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %186, label %166

166:                                              ; preds = %163
  %167 = load %struct.AVChapter**, %struct.AVChapter*** %47, align 8
  %168 = load i32, i32* %6, align 4
  %169 = zext i32 %164 to i64
  br label %172

170:                                              ; preds = %172
  %171 = icmp eq i64 %179, %169
  br i1 %171, label %186, label %172

172:                                              ; preds = %170, %166
  %173 = phi i64 [ 0, %166 ], [ %179, %170 ]
  %174 = getelementptr inbounds %struct.AVChapter*, %struct.AVChapter** %167, i64 %173
  %175 = load %struct.AVChapter*, %struct.AVChapter** %174, align 8
  %176 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %175, i64 0, i32 0
  %177 = load i32, i32* %176, align 8
  %178 = icmp eq i32 %177, %168
  %179 = add nuw nsw i64 %173, 1
  br i1 %178, label %180, label %170

180:                                              ; preds = %172
  %181 = icmp eq %struct.AVChapter* %175, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %180
  %183 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %175, i64 0, i32 4
  %184 = call i32 @av_dict_set(%struct.AVDictionary** %183, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i8* %126, i32 8) #7
  br label %185

185:                                              ; preds = %182, %142
  call void @av_free(i8* %125) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #7
  br label %199

186:                                              ; preds = %170, %124, %130, %133, %139, %156, %163, %180
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #7
  %187 = add nsw i32 %52, 1
  %188 = load %struct.AVDictionary*, %struct.AVDictionary** %1, align 8
  %189 = load i8*, i8** %11, align 8
  %190 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %188, i8* %189, %struct.AVDictionaryEntry* null, i32 0) #7
  %191 = icmp eq %struct.AVDictionaryEntry* %190, null
  br i1 %191, label %195, label %192

192:                                              ; preds = %186
  %193 = load i8*, i8** %11, align 8
  %194 = call i32 @av_dict_set(%struct.AVDictionary** %1, i8* %193, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i32 32) #7
  br label %195

195:                                              ; preds = %186, %192
  %196 = load i8*, i8** %11, align 8
  %197 = load i8*, i8** %12, align 8
  %198 = call i32 @av_dict_set(%struct.AVDictionary** %1, i8* %196, i8* %197, i32 44) #7
  br label %199

199:                                              ; preds = %185, %123, %195
  %200 = phi i32 [ %187, %195 ], [ %52, %123 ], [ %52, %185 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #7
  br label %202

201:                                              ; preds = %110, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #7
  br label %202

202:                                              ; preds = %199, %70, %64, %201
  %203 = phi i32 [ %52, %201 ], [ %200, %199 ], [ %52, %70 ], [ %52, %64 ]
  %204 = sub i64 %20, %66
  %205 = icmp sgt i64 %204, 3
  %206 = icmp ne i32 %67, 0
  %207 = and i1 %205, %206
  br i1 %207, label %50, label %210

208:                                              ; preds = %50
  %209 = ptrtoint i8* %55 to i64
  br label %212

210:                                              ; preds = %202
  %211 = ptrtoint i8* %65 to i64
  br label %212

212:                                              ; preds = %208, %210, %26
  %213 = phi i64 [ %30, %26 ], [ %209, %208 ], [ %211, %210 ]
  %214 = phi i32 [ 0, %26 ], [ %52, %208 ], [ %203, %210 ]
  %215 = phi i32 [ %32, %26 ], [ %51, %208 ], [ %67, %210 ]
  %216 = inttoptr i64 %213 to i8*
  %217 = icmp eq i8* %15, %216
  br i1 %217, label %221, label %218

218:                                              ; preds = %212
  %219 = bitcast %struct.AVFormatContext* %0 to i8*
  %220 = sub i64 %20, %213
  call void (i8*, i32, i8*, ...) @av_log(i8* %219, i32 32, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0), i64 %220) #7
  br label %221

221:                                              ; preds = %212, %218
  %222 = icmp eq i32 %215, 0
  br i1 %222, label %225, label %223

223:                                              ; preds = %221
  %224 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %224, i32 32, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i64 0, i64 0), i32 %215) #7
  br label %225

225:                                              ; preds = %221, %223
  call void @ff_metadata_conv(%struct.AVDictionary** %1, %struct.AVMetadataConv* null, %struct.AVMetadataConv* getelementptr inbounds ([0 x %struct.AVMetadataConv], [0 x %struct.AVMetadataConv]* @ff_vorbiscomment_metadata_conv, i64 0, i64 0)) #7
  br label %227

226:                                              ; preds = %80
  call void @av_freep(i8* nonnull %38) #7
  call void @av_freep(i8* nonnull %39) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #7
  br label %227

227:                                              ; preds = %226, %17, %5, %225
  %228 = phi i32 [ %214, %225 ], [ -1094995529, %5 ], [ -1094995529, %17 ], [ -12, %226 ]
  ret i32 %228
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #2

declare noalias i8* @av_malloc(i64) local_unnamed_addr #3

declare void @av_freep(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @av_strcasecmp(i8*, i8*) local_unnamed_addr #3

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #3

declare i32 @av_base64_decode(i8*, i8*, i32) local_unnamed_addr #3

declare i32 @ff_flac_parse_picture(%struct.AVFormatContext*, i8*, i32, i32) local_unnamed_addr #3

declare %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary*, i8*, %struct.AVDictionaryEntry*, i32) local_unnamed_addr #3

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) local_unnamed_addr #3

declare void @ff_metadata_conv(%struct.AVDictionary**, %struct.AVMetadataConv*, %struct.AVMetadataConv*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal i32 @vorbis_header(%struct.AVFormatContext*, i32) #0 {
  %3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to %struct.ogg**
  %5 = load %struct.ogg*, %struct.ogg** %4, align 8
  %6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %7 = load %struct.AVStream**, %struct.AVStream*** %6, align 8
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %7, i64 %8
  %10 = load %struct.AVStream*, %struct.AVStream** %9, align 8
  %11 = getelementptr inbounds %struct.ogg, %struct.ogg* %5, i64 0, i32 0
  %12 = load %struct.ogg_stream*, %struct.ogg_stream** %11, align 8
  %13 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %12, i64 %8, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %12, i64 %8, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %12, i64 %8, i32 30
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = tail call noalias i8* @av_mallocz(i64 64) #7
  store i8* %25, i8** %21, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %275, label %27

27:                                               ; preds = %24, %2
  %28 = phi i8* [ %25, %24 ], [ %22, %2 ]
  %29 = bitcast i8* %28 to %struct.oggvorbis_private*
  %30 = and i32 %20, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %27
  %33 = getelementptr inbounds i8, i8* %28, i64 40
  %34 = bitcast i8* %33 to %struct.AVVorbisParseContext**
  %35 = load %struct.AVVorbisParseContext*, %struct.AVVorbisParseContext** %34, align 8
  %36 = icmp eq %struct.AVVorbisParseContext* %35, null
  %37 = select i1 %36, i32 -1094995529, i32 0
  br label %275

38:                                               ; preds = %27
  %39 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %12, i64 %8, i32 4
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  %42 = icmp ugt i8 %19, 5
  %43 = or i1 %42, %41
  br i1 %43, label %275, label %44

44:                                               ; preds = %38
  %45 = lshr i32 %20, 1
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %struct.oggvorbis_private, %struct.oggvorbis_private* %29, i64 0, i32 1, i64 %46
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %275

50:                                               ; preds = %44
  %51 = icmp ugt i8 %19, 1
  br i1 %51, label %52, label %70

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %28, i64 16
  %54 = bitcast i8* %53 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %64, label %57

57:                                               ; preds = %52
  %58 = icmp ugt i8 %19, 3
  br i1 %58, label %59, label %70

59:                                               ; preds = %57
  %60 = getelementptr inbounds i8, i8* %28, i64 24
  %61 = bitcast i8* %60 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %64, label %70

64:                                               ; preds = %52, %59
  %65 = getelementptr inbounds i8, i8* %28, i64 40
  %66 = bitcast i8* %65 to %struct.AVVorbisParseContext**
  %67 = load %struct.AVVorbisParseContext*, %struct.AVVorbisParseContext** %66, align 8
  %68 = icmp eq %struct.AVVorbisParseContext* %67, null
  %69 = select i1 %68, i32 -1094995529, i32 0
  br label %275

70:                                               ; preds = %50, %59, %57
  %71 = getelementptr inbounds %struct.oggvorbis_private, %struct.oggvorbis_private* %29, i64 0, i32 0, i64 %46
  store i32 %40, i32* %71, align 4
  %72 = load i32, i32* %39, align 4
  %73 = zext i32 %72 to i64
  %74 = tail call noalias i8* @av_mallocz(i64 %73) #7
  store i8* %74, i8** %47, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %275, label %76

76:                                               ; preds = %70
  %77 = load i8*, i8** %13, align 8
  %78 = load i32, i32* %15, align 8
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %77, i64 %79
  %81 = load i32, i32* %39, align 4
  %82 = zext i32 %81 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %74, i8* align 1 %80, i64 %82, i1 false)
  %83 = load i8*, i8** %13, align 8
  %84 = load i32, i32* %15, align 8
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %83, i64 %85
  %87 = load i8, i8* %86, align 1
  switch i8 %87, label %178 [
    i8 1, label %88
    i8 3, label %144
  ]

88:                                               ; preds = %76
  %89 = getelementptr inbounds i8, i8* %86, i64 7
  %90 = load i32, i32* %39, align 4
  %91 = icmp eq i32 %90, 30
  br i1 %91, label %92, label %275

92:                                               ; preds = %88
  %93 = getelementptr inbounds i8, i8* %89, i64 4
  %94 = bitcast i8* %89 to i32*
  %95 = load i32, i32* %94, align 1
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %275

97:                                               ; preds = %92
  %98 = getelementptr inbounds i8, i8* %93, i64 1
  %99 = load i8, i8* %93, align 1
  %100 = zext i8 %99 to i32
  %101 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %10, i64 0, i32 19
  %102 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %101, align 8
  %103 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %102, i64 0, i32 22
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 0
  %106 = icmp eq i32 %104, %100
  %107 = or i1 %105, %106
  br i1 %107, label %110, label %108

108:                                              ; preds = %97
  %109 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %109, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0)) #7
  br label %275

110:                                              ; preds = %97
  store i32 %100, i32* %103, align 8
  %111 = getelementptr inbounds i8, i8* %98, i64 4
  %112 = bitcast i8* %98 to i32*
  %113 = load i32, i32* %112, align 1
  %114 = getelementptr inbounds i8, i8* %111, i64 4
  %115 = getelementptr inbounds i8, i8* %114, i64 4
  %116 = bitcast i8* %114 to i32*
  %117 = load i32, i32* %116, align 1
  %118 = zext i32 %117 to i64
  %119 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %101, align 8
  %120 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %119, i64 0, i32 6
  store i64 %118, i64* %120, align 8
  %121 = getelementptr inbounds i8, i8* %115, i64 4
  %122 = getelementptr inbounds i8, i8* %121, i64 1
  %123 = load i8, i8* %121, align 1
  %124 = zext i8 %123 to i32
  %125 = and i32 %124, 15
  %126 = lshr i32 %124, 4
  %127 = icmp ugt i32 %125, %126
  br i1 %127, label %275, label %128

128:                                              ; preds = %110
  %129 = icmp ult i32 %125, 6
  %130 = icmp ugt i8 %123, -33
  %131 = or i1 %130, %129
  br i1 %131, label %275, label %132

132:                                              ; preds = %128
  %133 = load i8, i8* %122, align 1
  %134 = icmp eq i8 %133, 1
  br i1 %134, label %135, label %275

135:                                              ; preds = %132
  %136 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %101, align 8
  %137 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %136, i64 0, i32 0
  store i32 1, i32* %137, align 8
  %138 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %101, align 8
  %139 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %138, i64 0, i32 1
  store i32 86021, i32* %139, align 4
  %140 = icmp sgt i32 %113, 0
  br i1 %140, label %141, label %275

141:                                              ; preds = %135
  %142 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %101, align 8
  %143 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %142, i64 0, i32 23
  store i32 %113, i32* %143, align 4
  tail call void @avpriv_set_pts_info(%struct.AVStream* %10, i32 64, i32 1, i32 %113) #7
  br label %275

144:                                              ; preds = %76
  %145 = tail call fastcc i32 @vorbis_update_metadata(%struct.AVFormatContext* %0, i32 %1)
  %146 = icmp sgt i32 %145, -1
  br i1 %146, label %147, label %275

147:                                              ; preds = %144
  %148 = getelementptr inbounds i8, i8* %28, i64 4
  %149 = bitcast i8* %148 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = icmp ugt i32 %150, 10
  br i1 %151, label %152, label %275

152:                                              ; preds = %147
  %153 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %10, i64 0, i32 11
  %154 = load %struct.AVDictionary*, %struct.AVDictionary** %153, align 8
  %155 = tail call i32 @ff_replaygain_export(%struct.AVStream* %10, %struct.AVDictionary* %154) #7
  %156 = icmp slt i32 %155, 0
  br i1 %156, label %275, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds i8, i8* %28, i64 24
  %159 = bitcast i8* %158 to i8**
  %160 = load i8*, i8** %159, align 8
  %161 = getelementptr inbounds i8, i8* %160, i64 7
  %162 = bitcast i8* %161 to i32*
  %163 = load i32, i32* %162, align 1
  %164 = add i32 %163, 15
  %165 = add i32 %163, 16
  %166 = icmp ugt i32 %165, 15
  br i1 %166, label %167, label %275

167:                                              ; preds = %157
  %168 = load i32, i32* %39, align 4
  %169 = icmp ult i32 %165, %168
  br i1 %169, label %170, label %275

170:                                              ; preds = %167
  %171 = zext i32 %165 to i64
  %172 = getelementptr inbounds i8, i8* %160, i64 %171
  %173 = getelementptr inbounds i8, i8* %172, i64 -5
  %174 = bitcast i8* %173 to i32*
  store i32 0, i32* %174, align 1
  %175 = load i8*, i8** %159, align 8
  %176 = zext i32 %164 to i64
  %177 = getelementptr inbounds i8, i8* %175, i64 %176
  store i8 1, i8* %177, align 1
  store i32 %165, i32* %149, align 4
  br label %275

178:                                              ; preds = %76
  %179 = getelementptr inbounds i8, i8* %28, i64 40
  %180 = bitcast i8* %179 to %struct.AVVorbisParseContext**
  %181 = load %struct.AVVorbisParseContext*, %struct.AVVorbisParseContext** %180, align 8
  %182 = icmp eq %struct.AVVorbisParseContext* %181, null
  br i1 %182, label %183, label %275

183:                                              ; preds = %178
  %184 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %10, i64 0, i32 19
  %185 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %184, align 8
  %186 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %185, i64 0, i32 3
  %187 = bitcast i8* %28 to i32*
  %188 = load i32, i32* %187, align 8
  %189 = getelementptr inbounds i8, i8* %28, i64 4
  %190 = bitcast i8* %189 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = add i32 %191, %188
  %193 = getelementptr inbounds i8, i8* %28, i64 8
  %194 = bitcast i8* %193 to i32*
  %195 = load i32, i32* %194, align 8
  %196 = add i32 %192, %195
  %197 = load i8*, i8** %186, align 8
  %198 = icmp eq i8* %197, null
  br i1 %198, label %199, label %208

199:                                              ; preds = %183
  %200 = sdiv i32 %196, 255
  %201 = add i32 %196, 64
  %202 = add i32 %201, %200
  %203 = sext i32 %202 to i64
  %204 = tail call i8* @av_realloc(i8* null, i64 %203) #7
  store i8* %204, i8** %186, align 8
  %205 = icmp eq i8* %204, null
  br i1 %205, label %206, label %212

206:                                              ; preds = %199
  %207 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %184, align 8
  br label %208

208:                                              ; preds = %206, %183
  %209 = phi %struct.AVCodecParameters* [ %207, %206 ], [ %185, %183 ]
  %210 = phi i32 [ -12, %206 ], [ -1094995529, %183 ]
  %211 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %209, i64 0, i32 4
  br label %258

212:                                              ; preds = %199
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %204, i8 0, i64 %203, i1 false) #7
  store i8 2, i8* %204, align 1
  %213 = getelementptr inbounds i8, i8* %204, i64 1
  %214 = load i32, i32* %187, align 8
  %215 = tail call i32 @av_xiphlacing(i8* %213, i32 %214) #7
  %216 = add i32 %215, 1
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds i8, i8* %204, i64 %217
  %219 = load i32, i32* %190, align 4
  %220 = tail call i32 @av_xiphlacing(i8* %218, i32 %219) #7
  %221 = add i32 %220, %216
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i8, i8* %204, i64 %222
  %224 = getelementptr inbounds i8, i8* %28, i64 16
  %225 = bitcast i8* %224 to i8**
  %226 = load i8*, i8** %225, align 8
  %227 = load i32, i32* %187, align 4
  %228 = zext i32 %227 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %223, i8* align 1 %226, i64 %228, i1 false) #7
  %229 = load i32, i32* %187, align 4
  %230 = add i32 %229, %221
  tail call void @av_freep(i8* %224) #7
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i8, i8* %204, i64 %231
  %233 = getelementptr inbounds i8, i8* %28, i64 24
  %234 = bitcast i8* %233 to i8**
  %235 = load i8*, i8** %234, align 8
  %236 = load i32, i32* %190, align 4
  %237 = zext i32 %236 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %232, i8* align 1 %235, i64 %237, i1 false) #7
  %238 = load i32, i32* %190, align 4
  %239 = add i32 %238, %230
  tail call void @av_freep(i8* %233) #7
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i8, i8* %204, i64 %240
  %242 = getelementptr inbounds i8, i8* %28, i64 32
  %243 = bitcast i8* %242 to i8**
  %244 = load i8*, i8** %243, align 8
  %245 = load i32, i32* %194, align 4
  %246 = zext i32 %245 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %241, i8* align 1 %244, i64 %246, i1 false) #7
  %247 = load i32, i32* %194, align 4
  %248 = add i32 %247, %239
  tail call void @av_freep(i8* %242) #7
  %249 = bitcast i8** %186 to i8*
  %250 = add nsw i32 %248, 64
  %251 = sext i32 %250 to i64
  %252 = tail call i32 @av_reallocp(i8* %249, i64 %251) #7
  %253 = icmp slt i32 %252, 0
  %254 = select i1 %253, i32 %252, i32 %248
  %255 = icmp slt i32 %254, 0
  %256 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %184, align 8
  %257 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %256, i64 0, i32 4
  br i1 %255, label %258, label %261

258:                                              ; preds = %208, %212
  %259 = phi i32* [ %211, %208 ], [ %257, %212 ]
  %260 = phi i32 [ %210, %208 ], [ %254, %212 ]
  store i32 0, i32* %259, align 8
  br label %275

261:                                              ; preds = %212
  store i32 %254, i32* %257, align 8
  %262 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %184, align 8
  %263 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %262, i64 0, i32 3
  %264 = load i8*, i8** %263, align 8
  %265 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %262, i64 0, i32 4
  %266 = load i32, i32* %265, align 8
  %267 = tail call %struct.AVVorbisParseContext* @av_vorbis_parse_init(i8* %264, i32 %266) #7
  store %struct.AVVorbisParseContext* %267, %struct.AVVorbisParseContext** %180, align 8
  %268 = icmp eq %struct.AVVorbisParseContext* %267, null
  br i1 %268, label %269, label %275

269:                                              ; preds = %261
  %270 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %184, align 8
  %271 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %270, i64 0, i32 3
  %272 = bitcast i8** %271 to i8*
  tail call void @av_freep(i8* %272) #7
  %273 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %184, align 8
  %274 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %273, i64 0, i32 4
  store i32 0, i32* %274, align 8
  br label %275

275:                                              ; preds = %178, %269, %258, %132, %128, %110, %92, %88, %108, %144, %147, %157, %167, %170, %135, %141, %261, %152, %70, %44, %38, %24, %64, %32
  %276 = phi i32 [ %69, %64 ], [ %37, %32 ], [ -12, %24 ], [ -1094995529, %38 ], [ -1094995529, %44 ], [ -12, %70 ], [ %155, %152 ], [ 1, %261 ], [ 1, %141 ], [ 1, %135 ], [ 1, %170 ], [ 1, %167 ], [ 1, %157 ], [ 1, %147 ], [ 1, %144 ], [ -1094995529, %132 ], [ -1094995529, %128 ], [ -1094995529, %110 ], [ -1094995529, %92 ], [ -1094995529, %88 ], [ -1163346256, %108 ], [ -1094995529, %178 ], [ -1313558101, %269 ], [ %260, %258 ]
  ret i32 %276
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @vorbis_packet(%struct.AVFormatContext*, i32) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %5 = bitcast i8** %4 to %struct.ogg**
  %6 = load %struct.ogg*, %struct.ogg** %5, align 8
  %7 = getelementptr inbounds %struct.ogg, %struct.ogg* %6, i64 0, i32 0
  %8 = load %struct.ogg_stream*, %struct.ogg_stream** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9
  %11 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 30
  %12 = bitcast i8** %11 to %struct.oggvorbis_private**
  %13 = load %struct.oggvorbis_private*, %struct.oggvorbis_private** %12, align 8
  %14 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #7
  store i32 0, i32* %3, align 4
  %15 = getelementptr inbounds %struct.oggvorbis_private, %struct.oggvorbis_private* %13, i64 0, i32 2
  %16 = load %struct.AVVorbisParseContext*, %struct.AVVorbisParseContext** %15, align 8
  %17 = icmp eq %struct.AVVorbisParseContext* %16, null
  br i1 %17, label %198, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 10
  %20 = load i64, i64* %19, align 8
  switch i64 %20, label %136 [
    i64 0, label %21
    i64 -9223372036854775808, label %21
  ]

21:                                               ; preds = %18, %18
  %22 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 14
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %136

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 8
  %28 = load i64, i64* %27, align 8
  %29 = icmp sgt i64 %28, -1
  br i1 %29, label %30, label %136

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %10, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %32, i64 %35
  tail call void @av_vorbis_parse_reset(%struct.AVVorbisParseContext* nonnull %16) #7
  %37 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 18
  %38 = load i32, i32* %37, align 8
  %39 = load %struct.AVVorbisParseContext*, %struct.AVVorbisParseContext** %15, align 8
  %40 = call i32 @av_vorbis_parse_frame_flags(%struct.AVVorbisParseContext* %39, i8* %36, i32 1, i32* nonnull %3) #7
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %30
  %43 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 5
  %44 = load i32, i32* %43, align 8
  %45 = or i32 %44, 2
  store i32 %45, i32* %43, align 8
  br label %198

46:                                               ; preds = %30
  %47 = load i32, i32* %3, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = call fastcc i32 @vorbis_update_metadata(%struct.AVFormatContext* %0, i32 %1)
  store i32 0, i32* %3, align 4
  br label %52

52:                                               ; preds = %46, %50
  %53 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 4
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %36, i64 %55
  %57 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 17
  %58 = load i32, i32* %57, align 4
  %59 = icmp slt i32 %38, %58
  br i1 %59, label %60, label %100

60:                                               ; preds = %52
  %61 = sext i32 %38 to i64
  br label %62

62:                                               ; preds = %60, %90
  %63 = phi i32 [ %58, %60 ], [ %91, %90 ]
  %64 = phi i64 [ %61, %60 ], [ %97, %90 ]
  %65 = phi i8* [ %56, %60 ], [ %96, %90 ]
  %66 = phi i8* [ %56, %60 ], [ %94, %90 ]
  %67 = phi i32 [ %40, %60 ], [ %93, %90 ]
  %68 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 19, i64 %64
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, -1
  br i1 %70, label %90, label %71

71:                                               ; preds = %62
  %72 = load %struct.AVVorbisParseContext*, %struct.AVVorbisParseContext** %15, align 8
  %73 = call i32 @av_vorbis_parse_frame_flags(%struct.AVVorbisParseContext* %72, i8* %66, i32 1, i32* nonnull %3) #7
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %87, label %75

75:                                               ; preds = %71
  %76 = load i32, i32* %3, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = call fastcc i32 @vorbis_update_metadata(%struct.AVFormatContext* %0, i32 %1)
  store i32 0, i32* %3, align 4
  br label %81

81:                                               ; preds = %79, %75
  %82 = add nsw i32 %73, %67
  %83 = load i8, i8* %68, align 1
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds i8, i8* %65, i64 %84
  %86 = load i32, i32* %57, align 4
  br label %90

87:                                               ; preds = %71
  %88 = load i64, i64* %27, align 8
  %89 = trunc i64 %88 to i32
  br label %100

90:                                               ; preds = %62, %81
  %91 = phi i32 [ %86, %81 ], [ %63, %62 ]
  %92 = phi i8 [ %83, %81 ], [ -1, %62 ]
  %93 = phi i32 [ %82, %81 ], [ %67, %62 ]
  %94 = phi i8* [ %85, %81 ], [ %66, %62 ]
  %95 = zext i8 %92 to i64
  %96 = getelementptr inbounds i8, i8* %65, i64 %95
  %97 = add nsw i64 %64, 1
  %98 = sext i32 %91 to i64
  %99 = icmp slt i64 %97, %98
  br i1 %99, label %62, label %100

100:                                              ; preds = %90, %52, %87
  %101 = phi i32 [ %89, %87 ], [ %40, %52 ], [ %93, %90 ]
  %102 = load i64, i64* %27, align 8
  %103 = sext i32 %101 to i64
  %104 = sub i64 %102, %103
  %105 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 11
  store i64 %104, i64* %105, align 8
  store i64 %104, i64* %19, align 8
  %106 = icmp eq i64 %102, 0
  %107 = icmp ne i32 %101, 0
  %108 = and i1 %107, %106
  br i1 %108, label %109, label %111

109:                                              ; preds = %100
  %110 = bitcast i64* %19 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %110, align 8
  br label %111

111:                                              ; preds = %100, %109
  %112 = phi i64 [ %104, %100 ], [ -9223372036854775808, %109 ]
  %113 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %114 = load %struct.AVStream**, %struct.AVStream*** %113, align 8
  %115 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %114, i64 %9
  %116 = load %struct.AVStream*, %struct.AVStream** %115, align 8
  %117 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %116, i64 0, i32 5
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %118, -9223372036854775808
  br i1 %119, label %120, label %133

120:                                              ; preds = %111
  %121 = icmp sgt i64 %112, 0
  %122 = select i1 %121, i64 %112, i64 0
  store i64 %122, i64* %117, align 8
  %123 = load %struct.AVStream**, %struct.AVStream*** %113, align 8
  %124 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %123, i64 %9
  %125 = load %struct.AVStream*, %struct.AVStream** %124, align 8
  %126 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %125, i64 0, i32 6
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %127, -9223372036854775808
  br i1 %128, label %133, label %129

129:                                              ; preds = %120
  %130 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %125, i64 0, i32 5
  %131 = load i64, i64* %130, align 8
  %132 = sub nsw i64 %127, %131
  store i64 %132, i64* %126, align 8
  br label %133

133:                                              ; preds = %120, %129, %111
  %134 = getelementptr inbounds %struct.oggvorbis_private, %struct.oggvorbis_private* %13, i64 0, i32 3
  store i64 -9223372036854775808, i64* %134, align 8
  %135 = load %struct.AVVorbisParseContext*, %struct.AVVorbisParseContext** %15, align 8
  call void @av_vorbis_parse_reset(%struct.AVVorbisParseContext* %135) #7
  br label %136

136:                                              ; preds = %133, %18, %21, %26
  %137 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 4
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %162, label %140

140:                                              ; preds = %136
  %141 = load %struct.AVVorbisParseContext*, %struct.AVVorbisParseContext** %15, align 8
  %142 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %10, i64 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 3
  %145 = load i32, i32* %144, align 8
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* %143, i64 %146
  %148 = call i32 @av_vorbis_parse_frame_flags(%struct.AVVorbisParseContext* %141, i8* %147, i32 1, i32* nonnull %3) #7
  %149 = icmp slt i32 %148, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %140
  %151 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 5
  %152 = load i32, i32* %151, align 8
  %153 = or i32 %152, 2
  store i32 %153, i32* %151, align 8
  br label %198

154:                                              ; preds = %140
  %155 = load i32, i32* %3, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  %159 = call fastcc i32 @vorbis_update_metadata(%struct.AVFormatContext* %0, i32 %1)
  store i32 0, i32* %3, align 4
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 6
  store i32 %148, i32* %161, align 4
  br label %162

162:                                              ; preds = %136, %160
  %163 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 14
  %164 = load i32, i32* %163, align 8
  %165 = and i32 %164, 4
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %198, label %167

167:                                              ; preds = %162
  %168 = load i64, i64* %19, align 8
  %169 = icmp eq i64 %168, -9223372036854775808
  br i1 %169, label %173, label %170

170:                                              ; preds = %167
  %171 = getelementptr inbounds %struct.oggvorbis_private, %struct.oggvorbis_private* %13, i64 0, i32 3
  store i64 %168, i64* %171, align 8
  %172 = getelementptr inbounds %struct.oggvorbis_private, %struct.oggvorbis_private* %13, i64 0, i32 4
  store i32 0, i32* %172, align 8
  br label %173

173:                                              ; preds = %167, %170
  %174 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 18
  %175 = load i32, i32* %174, align 8
  %176 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 17
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %175, %177
  br i1 %178, label %182, label %179

179:                                              ; preds = %173
  %180 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 6
  %181 = load i32, i32* %180, align 4
  br label %193

182:                                              ; preds = %173
  %183 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 8
  %184 = load i64, i64* %183, align 8
  %185 = getelementptr inbounds %struct.oggvorbis_private, %struct.oggvorbis_private* %13, i64 0, i32 3
  %186 = load i64, i64* %185, align 8
  %187 = sub i64 %184, %186
  %188 = getelementptr inbounds %struct.oggvorbis_private, %struct.oggvorbis_private* %13, i64 0, i32 4
  %189 = load i32, i32* %188, align 8
  %190 = trunc i64 %187 to i32
  %191 = sub i32 %190, %189
  %192 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %8, i64 %9, i32 6
  store i32 %191, i32* %192, align 4
  br label %193

193:                                              ; preds = %179, %182
  %194 = phi i32 [ %181, %179 ], [ %191, %182 ]
  %195 = getelementptr inbounds %struct.oggvorbis_private, %struct.oggvorbis_private* %13, i64 0, i32 4
  %196 = load i32, i32* %195, align 8
  %197 = add i32 %196, %194
  store i32 %197, i32* %195, align 8
  br label %198

198:                                              ; preds = %193, %162, %42, %2, %150
  %199 = phi i32 [ 0, %150 ], [ -1094995529, %2 ], [ 0, %42 ], [ 0, %162 ], [ 0, %193 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #7
  ret i32 %199
}

; Function Attrs: nounwind ssp uwtable
define internal void @vorbis_cleanup(%struct.AVFormatContext* nocapture readonly, i32) #0 {
  %3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to %struct.ogg**
  %5 = load %struct.ogg*, %struct.ogg** %4, align 8
  %6 = getelementptr inbounds %struct.ogg, %struct.ogg* %5, i64 0, i32 0
  %7 = load %struct.ogg_stream*, %struct.ogg_stream** %6, align 8
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %7, i64 %8, i32 30
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds i8, i8* %10, i64 40
  %14 = bitcast i8* %13 to %struct.AVVorbisParseContext**
  tail call void @av_vorbis_parse_free(%struct.AVVorbisParseContext** %14) #7
  %15 = getelementptr inbounds i8, i8* %10, i64 16
  tail call void @av_freep(i8* %15) #7
  %16 = getelementptr inbounds i8, i8* %10, i64 24
  tail call void @av_freep(i8* %16) #7
  %17 = getelementptr inbounds i8, i8* %10, i64 32
  tail call void @av_freep(i8* %17) #7
  br label %18

18:                                               ; preds = %12, %2
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare i32 @av_strncasecmp(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #5

declare %struct.AVChapter* @avpriv_new_chapter(%struct.AVFormatContext*, i32, i64, i64, i64, i8*) local_unnamed_addr #3

declare void @av_free(i8*) local_unnamed_addr #3

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #3

declare void @avpriv_set_pts_info(%struct.AVStream*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @vorbis_update_metadata(%struct.AVFormatContext*, i32) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to %struct.ogg**
  %5 = load %struct.ogg*, %struct.ogg** %4, align 8
  %6 = getelementptr inbounds %struct.ogg, %struct.ogg* %5, i64 0, i32 0
  %7 = load %struct.ogg_stream*, %struct.ogg_stream** %6, align 8
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %10 = load %struct.AVStream**, %struct.AVStream*** %9, align 8
  %11 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %10, i64 %8
  %12 = load %struct.AVStream*, %struct.AVStream** %11, align 8
  %13 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %7, i64 %8, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = icmp ult i32 %14, 9
  br i1 %15, label %46, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %12, i64 0, i32 11
  tail call void @av_dict_free(%struct.AVDictionary** %17) #7
  %18 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %7, i64 %8, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %7, i64 %8, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %19, i64 %22
  %24 = getelementptr inbounds i8, i8* %23, i64 7
  %25 = load i32, i32* %13, align 4
  %26 = add i32 %25, -8
  %27 = tail call i32 @ff_vorbis_comment(%struct.AVFormatContext* %0, %struct.AVDictionary** %17, i8* %24, i32 %26, i32 1) #7
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %16
  %30 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %12, i64 0, i32 16
  %31 = load i32, i32* %30, align 4
  %32 = or i32 %31, 1
  store i32 %32, i32* %30, align 4
  br label %35

33:                                               ; preds = %16
  %34 = icmp slt i32 %27, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %7, i64 %8, i32 28
  %37 = bitcast i8** %36 to i8*
  tail call void @av_freep(i8* %37) #7
  %38 = load %struct.AVDictionary*, %struct.AVDictionary** %17, align 8
  %39 = icmp eq %struct.AVDictionary* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %7, i64 %8, i32 29
  %42 = tail call i8* @av_packet_pack_dictionary(%struct.AVDictionary* nonnull %38, i32* %41) #7
  store i8* %42, i8** %36, align 8
  br label %46

43:                                               ; preds = %35
  %44 = tail call noalias i8* @av_mallocz(i64 1) #7
  store i8* %44, i8** %36, align 8
  %45 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %7, i64 %8, i32 29
  store i32 0, i32* %45, align 8
  br label %46

46:                                               ; preds = %40, %43, %33, %2
  %47 = phi i32 [ 0, %2 ], [ %27, %33 ], [ %27, %43 ], [ %27, %40 ]
  ret i32 %47
}

declare i32 @ff_replaygain_export(%struct.AVStream*, %struct.AVDictionary*) local_unnamed_addr #3

declare %struct.AVVorbisParseContext* @av_vorbis_parse_init(i8*, i32) local_unnamed_addr #3

declare void @av_dict_free(%struct.AVDictionary**) local_unnamed_addr #3

declare i8* @av_packet_pack_dictionary(%struct.AVDictionary*, i32*) local_unnamed_addr #3

declare i8* @av_realloc(i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @av_xiphlacing(i8*, i32) local_unnamed_addr #3

declare i32 @av_reallocp(i8*, i64) local_unnamed_addr #3

declare void @av_vorbis_parse_reset(%struct.AVVorbisParseContext*) local_unnamed_addr #3

declare i32 @av_vorbis_parse_frame_flags(%struct.AVVorbisParseContext*, i8*, i32, i32*) local_unnamed_addr #3

declare void @av_vorbis_parse_free(%struct.AVVorbisParseContext**) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
