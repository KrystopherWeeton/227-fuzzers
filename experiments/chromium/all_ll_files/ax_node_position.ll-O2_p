; ModuleID = '../../ui/accessibility/ax_node_position.cc'
source_filename = "../../ui/accessibility/ax_node_position.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::testing::ScopedAXEmbeddedObjectBehaviorSetter" = type { i32 }
%"class.ui::AXNodePosition" = type { %"class.ui::AXPosition" }
%"class.ui::AXPosition" = type { i32 (...)**, i32, %"class.ui::AXTreeID", i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.2 }
%union.anon.2 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.ui::AXNode" = type { i32 (...)**, %"class.ui::AXNode::OwnerTree"*, i64, i64, i64, %"class.ui::AXNode"*, %"class.std::__1::vector", %"struct.ui::AXNodeData", %"struct.ui::AXHypertext", %"struct.ui::AXHypertext", %"class.std::__1::unique_ptr.86" }
%"class.ui::AXNode::OwnerTree" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.ui::AXNode"**, %"class.ui::AXNode"**, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.ui::AXNode"** }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.10", %"class.std::__1::vector.17", %"class.std::__1::vector.25", %"class.std::__1::vector.33", %"class.std::__1::vector.41", %"class.std::__1::vector.49", %"class.std::__1::vector.57", %"class.std::__1::vector.65", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.12" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"*, %"class.std::__1::__compressed_pair.20" }
%"struct.std::__1::pair.19" = type opaque
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::pair.19"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair.27"*, %"struct.std::__1::pair.27"*, %"class.std::__1::__compressed_pair.28" }
%"struct.std::__1::pair.27" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::pair.27"* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"*, %"class.std::__1::__compressed_pair.36" }
%"struct.std::__1::pair.35" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::pair.35"* }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.std::__1::pair.43"*, %"struct.std::__1::pair.43"*, %"class.std::__1::__compressed_pair.44" }
%"struct.std::__1::pair.43" = type opaque
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::pair.43"* }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"struct.std::__1::pair.51"*, %"struct.std::__1::pair.51"*, %"class.std::__1::__compressed_pair.52" }
%"struct.std::__1::pair.51" = type opaque
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::pair.51"* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"struct.std::__1::pair.59"*, %"struct.std::__1::pair.59"*, %"class.std::__1::__compressed_pair.60" }
%"struct.std::__1::pair.59" = type opaque
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.std::__1::pair.59"* }
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { i32*, i32*, %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.72" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"struct.ui::AXHypertext" = type { i8, %"class.std::__1::map", %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { i64 }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.ui::AXLanguageInfo"* }
%"struct.ui::AXLanguageInfo" = type opaque
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.ui::AXTreeManagerMap" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.92", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.107", [4 x i8] }>
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94", %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { float }
%"class.ui::AXTreeManager" = type { i32 (...)** }
%"class.std::__1::basic_string.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.114 }
%union.anon.114 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.115 }
%struct.anon.115 = type { i8 }

$_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE18CreateNullPositionEv = comdat any

$_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE18CreateTextPositionENS_8AXTreeIDEiiN2ax5mojom12TextAffinityE = comdat any

$_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE18CreateTreePositionENS_8AXTreeIDEii = comdat any

$_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEED2Ev = comdat any

$_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEED0Ev = comdat any

$_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE7IsValidEv = comdat any

$_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv = comdat any

$_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE13MaxTextOffsetEv = comdat any

$_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE32IsEmptyObjectReplacedByCharacterEv = comdat any

$_ZTVN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEEE = comdat any

@_ZN2ui29g_ax_embedded_object_behaviorE = hidden local_unnamed_addr global i32 0, align 4
@_ZTVN2ui14AXNodePositionE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::AXNodePosition"*)* @_ZN2ui14AXNodePositionD2Ev to i8*), i8* bitcast (void (%"class.ui::AXNodePosition"*)* @_ZN2ui14AXNodePositionD0Ev to i8*), i8* bitcast (%"class.ui::AXPosition"* (%"class.ui::AXNodePosition"*)* @_ZNK2ui14AXNodePosition5CloneEv to i8*)] }, align 8
@_ZTVN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::AXPosition"*)* @_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEED2Ev to i8*), i8* bitcast (void (%"class.ui::AXPosition"*)* @_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEED0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

@_ZN2ui7testing36ScopedAXEmbeddedObjectBehaviorSetterC1ENS_24AXEmbeddedObjectBehaviorE = hidden unnamed_addr alias void (%"class.ui::testing::ScopedAXEmbeddedObjectBehaviorSetter"*, i32), void (%"class.ui::testing::ScopedAXEmbeddedObjectBehaviorSetter"*, i32)* @_ZN2ui7testing36ScopedAXEmbeddedObjectBehaviorSetterC2ENS_24AXEmbeddedObjectBehaviorE
@_ZN2ui7testing36ScopedAXEmbeddedObjectBehaviorSetterD1Ev = hidden unnamed_addr alias void (%"class.ui::testing::ScopedAXEmbeddedObjectBehaviorSetter"*), void (%"class.ui::testing::ScopedAXEmbeddedObjectBehaviorSetter"*)* @_ZN2ui7testing36ScopedAXEmbeddedObjectBehaviorSetterD2Ev
@_ZN2ui14AXNodePositionC1Ev = hidden unnamed_addr alias void (%"class.ui::AXNodePosition"*), void (%"class.ui::AXNodePosition"*)* @_ZN2ui14AXNodePositionC2Ev
@_ZN2ui14AXNodePositionD1Ev = hidden unnamed_addr alias void (%"class.ui::AXNodePosition"*), void (%"class.ui::AXNodePosition"*)* @_ZN2ui14AXNodePositionD2Ev
@_ZN2ui14AXNodePositionC1ERKS0_ = hidden unnamed_addr alias void (%"class.ui::AXNodePosition"*, %"class.ui::AXNodePosition"*), void (%"class.ui::AXNodePosition"*, %"class.ui::AXNodePosition"*)* @_ZN2ui14AXNodePositionC2ERKS0_

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui7testing36ScopedAXEmbeddedObjectBehaviorSetterC2ENS_24AXEmbeddedObjectBehaviorE(%"class.ui::testing::ScopedAXEmbeddedObjectBehaviorSetter"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = load i32, i32* @_ZN2ui29g_ax_embedded_object_behaviorE, align 4
  %4 = getelementptr inbounds %"class.ui::testing::ScopedAXEmbeddedObjectBehaviorSetter", %"class.ui::testing::ScopedAXEmbeddedObjectBehaviorSetter"* %0, i64 0, i32 0
  store i32 %3, i32* %4, align 4
  store i32 %1, i32* @_ZN2ui29g_ax_embedded_object_behaviorE, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui7testing36ScopedAXEmbeddedObjectBehaviorSetterD2Ev(%"class.ui::testing::ScopedAXEmbeddedObjectBehaviorSetter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::testing::ScopedAXEmbeddedObjectBehaviorSetter", %"class.ui::testing::ScopedAXEmbeddedObjectBehaviorSetter"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  store i32 %3, i32* @_ZN2ui29g_ax_embedded_object_behaviorE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXPosition"* @_ZN2ui14AXNodePosition14CreatePositionERKNS_6AXNodeEiN2ax5mojom12TextAffinityE(%"class.ui::AXNode"* dereferenceable(456), i32, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.ui::AXTreeID", align 8
  %5 = alloca %"class.ui::AXTreeID", align 8
  %6 = alloca %"class.ui::AXTreeID", align 8
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %8 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %7, align 8
  %9 = icmp eq %"class.ui::AXNode::OwnerTree"* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = tail call %"class.ui::AXPosition"* @_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE18CreateNullPositionEv()
  br label %28

12:                                               ; preds = %3
  %13 = bitcast %"class.ui::AXTreeID"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = bitcast %"class.ui::AXNode::OwnerTree"* %8 to void (%"class.ui::AXTreeID"*, %"class.ui::AXNode::OwnerTree"*)***
  %15 = load void (%"class.ui::AXTreeID"*, %"class.ui::AXNode::OwnerTree"*)**, void (%"class.ui::AXTreeID"*, %"class.ui::AXNode::OwnerTree"*)*** %14, align 8
  %16 = load void (%"class.ui::AXTreeID"*, %"class.ui::AXNode::OwnerTree"*)*, void (%"class.ui::AXTreeID"*, %"class.ui::AXNode::OwnerTree"*)** %15, align 8
  call void %16(%"class.ui::AXTreeID"* nonnull sret %4, %"class.ui::AXNode::OwnerTree"* nonnull %8) #7
  %17 = call zeroext i1 @_ZNK2ui6AXNode6IsLeafEv(%"class.ui::AXNode"* %0) #7
  br i1 %17, label %18, label %22

18:                                               ; preds = %12
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %5, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %4) #7
  %19 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = call %"class.ui::AXPosition"* @_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE18CreateTextPositionENS_8AXTreeIDEiiN2ax5mojom12TextAffinityE(%"class.ui::AXTreeID"* nonnull %5, i32 %20, i32 %1, i32 %2)
  br label %26

22:                                               ; preds = %12
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %6, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %4) #7
  %23 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = call %"class.ui::AXPosition"* @_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE18CreateTreePositionENS_8AXTreeIDEii(%"class.ui::AXTreeID"* nonnull %6, i32 %24, i32 %1)
  br label %26

26:                                               ; preds = %22, %18
  %27 = phi %"class.ui::AXPosition"* [ %21, %18 ], [ %25, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #7
  br label %28

28:                                               ; preds = %26, %10
  %29 = phi %"class.ui::AXPosition"* [ %27, %26 ], [ %11, %10 ]
  ret %"class.ui::AXPosition"* %29
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.ui::AXPosition"* @_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE18CreateNullPositionEv() local_unnamed_addr #1 comdat align 2 {
  %1 = alloca %"class.ui::AXTreeID", align 8
  %2 = tail call i8* @_Znwm(i64 88) #8
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 16
  %7 = bitcast i8* %6 to %"class.ui::AXTreeID"*
  %8 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() #7
  tail call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* %7, %"class.ui::AXTreeID"* dereferenceable(32) %8) #7
  %9 = getelementptr inbounds i8, i8* %2, i64 48
  %10 = bitcast i8* %9 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -2, i32 -1, i32 1>, <4 x i32>* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui14AXNodePositionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %12 = bitcast i8* %2 to %"class.ui::AXPosition"*
  %13 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() #7
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %1, %"class.ui::AXTreeID"* dereferenceable(32) %13) #7
  store i32 0, i32* %5, align 8
  %14 = call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %7, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %1) #7
  %15 = bitcast i8* %9 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -2, i32 -1, i32 1>, <4 x i32>* %15, align 8
  %16 = call zeroext i1 @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE7IsValidEv(%"class.ui::AXPosition"* nonnull %12) #7
  br i1 %16, label %21, label %17

17:                                               ; preds = %0
  store i32 0, i32* %5, align 8
  %18 = call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() #7
  %19 = call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %7, %"class.ui::AXTreeID"* dereferenceable(32) %18) #7
  %20 = bitcast i8* %9 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -2, i32 -1, i32 1>, <4 x i32>* %20, align 8
  br label %21

21:                                               ; preds = %0, %17
  ret %"class.ui::AXPosition"* %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK2ui6AXNode6IsLeafEv(%"class.ui::AXNode"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.ui::AXPosition"* @_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE18CreateTextPositionENS_8AXTreeIDEiiN2ax5mojom12TextAffinityE(%"class.ui::AXTreeID"*, i32, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.ui::AXTreeID", align 8
  %6 = tail call i8* @_Znwm(i64 88) #8
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  %11 = bitcast i8* %10 to %"class.ui::AXTreeID"*
  %12 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() #7
  tail call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* %11, %"class.ui::AXTreeID"* dereferenceable(32) %12) #7
  %13 = getelementptr inbounds i8, i8* %6, i64 48
  %14 = bitcast i8* %13 to i32*
  %15 = getelementptr inbounds i8, i8* %6, i64 52
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %6, i64 56
  %18 = bitcast i8* %17 to i32*
  %19 = getelementptr inbounds i8, i8* %6, i64 60
  %20 = bitcast i8* %19 to i32*
  %21 = bitcast i8* %13 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -2, i32 -1, i32 1>, <4 x i32>* %21, align 8
  %22 = getelementptr inbounds i8, i8* %6, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui14AXNodePositionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %23 = bitcast i8* %6 to %"class.ui::AXPosition"*
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %5, %"class.ui::AXTreeID"* dereferenceable(32) %0) #7
  store i32 2, i32* %9, align 8
  %24 = call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %11, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %5) #7
  store i32 %1, i32* %14, align 8
  store i32 -2, i32* %16, align 4
  store i32 %2, i32* %18, align 8
  store i32 %3, i32* %20, align 4
  %25 = call zeroext i1 @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE7IsValidEv(%"class.ui::AXPosition"* nonnull %23) #7
  br i1 %25, label %30, label %26

26:                                               ; preds = %4
  store i32 0, i32* %9, align 8
  %27 = call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() #7
  %28 = call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %11, %"class.ui::AXTreeID"* dereferenceable(32) %27) #7
  %29 = bitcast i8* %13 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -2, i32 -1, i32 1>, <4 x i32>* %29, align 8
  br label %30

30:                                               ; preds = %4, %26
  ret %"class.ui::AXPosition"* %23
}

declare void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"*, %"class.ui::AXTreeID"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.ui::AXPosition"* @_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE18CreateTreePositionENS_8AXTreeIDEii(%"class.ui::AXTreeID"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.ui::AXTreeID", align 8
  %5 = tail call i8* @_Znwm(i64 88) #8
  %6 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 16
  %10 = bitcast i8* %9 to %"class.ui::AXTreeID"*
  %11 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() #7
  tail call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* %10, %"class.ui::AXTreeID"* dereferenceable(32) %11) #7
  %12 = getelementptr inbounds i8, i8* %5, i64 48
  %13 = bitcast i8* %12 to i32*
  %14 = getelementptr inbounds i8, i8* %5, i64 52
  %15 = bitcast i8* %14 to i32*
  %16 = getelementptr inbounds i8, i8* %5, i64 56
  %17 = bitcast i8* %16 to i32*
  %18 = getelementptr inbounds i8, i8* %5, i64 60
  %19 = bitcast i8* %18 to i32*
  %20 = bitcast i8* %12 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -2, i32 -1, i32 1>, <4 x i32>* %20, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui14AXNodePositionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %22 = bitcast i8* %5 to %"class.ui::AXPosition"*
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %4, %"class.ui::AXTreeID"* dereferenceable(32) %0) #7
  store i32 1, i32* %8, align 8
  %23 = call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %10, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %4) #7
  store i32 %1, i32* %13, align 8
  store i32 %2, i32* %15, align 4
  store i32 -1, i32* %17, align 8
  store i32 1, i32* %19, align 4
  %24 = call zeroext i1 @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE7IsValidEv(%"class.ui::AXPosition"* nonnull %22) #7
  br i1 %24, label %29, label %25

25:                                               ; preds = %3
  store i32 0, i32* %8, align 8
  %26 = call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() #7
  %27 = call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %10, %"class.ui::AXTreeID"* dereferenceable(32) %26) #7
  %28 = bitcast i8* %12 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -2, i32 -1, i32 1>, <4 x i32>* %28, align 8
  br label %29

29:                                               ; preds = %3, %25
  ret %"class.ui::AXPosition"* %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXNodePositionC2Ev(%"class.ui::AXNodePosition"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 2
  %5 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() #7
  tail call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* %4, %"class.ui::AXTreeID"* dereferenceable(32) %5) #7
  %6 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 3
  %7 = bitcast i32* %6 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -2, i32 -1, i32 1>, <4 x i32>* %7, align 8
  %8 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 7
  %9 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui14AXNodePositionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXNodePositionD2Ev(%"class.ui::AXNodePosition"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 7
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXNodePositionD0Ev(%"class.ui::AXNodePosition"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 7
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.ui::AXNodePosition"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXNodePositionC2ERKS0_(%"class.ui::AXNodePosition"*, %"class.ui::AXNodePosition"* dereferenceable(88)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %1, i64 0, i32 0, i32 2
  tail call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* %7, %"class.ui::AXTreeID"* dereferenceable(32) %8) #7
  %9 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %1, i64 0, i32 0, i32 3
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 4
  %13 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %1, i64 0, i32 0, i32 4
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 5
  %16 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %1, i64 0, i32 0, i32 5
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 6
  %19 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %1, i64 0, i32 0, i32 6
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 7
  %22 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui14AXNodePositionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXPosition"* @_ZNK2ui14AXNodePosition5CloneEv(%"class.ui::AXNodePosition"*) unnamed_addr #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 88) #8
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  %6 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 16
  %9 = bitcast i8* %8 to %"class.ui::AXTreeID"*
  %10 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* %9, %"class.ui::AXTreeID"* dereferenceable(32) %10) #7
  %11 = getelementptr inbounds i8, i8* %2, i64 48
  %12 = getelementptr inbounds %"class.ui::AXNodePosition", %"class.ui::AXNodePosition"* %0, i64 0, i32 0, i32 3
  %13 = bitcast i32* %12 to <4 x i32>*
  %14 = load <4 x i32>, <4 x i32>* %13, align 8
  %15 = bitcast i8* %11 to <4 x i32>*
  store <4 x i32> %14, <4 x i32>* %15, align 8
  %16 = getelementptr inbounds i8, i8* %2, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui14AXNodePositionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %17 = bitcast i8* %2 to %"class.ui::AXPosition"*
  ret %"class.ui::AXPosition"* %17
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEED2Ev(%"class.ui::AXPosition"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 7
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEED0Ev(%"class.ui::AXPosition"*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() local_unnamed_addr #3

declare dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"*, %"class.ui::AXTreeID"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE7IsValidEv(%"class.ui::AXPosition"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %55 [
    i32 0, label %4
    i32 1, label %24
    i32 2, label %43
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 2
  %6 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() #7
  %7 = tail call zeroext i1 @_ZNK2ui8AXTreeIDeqERKS0_(%"class.ui::AXTreeID"* %5, %"class.ui::AXTreeID"* dereferenceable(32) %6) #7
  br i1 %7, label %8, label %56

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %56

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -2
  br i1 %15, label %16, label %56

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %20, label %56

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 6
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br label %56

24:                                               ; preds = %1
  %25 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0)
  %26 = icmp eq %"class.ui::AXNode"* %25, null
  br i1 %26, label %56, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 4
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %56, label %31

31:                                               ; preds = %27
  %32 = icmp sgt i32 %29, -1
  br i1 %32, label %33, label %56

33:                                               ; preds = %31
  %34 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %35 = icmp eq %"class.ui::AXNode"* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %33
  %37 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %38 = tail call i64 @_ZNK2ui6AXNode33GetChildCountCrossingTreeBoundaryEv(%"class.ui::AXNode"* %37) #7
  %39 = trunc i64 %38 to i32
  br label %40

40:                                               ; preds = %33, %36
  %41 = phi i32 [ %39, %36 ], [ 0, %33 ]
  %42 = icmp sle i32 %29, %41
  br label %56

43:                                               ; preds = %1
  %44 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0)
  %45 = icmp eq %"class.ui::AXNode"* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 5
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %46
  %51 = icmp sgt i32 %48, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %50
  %53 = tail call i32 @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE13MaxTextOffsetEv(%"class.ui::AXPosition"* %0)
  %54 = icmp sle i32 %48, %53
  br label %56

55:                                               ; preds = %1
  unreachable

56:                                               ; preds = %46, %52, %50, %43, %31, %40, %27, %24, %4, %8, %12, %16, %20
  %57 = phi i1 [ false, %16 ], [ false, %12 ], [ false, %8 ], [ false, %4 ], [ %23, %20 ], [ false, %24 ], [ true, %27 ], [ false, %31 ], [ %42, %40 ], [ false, %43 ], [ true, %46 ], [ false, %50 ], [ %54, %52 ]
  ret i1 %57
}

declare zeroext i1 @_ZNK2ui8AXTreeIDeqERKS0_(%"class.ui::AXTreeID"*, %"class.ui::AXTreeID"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.ui::AXTreeID", align 8
  %3 = alloca %"class.ui::AXTreeID", align 8
  %4 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 2
  %5 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() #7
  %6 = tail call zeroext i1 @_ZNK2ui8AXTreeIDeqERKS0_(%"class.ui::AXTreeID"* %4, %"class.ui::AXTreeID"* dereferenceable(32) %5) #7
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %7
  %12 = tail call dereferenceable(40) %"class.ui::AXTreeManagerMap"* @_ZN2ui16AXTreeManagerMap11GetInstanceEv() #7
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %2, %"class.ui::AXTreeID"* dereferenceable(32) %4) #7
  %13 = call %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap10GetManagerENS_8AXTreeIDE(%"class.ui::AXTreeManagerMap"* %12, %"class.ui::AXTreeID"* nonnull %2) #7
  %14 = icmp eq %"class.ui::AXTreeManager"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %3, %"class.ui::AXTreeID"* dereferenceable(32) %4) #7
  %16 = load i32, i32* %8, align 8
  %17 = bitcast %"class.ui::AXTreeManager"* %13 to %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*, %"class.ui::AXTreeID"*, i32)***
  %18 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*, %"class.ui::AXTreeID"*, i32)**, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*, %"class.ui::AXTreeID"*, i32)*** %17, align 8
  %19 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*, %"class.ui::AXTreeID"*, i32)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*, %"class.ui::AXTreeID"*, i32)** %18, align 8
  %20 = call %"class.ui::AXNode"* %19(%"class.ui::AXTreeManager"* nonnull %13, %"class.ui::AXTreeID"* nonnull %3, i32 %16) #7
  br label %21

21:                                               ; preds = %15, %11, %1, %7
  %22 = phi %"class.ui::AXNode"* [ null, %7 ], [ null, %1 ], [ %20, %15 ], [ null, %11 ]
  ret %"class.ui::AXNode"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE13MaxTextOffsetEv(%"class.ui::AXPosition"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string.111", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %67, label %8

8:                                                ; preds = %1
  %9 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %10 = icmp eq %"class.ui::AXNode"* %9, null
  br i1 %10, label %67, label %11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE32IsEmptyObjectReplacedByCharacterEv(%"class.ui::AXPosition"* %0)
  br i1 %12, label %67, label %13

13:                                               ; preds = %11
  %14 = load i32, i32* @_ZN2ui29g_ax_embedded_object_behaviorE, align 4
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %50

16:                                               ; preds = %13
  %17 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #7
  %18 = bitcast %"class.std::__1::basic_string.111"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #7
  %19 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0)
  call void @_ZNK2ui6AXNode12GetInnerTextEv(%"class.std::__1::basic_string.111"* nonnull sret %3, %"class.ui::AXNode"* %19) #7
  %20 = bitcast %"class.std::__1::basic_string.111"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string.111", %"class.std::__1::basic_string.111"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* %18
  %27 = getelementptr inbounds %"class.std::__1::basic_string.111", %"class.std::__1::basic_string.111"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %22 to i64
  %30 = select i1 %23, i64 %28, i64 %29
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, i8* %26, i64 %30) #7
  %31 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %16
  %36 = zext i8 %33 to i32
  br label %43

37:                                               ; preds = %16
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #8
  br label %43

43:                                               ; preds = %35, %37
  %44 = phi i32 [ %36, %35 ], [ %40, %37 ]
  %45 = load i8, i8* %21, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %48) #8
  br label %49

49:                                               ; preds = %43, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #7
  br label %67

50:                                               ; preds = %13
  %51 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #7
  %52 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0)
  call void @_ZNK2ui6AXNode12GetHypertextEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.ui::AXNode"* %52) #7
  %53 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %50
  %58 = zext i8 %55 to i32
  br label %65

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = trunc i64 %61 to i32
  %63 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #8
  br label %65

65:                                               ; preds = %57, %59
  %66 = phi i32 [ %58, %57 ], [ %62, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #7
  br label %67

67:                                               ; preds = %1, %11, %8, %65, %49
  %68 = phi i32 [ %44, %49 ], [ %66, %65 ], [ -1, %8 ], [ 1, %11 ], [ -1, %1 ]
  ret i32 %68
}

declare dereferenceable(40) %"class.ui::AXTreeManagerMap"* @_ZN2ui16AXTreeManagerMap11GetInstanceEv() local_unnamed_addr #3

declare %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap10GetManagerENS_8AXTreeIDE(%"class.ui::AXTreeManagerMap"*, %"class.ui::AXTreeID"*) local_unnamed_addr #3

declare i64 @_ZNK2ui6AXNode33GetChildCountCrossingTreeBoundaryEv(%"class.ui::AXNode"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE32IsEmptyObjectReplacedByCharacterEv(%"class.ui::AXPosition"*) local_unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @_ZN2ui29g_ax_embedded_object_behaviorE, align 4
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %94, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %94, label %8

8:                                                ; preds = %4
  %9 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %10 = icmp eq %"class.ui::AXNode"* %9, null
  br i1 %10, label %94, label %11

11:                                               ; preds = %8
  %12 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0)
  %13 = tail call zeroext i1 @_ZNK2ui6AXNode30IsCollapsedMenuListPopUpButtonEv(%"class.ui::AXNode"* %12) #7
  br i1 %13, label %94, label %14

14:                                               ; preds = %11
  %15 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %16 = icmp eq %"class.ui::AXNode"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %14
  %18 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %19 = tail call i64 @_ZNK2ui6AXNode42GetUnignoredChildCountCrossingTreeBoundaryEv(%"class.ui::AXNode"* %18) #7
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0)
  %24 = tail call zeroext i1 @_ZNK2ui6AXNode11IsEmptyLeafEv(%"class.ui::AXNode"* %23) #7
  br i1 %24, label %25, label %94

25:                                               ; preds = %14, %17, %22
  %26 = load i32, i32* %5, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %55, label %28

28:                                               ; preds = %25
  %29 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %30 = icmp eq %"class.ui::AXNode"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %33 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %32, i64 0, i32 7, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 81
  br i1 %35, label %47, label %36

36:                                               ; preds = %28, %31
  %37 = load i32, i32* %5, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %55, label %39

39:                                               ; preds = %36
  %40 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %41 = icmp eq %"class.ui::AXNode"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %44 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %43, i64 0, i32 7, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 137
  br i1 %46, label %47, label %55

47:                                               ; preds = %42, %31
  %48 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %49 = icmp eq %"class.ui::AXNode"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %52 = tail call i64 @_ZNK2ui6AXNode33GetChildCountCrossingTreeBoundaryEv(%"class.ui::AXNode"* %51) #7
  %53 = trunc i64 %52 to i32
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %94, label %55

55:                                               ; preds = %25, %47, %36, %39, %50, %42
  %56 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0)
  %57 = tail call zeroext i1 @_ZNK2ui6AXNode9IsIgnoredEv(%"class.ui::AXNode"* %56) #7
  br i1 %57, label %94, label %58

58:                                               ; preds = %55
  %59 = load i32, i32* %5, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %58
  %62 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %63 = icmp eq %"class.ui::AXNode"* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %61
  %65 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %66 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %65, i64 0, i32 7, i32 2
  %67 = load i32, i32* %66, align 4
  br label %68

68:                                               ; preds = %58, %61, %64
  %69 = phi i32 [ %67, %64 ], [ 182, %61 ], [ 182, %58 ]
  %70 = tail call zeroext i1 @_ZN2ui18IsPlatformDocumentEN2ax5mojom4RoleE(i32 %69) #7
  br i1 %70, label %94, label %71

71:                                               ; preds = %68
  %72 = load i32, i32* %5, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %90, label %74

74:                                               ; preds = %71
  %75 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %76 = icmp eq %"class.ui::AXNode"* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %74
  %78 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %79 = tail call zeroext i1 @_ZNK2ui6AXNode6IsTextEv(%"class.ui::AXNode"* %78) #7
  br i1 %79, label %94, label %80

80:                                               ; preds = %74, %77
  %81 = load i32, i32* %5, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %90, label %83

83:                                               ; preds = %80
  %84 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %85 = icmp eq %"class.ui::AXNode"* %84, null
  br i1 %85, label %90, label %86

86:                                               ; preds = %83
  %87 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #7
  %88 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %87, i64 0, i32 7, i32 2
  %89 = load i32, i32* %88, align 4
  br label %90

90:                                               ; preds = %71, %80, %83, %86
  %91 = phi i32 [ %89, %86 ], [ 182, %83 ], [ 182, %80 ], [ 182, %71 ]
  %92 = tail call zeroext i1 @_ZN2ui8IsIframeEN2ax5mojom4RoleE(i32 %91) #7
  %93 = xor i1 %92, true
  br label %94

94:                                               ; preds = %4, %55, %68, %77, %90, %50, %22, %11, %1, %8
  %95 = phi i1 [ false, %8 ], [ false, %1 ], [ true, %11 ], [ false, %22 ], [ false, %50 ], [ false, %77 ], [ false, %68 ], [ false, %55 ], [ %93, %90 ], [ false, %4 ]
  ret i1 %95
}

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #3

declare void @_ZNK2ui6AXNode12GetInnerTextEv(%"class.std::__1::basic_string.111"* sret, %"class.ui::AXNode"*) local_unnamed_addr #3

declare void @_ZNK2ui6AXNode12GetHypertextEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXNode"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2ui6AXNode30IsCollapsedMenuListPopUpButtonEv(%"class.ui::AXNode"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2ui6AXNode11IsEmptyLeafEv(%"class.ui::AXNode"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2ui6AXNode9IsIgnoredEv(%"class.ui::AXNode"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2ui18IsPlatformDocumentEN2ax5mojom4RoleE(i32) local_unnamed_addr #3

declare zeroext i1 @_ZN2ui8IsIframeEN2ax5mojom4RoleE(i32) local_unnamed_addr #3

declare i64 @_ZNK2ui6AXNode42GetUnignoredChildCountCrossingTreeBoundaryEv(%"class.ui::AXNode"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2ui6AXNode6IsTextEv(%"class.ui::AXNode"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
