; ModuleID = '../../services/network/trust_tokens/expiry_inspecting_record_expiry_delegate.cc'
source_filename = "../../services/network/trust_tokens/expiry_inspecting_record_expiry_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::ExpiryInspectingRecordExpiryDelegate" = type { %"class.network::TrustTokenStore::RecordExpiryDelegate", %"class.network::SynchronousTrustTokenKeyCommitmentGetter"* }
%"class.network::TrustTokenStore::RecordExpiryDelegate" = type { i32 (...)** }
%"class.network::SynchronousTrustTokenKeyCommitmentGetter" = type { i32 (...)** }
%"class.network::TrustTokenRedemptionRecord" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr" }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.network::SuitableTrustTokenOrigin" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.2 }
%union.anon.2 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.network::mojom::TrustTokenKeyCommitmentResult"* }
%"class.network::mojom::TrustTokenKeyCommitmentResult" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector.15", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::StructPtr.5"*, %"class.mojo::StructPtr.5"*, %"class.std::__1::__compressed_pair.10" }
%"class.mojo::StructPtr.5" = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.network::mojom::TrustTokenVerificationKey"* }
%"class.network::mojom::TrustTokenVerificationKey" = type { %"class.std::__1::basic_string", %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.mojo::StructPtr.5"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { i32*, i32*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i32* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN7network36ExpiryInspectingRecordExpiryDelegateD0Ev = comdat any

$_ZN7network15TrustTokenStore20RecordExpiryDelegateD2Ev = comdat any

@_ZTVN7network36ExpiryInspectingRecordExpiryDelegateE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::TrustTokenStore::RecordExpiryDelegate"*)* @_ZN7network15TrustTokenStore20RecordExpiryDelegateD2Ev to i8*), i8* bitcast (void (%"class.network::ExpiryInspectingRecordExpiryDelegate"*)* @_ZN7network36ExpiryInspectingRecordExpiryDelegateD0Ev to i8*), i8* bitcast (i1 (%"class.network::ExpiryInspectingRecordExpiryDelegate"*, %"class.network::TrustTokenRedemptionRecord"*, %"class.network::SuitableTrustTokenOrigin"*)* @_ZN7network36ExpiryInspectingRecordExpiryDelegate15IsRecordExpiredERKNS_26TrustTokenRedemptionRecordERKNS_24SuitableTrustTokenOriginE to i8*)] }, align 8

@_ZN7network36ExpiryInspectingRecordExpiryDelegateC1EPKNS_40SynchronousTrustTokenKeyCommitmentGetterE = hidden unnamed_addr alias void (%"class.network::ExpiryInspectingRecordExpiryDelegate"*, %"class.network::SynchronousTrustTokenKeyCommitmentGetter"*), void (%"class.network::ExpiryInspectingRecordExpiryDelegate"*, %"class.network::SynchronousTrustTokenKeyCommitmentGetter"*)* @_ZN7network36ExpiryInspectingRecordExpiryDelegateC2EPKNS_40SynchronousTrustTokenKeyCommitmentGetterE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network36ExpiryInspectingRecordExpiryDelegateC2EPKNS_40SynchronousTrustTokenKeyCommitmentGetterE(%"class.network::ExpiryInspectingRecordExpiryDelegate"* nocapture, %"class.network::SynchronousTrustTokenKeyCommitmentGetter"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.network::ExpiryInspectingRecordExpiryDelegate", %"class.network::ExpiryInspectingRecordExpiryDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7network36ExpiryInspectingRecordExpiryDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.network::ExpiryInspectingRecordExpiryDelegate", %"class.network::ExpiryInspectingRecordExpiryDelegate"* %0, i64 0, i32 1
  store %"class.network::SynchronousTrustTokenKeyCommitmentGetter"* %1, %"class.network::SynchronousTrustTokenKeyCommitmentGetter"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7network36ExpiryInspectingRecordExpiryDelegate15IsRecordExpiredERKNS_26TrustTokenRedemptionRecordERKNS_24SuitableTrustTokenOriginE(%"class.network::ExpiryInspectingRecordExpiryDelegate"* nocapture readonly, %"class.network::TrustTokenRedemptionRecord"* nocapture readonly dereferenceable(56), %"class.network::SuitableTrustTokenOrigin"* dereferenceable(80)) unnamed_addr #1 align 2 {
  %4 = alloca %"class.mojo::StructPtr", align 8
  %5 = bitcast %"class.mojo::StructPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TrustTokenKeyCommitmentResult"* inttoptr (i64 -6148914691236517206 to %"class.network::mojom::TrustTokenKeyCommitmentResult"*), %"class.network::mojom::TrustTokenKeyCommitmentResult"** %6, align 8
  %7 = getelementptr inbounds %"class.network::ExpiryInspectingRecordExpiryDelegate", %"class.network::ExpiryInspectingRecordExpiryDelegate"* %0, i64 0, i32 1
  %8 = load %"class.network::SynchronousTrustTokenKeyCommitmentGetter"*, %"class.network::SynchronousTrustTokenKeyCommitmentGetter"** %7, align 8
  %9 = getelementptr inbounds %"class.network::SuitableTrustTokenOrigin", %"class.network::SuitableTrustTokenOrigin"* %2, i64 0, i32 0
  %10 = bitcast %"class.network::SynchronousTrustTokenKeyCommitmentGetter"* %8 to void (%"class.mojo::StructPtr"*, %"class.network::SynchronousTrustTokenKeyCommitmentGetter"*, %"class.url::Origin"*)***
  %11 = load void (%"class.mojo::StructPtr"*, %"class.network::SynchronousTrustTokenKeyCommitmentGetter"*, %"class.url::Origin"*)**, void (%"class.mojo::StructPtr"*, %"class.network::SynchronousTrustTokenKeyCommitmentGetter"*, %"class.url::Origin"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.mojo::StructPtr"*, %"class.network::SynchronousTrustTokenKeyCommitmentGetter"*, %"class.url::Origin"*)*, void (%"class.mojo::StructPtr"*, %"class.network::SynchronousTrustTokenKeyCommitmentGetter"*, %"class.url::Origin"*)** %11, i64 2
  %13 = load void (%"class.mojo::StructPtr"*, %"class.network::SynchronousTrustTokenKeyCommitmentGetter"*, %"class.url::Origin"*)*, void (%"class.mojo::StructPtr"*, %"class.network::SynchronousTrustTokenKeyCommitmentGetter"*, %"class.url::Origin"*)** %12, align 8
  call void %13(%"class.mojo::StructPtr"* nonnull sret %4, %"class.network::SynchronousTrustTokenKeyCommitmentGetter"* %8, %"class.url::Origin"* dereferenceable(80) %9) #7
  %14 = load %"class.network::mojom::TrustTokenKeyCommitmentResult"*, %"class.network::mojom::TrustTokenKeyCommitmentResult"** %6, align 8
  %15 = icmp eq %"class.network::mojom::TrustTokenKeyCommitmentResult"* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  store %"class.network::mojom::TrustTokenKeyCommitmentResult"* null, %"class.network::mojom::TrustTokenKeyCommitmentResult"** %6, align 8
  br label %85

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.network::mojom::TrustTokenKeyCommitmentResult", %"class.network::mojom::TrustTokenKeyCommitmentResult"* %14, i64 0, i32 4, i32 0, i32 0
  %19 = load %"class.mojo::StructPtr.5"*, %"class.mojo::StructPtr.5"** %18, align 8
  %20 = getelementptr inbounds %"class.network::mojom::TrustTokenKeyCommitmentResult", %"class.network::mojom::TrustTokenKeyCommitmentResult"* %14, i64 0, i32 4, i32 0, i32 1
  %21 = load %"class.mojo::StructPtr.5"*, %"class.mojo::StructPtr.5"** %20, align 8
  %22 = icmp eq %"class.mojo::StructPtr.5"* %19, %21
  br i1 %22, label %82, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.network::TrustTokenRedemptionRecord", %"class.network::TrustTokenRedemptionRecord"* %1, i64 0, i32 6, i32 0
  %25 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %36 = icmp eq i64 %33, 0
  br label %37

37:                                               ; preds = %79, %23
  %38 = phi %"class.mojo::StructPtr.5"* [ %19, %23 ], [ %80, %79 ]
  %39 = getelementptr inbounds %"class.mojo::StructPtr.5", %"class.mojo::StructPtr.5"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.network::mojom::TrustTokenVerificationKey"*, %"class.network::mojom::TrustTokenVerificationKey"** %39, align 8
  %41 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i64 %46, i64 %47
  %49 = icmp eq i64 %48, %33
  br i1 %49, label %50, label %79

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.network::mojom::TrustTokenVerificationKey", %"class.network::mojom::TrustTokenVerificationKey"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.network::mojom::TrustTokenVerificationKey"* %40 to i8*
  %54 = select i1 %44, i8* %52, i8* %53
  %55 = load i8*, i8** %34, align 8
  %56 = select i1 %29, i8* %55, i8* %35
  br i1 %44, label %63, label %57

57:                                               ; preds = %50
  br i1 %36, label %82, label %58

58:                                               ; preds = %57
  %59 = ptrtoint i8* %52 to i64
  %60 = trunc i64 %59 to i8
  %61 = load i8, i8* %56, align 1
  %62 = icmp eq i8 %61, %60
  br i1 %62, label %64, label %79

63:                                               ; preds = %50
  br i1 %36, label %82, label %76

64:                                               ; preds = %58, %71
  %65 = phi i64 [ %68, %71 ], [ %47, %58 ]
  %66 = phi i8* [ %69, %71 ], [ %53, %58 ]
  %67 = phi i8* [ %72, %71 ], [ %56, %58 ]
  %68 = add i64 %65, -1
  %69 = getelementptr inbounds i8, i8* %66, i64 1
  %70 = icmp eq i64 %68, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds i8, i8* %67, i64 1
  %73 = load i8, i8* %69, align 1
  %74 = load i8, i8* %72, align 1
  %75 = icmp eq i8 %73, %74
  br i1 %75, label %64, label %79

76:                                               ; preds = %63
  %77 = call i32 @bcmp(i8* %54, i8* %56, i64 %33) #7
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %71, %76, %58, %37
  %80 = getelementptr inbounds %"class.mojo::StructPtr.5", %"class.mojo::StructPtr.5"* %38, i64 1
  %81 = icmp eq %"class.mojo::StructPtr.5"* %80, %21
  br i1 %81, label %82, label %37

82:                                               ; preds = %57, %63, %76, %79, %64, %17
  %83 = phi i1 [ true, %17 ], [ false, %64 ], [ false, %57 ], [ false, %63 ], [ false, %76 ], [ true, %79 ]
  store %"class.network::mojom::TrustTokenKeyCommitmentResult"* null, %"class.network::mojom::TrustTokenKeyCommitmentResult"** %6, align 8
  call void @_ZN7network5mojom29TrustTokenKeyCommitmentResultD1Ev(%"class.network::mojom::TrustTokenKeyCommitmentResult"* nonnull %14) #7
  %84 = bitcast %"class.network::mojom::TrustTokenKeyCommitmentResult"* %14 to i8*
  call void @_ZdlPv(i8* %84) #8
  br label %85

85:                                               ; preds = %16, %82
  %86 = phi i1 [ true, %16 ], [ %83, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  ret i1 %86
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network36ExpiryInspectingRecordExpiryDelegateD0Ev(%"class.network::ExpiryInspectingRecordExpiryDelegate"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.network::ExpiryInspectingRecordExpiryDelegate"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network15TrustTokenStore20RecordExpiryDelegateD2Ev(%"class.network::TrustTokenStore::RecordExpiryDelegate"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom29TrustTokenKeyCommitmentResultD1Ev(%"class.network::mojom::TrustTokenKeyCommitmentResult"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
