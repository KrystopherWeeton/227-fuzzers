; ModuleID = '../../third_party/blink/renderer/platform/graphics/static_bitmap_image.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/static_bitmap_image.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.1, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.184" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector", %"class.WTF::Vector.2" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4" }
%"class.WTF::VectorBufferBase.4" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.7", i32, [4 x i8], %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.180", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.119", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i64 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::Worklist.50"* }
%"class.blink::Worklist.50" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.99", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101", %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { float }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.122", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.131" }
%"class.WTF::Vector.131" = type { %"class.WTF::VectorBuffer.132" }
%"class.WTF::VectorBuffer.132" = type { %"class.WTF::VectorBufferBase.133" }
%"class.WTF::VectorBufferBase.133" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.147" }
%"class.WTF::VectorBuffer.147" = type { %"class.WTF::VectorBufferBase.148" }
%"class.WTF::VectorBufferBase.148" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.50"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.190" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.179 }
%class.scoped_refptr.179 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.180" = type { %"struct.std::__1::__atomic_base.181" }
%"struct.std::__1::__atomic_base.181" = type { %"struct.std::__1::__cxx_atomic_impl.182" }
%"struct.std::__1::__cxx_atomic_impl.182" = type { %"struct.std::__1::__cxx_atomic_base_impl.183" }
%"struct.std::__1::__cxx_atomic_base_impl.183" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.201, %"class.gfx::Rect", i32, %class.sk_sp.206, %class.sk_sp.214, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.215 }
%class.sk_sp.201 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.202", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { i8* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.206 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.207" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.195, i32, i32 }
%class.sk_sp.195 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.196" }
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.209" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.214 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.215 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.216", [4 x i8] }>
%"class.base::RefCountedThreadSafe.216" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::UnacceleratedStaticBitmapImage" = type { %"class.blink::StaticBitmapImage.base", %"class.cc::PaintImage", %class.sk_sp, %class.scoped_refptr.218 }
%"class.blink::StaticBitmapImage.base" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8 }>
%class.scoped_refptr.218 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.219" }>
%"class.base::RefCountedThreadSafe.219" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp.220 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.221, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.221 = type { %"struct.std::__1::atomic" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.cc::PaintFlags" = type <{ %class.sk_sp.222, %class.sk_sp.223, %class.sk_sp.244, %class.sk_sp.245, %class.sk_sp.246, %class.sk_sp.247, i32, float, float, i32, %union.anon.254, [4 x i8] }>
%class.sk_sp.222 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.223 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.201, i32, %"class.absl::optional.224", %"class.std::__1::vector.229", %"class.std::__1::vector.236", %class.sk_sp.243, %class.sk_sp, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.absl::optional.224" = type { %"class.absl::optional_internal::optional_data.225" }
%"class.absl::optional_internal::optional_data.225" = type { %"class.absl::optional_internal::optional_data_base.226" }
%"class.absl::optional_internal::optional_data_base.226" = type { %"class.absl::optional_internal::optional_data_dtor_base.227" }
%"class.absl::optional_internal::optional_data_dtor_base.227" = type { i8, %union.anon.228 }
%union.anon.228 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.229" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { i32*, i32*, %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { i32* }
%"class.std::__1::vector.236" = type { %"class.std::__1::__vector_base.237" }
%"class.std::__1::__vector_base.237" = type { float*, float*, %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { float* }
%class.sk_sp.243 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.180", [7 x i8] }>
%class.sk_sp.244 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.245 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.246 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.247 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.248, i32, %"class.absl::optional.249", i8, i32 }
%class.sk_sp.248 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.249" = type { %"class.absl::optional_internal::optional_data.250" }
%"class.absl::optional_internal::optional_data.250" = type { %"class.absl::optional_internal::optional_data_base.251" }
%"class.absl::optional_internal::optional_data_base.251" = type { %"class.absl::optional_internal::optional_data_dtor_base.252" }
%"class.absl::optional_internal::optional_data_dtor_base.252" = type { i8, %union.anon.253 }
%union.anon.253 = type { %struct.SkRect }
%union.anon.254 = type { i32 }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.256" }
%"struct.std::__1::atomic.256" = type { %"struct.std::__1::__atomic_base.257" }
%"struct.std::__1::__atomic_base.257" = type { %"struct.std::__1::__atomic_base.258" }
%"struct.std::__1::__atomic_base.258" = type { %"struct.std::__1::__cxx_atomic_impl.259" }
%"struct.std::__1::__cxx_atomic_impl.259" = type { %"struct.std::__1::__cxx_atomic_base_impl.260" }
%"struct.std::__1::__cxx_atomic_base_impl.260" = type { i32 }
%"class.blink::WebGraphicsContext3DProvider" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.261 }
%class.scoped_refptr.261 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.262", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.262" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.196" }
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.263", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.304", i8, i8, i8, i32 }
%"class.blink::PaintController" = type opaque
%"class.WTF::Vector.263" = type { %"class.WTF::VectorBuffer.264" }
%"class.WTF::VectorBuffer.264" = type { %"class.WTF::VectorBufferBase.265" }
%"class.WTF::VectorBufferBase.265" = type { %"class.std::__1::unique_ptr.266"*, i32, i32 }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.222 }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.274, %"class.std::__1::unique_ptr.275" }
%class.scoped_refptr.274 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.278", %struct.SkRect }
%"class.absl::optional.278" = type { %"class.absl::optional_internal::optional_data.279" }
%"class.absl::optional_internal::optional_data.279" = type { %"class.absl::optional_internal::optional_data_base.280" }
%"class.absl::optional_internal::optional_data_base.280" = type { %"class.absl::optional_internal::optional_data_dtor_base.281" }
%"class.absl::optional_internal::optional_data_dtor_base.281" = type { i8, %union.anon.282 }
%union.anon.282 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.283, [384 x i64], %class.sk_sp.284, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.285", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.291" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.283 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.284 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.325", %"class.std::__1::unique_ptr.330" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.313", %"class.std::__1::unique_ptr.319", %class.sk_sp.245 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.325" = type { %"class.absl::optional_internal::optional_data.326" }
%"class.absl::optional_internal::optional_data.326" = type { %"class.absl::optional_internal::optional_data_base.327" }
%"class.absl::optional_internal::optional_data_base.327" = type { %"class.absl::optional_internal::optional_data_dtor_base.328" }
%"class.absl::optional_internal::optional_data_dtor_base.328" = type { i8, %union.anon.329 }
%union.anon.329 = type { i32 }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.341 }
%union.anon.341 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.gpu::gles2::GLES2Interface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CanvasResourceProvider" = type opaque
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }

$_ZN5blink17StaticBitmapImageD0Ev = comdat any

$_ZNK5blink5Image10IsSVGImageEv = comdat any

$_ZNK5blink5Image13IsBitmapImageEv = comdat any

$_ZNK5blink17StaticBitmapImage19IsStaticBitmapImageEv = comdat any

$_ZNK5blink5Image18IsPlaceholderImageEv = comdat any

$_ZN5blink17StaticBitmapImage22CurrentFrameIsCompleteEv = comdat any

$_ZN5blink5Image25CurrentFrameIsLazyDecodedEv = comdat any

$_ZN5blink5Image10FrameCountEv = comdat any

$_ZNK5blink5Image15IsTextureBackedEv = comdat any

$_ZNK5blink5Image35CurrentFrameHasSingleSecurityOriginEv = comdat any

$_ZNK5blink5Image16HasIntrinsicSizeEv = comdat any

$_ZNK5blink5Image20DensityCorrectedSizeEv = comdat any

$_ZNK5blink5Image11SizeAsFloatENS_27RespectImageOrientationEnumE = comdat any

$_ZNK5blink5Image10GetHotSpotERNS_8IntPointE = comdat any

$_ZN5blink5Image11DataChangedEb = comdat any

$_ZN5blink17StaticBitmapImage18DestroyDecodedDataEv = comdat any

$_ZN5blink5Image4DataEv = comdat any

$_ZN5blink5Image14StartAnimationEv = comdat any

$_ZN5blink5Image14ResetAnimationEv = comdat any

$_ZN5blink5Image13MaybeAnimatedEv = comdat any

$_ZN5blink5Image18SetAnimationPolicyENS_5mojom20ImageAnimationPolicyE = comdat any

$_ZN5blink5Image15AnimationPolicyEv = comdat any

$_ZN5blink5Image26AdvanceAnimationForTestingEv = comdat any

$_ZNK5blink17StaticBitmapImage21HasDefaultOrientationEv = comdat any

$_ZNK5blink17StaticBitmapImage23CurrentFrameOrientationEv = comdat any

$_ZNK5blink5Image32CurrentFrameDensityCorrectedSizeEv = comdat any

$_ZNK5blink5Image15ContextProviderEv = comdat any

$_ZNK5blink5Image22ContextProviderWrapperEv = comdat any

$_ZN5blink5Image15IsSizeAvailableEv = comdat any

$_ZNK5blink17StaticBitmapImage7IsValidEv = comdat any

$_ZN5blink17StaticBitmapImage8TransferEv = comdat any

$_ZNK5blink17StaticBitmapImage15IsOriginTopLeftEv = comdat any

$_ZN5blink17StaticBitmapImage17MakeUnacceleratedEv = comdat any

$_ZN5blink17StaticBitmapImage13CopyToTextureEPN3gpu5gles214GLES2InterfaceEjjibbRKNS_8IntPointERKNS_7IntRectE = comdat any

$_ZN5blink17StaticBitmapImage22CopyToResourceProviderEPNS_22CanvasResourceProviderE = comdat any

$_ZN5blink17StaticBitmapImage23EnsureSyncTokenVerifiedEv = comdat any

$_ZNK5blink17StaticBitmapImage16GetMailboxHolderEv = comdat any

$_ZN5blink17StaticBitmapImage15UpdateSyncTokenERKN3gpu9SyncTokenE = comdat any

$_ZNK5blink17StaticBitmapImage15IsPremultipliedEv = comdat any

@_ZTVN5blink17StaticBitmapImageE = hidden unnamed_addr constant { [53 x i8*] } { [53 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::Image"*)* @_ZN5blink5ImageD2Ev to i8*), i8* bitcast (void (%"class.blink::StaticBitmapImage"*)* @_ZN5blink17StaticBitmapImageD0Ev to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image10IsSVGImageEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image13IsBitmapImageEv to i8*), i8* bitcast (i1 (%"class.blink::StaticBitmapImage"*)* @_ZNK5blink17StaticBitmapImage19IsStaticBitmapImageEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image18IsPlaceholderImageEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::StaticBitmapImage"*)* @_ZN5blink17StaticBitmapImage22CurrentFrameIsCompleteEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZN5blink5Image25CurrentFrameIsLazyDecodedEv to i8*), i8* bitcast (i64 (%"class.blink::Image"*)* @_ZN5blink5Image10FrameCountEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image15IsTextureBackedEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image35CurrentFrameHasSingleSecurityOriginEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image16HasIntrinsicSizeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.blink::Image"*)* @_ZNK5blink5Image20DensityCorrectedSizeEv to i8*), i8* bitcast (i64 (%"class.blink::StaticBitmapImage"*)* @_ZNK5blink17StaticBitmapImage20PreferredDisplaySizeEv to i8*), i8* bitcast (<2 x float> (%"class.blink::Image"*, i32)* @_ZNK5blink5Image11SizeAsFloatENS_27RespectImageOrientationEnumE to i8*), i8* bitcast (i1 (%"class.blink::Image"*, %"class.blink::IntPoint"*)* @_ZNK5blink5Image10GetHotSpotERNS_8IntPointE to i8*), i8* bitcast (i32 (%"class.blink::Image"*, %"class.WTF::SharedBuffer"*, i1)* @_ZN5blink5Image7SetDataE13scoped_refptrIN3WTF12SharedBufferEEb to i8*), i8* bitcast (i32 (%"class.blink::Image"*, i1)* @_ZN5blink5Image11DataChangedEb to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Image"*)* @_ZNK5blink5Image17FilenameExtensionEv to i8*), i8* bitcast (void (%"class.blink::StaticBitmapImage"*)* @_ZN5blink17StaticBitmapImage18DestroyDecodedDataEv to i8*), i8* bitcast (%"class.WTF::SharedBuffer"* (%"class.blink::Image"*)* @_ZN5blink5Image4DataEv to i8*), i8* bitcast (void (%"class.blink::Image"*)* @_ZN5blink5Image14StartAnimationEv to i8*), i8* bitcast (void (%"class.blink::Image"*)* @_ZN5blink5Image14ResetAnimationEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZN5blink5Image13MaybeAnimatedEv to i8*), i8* bitcast (void (%"class.blink::Image"*, i32)* @_ZN5blink5Image18SetAnimationPolicyENS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i32 (%"class.blink::Image"*)* @_ZN5blink5Image15AnimationPolicyEv to i8*), i8* bitcast (void (%"class.blink::Image"*)* @_ZN5blink5Image26AdvanceAnimationForTestingEv to i8*), i8* bitcast (void ()* @_ZN5blink5Image20ImageForDefaultFrameEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::StaticBitmapImage"*)* @_ZNK5blink17StaticBitmapImage21HasDefaultOrientationEv to i8*), i8* bitcast (i8 (%"class.blink::StaticBitmapImage"*)* @_ZNK5blink17StaticBitmapImage23CurrentFrameOrientationEv to i8*), i8* bitcast (i64 (%"class.blink::Image"*)* @_ZNK5blink5Image32CurrentFrameDensityCorrectedSizeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::Image"*, %"class.cc::PaintFlags"*, %class.SkMatrix*)* @_ZN5blink5Image11ApplyShaderERN2cc10PaintFlagsERK8SkMatrix to i8*), i8* bitcast (%"class.blink::WebGraphicsContext3DProvider"* (%"class.blink::Image"*)* @_ZNK5blink5Image15ContextProviderEv to i8*), i8* bitcast (void (%"class.base::WeakPtr"*, %"class.blink::Image"*)* @_ZNK5blink5Image22ContextProviderWrapperEv to i8*), i8* bitcast (void (%"class.blink::Image"*, %"class.blink::GraphicsContext"*, %"class.blink::FloatRect"*, %"class.blink::FloatSize"*, %"class.blink::FloatPoint"*, i32, %"class.blink::FloatRect"*, %"class.blink::FloatSize"*, i32)* @_ZN5blink5Image11DrawPatternERNS_15GraphicsContextERKNS_9FloatRectERKNS_9FloatSizeERKNS_10FloatPointE11SkBlendModeS5_S8_NS_27RespectImageOrientationEnumE to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZN5blink5Image15IsSizeAvailableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::StaticBitmapImage"*)* @_ZNK5blink17StaticBitmapImage7IsValidEv to i8*), i8* bitcast (void (%"class.blink::StaticBitmapImage"*)* @_ZN5blink17StaticBitmapImage8TransferEv to i8*), i8* bitcast (i1 (%"class.blink::StaticBitmapImage"*)* @_ZNK5blink17StaticBitmapImage15IsOriginTopLeftEv to i8*), i8* bitcast (%"class.blink::StaticBitmapImage"* (%"class.blink::StaticBitmapImage"*)* @_ZN5blink17StaticBitmapImage17MakeUnacceleratedEv to i8*), i8* bitcast (i1 (%"class.blink::StaticBitmapImage"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i1, i1, %"class.blink::IntPoint"*, %"class.blink::IntRect"*)* @_ZN5blink17StaticBitmapImage13CopyToTextureEPN3gpu5gles214GLES2InterfaceEjjibbRKNS_8IntPointERKNS_7IntRectE to i8*), i8* bitcast (i1 (%"class.blink::StaticBitmapImage"*, %"class.blink::CanvasResourceProvider"*)* @_ZN5blink17StaticBitmapImage22CopyToResourceProviderEPNS_22CanvasResourceProviderE to i8*), i8* bitcast (void (%"class.blink::StaticBitmapImage"*)* @_ZN5blink17StaticBitmapImage23EnsureSyncTokenVerifiedEv to i8*), i8* bitcast (void (%"struct.gpu::MailboxHolder"*, %"class.blink::StaticBitmapImage"*)* @_ZNK5blink17StaticBitmapImage16GetMailboxHolderEv to i8*), i8* bitcast (void (%"class.blink::StaticBitmapImage"*, %"struct.gpu::SyncToken"*)* @_ZN5blink17StaticBitmapImage15UpdateSyncTokenERKN3gpu9SyncTokenE to i8*), i8* bitcast (i1 (%"class.blink::StaticBitmapImage"*)* @_ZNK5blink17StaticBitmapImage15IsPremultipliedEv to i8*)] }, align 8
@.str = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StaticBitmapImage"* @_ZN5blink17StaticBitmapImage6CreateEN2cc10PaintImageENS_16ImageOrientationE(%"class.cc::PaintImage"*, i8) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::PaintImage", align 8
  call void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"* nonnull %3, %"class.cc::PaintImage"* dereferenceable(104) %0) #6
  %4 = call %"class.blink::UnacceleratedStaticBitmapImage"* @_ZN5blink30UnacceleratedStaticBitmapImage6CreateEN2cc10PaintImageENS_16ImageOrientationE(%"class.cc::PaintImage"* nonnull %3, i8 %1) #6
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %3) #6
  %5 = bitcast %"class.blink::UnacceleratedStaticBitmapImage"* %4 to %"class.blink::StaticBitmapImage"*
  ret %"class.blink::StaticBitmapImage"* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::UnacceleratedStaticBitmapImage"* @_ZN5blink30UnacceleratedStaticBitmapImage6CreateEN2cc10PaintImageENS_16ImageOrientationE(%"class.cc::PaintImage"*, i8) local_unnamed_addr #2

declare void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StaticBitmapImage"* @_ZN5blink17StaticBitmapImage6CreateE5sk_spI6SkDataERK11SkImageInfoNS_16ImageOrientationE(%class.sk_sp.220* nocapture, %struct.SkImageInfo* dereferenceable(24), i8) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.sk_sp.220, align 8
  %6 = getelementptr inbounds %class.sk_sp.220, %class.sk_sp.220* %0, i64 0, i32 0
  %7 = bitcast %class.sk_sp.220* %0 to i64*
  %8 = load i64, i64* %7, align 8
  store %class.SkData* null, %class.SkData** %6, align 8
  %9 = bitcast %class.sk_sp.220* %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0
  %14 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %13) #6
  %15 = sext i32 %14 to i64
  %16 = mul nsw i64 %15, %12
  %17 = icmp ult i64 %16, 2147483648
  %18 = select i1 %17, i64 %16, i64 0
  call void @_ZN7SkImage14MakeRasterDataERK11SkImageInfo5sk_spI6SkDataEm(%class.sk_sp* nonnull sret %4, %struct.SkImageInfo* dereferenceable(24) %1, %class.sk_sp.220* nonnull %5, i64 %18) #6
  %19 = call %"class.blink::UnacceleratedStaticBitmapImage"* @_ZN5blink30UnacceleratedStaticBitmapImage6CreateE5sk_spI7SkImageENS_16ImageOrientationE(%class.sk_sp* nonnull %4, i8 %2) #6
  %20 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %21 = load %class.SkImage*, %class.SkImage** %20, align 8
  %22 = icmp eq %class.SkImage* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %class.SkImage, %class.SkImage* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = bitcast %class.SkImage* %21 to %class.SkRefCntBase*
  %29 = bitcast %class.SkImage* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  call void %32(%class.SkRefCntBase* nonnull %28) #6
  br label %33

33:                                               ; preds = %3, %23, %27
  %34 = getelementptr inbounds %class.sk_sp.220, %class.sk_sp.220* %5, i64 0, i32 0
  %35 = load %class.SkData*, %class.SkData** %34, align 8
  %36 = icmp eq %class.SkData* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.SkData, %class.SkData* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %35) #6
  %42 = bitcast %class.SkData* %35 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %42) #6
  br label %43

43:                                               ; preds = %33, %37, %41
  %44 = bitcast %"class.blink::UnacceleratedStaticBitmapImage"* %19 to %"class.blink::StaticBitmapImage"*
  ret %"class.blink::StaticBitmapImage"* %44
}

declare %"class.blink::UnacceleratedStaticBitmapImage"* @_ZN5blink30UnacceleratedStaticBitmapImage6CreateE5sk_spI7SkImageENS_16ImageOrientationE(%class.sk_sp*, i8) local_unnamed_addr #2

declare void @_ZN7SkImage14MakeRasterDataERK11SkImageInfo5sk_spI6SkDataEm(%class.sk_sp* sret, %struct.SkImageInfo* dereferenceable(24), %class.sk_sp.220*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink17StaticBitmapImage20PreferredDisplaySizeEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %0, i64 0, i32 1, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp sgt i8 %3, 4
  %5 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %0, i64 0, i32 0
  %6 = bitcast %"class.blink::StaticBitmapImage"* %0 to i64 (%"class.blink::Image"*)***
  %7 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %7, i64 13
  %9 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %8, align 8
  %10 = tail call i64 %9(%"class.blink::Image"* %5) #6
  br i1 %4, label %11, label %15

11:                                               ; preds = %1
  %12 = lshr i64 %10, 32
  %13 = shl i64 %10, 32
  %14 = or i64 %13, %12
  br label %15

15:                                               ; preds = %1, %11
  %16 = phi i64 [ %14, %11 ], [ %10, %1 ]
  ret i64 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17StaticBitmapImage10DrawHelperEPN2cc11PaintCanvasERKNS1_10PaintFlagsERKNS_9FloatRectES9_RK17SkSamplingOptionsNS_5Image17ImageClampingModeENS_27RespectImageOrientationEnumERKNS1_10PaintImageE(%"class.blink::StaticBitmapImage"*, %"class.cc::PaintCanvas"*, %"class.cc::PaintFlags"* dereferenceable(72), %"class.blink::FloatRect"* nocapture readonly dereferenceable(16), %"class.blink::FloatRect"* nocapture readonly dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), i32, i32, %"class.cc::PaintImage"* dereferenceable(104)) local_unnamed_addr #4 align 2 {
  %10 = alloca %"class.blink::FloatRect", align 4
  %11 = alloca %"class.blink::FloatRect", align 4
  %12 = alloca %class.SkMatrix, align 4
  %13 = alloca %"class.blink::AffineTransform", align 8
  %14 = alloca <2 x float>, align 8
  %15 = bitcast <2 x float>* %14 to %"class.blink::FloatSize"*
  %16 = alloca { <2 x float>, <2 x float> }, align 8
  %17 = bitcast { <2 x float>, <2 x float> }* %16 to %struct.SkRect*
  %18 = alloca { <2 x float>, <2 x float> }, align 8
  %19 = bitcast { <2 x float>, <2 x float> }* %18 to %struct.SkRect*
  %20 = bitcast %"class.blink::FloatRect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #6
  %21 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 1, i32 1
  %25 = bitcast %"class.blink::FloatRect"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 4 %25, i64 16, i1 false)
  %26 = bitcast %"class.blink::FloatRect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #6
  %27 = tail call i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"* %8) #6
  %28 = sitofp i32 %27 to float
  %29 = tail call i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"* %8) #6
  %30 = sitofp i32 %29 to float
  %31 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %11, i64 0, i32 0, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %11, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %11, i64 0, i32 1, i32 0
  store float %28, float* %33, align 4
  %34 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %11, i64 0, i32 1, i32 1
  store float %30, float* %34, align 4
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %10, %"class.blink::FloatRect"* nonnull dereferenceable(16) %11) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #6
  %35 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 1, i32 0
  %36 = load float, float* %35, align 4
  %37 = fcmp ugt float %36, 0.000000e+00
  br i1 %37, label %38, label %136

38:                                               ; preds = %9
  %39 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 1, i32 1
  %40 = load float, float* %39, align 4
  %41 = fcmp ole float %40, 0.000000e+00
  %42 = load float, float* %23, align 4
  %43 = fcmp ole float %42, 0.000000e+00
  %44 = or i1 %41, %43
  %45 = load float, float* %24, align 4
  %46 = fcmp ole float %45, 0.000000e+00
  %47 = or i1 %44, %46
  br i1 %47, label %136, label %48

48:                                               ; preds = %38
  %49 = icmp eq %"class.cc::PaintCanvas"* %1, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %48
  %51 = bitcast %"class.cc::PaintCanvas"* %1 to i32 (%"class.cc::PaintCanvas"*)***
  %52 = load i32 (%"class.cc::PaintCanvas"*)**, i32 (%"class.cc::PaintCanvas"*)*** %51, align 8
  %53 = getelementptr inbounds i32 (%"class.cc::PaintCanvas"*)*, i32 (%"class.cc::PaintCanvas"*)** %52, i64 9
  %54 = load i32 (%"class.cc::PaintCanvas"*)*, i32 (%"class.cc::PaintCanvas"*)** %53, align 8
  %55 = call i32 %54(%"class.cc::PaintCanvas"* nonnull %1) #6
  br label %56

56:                                               ; preds = %48, %50
  %57 = phi i32 [ 0, %48 ], [ %55, %50 ]
  %58 = bitcast %"class.blink::FloatRect"* %3 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 0, i32 1
  %61 = bitcast float* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 1
  %64 = bitcast %"class.blink::FloatSize"* %63 to <2 x float>*
  %65 = load <2 x float>, <2 x float>* %64, align 4
  %66 = icmp eq i32 %7, 0
  br i1 %66, label %95, label %67

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %0, i64 0, i32 1
  %69 = getelementptr inbounds %"class.blink::ImageOrientation", %"class.blink::ImageOrientation"* %68, i64 0, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %70, 1
  br i1 %71, label %95, label %72

72:                                               ; preds = %67
  %73 = bitcast %"class.cc::PaintCanvas"* %1 to i32 (%"class.cc::PaintCanvas"*)***
  %74 = load i32 (%"class.cc::PaintCanvas"*)**, i32 (%"class.cc::PaintCanvas"*)*** %73, align 8
  %75 = getelementptr inbounds i32 (%"class.cc::PaintCanvas"*)*, i32 (%"class.cc::PaintCanvas"*)** %74, i64 5
  %76 = load i32 (%"class.cc::PaintCanvas"*)*, i32 (%"class.cc::PaintCanvas"*)** %75, align 8
  %77 = call i32 %76(%"class.cc::PaintCanvas"* %1) #6
  %78 = bitcast i32 %59 to float
  %79 = bitcast i32 %62 to float
  %80 = bitcast %"class.cc::PaintCanvas"* %1 to void (%"class.cc::PaintCanvas"*, float, float)***
  %81 = load void (%"class.cc::PaintCanvas"*, float, float)**, void (%"class.cc::PaintCanvas"*, float, float)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %81, i64 11
  %83 = load void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %82, align 8
  call void %83(%"class.cc::PaintCanvas"* %1, float %78, float %79) #6
  %84 = bitcast %class.SkMatrix* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %84) #6
  %85 = bitcast %"class.blink::AffineTransform"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %85) #6
  %86 = bitcast <2 x float>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #6
  store <2 x float> %65, <2 x float>* %14, align 8
  call void @_ZNK5blink16ImageOrientation20TransformFromDefaultERKNS_9FloatSizeE(%"class.blink::AffineTransform"* nonnull sret %13, %"class.blink::ImageOrientation"* %68, %"class.blink::FloatSize"* nonnull dereferenceable(8) %15) #6
  call void @_ZN5blink25AffineTransformToSkMatrixERKNS_15AffineTransformE(%class.SkMatrix* nonnull sret %12, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %13) #6
  %87 = bitcast %"class.cc::PaintCanvas"* %1 to void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)***
  %88 = load void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)**, void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)*, void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)** %88, i64 14
  %90 = load void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)*, void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)** %89, align 8
  call void %90(%"class.cc::PaintCanvas"* %1, %class.SkMatrix* nonnull dereferenceable(40) %12) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %85) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %84) #6
  %91 = load i8, i8* %69, align 1
  %92 = icmp sgt i8 %91, 4
  %93 = shufflevector <2 x float> %65, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %94 = select i1 %92, <2 x float> %93, <2 x float> %65
  br label %95

95:                                               ; preds = %72, %67, %56
  %96 = phi i32 [ %59, %67 ], [ %59, %56 ], [ 0, %72 ]
  %97 = phi i32 [ %62, %67 ], [ %62, %56 ], [ 0, %72 ]
  %98 = phi <2 x float> [ %65, %67 ], [ %65, %56 ], [ %94, %72 ]
  %99 = bitcast { <2 x float>, <2 x float> }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #6
  %100 = load float, float* %21, align 4
  %101 = load float, float* %22, align 4
  %102 = load float, float* %23, align 4
  %103 = load float, float* %24, align 4
  %104 = insertelement <2 x float> undef, float %100, i32 0
  %105 = insertelement <2 x float> %104, float %101, i32 1
  %106 = fadd float %100, %102
  %107 = insertelement <2 x float> undef, float %106, i32 0
  %108 = fadd float %101, %103
  %109 = insertelement <2 x float> %107, float %108, i32 1
  %110 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 0
  store <2 x float> %105, <2 x float>* %110, align 8
  %111 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 1
  store <2 x float> %109, <2 x float>* %111, align 8
  %112 = bitcast { <2 x float>, <2 x float> }* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112) #6
  %113 = bitcast i32 %96 to float
  %114 = bitcast i32 %97 to float
  %115 = extractelement <2 x float> %98, i32 0
  %116 = extractelement <2 x float> %98, i32 1
  %117 = insertelement <2 x float> undef, float %113, i32 0
  %118 = insertelement <2 x float> %117, float %114, i32 1
  %119 = fadd float %115, %113
  %120 = insertelement <2 x float> undef, float %119, i32 0
  %121 = fadd float %116, %114
  %122 = insertelement <2 x float> %120, float %121, i32 1
  %123 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %18, i64 0, i32 0
  store <2 x float> %118, <2 x float>* %123, align 8
  %124 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %18, i64 0, i32 1
  store <2 x float> %122, <2 x float>* %124, align 8
  %125 = icmp ne i32 %6, 0
  %126 = zext i1 %125 to i32
  %127 = bitcast %"class.cc::PaintCanvas"* %1 to void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)***
  %128 = load void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)**, void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)*, void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)** %128, i64 36
  %130 = load void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)*, void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)** %129, align 8
  call void %130(%"class.cc::PaintCanvas"* %1, %"class.cc::PaintImage"* dereferenceable(104) %8, %struct.SkRect* nonnull dereferenceable(16) %17, %struct.SkRect* nonnull dereferenceable(16) %19, %struct.SkSamplingOptions* dereferenceable(20) %5, %"class.cc::PaintFlags"* %2, i32 %126) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #6
  br i1 %49, label %136, label %131

131:                                              ; preds = %95
  %132 = bitcast %"class.cc::PaintCanvas"* %1 to void (%"class.cc::PaintCanvas"*, i32)***
  %133 = load void (%"class.cc::PaintCanvas"*, i32)**, void (%"class.cc::PaintCanvas"*, i32)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, i32)*, void (%"class.cc::PaintCanvas"*, i32)** %133, i64 10
  %135 = load void (%"class.cc::PaintCanvas"*, i32)*, void (%"class.cc::PaintCanvas"*, i32)** %134, align 8
  call void %135(%"class.cc::PaintCanvas"* nonnull %1, i32 %57) #6
  br label %136

136:                                              ; preds = %38, %9, %131, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #6
  ret void
}

declare void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

declare i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"*) local_unnamed_addr #2

declare i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"*) local_unnamed_addr #2

declare void @_ZN5blink25AffineTransformToSkMatrixERKNS_15AffineTransformE(%class.SkMatrix* sret, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZNK5blink16ImageOrientation20TransformFromDefaultERKNS_9FloatSizeE(%"class.blink::AffineTransform"* sret, %"class.blink::ImageOrientation"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5ImageD2Ev(%"class.blink::Image"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17StaticBitmapImageD0Ev(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image10IsSVGImageEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image13IsBitmapImageEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17StaticBitmapImage19IsStaticBitmapImageEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image18IsPlaceholderImageEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17StaticBitmapImage22CurrentFrameIsCompleteEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5Image25CurrentFrameIsLazyDecodedEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink5Image10FrameCountEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image15IsTextureBackedEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image35CurrentFrameHasSingleSecurityOriginEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image16HasIntrinsicSizeEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink5Image20DensityCorrectedSizeEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::Image"* %0 to i64 (%"class.blink::Image"*)***
  %3 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %3, i64 13
  %5 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %4, align 8
  %6 = tail call i64 %5(%"class.blink::Image"* %0) #6
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden <2 x float> @_ZNK5blink5Image11SizeAsFloatENS_27RespectImageOrientationEnumE(%"class.blink::Image"*, i32) unnamed_addr #4 comdat align 2 {
  %3 = tail call i64 @_ZNK5blink5Image4SizeENS_27RespectImageOrientationEnumE(%"class.blink::Image"* %0, i32 %1) #6
  %4 = trunc i64 %3 to i32
  %5 = lshr i64 %3, 32
  %6 = trunc i64 %5 to i32
  %7 = sitofp i32 %4 to float
  %8 = sitofp i32 %6 to float
  %9 = insertelement <2 x float> undef, float %7, i32 0
  %10 = insertelement <2 x float> %9, float %8, i32 1
  ret <2 x float> %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image10GetHotSpotERNS_8IntPointE(%"class.blink::Image"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZN5blink5Image7SetDataE13scoped_refptrIN3WTF12SharedBufferEEb(%"class.blink::Image"*, %"class.WTF::SharedBuffer"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink5Image11DataChangedEb(%"class.blink::Image"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare %"class.WTF::StringImpl"* @_ZNK5blink5Image17FilenameExtensionEv(%"class.blink::Image"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17StaticBitmapImage18DestroyDecodedDataEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::SharedBuffer"* @_ZN5blink5Image4DataEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %2, align 8
  %4 = icmp eq %"class.WTF::SharedBuffer"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #6
  br label %7

7:                                                ; preds = %1, %5
  ret %"class.WTF::SharedBuffer"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image14StartAnimationEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image14ResetAnimationEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5Image13MaybeAnimatedEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image18SetAnimationPolicyENS_5mojom20ImageAnimationPolicyE(%"class.blink::Image"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink5Image15AnimationPolicyEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image26AdvanceAnimationForTestingEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink5Image20ImageForDefaultFrameEv() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17StaticBitmapImage21HasDefaultOrientationEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %0, i64 0, i32 1, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8 @_ZNK5blink17StaticBitmapImage23CurrentFrameOrientationEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %0, i64 0, i32 1, i32 0
  %3 = load i8, i8* %2, align 8
  ret i8 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink5Image32CurrentFrameDensityCorrectedSizeEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare zeroext i1 @_ZN5blink5Image11ApplyShaderERN2cc10PaintFlagsERK8SkMatrix(%"class.blink::Image"*, %"class.cc::PaintFlags"* dereferenceable(72), %class.SkMatrix* dereferenceable(40)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WebGraphicsContext3DProvider"* @_ZNK5blink5Image15ContextProviderEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::WebGraphicsContext3DProvider"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink5Image22ContextProviderWrapperEv(%"class.base::WeakPtr"* noalias sret, %"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %3) #6
  ret void
}

declare void @_ZN5blink5Image11DrawPatternERNS_15GraphicsContextERKNS_9FloatRectERKNS_9FloatSizeERKNS_10FloatPointE11SkBlendModeS5_S8_NS_27RespectImageOrientationEnumE(%"class.blink::Image"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatPoint"* dereferenceable(8), i32, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatSize"* dereferenceable(8), i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5Image15IsSizeAvailableEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17StaticBitmapImage7IsValidEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17StaticBitmapImage8TransferEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17StaticBitmapImage15IsOriginTopLeftEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::StaticBitmapImage"* @_ZN5blink17StaticBitmapImage17MakeUnacceleratedEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = icmp eq %"class.blink::StaticBitmapImage"* %0, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 1 monotonic
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #6
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  br label %11

11:                                               ; preds = %1, %4, %8
  ret %"class.blink::StaticBitmapImage"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17StaticBitmapImage13CopyToTextureEPN3gpu5gles214GLES2InterfaceEjjibbRKNS_8IntPointERKNS_7IntRectE(%"class.blink::StaticBitmapImage"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i1 zeroext, i1 zeroext, %"class.blink::IntPoint"* dereferenceable(8), %"class.blink::IntRect"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17StaticBitmapImage22CopyToResourceProviderEPNS_22CanvasResourceProviderE(%"class.blink::StaticBitmapImage"*, %"class.blink::CanvasResourceProvider"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17StaticBitmapImage23EnsureSyncTokenVerifiedEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17StaticBitmapImage16GetMailboxHolderEv(%"struct.gpu::MailboxHolder"* noalias sret, %"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN3gpu13MailboxHolderC1Ev(%"struct.gpu::MailboxHolder"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17StaticBitmapImage15UpdateSyncTokenERKN3gpu9SyncTokenE(%"class.blink::StaticBitmapImage"*, %"struct.gpu::SyncToken"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17StaticBitmapImage15IsPremultipliedEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i64 @_ZNK5blink5Image4SizeENS_27RespectImageOrientationEnumE(%"class.blink::Image"*, i32) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN3gpu13MailboxHolderC1Ev(%"struct.gpu::MailboxHolder"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
