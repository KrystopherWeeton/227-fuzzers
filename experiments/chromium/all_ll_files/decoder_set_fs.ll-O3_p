; ModuleID = '../../third_party/opus/src/silk/decoder_set_fs.c'
source_filename = "../../third_party/opus/src/silk/decoder_set_fs.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.silk_NLSF_CB_struct = type { i16, i16, i16, i16, i8*, i16*, i8*, i8*, i8*, i8*, i8*, i16* }
%struct.silk_decoder_state = type { i32, [320 x i32], [16 x i32], [480 x i16], i32, i8, i32, i32, i32, i32, i32, i32, i32, [16 x i16], i32, i8*, i8*, i32, i32, i32, i16, [3 x i32], i32, [3 x i32], %struct._silk_resampler_state_struct, %struct.silk_NLSF_CB_struct*, %struct.SideInfoIndices, %struct.silk_CNG_struct, i32, i32, i32, %struct.silk_PLC_struct }
%struct._silk_resampler_state_struct = type { [6 x i32], %union.anon, [48 x i16], i32, i32, i32, i32, i32, i32, i32, i32, i16* }
%union.anon = type { [36 x i32] }
%struct.SideInfoIndices = type { [4 x i8], [4 x i8], [17 x i8], i16, i8, i8, i8, i8, i8, i8, i8 }
%struct.silk_CNG_struct = type { [320 x i32], [16 x i16], [16 x i32], i32, i32, i32 }
%struct.silk_PLC_struct = type { i32, [5 x i16], [16 x i16], i32, i32, i16, i32, i32, i16, [2 x i32], i32, i32, i32 }

@.str = private unnamed_addr constant [62 x i8] c"assertion failed: fs_kHz == 8 || fs_kHz == 12 || fs_kHz == 16\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"../../third_party/opus/src/silk/decoder_set_fs.c\00", align 1
@.str.2 = private unnamed_addr constant [87 x i8] c"assertion failed: psDec->nb_subfr == MAX_NB_SUBFR || psDec->nb_subfr == MAX_NB_SUBFR/2\00", align 1
@silk_pitch_contour_NB_iCDF = external constant [11 x i8], align 1
@silk_pitch_contour_10_ms_NB_iCDF = external constant [3 x i8], align 1
@silk_pitch_contour_iCDF = external constant [34 x i8], align 16
@silk_pitch_contour_10_ms_iCDF = external constant [12 x i8], align 1
@silk_NLSF_CB_NB_MB = external constant %struct.silk_NLSF_CB_struct, align 8
@silk_NLSF_CB_WB = external constant %struct.silk_NLSF_CB_struct, align 8
@silk_uniform8_iCDF = external constant [8 x i8], align 1
@silk_uniform6_iCDF = external constant [6 x i8], align 1
@silk_uniform4_iCDF = external constant [4 x i8], align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"assertion failed: 0\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @silk_decoder_set_fs(%struct.silk_decoder_state*, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq i32 %1, 8
  %5 = or i32 %1, 4
  %6 = icmp eq i32 %5, 12
  switch i32 %1, label %7 [
    i32 16, label %8
    i32 12, label %8
    i32 8, label %8
  ]

7:                                                ; preds = %3
  tail call void @celt_fatal(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 43) #4
  unreachable

8:                                                ; preds = %3, %3, %3
  %9 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 8
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %11 [
    i32 4, label %12
    i32 2, label %12
  ]

11:                                               ; preds = %8
  tail call void @celt_fatal(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 44) #4
  unreachable

12:                                               ; preds = %8, %8
  %13 = shl i32 %1, 16
  %14 = ashr exact i32 %13, 16
  %15 = mul nsw i32 %14, 5
  %16 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 10
  store i32 %15, i32* %16, align 4
  %17 = shl i32 %10, 16
  %18 = ashr exact i32 %17, 16
  %19 = mul i32 %14, 327680
  %20 = ashr exact i32 %19, 16
  %21 = mul nsw i32 %18, %20
  %22 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 6
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, %1
  br i1 %24, label %25, label %29

25:                                               ; preds = %12
  %26 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 7
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, %2
  br i1 %28, label %36, label %29

29:                                               ; preds = %12, %25
  %30 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 24
  %31 = mul nsw i32 %14, 1000
  %32 = tail call i32 @silk_resampler_init(%struct._silk_resampler_state_struct* %30, i32 %31, i32 %2, i32 0) #5
  %33 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 7
  store i32 %2, i32* %33, align 8
  %34 = load i32, i32* %22, align 4
  %35 = icmp eq i32 %34, %1
  br i1 %35, label %36, label %41

36:                                               ; preds = %25, %29
  %37 = phi i32 [ %32, %29 ], [ 0, %25 ]
  %38 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 9
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %21, %39
  br i1 %40, label %71, label %41

41:                                               ; preds = %36, %29
  %42 = phi i1 [ true, %36 ], [ false, %29 ]
  %43 = phi i32 [ %37, %36 ], [ %32, %29 ]
  %44 = load i32, i32* %9, align 4
  %45 = icmp eq i32 %44, 4
  %46 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 16
  %47 = select i1 %45, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @silk_pitch_contour_NB_iCDF, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @silk_pitch_contour_10_ms_NB_iCDF, i64 0, i64 0)
  %48 = select i1 %45, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @silk_pitch_contour_iCDF, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @silk_pitch_contour_10_ms_iCDF, i64 0, i64 0)
  %49 = select i1 %4, i8* %47, i8* %48
  store i8* %49, i8** %46, align 8
  br i1 %42, label %69, label %50

50:                                               ; preds = %41
  %51 = mul nsw i32 %14, 20
  %52 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 11
  store i32 %51, i32* %52, align 8
  %53 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 12
  %54 = select i1 %6, i32 10, i32 16
  %55 = select i1 %6, %struct.silk_NLSF_CB_struct* @silk_NLSF_CB_NB_MB, %struct.silk_NLSF_CB_struct* @silk_NLSF_CB_WB
  store i32 %54, i32* %53, align 4
  %56 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 25
  store %struct.silk_NLSF_CB_struct* %55, %struct.silk_NLSF_CB_struct** %56, align 8
  switch i32 %1, label %58 [
    i32 16, label %60
    i32 12, label %57
  ]

57:                                               ; preds = %50
  br label %60

58:                                               ; preds = %50
  br i1 %4, label %60, label %59

59:                                               ; preds = %58
  tail call void @celt_fatal(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 89) #4
  unreachable

60:                                               ; preds = %58, %50, %57
  %61 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @silk_uniform6_iCDF, i64 0, i64 0), %57 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @silk_uniform8_iCDF, i64 0, i64 0), %50 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @silk_uniform4_iCDF, i64 0, i64 0), %58 ]
  %62 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 15
  store i8* %61, i8** %62, align 8
  %63 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 14
  store i32 1, i32* %63, align 8
  %64 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 4
  store i32 100, i32* %64, align 4
  %65 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 5
  store i8 10, i8* %65, align 8
  %66 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 29
  store i32 0, i32* %66, align 4
  %67 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 2, i64 0
  %68 = bitcast i32* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 1024, i1 false)
  br label %69

69:                                               ; preds = %41, %60
  store i32 %1, i32* %22, align 4
  %70 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 9
  store i32 %21, i32* %70, align 8
  br label %71

71:                                               ; preds = %69, %36
  %72 = phi i32 [ %37, %36 ], [ %43, %69 ]
  ret i32 %72
}

; Function Attrs: noreturn
declare void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #1

declare i32 @silk_resampler_init(%struct._silk_resampler_state_struct*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
