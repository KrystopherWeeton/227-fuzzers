; ModuleID = '../../third_party/blink/renderer/core/dom/names_map.cc'
source_filename = "../../third_party/blink/renderer/core/dom/names_map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::NamesMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::SpaceSplitString" }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink8NamesMap3SetIhEEvRKN3WTF12AtomicStringEPKT_ = comdat any

$_ZN5blink8NamesMap3SetIDsEEvRKN3WTF12AtomicStringEPKT_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE5clearEv = comdat any

$_ZN4absl17optional_internal13optional_dataIN5blink16SpaceSplitStringELb0EEaSEOS4_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERKS1_S7_EENS_18HashTableAddResultISH_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS8_jSI_ = comdat any

@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN4absl8optionalIN5blink16SpaceSplitStringEEEEEEEPKcv = private unnamed_addr constant [126 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, absl::optional<blink::SpaceSplitString> >]\00", align 1

@_ZN5blink8NamesMapC1ERKN3WTF12AtomicStringE = hidden unnamed_addr alias void (%"class.blink::NamesMap"*, %"class.WTF::AtomicString"*), void (%"class.blink::NamesMap"*, %"class.WTF::AtomicString"*)* @_ZN5blink8NamesMapC2ERKN3WTF12AtomicStringE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8NamesMapC2ERKN3WTF12AtomicStringE(%"class.blink::NamesMap"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::NamesMap"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 20, i1 false) #7
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::NamesMap", %"class.blink::NamesMap"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable"* %8) #7
  br label %19

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 1
  br i1 %13, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  tail call void @_ZN5blink8NamesMap3SetIhEEvRKN3WTF12AtomicStringEPKT_(%"class.blink::NamesMap"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, i8* %16) #7
  br label %19

17:                                               ; preds = %9
  %18 = bitcast %"class.WTF::StringImpl"* %14 to i16*
  tail call void @_ZN5blink8NamesMap3SetIDsEEvRKN3WTF12AtomicStringEPKT_(%"class.blink::NamesMap"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, i16* %18) #7
  br label %19

19:                                               ; preds = %7, %15, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8NamesMap3SetERKN3WTF12AtomicStringE(%"class.blink::NamesMap"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NamesMap", %"class.blink::NamesMap"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable"* %7) #7
  br label %18

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  br i1 %12, label %16, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.WTF::StringImpl"* %13 to i8*
  tail call void @_ZN5blink8NamesMap3SetIhEEvRKN3WTF12AtomicStringEPKT_(%"class.blink::NamesMap"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, i8* %15)
  br label %18

16:                                               ; preds = %8
  %17 = bitcast %"class.WTF::StringImpl"* %13 to i16*
  tail call void @_ZN5blink8NamesMap3SetIDsEEvRKN3WTF12AtomicStringEPKT_(%"class.blink::NamesMap"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, i16* %17)
  br label %18

18:                                               ; preds = %16, %14, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8NamesMap3SetIhEEvRKN3WTF12AtomicStringEPKT_(%"class.blink::NamesMap"*, %"class.WTF::AtomicString"* dereferenceable(8), i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = alloca %"class.WTF::AtomicString", align 8
  %13 = getelementptr inbounds %"class.blink::NamesMap", %"class.blink::NamesMap"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable"* %13) #7
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %3, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %3 ]
  %22 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %25, align 8
  %26 = icmp eq i32 %21, 0
  br i1 %26, label %443, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  %29 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.WTF::AtomicString"* %10 to i64*
  %31 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  %32 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  %35 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %38 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  %39 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  %41 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  %42 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %44 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  %47 = zext i32 %21 to i64
  br label %48

48:                                               ; preds = %336, %27
  %49 = phi i64 [ 0, %27 ], [ %339, %336 ]
  %50 = phi i32 [ 0, %27 ], [ %338, %336 ]
  %51 = phi i32 [ 0, %27 ], [ %337, %336 ]
  switch i32 %50, label %336 [
    i32 0, label %52
    i32 1, label %64
    i32 2, label %184
    i32 3, label %228
    i32 4, label %236
    i32 5, label %321
    i32 6, label %330
  ]

52:                                               ; preds = %48
  %53 = getelementptr inbounds i8, i8* %2, i64 %49
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 44
  br i1 %55, label %336, label %56

56:                                               ; preds = %52
  %57 = icmp ult i8 %54, 33
  br i1 %57, label %58, label %59

58:                                               ; preds = %56
  switch i8 %54, label %59 [
    i8 32, label %336
    i8 10, label %336
    i8 9, label %336
    i8 13, label %336
    i8 12, label %336
  ]

59:                                               ; preds = %58, %56
  %60 = icmp eq i8 %54, 58
  %61 = trunc i64 %49 to i32
  %62 = select i1 %60, i32 %51, i32 %61
  %63 = select i1 %60, i32 6, i32 1
  br label %336

64:                                               ; preds = %48
  %65 = getelementptr inbounds i8, i8* %2, i64 %49
  %66 = load i8, i8* %65, align 1
  switch i8 %66, label %143 [
    i8 44, label %67
    i8 58, label %105
  ]

67:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #7
  %68 = zext i32 %51 to i64
  %69 = getelementptr inbounds i8, i8* %2, i64 %68
  %70 = trunc i64 %49 to i32
  %71 = sub i32 %70, %51
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %6, i8* %69, i32 %71) #7
  %72 = load i64, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %42, align 8
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store i64 %72, i64* %37, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %104, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #7
  br label %88

88:                                               ; preds = %84, %87
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #7
  br label %104

104:                                              ; preds = %67, %88, %100, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #7
  call void @_ZN5blink8NamesMap3AddERKN3WTF12AtomicStringES4_(%"class.blink::NamesMap"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4)
  br label %336

105:                                              ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #7
  %106 = zext i32 %51 to i64
  %107 = getelementptr inbounds i8, i8* %2, i64 %106
  %108 = trunc i64 %49 to i32
  %109 = sub i32 %108, %51
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %7, i8* %107, i32 %109) #7
  %110 = load i64, i64* %40, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %39, align 8
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store i64 %110, i64* %37, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %142, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #7
  br label %126

126:                                              ; preds = %122, %125
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #7
  br label %142

142:                                              ; preds = %105, %126, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #7
  br label %336

143:                                              ; preds = %64
  %144 = icmp ult i8 %66, 33
  br i1 %144, label %145, label %336

145:                                              ; preds = %143
  switch i8 %66, label %336 [
    i8 32, label %146
    i8 10, label %146
    i8 9, label %146
    i8 13, label %146
    i8 12, label %146
  ]

146:                                              ; preds = %145, %145, %145, %145, %145
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #7
  %147 = zext i32 %51 to i64
  %148 = getelementptr inbounds i8, i8* %2, i64 %147
  %149 = trunc i64 %49 to i32
  %150 = sub i32 %149, %51
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %8, i8* %148, i32 %150) #7
  %151 = load i64, i64* %46, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store i64 %151, i64* %37, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %183, label %154

154:                                              ; preds = %146
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #7
  br label %167

167:                                              ; preds = %163, %166
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %167
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #7
  br label %183

183:                                              ; preds = %146, %167, %179, %182
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #7
  br label %336

184:                                              ; preds = %48
  %185 = getelementptr inbounds i8, i8* %2, i64 %49
  %186 = load i8, i8* %185, align 1
  switch i8 %186, label %188 [
    i8 44, label %187
    i8 58, label %336
  ]

187:                                              ; preds = %184
  call void @_ZN5blink8NamesMap3AddERKN3WTF12AtomicStringES4_(%"class.blink::NamesMap"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4)
  br label %336

188:                                              ; preds = %184
  %189 = icmp ult i8 %186, 33
  br i1 %189, label %190, label %191

190:                                              ; preds = %188
  switch i8 %186, label %191 [
    i8 32, label %336
    i8 10, label %336
    i8 9, label %336
    i8 13, label %336
    i8 12, label %336
  ]

191:                                              ; preds = %190, %188
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #7
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !2

208:                                              ; preds = %199
  call void @llvm.trap() #7
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %191
  %212 = ptrtoint %"class.WTF::StringImpl"* %192 to i64
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store i64 %212, i64* %37, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %336, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %336

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #7
  br label %336

228:                                              ; preds = %48
  %229 = getelementptr inbounds i8, i8* %2, i64 %49
  %230 = load i8, i8* %229, align 1
  switch i8 %230, label %231 [
    i8 58, label %336
    i8 44, label %335
  ]

231:                                              ; preds = %228
  %232 = icmp ult i8 %230, 33
  %233 = trunc i64 %49 to i32
  br i1 %232, label %234, label %336

234:                                              ; preds = %231
  switch i8 %230, label %235 [
    i8 32, label %336
    i8 10, label %336
    i8 9, label %336
    i8 13, label %336
    i8 12, label %336
  ]

235:                                              ; preds = %234
  br label %336

236:                                              ; preds = %48
  %237 = getelementptr inbounds i8, i8* %2, i64 %49
  %238 = load i8, i8* %237, align 1
  %239 = icmp eq i8 %238, 44
  br i1 %239, label %240, label %278

240:                                              ; preds = %236
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #7
  %241 = zext i32 %51 to i64
  %242 = getelementptr inbounds i8, i8* %2, i64 %241
  %243 = trunc i64 %49 to i32
  %244 = sub i32 %243, %51
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %9, i8* %242, i32 %244) #7
  %245 = load i64, i64* %34, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %33, align 8
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %245, i64* %31, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %277, label %248

248:                                              ; preds = %240
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %246) #7
  br label %261

261:                                              ; preds = %257, %260
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %261
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #7
  br label %277

277:                                              ; preds = %240, %261, %273, %276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #7
  call void @_ZN5blink8NamesMap3AddERKN3WTF12AtomicStringES4_(%"class.blink::NamesMap"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5)
  br label %336

278:                                              ; preds = %236
  %279 = icmp ult i8 %238, 33
  br i1 %279, label %280, label %281

280:                                              ; preds = %278
  switch i8 %238, label %336 [
    i8 32, label %283
    i8 10, label %283
    i8 9, label %283
    i8 13, label %283
    i8 12, label %283
  ]

281:                                              ; preds = %278
  %282 = icmp eq i8 %238, 58
  br i1 %282, label %283, label %336

283:                                              ; preds = %280, %280, %280, %280, %280, %281
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  %284 = zext i32 %51 to i64
  %285 = getelementptr inbounds i8, i8* %2, i64 %284
  %286 = trunc i64 %49 to i32
  %287 = sub i32 %286, %51
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %10, i8* %285, i32 %287) #7
  %288 = load i64, i64* %30, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %288, i64* %31, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %320, label %291

291:                                              ; preds = %283
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %298, label %300

298:                                              ; preds = %291
  %299 = add i32 %297, -1
  store i32 %299, i32* %296, align 4
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %299, %298 ], [ %297, %291 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %289) #7
  br label %304

304:                                              ; preds = %300, %303
  %305 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %306 = icmp eq %"class.WTF::StringImpl"* %305, null
  br i1 %306, label %320, label %307

307:                                              ; preds = %304
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load atomic i32, i32* %308 monotonic, align 4
  %310 = and i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 0
  %313 = load i32, i32* %312, align 4
  br i1 %311, label %314, label %316

314:                                              ; preds = %307
  %315 = add i32 %313, -1
  store i32 %315, i32* %312, align 4
  br label %316

316:                                              ; preds = %314, %307
  %317 = phi i32 [ %315, %314 ], [ %313, %307 ]
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %320

319:                                              ; preds = %316
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %305) #7
  br label %320

320:                                              ; preds = %283, %304, %316, %319
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  br label %336

321:                                              ; preds = %48
  %322 = getelementptr inbounds i8, i8* %2, i64 %49
  %323 = load i8, i8* %322, align 1
  %324 = icmp eq i8 %323, 44
  br i1 %324, label %325, label %326

325:                                              ; preds = %321
  call void @_ZN5blink8NamesMap3AddERKN3WTF12AtomicStringES4_(%"class.blink::NamesMap"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5)
  br label %336

326:                                              ; preds = %321
  %327 = icmp ult i8 %323, 33
  br i1 %327, label %328, label %329

328:                                              ; preds = %326
  switch i8 %323, label %329 [
    i8 32, label %336
    i8 10, label %336
    i8 9, label %336
    i8 13, label %336
    i8 12, label %336
  ]

329:                                              ; preds = %326, %328
  br label %336

330:                                              ; preds = %48
  %331 = getelementptr inbounds i8, i8* %2, i64 %49
  %332 = load i8, i8* %331, align 1
  %333 = icmp eq i8 %332, 44
  %334 = select i1 %333, i32 0, i32 6
  br label %336

335:                                              ; preds = %228
  br label %336

336:                                              ; preds = %228, %335, %184, %280, %145, %143, %58, %58, %58, %58, %58, %52, %329, %328, %328, %328, %328, %328, %281, %231, %235, %234, %234, %234, %234, %234, %227, %224, %211, %190, %190, %190, %190, %190, %330, %59, %325, %277, %320, %187, %104, %183, %142, %48
  %337 = phi i32 [ %51, %48 ], [ %51, %325 ], [ %51, %277 ], [ %51, %320 ], [ %51, %187 ], [ %51, %104 ], [ %51, %142 ], [ %51, %183 ], [ %62, %59 ], [ %51, %228 ], [ %51, %330 ], [ %51, %190 ], [ %51, %190 ], [ %51, %190 ], [ %51, %190 ], [ %51, %190 ], [ %51, %211 ], [ %51, %224 ], [ %51, %227 ], [ %233, %231 ], [ %233, %235 ], [ %51, %234 ], [ %51, %234 ], [ %51, %234 ], [ %51, %234 ], [ %51, %234 ], [ %51, %281 ], [ %51, %328 ], [ %51, %328 ], [ %51, %328 ], [ %51, %328 ], [ %51, %328 ], [ %51, %329 ], [ %51, %52 ], [ %51, %58 ], [ %51, %58 ], [ %51, %58 ], [ %51, %58 ], [ %51, %58 ], [ %51, %143 ], [ %51, %145 ], [ %51, %280 ], [ %51, %184 ], [ %51, %335 ]
  %338 = phi i32 [ %50, %48 ], [ 0, %325 ], [ 0, %277 ], [ 5, %320 ], [ 0, %187 ], [ 0, %104 ], [ 3, %142 ], [ 2, %183 ], [ %63, %59 ], [ 6, %228 ], [ %334, %330 ], [ 2, %190 ], [ 2, %190 ], [ 2, %190 ], [ 2, %190 ], [ 2, %190 ], [ 6, %211 ], [ 6, %224 ], [ 6, %227 ], [ 4, %231 ], [ 4, %235 ], [ 3, %234 ], [ 3, %234 ], [ 3, %234 ], [ 3, %234 ], [ 3, %234 ], [ 4, %281 ], [ 5, %328 ], [ 5, %328 ], [ 5, %328 ], [ 5, %328 ], [ 5, %328 ], [ 6, %329 ], [ 0, %52 ], [ 0, %58 ], [ 0, %58 ], [ 0, %58 ], [ 0, %58 ], [ 0, %58 ], [ 1, %143 ], [ 1, %145 ], [ 4, %280 ], [ 3, %184 ], [ 0, %335 ]
  %339 = add nuw nsw i64 %49, 1
  %340 = icmp eq i64 %339, %47
  br i1 %340, label %341, label %48

341:                                              ; preds = %336
  switch i32 %338, label %427 [
    i32 5, label %424
    i32 1, label %342
    i32 2, label %425
    i32 4, label %383
  ]

342:                                              ; preds = %341
  %343 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %343) #7
  %344 = zext i32 %337 to i64
  %345 = getelementptr inbounds i8, i8* %2, i64 %344
  %346 = sub i32 %21, %337
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %11, i8* %345, i32 %346) #7
  %347 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %348 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %349 = load i64, i64* %348, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %347, align 8
  %350 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %351 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store i64 %349, i64* %350, align 8
  %352 = icmp eq %"class.WTF::StringImpl"* %351, null
  br i1 %352, label %382, label %353

353:                                              ; preds = %342
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %351, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %355 = load atomic i32, i32* %354 monotonic, align 4
  %356 = and i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %351, i64 0, i32 0
  %359 = load i32, i32* %358, align 4
  br i1 %357, label %360, label %362

360:                                              ; preds = %353
  %361 = add i32 %359, -1
  store i32 %361, i32* %358, align 4
  br label %362

362:                                              ; preds = %360, %353
  %363 = phi i32 [ %361, %360 ], [ %359, %353 ]
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %366

365:                                              ; preds = %362
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %351) #7
  br label %366

366:                                              ; preds = %362, %365
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %347, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %382, label %369

369:                                              ; preds = %366
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  br i1 %373, label %376, label %378

376:                                              ; preds = %369
  %377 = add i32 %375, -1
  store i32 %377, i32* %374, align 4
  br label %378

378:                                              ; preds = %376, %369
  %379 = phi i32 [ %377, %376 ], [ %375, %369 ]
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %378
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %367) #7
  br label %382

382:                                              ; preds = %342, %366, %378, %381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %343) #7
  br label %425

383:                                              ; preds = %341
  %384 = bitcast %"class.WTF::AtomicString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %384) #7
  %385 = zext i32 %337 to i64
  %386 = getelementptr inbounds i8, i8* %2, i64 %385
  %387 = sub i32 %21, %337
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %12, i8* %386, i32 %387) #7
  %388 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %389 = bitcast %"class.WTF::AtomicString"* %12 to i64*
  %390 = load i64, i64* %389, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %388, align 8
  %391 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  %392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %390, i64* %391, align 8
  %393 = icmp eq %"class.WTF::StringImpl"* %392, null
  br i1 %393, label %423, label %394

394:                                              ; preds = %383
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = load atomic i32, i32* %395 monotonic, align 4
  %397 = and i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 0
  %400 = load i32, i32* %399, align 4
  br i1 %398, label %401, label %403

401:                                              ; preds = %394
  %402 = add i32 %400, -1
  store i32 %402, i32* %399, align 4
  br label %403

403:                                              ; preds = %401, %394
  %404 = phi i32 [ %402, %401 ], [ %400, %394 ]
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %407

406:                                              ; preds = %403
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %392) #7
  br label %407

407:                                              ; preds = %403, %406
  %408 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %388, align 8
  %409 = icmp eq %"class.WTF::StringImpl"* %408, null
  br i1 %409, label %423, label %410

410:                                              ; preds = %407
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = load atomic i32, i32* %411 monotonic, align 4
  %413 = and i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 0
  %416 = load i32, i32* %415, align 4
  br i1 %414, label %417, label %419

417:                                              ; preds = %410
  %418 = add i32 %416, -1
  store i32 %418, i32* %415, align 4
  br label %419

419:                                              ; preds = %417, %410
  %420 = phi i32 [ %418, %417 ], [ %416, %410 ]
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %423

422:                                              ; preds = %419
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %408) #7
  br label %423

423:                                              ; preds = %383, %407, %419, %422
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %384) #7
  br label %424

424:                                              ; preds = %341, %423
  br label %425

425:                                              ; preds = %382, %341, %424
  %426 = phi %"class.WTF::AtomicString"* [ %5, %424 ], [ %4, %341 ], [ %4, %382 ]
  call void @_ZN5blink8NamesMap3AddERKN3WTF12AtomicStringES4_(%"class.blink::NamesMap"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %426)
  br label %427

427:                                              ; preds = %425, %341
  %428 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %429 = icmp eq %"class.WTF::StringImpl"* %428, null
  br i1 %429, label %443, label %430

430:                                              ; preds = %427
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = load atomic i32, i32* %431 monotonic, align 4
  %433 = and i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 0
  %436 = load i32, i32* %435, align 4
  br i1 %434, label %437, label %439

437:                                              ; preds = %430
  %438 = add i32 %436, -1
  store i32 %438, i32* %435, align 4
  br label %439

439:                                              ; preds = %437, %430
  %440 = phi i32 [ %438, %437 ], [ %436, %430 ]
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %443

442:                                              ; preds = %439
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %428) #7
  br label %443

443:                                              ; preds = %20, %427, %439, %442
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  %444 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %445 = icmp eq %"class.WTF::StringImpl"* %444, null
  br i1 %445, label %459, label %446

446:                                              ; preds = %443
  %447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %444, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %448 = load atomic i32, i32* %447 monotonic, align 4
  %449 = and i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %444, i64 0, i32 0
  %452 = load i32, i32* %451, align 4
  br i1 %450, label %453, label %455

453:                                              ; preds = %446
  %454 = add i32 %452, -1
  store i32 %454, i32* %451, align 4
  br label %455

455:                                              ; preds = %453, %446
  %456 = phi i32 [ %454, %453 ], [ %452, %446 ]
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %459

458:                                              ; preds = %455
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %444) #7
  br label %459

459:                                              ; preds = %443, %455, %458
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8NamesMap3SetIDsEEvRKN3WTF12AtomicStringEPKT_(%"class.blink::NamesMap"*, %"class.WTF::AtomicString"* dereferenceable(8), i16*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = alloca %"class.WTF::AtomicString", align 8
  %13 = getelementptr inbounds %"class.blink::NamesMap", %"class.blink::NamesMap"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable"* %13) #7
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %3, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %3 ]
  %22 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %25, align 8
  %26 = icmp eq i32 %21, 0
  br i1 %26, label %443, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  %29 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.WTF::AtomicString"* %10 to i64*
  %31 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  %32 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  %35 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %38 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  %39 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  %41 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  %42 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %44 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  %47 = zext i32 %21 to i64
  br label %48

48:                                               ; preds = %336, %27
  %49 = phi i64 [ 0, %27 ], [ %339, %336 ]
  %50 = phi i32 [ 0, %27 ], [ %338, %336 ]
  %51 = phi i32 [ 0, %27 ], [ %337, %336 ]
  switch i32 %50, label %336 [
    i32 0, label %52
    i32 1, label %64
    i32 2, label %184
    i32 3, label %228
    i32 4, label %236
    i32 5, label %321
    i32 6, label %330
  ]

52:                                               ; preds = %48
  %53 = getelementptr inbounds i16, i16* %2, i64 %49
  %54 = load i16, i16* %53, align 2
  %55 = icmp eq i16 %54, 44
  br i1 %55, label %336, label %56

56:                                               ; preds = %52
  %57 = icmp ult i16 %54, 33
  br i1 %57, label %58, label %59

58:                                               ; preds = %56
  switch i16 %54, label %59 [
    i16 32, label %336
    i16 10, label %336
    i16 9, label %336
    i16 13, label %336
    i16 12, label %336
  ]

59:                                               ; preds = %58, %56
  %60 = icmp eq i16 %54, 58
  %61 = trunc i64 %49 to i32
  %62 = select i1 %60, i32 %51, i32 %61
  %63 = select i1 %60, i32 6, i32 1
  br label %336

64:                                               ; preds = %48
  %65 = getelementptr inbounds i16, i16* %2, i64 %49
  %66 = load i16, i16* %65, align 2
  switch i16 %66, label %143 [
    i16 44, label %67
    i16 58, label %105
  ]

67:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #7
  %68 = zext i32 %51 to i64
  %69 = getelementptr inbounds i16, i16* %2, i64 %68
  %70 = trunc i64 %49 to i32
  %71 = sub i32 %70, %51
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %6, i16* %69, i32 %71) #7
  %72 = load i64, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %42, align 8
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store i64 %72, i64* %37, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %104, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #7
  br label %88

88:                                               ; preds = %84, %87
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #7
  br label %104

104:                                              ; preds = %67, %88, %100, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #7
  call void @_ZN5blink8NamesMap3AddERKN3WTF12AtomicStringES4_(%"class.blink::NamesMap"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4)
  br label %336

105:                                              ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #7
  %106 = zext i32 %51 to i64
  %107 = getelementptr inbounds i16, i16* %2, i64 %106
  %108 = trunc i64 %49 to i32
  %109 = sub i32 %108, %51
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %7, i16* %107, i32 %109) #7
  %110 = load i64, i64* %40, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %39, align 8
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store i64 %110, i64* %37, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %142, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #7
  br label %126

126:                                              ; preds = %122, %125
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #7
  br label %142

142:                                              ; preds = %105, %126, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #7
  br label %336

143:                                              ; preds = %64
  %144 = icmp ult i16 %66, 33
  br i1 %144, label %145, label %336

145:                                              ; preds = %143
  switch i16 %66, label %336 [
    i16 32, label %146
    i16 10, label %146
    i16 9, label %146
    i16 13, label %146
    i16 12, label %146
  ]

146:                                              ; preds = %145, %145, %145, %145, %145
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #7
  %147 = zext i32 %51 to i64
  %148 = getelementptr inbounds i16, i16* %2, i64 %147
  %149 = trunc i64 %49 to i32
  %150 = sub i32 %149, %51
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %8, i16* %148, i32 %150) #7
  %151 = load i64, i64* %46, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store i64 %151, i64* %37, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %183, label %154

154:                                              ; preds = %146
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #7
  br label %167

167:                                              ; preds = %163, %166
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %167
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #7
  br label %183

183:                                              ; preds = %146, %167, %179, %182
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #7
  br label %336

184:                                              ; preds = %48
  %185 = getelementptr inbounds i16, i16* %2, i64 %49
  %186 = load i16, i16* %185, align 2
  switch i16 %186, label %188 [
    i16 44, label %187
    i16 58, label %336
  ]

187:                                              ; preds = %184
  call void @_ZN5blink8NamesMap3AddERKN3WTF12AtomicStringES4_(%"class.blink::NamesMap"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4)
  br label %336

188:                                              ; preds = %184
  %189 = icmp ult i16 %186, 33
  br i1 %189, label %190, label %191

190:                                              ; preds = %188
  switch i16 %186, label %191 [
    i16 32, label %336
    i16 10, label %336
    i16 9, label %336
    i16 13, label %336
    i16 12, label %336
  ]

191:                                              ; preds = %190, %188
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #7
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !2

208:                                              ; preds = %199
  call void @llvm.trap() #7
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %191
  %212 = ptrtoint %"class.WTF::StringImpl"* %192 to i64
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store i64 %212, i64* %37, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %336, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %336

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #7
  br label %336

228:                                              ; preds = %48
  %229 = getelementptr inbounds i16, i16* %2, i64 %49
  %230 = load i16, i16* %229, align 2
  switch i16 %230, label %231 [
    i16 58, label %336
    i16 44, label %335
  ]

231:                                              ; preds = %228
  %232 = icmp ult i16 %230, 33
  %233 = trunc i64 %49 to i32
  br i1 %232, label %234, label %336

234:                                              ; preds = %231
  switch i16 %230, label %235 [
    i16 32, label %336
    i16 10, label %336
    i16 9, label %336
    i16 13, label %336
    i16 12, label %336
  ]

235:                                              ; preds = %234
  br label %336

236:                                              ; preds = %48
  %237 = getelementptr inbounds i16, i16* %2, i64 %49
  %238 = load i16, i16* %237, align 2
  %239 = icmp eq i16 %238, 44
  br i1 %239, label %240, label %278

240:                                              ; preds = %236
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #7
  %241 = zext i32 %51 to i64
  %242 = getelementptr inbounds i16, i16* %2, i64 %241
  %243 = trunc i64 %49 to i32
  %244 = sub i32 %243, %51
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %9, i16* %242, i32 %244) #7
  %245 = load i64, i64* %34, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %33, align 8
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %245, i64* %31, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %277, label %248

248:                                              ; preds = %240
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %246) #7
  br label %261

261:                                              ; preds = %257, %260
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %261
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #7
  br label %277

277:                                              ; preds = %240, %261, %273, %276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #7
  call void @_ZN5blink8NamesMap3AddERKN3WTF12AtomicStringES4_(%"class.blink::NamesMap"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5)
  br label %336

278:                                              ; preds = %236
  %279 = icmp ult i16 %238, 33
  br i1 %279, label %280, label %281

280:                                              ; preds = %278
  switch i16 %238, label %336 [
    i16 32, label %283
    i16 10, label %283
    i16 9, label %283
    i16 13, label %283
    i16 12, label %283
  ]

281:                                              ; preds = %278
  %282 = icmp eq i16 %238, 58
  br i1 %282, label %283, label %336

283:                                              ; preds = %280, %280, %280, %280, %280, %281
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  %284 = zext i32 %51 to i64
  %285 = getelementptr inbounds i16, i16* %2, i64 %284
  %286 = trunc i64 %49 to i32
  %287 = sub i32 %286, %51
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %10, i16* %285, i32 %287) #7
  %288 = load i64, i64* %30, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %288, i64* %31, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %320, label %291

291:                                              ; preds = %283
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %298, label %300

298:                                              ; preds = %291
  %299 = add i32 %297, -1
  store i32 %299, i32* %296, align 4
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %299, %298 ], [ %297, %291 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %289) #7
  br label %304

304:                                              ; preds = %300, %303
  %305 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %306 = icmp eq %"class.WTF::StringImpl"* %305, null
  br i1 %306, label %320, label %307

307:                                              ; preds = %304
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load atomic i32, i32* %308 monotonic, align 4
  %310 = and i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 0
  %313 = load i32, i32* %312, align 4
  br i1 %311, label %314, label %316

314:                                              ; preds = %307
  %315 = add i32 %313, -1
  store i32 %315, i32* %312, align 4
  br label %316

316:                                              ; preds = %314, %307
  %317 = phi i32 [ %315, %314 ], [ %313, %307 ]
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %320

319:                                              ; preds = %316
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %305) #7
  br label %320

320:                                              ; preds = %283, %304, %316, %319
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  br label %336

321:                                              ; preds = %48
  %322 = getelementptr inbounds i16, i16* %2, i64 %49
  %323 = load i16, i16* %322, align 2
  %324 = icmp eq i16 %323, 44
  br i1 %324, label %325, label %326

325:                                              ; preds = %321
  call void @_ZN5blink8NamesMap3AddERKN3WTF12AtomicStringES4_(%"class.blink::NamesMap"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5)
  br label %336

326:                                              ; preds = %321
  %327 = icmp ult i16 %323, 33
  br i1 %327, label %328, label %329

328:                                              ; preds = %326
  switch i16 %323, label %329 [
    i16 32, label %336
    i16 10, label %336
    i16 9, label %336
    i16 13, label %336
    i16 12, label %336
  ]

329:                                              ; preds = %326, %328
  br label %336

330:                                              ; preds = %48
  %331 = getelementptr inbounds i16, i16* %2, i64 %49
  %332 = load i16, i16* %331, align 2
  %333 = icmp eq i16 %332, 44
  %334 = select i1 %333, i32 0, i32 6
  br label %336

335:                                              ; preds = %228
  br label %336

336:                                              ; preds = %228, %335, %184, %280, %145, %143, %58, %58, %58, %58, %58, %52, %329, %328, %328, %328, %328, %328, %281, %231, %235, %234, %234, %234, %234, %234, %227, %224, %211, %190, %190, %190, %190, %190, %330, %59, %325, %277, %320, %187, %104, %183, %142, %48
  %337 = phi i32 [ %51, %48 ], [ %51, %325 ], [ %51, %277 ], [ %51, %320 ], [ %51, %187 ], [ %51, %104 ], [ %51, %142 ], [ %51, %183 ], [ %62, %59 ], [ %51, %228 ], [ %51, %330 ], [ %51, %190 ], [ %51, %190 ], [ %51, %190 ], [ %51, %190 ], [ %51, %190 ], [ %51, %211 ], [ %51, %224 ], [ %51, %227 ], [ %233, %231 ], [ %233, %235 ], [ %51, %234 ], [ %51, %234 ], [ %51, %234 ], [ %51, %234 ], [ %51, %234 ], [ %51, %281 ], [ %51, %328 ], [ %51, %328 ], [ %51, %328 ], [ %51, %328 ], [ %51, %328 ], [ %51, %329 ], [ %51, %52 ], [ %51, %58 ], [ %51, %58 ], [ %51, %58 ], [ %51, %58 ], [ %51, %58 ], [ %51, %143 ], [ %51, %145 ], [ %51, %280 ], [ %51, %184 ], [ %51, %335 ]
  %338 = phi i32 [ %50, %48 ], [ 0, %325 ], [ 0, %277 ], [ 5, %320 ], [ 0, %187 ], [ 0, %104 ], [ 3, %142 ], [ 2, %183 ], [ %63, %59 ], [ 6, %228 ], [ %334, %330 ], [ 2, %190 ], [ 2, %190 ], [ 2, %190 ], [ 2, %190 ], [ 2, %190 ], [ 6, %211 ], [ 6, %224 ], [ 6, %227 ], [ 4, %231 ], [ 4, %235 ], [ 3, %234 ], [ 3, %234 ], [ 3, %234 ], [ 3, %234 ], [ 3, %234 ], [ 4, %281 ], [ 5, %328 ], [ 5, %328 ], [ 5, %328 ], [ 5, %328 ], [ 5, %328 ], [ 6, %329 ], [ 0, %52 ], [ 0, %58 ], [ 0, %58 ], [ 0, %58 ], [ 0, %58 ], [ 0, %58 ], [ 1, %143 ], [ 1, %145 ], [ 4, %280 ], [ 3, %184 ], [ 0, %335 ]
  %339 = add nuw nsw i64 %49, 1
  %340 = icmp eq i64 %339, %47
  br i1 %340, label %341, label %48

341:                                              ; preds = %336
  switch i32 %338, label %427 [
    i32 5, label %424
    i32 1, label %342
    i32 2, label %425
    i32 4, label %383
  ]

342:                                              ; preds = %341
  %343 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %343) #7
  %344 = zext i32 %337 to i64
  %345 = getelementptr inbounds i16, i16* %2, i64 %344
  %346 = sub i32 %21, %337
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %11, i16* %345, i32 %346) #7
  %347 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %348 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %349 = load i64, i64* %348, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %347, align 8
  %350 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %351 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store i64 %349, i64* %350, align 8
  %352 = icmp eq %"class.WTF::StringImpl"* %351, null
  br i1 %352, label %382, label %353

353:                                              ; preds = %342
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %351, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %355 = load atomic i32, i32* %354 monotonic, align 4
  %356 = and i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %351, i64 0, i32 0
  %359 = load i32, i32* %358, align 4
  br i1 %357, label %360, label %362

360:                                              ; preds = %353
  %361 = add i32 %359, -1
  store i32 %361, i32* %358, align 4
  br label %362

362:                                              ; preds = %360, %353
  %363 = phi i32 [ %361, %360 ], [ %359, %353 ]
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %366

365:                                              ; preds = %362
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %351) #7
  br label %366

366:                                              ; preds = %362, %365
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %347, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %382, label %369

369:                                              ; preds = %366
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  br i1 %373, label %376, label %378

376:                                              ; preds = %369
  %377 = add i32 %375, -1
  store i32 %377, i32* %374, align 4
  br label %378

378:                                              ; preds = %376, %369
  %379 = phi i32 [ %377, %376 ], [ %375, %369 ]
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %378
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %367) #7
  br label %382

382:                                              ; preds = %342, %366, %378, %381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %343) #7
  br label %425

383:                                              ; preds = %341
  %384 = bitcast %"class.WTF::AtomicString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %384) #7
  %385 = zext i32 %337 to i64
  %386 = getelementptr inbounds i16, i16* %2, i64 %385
  %387 = sub i32 %21, %337
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %12, i16* %386, i32 %387) #7
  %388 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %389 = bitcast %"class.WTF::AtomicString"* %12 to i64*
  %390 = load i64, i64* %389, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %388, align 8
  %391 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  %392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %390, i64* %391, align 8
  %393 = icmp eq %"class.WTF::StringImpl"* %392, null
  br i1 %393, label %423, label %394

394:                                              ; preds = %383
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = load atomic i32, i32* %395 monotonic, align 4
  %397 = and i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 0
  %400 = load i32, i32* %399, align 4
  br i1 %398, label %401, label %403

401:                                              ; preds = %394
  %402 = add i32 %400, -1
  store i32 %402, i32* %399, align 4
  br label %403

403:                                              ; preds = %401, %394
  %404 = phi i32 [ %402, %401 ], [ %400, %394 ]
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %407

406:                                              ; preds = %403
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %392) #7
  br label %407

407:                                              ; preds = %403, %406
  %408 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %388, align 8
  %409 = icmp eq %"class.WTF::StringImpl"* %408, null
  br i1 %409, label %423, label %410

410:                                              ; preds = %407
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = load atomic i32, i32* %411 monotonic, align 4
  %413 = and i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 0
  %416 = load i32, i32* %415, align 4
  br i1 %414, label %417, label %419

417:                                              ; preds = %410
  %418 = add i32 %416, -1
  store i32 %418, i32* %415, align 4
  br label %419

419:                                              ; preds = %417, %410
  %420 = phi i32 [ %418, %417 ], [ %416, %410 ]
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %423

422:                                              ; preds = %419
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %408) #7
  br label %423

423:                                              ; preds = %383, %407, %419, %422
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %384) #7
  br label %424

424:                                              ; preds = %341, %423
  br label %425

425:                                              ; preds = %382, %341, %424
  %426 = phi %"class.WTF::AtomicString"* [ %5, %424 ], [ %4, %341 ], [ %4, %382 ]
  call void @_ZN5blink8NamesMap3AddERKN3WTF12AtomicStringES4_(%"class.blink::NamesMap"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %426)
  br label %427

427:                                              ; preds = %425, %341
  %428 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %429 = icmp eq %"class.WTF::StringImpl"* %428, null
  br i1 %429, label %443, label %430

430:                                              ; preds = %427
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = load atomic i32, i32* %431 monotonic, align 4
  %433 = and i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 0
  %436 = load i32, i32* %435, align 4
  br i1 %434, label %437, label %439

437:                                              ; preds = %430
  %438 = add i32 %436, -1
  store i32 %438, i32* %435, align 4
  br label %439

439:                                              ; preds = %437, %430
  %440 = phi i32 [ %438, %437 ], [ %436, %430 ]
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %443

442:                                              ; preds = %439
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %428) #7
  br label %443

443:                                              ; preds = %20, %427, %439, %442
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  %444 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %445 = icmp eq %"class.WTF::StringImpl"* %444, null
  br i1 %445, label %459, label %446

446:                                              ; preds = %443
  %447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %444, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %448 = load atomic i32, i32* %447 monotonic, align 4
  %449 = and i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %444, i64 0, i32 0
  %452 = load i32, i32* %451, align 4
  br i1 %450, label %453, label %455

453:                                              ; preds = %446
  %454 = add i32 %452, -1
  store i32 %454, i32* %451, align 4
  br label %455

455:                                              ; preds = %453, %446
  %456 = phi i32 [ %454, %453 ], [ %452, %446 ]
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %459

458:                                              ; preds = %455
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %444) #7
  br label %459

459:                                              ; preds = %443, %455, %458
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8NamesMap3AddERKN3WTF12AtomicStringES4_(%"class.blink::NamesMap"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::optional", align 8
  %5 = alloca %"class.absl::optional", align 8
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::NamesMap", %"class.blink::NamesMap"* %0, i64 0, i32 0, i32 0
  %8 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERKS1_S7_EENS_18HashTableAddResultISH_S8_EEOT0_OT1_(%"class.WTF::HashTable"* %7, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.absl::optional"* nonnull dereferenceable(16) %4) #7
  %9 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %8, 0
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %8, 1
  %11 = load i8, i8* %6, align 8, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %14, align 8
  %16 = icmp eq %"class.blink::SpaceSplitString::Data"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %15, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #7
  %19 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  call void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"* nonnull %15) #7
  %23 = bitcast %"class.blink::SpaceSplitString::Data"* %15 to i8*
  call void @free(i8* %23) #7
  br label %24

24:                                               ; preds = %22, %17, %13
  store i8 0, i8* %6, align 8
  br label %25

25:                                               ; preds = %3, %24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  %26 = and i8 %10, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %50, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #7
  store i8 1, i8* %29, align 8, !alias.scope !4
  %30 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = bitcast %"class.blink::SpaceSplitString"* %30 to i64*
  store i64 0, i64* %31, align 8, !alias.scope !4
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0
  %34 = call dereferenceable(16) %"class.absl::optional_internal::optional_data"* @_ZN4absl17optional_internal13optional_dataIN5blink16SpaceSplitStringELb0EEaSEOS4_(%"class.absl::optional_internal::optional_data"* %32, %"class.absl::optional_internal::optional_data"* nonnull dereferenceable(16) %33) #7
  %35 = load i8, i8* %29, align 8, !range !3
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %38, align 8
  %40 = icmp eq %"class.blink::SpaceSplitString::Data"* %39, null
  br i1 %40, label %48, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %39, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #7
  %43 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  call void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"* nonnull %39) #7
  %47 = bitcast %"class.blink::SpaceSplitString::Data"* %39 to i8*
  call void @free(i8* %47) #7
  br label %48

48:                                               ; preds = %46, %41, %37
  store i8 0, i8* %29, align 8
  br label %49

49:                                               ; preds = %48, %28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #7
  br label %50

50:                                               ; preds = %25, %49
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i8, i8* %51, align 8, !range !3
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #8
  unreachable

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink16SpaceSplitString3AddERKN3WTF12AtomicStringE(%"class.blink::SpaceSplitString"* %56, %"class.WTF::AtomicString"* dereferenceable(8) %2) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink16SpaceSplitString3AddERKN3WTF12AtomicStringE(%"class.blink::SpaceSplitString"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8NamesMap3GetERKN3WTF12AtomicStringE(%"class.absl::optional"* noalias nocapture sret, %"class.blink::NamesMap"* nocapture readonly, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NamesMap", %"class.blink::NamesMap"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.blink::NamesMap", %"class.blink::NamesMap"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %60, label %9

9:                                                ; preds = %3
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = lshr i32 %15, 8
  %17 = and i32 %16, %10
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %18
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %60, label %23

23:                                               ; preds = %9
  %24 = xor i32 %16, -1
  %25 = lshr i32 %15, 31
  %26 = add nsw i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %47, %23
  %38 = phi %"struct.WTF::KeyValuePair"* [ %19, %23 ], [ %52, %47 ]
  %39 = phi i64 [ %18, %23 ], [ %51, %47 ]
  %40 = phi i64 [ 0, %23 ], [ %49, %47 ]
  %41 = bitcast %"struct.WTF::KeyValuePair"* %38 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = icmp ne i8* %42, inttoptr (i64 -1 to i8*)
  %44 = bitcast i8* %42 to %"class.WTF::StringImpl"*
  %45 = icmp eq %"class.WTF::StringImpl"* %13, %44
  %46 = and i1 %43, %45
  br i1 %46, label %56, label %47

47:                                               ; preds = %37
  %48 = icmp eq i64 %40, 0
  %49 = select i1 %48, i64 %36, i64 %40
  %50 = add i64 %49, %39
  %51 = and i64 %50, %11
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %51
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %60, label %37

56:                                               ; preds = %37
  %57 = icmp eq %"struct.WTF::KeyValuePair"* %38, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = zext i32 %8 to i64
  br label %63

60:                                               ; preds = %47, %56, %9, %3
  %61 = zext i32 %8 to i64
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  br label %63

63:                                               ; preds = %58, %60
  %64 = phi i64 [ %59, %58 ], [ %61, %60 ]
  %65 = phi %"struct.WTF::KeyValuePair"* [ %38, %58 ], [ %62, %60 ]
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %64
  %67 = icmp eq %"struct.WTF::KeyValuePair"* %65, %66
  %68 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %67, label %80, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #7
  %71 = load i8, i8* %70, align 8, !range !3
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %82, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %74, align 8
  %76 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.blink::SpaceSplitString::Data"* %75, %"class.blink::SpaceSplitString::Data"** %76, align 8
  %77 = icmp eq %"class.blink::SpaceSplitString::Data"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %75, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %79) #7
  br label %80

80:                                               ; preds = %63, %73, %78
  %81 = phi i8 [ 1, %78 ], [ 1, %73 ], [ 0, %63 ]
  store i8 %81, i8* %68, align 8
  br label %82

82:                                               ; preds = %80, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair"* %3, null
  br i1 %4, label %59, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %55, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %52, %9
  %12 = phi i64 [ 0, %9 ], [ %53, %52 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12
  %14 = bitcast %"struct.WTF::KeyValuePair"* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, inttoptr (i64 -1 to i8*)
  br i1 %16, label %52, label %17

17:                                               ; preds = %11
  %18 = bitcast i8* %15 to %"class.WTF::StringImpl"*
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %23, align 8
  %25 = icmp eq %"class.blink::SpaceSplitString::Data"* %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %24, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %27) #7
  %28 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  tail call void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"* nonnull %24) #7
  %32 = bitcast %"class.blink::SpaceSplitString::Data"* %24 to i8*
  tail call void @free(i8* %32) #7
  br label %33

33:                                               ; preds = %31, %26, %22
  store i8 0, i8* %19, align 8
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  br label %36

36:                                               ; preds = %33, %17
  %37 = phi %"class.WTF::StringImpl"* [ %35, %33 ], [ %18, %17 ]
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #7
  br label %52

52:                                               ; preds = %51, %48, %36, %11
  %53 = add nuw nsw i64 %12, 1
  %54 = icmp eq i64 %53, %10
  br i1 %54, label %55, label %11

55:                                               ; preds = %52, %5
  %56 = bitcast %"struct.WTF::KeyValuePair"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #7
  %57 = bitcast %"class.WTF::HashTable"* %0 to i64*
  store atomic i64 0, i64* %57 monotonic, align 8
  store i32 0, i32* %6, align 8
  %58 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  store i32 0, i32* %58, align 4
  br label %59

59:                                               ; preds = %1, %55
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.absl::optional_internal::optional_data"* @_ZN4absl17optional_internal13optional_dataIN5blink16SpaceSplitStringELb0EEaSEOS4_(%"class.absl::optional_internal::optional_data"*, %"class.absl::optional_internal::optional_data"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.blink::SpaceSplitString", %"class.blink::SpaceSplitString"* %7, i64 0, i32 0, i32 0
  %13 = bitcast %"class.blink::SpaceSplitString"* %7 to i64*
  %14 = load i64, i64* %13, align 8
  br i1 %10, label %27, label %15

15:                                               ; preds = %6
  store %"class.blink::SpaceSplitString::Data"* null, %"class.blink::SpaceSplitString::Data"** %12, align 8
  %16 = bitcast %"class.blink::SpaceSplitString"* %11 to i64*
  %17 = getelementptr inbounds %"class.blink::SpaceSplitString", %"class.blink::SpaceSplitString"* %11, i64 0, i32 0, i32 0
  %18 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %17, align 8
  store i64 %14, i64* %16, align 8
  %19 = icmp eq %"class.blink::SpaceSplitString::Data"* %18, null
  br i1 %19, label %45, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #7
  %22 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %45

25:                                               ; preds = %20
  tail call void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"* nonnull %18) #7
  %26 = bitcast %"class.blink::SpaceSplitString::Data"* %18 to i8*
  tail call void @free(i8* %26) #7
  br label %45

27:                                               ; preds = %6
  %28 = bitcast %"class.blink::SpaceSplitString"* %11 to i64*
  store i64 %14, i64* %28, align 8
  store %"class.blink::SpaceSplitString::Data"* null, %"class.blink::SpaceSplitString::Data"** %12, align 8
  store i8 1, i8* %8, align 8
  br label %45

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !3
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %34, align 8
  %36 = icmp eq %"class.blink::SpaceSplitString::Data"* %35, null
  br i1 %36, label %44, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %35, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %38) #7
  %39 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  tail call void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"* nonnull %35) #7
  %43 = bitcast %"class.blink::SpaceSplitString::Data"* %35 to i8*
  tail call void @free(i8* %43) #7
  br label %44

44:                                               ; preds = %42, %37, %33
  store i8 0, i8* %30, align 8
  br label %45

45:                                               ; preds = %44, %29, %27, %25, %20, %15
  ret %"class.absl::optional_internal::optional_data"* %0
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"*, i8*, i32) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"*, i16*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERKS1_S7_EENS_18HashTableAddResultISH_S8_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.absl::optional"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %97, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %152, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %53, null
  br i1 %63, label %97, label %64

64:                                               ; preds = %62
  %65 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8, !noalias !7
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8, !noalias !7
  %68 = ptrtoint %"class.WTF::StringImpl"* %67 to i64
  %69 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %69, label %87, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4, !noalias !7
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %87

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %77 = load i32, i32* %76, align 4, !noalias !7
  %78 = zext i32 %77 to i33
  %79 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %78, i33 1) #7
  %80 = extractvalue { i33, i1 } %79, 1
  %81 = extractvalue { i33, i1 } %79, 0
  %82 = icmp slt i33 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %85, !prof !2

84:                                               ; preds = %75
  tail call void @llvm.trap() #7, !noalias !7
  unreachable

85:                                               ; preds = %75
  %86 = trunc i33 %81 to i32
  store i32 %86, i32* %76, align 4, !noalias !7
  br label %87

87:                                               ; preds = %64, %70, %85
  %88 = bitcast %"struct.WTF::KeyValuePair"* %53 to i64*
  store i64 %68, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %53, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #7
  %90 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, 2147483647
  %93 = and i32 %92, 2147483647
  %94 = and i32 %91, -2147483648
  %95 = or i32 %93, %94
  store i32 %95, i32* %90, align 8
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %97

97:                                               ; preds = %10, %62, %87
  %98 = phi %"class.WTF::StringImpl"* [ %96, %87 ], [ %17, %62 ], [ %17, %10 ]
  %99 = phi %"struct.WTF::KeyValuePair"* [ %53, %87 ], [ %58, %62 ], [ %23, %10 ]
  %100 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %100, label %118, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = zext i32 %108 to i33
  %110 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #7
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !2

115:                                              ; preds = %106
  tail call void @llvm.trap() #7
  unreachable

116:                                              ; preds = %106
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %107, align 4
  br label %118

118:                                              ; preds = %116, %101, %97
  %119 = ptrtoint %"class.WTF::StringImpl"* %98 to i64
  %120 = bitcast %"struct.WTF::KeyValuePair"* %99 to i64*
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %99, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  store i64 %119, i64* %120, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #7
  br label %137

137:                                              ; preds = %118, %133, %136
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %99, i64 0, i32 1, i32 0
  %139 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0
  %140 = tail call dereferenceable(16) %"class.absl::optional_internal::optional_data"* @_ZN4absl17optional_internal13optional_dataIN5blink16SpaceSplitStringELb0EEaSEOS4_(%"class.absl::optional_internal::optional_data"* %138, %"class.absl::optional_internal::optional_data"* dereferenceable(16) %139) #7
  %141 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %142 = load i32, i32* %141, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %141, align 4
  %144 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, %143
  %147 = shl i32 %146, 1
  %148 = load i32, i32* %12, align 8
  %149 = icmp ult i32 %147, %148
  br i1 %149, label %152, label %150

150:                                              ; preds = %137
  %151 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %99)
  br label %152

152:                                              ; preds = %49, %137, %150
  %153 = phi i8 [ 1, %137 ], [ 1, %150 ], [ 0, %49 ]
  %154 = phi %"struct.WTF::KeyValuePair"* [ %99, %137 ], [ %151, %150 ], [ %42, %49 ]
  %155 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %154, 0
  %156 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %155, i8 %153, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %156
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #7
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #7
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #7
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([126 x i8], [126 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN4absl8optionalIN5blink16SpaceSplitStringEEEEEEEPKcv, i64 0, i64 0)) #7
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %31
  %39 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8, !noalias !10
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %39, i64 0, i32 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %64, %38
  %42 = phi i64 [ 0, %38 ], [ %67, %64 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %42
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8, !noalias !10
  %45 = ptrtoint %"class.WTF::StringImpl"* %44 to i64
  %46 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4, !noalias !10
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %54 = load i32, i32* %53, align 4, !noalias !10
  %55 = zext i32 %54 to i33
  %56 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #7
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  call void @llvm.trap() #7, !noalias !10
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4, !noalias !10
  br label %64

64:                                               ; preds = %62, %47, %41
  %65 = bitcast %"struct.WTF::KeyValuePair"* %43 to i64*
  store i64 %45, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %42, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #7
  %67 = add nuw nsw i64 %42, 1
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %41

69:                                               ; preds = %64, %31
  %70 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #7
  ret %"struct.WTF::KeyValuePair"* %70
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %92

24:                                               ; preds = %219
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %220, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %223, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %221, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N4absl8optionalIN5blink16SpaceSplitStringEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable"* nonnull %5)
  %35 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, -2147483648
  store i32 %37, i32* %35, align 8
  %38 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %39 = icmp eq %"struct.WTF::KeyValuePair"* %38, null
  br i1 %39, label %91, label %40, !prof !13

40:                                               ; preds = %28
  %41 = load i32, i32* %8, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %89, label %43

43:                                               ; preds = %40
  %44 = zext i32 %41 to i64
  br label %45

45:                                               ; preds = %86, %43
  %46 = phi i64 [ 0, %43 ], [ %87, %86 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %46
  %48 = bitcast %"struct.WTF::KeyValuePair"* %47 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, inttoptr (i64 -1 to i8*)
  br i1 %50, label %86, label %51

51:                                               ; preds = %45
  %52 = bitcast i8* %49 to %"class.WTF::StringImpl"*
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %46, i32 1, i32 0, i32 0, i32 0, i32 0
  %54 = load i8, i8* %53, align 8, !range !3
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %70, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %46, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %57, align 8
  %59 = icmp eq %"class.blink::SpaceSplitString::Data"* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %58, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #7
  %62 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  call void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"* nonnull %58) #7
  %66 = bitcast %"class.blink::SpaceSplitString::Data"* %58 to i8*
  call void @free(i8* %66) #7
  br label %67

67:                                               ; preds = %65, %60, %56
  store i8 0, i8* %53, align 8
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  br label %70

70:                                               ; preds = %67, %51
  %71 = phi %"class.WTF::StringImpl"* [ %69, %67 ], [ %52, %51 ]
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #7
  br label %86

86:                                               ; preds = %85, %82, %70, %45
  %87 = add nuw nsw i64 %46, 1
  %88 = icmp eq i64 %87, %44
  br i1 %88, label %89, label %45

89:                                               ; preds = %86, %40
  %90 = bitcast %"struct.WTF::KeyValuePair"* %38 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %90) #7
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %7, align 8
  br label %91

91:                                               ; preds = %28, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret %"struct.WTF::KeyValuePair"* %33

92:                                               ; preds = %21, %219
  %93 = phi i64 [ %220, %219 ], [ %23, %21 ]
  %94 = phi i32 [ %221, %219 ], [ %13, %21 ]
  %95 = phi %"struct.WTF::KeyValuePair"* [ %222, %219 ], [ %22, %21 ]
  %96 = phi %"struct.WTF::KeyValuePair"* [ %223, %219 ], [ null, %21 ]
  %97 = phi i32 [ %224, %219 ], [ 0, %21 ]
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 %98
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %99, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = bitcast %"struct.WTF::KeyValuePair"* %99 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = inttoptr i64 %102 to %"class.WTF::StringImpl"*
  switch i64 %102, label %104 [
    i64 -1, label %219
    i64 0, label %219
  ]

104:                                              ; preds = %92
  %105 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %106 = load i32, i32* %8, align 8
  %107 = add i32 %106, -1
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = lshr i32 %110, 8
  %112 = and i32 %111, %107
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %105, i64 %113
  %115 = ptrtoint %"struct.WTF::KeyValuePair"* %114 to i64
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %135, label %119

119:                                              ; preds = %104
  %120 = xor i32 %111, -1
  %121 = lshr i32 %110, 31
  %122 = add nsw i32 %121, %120
  %123 = shl i32 %122, 12
  %124 = xor i32 %123, %122
  %125 = lshr i32 %124, 7
  %126 = xor i32 %125, %124
  %127 = shl i32 %126, 2
  %128 = xor i32 %127, %126
  %129 = lshr i32 %128, 20
  %130 = xor i32 %129, %128
  %131 = or i32 %130, 1
  %132 = zext i32 %131 to i64
  br label %141

133:                                              ; preds = %153
  %134 = ptrtoint %"struct.WTF::KeyValuePair"* %159 to i64
  br label %135

135:                                              ; preds = %133, %104
  %136 = phi i64 [ %115, %104 ], [ %134, %133 ]
  %137 = phi %"struct.WTF::KeyValuePair"* [ null, %104 ], [ %154, %133 ]
  %138 = icmp eq %"struct.WTF::KeyValuePair"* %137, null
  %139 = ptrtoint %"struct.WTF::KeyValuePair"* %137 to i64
  %140 = select i1 %138, i64 %136, i64 %139
  br label %164

141:                                              ; preds = %153, %119
  %142 = phi %"struct.WTF::KeyValuePair"* [ null, %119 ], [ %154, %153 ]
  %143 = phi i64 [ %115, %119 ], [ %160, %153 ]
  %144 = phi %"struct.WTF::KeyValuePair"* [ %114, %119 ], [ %159, %153 ]
  %145 = phi i64 [ %113, %119 ], [ %158, %153 ]
  %146 = phi i64 [ 0, %119 ], [ %156, %153 ]
  %147 = bitcast %"struct.WTF::KeyValuePair"* %144 to i8**
  %148 = load i8*, i8** %147, align 8
  %149 = icmp eq i8* %148, inttoptr (i64 -1 to i8*)
  br i1 %149, label %153, label %150

150:                                              ; preds = %141
  %151 = bitcast i8* %148 to %"class.WTF::StringImpl"*
  %152 = icmp eq %"class.WTF::StringImpl"* %103, %151
  br i1 %152, label %164, label %153

153:                                              ; preds = %150, %141
  %154 = phi %"struct.WTF::KeyValuePair"* [ %142, %150 ], [ %144, %141 ]
  %155 = icmp eq i64 %146, 0
  %156 = select i1 %155, i64 %132, i64 %146
  %157 = add i64 %156, %145
  %158 = and i64 %157, %108
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %105, i64 %158
  %160 = ptrtoint %"struct.WTF::KeyValuePair"* %159 to i64
  %161 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %159, i64 0, i32 0, i32 0, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %133, label %141

164:                                              ; preds = %150, %135
  %165 = phi i64 [ %140, %135 ], [ %143, %150 ]
  %166 = inttoptr i64 %165 to %"struct.WTF::KeyValuePair"*
  %167 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %166, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %168 = load i8, i8* %167, align 8, !range !3
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %182, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %166, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %172 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %171, align 8
  %173 = icmp eq %"class.blink::SpaceSplitString::Data"* %172, null
  br i1 %173, label %181, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %172, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %175) #7
  %176 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %172, i64 0, i32 0, i32 0, i32 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %181

179:                                              ; preds = %174
  tail call void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"* nonnull %172) #7
  %180 = bitcast %"class.blink::SpaceSplitString::Data"* %172 to i8*
  tail call void @free(i8* %180) #7
  br label %181

181:                                              ; preds = %179, %174, %170
  store i8 0, i8* %167, align 8
  br label %182

182:                                              ; preds = %181, %164
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %166, i64 0, i32 0, i32 0, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #7
  br label %199

199:                                              ; preds = %182, %195, %198
  %200 = load i64, i64* %101, align 8
  %201 = inttoptr i64 %165 to i64*
  store i64 %200, i64* %201, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %100, align 8
  %202 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 %98, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 16, i1 false) #7
  %203 = load i8, i8* %202, align 8, !range !3
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %212, label %205

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 %98, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %207 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %166, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %208 = getelementptr inbounds %"class.blink::SpaceSplitString", %"class.blink::SpaceSplitString"* %206, i64 0, i32 0, i32 0
  %209 = bitcast %"class.blink::SpaceSplitString"* %206 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.blink::SpaceSplitString"* %207 to i64*
  store i64 %210, i64* %211, align 8
  store %"class.blink::SpaceSplitString::Data"* null, %"class.blink::SpaceSplitString::Data"** %208, align 8
  store i8 1, i8* %167, align 8
  br label %212

212:                                              ; preds = %199, %205
  %213 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %213, i64 %98
  %215 = icmp eq %"struct.WTF::KeyValuePair"* %214, %3
  %216 = select i1 %215, %"struct.WTF::KeyValuePair"* %166, %"struct.WTF::KeyValuePair"* %96
  %217 = load i32, i32* %12, align 8
  %218 = ptrtoint %"struct.WTF::KeyValuePair"* %213 to i64
  br label %219

219:                                              ; preds = %92, %92, %212
  %220 = phi i64 [ %93, %92 ], [ %218, %212 ], [ %93, %92 ]
  %221 = phi i32 [ %94, %92 ], [ %217, %212 ], [ %94, %92 ]
  %222 = phi %"struct.WTF::KeyValuePair"* [ %95, %92 ], [ %213, %212 ], [ %95, %92 ]
  %223 = phi %"struct.WTF::KeyValuePair"* [ %96, %92 ], [ %216, %212 ], [ %96, %92 ]
  %224 = add i32 %97, 1
  %225 = icmp eq i32 %224, %221
  br i1 %225, label %24, label %92
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4absl13make_optionalIN5blink16SpaceSplitStringEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_: argument 0"}
!6 = distinct !{!6, !"_ZN4absl13make_optionalIN5blink16SpaceSplitStringEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_12AtomicStringEEENS1_IN4absl8optionalIN5blink16SpaceSplitStringEEEEEE10EmptyValueEv: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_12AtomicStringEEENS1_IN4absl8optionalIN5blink16SpaceSplitStringEEEEEE10EmptyValueEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_12AtomicStringEEENS1_IN4absl8optionalIN5blink16SpaceSplitStringEEEEEE10EmptyValueEv: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_12AtomicStringEEENS1_IN4absl8optionalIN5blink16SpaceSplitStringEEEEEE10EmptyValueEv"}
!13 = !{!"branch_weights", i32 2000, i32 1}
