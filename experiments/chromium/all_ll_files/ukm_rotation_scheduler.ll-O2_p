; ModuleID = '../../components/ukm/ukm_rotation_scheduler.cc'
source_filename = "../../components/ukm/ukm_rotation_scheduler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ukm::UkmRotationScheduler" = type { %"class.metrics::MetricsRotationScheduler" }
%"class.metrics::MetricsRotationScheduler" = type { %"class.metrics::MetricsScheduler.base", i8, i8, %"class.base::RepeatingCallback.10" }
%"class.metrics::MetricsScheduler.base" = type <{ i32 (...)**, %"class.base::RepeatingCallback", %"class.base::OneShotTimer", %"class.base::TimeDelta", i8, i8 }>
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.1 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.4", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::RepeatingCallback.10" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.16", [4 x i8] }>
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i32 }

@_ZTVN3ukm20UkmRotationSchedulerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ukm::UkmRotationScheduler"*)* @_ZN3ukm20UkmRotationSchedulerD2Ev to i8*), i8* bitcast (void (%"class.ukm::UkmRotationScheduler"*)* @_ZN3ukm20UkmRotationSchedulerD0Ev to i8*), i8* bitcast (void (%"class.metrics::MetricsRotationScheduler"*)* @_ZN7metrics24MetricsRotationScheduler11TriggerTaskEv to i8*), i8* bitcast (void (%"class.ukm::UkmRotationScheduler"*, i32)* @_ZN3ukm20UkmRotationScheduler22LogMetricsInitSequenceEN7metrics24MetricsRotationScheduler12InitSequenceE to i8*)] }, align 8
@.str = private unnamed_addr constant [17 x i8] c"UKM.InitSequence\00", align 1
@_ZZN3ukm20UkmRotationScheduler22LogMetricsInitSequenceEN7metrics24MetricsRotationScheduler12InitSequenceEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3ukm20UkmRotationSchedulerC1ERKN4base17RepeatingCallbackIFvvEEEbRKNS2_IFNS1_9TimeDeltaEvEEE = hidden unnamed_addr alias void (%"class.ukm::UkmRotationScheduler"*, %"class.base::RepeatingCallback"*, i1, %"class.base::RepeatingCallback.10"*), void (%"class.ukm::UkmRotationScheduler"*, %"class.base::RepeatingCallback"*, i1, %"class.base::RepeatingCallback.10"*)* @_ZN3ukm20UkmRotationSchedulerC2ERKN4base17RepeatingCallbackIFvvEEEbRKNS2_IFNS1_9TimeDeltaEvEEE
@_ZN3ukm20UkmRotationSchedulerD1Ev = hidden unnamed_addr alias void (%"class.ukm::UkmRotationScheduler"*), void (%"class.ukm::UkmRotationScheduler"*)* @_ZN3ukm20UkmRotationSchedulerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3ukm20UkmRotationSchedulerC2ERKN4base17RepeatingCallbackIFvvEEEbRKNS2_IFNS1_9TimeDeltaEvEEE(%"class.ukm::UkmRotationScheduler"*, %"class.base::RepeatingCallback"* dereferenceable(8), i1 zeroext, %"class.base::RepeatingCallback.10"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.ukm::UkmRotationScheduler", %"class.ukm::UkmRotationScheduler"* %0, i64 0, i32 0
  tail call void @_ZN7metrics24MetricsRotationSchedulerC2ERKN4base17RepeatingCallbackIFvvEEERKNS2_IFNS1_9TimeDeltaEvEEEb(%"class.metrics::MetricsRotationScheduler"* %5, %"class.base::RepeatingCallback"* dereferenceable(8) %1, %"class.base::RepeatingCallback.10"* dereferenceable(8) %3, i1 zeroext %2) #4
  %6 = getelementptr inbounds %"class.ukm::UkmRotationScheduler", %"class.ukm::UkmRotationScheduler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3ukm20UkmRotationSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  ret void
}

declare void @_ZN7metrics24MetricsRotationSchedulerC2ERKN4base17RepeatingCallbackIFvvEEERKNS2_IFNS1_9TimeDeltaEvEEEb(%"class.metrics::MetricsRotationScheduler"*, %"class.base::RepeatingCallback"* dereferenceable(8), %"class.base::RepeatingCallback.10"* dereferenceable(8), i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7metrics24MetricsRotationSchedulerD2Ev(%"class.metrics::MetricsRotationScheduler"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3ukm20UkmRotationSchedulerD2Ev(%"class.ukm::UkmRotationScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ukm::UkmRotationScheduler", %"class.ukm::UkmRotationScheduler"* %0, i64 0, i32 0
  tail call void @_ZN7metrics24MetricsRotationSchedulerD2Ev(%"class.metrics::MetricsRotationScheduler"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3ukm20UkmRotationSchedulerD0Ev(%"class.ukm::UkmRotationScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ukm::UkmRotationScheduler", %"class.ukm::UkmRotationScheduler"* %0, i64 0, i32 0
  tail call void @_ZN7metrics24MetricsRotationSchedulerD2Ev(%"class.metrics::MetricsRotationScheduler"* %2) #4
  %3 = bitcast %"class.ukm::UkmRotationScheduler"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3ukm20UkmRotationScheduler22LogMetricsInitSequenceEN7metrics24MetricsRotationScheduler12InitSequenceE(%"class.ukm::UkmRotationScheduler"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %3 = load atomic i64, i64* @_ZZN3ukm20UkmRotationScheduler22LogMetricsInitSequenceEN7metrics24MetricsRotationScheduler12InitSequenceEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %4 = inttoptr i64 %3 to %"class.base::HistogramBase"*
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 1, i32 2, i32 3, i32 1) #4
  %8 = ptrtoint %"class.base::HistogramBase"* %7 to i64
  store atomic i64 %8, i64* @_ZZN3ukm20UkmRotationScheduler22LogMetricsInitSequenceEN7metrics24MetricsRotationScheduler12InitSequenceEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.base::HistogramBase"* [ %4, %2 ], [ %7, %6 ]
  %11 = bitcast %"class.base::HistogramBase"* %10 to void (%"class.base::HistogramBase"*, i32)***
  %12 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %12, i64 6
  %14 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %13, align 8
  tail call void %14(%"class.base::HistogramBase"* %10, i32 %1) #4
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN7metrics24MetricsRotationScheduler11TriggerTaskEv(%"class.metrics::MetricsRotationScheduler"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
