; ModuleID = '../../media/audio/scoped_task_runner_observer.cc'
source_filename = "../../media/audio/scoped_task_runner_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::ScopedTaskRunnerObserver" = type { %"class.base::CurrentThread::DestructionObserver", %class.scoped_refptr }
%"class.base::CurrentThread::DestructionObserver" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1, i8, [7 x i8] }>
%class.scoped_refptr.1 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.base::CurrentThread" = type { %"class.base::sequence_manager::internal::SequenceManagerImpl"* }
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.5", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>

$_ZN4base8internal7InvokerINS0_9BindStateIMN5media24ScopedTaskRunnerObserverEFvbPNS_13WaitableEventEEJNS0_17UnretainedWrapperIS4_EEbS6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5media24ScopedTaskRunnerObserverEFvbPNS_13WaitableEventEEJNS0_17UnretainedWrapperIS3_EEbS5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN5media24ScopedTaskRunnerObserverE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.media::ScopedTaskRunnerObserver"*)* @_ZN5media24ScopedTaskRunnerObserverD2Ev to i8*), i8* bitcast (void (%"class.media::ScopedTaskRunnerObserver"*)* @_ZN5media24ScopedTaskRunnerObserverD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"ObserveLoopDestruction\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"../../media/audio/scoped_task_runner_observer.cc\00", align 1

@_ZN5media24ScopedTaskRunnerObserverD1Ev = hidden unnamed_addr alias void (%"class.media::ScopedTaskRunnerObserver"*), void (%"class.media::ScopedTaskRunnerObserver"*)* @_ZN5media24ScopedTaskRunnerObserverD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media24ScopedTaskRunnerObserverC2ERK13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.media::ScopedTaskRunnerObserver"*, %class.scoped_refptr* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::ScopedTaskRunnerObserver", %"class.media::ScopedTaskRunnerObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media24ScopedTaskRunnerObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %5 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %6 = getelementptr inbounds %"class.media::ScopedTaskRunnerObserver", %"class.media::ScopedTaskRunnerObserver"* %0, i64 0, i32 1, i32 0
  store %"class.base::SingleThreadTaskRunner"* %5, %"class.base::SingleThreadTaskRunner"** %6, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %5, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %2, %8
  tail call void @_ZN5media24ScopedTaskRunnerObserver22ObserveLoopDestructionEbPN4base13WaitableEventE(%"class.media::ScopedTaskRunnerObserver"* %0, i1 zeroext true, %"class.base::WaitableEvent"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media24ScopedTaskRunnerObserver22ObserveLoopDestructionEbPN4base13WaitableEventE(%"class.media::ScopedTaskRunnerObserver"*, i1 zeroext, %"class.base::WaitableEvent"*) #0 align 2 {
  %4 = alloca %"class.base::CurrentThread", align 8
  %5 = alloca %"class.base::WaitableEvent", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.media::ScopedTaskRunnerObserver", %"class.media::ScopedTaskRunnerObserver"* %0, i64 0, i32 1, i32 0
  %9 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %8, align 8
  %10 = bitcast %"class.base::SingleThreadTaskRunner"* %9 to %"class.base::SequencedTaskRunner"*
  %11 = bitcast %"class.base::SingleThreadTaskRunner"* %9 to i1 (%"class.base::SequencedTaskRunner"*)***
  %12 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %12, i64 5
  %14 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.base::SequencedTaskRunner"* %10) #8
  br i1 %15, label %16, label %24

16:                                               ; preds = %3
  %17 = bitcast %"class.base::CurrentThread"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.base::CurrentThread", %"class.base::CurrentThread"* %4, i64 0, i32 0
  %19 = tail call %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base13CurrentThread3GetEv() #8
  store %"class.base::sequence_manager::internal::SequenceManagerImpl"* %19, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.media::ScopedTaskRunnerObserver", %"class.media::ScopedTaskRunnerObserver"* %0, i64 0, i32 0
  br i1 %1, label %21, label %22

21:                                               ; preds = %16
  call void @_ZN4base13CurrentThread22AddDestructionObserverEPNS0_19DestructionObserverE(%"class.base::CurrentThread"* nonnull %4, %"class.base::CurrentThread::DestructionObserver"* %20) #8
  br label %23

22:                                               ; preds = %16
  call void @_ZN4base13CurrentThread25RemoveDestructionObserverEPNS0_19DestructionObserverE(%"class.base::CurrentThread"* nonnull %4, %"class.base::CurrentThread::DestructionObserver"* %20) #8
  br label %23

23:                                               ; preds = %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %47

24:                                               ; preds = %3
  %25 = zext i1 %1 to i8
  %26 = bitcast %"class.base::WaitableEvent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8
  %27 = bitcast %"class.base::WaitableEvent"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* nonnull %5, i32 1, i32 1) #8
  %28 = bitcast %"class.base::SingleThreadTaskRunner"** %8 to %"class.base::TaskRunner"**
  %29 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %28, align 8
  %30 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 37) #8
  %31 = ptrtoint %"class.media::ScopedTaskRunnerObserver"* %0 to i64
  %32 = ptrtoint %"class.base::WaitableEvent"* %5 to i64
  %33 = call i8* @_Znwm(i64 72) #9, !noalias !2
  %34 = bitcast i8* %33 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %34, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5media24ScopedTaskRunnerObserverEFvbPNS_13WaitableEventEEJNS0_17UnretainedWrapperIS4_EEbS6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5media24ScopedTaskRunnerObserverEFvbPNS_13WaitableEventEEJNS0_17UnretainedWrapperIS3_EEbS5_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !2
  %35 = getelementptr inbounds i8, i8* %33, i64 32
  %36 = bitcast i8* %35 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.media::ScopedTaskRunnerObserver"*, i1, %"class.base::WaitableEvent"*)* @_ZN5media24ScopedTaskRunnerObserver22ObserveLoopDestructionEbPN4base13WaitableEventE to i64), i64 0>, <2 x i64>* %36, align 8, !noalias !2
  %37 = getelementptr inbounds i8, i8* %33, i64 48
  %38 = bitcast i8* %37 to i64*
  store i64 %31, i64* %38, align 8, !noalias !2
  %39 = getelementptr inbounds i8, i8* %33, i64 56
  store i8 %25, i8* %39, align 1, !noalias !2
  %40 = getelementptr inbounds i8, i8* %33, i64 64
  %41 = bitcast i8* %40 to i64*
  store i64 %32, i64* %41, align 8, !noalias !2
  %42 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %33, i8** %42, align 8, !alias.scope !2
  %43 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %29, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback"* nonnull %7) #8
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  br i1 %43, label %45, label %46

45:                                               ; preds = %24
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* nonnull %5) #8
  br label %46

46:                                               ; preds = %24, %45
  call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8
  br label %47

47:                                               ; preds = %46, %23
  %48 = icmp eq %"class.base::WaitableEvent"* %2, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %47
  call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* nonnull %2) #8
  br label %50

50:                                               ; preds = %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media24ScopedTaskRunnerObserverD2Ev(%"class.media::ScopedTaskRunnerObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::ScopedTaskRunnerObserver", %"class.media::ScopedTaskRunnerObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media24ScopedTaskRunnerObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN5media24ScopedTaskRunnerObserver22ObserveLoopDestructionEbPN4base13WaitableEventE(%"class.media::ScopedTaskRunnerObserver"* %0, i1 zeroext false, %"class.base::WaitableEvent"* null)
  %3 = getelementptr inbounds %"class.media::ScopedTaskRunnerObserver", %"class.media::ScopedTaskRunnerObserver"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #8
  br label %14

14:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5media24ScopedTaskRunnerObserverD0Ev(%"class.media::ScopedTaskRunnerObserver"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base13CurrentThread3GetEv() local_unnamed_addr #4

declare void @_ZN4base13CurrentThread22AddDestructionObserverEPNS0_19DestructionObserverE(%"class.base::CurrentThread"*, %"class.base::CurrentThread::DestructionObserver"*) local_unnamed_addr #4

declare void @_ZN4base13CurrentThread25RemoveDestructionObserverEPNS0_19DestructionObserverE(%"class.base::CurrentThread"*, %"class.base::CurrentThread::DestructionObserver"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #4

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

declare void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #5

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5media24ScopedTaskRunnerObserverEFvbPNS_13WaitableEventEEJNS0_17UnretainedWrapperIS4_EEbS6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i8*
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::WaitableEvent"**
  %10 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %5, i64 %14
  %16 = bitcast i8* %15 to %"class.media::ScopedTaskRunnerObserver"*
  %17 = and i64 %11, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %1
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %11, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.media::ScopedTaskRunnerObserver"*, i1, %"class.base::WaitableEvent"*)**
  %25 = load void (%"class.media::ScopedTaskRunnerObserver"*, i1, %"class.base::WaitableEvent"*)*, void (%"class.media::ScopedTaskRunnerObserver"*, i1, %"class.base::WaitableEvent"*)** %24, align 8
  br label %28

26:                                               ; preds = %1
  %27 = inttoptr i64 %11 to void (%"class.media::ScopedTaskRunnerObserver"*, i1, %"class.base::WaitableEvent"*)*
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi void (%"class.media::ScopedTaskRunnerObserver"*, i1, %"class.base::WaitableEvent"*)* [ %25, %19 ], [ %27, %26 ]
  %30 = load i8, i8* %7, align 1, !range !7
  %31 = icmp ne i8 %30, 0
  %32 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %9, align 8
  tail call void %29(%"class.media::ScopedTaskRunnerObserver"* %16, i1 zeroext %31, %"class.base::WaitableEvent"* %32) #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5media24ScopedTaskRunnerObserverEFvbPNS_13WaitableEventEEJNS0_17UnretainedWrapperIS3_EEbS5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5media24ScopedTaskRunnerObserverEFvbPNS_13WaitableEventEEJNS0_17UnretainedWrapperIS4_EERbS6_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5media24ScopedTaskRunnerObserverEFvbPNS_13WaitableEventEEJNS0_17UnretainedWrapperIS4_EERbS6_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN5media24ScopedTaskRunnerObserverEFvbPNS_13WaitableEventEEJNS_8internal17UnretainedWrapperIS2_EERbS4_EEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN5media24ScopedTaskRunnerObserverEFvbPNS_13WaitableEventEEJNS_8internal17UnretainedWrapperIS2_EERbS4_EEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!7 = !{i8 0, i8 2}
