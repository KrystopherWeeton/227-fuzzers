; ModuleID = '../../third_party/swiftshader/src/OpenGL/compiler/Intermediate.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/compiler/Intermediate.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.TType = type { i8, i8, i8, i8, i8, i8, i32, i32, %class.TType*, %class.TInterfaceBlock*, %struct.TLayoutQualifier, %class.TStructure*, %"class.std::__1::basic_string"* }
%class.TInterfaceBlock = type <{ %class.TFieldListCollection, %"class.std::__1::basic_string"*, i32, i32, i32, [4 x i8] }>
%class.TFieldListCollection = type { i32 (...)**, %"class.std::__1::basic_string"*, %class.TVector*, %"class.std::__1::basic_string", i64 }
%class.TVector = type { %"class.std::__1::vector.4" }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %class.TField**, %class.TField**, %"class.std::__1::__compressed_pair.6" }
%class.TField = type { %class.TType*, %"class.std::__1::basic_string"*, %struct.TSourceLoc }
%struct.TSourceLoc = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.TField** }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.pool_allocator.9 }
%class.pool_allocator.9 = type { %class.TPoolAllocator* }
%class.TPoolAllocator = type { i64, i64, i64, i64, i64, %"struct.TPoolAllocator::tHeader"*, %"struct.TPoolAllocator::tHeader"*, %"class.std::__1::vector", i32, i64 }
%"struct.TPoolAllocator::tHeader" = type { %"struct.TPoolAllocator::tHeader"*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"*, %"class.std::__1::__compressed_pair.1" }
%"struct.TPoolAllocator::tAllocState" = type { i64, %"struct.TPoolAllocator::tHeader"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.TPoolAllocator::tAllocState"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::__compressed_pair_elem.0" = type { %class.pool_allocator }
%class.pool_allocator = type { %class.TPoolAllocator* }
%struct.TLayoutQualifier = type { i32, i32, i32 }
%class.TStructure = type <{ %class.TFieldListCollection, i32, i32, i8, [7 x i8] }>
%class.TIntermSymbol = type { %class.TIntermTyped, i32, %"class.std::__1::basic_string" }
%class.TIntermTyped = type { %class.TIntermNode, %class.TType }
%class.TIntermNode = type { i32 (...)**, %struct.TSourceLoc }
%class.TIntermediate = type { %class.TInfoSink* }
%class.TInfoSink = type { %class.TInfoSinkBase, %class.TInfoSinkBase, %class.TInfoSinkBase }
%class.TInfoSinkBase = type { %"class.std::__1::basic_string.10" }
%"class.std::__1::basic_string.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.13 }
%union.anon.13 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.TIntermBinary = type { %class.TIntermOperator.base, %class.TIntermTyped*, %class.TIntermTyped* }
%class.TIntermOperator.base = type <{ %class.TIntermTyped, i32 }>
%class.TIntermConstantUnion = type { %class.TIntermTyped, %class.ConstantUnion* }
%class.ConstantUnion = type <{ %union.anon.18, i8, [3 x i8] }>
%union.anon.18 = type { i32 }
%class.TIntermOperator = type <{ %class.TIntermTyped, i32, [4 x i8] }>
%class.TIntermUnary = type { %class.TIntermOperator.base, %class.TIntermTyped* }
%class.TIntermAggregate = type <{ %class.TIntermOperator.base, [4 x i8], %class.TVector.19, %"class.std::__1::basic_string", i8, i8, i8, i8, %struct.TSourceLoc, [4 x i8] }>
%class.TVector.19 = type { %"class.std::__1::vector.20" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %class.TIntermNode**, %class.TIntermNode**, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23", %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.TIntermNode** }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.pool_allocator.25 }
%class.pool_allocator.25 = type { %class.TPoolAllocator* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.TIntermSwitch = type { %class.TIntermNode, %class.TIntermTyped*, %class.TIntermAggregate* }
%class.TIntermCase = type { %class.TIntermNode, %class.TIntermTyped* }
%struct.TVectorFields = type { [4 x i32], i32 }
%class.TIntermBranch = type { %class.TIntermNode, i32, %class.TIntermTyped* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.TIntermSelection = type { %class.TIntermTyped, %class.TIntermTyped*, %class.TIntermNode*, %class.TIntermNode* }
%class.TIntermLoop = type <{ %class.TIntermNode, i32, [4 x i8], %class.TIntermNode*, %class.TIntermTyped*, %class.TIntermTyped*, %class.TIntermNode*, i8, [7 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN16TIntermAggregateC2Ev = comdat any

$_ZN16TIntermAggregateC2E9TOperator = comdat any

$_ZNK13ConstantUnionplERKS_ = comdat any

$_ZNK13ConstantUnionmiERKS_ = comdat any

$_ZNK13ConstantUnionmlERKS_ = comdat any

$_ZNK13ConstantUnioneqERKS_ = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEaSERKS5_ = comdat any

$_ZN12TIntermTyped10getAsTypedEv = comdat any

$_ZN11TIntermNode18getAsConstantUnionEv = comdat any

$_ZN11TIntermNode14getAsAggregateEv = comdat any

$_ZN11TIntermNode15getAsBinaryNodeEv = comdat any

$_ZN11TIntermNode14getAsUnaryNodeEv = comdat any

$_ZN11TIntermNode18getAsSelectionNodeEv = comdat any

$_ZN11TIntermNode15getAsSymbolNodeEv = comdat any

$_ZN11TIntermNode13getAsLoopNodeEv = comdat any

$_ZN11TIntermNode15getAsBranchNodeEv = comdat any

$_ZN11TIntermNode15getAsSwitchNodeEv = comdat any

$_ZN11TIntermNode13getAsCaseNodeEv = comdat any

$_ZN12TIntermTypedD0Ev = comdat any

$_ZN12TIntermTyped7setTypeERK5TType = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_no_aliasILb1EEERS5_PKcm = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_no_aliasILb0EEERS5_PKcm = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE21__grow_by_and_replaceEmmmmmmPKc = comdat any

$_ZN11TIntermNodeD2Ev = comdat any

$_ZNK5TTypeeqERKS_ = comdat any

$_ZNK5TType14getElementSizeEv = comdat any

$_ZTV12TIntermTyped = comdat any

@.str = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"+=\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"-=\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"/=\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%=\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"<<=\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c">>=\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"&=\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"^=\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"|=\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"*=\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"==\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"!=\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"||\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"^^\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"&&\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"<<\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c">>\00", align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.34 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c"!\00", align 1
@.str.36 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"++\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"radians\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"degrees\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"sin\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"cos\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"tan\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"asin\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"acos\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"atan\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"sinh\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"cosh\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"tanh\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"asinh\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"acosh\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"atanh\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"exp\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"exp2\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"log2\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@.str.58 = private unnamed_addr constant [12 x i8] c"inversesqrt\00", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"sign\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"floor\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"trunc\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.64 = private unnamed_addr constant [10 x i8] c"roundEven\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"ceil\00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"fract\00", align 1
@.str.67 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.68 = private unnamed_addr constant [10 x i8] c"normalize\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"dFdx\00", align 1
@.str.70 = private unnamed_addr constant [5 x i8] c"dFdy\00", align 1
@.str.71 = private unnamed_addr constant [7 x i8] c"fwidth\00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@.str.73 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"isnan\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"isinf\00", align 1
@.str.76 = private unnamed_addr constant [13 x i8] c"outerProduct\00", align 1
@.str.77 = private unnamed_addr constant [10 x i8] c"transpose\00", align 1
@.str.78 = private unnamed_addr constant [12 x i8] c"determinant\00", align 1
@.str.79 = private unnamed_addr constant [8 x i8] c"inverse\00", align 1
@.str.80 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.81 = private unnamed_addr constant [25 x i8] c"Bad type in AddUnaryMath\00", align 1
@.str.87 = private unnamed_addr constant [52 x i8] c"Constant Folding cannot be done for matrix multiply\00", align 1
@.str.89 = private unnamed_addr constant [45 x i8] c"Divide by zero error during constant folding\00", align 1
@.str.92 = private unnamed_addr constant [40 x i8] c"Constant folding cannot be done for \22/\22\00", align 1
@.str.93 = private unnamed_addr constant [56 x i8] c"Constant Folding cannot be done for matrix times vector\00", align 1
@.str.94 = private unnamed_addr constant [56 x i8] c"Constant Folding cannot be done for vector times matrix\00", align 1
@.str.95 = private unnamed_addr constant [41 x i8] c"Unary operation not folded into constant\00", align 1
@.str.96 = private unnamed_addr constant [15 x i8] c"Cannot promote\00", align 1
@.str.97 = private unnamed_addr constant [26 x i8] c"Incorrect data type found\00", align 1
@_ZTV13TIntermSymbol = external unnamed_addr constant { [17 x i8*] }, align 8
@_ZTV12TIntermTyped = linkonce_odr hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%class.TIntermTyped* (%class.TIntermTyped*)* @_ZN12TIntermTyped10getAsTypedEv to i8*), i8* bitcast (%class.TIntermConstantUnion* (%class.TIntermNode*)* @_ZN11TIntermNode18getAsConstantUnionEv to i8*), i8* bitcast (%class.TIntermAggregate* (%class.TIntermNode*)* @_ZN11TIntermNode14getAsAggregateEv to i8*), i8* bitcast (%class.TIntermBinary* (%class.TIntermNode*)* @_ZN11TIntermNode15getAsBinaryNodeEv to i8*), i8* bitcast (%class.TIntermUnary* (%class.TIntermNode*)* @_ZN11TIntermNode14getAsUnaryNodeEv to i8*), i8* bitcast (%class.TIntermSelection* (%class.TIntermNode*)* @_ZN11TIntermNode18getAsSelectionNodeEv to i8*), i8* bitcast (%class.TIntermSymbol* (%class.TIntermNode*)* @_ZN11TIntermNode15getAsSymbolNodeEv to i8*), i8* bitcast (%class.TIntermLoop* (%class.TIntermNode*)* @_ZN11TIntermNode13getAsLoopNodeEv to i8*), i8* bitcast (%class.TIntermBranch* (%class.TIntermNode*)* @_ZN11TIntermNode15getAsBranchNodeEv to i8*), i8* bitcast (%class.TIntermSwitch* (%class.TIntermNode*)* @_ZN11TIntermNode15getAsSwitchNodeEv to i8*), i8* bitcast (%class.TIntermCase* (%class.TIntermNode*)* @_ZN11TIntermNode13getAsCaseNodeEv to i8*), i8* bitcast (void (%class.TIntermNode*)* @_ZN11TIntermNodeD2Ev to i8*), i8* bitcast (void (%class.TIntermTyped*)* @_ZN12TIntermTypedD0Ev to i8*), i8* bitcast (void (%class.TIntermTyped*, %class.TType*)* @_ZN12TIntermTyped7setTypeERK5TType to i8*)] }, comdat, align 8
@_ZTV13TIntermBinary = external unnamed_addr constant { [17 x i8*] }, align 8
@_ZTV12TIntermUnary = external unnamed_addr constant { [17 x i8*] }, align 8
@_ZTV16TIntermAggregate = external unnamed_addr constant { [17 x i8*] }, align 8
@_ZTV16TIntermSelection = external unnamed_addr constant { [17 x i8*] }, align 8
@_ZTV13TIntermSwitch = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZTV11TIntermCase = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZTV20TIntermConstantUnion = external unnamed_addr constant { [17 x i8*] }, align 8
@_ZTV11TIntermLoop = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZTV13TIntermBranch = external unnamed_addr constant { [16 x i8*] }, align 8
@switch.table._Z25TypeToConstructorOperatorRK5TType = private unnamed_addr constant [4 x i32] [i32 118, i32 128, i32 129, i32 130], align 4
@switch.table._Z25TypeToConstructorOperatorRK5TType.99 = private unnamed_addr constant [4 x i32] [i32 119, i32 131, i32 132, i32 133], align 4
@switch.table._Z25TypeToConstructorOperatorRK5TType.100 = private unnamed_addr constant [4 x i32] [i32 120, i32 125, i32 126, i32 127], align 4
@switch.table._Z17getOperatorString9TOperator = private unnamed_addr constant [152 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)], align 8

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_Z25TypeToConstructorOperatorRK5TType(%class.TType* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  switch i8 %3, label %38 [
    i8 1, label %4
    i8 2, label %23
    i8 3, label %28
    i8 4, label %33
    i8 37, label %63
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %6 = load i8, i8* %5, align 4
  %7 = icmp ugt i8 %6, 1
  %8 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 3
  %9 = load i8, i8* %8, align 1
  br i1 %7, label %10, label %20

10:                                               ; preds = %4
  switch i8 %9, label %38 [
    i8 2, label %11
    i8 3, label %14
    i8 4, label %17
  ]

11:                                               ; preds = %10
  %12 = add i8 %6, -2
  %13 = icmp ult i8 %12, 3
  br i1 %13, label %39, label %38

14:                                               ; preds = %10
  %15 = add i8 %6, -2
  %16 = icmp ult i8 %15, 3
  br i1 %16, label %42, label %38

17:                                               ; preds = %10
  %18 = add i8 %6, -2
  %19 = icmp ult i8 %18, 3
  br i1 %19, label %45, label %38

20:                                               ; preds = %4
  %21 = add i8 %9, -1
  %22 = icmp ult i8 %21, 4
  br i1 %22, label %48, label %38

23:                                               ; preds = %1
  %24 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 3
  %25 = load i8, i8* %24, align 1
  %26 = add i8 %25, -1
  %27 = icmp ult i8 %26, 4
  br i1 %27, label %51, label %38

28:                                               ; preds = %1
  %29 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 3
  %30 = load i8, i8* %29, align 1
  %31 = add i8 %30, -1
  %32 = icmp ult i8 %31, 4
  br i1 %32, label %55, label %38

33:                                               ; preds = %1
  %34 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 3
  %35 = load i8, i8* %34, align 1
  %36 = add i8 %35, -1
  %37 = icmp ult i8 %36, 4
  br i1 %37, label %59, label %38

38:                                               ; preds = %33, %28, %23, %20, %17, %14, %11, %1, %10
  br label %63

39:                                               ; preds = %11
  %40 = zext i8 %12 to i32
  %41 = add nuw nsw i32 %40, 134
  ret i32 %41

42:                                               ; preds = %14
  %43 = zext i8 %15 to i32
  %44 = add nuw nsw i32 %43, 137
  ret i32 %44

45:                                               ; preds = %17
  %46 = zext i8 %18 to i32
  %47 = add nuw nsw i32 %46, 140
  ret i32 %47

48:                                               ; preds = %20
  %49 = zext i8 %21 to i32
  %50 = add nuw nsw i32 %49, 121
  ret i32 %50

51:                                               ; preds = %23
  %52 = sext i8 %26 to i64
  %53 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._Z25TypeToConstructorOperatorRK5TType, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  ret i32 %54

55:                                               ; preds = %28
  %56 = sext i8 %31 to i64
  %57 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._Z25TypeToConstructorOperatorRK5TType.99, i64 0, i64 %56
  %58 = load i32, i32* %57, align 4
  ret i32 %58

59:                                               ; preds = %33
  %60 = sext i8 %36 to i64
  %61 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._Z25TypeToConstructorOperatorRK5TType.100, i64 0, i64 %60
  %62 = load i32, i32* %61, align 4
  ret i32 %62

63:                                               ; preds = %1, %38
  %64 = phi i32 [ 0, %38 ], [ 143, %1 ]
  ret i32 %64
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i8* @_Z17getOperatorString9TOperator(i32) local_unnamed_addr #1 {
  %2 = add i32 %0, -8
  %3 = icmp ult i32 %2, 152
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [152 x i8*], [152 x i8*]* @switch.table._Z17getOperatorString9TOperator, i64 0, i64 %5
  %7 = load i8*, i8** %6, align 8
  ret i8* %7

8:                                                ; preds = %1
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0)
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermSymbol* @_ZN13TIntermediate9addSymbolEiRKNSt3__112basic_stringIcNS0_11char_traitsIcEE14pool_allocatorIcEEERK5TTypeRK10TSourceLoc(%class.TIntermediate* nocapture readnone, i32, %"class.std::__1::basic_string"* dereferenceable(32), %class.TType* nocapture readonly dereferenceable(64), %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %7 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %6, i64 128) #10
  %8 = bitcast i8* %7 to %class.TIntermSymbol*
  %9 = bitcast i8* %7 to i32 (...)***
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV12TIntermTyped, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 24
  %12 = getelementptr inbounds %class.TType, %class.TType* %3, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 64, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV13TIntermSymbol, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 88
  %14 = bitcast i8* %13 to i32*
  store i32 %1, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 96
  %16 = bitcast i8* %15 to %"class.std::__1::basic_string"*
  %17 = getelementptr inbounds i8, i8* %7, i64 120
  %18 = bitcast i8* %17 to %class.TPoolAllocator**
  %19 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  store %class.TPoolAllocator* %19, %class.TPoolAllocator** %18, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #11
  %20 = tail call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEaSERKS5_(%"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"* dereferenceable(32) %2) #10
  %21 = bitcast %struct.TSourceLoc* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %21, i64 16, i1 false) #11
  ret %class.TIntermSymbol* %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermTyped* @_ZN13TIntermediate13addBinaryMathE9TOperatorP12TIntermTypedS2_RK10TSourceLoc(%class.TIntermediate* nocapture readonly, i32, %class.TIntermTyped*, %class.TIntermTyped*, %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = alloca [26 x i8], align 2
  %7 = alloca [20 x i8], align 4
  switch i32 %1, label %8 [
    i32 156, label %62
    i32 155, label %62
    i32 24, label %11
    i32 25, label %11
    i32 26, label %11
    i32 27, label %11
    i32 37, label %27
    i32 38, label %27
    i32 39, label %27
    i32 45, label %43
    i32 44, label %43
    i32 43, label %43
    i32 16, label %56
    i32 17, label %56
    i32 19, label %56
    i32 18, label %56
    i32 40, label %59
    i32 41, label %62
    i32 42, label %62
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 8
  br label %72

11:                                               ; preds = %5, %5, %5, %5
  %12 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 4
  %13 = load i8, i8* %12, align 4
  %14 = icmp ugt i8 %13, 1
  br i1 %14, label %140, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 5
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %140

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 3
  %21 = load i8, i8* %20, align 1
  %22 = icmp ugt i8 %21, 1
  br i1 %22, label %140, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 8
  %26 = icmp eq i8 %25, 37
  br i1 %26, label %140, label %72

27:                                               ; preds = %5, %5, %5
  %28 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 4
  br i1 %30, label %31, label %140

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 4
  %33 = load i8, i8* %32, align 4
  %34 = icmp ugt i8 %33, 1
  br i1 %34, label %140, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 5
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %140

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 3
  %41 = load i8, i8* %40, align 1
  %42 = icmp ugt i8 %41, 1
  br i1 %42, label %140, label %72

43:                                               ; preds = %5, %5, %5
  %44 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 8
  %46 = or i8 %45, 1
  %47 = icmp eq i8 %46, 3
  br i1 %47, label %48, label %140

48:                                               ; preds = %43
  %49 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 4
  %50 = load i8, i8* %49, align 4
  %51 = icmp ugt i8 %50, 1
  br i1 %51, label %140, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 5
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %72, label %140

56:                                               ; preds = %5, %5, %5, %5
  %57 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 8
  switch i8 %58, label %72 [
    i8 37, label %140
    i8 4, label %140
  ]

59:                                               ; preds = %5
  %60 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 8
  switch i8 %61, label %72 [
    i8 37, label %140
    i8 4, label %140
    i8 1, label %140
  ]

62:                                               ; preds = %5, %5, %5, %5
  %63 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 8
  %65 = or i8 %64, 1
  %66 = icmp eq i8 %65, 3
  br i1 %66, label %67, label %140

67:                                               ; preds = %62
  %68 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %3, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 8
  %70 = or i8 %69, 1
  %71 = icmp eq i8 %70, 3
  br i1 %71, label %77, label %140

72:                                               ; preds = %8, %52, %59, %56, %39, %23
  %73 = phi i8 [ %10, %8 ], [ %45, %52 ], [ %61, %59 ], [ %58, %56 ], [ 4, %39 ], [ %25, %23 ]
  %74 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %3, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 8
  %76 = icmp eq i8 %73, %75
  br i1 %76, label %77, label %140

77:                                               ; preds = %67, %72
  %78 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %79 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %78, i64 112) #10
  %80 = bitcast i8* %79 to %class.TIntermBinary*
  %81 = getelementptr inbounds [26 x i8], [26 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %81)
  %82 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %82)
  %83 = getelementptr inbounds [26 x i8], [26 x i8]* %6, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %83, i8 0, i64 24, i1 false)
  %84 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %84, i8 0, i64 16, i1 false)
  %85 = bitcast i8* %79 to i32 (...)***
  %86 = getelementptr inbounds i8, i8* %79, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #11
  %87 = getelementptr inbounds i8, i8* %79, i64 24
  store i8 1, i8* %87, align 8
  %88 = getelementptr inbounds i8, i8* %79, i64 25
  store i8 0, i8* %88, align 1
  %89 = getelementptr inbounds i8, i8* %79, i64 26
  store i8 0, i8* %89, align 2
  %90 = getelementptr inbounds i8, i8* %79, i64 27
  store i8 1, i8* %90, align 1
  %91 = getelementptr inbounds i8, i8* %79, i64 28
  store i8 1, i8* %91, align 4
  %92 = getelementptr inbounds i8, i8* %79, i64 29
  store i8 0, i8* %92, align 1
  %93 = getelementptr inbounds i8, i8* %79, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %93, i8* nonnull align 2 %81, i64 26, i1 false) #11
  %94 = getelementptr inbounds i8, i8* %79, i64 56
  %95 = bitcast i8* %94 to i64*
  store i64 4294967295, i64* %95, align 8
  %96 = getelementptr inbounds i8, i8* %79, i64 64
  %97 = bitcast i8* %96 to i32*
  store i32 0, i32* %97, align 8
  %98 = getelementptr inbounds i8, i8* %79, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* nonnull align 4 %82, i64 20, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %81)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %82)
  %99 = getelementptr inbounds i8, i8* %79, i64 88
  %100 = bitcast i8* %99 to i32*
  store i32 %1, i32* %100, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV13TIntermBinary, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %101 = bitcast %struct.TSourceLoc* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 4 %101, i64 16, i1 false) #11
  %102 = getelementptr inbounds i8, i8* %79, i64 96
  %103 = bitcast i8* %102 to %class.TIntermTyped**
  store %class.TIntermTyped* %2, %class.TIntermTyped** %103, align 8
  %104 = getelementptr inbounds i8, i8* %79, i64 104
  %105 = bitcast i8* %104 to %class.TIntermTyped**
  store %class.TIntermTyped* %3, %class.TIntermTyped** %105, align 8
  %106 = getelementptr inbounds %class.TIntermediate, %class.TIntermediate* %0, i64 0, i32 0
  %107 = load %class.TInfoSink*, %class.TInfoSink** %106, align 8
  %108 = tail call zeroext i1 @_ZN13TIntermBinary7promoteER9TInfoSink(%class.TIntermBinary* %80, %class.TInfoSink* dereferenceable(72) %107) #12
  br i1 %108, label %116, label %109

109:                                              ; preds = %77
  %110 = icmp eq i8* %79, null
  br i1 %110, label %140, label %111

111:                                              ; preds = %109
  %112 = bitcast i8* %79 to void (%class.TIntermBinary*)***
  %113 = load void (%class.TIntermBinary*)**, void (%class.TIntermBinary*)*** %112, align 8
  %114 = getelementptr inbounds void (%class.TIntermBinary*)*, void (%class.TIntermBinary*)** %113, i64 13
  %115 = load void (%class.TIntermBinary*)*, void (%class.TIntermBinary*)** %114, align 8
  tail call void %115(%class.TIntermBinary* nonnull %80) #10
  br label %140

116:                                              ; preds = %77
  %117 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0
  %118 = bitcast %class.TIntermTyped* %2 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %119 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %118, align 8
  %120 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %119, i64 2
  %121 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %120, align 8
  %122 = tail call %class.TIntermConstantUnion* %121(%class.TIntermNode* %117) #10
  %123 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %3, i64 0, i32 0
  %124 = bitcast %class.TIntermTyped* %3 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %125 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %124, align 8
  %126 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %125, i64 2
  %127 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %126, align 8
  %128 = tail call %class.TIntermConstantUnion* %127(%class.TIntermNode* %123) #10
  %129 = icmp ne %class.TIntermConstantUnion* %122, null
  %130 = icmp ne %class.TIntermConstantUnion* %128, null
  %131 = and i1 %129, %130
  br i1 %131, label %132, label %138

132:                                              ; preds = %116
  %133 = load i32, i32* %100, align 8
  %134 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %128, i64 0, i32 0
  %135 = load %class.TInfoSink*, %class.TInfoSink** %106, align 8
  %136 = tail call %class.TIntermTyped* @_ZN20TIntermConstantUnion4foldE9TOperatorP12TIntermTypedR9TInfoSink(%class.TIntermConstantUnion* nonnull %122, i32 %133, %class.TIntermTyped* %134, %class.TInfoSink* dereferenceable(72) %135) #12
  %137 = icmp eq %class.TIntermTyped* %136, null
  br i1 %137, label %138, label %140

138:                                              ; preds = %132, %116
  %139 = bitcast i8* %79 to %class.TIntermTyped*
  br label %140

140:                                              ; preds = %15, %35, %52, %59, %59, %59, %56, %56, %39, %19, %111, %109, %132, %138, %72, %62, %67, %43, %48, %31, %27, %11, %23
  %141 = phi %class.TIntermTyped* [ null, %23 ], [ null, %15 ], [ null, %11 ], [ null, %27 ], [ null, %35 ], [ null, %31 ], [ null, %52 ], [ null, %48 ], [ null, %43 ], [ null, %56 ], [ null, %59 ], [ null, %67 ], [ null, %62 ], [ null, %72 ], [ null, %111 ], [ null, %109 ], [ %139, %138 ], [ %136, %132 ], [ null, %19 ], [ null, %39 ], [ null, %56 ], [ null, %59 ], [ null, %59 ]
  ret %class.TIntermTyped* %141
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN13TIntermBinary7promoteER9TInfoSink(%class.TIntermBinary*, %class.TInfoSink* dereferenceable(72)) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.TType, align 8
  %4 = alloca %class.TType, align 8
  %5 = alloca %class.TType, align 8
  %6 = alloca %class.TType, align 8
  %7 = alloca %class.TType, align 8
  %8 = alloca %class.TType, align 8
  %9 = alloca %class.TType, align 8
  %10 = alloca %class.TType, align 8
  %11 = alloca %class.TType, align 8
  %12 = alloca %class.TType, align 8
  %13 = alloca %class.TType, align 8
  %14 = alloca %class.TType, align 8
  %15 = alloca %class.TType, align 8
  %16 = alloca %class.TType, align 8
  %17 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %0, i64 0, i32 1
  %18 = load %class.TIntermTyped*, %class.TIntermTyped** %17, align 8
  %19 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %0, i64 0, i32 2
  %20 = bitcast %class.TIntermBinary* %0 to %class.TIntermOperator*
  %21 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %0, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  switch i32 %22, label %23 [
    i32 41, label %30
    i32 42, label %30
    i32 155, label %30
    i32 156, label %30
  ]

23:                                               ; preds = %2
  %24 = load %class.TIntermTyped*, %class.TIntermTyped** %19, align 8
  %25 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 8
  %27 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %24, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %26, %28
  br i1 %29, label %30, label %517

30:                                               ; preds = %2, %2, %2, %2, %23
  %31 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 1
  %32 = bitcast %class.TIntermBinary* %0 to void (%class.TIntermBinary*, %class.TType*)***
  %33 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %33, i64 14
  %35 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %34, align 8
  tail call void %35(%class.TIntermBinary* %0, %class.TType* dereferenceable(64) %31) #10
  %36 = load %class.TIntermTyped*, %class.TIntermTyped** %17, align 8
  %37 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %36, i64 0, i32 1, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = load %class.TIntermTyped*, %class.TIntermTyped** %19, align 8
  %40 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 1
  %41 = load i8, i8* %40, align 1
  %42 = icmp ugt i8 %38, %41
  %43 = select i1 %42, i8 %38, i8 %41
  %44 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  store i8 %43, i8* %44, align 1
  %45 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %36, i64 0, i32 1, i32 2
  %46 = load i8, i8* %45, align 2
  %47 = icmp eq i8 %46, 2
  br i1 %47, label %48, label %52

48:                                               ; preds = %30
  %49 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 2
  %50 = load i8, i8* %49, align 2
  %51 = icmp eq i8 %50, 2
  br i1 %51, label %54, label %52

52:                                               ; preds = %48, %30
  %53 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  store i8 0, i8* %53, align 2
  br label %54

54:                                               ; preds = %48, %52
  %55 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %36, i64 0, i32 1, i32 3
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 3
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = icmp ult i32 %57, %60
  %62 = select i1 %61, i32 %60, i32 %57
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %108

64:                                               ; preds = %54
  %65 = load i32, i32* %21, align 8
  switch i32 %65, label %517 [
    i32 20, label %66
    i32 21, label %66
    i32 24, label %66
    i32 25, label %66
    i32 26, label %66
    i32 27, label %66
    i32 39, label %83
    i32 37, label %83
    i32 38, label %83
  ]

66:                                               ; preds = %64, %64, %64, %64, %64, %64
  %67 = getelementptr inbounds %class.TType, %class.TType* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %67) #11
  store i8 4, i8* %67, align 8
  %68 = getelementptr inbounds %class.TType, %class.TType* %3, i64 0, i32 1
  store i8 0, i8* %68, align 1
  %69 = getelementptr inbounds %class.TType, %class.TType* %3, i64 0, i32 2
  store i8 0, i8* %69, align 2
  %70 = getelementptr inbounds %class.TType, %class.TType* %3, i64 0, i32 3
  store i8 1, i8* %70, align 1
  %71 = getelementptr inbounds %class.TType, %class.TType* %3, i64 0, i32 4
  store i8 1, i8* %71, align 4
  %72 = getelementptr inbounds %class.TType, %class.TType* %3, i64 0, i32 5
  store i8 0, i8* %72, align 1
  %73 = getelementptr inbounds %class.TType, %class.TType* %3, i64 0, i32 6
  %74 = getelementptr inbounds %class.TType, %class.TType* %3, i64 0, i32 10
  %75 = bitcast %struct.TLayoutQualifier* %74 to i64*
  %76 = bitcast i32* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #11
  store i64 4294967295, i64* %75, align 8
  %77 = getelementptr inbounds %class.TType, %class.TType* %3, i64 0, i32 10, i32 2
  store i32 0, i32* %77, align 8
  %78 = getelementptr inbounds %class.TType, %class.TType* %3, i64 0, i32 11
  %79 = bitcast %class.TStructure** %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 16, i1 false) #11
  %80 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %81 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %80, i64 14
  %82 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %81, align 8
  call void %82(%class.TIntermBinary* %0, %class.TType* nonnull dereferenceable(64) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %67) #11
  br label %517

83:                                               ; preds = %64, %64, %64
  %84 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %36, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 8
  %86 = icmp eq i8 %85, 4
  br i1 %86, label %87, label %517

87:                                               ; preds = %83
  %88 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 8
  %90 = icmp eq i8 %89, 4
  br i1 %90, label %91, label %517

91:                                               ; preds = %87
  %92 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %92) #11
  store i8 4, i8* %92, align 8
  %93 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 1
  store i8 0, i8* %93, align 1
  %94 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 2
  store i8 0, i8* %94, align 2
  %95 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 3
  store i8 1, i8* %95, align 1
  %96 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 4
  store i8 1, i8* %96, align 4
  %97 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 5
  store i8 0, i8* %97, align 1
  %98 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 6
  %99 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 10
  %100 = bitcast %struct.TLayoutQualifier* %99 to i64*
  %101 = bitcast i32* %98 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 24, i1 false) #11
  store i64 4294967295, i64* %100, align 8
  %102 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 10, i32 2
  store i32 0, i32* %102, align 8
  %103 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 11
  %104 = bitcast %class.TStructure** %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 16, i1 false) #11
  %105 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %106 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %105, i64 14
  %107 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %106, align 8
  call void %107(%class.TIntermBinary* %0, %class.TType* nonnull dereferenceable(64) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %92) #11
  br label %517

108:                                              ; preds = %54
  %109 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %36, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 8
  %111 = load i32, i32* %21, align 8
  switch i32 %111, label %517 [
    i32 18, label %112
    i32 148, label %229
    i32 144, label %292
    i32 145, label %292
    i32 16, label %300
    i32 17, label %300
    i32 19, label %300
    i32 40, label %300
    i32 41, label %300
    i32 42, label %300
    i32 43, label %300
    i32 44, label %300
    i32 45, label %300
    i32 146, label %300
    i32 147, label %300
    i32 153, label %300
    i32 154, label %300
    i32 155, label %300
    i32 156, label %300
    i32 157, label %300
    i32 158, label %300
    i32 159, label %300
    i32 20, label %409
    i32 21, label %409
    i32 24, label %409
    i32 25, label %409
    i32 26, label %409
    i32 27, label %409
    i32 29, label %434
    i32 30, label %463
    i32 31, label %484
    i32 32, label %505
  ]

112:                                              ; preds = %108
  %113 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %36, i64 0, i32 1, i32 4
  %114 = load i8, i8* %113, align 4
  %115 = icmp ugt i8 %114, 1
  %116 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 4
  %117 = load i8, i8* %116, align 4
  %118 = icmp ugt i8 %117, 1
  br i1 %115, label %159, label %119

119:                                              ; preds = %112
  %120 = icmp ugt i8 %56, 1
  br i1 %118, label %121, label %200

121:                                              ; preds = %119
  br i1 %120, label %122, label %140

122:                                              ; preds = %121
  store i32 34, i32* %21, align 8
  %123 = getelementptr inbounds %class.TType, %class.TType* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %123) #11
  %124 = load i8, i8* %58, align 1
  store i8 %110, i8* %123, align 8
  %125 = getelementptr inbounds %class.TType, %class.TType* %5, i64 0, i32 1
  store i8 %43, i8* %125, align 1
  %126 = getelementptr inbounds %class.TType, %class.TType* %5, i64 0, i32 2
  store i8 0, i8* %126, align 2
  %127 = getelementptr inbounds %class.TType, %class.TType* %5, i64 0, i32 3
  store i8 %124, i8* %127, align 1
  %128 = getelementptr inbounds %class.TType, %class.TType* %5, i64 0, i32 4
  store i8 1, i8* %128, align 4
  %129 = getelementptr inbounds %class.TType, %class.TType* %5, i64 0, i32 5
  store i8 0, i8* %129, align 1
  %130 = getelementptr inbounds %class.TType, %class.TType* %5, i64 0, i32 6
  %131 = getelementptr inbounds %class.TType, %class.TType* %5, i64 0, i32 10
  %132 = bitcast %struct.TLayoutQualifier* %131 to i64*
  %133 = bitcast i32* %130 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #11
  store i64 4294967295, i64* %132, align 8
  %134 = getelementptr inbounds %class.TType, %class.TType* %5, i64 0, i32 10, i32 2
  store i32 0, i32* %134, align 8
  %135 = getelementptr inbounds %class.TType, %class.TType* %5, i64 0, i32 11
  %136 = bitcast %class.TStructure** %135 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 16, i1 false) #11
  %137 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %138 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %137, i64 14
  %139 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %138, align 8
  call void %139(%class.TIntermBinary* %0, %class.TType* nonnull dereferenceable(64) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %123) #11
  br label %222

140:                                              ; preds = %121
  store i32 36, i32* %21, align 8
  %141 = getelementptr inbounds %class.TType, %class.TType* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %141) #11
  %142 = load i8, i8* %58, align 1
  %143 = load i8, i8* %116, align 4
  store i8 %110, i8* %141, align 8
  %144 = getelementptr inbounds %class.TType, %class.TType* %6, i64 0, i32 1
  store i8 %43, i8* %144, align 1
  %145 = getelementptr inbounds %class.TType, %class.TType* %6, i64 0, i32 2
  store i8 0, i8* %145, align 2
  %146 = getelementptr inbounds %class.TType, %class.TType* %6, i64 0, i32 3
  store i8 %142, i8* %146, align 1
  %147 = getelementptr inbounds %class.TType, %class.TType* %6, i64 0, i32 4
  store i8 %143, i8* %147, align 4
  %148 = getelementptr inbounds %class.TType, %class.TType* %6, i64 0, i32 5
  store i8 0, i8* %148, align 1
  %149 = getelementptr inbounds %class.TType, %class.TType* %6, i64 0, i32 6
  %150 = getelementptr inbounds %class.TType, %class.TType* %6, i64 0, i32 10
  %151 = bitcast %struct.TLayoutQualifier* %150 to i64*
  %152 = bitcast i32* %149 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 24, i1 false) #11
  store i64 4294967295, i64* %151, align 8
  %153 = getelementptr inbounds %class.TType, %class.TType* %6, i64 0, i32 10, i32 2
  store i32 0, i32* %153, align 8
  %154 = getelementptr inbounds %class.TType, %class.TType* %6, i64 0, i32 11
  %155 = bitcast %class.TStructure** %154 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 16, i1 false) #11
  %156 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %157 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %156, i64 14
  %158 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %157, align 8
  call void %158(%class.TIntermBinary* %0, %class.TType* nonnull dereferenceable(64) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %141) #11
  br label %222

159:                                              ; preds = %112
  br i1 %118, label %181, label %160

160:                                              ; preds = %159
  %161 = icmp ugt i8 %59, 1
  br i1 %161, label %162, label %180

162:                                              ; preds = %160
  store i32 35, i32* %21, align 8
  %163 = getelementptr inbounds %class.TType, %class.TType* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %163) #11
  %164 = load i8, i8* %113, align 4
  store i8 %110, i8* %163, align 8
  %165 = getelementptr inbounds %class.TType, %class.TType* %7, i64 0, i32 1
  store i8 %43, i8* %165, align 1
  %166 = getelementptr inbounds %class.TType, %class.TType* %7, i64 0, i32 2
  store i8 0, i8* %166, align 2
  %167 = getelementptr inbounds %class.TType, %class.TType* %7, i64 0, i32 3
  store i8 %164, i8* %167, align 1
  %168 = getelementptr inbounds %class.TType, %class.TType* %7, i64 0, i32 4
  store i8 1, i8* %168, align 4
  %169 = getelementptr inbounds %class.TType, %class.TType* %7, i64 0, i32 5
  store i8 0, i8* %169, align 1
  %170 = getelementptr inbounds %class.TType, %class.TType* %7, i64 0, i32 6
  %171 = getelementptr inbounds %class.TType, %class.TType* %7, i64 0, i32 10
  %172 = bitcast %struct.TLayoutQualifier* %171 to i64*
  %173 = bitcast i32* %170 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %173, i8 0, i64 24, i1 false) #11
  store i64 4294967295, i64* %172, align 8
  %174 = getelementptr inbounds %class.TType, %class.TType* %7, i64 0, i32 10, i32 2
  store i32 0, i32* %174, align 8
  %175 = getelementptr inbounds %class.TType, %class.TType* %7, i64 0, i32 11
  %176 = bitcast %class.TStructure** %175 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %176, i8 0, i64 16, i1 false) #11
  %177 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %178 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %177, i64 14
  %179 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %178, align 8
  call void %179(%class.TIntermBinary* %0, %class.TType* nonnull dereferenceable(64) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %163) #11
  br label %222

180:                                              ; preds = %160
  store i32 36, i32* %21, align 8
  br label %222

181:                                              ; preds = %159
  store i32 111, i32* %21, align 8
  %182 = getelementptr inbounds %class.TType, %class.TType* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %182) #11
  %183 = load i8, i8* %58, align 1
  %184 = load i8, i8* %113, align 4
  store i8 %110, i8* %182, align 8
  %185 = getelementptr inbounds %class.TType, %class.TType* %8, i64 0, i32 1
  store i8 %43, i8* %185, align 1
  %186 = getelementptr inbounds %class.TType, %class.TType* %8, i64 0, i32 2
  store i8 0, i8* %186, align 2
  %187 = getelementptr inbounds %class.TType, %class.TType* %8, i64 0, i32 3
  store i8 %183, i8* %187, align 1
  %188 = getelementptr inbounds %class.TType, %class.TType* %8, i64 0, i32 4
  store i8 %184, i8* %188, align 4
  %189 = getelementptr inbounds %class.TType, %class.TType* %8, i64 0, i32 5
  store i8 0, i8* %189, align 1
  %190 = getelementptr inbounds %class.TType, %class.TType* %8, i64 0, i32 6
  %191 = getelementptr inbounds %class.TType, %class.TType* %8, i64 0, i32 10
  %192 = bitcast %struct.TLayoutQualifier* %191 to i64*
  %193 = bitcast i32* %190 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %193, i8 0, i64 24, i1 false) #11
  store i64 4294967295, i64* %192, align 8
  %194 = getelementptr inbounds %class.TType, %class.TType* %8, i64 0, i32 10, i32 2
  store i32 0, i32* %194, align 8
  %195 = getelementptr inbounds %class.TType, %class.TType* %8, i64 0, i32 11
  %196 = bitcast %class.TStructure** %195 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %196, i8 0, i64 16, i1 false) #11
  %197 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %198 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %197, i64 14
  %199 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %198, align 8
  call void %199(%class.TIntermBinary* %0, %class.TType* nonnull dereferenceable(64) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %182) #11
  br label %222

200:                                              ; preds = %119
  %201 = icmp ugt i8 %59, 1
  br i1 %120, label %202, label %203

202:                                              ; preds = %200
  br i1 %201, label %222, label %204

203:                                              ; preds = %200
  br i1 %201, label %204, label %222

204:                                              ; preds = %203, %202
  store i32 33, i32* %21, align 8
  %205 = getelementptr inbounds %class.TType, %class.TType* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %205) #11
  store i8 %110, i8* %205, align 8
  %206 = getelementptr inbounds %class.TType, %class.TType* %9, i64 0, i32 1
  store i8 %43, i8* %206, align 1
  %207 = getelementptr inbounds %class.TType, %class.TType* %9, i64 0, i32 2
  store i8 0, i8* %207, align 2
  %208 = getelementptr inbounds %class.TType, %class.TType* %9, i64 0, i32 3
  %209 = trunc i32 %62 to i8
  store i8 %209, i8* %208, align 1
  %210 = getelementptr inbounds %class.TType, %class.TType* %9, i64 0, i32 4
  store i8 1, i8* %210, align 4
  %211 = getelementptr inbounds %class.TType, %class.TType* %9, i64 0, i32 5
  store i8 0, i8* %211, align 1
  %212 = getelementptr inbounds %class.TType, %class.TType* %9, i64 0, i32 6
  %213 = getelementptr inbounds %class.TType, %class.TType* %9, i64 0, i32 10
  %214 = bitcast %struct.TLayoutQualifier* %213 to i64*
  %215 = bitcast i32* %212 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %215, i8 0, i64 24, i1 false) #11
  store i64 4294967295, i64* %214, align 8
  %216 = getelementptr inbounds %class.TType, %class.TType* %9, i64 0, i32 10, i32 2
  store i32 0, i32* %216, align 8
  %217 = getelementptr inbounds %class.TType, %class.TType* %9, i64 0, i32 11
  %218 = bitcast %class.TStructure** %217 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %218, i8 0, i64 16, i1 false) #11
  %219 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %220 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %219, i64 14
  %221 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %220, align 8
  call void %221(%class.TIntermBinary* %0, %class.TType* nonnull dereferenceable(64) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %205) #11
  br label %222

222:                                              ; preds = %203, %202, %180, %162, %204, %181, %122, %140
  %223 = load i32, i32* %21, align 8
  %224 = load %class.TIntermTyped*, %class.TIntermTyped** %17, align 8
  %225 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %224, i64 0, i32 1
  %226 = load %class.TIntermTyped*, %class.TIntermTyped** %19, align 8
  %227 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %226, i64 0, i32 1
  %228 = call fastcc zeroext i1 @_ZL22ValidateMultiplication9TOperatorRK5TTypeS2_(i32 %223, %class.TType* dereferenceable(64) %225, %class.TType* dereferenceable(64) %227) #12
  br i1 %228, label %516, label %517

229:                                              ; preds = %108
  %230 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %36, i64 0, i32 1, i32 4
  %231 = load i8, i8* %230, align 4
  %232 = icmp ugt i8 %231, 1
  %233 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 4
  %234 = load i8, i8* %233, align 4
  %235 = icmp ugt i8 %234, 1
  br i1 %232, label %240, label %236

236:                                              ; preds = %229
  %237 = icmp ugt i8 %56, 1
  br i1 %235, label %238, label %263

238:                                              ; preds = %236
  br i1 %237, label %239, label %517

239:                                              ; preds = %238
  store i32 149, i32* %21, align 8
  br label %285

240:                                              ; preds = %229
  br i1 %235, label %244, label %241

241:                                              ; preds = %240
  %242 = icmp ugt i8 %59, 1
  br i1 %242, label %517, label %243

243:                                              ; preds = %241
  store i32 151, i32* %21, align 8
  br label %285

244:                                              ; preds = %240
  store i32 152, i32* %21, align 8
  %245 = getelementptr inbounds %class.TType, %class.TType* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %245) #11
  %246 = load i8, i8* %58, align 1
  %247 = load i8, i8* %230, align 4
  store i8 %110, i8* %245, align 8
  %248 = getelementptr inbounds %class.TType, %class.TType* %10, i64 0, i32 1
  store i8 %43, i8* %248, align 1
  %249 = getelementptr inbounds %class.TType, %class.TType* %10, i64 0, i32 2
  store i8 0, i8* %249, align 2
  %250 = getelementptr inbounds %class.TType, %class.TType* %10, i64 0, i32 3
  store i8 %246, i8* %250, align 1
  %251 = getelementptr inbounds %class.TType, %class.TType* %10, i64 0, i32 4
  store i8 %247, i8* %251, align 4
  %252 = getelementptr inbounds %class.TType, %class.TType* %10, i64 0, i32 5
  store i8 0, i8* %252, align 1
  %253 = getelementptr inbounds %class.TType, %class.TType* %10, i64 0, i32 6
  %254 = getelementptr inbounds %class.TType, %class.TType* %10, i64 0, i32 10
  %255 = bitcast %struct.TLayoutQualifier* %254 to i64*
  %256 = bitcast i32* %253 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %256, i8 0, i64 24, i1 false) #11
  store i64 4294967295, i64* %255, align 8
  %257 = getelementptr inbounds %class.TType, %class.TType* %10, i64 0, i32 10, i32 2
  store i32 0, i32* %257, align 8
  %258 = getelementptr inbounds %class.TType, %class.TType* %10, i64 0, i32 11
  %259 = bitcast %class.TStructure** %258 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %259, i8 0, i64 16, i1 false) #11
  %260 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %261 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %260, i64 14
  %262 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %261, align 8
  call void %262(%class.TIntermBinary* %0, %class.TType* nonnull dereferenceable(64) %10) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %245) #11
  br label %285

263:                                              ; preds = %236
  %264 = icmp ugt i8 %59, 1
  br i1 %237, label %265, label %266

265:                                              ; preds = %263
  br i1 %264, label %285, label %267

266:                                              ; preds = %263
  br i1 %264, label %517, label %285

267:                                              ; preds = %265
  store i32 150, i32* %21, align 8
  %268 = getelementptr inbounds %class.TType, %class.TType* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %268) #11
  %269 = load i8, i8* %55, align 1
  store i8 %110, i8* %268, align 8
  %270 = getelementptr inbounds %class.TType, %class.TType* %11, i64 0, i32 1
  store i8 %43, i8* %270, align 1
  %271 = getelementptr inbounds %class.TType, %class.TType* %11, i64 0, i32 2
  store i8 0, i8* %271, align 2
  %272 = getelementptr inbounds %class.TType, %class.TType* %11, i64 0, i32 3
  store i8 %269, i8* %272, align 1
  %273 = getelementptr inbounds %class.TType, %class.TType* %11, i64 0, i32 4
  store i8 1, i8* %273, align 4
  %274 = getelementptr inbounds %class.TType, %class.TType* %11, i64 0, i32 5
  store i8 0, i8* %274, align 1
  %275 = getelementptr inbounds %class.TType, %class.TType* %11, i64 0, i32 6
  %276 = getelementptr inbounds %class.TType, %class.TType* %11, i64 0, i32 10
  %277 = bitcast %struct.TLayoutQualifier* %276 to i64*
  %278 = bitcast i32* %275 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %278, i8 0, i64 24, i1 false) #11
  store i64 4294967295, i64* %277, align 8
  %279 = getelementptr inbounds %class.TType, %class.TType* %11, i64 0, i32 10, i32 2
  store i32 0, i32* %279, align 8
  %280 = getelementptr inbounds %class.TType, %class.TType* %11, i64 0, i32 11
  %281 = bitcast %class.TStructure** %280 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %281, i8 0, i64 16, i1 false) #11
  %282 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %283 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %282, i64 14
  %284 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %283, align 8
  call void %284(%class.TIntermBinary* %0, %class.TType* nonnull dereferenceable(64) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %268) #11
  br label %285

285:                                              ; preds = %266, %265, %243, %267, %244, %239
  %286 = load i32, i32* %21, align 8
  %287 = load %class.TIntermTyped*, %class.TIntermTyped** %17, align 8
  %288 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %287, i64 0, i32 1
  %289 = load %class.TIntermTyped*, %class.TIntermTyped** %19, align 8
  %290 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %289, i64 0, i32 1
  %291 = call fastcc zeroext i1 @_ZL22ValidateMultiplication9TOperatorRK5TTypeS2_(i32 %286, %class.TType* dereferenceable(64) %288, %class.TType* dereferenceable(64) %290) #12
  br i1 %291, label %516, label %517

292:                                              ; preds = %108, %108
  %293 = icmp eq i8 %56, %59
  br i1 %293, label %294, label %517

294:                                              ; preds = %292
  %295 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %36, i64 0, i32 1, i32 4
  %296 = load i8, i8* %295, align 4
  %297 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 4
  %298 = load i8, i8* %297, align 4
  %299 = icmp eq i8 %296, %298
  br i1 %299, label %516, label %517

300:                                              ; preds = %108, %108, %108, %108, %108, %108, %108, %108, %108, %108, %108, %108, %108, %108, %108, %108, %108, %108
  %301 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %36, i64 0, i32 1, i32 4
  %302 = load i8, i8* %301, align 4
  %303 = icmp ugt i8 %302, 1
  %304 = icmp ugt i8 %59, 1
  %305 = and i1 %304, %303
  br i1 %305, label %306, label %310

306:                                              ; preds = %300
  %307 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 4
  %308 = load i8, i8* %307, align 4
  %309 = icmp ult i8 %308, 2
  br i1 %309, label %517, label %318

310:                                              ; preds = %300
  %311 = icmp ugt i8 %56, 1
  %312 = icmp ult i8 %302, 2
  %313 = and i1 %311, %312
  br i1 %313, label %314, label %318

314:                                              ; preds = %310
  %315 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 4
  %316 = load i8, i8* %315, align 4
  %317 = icmp ugt i8 %316, 1
  br i1 %317, label %517, label %318

318:                                              ; preds = %306, %310, %314
  %319 = icmp eq i8 %56, %59
  br i1 %319, label %320, label %324

320:                                              ; preds = %318
  %321 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 4
  %322 = load i8, i8* %321, align 4
  %323 = icmp eq i8 %302, %322
  br i1 %323, label %379, label %324

324:                                              ; preds = %320, %318
  %325 = icmp ne i8 %56, 1
  %326 = or i1 %325, %303
  br i1 %326, label %336, label %327

327:                                              ; preds = %324
  %328 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %36, i64 0, i32 1, i32 11
  %329 = load %class.TStructure*, %class.TStructure** %328, align 8
  %330 = icmp eq %class.TStructure* %329, null
  %331 = icmp ne i8 %110, 38
  %332 = and i1 %331, %330
  %333 = add i8 %110, -15
  %334 = icmp ugt i8 %333, 16
  %335 = and i1 %334, %332
  br i1 %335, label %353, label %336

336:                                              ; preds = %327, %324
  %337 = icmp eq i8 %59, 1
  br i1 %337, label %338, label %517

338:                                              ; preds = %336
  %339 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 4
  %340 = load i8, i8* %339, align 4
  %341 = icmp ugt i8 %340, 1
  br i1 %341, label %517, label %342

342:                                              ; preds = %338
  %343 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 11
  %344 = load %class.TStructure*, %class.TStructure** %343, align 8
  %345 = icmp eq %class.TStructure* %344, null
  br i1 %345, label %346, label %517

346:                                              ; preds = %342
  %347 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 0
  %348 = load i8, i8* %347, align 8
  %349 = icmp ne i8 %348, 38
  %350 = add i8 %348, -15
  %351 = icmp ugt i8 %350, 16
  %352 = and i1 %349, %351
  br i1 %352, label %359, label %517

353:                                              ; preds = %327
  %354 = icmp eq i8 %59, 1
  br i1 %354, label %355, label %371

355:                                              ; preds = %353
  %356 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 4
  %357 = load i8, i8* %356, align 4
  %358 = icmp ugt i8 %357, 1
  br i1 %358, label %371, label %359

359:                                              ; preds = %346, %355
  %360 = phi i8 [ %357, %355 ], [ %340, %346 ]
  %361 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 11
  %362 = load %class.TStructure*, %class.TStructure** %361, align 8
  %363 = icmp eq %class.TStructure* %362, null
  br i1 %363, label %364, label %371

364:                                              ; preds = %359
  %365 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 0
  %366 = load i8, i8* %365, align 8
  %367 = icmp ne i8 %366, 38
  %368 = add i8 %366, -15
  %369 = icmp ugt i8 %368, 16
  %370 = and i1 %367, %369
  br i1 %370, label %379, label %371

371:                                              ; preds = %364, %353, %355, %359
  %372 = tail call zeroext i1 @_ZNK15TIntermOperator13modifiesStateEv(%class.TIntermOperator* %20) #12
  %373 = add nsw i32 %111, -41
  %374 = icmp ult i32 %373, 2
  %375 = or i1 %374, %372
  br i1 %375, label %517, label %376

376:                                              ; preds = %371
  %377 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 4
  %378 = load i8, i8* %377, align 4
  br label %379

379:                                              ; preds = %376, %364, %320
  %380 = phi i8 [ %378, %376 ], [ %360, %364 ], [ %302, %320 ]
  %381 = icmp ult i8 %302, %380
  %382 = select i1 %381, i8 %380, i8 %302
  %383 = getelementptr inbounds %class.TType, %class.TType* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %383) #11
  store i8 %110, i8* %383, align 8
  %384 = getelementptr inbounds %class.TType, %class.TType* %12, i64 0, i32 1
  store i8 %43, i8* %384, align 1
  %385 = getelementptr inbounds %class.TType, %class.TType* %12, i64 0, i32 2
  store i8 0, i8* %385, align 2
  %386 = getelementptr inbounds %class.TType, %class.TType* %12, i64 0, i32 3
  %387 = trunc i32 %62 to i8
  store i8 %387, i8* %386, align 1
  %388 = getelementptr inbounds %class.TType, %class.TType* %12, i64 0, i32 4
  store i8 %382, i8* %388, align 4
  %389 = getelementptr inbounds %class.TType, %class.TType* %12, i64 0, i32 5
  store i8 0, i8* %389, align 1
  %390 = getelementptr inbounds %class.TType, %class.TType* %12, i64 0, i32 6
  %391 = getelementptr inbounds %class.TType, %class.TType* %12, i64 0, i32 10
  %392 = bitcast %struct.TLayoutQualifier* %391 to i64*
  %393 = bitcast i32* %390 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %393, i8 0, i64 24, i1 false) #11
  store i64 4294967295, i64* %392, align 8
  %394 = getelementptr inbounds %class.TType, %class.TType* %12, i64 0, i32 10, i32 2
  store i32 0, i32* %394, align 8
  %395 = getelementptr inbounds %class.TType, %class.TType* %12, i64 0, i32 11
  %396 = bitcast %class.TStructure** %395 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %396, i8 0, i64 16, i1 false) #11
  %397 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %398 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %397, i64 14
  %399 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %398, align 8
  call void %399(%class.TIntermBinary* %0, %class.TType* nonnull dereferenceable(64) %12) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %383) #11
  %400 = load %class.TIntermTyped*, %class.TIntermTyped** %17, align 8
  %401 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %400, i64 0, i32 1, i32 5
  %402 = load i8, i8* %401, align 1, !range !2
  %403 = icmp eq i8 %402, 0
  br i1 %403, label %516, label %404

404:                                              ; preds = %379
  %405 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %400, i64 0, i32 1, i32 6
  %406 = load i32, i32* %405, align 8
  %407 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %0, i64 0, i32 0, i32 0, i32 1, i32 5
  store i8 1, i8* %407, align 1
  %408 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %0, i64 0, i32 0, i32 0, i32 1, i32 6
  store i32 %406, i32* %408, align 8
  br label %516

409:                                              ; preds = %108, %108, %108, %108, %108, %108
  %410 = icmp eq i8 %56, %59
  br i1 %410, label %411, label %517

411:                                              ; preds = %409
  %412 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %36, i64 0, i32 1, i32 4
  %413 = load i8, i8* %412, align 4
  %414 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 4
  %415 = load i8, i8* %414, align 4
  %416 = icmp eq i8 %413, %415
  br i1 %416, label %417, label %517

417:                                              ; preds = %411
  %418 = getelementptr inbounds %class.TType, %class.TType* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %418) #11
  store i8 4, i8* %418, align 8
  %419 = getelementptr inbounds %class.TType, %class.TType* %13, i64 0, i32 1
  store i8 0, i8* %419, align 1
  %420 = getelementptr inbounds %class.TType, %class.TType* %13, i64 0, i32 2
  store i8 0, i8* %420, align 2
  %421 = getelementptr inbounds %class.TType, %class.TType* %13, i64 0, i32 3
  store i8 1, i8* %421, align 1
  %422 = getelementptr inbounds %class.TType, %class.TType* %13, i64 0, i32 4
  store i8 1, i8* %422, align 4
  %423 = getelementptr inbounds %class.TType, %class.TType* %13, i64 0, i32 5
  store i8 0, i8* %423, align 1
  %424 = getelementptr inbounds %class.TType, %class.TType* %13, i64 0, i32 6
  %425 = getelementptr inbounds %class.TType, %class.TType* %13, i64 0, i32 10
  %426 = bitcast %struct.TLayoutQualifier* %425 to i64*
  %427 = bitcast i32* %424 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %427, i8 0, i64 24, i1 false) #11
  store i64 4294967295, i64* %426, align 8
  %428 = getelementptr inbounds %class.TType, %class.TType* %13, i64 0, i32 10, i32 2
  store i32 0, i32* %428, align 8
  %429 = getelementptr inbounds %class.TType, %class.TType* %13, i64 0, i32 11
  %430 = bitcast %class.TStructure** %429 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %430, i8 0, i64 16, i1 false) #11
  %431 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %432 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %431, i64 14
  %433 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %432, align 8
  call void %433(%class.TIntermBinary* %0, %class.TType* nonnull dereferenceable(64) %13) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %418) #11
  br label %516

434:                                              ; preds = %108
  %435 = icmp ugt i8 %56, 1
  br i1 %435, label %436, label %517

436:                                              ; preds = %434
  %437 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %36, i64 0, i32 1, i32 4
  %438 = load i8, i8* %437, align 4
  %439 = icmp ult i8 %438, 2
  %440 = icmp ugt i8 %59, 1
  %441 = and i1 %440, %439
  br i1 %441, label %442, label %517

442:                                              ; preds = %436
  %443 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 4
  %444 = load i8, i8* %443, align 4
  %445 = icmp ult i8 %444, 2
  br i1 %445, label %446, label %517

446:                                              ; preds = %442
  %447 = getelementptr inbounds %class.TType, %class.TType* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %447) #11
  store i8 1, i8* %447, align 8
  %448 = getelementptr inbounds %class.TType, %class.TType* %14, i64 0, i32 1
  store i8 0, i8* %448, align 1
  %449 = getelementptr inbounds %class.TType, %class.TType* %14, i64 0, i32 2
  store i8 1, i8* %449, align 2
  %450 = getelementptr inbounds %class.TType, %class.TType* %14, i64 0, i32 3
  store i8 %59, i8* %450, align 1
  %451 = getelementptr inbounds %class.TType, %class.TType* %14, i64 0, i32 4
  store i8 %56, i8* %451, align 4
  %452 = getelementptr inbounds %class.TType, %class.TType* %14, i64 0, i32 5
  store i8 0, i8* %452, align 1
  %453 = getelementptr inbounds %class.TType, %class.TType* %14, i64 0, i32 6
  %454 = getelementptr inbounds %class.TType, %class.TType* %14, i64 0, i32 10
  %455 = bitcast %struct.TLayoutQualifier* %454 to i64*
  %456 = bitcast i32* %453 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %456, i8 0, i64 24, i1 false) #11
  store i64 4294967295, i64* %455, align 8
  %457 = getelementptr inbounds %class.TType, %class.TType* %14, i64 0, i32 10, i32 2
  store i32 0, i32* %457, align 8
  %458 = getelementptr inbounds %class.TType, %class.TType* %14, i64 0, i32 11
  %459 = bitcast %class.TStructure** %458 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %459, i8 0, i64 16, i1 false) #11
  %460 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %461 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %460, i64 14
  %462 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %461, align 8
  call void %462(%class.TIntermBinary* %0, %class.TType* nonnull dereferenceable(64) %14) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %447) #11
  br label %516

463:                                              ; preds = %108
  %464 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 4
  %465 = load i8, i8* %464, align 4
  %466 = icmp ugt i8 %465, 1
  br i1 %466, label %467, label %517

467:                                              ; preds = %463
  %468 = getelementptr inbounds %class.TType, %class.TType* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %468) #11
  store i8 1, i8* %468, align 8
  %469 = getelementptr inbounds %class.TType, %class.TType* %15, i64 0, i32 1
  store i8 0, i8* %469, align 1
  %470 = getelementptr inbounds %class.TType, %class.TType* %15, i64 0, i32 2
  store i8 1, i8* %470, align 2
  %471 = getelementptr inbounds %class.TType, %class.TType* %15, i64 0, i32 3
  store i8 %465, i8* %471, align 1
  %472 = getelementptr inbounds %class.TType, %class.TType* %15, i64 0, i32 4
  store i8 %59, i8* %472, align 4
  %473 = getelementptr inbounds %class.TType, %class.TType* %15, i64 0, i32 5
  store i8 0, i8* %473, align 1
  %474 = getelementptr inbounds %class.TType, %class.TType* %15, i64 0, i32 6
  %475 = getelementptr inbounds %class.TType, %class.TType* %15, i64 0, i32 10
  %476 = bitcast %struct.TLayoutQualifier* %475 to i64*
  %477 = bitcast i32* %474 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %477, i8 0, i64 24, i1 false) #11
  store i64 4294967295, i64* %476, align 8
  %478 = getelementptr inbounds %class.TType, %class.TType* %15, i64 0, i32 10, i32 2
  store i32 0, i32* %478, align 8
  %479 = getelementptr inbounds %class.TType, %class.TType* %15, i64 0, i32 11
  %480 = bitcast %class.TStructure** %479 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %480, i8 0, i64 16, i1 false) #11
  %481 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %482 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %481, i64 14
  %483 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %482, align 8
  call void %483(%class.TIntermBinary* %0, %class.TType* nonnull dereferenceable(64) %15) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %468) #11
  br label %516

484:                                              ; preds = %108
  %485 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 4
  %486 = load i8, i8* %485, align 4
  %487 = icmp ugt i8 %486, 1
  br i1 %487, label %488, label %517

488:                                              ; preds = %484
  %489 = getelementptr inbounds %class.TType, %class.TType* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %489) #11
  store i8 1, i8* %489, align 8
  %490 = getelementptr inbounds %class.TType, %class.TType* %16, i64 0, i32 1
  store i8 0, i8* %490, align 1
  %491 = getelementptr inbounds %class.TType, %class.TType* %16, i64 0, i32 2
  store i8 1, i8* %491, align 2
  %492 = getelementptr inbounds %class.TType, %class.TType* %16, i64 0, i32 3
  store i8 1, i8* %492, align 1
  %493 = getelementptr inbounds %class.TType, %class.TType* %16, i64 0, i32 4
  store i8 1, i8* %493, align 4
  %494 = getelementptr inbounds %class.TType, %class.TType* %16, i64 0, i32 5
  store i8 0, i8* %494, align 1
  %495 = getelementptr inbounds %class.TType, %class.TType* %16, i64 0, i32 6
  %496 = getelementptr inbounds %class.TType, %class.TType* %16, i64 0, i32 10
  %497 = bitcast %struct.TLayoutQualifier* %496 to i64*
  %498 = bitcast i32* %495 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %498, i8 0, i64 24, i1 false) #11
  store i64 4294967295, i64* %497, align 8
  %499 = getelementptr inbounds %class.TType, %class.TType* %16, i64 0, i32 10, i32 2
  store i32 0, i32* %499, align 8
  %500 = getelementptr inbounds %class.TType, %class.TType* %16, i64 0, i32 11
  %501 = bitcast %class.TStructure** %500 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %501, i8 0, i64 16, i1 false) #11
  %502 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %503 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %502, i64 14
  %504 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %503, align 8
  call void %504(%class.TIntermBinary* %0, %class.TType* nonnull dereferenceable(64) %16) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %489) #11
  br label %516

505:                                              ; preds = %108
  %506 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1, i32 4
  %507 = load i8, i8* %506, align 4
  %508 = icmp ugt i8 %507, 1
  %509 = icmp eq i8 %59, %507
  %510 = and i1 %508, %509
  br i1 %510, label %511, label %517

511:                                              ; preds = %505
  %512 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %39, i64 0, i32 1
  %513 = load void (%class.TIntermBinary*, %class.TType*)**, void (%class.TIntermBinary*, %class.TType*)*** %32, align 8
  %514 = getelementptr inbounds void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %513, i64 14
  %515 = load void (%class.TIntermBinary*, %class.TType*)*, void (%class.TIntermBinary*, %class.TType*)** %514, align 8
  tail call void %515(%class.TIntermBinary* %0, %class.TType* dereferenceable(64) %512) #10
  br label %516

516:                                              ; preds = %379, %404, %294, %285, %222, %511, %488, %467, %446, %417
  br label %517

517:                                              ; preds = %346, %434, %336, %338, %342, %266, %238, %241, %87, %83, %64, %91, %66, %108, %505, %484, %463, %436, %442, %409, %411, %371, %306, %314, %292, %294, %285, %222, %516, %23
  %518 = phi i1 [ false, %23 ], [ false, %87 ], [ false, %83 ], [ true, %64 ], [ true, %91 ], [ true, %66 ], [ true, %516 ], [ false, %222 ], [ false, %285 ], [ false, %294 ], [ false, %292 ], [ false, %314 ], [ false, %306 ], [ false, %371 ], [ false, %411 ], [ false, %409 ], [ false, %442 ], [ false, %436 ], [ false, %463 ], [ false, %484 ], [ false, %505 ], [ false, %108 ], [ false, %241 ], [ false, %238 ], [ false, %266 ], [ false, %346 ], [ false, %342 ], [ false, %338 ], [ false, %336 ], [ false, %434 ]
  ret i1 %518
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermTyped* @_ZN20TIntermConstantUnion4foldE9TOperatorP12TIntermTypedR9TInfoSink(%class.TIntermConstantUnion*, i32, %class.TIntermTyped*, %class.TInfoSink* dereferenceable(72)) local_unnamed_addr #2 align 2 {
  %5 = alloca [26 x i8], align 2
  %6 = alloca [20 x i8], align 4
  %7 = alloca [26 x i8], align 2
  %8 = alloca [20 x i8], align 4
  %9 = alloca [26 x i8], align 2
  %10 = alloca [20 x i8], align 4
  %11 = alloca [26 x i8], align 2
  %12 = alloca [20 x i8], align 4
  %13 = alloca [26 x i8], align 2
  %14 = alloca [20 x i8], align 4
  %15 = alloca [26 x i8], align 2
  %16 = alloca [20 x i8], align 4
  %17 = alloca [26 x i8], align 2
  %18 = alloca [20 x i8], align 4
  %19 = alloca [26 x i8], align 2
  %20 = alloca [20 x i8], align 4
  %21 = alloca [26 x i8], align 2
  %22 = alloca [20 x i8], align 4
  %23 = alloca [63 x i8], align 1
  %24 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 1
  %25 = load %class.ConstantUnion*, %class.ConstantUnion** %24, align 8
  %26 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 1, i32 5
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  %30 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %26) #10
  br i1 %29, label %40, label %31

31:                                               ; preds = %4
  %32 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 1, i32 6
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 1, i32 7
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %33, %35
  %37 = select i1 %36, i32 %35, i32 %33
  %38 = sext i32 %37 to i64
  %39 = mul i64 %30, %38
  br label %40

40:                                               ; preds = %4, %31
  %41 = phi i64 [ %39, %31 ], [ %30, %4 ]
  %42 = icmp eq %class.TIntermTyped* %2, null
  br i1 %42, label %1605, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0
  %45 = bitcast %class.TIntermTyped* %2 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %46 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %45, align 8
  %47 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %46, i64 2
  %48 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %47, align 8
  %49 = tail call %class.TIntermConstantUnion* %48(%class.TIntermNode* %44) #10
  %50 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 1
  %51 = load %class.ConstantUnion*, %class.ConstantUnion** %50, align 8
  %52 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %52)
  %53 = getelementptr inbounds [20 x i8], [20 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %53)
  %54 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 8
  %56 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 1, i32 1
  %57 = load i8, i8* %56, align 1
  %58 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 1, i32 3
  %59 = load i8, i8* %58, align 1
  %60 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 1, i32 4
  %61 = load i8, i8* %60, align 4
  %62 = load i8, i8* %27, align 1
  %63 = bitcast %class.TIntermConstantUnion* %0 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %52, i8* align 2 %64, i64 26, i1 false)
  %65 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 1, i32 10
  %66 = bitcast %struct.TLayoutQualifier* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 1, i32 10, i32 2
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds i8, i8* %63, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* align 4 %70, i64 20, i1 false)
  %71 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1
  %72 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 5
  %73 = load i8, i8* %72, align 1, !range !2
  %74 = icmp eq i8 %73, 0
  %75 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %71) #10
  br i1 %74, label %85, label %76

76:                                               ; preds = %43
  %77 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 6
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 7
  %80 = load i32, i32* %79, align 4
  %81 = icmp slt i32 %78, %80
  %82 = select i1 %81, i32 %80, i32 %78
  %83 = sext i32 %82 to i64
  %84 = mul i64 %75, %83
  br label %85

85:                                               ; preds = %43, %76
  %86 = phi i64 [ %84, %76 ], [ %75, %43 ]
  %87 = icmp eq i64 %86, 1
  %88 = icmp ugt i64 %41, 1
  %89 = and i1 %88, %87
  br i1 %89, label %90, label %124

90:                                               ; preds = %85
  %91 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %41, i64 8)
  %92 = extractvalue { i64, i1 } %91, 1
  %93 = extractvalue { i64, i1 } %91, 0
  %94 = select i1 %92, i64 -1, i64 %93
  %95 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %96 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %95, i64 %94) #10
  %97 = bitcast i8* %96 to %class.ConstantUnion*
  %98 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %97, i64 %41
  br label %99

99:                                               ; preds = %99, %90
  %100 = phi %class.ConstantUnion* [ %97, %90 ], [ %103, %99 ]
  %101 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %100, i64 0, i32 0, i32 0
  store i32 0, i32* %101, align 4
  %102 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %100, i64 0, i32 1
  store i8 0, i8* %102, align 4
  %103 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %100, i64 1
  %104 = icmp eq %class.ConstantUnion* %103, %98
  br i1 %104, label %105, label %99

105:                                              ; preds = %99
  %106 = icmp eq i64 %41, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = bitcast %class.ConstantUnion** %50 to i8**
  br label %117

109:                                              ; preds = %117, %105
  %110 = load i8, i8* %54, align 8
  %111 = load i8, i8* %56, align 1
  %112 = load i8, i8* %58, align 1
  %113 = load i8, i8* %60, align 4
  %114 = load i8, i8* %27, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %52, i8* align 2 %64, i64 26, i1 false)
  %115 = load i64, i64* %66, align 8
  %116 = load i32, i32* %68, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* align 4 %70, i64 20, i1 false)
  br label %226

117:                                              ; preds = %117, %107
  %118 = phi i64 [ 0, %107 ], [ %122, %117 ]
  %119 = load i8*, i8** %108, align 8
  %120 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %97, i64 %118
  %121 = bitcast %class.ConstantUnion* %120 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %121, i8* align 4 %119, i64 5, i1 false)
  %122 = add nuw i64 %118, 1
  %123 = icmp eq i64 %122, %41
  br i1 %123, label %109, label %117

124:                                              ; preds = %85
  %125 = load i8, i8* %72, align 1, !range !2
  %126 = icmp eq i8 %125, 0
  %127 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %71) #10
  br i1 %126, label %137, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 6
  %130 = load i32, i32* %129, align 8
  %131 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 7
  %132 = load i32, i32* %131, align 4
  %133 = icmp slt i32 %130, %132
  %134 = select i1 %133, i32 %132, i32 %130
  %135 = sext i32 %134 to i64
  %136 = mul i64 %127, %135
  br label %137

137:                                              ; preds = %124, %128
  %138 = phi i64 [ %136, %128 ], [ %127, %124 ]
  %139 = icmp ugt i64 %138, 1
  %140 = icmp eq i64 %41, 1
  %141 = and i1 %140, %139
  br i1 %141, label %142, label %226

142:                                              ; preds = %137
  %143 = load i8, i8* %72, align 1, !range !2
  %144 = icmp eq i8 %143, 0
  %145 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %71) #10
  br i1 %144, label %155, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 6
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 7
  %150 = load i32, i32* %149, align 4
  %151 = icmp slt i32 %148, %150
  %152 = select i1 %151, i32 %150, i32 %148
  %153 = sext i32 %152 to i64
  %154 = mul i64 %145, %153
  br label %155

155:                                              ; preds = %142, %146
  %156 = phi i64 [ %154, %146 ], [ %145, %142 ]
  %157 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %156, i64 8)
  %158 = extractvalue { i64, i1 } %157, 1
  %159 = extractvalue { i64, i1 } %157, 0
  %160 = select i1 %158, i64 -1, i64 %159
  %161 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %162 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %161, i64 %160) #10
  %163 = bitcast i8* %162 to %class.ConstantUnion*
  %164 = icmp eq i64 %156, 0
  br i1 %164, label %173, label %165

165:                                              ; preds = %155
  %166 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %163, i64 %156
  br label %167

167:                                              ; preds = %167, %165
  %168 = phi %class.ConstantUnion* [ %163, %165 ], [ %171, %167 ]
  %169 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %168, i64 0, i32 0, i32 0
  store i32 0, i32* %169, align 4
  %170 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %168, i64 0, i32 1
  store i8 0, i8* %170, align 4
  %171 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %168, i64 1
  %172 = icmp eq %class.ConstantUnion* %171, %166
  br i1 %172, label %173, label %167

173:                                              ; preds = %167, %155
  %174 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 6
  %175 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 7
  %176 = bitcast %class.ConstantUnion** %24 to i8**
  br label %177

177:                                              ; preds = %221, %173
  %178 = phi i64 [ 0, %173 ], [ %225, %221 ]
  %179 = load i8, i8* %72, align 1, !range !2
  %180 = icmp eq i8 %179, 0
  %181 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %71) #10
  br i1 %180, label %189, label %182

182:                                              ; preds = %177
  %183 = load i32, i32* %174, align 8
  %184 = load i32, i32* %175, align 4
  %185 = icmp slt i32 %183, %184
  %186 = select i1 %185, i32 %184, i32 %183
  %187 = sext i32 %186 to i64
  %188 = mul i64 %181, %187
  br label %189

189:                                              ; preds = %177, %182
  %190 = phi i64 [ %188, %182 ], [ %181, %177 ]
  %191 = icmp ult i64 %178, %190
  br i1 %191, label %221, label %192

192:                                              ; preds = %189
  %193 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 0
  %194 = load i8, i8* %193, align 8
  %195 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 1
  %196 = load i8, i8* %195, align 1
  %197 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 3
  %198 = load i8, i8* %197, align 1
  %199 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 4
  %200 = load i8, i8* %199, align 4
  %201 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 5
  %202 = load i8, i8* %201, align 1
  %203 = bitcast %class.TIntermConstantUnion* %49 to i8*
  %204 = getelementptr inbounds i8, i8* %203, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %52, i8* align 2 %204, i64 26, i1 false)
  %205 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 10
  %206 = bitcast %struct.TLayoutQualifier* %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 10, i32 2
  %209 = load i32, i32* %208, align 8
  %210 = getelementptr inbounds i8, i8* %203, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* align 4 %210, i64 20, i1 false)
  %211 = load i8, i8* %72, align 1, !range !2
  %212 = icmp eq i8 %211, 0
  %213 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %71) #10
  br i1 %212, label %226, label %214

214:                                              ; preds = %192
  %215 = load i32, i32* %174, align 8
  %216 = load i32, i32* %175, align 4
  %217 = icmp slt i32 %215, %216
  %218 = select i1 %217, i32 %216, i32 %215
  %219 = sext i32 %218 to i64
  %220 = mul i64 %213, %219
  br label %226

221:                                              ; preds = %189
  %222 = load i8*, i8** %176, align 8
  %223 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %163, i64 %178
  %224 = bitcast %class.ConstantUnion* %223 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %224, i8* align 4 %222, i64 5, i1 false)
  %225 = add nuw i64 %178, 1
  br label %177

226:                                              ; preds = %214, %192, %137, %109
  %227 = phi i32 [ %116, %109 ], [ %69, %137 ], [ %209, %192 ], [ %209, %214 ]
  %228 = phi i64 [ %115, %109 ], [ %67, %137 ], [ %207, %192 ], [ %207, %214 ]
  %229 = phi i8 [ %114, %109 ], [ %62, %137 ], [ %202, %192 ], [ %202, %214 ]
  %230 = phi i8 [ %113, %109 ], [ %61, %137 ], [ %200, %192 ], [ %200, %214 ]
  %231 = phi i8 [ %112, %109 ], [ %59, %137 ], [ %198, %192 ], [ %198, %214 ]
  %232 = phi i8 [ %111, %109 ], [ %57, %137 ], [ %196, %192 ], [ %196, %214 ]
  %233 = phi i8 [ %110, %109 ], [ %55, %137 ], [ %194, %192 ], [ %194, %214 ]
  %234 = phi %class.ConstantUnion* [ %97, %109 ], [ %51, %137 ], [ %51, %192 ], [ %51, %214 ]
  %235 = phi i64 [ %41, %109 ], [ %41, %137 ], [ %213, %192 ], [ %220, %214 ]
  %236 = phi %class.ConstantUnion* [ %25, %109 ], [ %25, %137 ], [ %163, %192 ], [ %163, %214 ]
  switch i32 %1, label %1603 [
    i32 16, label %237
    i32 17, label %265
    i32 18, label %293
    i32 33, label %293
    i32 36, label %293
    i32 111, label %321
    i32 29, label %414
    i32 30, label %464
    i32 31, label %511
    i32 32, label %523
    i32 19, label %552
    i32 40, label %552
    i32 35, label %642
    i32 34, label %729
    i32 39, label %820
    i32 37, label %862
    i32 38, label %904
    i32 43, label %940
    i32 44, label %980
    i32 45, label %1020
    i32 41, label %1060
    i32 42, label %1100
    i32 24, label %1146
    i32 25, label %1202
    i32 26, label %1258
    i32 27, label %1314
    i32 20, label %1370
    i32 21, label %1421
    i32 83, label %1473
    i32 82, label %1523
  ]

237:                                              ; preds = %226
  %238 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %239 = extractvalue { i64, i1 } %238, 1
  %240 = extractvalue { i64, i1 } %238, 0
  %241 = select i1 %239, i64 -1, i64 %240
  %242 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %243 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %242, i64 %241) #10
  %244 = bitcast i8* %243 to %class.ConstantUnion*
  %245 = icmp eq i64 %235, 0
  br i1 %245, label %1573, label %246

246:                                              ; preds = %237
  %247 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %244, i64 %235
  br label %248

248:                                              ; preds = %248, %246
  %249 = phi %class.ConstantUnion* [ %244, %246 ], [ %252, %248 ]
  %250 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %249, i64 0, i32 0, i32 0
  store i32 0, i32* %250, align 4
  %251 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %249, i64 0, i32 1
  store i8 0, i8* %251, align 4
  %252 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %249, i64 1
  %253 = icmp eq %class.ConstantUnion* %252, %247
  br i1 %253, label %254, label %248

254:                                              ; preds = %248
  br i1 %245, label %1573, label %255

255:                                              ; preds = %254, %255
  %256 = phi i64 [ %263, %255 ], [ 0, %254 ]
  %257 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %256
  %258 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %256
  %259 = tail call i64 @_ZNK13ConstantUnionplERKS_(%class.ConstantUnion* %257, %class.ConstantUnion* dereferenceable(8) %258) #12
  %260 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %244, i64 %256
  %261 = bitcast %class.ConstantUnion* %260 to i40*
  %262 = trunc i64 %259 to i40
  store i40 %262, i40* %261, align 4
  %263 = add nuw i64 %256, 1
  %264 = icmp eq i64 %263, %235
  br i1 %264, label %1573, label %255

265:                                              ; preds = %226
  %266 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %267 = extractvalue { i64, i1 } %266, 1
  %268 = extractvalue { i64, i1 } %266, 0
  %269 = select i1 %267, i64 -1, i64 %268
  %270 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %271 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %270, i64 %269) #10
  %272 = bitcast i8* %271 to %class.ConstantUnion*
  %273 = icmp eq i64 %235, 0
  br i1 %273, label %1573, label %274

274:                                              ; preds = %265
  %275 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %272, i64 %235
  br label %276

276:                                              ; preds = %276, %274
  %277 = phi %class.ConstantUnion* [ %272, %274 ], [ %280, %276 ]
  %278 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %277, i64 0, i32 0, i32 0
  store i32 0, i32* %278, align 4
  %279 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %277, i64 0, i32 1
  store i8 0, i8* %279, align 4
  %280 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %277, i64 1
  %281 = icmp eq %class.ConstantUnion* %280, %275
  br i1 %281, label %282, label %276

282:                                              ; preds = %276
  br i1 %273, label %1573, label %283

283:                                              ; preds = %282, %283
  %284 = phi i64 [ %291, %283 ], [ 0, %282 ]
  %285 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %284
  %286 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %284
  %287 = tail call i64 @_ZNK13ConstantUnionmiERKS_(%class.ConstantUnion* %285, %class.ConstantUnion* dereferenceable(8) %286) #12
  %288 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %272, i64 %284
  %289 = bitcast %class.ConstantUnion* %288 to i40*
  %290 = trunc i64 %287 to i40
  store i40 %290, i40* %289, align 4
  %291 = add nuw i64 %284, 1
  %292 = icmp eq i64 %291, %235
  br i1 %292, label %1573, label %283

293:                                              ; preds = %226, %226, %226
  %294 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %295 = extractvalue { i64, i1 } %294, 1
  %296 = extractvalue { i64, i1 } %294, 0
  %297 = select i1 %295, i64 -1, i64 %296
  %298 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %299 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %298, i64 %297) #10
  %300 = bitcast i8* %299 to %class.ConstantUnion*
  %301 = icmp eq i64 %235, 0
  br i1 %301, label %1573, label %302

302:                                              ; preds = %293
  %303 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %300, i64 %235
  br label %304

304:                                              ; preds = %304, %302
  %305 = phi %class.ConstantUnion* [ %300, %302 ], [ %308, %304 ]
  %306 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %305, i64 0, i32 0, i32 0
  store i32 0, i32* %306, align 4
  %307 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %305, i64 0, i32 1
  store i8 0, i8* %307, align 4
  %308 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %305, i64 1
  %309 = icmp eq %class.ConstantUnion* %308, %303
  br i1 %309, label %310, label %304

310:                                              ; preds = %304
  br i1 %301, label %1573, label %311

311:                                              ; preds = %310, %311
  %312 = phi i64 [ %319, %311 ], [ 0, %310 ]
  %313 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %312
  %314 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %312
  %315 = tail call i64 @_ZNK13ConstantUnionmlERKS_(%class.ConstantUnion* %313, %class.ConstantUnion* dereferenceable(8) %314) #12
  %316 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %300, i64 %312
  %317 = bitcast %class.ConstantUnion* %316 to i40*
  %318 = trunc i64 %315 to i40
  store i40 %318, i40* %317, align 4
  %319 = add nuw i64 %312, 1
  %320 = icmp eq i64 %319, %235
  br i1 %320, label %1573, label %311

321:                                              ; preds = %226
  %322 = getelementptr inbounds %class.TType, %class.TType* %26, i64 0, i32 0
  %323 = load i8, i8* %322, align 8
  %324 = icmp eq i8 %323, 1
  br i1 %324, label %325, label %329

325:                                              ; preds = %321
  %326 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 0
  %327 = load i8, i8* %326, align 8
  %328 = icmp eq i8 %327, 1
  br i1 %328, label %337, label %329

329:                                              ; preds = %325, %321
  %330 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %331 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %332 = bitcast %struct.TSourceLoc* %331 to i64*
  %333 = load i64, i64* %332, align 4
  %334 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %335 = bitcast i32* %334 to i64*
  %336 = load i64, i64* %335, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %330, i32 4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.87, i64 0, i64 0), i64 %333, i64 %336) #10
  br label %1603

337:                                              ; preds = %325
  %338 = load i8, i8* %58, align 1
  %339 = load i8, i8* %60, align 4
  %340 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 3
  %341 = load i8, i8* %340, align 1
  %342 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 4
  %343 = load i8, i8* %342, align 4
  %344 = icmp eq i8 %338, %343
  br i1 %344, label %345, label %406

345:                                              ; preds = %337
  %346 = zext i8 %341 to i32
  %347 = zext i8 %339 to i32
  %348 = mul nuw nsw i32 %346, %347
  %349 = shl nuw nsw i32 %348, 3
  %350 = zext i32 %349 to i64
  %351 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %352 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %351, i64 %350) #10
  %353 = bitcast i8* %352 to %class.ConstantUnion*
  %354 = icmp eq i32 %348, 0
  br i1 %354, label %364, label %355

355:                                              ; preds = %345
  %356 = zext i32 %348 to i64
  %357 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %353, i64 %356
  br label %358

358:                                              ; preds = %358, %355
  %359 = phi %class.ConstantUnion* [ %353, %355 ], [ %362, %358 ]
  %360 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %359, i64 0, i32 0, i32 0
  store i32 0, i32* %360, align 4
  %361 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %359, i64 0, i32 1
  store i8 0, i8* %361, align 4
  %362 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %359, i64 1
  %363 = icmp eq %class.ConstantUnion* %362, %357
  br i1 %363, label %364, label %358

364:                                              ; preds = %358, %345
  %365 = icmp eq i8 %339, 0
  br i1 %365, label %1573, label %366

366:                                              ; preds = %364
  %367 = icmp eq i8 %341, 0
  %368 = icmp eq i8 %338, 0
  %369 = zext i8 %339 to i64
  %370 = zext i8 %343 to i64
  %371 = zext i8 %341 to i64
  %372 = zext i8 %338 to i64
  br label %373

373:                                              ; preds = %375, %366
  %374 = phi i64 [ 0, %366 ], [ %376, %375 ]
  br i1 %367, label %375, label %378

375:                                              ; preds = %387, %373
  %376 = add nuw nsw i64 %374, 1
  %377 = icmp eq i64 %376, %369
  br i1 %377, label %1573, label %373

378:                                              ; preds = %373, %387
  %379 = phi i64 [ %388, %387 ], [ 0, %373 ]
  %380 = mul nuw nsw i64 %379, %369
  %381 = add nuw nsw i64 %380, %374
  %382 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %353, i64 %381
  %383 = bitcast %class.ConstantUnion* %382 to float*
  store float 0.000000e+00, float* %383, align 4
  %384 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %353, i64 %381, i32 1
  store i8 1, i8* %384, align 4
  br i1 %368, label %387, label %385

385:                                              ; preds = %378
  %386 = mul nuw nsw i64 %379, %370
  br label %390

387:                                              ; preds = %390, %378
  %388 = add nuw nsw i64 %379, 1
  %389 = icmp eq i64 %388, %371
  br i1 %389, label %375, label %378

390:                                              ; preds = %390, %385
  %391 = phi float [ 0.000000e+00, %385 ], [ %403, %390 ]
  %392 = phi i64 [ 0, %385 ], [ %404, %390 ]
  %393 = mul nuw nsw i64 %392, %369
  %394 = add nuw nsw i64 %393, %374
  %395 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %394
  %396 = bitcast %class.ConstantUnion* %395 to float*
  %397 = load float, float* %396, align 4
  %398 = add nuw nsw i64 %392, %386
  %399 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %398
  %400 = bitcast %class.ConstantUnion* %399 to float*
  %401 = load float, float* %400, align 4
  %402 = fmul float %397, %401
  %403 = fadd float %391, %402
  store float %403, float* %383, align 4
  store i8 1, i8* %384, align 4
  %404 = add nuw nsw i64 %392, 1
  %405 = icmp eq i64 %404, %372
  br i1 %405, label %387, label %390

406:                                              ; preds = %337
  %407 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %408 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %409 = bitcast %struct.TSourceLoc* %408 to i64*
  %410 = load i64, i64* %409, align 4
  %411 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %412 = bitcast i32* %411 to i64*
  %413 = load i64, i64* %412, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %407, i32 4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.87, i64 0, i64 0), i64 %410, i64 %413) #10
  br label %1603

414:                                              ; preds = %226
  %415 = load i8, i8* %58, align 1
  %416 = zext i8 %415 to i32
  %417 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 3
  %418 = load i8, i8* %417, align 1
  %419 = zext i8 %418 to i32
  %420 = mul nuw nsw i32 %419, %416
  %421 = shl nuw nsw i32 %420, 3
  %422 = zext i32 %421 to i64
  %423 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %424 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %423, i64 %422) #10
  %425 = bitcast i8* %424 to %class.ConstantUnion*
  %426 = icmp eq i32 %420, 0
  br i1 %426, label %436, label %427

427:                                              ; preds = %414
  %428 = zext i32 %420 to i64
  %429 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %425, i64 %428
  br label %430

430:                                              ; preds = %430, %427
  %431 = phi %class.ConstantUnion* [ %425, %427 ], [ %434, %430 ]
  %432 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %431, i64 0, i32 0, i32 0
  store i32 0, i32* %432, align 4
  %433 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %431, i64 0, i32 1
  store i8 0, i8* %433, align 4
  %434 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %431, i64 1
  %435 = icmp eq %class.ConstantUnion* %434, %429
  br i1 %435, label %436, label %430

436:                                              ; preds = %430, %414
  %437 = icmp eq i8 %415, 0
  br i1 %437, label %1573, label %438

438:                                              ; preds = %436
  %439 = icmp eq i8 %418, 0
  %440 = zext i8 %415 to i64
  %441 = zext i8 %418 to i64
  br label %442

442:                                              ; preds = %447, %438
  %443 = phi i64 [ 0, %438 ], [ %448, %447 ]
  br i1 %439, label %447, label %444

444:                                              ; preds = %442
  %445 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %443
  %446 = bitcast %class.ConstantUnion* %445 to float*
  br label %450

447:                                              ; preds = %450, %442
  %448 = add nuw nsw i64 %443, 1
  %449 = icmp eq i64 %448, %440
  br i1 %449, label %1573, label %442

450:                                              ; preds = %450, %444
  %451 = phi i64 [ 0, %444 ], [ %462, %450 ]
  %452 = mul nuw nsw i64 %451, %440
  %453 = add nuw nsw i64 %452, %443
  %454 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %425, i64 %453
  %455 = load float, float* %446, align 4
  %456 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %451
  %457 = bitcast %class.ConstantUnion* %456 to float*
  %458 = load float, float* %457, align 4
  %459 = fmul float %455, %458
  %460 = bitcast %class.ConstantUnion* %454 to float*
  store float %459, float* %460, align 4
  %461 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %425, i64 %453, i32 1
  store i8 1, i8* %461, align 4
  %462 = add nuw nsw i64 %451, 1
  %463 = icmp eq i64 %462, %441
  br i1 %463, label %447, label %450

464:                                              ; preds = %226
  %465 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 3
  %466 = load i8, i8* %465, align 1
  %467 = zext i8 %466 to i32
  %468 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 4
  %469 = load i8, i8* %468, align 4
  %470 = zext i8 %469 to i32
  %471 = mul nuw nsw i32 %470, %467
  %472 = shl nuw nsw i32 %471, 3
  %473 = zext i32 %472 to i64
  %474 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %475 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %474, i64 %473) #10
  %476 = bitcast i8* %475 to %class.ConstantUnion*
  %477 = icmp eq i32 %471, 0
  br i1 %477, label %487, label %478

478:                                              ; preds = %464
  %479 = zext i32 %471 to i64
  %480 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %476, i64 %479
  br label %481

481:                                              ; preds = %481, %478
  %482 = phi %class.ConstantUnion* [ %476, %478 ], [ %485, %481 ]
  %483 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %482, i64 0, i32 0, i32 0
  store i32 0, i32* %483, align 4
  %484 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %482, i64 0, i32 1
  store i8 0, i8* %484, align 4
  %485 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %482, i64 1
  %486 = icmp eq %class.ConstantUnion* %485, %480
  br i1 %486, label %487, label %481

487:                                              ; preds = %481, %464
  %488 = icmp eq i8 %469, 0
  br i1 %488, label %1573, label %489

489:                                              ; preds = %487
  %490 = icmp eq i8 %466, 0
  %491 = zext i8 %469 to i64
  %492 = zext i8 %466 to i64
  br label %493

493:                                              ; preds = %497, %489
  %494 = phi i64 [ 0, %489 ], [ %498, %497 ]
  br i1 %490, label %497, label %495

495:                                              ; preds = %493
  %496 = mul nuw nsw i64 %494, %492
  br label %500

497:                                              ; preds = %500, %493
  %498 = add nuw nsw i64 %494, 1
  %499 = icmp eq i64 %498, %491
  br i1 %499, label %1573, label %493

500:                                              ; preds = %500, %495
  %501 = phi i64 [ 0, %495 ], [ %509, %500 ]
  %502 = mul nuw nsw i64 %501, %491
  %503 = add nuw nsw i64 %502, %494
  %504 = add nuw nsw i64 %501, %496
  %505 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %504, i32 0, i32 0
  %506 = load i32, i32* %505, align 4
  %507 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %476, i64 %503, i32 0, i32 0
  store i32 %506, i32* %507, align 4
  %508 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %476, i64 %503, i32 1
  store i8 1, i8* %508, align 4
  %509 = add nuw nsw i64 %501, 1
  %510 = icmp eq i64 %509, %492
  br i1 %510, label %497, label %500

511:                                              ; preds = %226
  %512 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %513 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %512, i64 8) #10
  %514 = bitcast i8* %513 to %class.ConstantUnion*
  %515 = bitcast i8* %513 to i32*
  store i32 0, i32* %515, align 4
  %516 = getelementptr inbounds i8, i8* %513, i64 4
  store i8 0, i8* %516, align 4
  %517 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 3
  %518 = load i8, i8* %517, align 1
  %519 = zext i8 %518 to i32
  %520 = tail call float @_Z18ComputeDeterminantiP13ConstantUnion(i32 %519, %class.ConstantUnion* %234) #12
  %521 = bitcast i8* %513 to float*
  store float %520, float* %521, align 4
  %522 = getelementptr inbounds i8, i8* %513, i64 4
  store i8 1, i8* %522, align 4
  br label %1573

523:                                              ; preds = %226
  %524 = tail call %class.ConstantUnion* @_Z13CreateInverseP20TIntermConstantUnionP13ConstantUnion(%class.TIntermConstantUnion* %49, %class.ConstantUnion* %234) #12
  %525 = icmp eq %class.ConstantUnion* %524, null
  br i1 %525, label %526, label %1573

526:                                              ; preds = %523
  %527 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %528 = extractvalue { i64, i1 } %527, 1
  %529 = extractvalue { i64, i1 } %527, 0
  %530 = select i1 %528, i64 -1, i64 %529
  %531 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %532 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %531, i64 %530) #10
  %533 = bitcast i8* %532 to %class.ConstantUnion*
  %534 = icmp eq i64 %235, 0
  br i1 %534, label %1573, label %535

535:                                              ; preds = %526
  %536 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %533, i64 %235
  br label %537

537:                                              ; preds = %537, %535
  %538 = phi %class.ConstantUnion* [ %533, %535 ], [ %541, %537 ]
  %539 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %538, i64 0, i32 0, i32 0
  store i32 0, i32* %539, align 4
  %540 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %538, i64 0, i32 1
  store i8 0, i8* %540, align 4
  %541 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %538, i64 1
  %542 = icmp eq %class.ConstantUnion* %541, %536
  br i1 %542, label %543, label %537

543:                                              ; preds = %537
  br i1 %534, label %1573, label %544

544:                                              ; preds = %543, %544
  %545 = phi i64 [ %550, %544 ], [ 0, %543 ]
  %546 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %545
  %547 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %533, i64 %545
  %548 = bitcast %class.ConstantUnion* %547 to i8*
  %549 = bitcast %class.ConstantUnion* %546 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %548, i8* align 4 %549, i64 5, i1 false)
  %550 = add nuw i64 %545, 1
  %551 = icmp eq i64 %550, %235
  br i1 %551, label %1573, label %544

552:                                              ; preds = %226, %226
  %553 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %554 = extractvalue { i64, i1 } %553, 1
  %555 = extractvalue { i64, i1 } %553, 0
  %556 = select i1 %554, i64 -1, i64 %555
  %557 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %558 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %557, i64 %556) #10
  %559 = bitcast i8* %558 to %class.ConstantUnion*
  %560 = icmp eq i64 %235, 0
  br i1 %560, label %1573, label %561

561:                                              ; preds = %552
  %562 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %559, i64 %235
  br label %563

563:                                              ; preds = %563, %561
  %564 = phi %class.ConstantUnion* [ %559, %561 ], [ %567, %563 ]
  %565 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %564, i64 0, i32 0, i32 0
  store i32 0, i32* %565, align 4
  %566 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %564, i64 0, i32 1
  store i8 0, i8* %566, align 4
  %567 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %564, i64 1
  %568 = icmp eq %class.ConstantUnion* %567, %562
  br i1 %568, label %569, label %563

569:                                              ; preds = %563
  br i1 %560, label %1573, label %570

570:                                              ; preds = %569
  %571 = getelementptr inbounds %class.TType, %class.TType* %26, i64 0, i32 0
  %572 = icmp eq i32 %1, 19
  %573 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %574 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %575 = bitcast %struct.TSourceLoc* %574 to i64*
  %576 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %577 = bitcast i32* %576 to i64*
  br label %578

578:                                              ; preds = %637, %570
  %579 = phi i64 [ 0, %570 ], [ %640, %637 ]
  %580 = load i8, i8* %571, align 8
  switch i8 %580, label %634 [
    i8 1, label %581
    i8 2, label %598
    i8 3, label %616
  ]

581:                                              ; preds = %578
  %582 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %579
  %583 = bitcast %class.ConstantUnion* %582 to float*
  %584 = load float, float* %583, align 4
  %585 = fcmp oeq float %584, 0.000000e+00
  br i1 %585, label %586, label %591

586:                                              ; preds = %581
  %587 = load i64, i64* %575, align 4
  %588 = load i64, i64* %577, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %573, i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.89, i64 0, i64 0), i64 %587, i64 %588) #10
  %589 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %559, i64 %579
  %590 = bitcast %class.ConstantUnion* %589 to float*
  store float 0x47EFFFFFE0000000, float* %590, align 4
  br label %637

591:                                              ; preds = %581
  %592 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %559, i64 %579
  %593 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %579
  %594 = bitcast %class.ConstantUnion* %593 to float*
  %595 = load float, float* %594, align 4
  %596 = fdiv float %595, %584
  %597 = bitcast %class.ConstantUnion* %592 to float*
  store float %596, float* %597, align 4
  br label %637

598:                                              ; preds = %578
  %599 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %579, i32 0, i32 0
  %600 = load i32, i32* %599, align 4
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %602, label %606

602:                                              ; preds = %598
  %603 = load i64, i64* %575, align 4
  %604 = load i64, i64* %577, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %573, i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.89, i64 0, i64 0), i64 %603, i64 %604) #10
  %605 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %559, i64 %579, i32 0, i32 0
  store i32 2147483647, i32* %605, align 4
  br label %637

606:                                              ; preds = %598
  %607 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %559, i64 %579
  %608 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %579, i32 0, i32 0
  %609 = load i32, i32* %608, align 4
  br i1 %572, label %610, label %613

610:                                              ; preds = %606
  %611 = sdiv i32 %609, %600
  %612 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %607, i64 0, i32 0, i32 0
  store i32 %611, i32* %612, align 4
  br label %637

613:                                              ; preds = %606
  %614 = srem i32 %609, %600
  %615 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %607, i64 0, i32 0, i32 0
  store i32 %614, i32* %615, align 4
  br label %637

616:                                              ; preds = %578
  %617 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %579, i32 0, i32 0
  %618 = load i32, i32* %617, align 4
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %620, label %624

620:                                              ; preds = %616
  %621 = load i64, i64* %575, align 4
  %622 = load i64, i64* %577, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %573, i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.89, i64 0, i64 0), i64 %621, i64 %622) #10
  %623 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %559, i64 %579, i32 0, i32 0
  store i32 -1, i32* %623, align 4
  br label %637

624:                                              ; preds = %616
  %625 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %559, i64 %579
  %626 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %579, i32 0, i32 0
  %627 = load i32, i32* %626, align 4
  br i1 %572, label %628, label %631

628:                                              ; preds = %624
  %629 = udiv i32 %627, %618
  %630 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %625, i64 0, i32 0, i32 0
  store i32 %629, i32* %630, align 4
  br label %637

631:                                              ; preds = %624
  %632 = urem i32 %627, %618
  %633 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %625, i64 0, i32 0, i32 0
  store i32 %632, i32* %633, align 4
  br label %637

634:                                              ; preds = %578
  %635 = load i64, i64* %575, align 4
  %636 = load i64, i64* %577, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %573, i32 4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.92, i64 0, i64 0), i64 %635, i64 %636) #10
  br label %1603

637:                                              ; preds = %591, %586, %610, %613, %602, %628, %631, %620
  %638 = phi i8 [ 1, %591 ], [ 1, %586 ], [ 2, %610 ], [ 2, %613 ], [ 2, %602 ], [ 3, %628 ], [ 3, %631 ], [ 3, %620 ]
  %639 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %559, i64 %579, i32 1
  store i8 %638, i8* %639, align 4
  %640 = add nuw i64 %579, 1
  %641 = icmp eq i64 %640, %235
  br i1 %641, label %1573, label %578

642:                                              ; preds = %226
  %643 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 0
  %644 = load i8, i8* %643, align 8
  %645 = icmp eq i8 %644, 1
  br i1 %645, label %654, label %646

646:                                              ; preds = %642
  %647 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %648 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %649 = bitcast %struct.TSourceLoc* %648 to i64*
  %650 = load i64, i64* %649, align 4
  %651 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %652 = bitcast i32* %651 to i64*
  %653 = load i64, i64* %652, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %647, i32 4, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.93, i64 0, i64 0), i64 %650, i64 %653) #10
  br label %1603

654:                                              ; preds = %642
  %655 = load i8, i8* %60, align 4
  %656 = zext i8 %655 to i64
  %657 = shl nuw nsw i64 %656, 3
  %658 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %659 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %658, i64 %657) #10
  %660 = bitcast i8* %659 to %class.ConstantUnion*
  %661 = icmp eq i8 %655, 0
  br i1 %661, label %670, label %662

662:                                              ; preds = %654
  %663 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %660, i64 %656
  br label %664

664:                                              ; preds = %664, %662
  %665 = phi %class.ConstantUnion* [ %660, %662 ], [ %668, %664 ]
  %666 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %665, i64 0, i32 0, i32 0
  store i32 0, i32* %666, align 4
  %667 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %665, i64 0, i32 1
  store i8 0, i8* %667, align 4
  %668 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %665, i64 1
  %669 = icmp eq %class.ConstantUnion* %668, %663
  br i1 %669, label %670, label %664

670:                                              ; preds = %664, %654
  %671 = load i8, i8* %60, align 4
  %672 = icmp eq i8 %671, 0
  br i1 %672, label %675, label %673

673:                                              ; preds = %670
  %674 = zext i8 %671 to i64
  br label %702

675:                                              ; preds = %711, %670
  %676 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %677 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %676, i64 96) #10
  %678 = getelementptr inbounds [26 x i8], [26 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %678)
  %679 = getelementptr inbounds [20 x i8], [20 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %679)
  %680 = load i8, i8* %60, align 4
  %681 = getelementptr inbounds [26 x i8], [26 x i8]* %7, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %681, i8 0, i64 24, i1 false)
  %682 = getelementptr inbounds [20 x i8], [20 x i8]* %8, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %682, i8 0, i64 16, i1 false)
  %683 = bitcast i8* %677 to i32 (...)***
  %684 = getelementptr inbounds i8, i8* %677, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %684, i8 0, i64 16, i1 false) #11
  %685 = getelementptr inbounds i8, i8* %677, i64 24
  store i8 1, i8* %685, align 8
  %686 = getelementptr inbounds i8, i8* %677, i64 25
  store i8 0, i8* %686, align 1
  %687 = getelementptr inbounds i8, i8* %677, i64 26
  %688 = getelementptr inbounds i8, i8* %677, i64 27
  store i8 %680, i8* %688, align 1
  %689 = getelementptr inbounds i8, i8* %677, i64 28
  store i8 1, i8* %689, align 4
  %690 = getelementptr inbounds i8, i8* %677, i64 29
  store i8 0, i8* %690, align 1
  %691 = getelementptr inbounds i8, i8* %677, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %691, i8* nonnull align 2 %678, i64 26, i1 false)
  %692 = getelementptr inbounds i8, i8* %677, i64 56
  %693 = bitcast i8* %692 to i64*
  store i64 4294967295, i64* %693, align 8
  %694 = getelementptr inbounds i8, i8* %677, i64 64
  %695 = bitcast i8* %694 to i32*
  store i32 0, i32* %695, align 8
  %696 = getelementptr inbounds i8, i8* %677, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %696, i8* nonnull align 4 %679, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV20TIntermConstantUnion, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %683, align 8
  %697 = getelementptr inbounds i8, i8* %677, i64 88
  %698 = bitcast i8* %697 to i8**
  store i8* %659, i8** %698, align 8
  store i8 2, i8* %687, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %678)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %679)
  %699 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %700 = bitcast %struct.TSourceLoc* %699 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %684, i8* align 4 %700, i64 16, i1 false) #11
  %701 = bitcast i8* %677 to %class.TIntermTyped*
  br label %1603

702:                                              ; preds = %711, %673
  %703 = phi i64 [ 0, %673 ], [ %712, %711 ]
  %704 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %660, i64 %703
  %705 = bitcast %class.ConstantUnion* %704 to float*
  store float 0.000000e+00, float* %705, align 4
  %706 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %660, i64 %703, i32 1
  store i8 1, i8* %706, align 4
  %707 = load i8, i8* %58, align 1
  %708 = icmp eq i8 %707, 0
  br i1 %708, label %711, label %709

709:                                              ; preds = %702
  %710 = zext i8 %707 to i64
  br label %714

711:                                              ; preds = %714, %702
  %712 = add nuw nsw i64 %703, 1
  %713 = icmp eq i64 %712, %674
  br i1 %713, label %675, label %702

714:                                              ; preds = %714, %709
  %715 = phi float [ 0.000000e+00, %709 ], [ %726, %714 ]
  %716 = phi i64 [ 0, %709 ], [ %727, %714 ]
  %717 = mul nuw nsw i64 %716, %674
  %718 = add nuw nsw i64 %717, %703
  %719 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %718
  %720 = bitcast %class.ConstantUnion* %719 to float*
  %721 = load float, float* %720, align 4
  %722 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %716
  %723 = bitcast %class.ConstantUnion* %722 to float*
  %724 = load float, float* %723, align 4
  %725 = fmul float %721, %724
  %726 = fadd float %715, %725
  store float %726, float* %705, align 4
  store i8 1, i8* %706, align 4
  %727 = add nuw nsw i64 %716, 1
  %728 = icmp eq i64 %727, %710
  br i1 %728, label %711, label %714

729:                                              ; preds = %226
  %730 = getelementptr inbounds %class.TType, %class.TType* %26, i64 0, i32 0
  %731 = load i8, i8* %730, align 8
  %732 = icmp eq i8 %731, 1
  br i1 %732, label %741, label %733

733:                                              ; preds = %729
  %734 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %735 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %736 = bitcast %struct.TSourceLoc* %735 to i64*
  %737 = load i64, i64* %736, align 4
  %738 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %739 = bitcast i32* %738 to i64*
  %740 = load i64, i64* %739, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %734, i32 4, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.94, i64 0, i64 0), i64 %737, i64 %740) #10
  br label %1603

741:                                              ; preds = %729
  %742 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 3
  %743 = load i8, i8* %742, align 1
  %744 = zext i8 %743 to i64
  %745 = shl nuw nsw i64 %744, 3
  %746 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %747 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %746, i64 %745) #10
  %748 = bitcast i8* %747 to %class.ConstantUnion*
  %749 = icmp eq i8 %743, 0
  br i1 %749, label %758, label %750

750:                                              ; preds = %741
  %751 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %748, i64 %744
  br label %752

752:                                              ; preds = %752, %750
  %753 = phi %class.ConstantUnion* [ %748, %750 ], [ %756, %752 ]
  %754 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %753, i64 0, i32 0, i32 0
  store i32 0, i32* %754, align 4
  %755 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %753, i64 0, i32 1
  store i8 0, i8* %755, align 4
  %756 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %753, i64 1
  %757 = icmp eq %class.ConstantUnion* %756, %751
  br i1 %757, label %758, label %752

758:                                              ; preds = %752, %741
  %759 = load i8, i8* %742, align 1
  %760 = icmp eq i8 %759, 0
  br i1 %760, label %764, label %761

761:                                              ; preds = %758
  %762 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1, i32 4
  %763 = zext i8 %759 to i64
  br label %791

764:                                              ; preds = %803, %758
  %765 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %766 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %765, i64 96) #10
  %767 = getelementptr inbounds [26 x i8], [26 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %767)
  %768 = getelementptr inbounds [20 x i8], [20 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %768)
  %769 = load i8, i8* %742, align 1
  %770 = getelementptr inbounds [26 x i8], [26 x i8]* %9, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %770, i8 0, i64 24, i1 false)
  %771 = getelementptr inbounds [20 x i8], [20 x i8]* %10, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %771, i8 0, i64 16, i1 false)
  %772 = bitcast i8* %766 to i32 (...)***
  %773 = getelementptr inbounds i8, i8* %766, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %773, i8 0, i64 16, i1 false) #11
  %774 = getelementptr inbounds i8, i8* %766, i64 24
  store i8 1, i8* %774, align 8
  %775 = getelementptr inbounds i8, i8* %766, i64 25
  store i8 0, i8* %775, align 1
  %776 = getelementptr inbounds i8, i8* %766, i64 26
  %777 = getelementptr inbounds i8, i8* %766, i64 27
  store i8 %769, i8* %777, align 1
  %778 = getelementptr inbounds i8, i8* %766, i64 28
  store i8 1, i8* %778, align 4
  %779 = getelementptr inbounds i8, i8* %766, i64 29
  store i8 0, i8* %779, align 1
  %780 = getelementptr inbounds i8, i8* %766, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %780, i8* nonnull align 2 %767, i64 26, i1 false)
  %781 = getelementptr inbounds i8, i8* %766, i64 56
  %782 = bitcast i8* %781 to i64*
  store i64 4294967295, i64* %782, align 8
  %783 = getelementptr inbounds i8, i8* %766, i64 64
  %784 = bitcast i8* %783 to i32*
  store i32 0, i32* %784, align 8
  %785 = getelementptr inbounds i8, i8* %766, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %785, i8* nonnull align 4 %768, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV20TIntermConstantUnion, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %772, align 8
  %786 = getelementptr inbounds i8, i8* %766, i64 88
  %787 = bitcast i8* %786 to i8**
  store i8* %747, i8** %787, align 8
  store i8 2, i8* %776, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %767)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %768)
  %788 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %789 = bitcast %struct.TSourceLoc* %788 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %773, i8* align 4 %789, i64 16, i1 false) #11
  %790 = bitcast i8* %766 to %class.TIntermTyped*
  br label %1603

791:                                              ; preds = %803, %761
  %792 = phi i64 [ 0, %761 ], [ %804, %803 ]
  %793 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %748, i64 %792
  %794 = bitcast %class.ConstantUnion* %793 to float*
  store float 0.000000e+00, float* %794, align 4
  %795 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %748, i64 %792, i32 1
  store i8 1, i8* %795, align 4
  %796 = load i8, i8* %762, align 4
  %797 = icmp eq i8 %796, 0
  br i1 %797, label %803, label %798

798:                                              ; preds = %791
  %799 = zext i8 %796 to i64
  %800 = mul i64 %792, %799
  %801 = and i64 %800, 4294967295
  %802 = zext i8 %796 to i64
  br label %806

803:                                              ; preds = %806, %791
  %804 = add nuw nsw i64 %792, 1
  %805 = icmp eq i64 %804, %763
  br i1 %805, label %764, label %791

806:                                              ; preds = %806, %798
  %807 = phi float [ 0.000000e+00, %798 ], [ %817, %806 ]
  %808 = phi i64 [ 0, %798 ], [ %818, %806 ]
  %809 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %808
  %810 = bitcast %class.ConstantUnion* %809 to float*
  %811 = load float, float* %810, align 4
  %812 = add nuw nsw i64 %808, %801
  %813 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %812
  %814 = bitcast %class.ConstantUnion* %813 to float*
  %815 = load float, float* %814, align 4
  %816 = fmul float %811, %815
  %817 = fadd float %807, %816
  store float %817, float* %794, align 4
  store i8 1, i8* %795, align 4
  %818 = add nuw nsw i64 %808, 1
  %819 = icmp eq i64 %818, %802
  br i1 %819, label %803, label %806

820:                                              ; preds = %226
  %821 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %822 = extractvalue { i64, i1 } %821, 1
  %823 = extractvalue { i64, i1 } %821, 0
  %824 = select i1 %822, i64 -1, i64 %823
  %825 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %826 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %825, i64 %824) #10
  %827 = bitcast i8* %826 to %class.ConstantUnion*
  %828 = icmp eq i64 %235, 0
  br i1 %828, label %1573, label %829

829:                                              ; preds = %820
  %830 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %827, i64 %235
  br label %831

831:                                              ; preds = %831, %829
  %832 = phi %class.ConstantUnion* [ %827, %829 ], [ %835, %831 ]
  %833 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %832, i64 0, i32 0, i32 0
  store i32 0, i32* %833, align 4
  %834 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %832, i64 0, i32 1
  store i8 0, i8* %834, align 4
  %835 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %832, i64 1
  %836 = icmp eq %class.ConstantUnion* %835, %830
  br i1 %836, label %837, label %831

837:                                              ; preds = %831
  br i1 %828, label %1573, label %838

838:                                              ; preds = %837, %853
  %839 = phi i64 [ %860, %853 ], [ 0, %837 ]
  %840 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %839
  %841 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %839, i32 1
  %842 = load i8, i8* %841, align 4
  %843 = icmp eq i8 %842, 4
  br i1 %843, label %844, label %853

844:                                              ; preds = %838
  %845 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %839
  %846 = bitcast %class.ConstantUnion* %845 to i8*
  %847 = load i8, i8* %846, align 4, !range !2
  %848 = icmp eq i8 %847, 0
  br i1 %848, label %853, label %849

849:                                              ; preds = %844
  %850 = bitcast %class.ConstantUnion* %840 to i8*
  %851 = load i8, i8* %850, align 4, !range !2
  %852 = zext i8 %851 to i64
  br label %853

853:                                              ; preds = %838, %844, %849
  %854 = phi i64 [ 0, %838 ], [ 0, %844 ], [ %852, %849 ]
  %855 = phi i64 [ -6148915424244269056, %838 ], [ -6148915407064399872, %844 ], [ -6148915407064399872, %849 ]
  %856 = or i64 %855, %854
  %857 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %827, i64 %839
  %858 = bitcast %class.ConstantUnion* %857 to i40*
  %859 = trunc i64 %856 to i40
  store i40 %859, i40* %858, align 4
  %860 = add nuw i64 %839, 1
  %861 = icmp eq i64 %860, %235
  br i1 %861, label %1573, label %838

862:                                              ; preds = %226
  %863 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %864 = extractvalue { i64, i1 } %863, 1
  %865 = extractvalue { i64, i1 } %863, 0
  %866 = select i1 %864, i64 -1, i64 %865
  %867 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %868 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %867, i64 %866) #10
  %869 = bitcast i8* %868 to %class.ConstantUnion*
  %870 = icmp eq i64 %235, 0
  br i1 %870, label %1573, label %871

871:                                              ; preds = %862
  %872 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %869, i64 %235
  br label %873

873:                                              ; preds = %873, %871
  %874 = phi %class.ConstantUnion* [ %869, %871 ], [ %877, %873 ]
  %875 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %874, i64 0, i32 0, i32 0
  store i32 0, i32* %875, align 4
  %876 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %874, i64 0, i32 1
  store i8 0, i8* %876, align 4
  %877 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %874, i64 1
  %878 = icmp eq %class.ConstantUnion* %877, %872
  br i1 %878, label %879, label %873

879:                                              ; preds = %873
  br i1 %870, label %1573, label %880

880:                                              ; preds = %879, %895
  %881 = phi i64 [ %902, %895 ], [ 0, %879 ]
  %882 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %881
  %883 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %881, i32 1
  %884 = load i8, i8* %883, align 4
  %885 = icmp eq i8 %884, 4
  br i1 %885, label %886, label %895

886:                                              ; preds = %880
  %887 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %881
  %888 = bitcast %class.ConstantUnion* %887 to i8*
  %889 = load i8, i8* %888, align 4, !range !2
  %890 = icmp eq i8 %889, 0
  br i1 %890, label %891, label %895

891:                                              ; preds = %886
  %892 = bitcast %class.ConstantUnion* %882 to i8*
  %893 = load i8, i8* %892, align 4, !range !2
  %894 = zext i8 %893 to i64
  br label %895

895:                                              ; preds = %880, %886, %891
  %896 = phi i64 [ 0, %880 ], [ 1, %886 ], [ %894, %891 ]
  %897 = phi i64 [ -6148915424244269056, %880 ], [ -6148915407064399872, %886 ], [ -6148915407064399872, %891 ]
  %898 = or i64 %897, %896
  %899 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %869, i64 %881
  %900 = bitcast %class.ConstantUnion* %899 to i40*
  %901 = trunc i64 %898 to i40
  store i40 %901, i40* %900, align 4
  %902 = add nuw i64 %881, 1
  %903 = icmp eq i64 %902, %235
  br i1 %903, label %1573, label %880

904:                                              ; preds = %226
  %905 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %906 = extractvalue { i64, i1 } %905, 1
  %907 = extractvalue { i64, i1 } %905, 0
  %908 = select i1 %906, i64 -1, i64 %907
  %909 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %910 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %909, i64 %908) #10
  %911 = bitcast i8* %910 to %class.ConstantUnion*
  %912 = icmp eq i64 %235, 0
  br i1 %912, label %1573, label %913

913:                                              ; preds = %904
  %914 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %911, i64 %235
  br label %915

915:                                              ; preds = %915, %913
  %916 = phi %class.ConstantUnion* [ %911, %913 ], [ %919, %915 ]
  %917 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %916, i64 0, i32 0, i32 0
  store i32 0, i32* %917, align 4
  %918 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %916, i64 0, i32 1
  store i8 0, i8* %918, align 4
  %919 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %916, i64 1
  %920 = icmp eq %class.ConstantUnion* %919, %914
  br i1 %920, label %921, label %915

921:                                              ; preds = %915
  br i1 %912, label %1573, label %922

922:                                              ; preds = %921
  %923 = getelementptr inbounds %class.TType, %class.TType* %26, i64 0, i32 0
  br label %924

924:                                              ; preds = %937, %922
  %925 = phi i64 [ 0, %922 ], [ %938, %937 ]
  %926 = load i8, i8* %923, align 8
  %927 = icmp eq i8 %926, 4
  br i1 %927, label %928, label %937

928:                                              ; preds = %924
  %929 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %911, i64 %925
  %930 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %925
  %931 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %925
  %932 = tail call zeroext i1 @_ZNK13ConstantUnioneqERKS_(%class.ConstantUnion* %930, %class.ConstantUnion* dereferenceable(8) %931) #12
  %933 = xor i1 %932, true
  %934 = zext i1 %933 to i8
  %935 = bitcast %class.ConstantUnion* %929 to i8*
  store i8 %934, i8* %935, align 4
  %936 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %911, i64 %925, i32 1
  store i8 4, i8* %936, align 4
  br label %937

937:                                              ; preds = %928, %924
  %938 = add nuw i64 %925, 1
  %939 = icmp eq i64 %938, %235
  br i1 %939, label %1573, label %924

940:                                              ; preds = %226
  %941 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %942 = extractvalue { i64, i1 } %941, 1
  %943 = extractvalue { i64, i1 } %941, 0
  %944 = select i1 %942, i64 -1, i64 %943
  %945 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %946 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %945, i64 %944) #10
  %947 = bitcast i8* %946 to %class.ConstantUnion*
  %948 = icmp eq i64 %235, 0
  br i1 %948, label %1573, label %949

949:                                              ; preds = %940
  %950 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %947, i64 %235
  br label %951

951:                                              ; preds = %951, %949
  %952 = phi %class.ConstantUnion* [ %947, %949 ], [ %955, %951 ]
  %953 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %952, i64 0, i32 0, i32 0
  store i32 0, i32* %953, align 4
  %954 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %952, i64 0, i32 1
  store i8 0, i8* %954, align 4
  %955 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %952, i64 1
  %956 = icmp eq %class.ConstantUnion* %955, %950
  br i1 %956, label %957, label %951

957:                                              ; preds = %951
  br i1 %948, label %1573, label %958

958:                                              ; preds = %957, %970
  %959 = phi i64 [ %978, %970 ], [ 0, %957 ]
  %960 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %959, i32 1
  %961 = load i8, i8* %960, align 4
  switch i8 %961, label %970 [
    i8 2, label %963
    i8 3, label %962
  ]

962:                                              ; preds = %958
  br label %963

963:                                              ; preds = %958, %962
  %964 = phi i64 [ -6148915411359367168, %962 ], [ -6148915415654334464, %958 ]
  %965 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %959, i32 0, i32 0
  %966 = load i32, i32* %965, align 4
  %967 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %959, i32 0, i32 0
  %968 = load i32, i32* %967, align 4
  %969 = and i32 %968, %966
  br label %970

970:                                              ; preds = %963, %958
  %971 = phi i64 [ -6148915424244269056, %958 ], [ %964, %963 ]
  %972 = phi i32 [ 0, %958 ], [ %969, %963 ]
  %973 = zext i32 %972 to i64
  %974 = or i64 %971, %973
  %975 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %947, i64 %959
  %976 = bitcast %class.ConstantUnion* %975 to i40*
  %977 = trunc i64 %974 to i40
  store i40 %977, i40* %976, align 4
  %978 = add nuw i64 %959, 1
  %979 = icmp eq i64 %978, %235
  br i1 %979, label %1573, label %958

980:                                              ; preds = %226
  %981 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %982 = extractvalue { i64, i1 } %981, 1
  %983 = extractvalue { i64, i1 } %981, 0
  %984 = select i1 %982, i64 -1, i64 %983
  %985 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %986 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %985, i64 %984) #10
  %987 = bitcast i8* %986 to %class.ConstantUnion*
  %988 = icmp eq i64 %235, 0
  br i1 %988, label %1573, label %989

989:                                              ; preds = %980
  %990 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %987, i64 %235
  br label %991

991:                                              ; preds = %991, %989
  %992 = phi %class.ConstantUnion* [ %987, %989 ], [ %995, %991 ]
  %993 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %992, i64 0, i32 0, i32 0
  store i32 0, i32* %993, align 4
  %994 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %992, i64 0, i32 1
  store i8 0, i8* %994, align 4
  %995 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %992, i64 1
  %996 = icmp eq %class.ConstantUnion* %995, %990
  br i1 %996, label %997, label %991

997:                                              ; preds = %991
  br i1 %988, label %1573, label %998

998:                                              ; preds = %997, %1010
  %999 = phi i64 [ %1018, %1010 ], [ 0, %997 ]
  %1000 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %999, i32 1
  %1001 = load i8, i8* %1000, align 4
  switch i8 %1001, label %1010 [
    i8 2, label %1003
    i8 3, label %1002
  ]

1002:                                             ; preds = %998
  br label %1003

1003:                                             ; preds = %998, %1002
  %1004 = phi i64 [ -6148915411359367168, %1002 ], [ -6148915415654334464, %998 ]
  %1005 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %999, i32 0, i32 0
  %1006 = load i32, i32* %1005, align 4
  %1007 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %999, i32 0, i32 0
  %1008 = load i32, i32* %1007, align 4
  %1009 = xor i32 %1008, %1006
  br label %1010

1010:                                             ; preds = %1003, %998
  %1011 = phi i64 [ -6148915424244269056, %998 ], [ %1004, %1003 ]
  %1012 = phi i32 [ 0, %998 ], [ %1009, %1003 ]
  %1013 = zext i32 %1012 to i64
  %1014 = or i64 %1011, %1013
  %1015 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %987, i64 %999
  %1016 = bitcast %class.ConstantUnion* %1015 to i40*
  %1017 = trunc i64 %1014 to i40
  store i40 %1017, i40* %1016, align 4
  %1018 = add nuw i64 %999, 1
  %1019 = icmp eq i64 %1018, %235
  br i1 %1019, label %1573, label %998

1020:                                             ; preds = %226
  %1021 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %1022 = extractvalue { i64, i1 } %1021, 1
  %1023 = extractvalue { i64, i1 } %1021, 0
  %1024 = select i1 %1022, i64 -1, i64 %1023
  %1025 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %1026 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1025, i64 %1024) #10
  %1027 = bitcast i8* %1026 to %class.ConstantUnion*
  %1028 = icmp eq i64 %235, 0
  br i1 %1028, label %1573, label %1029

1029:                                             ; preds = %1020
  %1030 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1027, i64 %235
  br label %1031

1031:                                             ; preds = %1031, %1029
  %1032 = phi %class.ConstantUnion* [ %1027, %1029 ], [ %1035, %1031 ]
  %1033 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1032, i64 0, i32 0, i32 0
  store i32 0, i32* %1033, align 4
  %1034 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1032, i64 0, i32 1
  store i8 0, i8* %1034, align 4
  %1035 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1032, i64 1
  %1036 = icmp eq %class.ConstantUnion* %1035, %1030
  br i1 %1036, label %1037, label %1031

1037:                                             ; preds = %1031
  br i1 %1028, label %1573, label %1038

1038:                                             ; preds = %1037, %1050
  %1039 = phi i64 [ %1058, %1050 ], [ 0, %1037 ]
  %1040 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1039, i32 1
  %1041 = load i8, i8* %1040, align 4
  switch i8 %1041, label %1050 [
    i8 2, label %1043
    i8 3, label %1042
  ]

1042:                                             ; preds = %1038
  br label %1043

1043:                                             ; preds = %1038, %1042
  %1044 = phi i64 [ -6148915411359367168, %1042 ], [ -6148915415654334464, %1038 ]
  %1045 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1039, i32 0, i32 0
  %1046 = load i32, i32* %1045, align 4
  %1047 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %1039, i32 0, i32 0
  %1048 = load i32, i32* %1047, align 4
  %1049 = or i32 %1048, %1046
  br label %1050

1050:                                             ; preds = %1043, %1038
  %1051 = phi i64 [ -6148915424244269056, %1038 ], [ %1044, %1043 ]
  %1052 = phi i32 [ 0, %1038 ], [ %1049, %1043 ]
  %1053 = zext i32 %1052 to i64
  %1054 = or i64 %1051, %1053
  %1055 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1027, i64 %1039
  %1056 = bitcast %class.ConstantUnion* %1055 to i40*
  %1057 = trunc i64 %1054 to i40
  store i40 %1057, i40* %1056, align 4
  %1058 = add nuw i64 %1039, 1
  %1059 = icmp eq i64 %1058, %235
  br i1 %1059, label %1573, label %1038

1060:                                             ; preds = %226
  %1061 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %1062 = extractvalue { i64, i1 } %1061, 1
  %1063 = extractvalue { i64, i1 } %1061, 0
  %1064 = select i1 %1062, i64 -1, i64 %1063
  %1065 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %1066 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1065, i64 %1064) #10
  %1067 = bitcast i8* %1066 to %class.ConstantUnion*
  %1068 = icmp eq i64 %235, 0
  br i1 %1068, label %1573, label %1069

1069:                                             ; preds = %1060
  %1070 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1067, i64 %235
  br label %1071

1071:                                             ; preds = %1071, %1069
  %1072 = phi %class.ConstantUnion* [ %1067, %1069 ], [ %1075, %1071 ]
  %1073 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1072, i64 0, i32 0, i32 0
  store i32 0, i32* %1073, align 4
  %1074 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1072, i64 0, i32 1
  store i8 0, i8* %1074, align 4
  %1075 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1072, i64 1
  %1076 = icmp eq %class.ConstantUnion* %1075, %1070
  br i1 %1076, label %1077, label %1071

1077:                                             ; preds = %1071
  br i1 %1068, label %1573, label %1078

1078:                                             ; preds = %1077, %1090
  %1079 = phi i64 [ %1098, %1090 ], [ 0, %1077 ]
  %1080 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1079, i32 1
  %1081 = load i8, i8* %1080, align 4
  switch i8 %1081, label %1090 [
    i8 2, label %1083
    i8 3, label %1082
  ]

1082:                                             ; preds = %1078
  br label %1083

1083:                                             ; preds = %1078, %1082
  %1084 = phi i64 [ -6148915411359367168, %1082 ], [ -6148915415654334464, %1078 ]
  %1085 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1079, i32 0, i32 0
  %1086 = load i32, i32* %1085, align 4
  %1087 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %1079, i32 0, i32 0
  %1088 = load i32, i32* %1087, align 4
  %1089 = shl i32 %1086, %1088
  br label %1090

1090:                                             ; preds = %1083, %1078
  %1091 = phi i64 [ -6148915424244269056, %1078 ], [ %1084, %1083 ]
  %1092 = phi i32 [ 0, %1078 ], [ %1089, %1083 ]
  %1093 = zext i32 %1092 to i64
  %1094 = or i64 %1091, %1093
  %1095 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1067, i64 %1079
  %1096 = bitcast %class.ConstantUnion* %1095 to i40*
  %1097 = trunc i64 %1094 to i40
  store i40 %1097, i40* %1096, align 4
  %1098 = add nuw i64 %1079, 1
  %1099 = icmp eq i64 %1098, %235
  br i1 %1099, label %1573, label %1078

1100:                                             ; preds = %226
  %1101 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %1102 = extractvalue { i64, i1 } %1101, 1
  %1103 = extractvalue { i64, i1 } %1101, 0
  %1104 = select i1 %1102, i64 -1, i64 %1103
  %1105 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %1106 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1105, i64 %1104) #10
  %1107 = bitcast i8* %1106 to %class.ConstantUnion*
  %1108 = icmp eq i64 %235, 0
  br i1 %1108, label %1573, label %1109

1109:                                             ; preds = %1100
  %1110 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1107, i64 %235
  br label %1111

1111:                                             ; preds = %1111, %1109
  %1112 = phi %class.ConstantUnion* [ %1107, %1109 ], [ %1115, %1111 ]
  %1113 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1112, i64 0, i32 0, i32 0
  store i32 0, i32* %1113, align 4
  %1114 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1112, i64 0, i32 1
  store i8 0, i8* %1114, align 4
  %1115 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1112, i64 1
  %1116 = icmp eq %class.ConstantUnion* %1115, %1110
  br i1 %1116, label %1117, label %1111

1117:                                             ; preds = %1111
  br i1 %1108, label %1573, label %1118

1118:                                             ; preds = %1117, %1136
  %1119 = phi i64 [ %1144, %1136 ], [ 0, %1117 ]
  %1120 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1119
  %1121 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %1119
  %1122 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1119, i32 1
  %1123 = load i8, i8* %1122, align 4
  switch i8 %1123, label %1136 [
    i8 2, label %1124
    i8 3, label %1130
  ]

1124:                                             ; preds = %1118
  %1125 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1120, i64 0, i32 0, i32 0
  %1126 = load i32, i32* %1125, align 4
  %1127 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1121, i64 0, i32 0, i32 0
  %1128 = load i32, i32* %1127, align 4
  %1129 = ashr i32 %1126, %1128
  br label %1136

1130:                                             ; preds = %1118
  %1131 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1120, i64 0, i32 0, i32 0
  %1132 = load i32, i32* %1131, align 4
  %1133 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1121, i64 0, i32 0, i32 0
  %1134 = load i32, i32* %1133, align 4
  %1135 = lshr i32 %1132, %1134
  br label %1136

1136:                                             ; preds = %1118, %1124, %1130
  %1137 = phi i64 [ -6148915424244269056, %1118 ], [ -6148915411359367168, %1130 ], [ -6148915415654334464, %1124 ]
  %1138 = phi i32 [ 0, %1118 ], [ %1135, %1130 ], [ %1129, %1124 ]
  %1139 = zext i32 %1138 to i64
  %1140 = or i64 %1137, %1139
  %1141 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1107, i64 %1119
  %1142 = bitcast %class.ConstantUnion* %1141 to i40*
  %1143 = trunc i64 %1140 to i40
  store i40 %1143, i40* %1142, align 4
  %1144 = add nuw i64 %1119, 1
  %1145 = icmp eq i64 %1144, %235
  br i1 %1145, label %1573, label %1118

1146:                                             ; preds = %226
  %1147 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %1148 = extractvalue { i64, i1 } %1147, 1
  %1149 = extractvalue { i64, i1 } %1147, 0
  %1150 = select i1 %1148, i64 -1, i64 %1149
  %1151 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %1152 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1151, i64 %1150) #10
  %1153 = bitcast i8* %1152 to %class.ConstantUnion*
  %1154 = icmp eq i64 %235, 0
  br i1 %1154, label %1164, label %1155

1155:                                             ; preds = %1146
  %1156 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1153, i64 %235
  br label %1157

1157:                                             ; preds = %1157, %1155
  %1158 = phi %class.ConstantUnion* [ %1153, %1155 ], [ %1161, %1157 ]
  %1159 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1158, i64 0, i32 0, i32 0
  store i32 0, i32* %1159, align 4
  %1160 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1158, i64 0, i32 1
  store i8 0, i8* %1160, align 4
  %1161 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1158, i64 1
  %1162 = icmp eq %class.ConstantUnion* %1161, %1156
  br i1 %1162, label %1163, label %1157

1163:                                             ; preds = %1157
  br i1 %1154, label %1164, label %1170

1164:                                             ; preds = %1195, %1146, %1163
  %1165 = getelementptr inbounds [26 x i8], [26 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %1165)
  %1166 = getelementptr inbounds [20 x i8], [20 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %1166)
  %1167 = trunc i64 %235 to i8
  %1168 = getelementptr inbounds [26 x i8], [26 x i8]* %11, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %1168, i8 0, i64 24, i1 false)
  %1169 = getelementptr inbounds [20 x i8], [20 x i8]* %12, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %1169, i8 0, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %52, i8* nonnull align 2 %1165, i64 26, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* nonnull align 4 %1166, i64 20, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %1165)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %1166)
  br label %1573

1170:                                             ; preds = %1163, %1195
  %1171 = phi i64 [ %1200, %1195 ], [ 0, %1163 ]
  %1172 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1153, i64 %1171
  %1173 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1171
  %1174 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %1171
  %1175 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1171, i32 1
  %1176 = load i8, i8* %1175, align 4
  switch i8 %1176, label %1195 [
    i8 2, label %1177
    i8 3, label %1183
    i8 1, label %1189
  ]

1177:                                             ; preds = %1170
  %1178 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1173, i64 0, i32 0, i32 0
  %1179 = load i32, i32* %1178, align 4
  %1180 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1174, i64 0, i32 0, i32 0
  %1181 = load i32, i32* %1180, align 4
  %1182 = icmp slt i32 %1179, %1181
  br label %1195

1183:                                             ; preds = %1170
  %1184 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1173, i64 0, i32 0, i32 0
  %1185 = load i32, i32* %1184, align 4
  %1186 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1174, i64 0, i32 0, i32 0
  %1187 = load i32, i32* %1186, align 4
  %1188 = icmp ult i32 %1185, %1187
  br label %1195

1189:                                             ; preds = %1170
  %1190 = bitcast %class.ConstantUnion* %1173 to float*
  %1191 = load float, float* %1190, align 4
  %1192 = bitcast %class.ConstantUnion* %1174 to float*
  %1193 = load float, float* %1192, align 4
  %1194 = fcmp olt float %1191, %1193
  br label %1195

1195:                                             ; preds = %1170, %1177, %1183, %1189
  %1196 = phi i1 [ %1194, %1189 ], [ %1188, %1183 ], [ %1182, %1177 ], [ false, %1170 ]
  %1197 = zext i1 %1196 to i8
  %1198 = bitcast %class.ConstantUnion* %1172 to i8*
  store i8 %1197, i8* %1198, align 4
  %1199 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1153, i64 %1171, i32 1
  store i8 4, i8* %1199, align 4
  %1200 = add nuw i64 %1171, 1
  %1201 = icmp eq i64 %1200, %235
  br i1 %1201, label %1164, label %1170

1202:                                             ; preds = %226
  %1203 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %1204 = extractvalue { i64, i1 } %1203, 1
  %1205 = extractvalue { i64, i1 } %1203, 0
  %1206 = select i1 %1204, i64 -1, i64 %1205
  %1207 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %1208 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1207, i64 %1206) #10
  %1209 = bitcast i8* %1208 to %class.ConstantUnion*
  %1210 = icmp eq i64 %235, 0
  br i1 %1210, label %1220, label %1211

1211:                                             ; preds = %1202
  %1212 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1209, i64 %235
  br label %1213

1213:                                             ; preds = %1213, %1211
  %1214 = phi %class.ConstantUnion* [ %1209, %1211 ], [ %1217, %1213 ]
  %1215 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1214, i64 0, i32 0, i32 0
  store i32 0, i32* %1215, align 4
  %1216 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1214, i64 0, i32 1
  store i8 0, i8* %1216, align 4
  %1217 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1214, i64 1
  %1218 = icmp eq %class.ConstantUnion* %1217, %1212
  br i1 %1218, label %1219, label %1213

1219:                                             ; preds = %1213
  br i1 %1210, label %1220, label %1226

1220:                                             ; preds = %1251, %1202, %1219
  %1221 = getelementptr inbounds [26 x i8], [26 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %1221)
  %1222 = getelementptr inbounds [20 x i8], [20 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %1222)
  %1223 = trunc i64 %235 to i8
  %1224 = getelementptr inbounds [26 x i8], [26 x i8]* %13, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %1224, i8 0, i64 24, i1 false)
  %1225 = getelementptr inbounds [20 x i8], [20 x i8]* %14, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %1225, i8 0, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %52, i8* nonnull align 2 %1221, i64 26, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* nonnull align 4 %1222, i64 20, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %1221)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %1222)
  br label %1573

1226:                                             ; preds = %1219, %1251
  %1227 = phi i64 [ %1256, %1251 ], [ 0, %1219 ]
  %1228 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1209, i64 %1227
  %1229 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1227
  %1230 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %1227
  %1231 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1227, i32 1
  %1232 = load i8, i8* %1231, align 4
  switch i8 %1232, label %1251 [
    i8 2, label %1233
    i8 3, label %1239
    i8 1, label %1245
  ]

1233:                                             ; preds = %1226
  %1234 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1229, i64 0, i32 0, i32 0
  %1235 = load i32, i32* %1234, align 4
  %1236 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1230, i64 0, i32 0, i32 0
  %1237 = load i32, i32* %1236, align 4
  %1238 = icmp sgt i32 %1235, %1237
  br label %1251

1239:                                             ; preds = %1226
  %1240 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1229, i64 0, i32 0, i32 0
  %1241 = load i32, i32* %1240, align 4
  %1242 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1230, i64 0, i32 0, i32 0
  %1243 = load i32, i32* %1242, align 4
  %1244 = icmp ugt i32 %1241, %1243
  br label %1251

1245:                                             ; preds = %1226
  %1246 = bitcast %class.ConstantUnion* %1229 to float*
  %1247 = load float, float* %1246, align 4
  %1248 = bitcast %class.ConstantUnion* %1230 to float*
  %1249 = load float, float* %1248, align 4
  %1250 = fcmp ogt float %1247, %1249
  br label %1251

1251:                                             ; preds = %1226, %1233, %1239, %1245
  %1252 = phi i1 [ %1250, %1245 ], [ %1244, %1239 ], [ %1238, %1233 ], [ false, %1226 ]
  %1253 = zext i1 %1252 to i8
  %1254 = bitcast %class.ConstantUnion* %1228 to i8*
  store i8 %1253, i8* %1254, align 4
  %1255 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1209, i64 %1227, i32 1
  store i8 4, i8* %1255, align 4
  %1256 = add nuw i64 %1227, 1
  %1257 = icmp eq i64 %1256, %235
  br i1 %1257, label %1220, label %1226

1258:                                             ; preds = %226
  %1259 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %1260 = extractvalue { i64, i1 } %1259, 1
  %1261 = extractvalue { i64, i1 } %1259, 0
  %1262 = select i1 %1260, i64 -1, i64 %1261
  %1263 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %1264 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1263, i64 %1262) #10
  %1265 = bitcast i8* %1264 to %class.ConstantUnion*
  %1266 = icmp eq i64 %235, 0
  br i1 %1266, label %1276, label %1267

1267:                                             ; preds = %1258
  %1268 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1265, i64 %235
  br label %1269

1269:                                             ; preds = %1269, %1267
  %1270 = phi %class.ConstantUnion* [ %1265, %1267 ], [ %1273, %1269 ]
  %1271 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1270, i64 0, i32 0, i32 0
  store i32 0, i32* %1271, align 4
  %1272 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1270, i64 0, i32 1
  store i8 0, i8* %1272, align 4
  %1273 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1270, i64 1
  %1274 = icmp eq %class.ConstantUnion* %1273, %1268
  br i1 %1274, label %1275, label %1269

1275:                                             ; preds = %1269
  br i1 %1266, label %1276, label %1282

1276:                                             ; preds = %1307, %1258, %1275
  %1277 = getelementptr inbounds [26 x i8], [26 x i8]* %15, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %1277)
  %1278 = getelementptr inbounds [20 x i8], [20 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %1278)
  %1279 = trunc i64 %235 to i8
  %1280 = getelementptr inbounds [26 x i8], [26 x i8]* %15, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %1280, i8 0, i64 24, i1 false)
  %1281 = getelementptr inbounds [20 x i8], [20 x i8]* %16, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %1281, i8 0, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %52, i8* nonnull align 2 %1277, i64 26, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* nonnull align 4 %1278, i64 20, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %1277)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %1278)
  br label %1573

1282:                                             ; preds = %1275, %1307
  %1283 = phi i64 [ %1312, %1307 ], [ 0, %1275 ]
  %1284 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1265, i64 %1283
  %1285 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1283
  %1286 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %1283
  %1287 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1283, i32 1
  %1288 = load i8, i8* %1287, align 4
  switch i8 %1288, label %1307 [
    i8 2, label %1289
    i8 3, label %1295
    i8 1, label %1301
  ]

1289:                                             ; preds = %1282
  %1290 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1285, i64 0, i32 0, i32 0
  %1291 = load i32, i32* %1290, align 4
  %1292 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1286, i64 0, i32 0, i32 0
  %1293 = load i32, i32* %1292, align 4
  %1294 = icmp sle i32 %1291, %1293
  br label %1307

1295:                                             ; preds = %1282
  %1296 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1285, i64 0, i32 0, i32 0
  %1297 = load i32, i32* %1296, align 4
  %1298 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1286, i64 0, i32 0, i32 0
  %1299 = load i32, i32* %1298, align 4
  %1300 = icmp ule i32 %1297, %1299
  br label %1307

1301:                                             ; preds = %1282
  %1302 = bitcast %class.ConstantUnion* %1285 to float*
  %1303 = load float, float* %1302, align 4
  %1304 = bitcast %class.ConstantUnion* %1286 to float*
  %1305 = load float, float* %1304, align 4
  %1306 = fcmp ole float %1303, %1305
  br label %1307

1307:                                             ; preds = %1282, %1289, %1295, %1301
  %1308 = phi i1 [ %1306, %1301 ], [ %1300, %1295 ], [ %1294, %1289 ], [ false, %1282 ]
  %1309 = zext i1 %1308 to i8
  %1310 = bitcast %class.ConstantUnion* %1284 to i8*
  store i8 %1309, i8* %1310, align 4
  %1311 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1265, i64 %1283, i32 1
  store i8 4, i8* %1311, align 4
  %1312 = add nuw i64 %1283, 1
  %1313 = icmp eq i64 %1312, %235
  br i1 %1313, label %1276, label %1282

1314:                                             ; preds = %226
  %1315 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %1316 = extractvalue { i64, i1 } %1315, 1
  %1317 = extractvalue { i64, i1 } %1315, 0
  %1318 = select i1 %1316, i64 -1, i64 %1317
  %1319 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %1320 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1319, i64 %1318) #10
  %1321 = bitcast i8* %1320 to %class.ConstantUnion*
  %1322 = icmp eq i64 %235, 0
  br i1 %1322, label %1332, label %1323

1323:                                             ; preds = %1314
  %1324 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1321, i64 %235
  br label %1325

1325:                                             ; preds = %1325, %1323
  %1326 = phi %class.ConstantUnion* [ %1321, %1323 ], [ %1329, %1325 ]
  %1327 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1326, i64 0, i32 0, i32 0
  store i32 0, i32* %1327, align 4
  %1328 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1326, i64 0, i32 1
  store i8 0, i8* %1328, align 4
  %1329 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1326, i64 1
  %1330 = icmp eq %class.ConstantUnion* %1329, %1324
  br i1 %1330, label %1331, label %1325

1331:                                             ; preds = %1325
  br i1 %1322, label %1332, label %1338

1332:                                             ; preds = %1363, %1314, %1331
  %1333 = getelementptr inbounds [26 x i8], [26 x i8]* %17, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %1333)
  %1334 = getelementptr inbounds [20 x i8], [20 x i8]* %18, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %1334)
  %1335 = trunc i64 %235 to i8
  %1336 = getelementptr inbounds [26 x i8], [26 x i8]* %17, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %1336, i8 0, i64 24, i1 false)
  %1337 = getelementptr inbounds [20 x i8], [20 x i8]* %18, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %1337, i8 0, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %52, i8* nonnull align 2 %1333, i64 26, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* nonnull align 4 %1334, i64 20, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %1333)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %1334)
  br label %1573

1338:                                             ; preds = %1331, %1363
  %1339 = phi i64 [ %1368, %1363 ], [ 0, %1331 ]
  %1340 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1321, i64 %1339
  %1341 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1339
  %1342 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %1339
  %1343 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1339, i32 1
  %1344 = load i8, i8* %1343, align 4
  switch i8 %1344, label %1363 [
    i8 2, label %1345
    i8 3, label %1351
    i8 1, label %1357
  ]

1345:                                             ; preds = %1338
  %1346 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1341, i64 0, i32 0, i32 0
  %1347 = load i32, i32* %1346, align 4
  %1348 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1342, i64 0, i32 0, i32 0
  %1349 = load i32, i32* %1348, align 4
  %1350 = icmp sge i32 %1347, %1349
  br label %1363

1351:                                             ; preds = %1338
  %1352 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1341, i64 0, i32 0, i32 0
  %1353 = load i32, i32* %1352, align 4
  %1354 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1342, i64 0, i32 0, i32 0
  %1355 = load i32, i32* %1354, align 4
  %1356 = icmp uge i32 %1353, %1355
  br label %1363

1357:                                             ; preds = %1338
  %1358 = bitcast %class.ConstantUnion* %1341 to float*
  %1359 = load float, float* %1358, align 4
  %1360 = bitcast %class.ConstantUnion* %1342 to float*
  %1361 = load float, float* %1360, align 4
  %1362 = fcmp oge float %1359, %1361
  br label %1363

1363:                                             ; preds = %1338, %1345, %1351, %1357
  %1364 = phi i1 [ %1362, %1357 ], [ %1356, %1351 ], [ %1350, %1345 ], [ false, %1338 ]
  %1365 = zext i1 %1364 to i8
  %1366 = bitcast %class.ConstantUnion* %1340 to i8*
  store i8 %1365, i8* %1366, align 4
  %1367 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1321, i64 %1339, i32 1
  store i8 4, i8* %1367, align 4
  %1368 = add nuw i64 %1339, 1
  %1369 = icmp eq i64 %1368, %235
  br i1 %1369, label %1332, label %1338

1370:                                             ; preds = %226
  %1371 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %1372 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1371, i64 8) #10
  %1373 = bitcast i8* %1372 to i32*
  store i32 0, i32* %1373, align 4
  %1374 = getelementptr inbounds i8, i8* %1372, i64 4
  store i8 0, i8* %1374, align 4
  %1375 = getelementptr inbounds %class.TType, %class.TType* %26, i64 0, i32 0
  %1376 = load i8, i8* %1375, align 8
  %1377 = icmp eq i8 %1376, 37
  br i1 %1377, label %1380, label %1378

1378:                                             ; preds = %1370
  %1379 = icmp eq i64 %235, 0
  br i1 %1379, label %1393, label %1387

1380:                                             ; preds = %1370
  %1381 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1
  %1382 = load %class.ConstantUnion*, %class.ConstantUnion** %50, align 8
  %1383 = tail call zeroext i1 @_Z16CompareStructureRK5TTypeP13ConstantUnionS3_(%class.TType* dereferenceable(64) %1381, %class.ConstantUnion* %1382, %class.ConstantUnion* %236) #12
  %1384 = zext i1 %1383 to i8
  br label %1393

1385:                                             ; preds = %1387
  %1386 = icmp eq i64 %1392, %235
  br i1 %1386, label %1393, label %1387

1387:                                             ; preds = %1378, %1385
  %1388 = phi i64 [ %1392, %1385 ], [ 0, %1378 ]
  %1389 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1388
  %1390 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %1388
  %1391 = tail call zeroext i1 @_ZNK13ConstantUnioneqERKS_(%class.ConstantUnion* %1389, %class.ConstantUnion* dereferenceable(8) %1390) #10
  %1392 = add nuw i64 %1388, 1
  br i1 %1391, label %1385, label %1393

1393:                                             ; preds = %1385, %1387, %1378, %1380
  %1394 = phi i8 [ %1384, %1380 ], [ 1, %1378 ], [ 0, %1387 ], [ 1, %1385 ]
  store i8 %1394, i8* %1372, align 4
  %1395 = getelementptr inbounds i8, i8* %1372, i64 4
  store i8 4, i8* %1395, align 4
  %1396 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %1397 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1396, i64 96) #10
  %1398 = getelementptr inbounds [26 x i8], [26 x i8]* %19, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %1398)
  %1399 = getelementptr inbounds [20 x i8], [20 x i8]* %20, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %1399)
  %1400 = getelementptr inbounds [26 x i8], [26 x i8]* %19, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %1400, i8 0, i64 24, i1 false)
  %1401 = getelementptr inbounds [20 x i8], [20 x i8]* %20, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %1401, i8 0, i64 16, i1 false)
  %1402 = bitcast i8* %1397 to i32 (...)***
  %1403 = getelementptr inbounds i8, i8* %1397, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1403, i8 0, i64 16, i1 false) #11
  %1404 = getelementptr inbounds i8, i8* %1397, i64 24
  store i8 4, i8* %1404, align 8
  %1405 = getelementptr inbounds i8, i8* %1397, i64 25
  store i8 0, i8* %1405, align 1
  %1406 = getelementptr inbounds i8, i8* %1397, i64 26
  %1407 = getelementptr inbounds i8, i8* %1397, i64 27
  store i8 1, i8* %1407, align 1
  %1408 = getelementptr inbounds i8, i8* %1397, i64 28
  store i8 1, i8* %1408, align 4
  %1409 = getelementptr inbounds i8, i8* %1397, i64 29
  store i8 0, i8* %1409, align 1
  %1410 = getelementptr inbounds i8, i8* %1397, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1410, i8* nonnull align 2 %1398, i64 26, i1 false)
  %1411 = getelementptr inbounds i8, i8* %1397, i64 56
  %1412 = bitcast i8* %1411 to i64*
  store i64 4294967295, i64* %1412, align 8
  %1413 = getelementptr inbounds i8, i8* %1397, i64 64
  %1414 = bitcast i8* %1413 to i32*
  store i32 0, i32* %1414, align 8
  %1415 = getelementptr inbounds i8, i8* %1397, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1415, i8* nonnull align 4 %1399, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV20TIntermConstantUnion, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1402, align 8
  %1416 = getelementptr inbounds i8, i8* %1397, i64 88
  %1417 = bitcast i8* %1416 to i8**
  store i8* %1372, i8** %1417, align 8
  store i8 2, i8* %1406, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %1398)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %1399)
  %1418 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1419 = bitcast %struct.TSourceLoc* %1418 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1403, i8* align 4 %1419, i64 16, i1 false) #11
  %1420 = bitcast i8* %1397 to %class.TIntermTyped*
  br label %1603

1421:                                             ; preds = %226
  %1422 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %1423 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1422, i64 8) #10
  %1424 = bitcast i8* %1423 to i32*
  store i32 0, i32* %1424, align 4
  %1425 = getelementptr inbounds i8, i8* %1423, i64 4
  store i8 0, i8* %1425, align 4
  %1426 = getelementptr inbounds %class.TType, %class.TType* %26, i64 0, i32 0
  %1427 = load i8, i8* %1426, align 8
  %1428 = icmp eq i8 %1427, 37
  br i1 %1428, label %1431, label %1429

1429:                                             ; preds = %1421
  %1430 = icmp eq i64 %235, 0
  br i1 %1430, label %1445, label %1439

1431:                                             ; preds = %1421
  %1432 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %49, i64 0, i32 0, i32 1
  %1433 = load %class.ConstantUnion*, %class.ConstantUnion** %50, align 8
  %1434 = tail call zeroext i1 @_Z16CompareStructureRK5TTypeP13ConstantUnionS3_(%class.TType* dereferenceable(64) %1432, %class.ConstantUnion* %1433, %class.ConstantUnion* %236) #12
  %1435 = xor i1 %1434, true
  %1436 = zext i1 %1435 to i8
  br label %1445

1437:                                             ; preds = %1439
  %1438 = icmp eq i64 %1444, %235
  br i1 %1438, label %1445, label %1439

1439:                                             ; preds = %1429, %1437
  %1440 = phi i64 [ %1444, %1437 ], [ 0, %1429 ]
  %1441 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1440
  %1442 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %1440
  %1443 = tail call zeroext i1 @_ZNK13ConstantUnioneqERKS_(%class.ConstantUnion* %1441, %class.ConstantUnion* dereferenceable(8) %1442) #10
  %1444 = add nuw i64 %1440, 1
  br i1 %1443, label %1437, label %1445

1445:                                             ; preds = %1437, %1439, %1429, %1431
  %1446 = phi i8 [ %1436, %1431 ], [ 0, %1429 ], [ 1, %1439 ], [ 0, %1437 ]
  store i8 %1446, i8* %1423, align 4
  %1447 = getelementptr inbounds i8, i8* %1423, i64 4
  store i8 4, i8* %1447, align 4
  %1448 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %1449 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1448, i64 96) #10
  %1450 = getelementptr inbounds [26 x i8], [26 x i8]* %21, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %1450)
  %1451 = getelementptr inbounds [20 x i8], [20 x i8]* %22, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %1451)
  %1452 = getelementptr inbounds [26 x i8], [26 x i8]* %21, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %1452, i8 0, i64 24, i1 false)
  %1453 = getelementptr inbounds [20 x i8], [20 x i8]* %22, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %1453, i8 0, i64 16, i1 false)
  %1454 = bitcast i8* %1449 to i32 (...)***
  %1455 = getelementptr inbounds i8, i8* %1449, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1455, i8 0, i64 16, i1 false) #11
  %1456 = getelementptr inbounds i8, i8* %1449, i64 24
  store i8 4, i8* %1456, align 8
  %1457 = getelementptr inbounds i8, i8* %1449, i64 25
  store i8 0, i8* %1457, align 1
  %1458 = getelementptr inbounds i8, i8* %1449, i64 26
  %1459 = getelementptr inbounds i8, i8* %1449, i64 27
  store i8 1, i8* %1459, align 1
  %1460 = getelementptr inbounds i8, i8* %1449, i64 28
  store i8 1, i8* %1460, align 4
  %1461 = getelementptr inbounds i8, i8* %1449, i64 29
  store i8 0, i8* %1461, align 1
  %1462 = getelementptr inbounds i8, i8* %1449, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1462, i8* nonnull align 2 %1450, i64 26, i1 false)
  %1463 = getelementptr inbounds i8, i8* %1449, i64 56
  %1464 = bitcast i8* %1463 to i64*
  store i64 4294967295, i64* %1464, align 8
  %1465 = getelementptr inbounds i8, i8* %1449, i64 64
  %1466 = bitcast i8* %1465 to i32*
  store i32 0, i32* %1466, align 8
  %1467 = getelementptr inbounds i8, i8* %1449, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1467, i8* nonnull align 4 %1451, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV20TIntermConstantUnion, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1454, align 8
  %1468 = getelementptr inbounds i8, i8* %1449, i64 88
  %1469 = bitcast i8* %1468 to i8**
  store i8* %1423, i8** %1469, align 8
  store i8 2, i8* %1458, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %1450)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %1451)
  %1470 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1471 = bitcast %struct.TSourceLoc* %1470 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1455, i8* align 4 %1471, i64 16, i1 false) #11
  %1472 = bitcast i8* %1449 to %class.TIntermTyped*
  br label %1603

1473:                                             ; preds = %226
  %1474 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %1475 = extractvalue { i64, i1 } %1474, 1
  %1476 = extractvalue { i64, i1 } %1474, 0
  %1477 = select i1 %1475, i64 -1, i64 %1476
  %1478 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %1479 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1478, i64 %1477) #10
  %1480 = bitcast i8* %1479 to %class.ConstantUnion*
  %1481 = icmp eq i64 %235, 0
  br i1 %1481, label %1573, label %1482

1482:                                             ; preds = %1473
  %1483 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1480, i64 %235
  br label %1484

1484:                                             ; preds = %1484, %1482
  %1485 = phi %class.ConstantUnion* [ %1480, %1482 ], [ %1488, %1484 ]
  %1486 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1485, i64 0, i32 0, i32 0
  store i32 0, i32* %1486, align 4
  %1487 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1485, i64 0, i32 1
  store i8 0, i8* %1487, align 4
  %1488 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1485, i64 1
  %1489 = icmp eq %class.ConstantUnion* %1488, %1483
  br i1 %1489, label %1490, label %1484

1490:                                             ; preds = %1484
  br i1 %1481, label %1573, label %1491

1491:                                             ; preds = %1490, %1516
  %1492 = phi i64 [ %1521, %1516 ], [ 0, %1490 ]
  %1493 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1492
  %1494 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %1492
  %1495 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1492, i32 1
  %1496 = load i8, i8* %1495, align 4
  switch i8 %1496, label %1516 [
    i8 2, label %1509
    i8 3, label %1497
    i8 1, label %1503
  ]

1497:                                             ; preds = %1491
  %1498 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1493, i64 0, i32 0, i32 0
  %1499 = load i32, i32* %1498, align 4
  %1500 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1494, i64 0, i32 0, i32 0
  %1501 = load i32, i32* %1500, align 4
  %1502 = icmp ugt i32 %1499, %1501
  br i1 %1502, label %1515, label %1516

1503:                                             ; preds = %1491
  %1504 = bitcast %class.ConstantUnion* %1493 to float*
  %1505 = load float, float* %1504, align 4
  %1506 = bitcast %class.ConstantUnion* %1494 to float*
  %1507 = load float, float* %1506, align 4
  %1508 = fcmp ogt float %1505, %1507
  br i1 %1508, label %1515, label %1516

1509:                                             ; preds = %1491
  %1510 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1493, i64 0, i32 0, i32 0
  %1511 = load i32, i32* %1510, align 4
  %1512 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1494, i64 0, i32 0, i32 0
  %1513 = load i32, i32* %1512, align 4
  %1514 = icmp sgt i32 %1511, %1513
  br i1 %1514, label %1515, label %1516

1515:                                             ; preds = %1497, %1503, %1509
  br label %1516

1516:                                             ; preds = %1491, %1497, %1503, %1509, %1515
  %1517 = phi %class.ConstantUnion* [ %1493, %1515 ], [ %1494, %1509 ], [ %1494, %1503 ], [ %1494, %1497 ], [ %1494, %1491 ]
  %1518 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1480, i64 %1492
  %1519 = bitcast %class.ConstantUnion* %1518 to i8*
  %1520 = bitcast %class.ConstantUnion* %1517 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1519, i8* align 4 %1520, i64 5, i1 false)
  %1521 = add nuw i64 %1492, 1
  %1522 = icmp eq i64 %1521, %235
  br i1 %1522, label %1573, label %1491

1523:                                             ; preds = %226
  %1524 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %235, i64 8)
  %1525 = extractvalue { i64, i1 } %1524, 1
  %1526 = extractvalue { i64, i1 } %1524, 0
  %1527 = select i1 %1525, i64 -1, i64 %1526
  %1528 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %1529 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1528, i64 %1527) #10
  %1530 = bitcast i8* %1529 to %class.ConstantUnion*
  %1531 = icmp eq i64 %235, 0
  br i1 %1531, label %1573, label %1532

1532:                                             ; preds = %1523
  %1533 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1530, i64 %235
  br label %1534

1534:                                             ; preds = %1534, %1532
  %1535 = phi %class.ConstantUnion* [ %1530, %1532 ], [ %1538, %1534 ]
  %1536 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1535, i64 0, i32 0, i32 0
  store i32 0, i32* %1536, align 4
  %1537 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1535, i64 0, i32 1
  store i8 0, i8* %1537, align 4
  %1538 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1535, i64 1
  %1539 = icmp eq %class.ConstantUnion* %1538, %1533
  br i1 %1539, label %1540, label %1534

1540:                                             ; preds = %1534
  br i1 %1531, label %1573, label %1541

1541:                                             ; preds = %1540, %1566
  %1542 = phi i64 [ %1571, %1566 ], [ 0, %1540 ]
  %1543 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1542
  %1544 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %234, i64 %1542
  %1545 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %1542, i32 1
  %1546 = load i8, i8* %1545, align 4
  switch i8 %1546, label %1566 [
    i8 2, label %1559
    i8 3, label %1547
    i8 1, label %1553
  ]

1547:                                             ; preds = %1541
  %1548 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1543, i64 0, i32 0, i32 0
  %1549 = load i32, i32* %1548, align 4
  %1550 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1544, i64 0, i32 0, i32 0
  %1551 = load i32, i32* %1550, align 4
  %1552 = icmp ult i32 %1549, %1551
  br i1 %1552, label %1565, label %1566

1553:                                             ; preds = %1541
  %1554 = bitcast %class.ConstantUnion* %1543 to float*
  %1555 = load float, float* %1554, align 4
  %1556 = bitcast %class.ConstantUnion* %1544 to float*
  %1557 = load float, float* %1556, align 4
  %1558 = fcmp olt float %1555, %1557
  br i1 %1558, label %1565, label %1566

1559:                                             ; preds = %1541
  %1560 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1543, i64 0, i32 0, i32 0
  %1561 = load i32, i32* %1560, align 4
  %1562 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1544, i64 0, i32 0, i32 0
  %1563 = load i32, i32* %1562, align 4
  %1564 = icmp slt i32 %1561, %1563
  br i1 %1564, label %1565, label %1566

1565:                                             ; preds = %1547, %1553, %1559
  br label %1566

1566:                                             ; preds = %1541, %1547, %1553, %1559, %1565
  %1567 = phi %class.ConstantUnion* [ %1543, %1565 ], [ %1544, %1559 ], [ %1544, %1553 ], [ %1544, %1547 ], [ %1544, %1541 ]
  %1568 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1530, i64 %1542
  %1569 = bitcast %class.ConstantUnion* %1568 to i8*
  %1570 = bitcast %class.ConstantUnion* %1567 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1569, i8* align 4 %1570, i64 5, i1 false)
  %1571 = add nuw i64 %1542, 1
  %1572 = icmp eq i64 %1571, %235
  br i1 %1572, label %1573, label %1541

1573:                                             ; preds = %1566, %1516, %1136, %1090, %1050, %1010, %970, %937, %895, %853, %637, %544, %497, %447, %375, %311, %283, %255, %1523, %1473, %1100, %1060, %1020, %980, %940, %904, %862, %820, %552, %526, %293, %265, %237, %254, %282, %310, %364, %436, %487, %543, %569, %837, %879, %921, %957, %997, %1037, %1077, %1117, %1490, %1540, %523, %1332, %1276, %1220, %1164, %511
  %1574 = phi i32 [ 0, %1332 ], [ 0, %1276 ], [ 0, %1220 ], [ 0, %1164 ], [ %227, %523 ], [ %227, %511 ], [ %227, %254 ], [ %227, %282 ], [ %227, %310 ], [ %227, %364 ], [ %227, %436 ], [ %227, %487 ], [ %227, %543 ], [ %227, %569 ], [ %227, %837 ], [ %227, %879 ], [ %227, %921 ], [ %227, %957 ], [ %227, %997 ], [ %227, %1037 ], [ %227, %1077 ], [ %227, %1117 ], [ %227, %1490 ], [ %227, %1540 ], [ %227, %237 ], [ %227, %265 ], [ %227, %293 ], [ %227, %526 ], [ %227, %552 ], [ %227, %820 ], [ %227, %862 ], [ %227, %904 ], [ %227, %940 ], [ %227, %980 ], [ %227, %1020 ], [ %227, %1060 ], [ %227, %1100 ], [ %227, %1473 ], [ %227, %1523 ], [ %227, %255 ], [ %227, %283 ], [ %227, %311 ], [ %227, %375 ], [ %227, %447 ], [ %227, %497 ], [ %227, %544 ], [ %227, %637 ], [ %227, %853 ], [ %227, %895 ], [ %227, %937 ], [ %227, %970 ], [ %227, %1010 ], [ %227, %1050 ], [ %227, %1090 ], [ %227, %1136 ], [ %227, %1516 ], [ %227, %1566 ]
  %1575 = phi i64 [ 4294967295, %1332 ], [ 4294967295, %1276 ], [ 4294967295, %1220 ], [ 4294967295, %1164 ], [ %228, %523 ], [ %228, %511 ], [ %228, %254 ], [ %228, %282 ], [ %228, %310 ], [ %228, %364 ], [ %228, %436 ], [ %228, %487 ], [ %228, %543 ], [ %228, %569 ], [ %228, %837 ], [ %228, %879 ], [ %228, %921 ], [ %228, %957 ], [ %228, %997 ], [ %228, %1037 ], [ %228, %1077 ], [ %228, %1117 ], [ %228, %1490 ], [ %228, %1540 ], [ %228, %237 ], [ %228, %265 ], [ %228, %293 ], [ %228, %526 ], [ %228, %552 ], [ %228, %820 ], [ %228, %862 ], [ %228, %904 ], [ %228, %940 ], [ %228, %980 ], [ %228, %1020 ], [ %228, %1060 ], [ %228, %1100 ], [ %228, %1473 ], [ %228, %1523 ], [ %228, %255 ], [ %228, %283 ], [ %228, %311 ], [ %228, %375 ], [ %228, %447 ], [ %228, %497 ], [ %228, %544 ], [ %228, %637 ], [ %228, %853 ], [ %228, %895 ], [ %228, %937 ], [ %228, %970 ], [ %228, %1010 ], [ %228, %1050 ], [ %228, %1090 ], [ %228, %1136 ], [ %228, %1516 ], [ %228, %1566 ]
  %1576 = phi i8 [ 0, %1332 ], [ 0, %1276 ], [ 0, %1220 ], [ 0, %1164 ], [ %229, %523 ], [ %229, %511 ], [ %229, %254 ], [ %229, %282 ], [ %229, %310 ], [ %229, %364 ], [ %229, %436 ], [ %229, %487 ], [ %229, %543 ], [ %229, %569 ], [ %229, %837 ], [ %229, %879 ], [ %229, %921 ], [ %229, %957 ], [ %229, %997 ], [ %229, %1037 ], [ %229, %1077 ], [ %229, %1117 ], [ %229, %1490 ], [ %229, %1540 ], [ %229, %237 ], [ %229, %265 ], [ %229, %293 ], [ %229, %526 ], [ %229, %552 ], [ %229, %820 ], [ %229, %862 ], [ %229, %904 ], [ %229, %940 ], [ %229, %980 ], [ %229, %1020 ], [ %229, %1060 ], [ %229, %1100 ], [ %229, %1473 ], [ %229, %1523 ], [ %229, %255 ], [ %229, %283 ], [ %229, %311 ], [ %229, %375 ], [ %229, %447 ], [ %229, %497 ], [ %229, %544 ], [ %229, %637 ], [ %229, %853 ], [ %229, %895 ], [ %229, %937 ], [ %229, %970 ], [ %229, %1010 ], [ %229, %1050 ], [ %229, %1090 ], [ %229, %1136 ], [ %229, %1516 ], [ %229, %1566 ]
  %1577 = phi i8 [ 1, %1332 ], [ 1, %1276 ], [ 1, %1220 ], [ 1, %1164 ], [ %230, %523 ], [ 1, %511 ], [ %230, %254 ], [ %230, %282 ], [ %230, %310 ], [ 0, %364 ], [ 0, %436 ], [ %466, %487 ], [ %230, %543 ], [ %230, %569 ], [ %230, %837 ], [ %230, %879 ], [ %230, %921 ], [ %230, %957 ], [ %230, %997 ], [ %230, %1037 ], [ %230, %1077 ], [ %230, %1117 ], [ %230, %1490 ], [ %230, %1540 ], [ %230, %237 ], [ %230, %265 ], [ %230, %293 ], [ %230, %526 ], [ %230, %552 ], [ %230, %820 ], [ %230, %862 ], [ %230, %904 ], [ %230, %940 ], [ %230, %980 ], [ %230, %1020 ], [ %230, %1060 ], [ %230, %1100 ], [ %230, %1473 ], [ %230, %1523 ], [ %230, %255 ], [ %230, %283 ], [ %230, %311 ], [ %339, %375 ], [ %415, %447 ], [ %466, %497 ], [ %230, %544 ], [ %230, %637 ], [ %230, %853 ], [ %230, %895 ], [ %230, %937 ], [ %230, %970 ], [ %230, %1010 ], [ %230, %1050 ], [ %230, %1090 ], [ %230, %1136 ], [ %230, %1516 ], [ %230, %1566 ]
  %1578 = phi i8 [ %1335, %1332 ], [ %1279, %1276 ], [ %1223, %1220 ], [ %1167, %1164 ], [ %231, %523 ], [ 1, %511 ], [ %231, %254 ], [ %231, %282 ], [ %231, %310 ], [ %341, %364 ], [ %418, %436 ], [ 0, %487 ], [ %231, %543 ], [ %231, %569 ], [ %231, %837 ], [ %231, %879 ], [ %231, %921 ], [ %231, %957 ], [ %231, %997 ], [ %231, %1037 ], [ %231, %1077 ], [ %231, %1117 ], [ %231, %1490 ], [ %231, %1540 ], [ %231, %237 ], [ %231, %265 ], [ %231, %293 ], [ %231, %526 ], [ %231, %552 ], [ %231, %820 ], [ %231, %862 ], [ %231, %904 ], [ %231, %940 ], [ %231, %980 ], [ %231, %1020 ], [ %231, %1060 ], [ %231, %1100 ], [ %231, %1473 ], [ %231, %1523 ], [ %231, %255 ], [ %231, %283 ], [ %231, %311 ], [ %341, %375 ], [ %418, %447 ], [ %469, %497 ], [ %231, %544 ], [ %231, %637 ], [ %231, %853 ], [ %231, %895 ], [ %231, %937 ], [ %231, %970 ], [ %231, %1010 ], [ %231, %1050 ], [ %231, %1090 ], [ %231, %1136 ], [ %231, %1516 ], [ %231, %1566 ]
  %1579 = phi i8 [ 0, %1332 ], [ 0, %1276 ], [ 0, %1220 ], [ 0, %1164 ], [ %232, %523 ], [ %232, %511 ], [ %232, %254 ], [ %232, %282 ], [ %232, %310 ], [ %232, %364 ], [ %232, %436 ], [ %232, %487 ], [ %232, %543 ], [ %232, %569 ], [ %232, %837 ], [ %232, %879 ], [ %232, %921 ], [ %232, %957 ], [ %232, %997 ], [ %232, %1037 ], [ %232, %1077 ], [ %232, %1117 ], [ %232, %1490 ], [ %232, %1540 ], [ %232, %237 ], [ %232, %265 ], [ %232, %293 ], [ %232, %526 ], [ %232, %552 ], [ %232, %820 ], [ %232, %862 ], [ %232, %904 ], [ %232, %940 ], [ %232, %980 ], [ %232, %1020 ], [ %232, %1060 ], [ %232, %1100 ], [ %232, %1473 ], [ %232, %1523 ], [ %232, %255 ], [ %232, %283 ], [ %232, %311 ], [ %232, %375 ], [ %232, %447 ], [ %232, %497 ], [ %232, %544 ], [ %232, %637 ], [ %232, %853 ], [ %232, %895 ], [ %232, %937 ], [ %232, %970 ], [ %232, %1010 ], [ %232, %1050 ], [ %232, %1090 ], [ %232, %1136 ], [ %232, %1516 ], [ %232, %1566 ]
  %1580 = phi i8 [ 4, %1332 ], [ 4, %1276 ], [ 4, %1220 ], [ 4, %1164 ], [ %233, %523 ], [ %233, %511 ], [ %233, %254 ], [ %233, %282 ], [ %233, %310 ], [ %233, %364 ], [ %233, %436 ], [ %233, %487 ], [ %233, %543 ], [ %233, %569 ], [ %233, %837 ], [ %233, %879 ], [ %233, %921 ], [ %233, %957 ], [ %233, %997 ], [ %233, %1037 ], [ %233, %1077 ], [ %233, %1117 ], [ %233, %1490 ], [ %233, %1540 ], [ %233, %237 ], [ %233, %265 ], [ %233, %293 ], [ %233, %526 ], [ %233, %552 ], [ %233, %820 ], [ %233, %862 ], [ %233, %904 ], [ %233, %940 ], [ %233, %980 ], [ %233, %1020 ], [ %233, %1060 ], [ %233, %1100 ], [ %233, %1473 ], [ %233, %1523 ], [ %233, %255 ], [ %233, %283 ], [ %233, %311 ], [ %233, %375 ], [ %233, %447 ], [ %233, %497 ], [ %233, %544 ], [ %233, %637 ], [ %233, %853 ], [ %233, %895 ], [ %233, %937 ], [ %233, %970 ], [ %233, %1010 ], [ %233, %1050 ], [ %233, %1090 ], [ %233, %1136 ], [ %233, %1516 ], [ %233, %1566 ]
  %1581 = phi %class.ConstantUnion* [ %1321, %1332 ], [ %1265, %1276 ], [ %1209, %1220 ], [ %1153, %1164 ], [ %524, %523 ], [ %514, %511 ], [ %244, %254 ], [ %272, %282 ], [ %300, %310 ], [ %353, %364 ], [ %425, %436 ], [ %476, %487 ], [ %533, %543 ], [ %559, %569 ], [ %827, %837 ], [ %869, %879 ], [ %911, %921 ], [ %947, %957 ], [ %987, %997 ], [ %1027, %1037 ], [ %1067, %1077 ], [ %1107, %1117 ], [ %1480, %1490 ], [ %1530, %1540 ], [ %244, %237 ], [ %272, %265 ], [ %300, %293 ], [ %533, %526 ], [ %559, %552 ], [ %827, %820 ], [ %869, %862 ], [ %911, %904 ], [ %947, %940 ], [ %987, %980 ], [ %1027, %1020 ], [ %1067, %1060 ], [ %1107, %1100 ], [ %1480, %1473 ], [ %1530, %1523 ], [ %244, %255 ], [ %272, %283 ], [ %300, %311 ], [ %353, %375 ], [ %425, %447 ], [ %476, %497 ], [ %533, %544 ], [ %559, %637 ], [ %827, %853 ], [ %869, %895 ], [ %911, %937 ], [ %947, %970 ], [ %987, %1010 ], [ %1027, %1050 ], [ %1067, %1090 ], [ %1107, %1136 ], [ %1480, %1516 ], [ %1530, %1566 ]
  %1582 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %1583 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1582, i64 96) #10
  %1584 = bitcast i8* %1583 to i32 (...)***
  %1585 = getelementptr inbounds i8, i8* %1583, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1585, i8 0, i64 16, i1 false) #11
  %1586 = getelementptr inbounds i8, i8* %1583, i64 24
  store i8 %1580, i8* %1586, align 8
  %1587 = getelementptr inbounds i8, i8* %1583, i64 25
  store i8 %1579, i8* %1587, align 1
  %1588 = getelementptr inbounds i8, i8* %1583, i64 26
  %1589 = getelementptr inbounds i8, i8* %1583, i64 27
  store i8 %1578, i8* %1589, align 1
  %1590 = getelementptr inbounds i8, i8* %1583, i64 28
  store i8 %1577, i8* %1590, align 4
  %1591 = getelementptr inbounds i8, i8* %1583, i64 29
  store i8 %1576, i8* %1591, align 1
  %1592 = getelementptr inbounds i8, i8* %1583, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1592, i8* nonnull align 2 %52, i64 26, i1 false)
  %1593 = getelementptr inbounds i8, i8* %1583, i64 56
  %1594 = bitcast i8* %1593 to i64*
  store i64 %1575, i64* %1594, align 8
  %1595 = getelementptr inbounds i8, i8* %1583, i64 64
  %1596 = bitcast i8* %1595 to i32*
  store i32 %1574, i32* %1596, align 8
  %1597 = getelementptr inbounds i8, i8* %1583, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1597, i8* nonnull align 4 %53, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV20TIntermConstantUnion, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1584, align 8
  %1598 = getelementptr inbounds i8, i8* %1583, i64 88
  %1599 = bitcast i8* %1598 to %class.ConstantUnion**
  store %class.ConstantUnion* %1581, %class.ConstantUnion** %1599, align 8
  store i8 2, i8* %1588, align 2
  %1600 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1601 = bitcast %struct.TSourceLoc* %1600 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1585, i8* align 4 %1601, i64 16, i1 false) #11
  %1602 = bitcast i8* %1583 to %class.TIntermTyped*
  br label %1603

1603:                                             ; preds = %406, %226, %634, %1573, %1445, %1393, %764, %733, %675, %646, %329
  %1604 = phi %class.TIntermTyped* [ %1602, %1573 ], [ %1472, %1445 ], [ %1420, %1393 ], [ null, %733 ], [ %790, %764 ], [ null, %646 ], [ %701, %675 ], [ null, %329 ], [ null, %406 ], [ null, %634 ], [ null, %226 ]
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %53)
  br label %2087

1605:                                             ; preds = %40
  %1606 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %41, i64 8)
  %1607 = extractvalue { i64, i1 } %1606, 1
  %1608 = extractvalue { i64, i1 } %1606, 0
  %1609 = select i1 %1607, i64 -1, i64 %1608
  %1610 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %1611 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1610, i64 %1609) #10
  %1612 = bitcast i8* %1611 to %class.ConstantUnion*
  %1613 = icmp eq i64 %41, 0
  br i1 %1613, label %1622, label %1614

1614:                                             ; preds = %1605
  %1615 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %41
  br label %1616

1616:                                             ; preds = %1616, %1614
  %1617 = phi %class.ConstantUnion* [ %1612, %1614 ], [ %1620, %1616 ]
  %1618 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1617, i64 0, i32 0, i32 0
  store i32 0, i32* %1618, align 4
  %1619 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1617, i64 0, i32 1
  store i8 0, i8* %1619, align 4
  %1620 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1617, i64 1
  %1621 = icmp eq %class.ConstantUnion* %1620, %1615
  br i1 %1621, label %1622, label %1616

1622:                                             ; preds = %1616, %1605
  %1623 = getelementptr inbounds [63 x i8], [63 x i8]* %23, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 63, i8* nonnull %1623)
  %1624 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 1, i32 0
  %1625 = load i8, i8* %1624, align 8
  %1626 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 1, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1623, i8* align 1 %1626, i64 63, i1 false)
  br i1 %1613, label %2071, label %1627

1627:                                             ; preds = %1622
  %1628 = icmp eq i8 %1625, 3
  %1629 = icmp eq i8 %1625, 2
  %1630 = icmp eq i8 %1625, 1
  %1631 = icmp eq i8 %1625, 4
  br label %1632

1632:                                             ; preds = %2065, %1627
  %1633 = phi i64 [ 0, %1627 ], [ %2069, %2065 ]
  %1634 = phi i8 [ %1625, %1627 ], [ %2067, %2065 ]
  switch i32 %1, label %2085 [
    i32 8, label %1635
    i32 9, label %1656
    i32 11, label %1672
    i32 51, label %1691
    i32 52, label %1707
    i32 53, label %1723
    i32 54, label %1739
    i32 55, label %1755
    i32 56, label %1771
    i32 57, label %1787
    i32 58, label %1803
    i32 59, label %1819
    i32 60, label %1835
    i32 61, label %1851
    i32 62, label %1867
    i32 63, label %1883
    i32 64, label %1899
    i32 67, label %1915
    i32 69, label %1931
    i32 66, label %1948
    i32 68, label %1964
    i32 70, label %1980
    i32 71, label %1996
    i32 90, label %2013
    i32 91, label %2026
    i32 92, label %2039
    i32 93, label %2052
  ]

1635:                                             ; preds = %1632
  switch i8 %1625, label %1648 [
    i8 1, label %1636
    i8 2, label %1643
  ]

1636:                                             ; preds = %1635
  %1637 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1638 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1639 = bitcast %class.ConstantUnion* %1638 to float*
  %1640 = load float, float* %1639, align 4
  %1641 = fsub float -0.000000e+00, %1640
  %1642 = bitcast %class.ConstantUnion* %1637 to float*
  store float %1641, float* %1642, align 4
  br label %2065

1643:                                             ; preds = %1635
  %1644 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633, i32 0, i32 0
  %1645 = load i32, i32* %1644, align 4
  %1646 = sub nsw i32 0, %1645
  %1647 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633, i32 0, i32 0
  store i32 %1646, i32* %1647, align 4
  br label %2065

1648:                                             ; preds = %1635
  %1649 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1650 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1651 = bitcast %struct.TSourceLoc* %1650 to i64*
  %1652 = load i64, i64* %1651, align 4
  %1653 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1654 = bitcast i32* %1653 to i64*
  %1655 = load i64, i64* %1654, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1649, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1652, i64 %1655) #10
  br label %2085

1656:                                             ; preds = %1632
  br i1 %1631, label %1657, label %1664

1657:                                             ; preds = %1656
  %1658 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1659 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1660 = bitcast %class.ConstantUnion* %1659 to i8*
  %1661 = load i8, i8* %1660, align 4, !range !2
  %1662 = xor i8 %1661, 1
  %1663 = bitcast %class.ConstantUnion* %1658 to i8*
  store i8 %1662, i8* %1663, align 4
  br label %2065

1664:                                             ; preds = %1656
  %1665 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1666 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1667 = bitcast %struct.TSourceLoc* %1666 to i64*
  %1668 = load i64, i64* %1667, align 4
  %1669 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1670 = bitcast i32* %1669 to i64*
  %1671 = load i64, i64* %1670, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1665, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1668, i64 %1671) #10
  br label %2085

1672:                                             ; preds = %1632
  switch i8 %1625, label %1683 [
    i8 2, label %1673
    i8 3, label %1678
  ]

1673:                                             ; preds = %1672
  %1674 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633, i32 0, i32 0
  %1675 = load i32, i32* %1674, align 4
  %1676 = xor i32 %1675, -1
  %1677 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633, i32 0, i32 0
  store i32 %1676, i32* %1677, align 4
  br label %2065

1678:                                             ; preds = %1672
  %1679 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633, i32 0, i32 0
  %1680 = load i32, i32* %1679, align 4
  %1681 = xor i32 %1680, -1
  %1682 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633, i32 0, i32 0
  store i32 %1681, i32* %1682, align 4
  br label %2065

1683:                                             ; preds = %1672
  %1684 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1685 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1686 = bitcast %struct.TSourceLoc* %1685 to i64*
  %1687 = load i64, i64* %1686, align 4
  %1688 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1689 = bitcast i32* %1688 to i64*
  %1690 = load i64, i64* %1689, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1684, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1687, i64 %1690) #10
  br label %2085

1691:                                             ; preds = %1632
  br i1 %1630, label %1692, label %1699

1692:                                             ; preds = %1691
  %1693 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1694 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1695 = bitcast %class.ConstantUnion* %1694 to float*
  %1696 = load float, float* %1695, align 4
  %1697 = fmul float %1696, 0x3F91DF46A0000000
  %1698 = bitcast %class.ConstantUnion* %1693 to float*
  store float %1697, float* %1698, align 4
  br label %2065

1699:                                             ; preds = %1691
  %1700 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1701 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1702 = bitcast %struct.TSourceLoc* %1701 to i64*
  %1703 = load i64, i64* %1702, align 4
  %1704 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1705 = bitcast i32* %1704 to i64*
  %1706 = load i64, i64* %1705, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1700, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1703, i64 %1706) #10
  br label %2085

1707:                                             ; preds = %1632
  br i1 %1630, label %1708, label %1715

1708:                                             ; preds = %1707
  %1709 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1710 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1711 = bitcast %class.ConstantUnion* %1710 to float*
  %1712 = load float, float* %1711, align 4
  %1713 = fmul float %1712, 0x404CA5DC20000000
  %1714 = bitcast %class.ConstantUnion* %1709 to float*
  store float %1713, float* %1714, align 4
  br label %2065

1715:                                             ; preds = %1707
  %1716 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1717 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1718 = bitcast %struct.TSourceLoc* %1717 to i64*
  %1719 = load i64, i64* %1718, align 4
  %1720 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1721 = bitcast i32* %1720 to i64*
  %1722 = load i64, i64* %1721, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1716, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1719, i64 %1722) #10
  br label %2085

1723:                                             ; preds = %1632
  br i1 %1630, label %1724, label %1731

1724:                                             ; preds = %1723
  %1725 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1726 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1727 = bitcast %class.ConstantUnion* %1726 to float*
  %1728 = load float, float* %1727, align 4
  %1729 = tail call float @sinf(float %1728) #10
  %1730 = bitcast %class.ConstantUnion* %1725 to float*
  store float %1729, float* %1730, align 4
  br label %2065

1731:                                             ; preds = %1723
  %1732 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1733 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1734 = bitcast %struct.TSourceLoc* %1733 to i64*
  %1735 = load i64, i64* %1734, align 4
  %1736 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1737 = bitcast i32* %1736 to i64*
  %1738 = load i64, i64* %1737, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1732, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1735, i64 %1738) #10
  br label %2085

1739:                                             ; preds = %1632
  br i1 %1630, label %1740, label %1747

1740:                                             ; preds = %1739
  %1741 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1742 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1743 = bitcast %class.ConstantUnion* %1742 to float*
  %1744 = load float, float* %1743, align 4
  %1745 = tail call float @cosf(float %1744) #10
  %1746 = bitcast %class.ConstantUnion* %1741 to float*
  store float %1745, float* %1746, align 4
  br label %2065

1747:                                             ; preds = %1739
  %1748 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1749 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1750 = bitcast %struct.TSourceLoc* %1749 to i64*
  %1751 = load i64, i64* %1750, align 4
  %1752 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1753 = bitcast i32* %1752 to i64*
  %1754 = load i64, i64* %1753, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1748, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1751, i64 %1754) #10
  br label %2085

1755:                                             ; preds = %1632
  br i1 %1630, label %1756, label %1763

1756:                                             ; preds = %1755
  %1757 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1758 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1759 = bitcast %class.ConstantUnion* %1758 to float*
  %1760 = load float, float* %1759, align 4
  %1761 = tail call float @tanf(float %1760) #10
  %1762 = bitcast %class.ConstantUnion* %1757 to float*
  store float %1761, float* %1762, align 4
  br label %2065

1763:                                             ; preds = %1755
  %1764 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1765 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1766 = bitcast %struct.TSourceLoc* %1765 to i64*
  %1767 = load i64, i64* %1766, align 4
  %1768 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1769 = bitcast i32* %1768 to i64*
  %1770 = load i64, i64* %1769, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1764, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1767, i64 %1770) #10
  br label %2085

1771:                                             ; preds = %1632
  br i1 %1630, label %1772, label %1779

1772:                                             ; preds = %1771
  %1773 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1774 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1775 = bitcast %class.ConstantUnion* %1774 to float*
  %1776 = load float, float* %1775, align 4
  %1777 = tail call float @asinf(float %1776) #10
  %1778 = bitcast %class.ConstantUnion* %1773 to float*
  store float %1777, float* %1778, align 4
  br label %2065

1779:                                             ; preds = %1771
  %1780 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1781 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1782 = bitcast %struct.TSourceLoc* %1781 to i64*
  %1783 = load i64, i64* %1782, align 4
  %1784 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1785 = bitcast i32* %1784 to i64*
  %1786 = load i64, i64* %1785, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1780, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1783, i64 %1786) #10
  br label %2085

1787:                                             ; preds = %1632
  br i1 %1630, label %1788, label %1795

1788:                                             ; preds = %1787
  %1789 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1790 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1791 = bitcast %class.ConstantUnion* %1790 to float*
  %1792 = load float, float* %1791, align 4
  %1793 = tail call float @acosf(float %1792) #10
  %1794 = bitcast %class.ConstantUnion* %1789 to float*
  store float %1793, float* %1794, align 4
  br label %2065

1795:                                             ; preds = %1787
  %1796 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1797 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1798 = bitcast %struct.TSourceLoc* %1797 to i64*
  %1799 = load i64, i64* %1798, align 4
  %1800 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1801 = bitcast i32* %1800 to i64*
  %1802 = load i64, i64* %1801, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1796, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1799, i64 %1802) #10
  br label %2085

1803:                                             ; preds = %1632
  br i1 %1630, label %1804, label %1811

1804:                                             ; preds = %1803
  %1805 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1806 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1807 = bitcast %class.ConstantUnion* %1806 to float*
  %1808 = load float, float* %1807, align 4
  %1809 = tail call float @atanf(float %1808) #10
  %1810 = bitcast %class.ConstantUnion* %1805 to float*
  store float %1809, float* %1810, align 4
  br label %2065

1811:                                             ; preds = %1803
  %1812 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1813 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1814 = bitcast %struct.TSourceLoc* %1813 to i64*
  %1815 = load i64, i64* %1814, align 4
  %1816 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1817 = bitcast i32* %1816 to i64*
  %1818 = load i64, i64* %1817, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1812, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1815, i64 %1818) #10
  br label %2085

1819:                                             ; preds = %1632
  br i1 %1630, label %1820, label %1827

1820:                                             ; preds = %1819
  %1821 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1822 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1823 = bitcast %class.ConstantUnion* %1822 to float*
  %1824 = load float, float* %1823, align 4
  %1825 = tail call float @sinhf(float %1824) #10
  %1826 = bitcast %class.ConstantUnion* %1821 to float*
  store float %1825, float* %1826, align 4
  br label %2065

1827:                                             ; preds = %1819
  %1828 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1829 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1830 = bitcast %struct.TSourceLoc* %1829 to i64*
  %1831 = load i64, i64* %1830, align 4
  %1832 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1833 = bitcast i32* %1832 to i64*
  %1834 = load i64, i64* %1833, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1828, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1831, i64 %1834) #10
  br label %2085

1835:                                             ; preds = %1632
  br i1 %1630, label %1836, label %1843

1836:                                             ; preds = %1835
  %1837 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1838 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1839 = bitcast %class.ConstantUnion* %1838 to float*
  %1840 = load float, float* %1839, align 4
  %1841 = tail call float @coshf(float %1840) #10
  %1842 = bitcast %class.ConstantUnion* %1837 to float*
  store float %1841, float* %1842, align 4
  br label %2065

1843:                                             ; preds = %1835
  %1844 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1845 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1846 = bitcast %struct.TSourceLoc* %1845 to i64*
  %1847 = load i64, i64* %1846, align 4
  %1848 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1849 = bitcast i32* %1848 to i64*
  %1850 = load i64, i64* %1849, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1844, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1847, i64 %1850) #10
  br label %2085

1851:                                             ; preds = %1632
  br i1 %1630, label %1852, label %1859

1852:                                             ; preds = %1851
  %1853 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1854 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1855 = bitcast %class.ConstantUnion* %1854 to float*
  %1856 = load float, float* %1855, align 4
  %1857 = tail call float @tanhf(float %1856) #10
  %1858 = bitcast %class.ConstantUnion* %1853 to float*
  store float %1857, float* %1858, align 4
  br label %2065

1859:                                             ; preds = %1851
  %1860 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1861 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1862 = bitcast %struct.TSourceLoc* %1861 to i64*
  %1863 = load i64, i64* %1862, align 4
  %1864 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1865 = bitcast i32* %1864 to i64*
  %1866 = load i64, i64* %1865, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1860, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1863, i64 %1866) #10
  br label %2085

1867:                                             ; preds = %1632
  br i1 %1630, label %1868, label %1875

1868:                                             ; preds = %1867
  %1869 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1870 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1871 = bitcast %class.ConstantUnion* %1870 to float*
  %1872 = load float, float* %1871, align 4
  %1873 = tail call float @asinhf(float %1872) #10
  %1874 = bitcast %class.ConstantUnion* %1869 to float*
  store float %1873, float* %1874, align 4
  br label %2065

1875:                                             ; preds = %1867
  %1876 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1877 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1878 = bitcast %struct.TSourceLoc* %1877 to i64*
  %1879 = load i64, i64* %1878, align 4
  %1880 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1881 = bitcast i32* %1880 to i64*
  %1882 = load i64, i64* %1881, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1876, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1879, i64 %1882) #10
  br label %2085

1883:                                             ; preds = %1632
  br i1 %1630, label %1884, label %1891

1884:                                             ; preds = %1883
  %1885 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1886 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1887 = bitcast %class.ConstantUnion* %1886 to float*
  %1888 = load float, float* %1887, align 4
  %1889 = tail call float @acoshf(float %1888) #10
  %1890 = bitcast %class.ConstantUnion* %1885 to float*
  store float %1889, float* %1890, align 4
  br label %2065

1891:                                             ; preds = %1883
  %1892 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1893 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1894 = bitcast %struct.TSourceLoc* %1893 to i64*
  %1895 = load i64, i64* %1894, align 4
  %1896 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1897 = bitcast i32* %1896 to i64*
  %1898 = load i64, i64* %1897, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1892, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1895, i64 %1898) #10
  br label %2085

1899:                                             ; preds = %1632
  br i1 %1630, label %1900, label %1907

1900:                                             ; preds = %1899
  %1901 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1902 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1903 = bitcast %class.ConstantUnion* %1902 to float*
  %1904 = load float, float* %1903, align 4
  %1905 = tail call float @atanhf(float %1904) #10
  %1906 = bitcast %class.ConstantUnion* %1901 to float*
  store float %1905, float* %1906, align 4
  br label %2065

1907:                                             ; preds = %1899
  %1908 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1909 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1910 = bitcast %struct.TSourceLoc* %1909 to i64*
  %1911 = load i64, i64* %1910, align 4
  %1912 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1913 = bitcast i32* %1912 to i64*
  %1914 = load i64, i64* %1913, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1908, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1911, i64 %1914) #10
  br label %2085

1915:                                             ; preds = %1632
  br i1 %1630, label %1916, label %1923

1916:                                             ; preds = %1915
  %1917 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1918 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1919 = bitcast %class.ConstantUnion* %1918 to float*
  %1920 = load float, float* %1919, align 4
  %1921 = tail call float @logf(float %1920) #10
  %1922 = bitcast %class.ConstantUnion* %1917 to float*
  store float %1921, float* %1922, align 4
  br label %2065

1923:                                             ; preds = %1915
  %1924 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1925 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1926 = bitcast %struct.TSourceLoc* %1925 to i64*
  %1927 = load i64, i64* %1926, align 4
  %1928 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1929 = bitcast i32* %1928 to i64*
  %1930 = load i64, i64* %1929, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1924, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1927, i64 %1930) #10
  br label %2085

1931:                                             ; preds = %1632
  br i1 %1630, label %1932, label %1940

1932:                                             ; preds = %1931
  %1933 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1934 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1935 = bitcast %class.ConstantUnion* %1934 to float*
  %1936 = load float, float* %1935, align 4
  %1937 = tail call float @logf(float %1936) #10
  %1938 = fmul float %1937, 0x3FF7154760000000
  %1939 = bitcast %class.ConstantUnion* %1933 to float*
  store float %1938, float* %1939, align 4
  br label %2065

1940:                                             ; preds = %1931
  %1941 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1942 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1943 = bitcast %struct.TSourceLoc* %1942 to i64*
  %1944 = load i64, i64* %1943, align 4
  %1945 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1946 = bitcast i32* %1945 to i64*
  %1947 = load i64, i64* %1946, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1941, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1944, i64 %1947) #10
  br label %2085

1948:                                             ; preds = %1632
  br i1 %1630, label %1949, label %1956

1949:                                             ; preds = %1948
  %1950 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1951 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1952 = bitcast %class.ConstantUnion* %1951 to float*
  %1953 = load float, float* %1952, align 4
  %1954 = tail call float @expf(float %1953) #10
  %1955 = bitcast %class.ConstantUnion* %1950 to float*
  store float %1954, float* %1955, align 4
  br label %2065

1956:                                             ; preds = %1948
  %1957 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1958 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1959 = bitcast %struct.TSourceLoc* %1958 to i64*
  %1960 = load i64, i64* %1959, align 4
  %1961 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1962 = bitcast i32* %1961 to i64*
  %1963 = load i64, i64* %1962, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1957, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1960, i64 %1963) #10
  br label %2085

1964:                                             ; preds = %1632
  br i1 %1630, label %1965, label %1972

1965:                                             ; preds = %1964
  %1966 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1967 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1968 = bitcast %class.ConstantUnion* %1967 to float*
  %1969 = load float, float* %1968, align 4
  %1970 = tail call float @exp2f(float %1969) #10
  %1971 = bitcast %class.ConstantUnion* %1966 to float*
  store float %1970, float* %1971, align 4
  br label %2065

1972:                                             ; preds = %1964
  %1973 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1974 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1975 = bitcast %struct.TSourceLoc* %1974 to i64*
  %1976 = load i64, i64* %1975, align 4
  %1977 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1978 = bitcast i32* %1977 to i64*
  %1979 = load i64, i64* %1978, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1973, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1976, i64 %1979) #10
  br label %2085

1980:                                             ; preds = %1632
  br i1 %1630, label %1981, label %1988

1981:                                             ; preds = %1980
  %1982 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1983 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %1984 = bitcast %class.ConstantUnion* %1983 to float*
  %1985 = load float, float* %1984, align 4
  %1986 = tail call float @sqrtf(float %1985) #10
  %1987 = bitcast %class.ConstantUnion* %1982 to float*
  store float %1986, float* %1987, align 4
  br label %2065

1988:                                             ; preds = %1980
  %1989 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %1990 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %1991 = bitcast %struct.TSourceLoc* %1990 to i64*
  %1992 = load i64, i64* %1991, align 4
  %1993 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %1994 = bitcast i32* %1993 to i64*
  %1995 = load i64, i64* %1994, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %1989, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %1992, i64 %1995) #10
  br label %2085

1996:                                             ; preds = %1632
  br i1 %1630, label %1997, label %2005

1997:                                             ; preds = %1996
  %1998 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633
  %1999 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633
  %2000 = bitcast %class.ConstantUnion* %1999 to float*
  %2001 = load float, float* %2000, align 4
  %2002 = tail call float @sqrtf(float %2001) #10
  %2003 = fdiv float 1.000000e+00, %2002
  %2004 = bitcast %class.ConstantUnion* %1998 to float*
  store float %2003, float* %2004, align 4
  br label %2065

2005:                                             ; preds = %1996
  %2006 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %2007 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %2008 = bitcast %struct.TSourceLoc* %2007 to i64*
  %2009 = load i64, i64* %2008, align 4
  %2010 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %2011 = bitcast i32* %2010 to i64*
  %2012 = load i64, i64* %2011, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %2006, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %2009, i64 %2012) #10
  br label %2085

2013:                                             ; preds = %1632
  br i1 %1630, label %2014, label %2018

2014:                                             ; preds = %2013
  %2015 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633, i32 0, i32 0
  %2016 = load i32, i32* %2015, align 4
  %2017 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633, i32 0, i32 0
  store i32 %2016, i32* %2017, align 4
  br label %2065

2018:                                             ; preds = %2013
  %2019 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %2020 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %2021 = bitcast %struct.TSourceLoc* %2020 to i64*
  %2022 = load i64, i64* %2021, align 4
  %2023 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %2024 = bitcast i32* %2023 to i64*
  %2025 = load i64, i64* %2024, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %2019, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %2022, i64 %2025) #10
  br label %2085

2026:                                             ; preds = %1632
  br i1 %1630, label %2027, label %2031

2027:                                             ; preds = %2026
  %2028 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633, i32 0, i32 0
  %2029 = load i32, i32* %2028, align 4
  %2030 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633, i32 0, i32 0
  store i32 %2029, i32* %2030, align 4
  br label %2065

2031:                                             ; preds = %2026
  %2032 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %2033 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %2034 = bitcast %struct.TSourceLoc* %2033 to i64*
  %2035 = load i64, i64* %2034, align 4
  %2036 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %2037 = bitcast i32* %2036 to i64*
  %2038 = load i64, i64* %2037, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %2032, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %2035, i64 %2038) #10
  br label %2085

2039:                                             ; preds = %1632
  br i1 %1629, label %2040, label %2044

2040:                                             ; preds = %2039
  %2041 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633, i32 0, i32 0
  %2042 = load i32, i32* %2041, align 4
  %2043 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633, i32 0, i32 0
  store i32 %2042, i32* %2043, align 4
  br label %2065

2044:                                             ; preds = %2039
  %2045 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %2046 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %2047 = bitcast %struct.TSourceLoc* %2046 to i64*
  %2048 = load i64, i64* %2047, align 4
  %2049 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %2050 = bitcast i32* %2049 to i64*
  %2051 = load i64, i64* %2050, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %2045, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %2048, i64 %2051) #10
  br label %2085

2052:                                             ; preds = %1632
  br i1 %1628, label %2053, label %2057

2053:                                             ; preds = %2052
  %2054 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %25, i64 %1633, i32 0, i32 0
  %2055 = load i32, i32* %2054, align 4
  %2056 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633, i32 0, i32 0
  store i32 %2055, i32* %2056, align 4
  br label %2065

2057:                                             ; preds = %2052
  %2058 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %3, i64 0, i32 0
  %2059 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %2060 = bitcast %struct.TSourceLoc* %2059 to i64*
  %2061 = load i64, i64* %2060, align 4
  %2062 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %2063 = bitcast i32* %2062 to i64*
  %2064 = load i64, i64* %2063, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %2058, i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95, i64 0, i64 0), i64 %2061, i64 %2064) #10
  br label %2085

2065:                                             ; preds = %1657, %1692, %1708, %1724, %1740, %1756, %1772, %1788, %1804, %1820, %1836, %1852, %1868, %1884, %1900, %1916, %1932, %1949, %1965, %1981, %1997, %2014, %2027, %2040, %2053, %1643, %1636, %1678, %1673
  %2066 = phi i8 [ 4, %1657 ], [ 1, %1692 ], [ 1, %1708 ], [ 1, %1724 ], [ 1, %1740 ], [ 1, %1756 ], [ 1, %1772 ], [ 1, %1788 ], [ 1, %1804 ], [ 1, %1820 ], [ 1, %1836 ], [ 1, %1852 ], [ 1, %1868 ], [ 1, %1884 ], [ 1, %1900 ], [ 1, %1916 ], [ 1, %1932 ], [ 1, %1949 ], [ 1, %1965 ], [ 1, %1981 ], [ 1, %1997 ], [ 2, %2014 ], [ 3, %2027 ], [ 1, %2040 ], [ 1, %2053 ], [ 2, %1643 ], [ 1, %1636 ], [ 3, %1678 ], [ 2, %1673 ]
  %2067 = phi i8 [ %1634, %1657 ], [ %1634, %1692 ], [ %1634, %1708 ], [ %1634, %1724 ], [ %1634, %1740 ], [ %1634, %1756 ], [ %1634, %1772 ], [ %1634, %1788 ], [ %1634, %1804 ], [ %1634, %1820 ], [ %1634, %1836 ], [ %1634, %1852 ], [ %1634, %1868 ], [ %1634, %1884 ], [ %1634, %1900 ], [ %1634, %1916 ], [ %1634, %1932 ], [ %1634, %1949 ], [ %1634, %1965 ], [ %1634, %1981 ], [ %1634, %1997 ], [ 2, %2014 ], [ 3, %2027 ], [ 1, %2040 ], [ 1, %2053 ], [ %1634, %1643 ], [ %1634, %1636 ], [ %1634, %1678 ], [ %1634, %1673 ]
  %2068 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1612, i64 %1633, i32 1
  store i8 %2066, i8* %2068, align 4
  %2069 = add nuw i64 %1633, 1
  %2070 = icmp eq i64 %2069, %41
  br i1 %2070, label %2071, label %1632

2071:                                             ; preds = %2065, %1622
  %2072 = phi i8 [ %1625, %1622 ], [ %2067, %2065 ]
  %2073 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %2074 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %2073, i64 96) #10
  %2075 = bitcast i8* %2074 to i32 (...)***
  %2076 = getelementptr inbounds i8, i8* %2074, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2076, i8 0, i64 16, i1 false) #11
  %2077 = getelementptr inbounds i8, i8* %2074, i64 24
  store i8 %2072, i8* %2077, align 8
  %2078 = getelementptr inbounds i8, i8* %2074, i64 25
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2078, i8* nonnull align 1 %1623, i64 63, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV20TIntermConstantUnion, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2075, align 8
  %2079 = getelementptr inbounds i8, i8* %2074, i64 88
  %2080 = bitcast i8* %2079 to i8**
  store i8* %1611, i8** %2080, align 8
  %2081 = getelementptr inbounds i8, i8* %2074, i64 26
  store i8 2, i8* %2081, align 2
  %2082 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 0, i32 1
  %2083 = bitcast %struct.TSourceLoc* %2082 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2076, i8* align 4 %2083, i64 16, i1 false) #11
  %2084 = bitcast i8* %2074 to %class.TIntermTyped*
  br label %2085

2085:                                             ; preds = %1632, %1648, %1664, %1683, %1699, %1715, %1731, %1747, %1763, %1779, %1795, %1811, %1827, %1843, %1859, %1875, %1891, %1907, %1923, %1940, %1956, %1972, %1988, %2005, %2018, %2031, %2044, %2057, %2071
  %2086 = phi %class.TIntermTyped* [ %2084, %2071 ], [ null, %2057 ], [ null, %2044 ], [ null, %2031 ], [ null, %2018 ], [ null, %2005 ], [ null, %1988 ], [ null, %1972 ], [ null, %1956 ], [ null, %1940 ], [ null, %1923 ], [ null, %1907 ], [ null, %1891 ], [ null, %1875 ], [ null, %1859 ], [ null, %1843 ], [ null, %1827 ], [ null, %1811 ], [ null, %1795 ], [ null, %1779 ], [ null, %1763 ], [ null, %1747 ], [ null, %1731 ], [ null, %1715 ], [ null, %1699 ], [ null, %1683 ], [ null, %1664 ], [ null, %1648 ], [ null, %1632 ]
  call void @llvm.lifetime.end.p0i8(i64 63, i8* nonnull %1623)
  br label %2087

2087:                                             ; preds = %2085, %1603
  %2088 = phi %class.TIntermTyped* [ %1604, %1603 ], [ %2086, %2085 ]
  ret %class.TIntermTyped* %2088
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermTyped* @_ZN13TIntermediate9addAssignE9TOperatorP12TIntermTypedS2_RK10TSourceLoc(%class.TIntermediate* nocapture readonly, i32, %class.TIntermTyped*, %class.TIntermTyped*, %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = alloca [26 x i8], align 2
  %7 = alloca [20 x i8], align 4
  %8 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1
  %9 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 11
  %10 = load %class.TStructure*, %class.TStructure** %9, align 8
  %11 = icmp eq %class.TStructure* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %3, i64 0, i32 1, i32 11
  %14 = load %class.TStructure*, %class.TStructure** %13, align 8
  %15 = icmp eq %class.TStructure* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %12, %5
  %17 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %3, i64 0, i32 1
  %18 = tail call zeroext i1 @_ZNK5TTypeeqERKS_(%class.TType* %8, %class.TType* dereferenceable(64) %17) #10
  br i1 %18, label %19, label %53

19:                                               ; preds = %16, %12
  %20 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %21 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %20, i64 112) #10
  %22 = bitcast i8* %21 to %class.TIntermBinary*
  %23 = getelementptr inbounds [26 x i8], [26 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %23)
  %24 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %24)
  %25 = getelementptr inbounds [26 x i8], [26 x i8]* %6, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %25, i8 0, i64 24, i1 false)
  %26 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 16, i1 false)
  %27 = bitcast i8* %21 to i32 (...)***
  %28 = getelementptr inbounds i8, i8* %21, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #11
  %29 = getelementptr inbounds i8, i8* %21, i64 24
  store i8 1, i8* %29, align 8
  %30 = getelementptr inbounds i8, i8* %21, i64 25
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds i8, i8* %21, i64 26
  store i8 0, i8* %31, align 2
  %32 = getelementptr inbounds i8, i8* %21, i64 27
  store i8 1, i8* %32, align 1
  %33 = getelementptr inbounds i8, i8* %21, i64 28
  store i8 1, i8* %33, align 4
  %34 = getelementptr inbounds i8, i8* %21, i64 29
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds i8, i8* %21, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %35, i8* nonnull align 2 %23, i64 26, i1 false) #11
  %36 = getelementptr inbounds i8, i8* %21, i64 56
  %37 = bitcast i8* %36 to i64*
  store i64 4294967295, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %21, i64 64
  %39 = bitcast i8* %38 to i32*
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %21, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* nonnull align 4 %24, i64 20, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %23)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %24)
  %41 = getelementptr inbounds i8, i8* %21, i64 88
  %42 = bitcast i8* %41 to i32*
  store i32 %1, i32* %42, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV13TIntermBinary, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %43 = bitcast %struct.TSourceLoc* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 4 %43, i64 16, i1 false) #11
  %44 = getelementptr inbounds i8, i8* %21, i64 96
  %45 = bitcast i8* %44 to %class.TIntermTyped**
  store %class.TIntermTyped* %2, %class.TIntermTyped** %45, align 8
  %46 = getelementptr inbounds i8, i8* %21, i64 104
  %47 = bitcast i8* %46 to %class.TIntermTyped**
  store %class.TIntermTyped* %3, %class.TIntermTyped** %47, align 8
  %48 = getelementptr inbounds %class.TIntermediate, %class.TIntermediate* %0, i64 0, i32 0
  %49 = load %class.TInfoSink*, %class.TInfoSink** %48, align 8
  %50 = tail call zeroext i1 @_ZN13TIntermBinary7promoteER9TInfoSink(%class.TIntermBinary* %22, %class.TInfoSink* dereferenceable(72) %49) #12
  %51 = bitcast i8* %21 to %class.TIntermTyped*
  %52 = select i1 %50, %class.TIntermTyped* %51, %class.TIntermTyped* null
  br label %53

53:                                               ; preds = %16, %19
  %54 = phi %class.TIntermTyped* [ null, %16 ], [ %52, %19 ]
  ret %class.TIntermTyped* %54
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermTyped* @_ZN13TIntermediate8addIndexE9TOperatorP12TIntermTypedS2_RK10TSourceLoc(%class.TIntermediate* nocapture readnone, i32, %class.TIntermTyped*, %class.TIntermTyped*, %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = alloca [26 x i8], align 2
  %7 = alloca [20 x i8], align 4
  %8 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %9 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %8, i64 112) #10
  %10 = getelementptr inbounds [26 x i8], [26 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %10)
  %11 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %11)
  %12 = getelementptr inbounds [26 x i8], [26 x i8]* %6, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %12, i8 0, i64 24, i1 false)
  %13 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 16, i1 false)
  %14 = bitcast i8* %9 to i32 (...)***
  %15 = getelementptr inbounds i8, i8* %9, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #11
  %16 = getelementptr inbounds i8, i8* %9, i64 24
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 25
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds i8, i8* %9, i64 26
  store i8 0, i8* %18, align 2
  %19 = getelementptr inbounds i8, i8* %9, i64 27
  store i8 1, i8* %19, align 1
  %20 = getelementptr inbounds i8, i8* %9, i64 28
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds i8, i8* %9, i64 29
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds i8, i8* %9, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %22, i8* nonnull align 2 %10, i64 26, i1 false) #11
  %23 = getelementptr inbounds i8, i8* %9, i64 56
  %24 = bitcast i8* %23 to i64*
  store i64 4294967295, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %9, i64 64
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %9, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* nonnull align 4 %11, i64 20, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %11)
  %28 = getelementptr inbounds i8, i8* %9, i64 88
  %29 = bitcast i8* %28 to i32*
  store i32 %1, i32* %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV13TIntermBinary, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %30 = bitcast %struct.TSourceLoc* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 4 %30, i64 16, i1 false) #11
  %31 = getelementptr inbounds i8, i8* %9, i64 96
  %32 = bitcast i8* %31 to %class.TIntermTyped**
  store %class.TIntermTyped* %2, %class.TIntermTyped** %32, align 8
  %33 = getelementptr inbounds i8, i8* %9, i64 104
  %34 = bitcast i8* %33 to %class.TIntermTyped**
  store %class.TIntermTyped* %3, %class.TIntermTyped** %34, align 8
  %35 = bitcast i8* %9 to %class.TIntermTyped*
  ret %class.TIntermTyped* %35
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermTyped* @_ZN13TIntermediate12addUnaryMathE9TOperatorP12TIntermTypedRK10TSourceLocPK5TType(%class.TIntermediate* nocapture readonly, i32, %class.TIntermTyped*, %struct.TSourceLoc* nocapture readonly dereferenceable(16), %class.TType*) local_unnamed_addr #2 align 2 {
  %6 = alloca [26 x i8], align 2
  %7 = alloca [20 x i8], align 4
  %8 = icmp eq %class.TIntermTyped* %2, null
  br i1 %8, label %9, label %18

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.TIntermediate, %class.TIntermediate* %0, i64 0, i32 0
  %11 = load %class.TInfoSink*, %class.TInfoSink** %10, align 8
  %12 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %11, i64 0, i32 0
  %13 = bitcast %struct.TSourceLoc* %3 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = getelementptr inbounds %struct.TSourceLoc, %struct.TSourceLoc* %3, i64 0, i32 2
  %16 = bitcast i32* %15 to i64*
  %17 = load i64, i64* %16, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %12, i32 4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.81, i64 0, i64 0), i64 %14, i64 %17) #10
  br label %121

18:                                               ; preds = %5
  switch i32 %1, label %70 [
    i32 11, label %19
    i32 9, label %32
    i32 12, label %48
    i32 14, label %48
    i32 13, label %48
    i32 15, label %48
    i32 8, label %48
  ]

19:                                               ; preds = %18
  %20 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 8
  %22 = or i8 %21, 1
  %23 = icmp eq i8 %22, 3
  br i1 %23, label %24, label %121

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 4
  %26 = load i8, i8* %25, align 4
  %27 = icmp ugt i8 %26, 1
  br i1 %27, label %121, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 5
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %70, label %121

32:                                               ; preds = %18
  %33 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 8
  %35 = icmp eq i8 %34, 4
  br i1 %35, label %36, label %121

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 4
  %38 = load i8, i8* %37, align 4
  %39 = icmp ugt i8 %38, 1
  br i1 %39, label %121, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 5
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %121

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 3
  %46 = load i8, i8* %45, align 1
  %47 = icmp ugt i8 %46, 1
  br i1 %47, label %121, label %70

48:                                               ; preds = %18, %18, %18, %18, %18
  %49 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 3
  %50 = load i8, i8* %49, align 1
  switch i8 %50, label %70 [
    i8 1, label %51
    i8 0, label %66
  ]

51:                                               ; preds = %48
  %52 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 4
  %53 = load i8, i8* %52, align 4
  %54 = icmp ugt i8 %53, 1
  br i1 %54, label %70, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 11
  %57 = load %class.TStructure*, %class.TStructure** %56, align 8
  %58 = icmp eq %class.TStructure* %57, null
  br i1 %58, label %59, label %121

59:                                               ; preds = %55
  %60 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 8
  %62 = icmp ne i8 %61, 38
  %63 = add i8 %61, -15
  %64 = icmp ugt i8 %63, 16
  %65 = and i1 %62, %64
  br i1 %65, label %70, label %121

66:                                               ; preds = %48
  %67 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 4
  %68 = load i8, i8* %67, align 4
  %69 = icmp ugt i8 %68, 1
  br i1 %69, label %70, label %121

70:                                               ; preds = %48, %51, %28, %59, %44, %18, %66
  %71 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0
  %72 = bitcast %class.TIntermTyped* %2 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %73 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %72, align 8
  %74 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %73, i64 2
  %75 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %74, align 8
  %76 = tail call %class.TIntermConstantUnion* %75(%class.TIntermNode* %71) #10
  %77 = icmp eq %class.TIntermConstantUnion* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %70
  %79 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %72, align 8
  %80 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %79, i64 2
  %81 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %80, align 8
  %82 = tail call %class.TIntermConstantUnion* %81(%class.TIntermNode* %71) #10
  br label %83

83:                                               ; preds = %70, %78
  %84 = phi %class.TIntermConstantUnion* [ %82, %78 ], [ null, %70 ]
  %85 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %86 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %85, i64 104) #10
  %87 = bitcast i8* %86 to %class.TIntermUnary*
  %88 = getelementptr inbounds [26 x i8], [26 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %88)
  %89 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %89)
  %90 = getelementptr inbounds [26 x i8], [26 x i8]* %6, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %90, i8 0, i64 24, i1 false)
  %91 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %91, i8 0, i64 16, i1 false)
  %92 = bitcast i8* %86 to i32 (...)***
  %93 = getelementptr inbounds i8, i8* %86, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 16, i1 false) #11
  %94 = getelementptr inbounds i8, i8* %86, i64 24
  store i8 1, i8* %94, align 8
  %95 = getelementptr inbounds i8, i8* %86, i64 25
  store i8 0, i8* %95, align 1
  %96 = getelementptr inbounds i8, i8* %86, i64 26
  store i8 0, i8* %96, align 2
  %97 = getelementptr inbounds i8, i8* %86, i64 27
  store i8 1, i8* %97, align 1
  %98 = getelementptr inbounds i8, i8* %86, i64 28
  store i8 1, i8* %98, align 4
  %99 = getelementptr inbounds i8, i8* %86, i64 29
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds i8, i8* %86, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %100, i8* nonnull align 2 %88, i64 26, i1 false) #11
  %101 = getelementptr inbounds i8, i8* %86, i64 56
  %102 = bitcast i8* %101 to i64*
  store i64 4294967295, i64* %102, align 8
  %103 = getelementptr inbounds i8, i8* %86, i64 64
  %104 = bitcast i8* %103 to i32*
  store i32 0, i32* %104, align 8
  %105 = getelementptr inbounds i8, i8* %86, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* nonnull align 4 %89, i64 20, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %88)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %89)
  %106 = getelementptr inbounds i8, i8* %86, i64 88
  %107 = bitcast i8* %106 to i32*
  store i32 %1, i32* %107, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV12TIntermUnary, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %108 = getelementptr inbounds i8, i8* %86, i64 96
  %109 = bitcast i8* %108 to %class.TIntermTyped**
  store %class.TIntermTyped* null, %class.TIntermTyped** %109, align 8
  %110 = bitcast %struct.TSourceLoc* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 4 %110, i64 16, i1 false) #11
  store %class.TIntermTyped* %2, %class.TIntermTyped** %109, align 8
  %111 = getelementptr inbounds %class.TIntermediate, %class.TIntermediate* %0, i64 0, i32 0
  %112 = tail call zeroext i1 @_ZN12TIntermUnary7promoteER9TInfoSinkPK5TType(%class.TIntermUnary* %87, %class.TInfoSink* dereferenceable(72) undef, %class.TType* %4) #12
  br i1 %112, label %113, label %121

113:                                              ; preds = %83
  %114 = icmp eq %class.TIntermConstantUnion* %84, null
  br i1 %114, label %119, label %115

115:                                              ; preds = %113
  %116 = load %class.TInfoSink*, %class.TInfoSink** %111, align 8
  %117 = tail call %class.TIntermTyped* @_ZN20TIntermConstantUnion4foldE9TOperatorP12TIntermTypedR9TInfoSink(%class.TIntermConstantUnion* nonnull %84, i32 %1, %class.TIntermTyped* null, %class.TInfoSink* dereferenceable(72) %116) #12
  %118 = icmp eq %class.TIntermTyped* %117, null
  br i1 %118, label %119, label %121

119:                                              ; preds = %113, %115
  %120 = bitcast i8* %86 to %class.TIntermTyped*
  br label %121

121:                                              ; preds = %55, %59, %28, %40, %44, %119, %115, %83, %66, %36, %32, %19, %24, %9
  %122 = phi %class.TIntermTyped* [ null, %9 ], [ null, %28 ], [ null, %24 ], [ null, %19 ], [ null, %32 ], [ null, %40 ], [ null, %36 ], [ null, %66 ], [ %120, %119 ], [ %117, %115 ], [ null, %83 ], [ null, %44 ], [ null, %59 ], [ null, %55 ]
  ret %class.TIntermTyped* %122
}

; Function Attrs: optsize
declare void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase*, i32, i8*, i64, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN12TIntermUnary7promoteER9TInfoSinkPK5TType(%class.TIntermUnary*, %class.TInfoSink* nocapture readnone dereferenceable(72), %class.TType*) local_unnamed_addr #2 align 2 {
  %4 = icmp eq %class.TType* %2, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %0, i64 0, i32 1
  %7 = load %class.TIntermTyped*, %class.TIntermTyped** %6, align 8
  %8 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %7, i64 0, i32 1
  br label %9

9:                                                ; preds = %3, %5
  %10 = phi %class.TType* [ %8, %5 ], [ %2, %3 ]
  %11 = bitcast %class.TIntermUnary* %0 to void (%class.TIntermUnary*, %class.TType*)***
  %12 = load void (%class.TIntermUnary*, %class.TType*)**, void (%class.TIntermUnary*, %class.TType*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.TIntermUnary*, %class.TType*)*, void (%class.TIntermUnary*, %class.TType*)** %12, i64 14
  %14 = load void (%class.TIntermUnary*, %class.TType*)*, void (%class.TIntermUnary*, %class.TType*)** %13, align 8
  tail call void %14(%class.TIntermUnary* %0, %class.TType* dereferenceable(64) %10) #10
  %15 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %16 = load i8, i8* %15, align 2
  %17 = icmp eq i8 %16, 2
  br i1 %17, label %19, label %18

18:                                               ; preds = %9
  store i8 0, i8* %15, align 2
  br label %19

19:                                               ; preds = %9, %18
  %20 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %0, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %41 [
    i32 9, label %22
    i32 11, label %28
    i32 8, label %35
    i32 12, label %35
    i32 13, label %35
    i32 14, label %35
    i32 15, label %35
    i32 112, label %48
    i32 113, label %48
    i32 10, label %48
    i32 72, label %48
    i32 73, label %48
    i32 88, label %48
    i32 89, label %48
    i32 90, label %48
    i32 91, label %48
    i32 92, label %48
    i32 93, label %48
    i32 94, label %48
    i32 95, label %48
    i32 96, label %48
    i32 97, label %48
    i32 98, label %48
    i32 99, label %48
  ]

22:                                               ; preds = %19
  %23 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %0, i64 0, i32 1
  %24 = load %class.TIntermTyped*, %class.TIntermTyped** %23, align 8
  %25 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 4
  br i1 %27, label %47, label %48

28:                                               ; preds = %19
  %29 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %0, i64 0, i32 1
  %30 = load %class.TIntermTyped*, %class.TIntermTyped** %29, align 8
  %31 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 8
  %33 = or i8 %32, 1
  %34 = icmp eq i8 %33, 3
  br i1 %34, label %47, label %48

35:                                               ; preds = %19, %19, %19, %19, %19
  %36 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %0, i64 0, i32 1
  %37 = load %class.TIntermTyped*, %class.TIntermTyped** %36, align 8
  %38 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 8
  %40 = icmp eq i8 %39, 4
  br i1 %40, label %48, label %47

41:                                               ; preds = %19
  %42 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %0, i64 0, i32 1
  %43 = load %class.TIntermTyped*, %class.TIntermTyped** %42, align 8
  %44 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 8
  %46 = icmp eq i8 %45, 1
  br i1 %46, label %47, label %48

47:                                               ; preds = %41, %22, %35, %28
  br label %48

48:                                               ; preds = %41, %19, %19, %19, %19, %19, %19, %19, %19, %19, %19, %19, %19, %19, %19, %19, %19, %19, %35, %28, %22, %47
  %49 = phi i1 [ true, %47 ], [ false, %22 ], [ false, %28 ], [ false, %35 ], [ true, %19 ], [ true, %19 ], [ true, %19 ], [ true, %19 ], [ true, %19 ], [ true, %19 ], [ true, %19 ], [ true, %19 ], [ true, %19 ], [ true, %19 ], [ true, %19 ], [ true, %19 ], [ true, %19 ], [ true, %19 ], [ true, %19 ], [ true, %19 ], [ true, %19 ], [ false, %41 ]
  ret i1 %49
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermAggregate* @_ZN13TIntermediate20setAggregateOperatorEP11TIntermNode9TOperatorRK10TSourceLoc(%class.TIntermediate* nocapture readnone, %class.TIntermNode*, i32, %struct.TSourceLoc* nocapture readnone dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = ptrtoint %class.TIntermNode* %1 to i64
  %6 = icmp eq %class.TIntermNode* %1, null
  br i1 %6, label %90, label %7

7:                                                ; preds = %4
  %8 = bitcast %class.TIntermNode* %1 to %class.TIntermAggregate* (%class.TIntermNode*)***
  %9 = load %class.TIntermAggregate* (%class.TIntermNode*)**, %class.TIntermAggregate* (%class.TIntermNode*)*** %8, align 8
  %10 = getelementptr inbounds %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %9, i64 3
  %11 = load %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %10, align 8
  %12 = tail call %class.TIntermAggregate* %11(%class.TIntermNode* nonnull %1) #10
  %13 = icmp eq %class.TIntermAggregate* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %12, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %94, label %18

18:                                               ; preds = %14, %7
  %19 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %20 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %19, i64 184) #10
  %21 = bitcast i8* %20 to %class.TIntermAggregate*
  tail call void @_ZN16TIntermAggregateC2Ev(%class.TIntermAggregate* %21) #12
  %22 = getelementptr inbounds i8, i8* %20, i64 96
  %23 = getelementptr inbounds i8, i8* %20, i64 104
  %24 = bitcast i8* %23 to %class.TIntermNode***
  %25 = load %class.TIntermNode**, %class.TIntermNode*** %24, align 8
  %26 = getelementptr inbounds i8, i8* %20, i64 112
  %27 = bitcast i8* %26 to %class.TIntermNode***
  %28 = load %class.TIntermNode**, %class.TIntermNode*** %27, align 8
  %29 = icmp eq %class.TIntermNode** %25, %28
  %30 = ptrtoint %class.TIntermNode** %28 to i64
  br i1 %29, label %36, label %31

31:                                               ; preds = %18
  %32 = bitcast %class.TIntermNode** %25 to i64*
  store i64 %5, i64* %32, align 8
  %33 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %25, i64 1
  %34 = ptrtoint %class.TIntermNode** %33 to i64
  %35 = bitcast i8* %23 to i64*
  store i64 %34, i64* %35, align 8
  br label %94

36:                                               ; preds = %18
  %37 = ptrtoint %class.TIntermNode** %25 to i64
  %38 = bitcast i8* %23 to i64*
  %39 = bitcast i8* %22 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %37, %40
  %42 = ashr exact i64 %41, 3
  %43 = add nsw i64 %42, 1
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %47

45:                                               ; preds = %36
  %46 = bitcast i8* %22 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %46) #13
  unreachable

47:                                               ; preds = %36
  %48 = bitcast i8* %26 to i64*
  %49 = sub i64 %30, %40
  %50 = ashr exact i64 %49, 3
  %51 = icmp ult i64 %50, 1152921504606846975
  br i1 %51, label %52, label %57

52:                                               ; preds = %47
  %53 = ashr exact i64 %49, 2
  %54 = icmp ult i64 %53, %43
  %55 = select i1 %54, i64 %43, i64 %53
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %65, label %57

57:                                               ; preds = %52, %47
  %58 = phi i64 [ %55, %52 ], [ 2305843009213693951, %47 ]
  %59 = getelementptr inbounds i8, i8* %20, i64 120
  %60 = bitcast i8* %59 to %class.TPoolAllocator**
  %61 = load %class.TPoolAllocator*, %class.TPoolAllocator** %60, align 8
  %62 = shl i64 %58, 3
  %63 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %61, i64 %62) #10
  %64 = bitcast i8* %63 to %class.TIntermNode**
  br label %65

65:                                               ; preds = %57, %52
  %66 = phi i64 [ %58, %57 ], [ 0, %52 ]
  %67 = phi %class.TIntermNode** [ %64, %57 ], [ null, %52 ]
  %68 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %67, i64 %42
  %69 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %67, i64 %66
  %70 = ptrtoint %class.TIntermNode** %69 to i64
  %71 = bitcast %class.TIntermNode** %68 to i64*
  store i64 %5, i64* %71, align 8
  %72 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %68, i64 1
  %73 = ptrtoint %class.TIntermNode** %72 to i64
  %74 = bitcast i8* %22 to %class.TIntermNode***
  %75 = load %class.TIntermNode**, %class.TIntermNode*** %74, align 8
  %76 = load %class.TIntermNode**, %class.TIntermNode*** %24, align 8
  %77 = icmp eq %class.TIntermNode** %76, %75
  br i1 %77, label %87, label %78

78:                                               ; preds = %65, %78
  %79 = phi %class.TIntermNode** [ %81, %78 ], [ %68, %65 ]
  %80 = phi %class.TIntermNode** [ %82, %78 ], [ %76, %65 ]
  %81 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %79, i64 -1
  %82 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %80, i64 -1
  %83 = bitcast %class.TIntermNode** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %class.TIntermNode** %81 to i64*
  store i64 %84, i64* %85, align 8
  %86 = icmp eq %class.TIntermNode** %82, %75
  br i1 %86, label %87, label %78

87:                                               ; preds = %78, %65
  %88 = phi %class.TIntermNode** [ %68, %65 ], [ %81, %78 ]
  %89 = ptrtoint %class.TIntermNode** %88 to i64
  store i64 %89, i64* %39, align 8
  store i64 %73, i64* %38, align 8
  store i64 %70, i64* %48, align 8
  br label %94

90:                                               ; preds = %4
  %91 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %92 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %91, i64 184) #10
  %93 = bitcast i8* %92 to %class.TIntermAggregate*
  tail call void @_ZN16TIntermAggregateC2Ev(%class.TIntermAggregate* %93) #12
  br label %94

94:                                               ; preds = %87, %31, %14, %90
  %95 = phi %class.TIntermAggregate* [ %12, %14 ], [ %93, %90 ], [ %21, %31 ], [ %21, %87 ]
  %96 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %95, i64 0, i32 0, i32 1
  store i32 %2, i32* %96, align 8
  ret %class.TIntermAggregate* %95
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermAggregateC2Ev(%class.TIntermAggregate*) unnamed_addr #2 comdat align 2 {
  %2 = alloca [26 x i8], align 2
  %3 = alloca [20 x i8], align 4
  %4 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %4)
  %5 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5)
  %6 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %6, i8 0, i64 24, i1 false)
  %7 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 16, i1 false)
  %8 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = bitcast i32* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  %11 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  store i8 0, i8* %13, align 2
  %14 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 3
  store i8 1, i8* %14, align 1
  %15 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 4
  store i8 1, i8* %15, align 4
  %16 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 5
  store i8 0, i8* %16, align 1
  %17 = bitcast %class.TIntermAggregate* %0 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %18, i8* nonnull align 2 %4, i64 26, i1 false) #11
  %19 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 10
  %20 = bitcast %struct.TLayoutQualifier* %19 to i64*
  store i64 4294967295, i64* %20, align 8
  %21 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 10, i32 2
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %17, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* nonnull align 4 %5, i64 20, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5)
  %23 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %23, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV16TIntermAggregate, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %24 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 2
  %25 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %26 = bitcast %class.TVector.19* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #11
  %27 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  store %class.TPoolAllocator* %27, %class.TPoolAllocator** %25, align 8
  %28 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 3
  %29 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %30 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  store %class.TPoolAllocator* %30, %class.TPoolAllocator** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #11
  %32 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 4
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 8, i32 0
  %34 = bitcast i32* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermAggregate* @_ZN13TIntermediate13growAggregateEP11TIntermNodeS1_RK10TSourceLoc(%class.TIntermediate* nocapture readnone, %class.TIntermNode*, %class.TIntermNode*, %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = ptrtoint %class.TIntermNode* %1 to i64
  %6 = ptrtoint %class.TIntermNode* %2 to i64
  %7 = icmp eq %class.TIntermNode* %1, null
  %8 = icmp eq %class.TIntermNode* %2, null
  %9 = and i1 %7, %8
  br i1 %9, label %167, label %10

10:                                               ; preds = %4
  br i1 %7, label %22, label %11

11:                                               ; preds = %10
  %12 = bitcast %class.TIntermNode* %1 to %class.TIntermAggregate* (%class.TIntermNode*)***
  %13 = load %class.TIntermAggregate* (%class.TIntermNode*)**, %class.TIntermAggregate* (%class.TIntermNode*)*** %12, align 8
  %14 = getelementptr inbounds %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %13, i64 3
  %15 = load %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %14, align 8
  %16 = tail call %class.TIntermAggregate* %15(%class.TIntermNode* nonnull %1) #10
  %17 = icmp eq %class.TIntermAggregate* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %16, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %95, label %22

22:                                               ; preds = %10, %18, %11
  %23 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %24 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %23, i64 184) #10
  %25 = bitcast i8* %24 to %class.TIntermAggregate*
  tail call void @_ZN16TIntermAggregateC2Ev(%class.TIntermAggregate* %25) #12
  br i1 %7, label %95, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds i8, i8* %24, i64 96
  %28 = getelementptr inbounds i8, i8* %24, i64 104
  %29 = bitcast i8* %28 to %class.TIntermNode***
  %30 = load %class.TIntermNode**, %class.TIntermNode*** %29, align 8
  %31 = getelementptr inbounds i8, i8* %24, i64 112
  %32 = bitcast i8* %31 to %class.TIntermNode***
  %33 = load %class.TIntermNode**, %class.TIntermNode*** %32, align 8
  %34 = icmp eq %class.TIntermNode** %30, %33
  %35 = ptrtoint %class.TIntermNode** %33 to i64
  br i1 %34, label %41, label %36

36:                                               ; preds = %26
  %37 = bitcast %class.TIntermNode** %30 to i64*
  store i64 %5, i64* %37, align 8
  %38 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %30, i64 1
  %39 = ptrtoint %class.TIntermNode** %38 to i64
  %40 = bitcast i8* %28 to i64*
  store i64 %39, i64* %40, align 8
  br label %95

41:                                               ; preds = %26
  %42 = ptrtoint %class.TIntermNode** %30 to i64
  %43 = bitcast i8* %28 to i64*
  %44 = bitcast i8* %27 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %42, %45
  %47 = ashr exact i64 %46, 3
  %48 = add nsw i64 %47, 1
  %49 = icmp ugt i64 %48, 2305843009213693951
  br i1 %49, label %50, label %52

50:                                               ; preds = %41
  %51 = bitcast i8* %27 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #13
  unreachable

52:                                               ; preds = %41
  %53 = bitcast i8* %31 to i64*
  %54 = sub i64 %35, %45
  %55 = ashr exact i64 %54, 3
  %56 = icmp ult i64 %55, 1152921504606846975
  br i1 %56, label %57, label %62

57:                                               ; preds = %52
  %58 = ashr exact i64 %54, 2
  %59 = icmp ult i64 %58, %48
  %60 = select i1 %59, i64 %48, i64 %58
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %57, %52
  %63 = phi i64 [ %60, %57 ], [ 2305843009213693951, %52 ]
  %64 = getelementptr inbounds i8, i8* %24, i64 120
  %65 = bitcast i8* %64 to %class.TPoolAllocator**
  %66 = load %class.TPoolAllocator*, %class.TPoolAllocator** %65, align 8
  %67 = shl i64 %63, 3
  %68 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %66, i64 %67) #10
  %69 = bitcast i8* %68 to %class.TIntermNode**
  br label %70

70:                                               ; preds = %62, %57
  %71 = phi i64 [ %63, %62 ], [ 0, %57 ]
  %72 = phi %class.TIntermNode** [ %69, %62 ], [ null, %57 ]
  %73 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %72, i64 %47
  %74 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %72, i64 %71
  %75 = ptrtoint %class.TIntermNode** %74 to i64
  %76 = bitcast %class.TIntermNode** %73 to i64*
  store i64 %5, i64* %76, align 8
  %77 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %73, i64 1
  %78 = ptrtoint %class.TIntermNode** %77 to i64
  %79 = bitcast i8* %27 to %class.TIntermNode***
  %80 = load %class.TIntermNode**, %class.TIntermNode*** %79, align 8
  %81 = load %class.TIntermNode**, %class.TIntermNode*** %29, align 8
  %82 = icmp eq %class.TIntermNode** %81, %80
  br i1 %82, label %92, label %83

83:                                               ; preds = %70, %83
  %84 = phi %class.TIntermNode** [ %86, %83 ], [ %73, %70 ]
  %85 = phi %class.TIntermNode** [ %87, %83 ], [ %81, %70 ]
  %86 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %84, i64 -1
  %87 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %85, i64 -1
  %88 = bitcast %class.TIntermNode** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %class.TIntermNode** %86 to i64*
  store i64 %89, i64* %90, align 8
  %91 = icmp eq %class.TIntermNode** %87, %80
  br i1 %91, label %92, label %83

92:                                               ; preds = %83, %70
  %93 = phi %class.TIntermNode** [ %73, %70 ], [ %86, %83 ]
  %94 = ptrtoint %class.TIntermNode** %93 to i64
  store i64 %94, i64* %44, align 8
  store i64 %78, i64* %43, align 8
  store i64 %75, i64* %53, align 8
  br label %95

95:                                               ; preds = %92, %36, %18, %22
  %96 = phi %class.TIntermAggregate* [ %25, %22 ], [ %16, %18 ], [ %25, %36 ], [ %25, %92 ]
  br i1 %8, label %163, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %96, i64 0, i32 2, i32 0
  %99 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %96, i64 0, i32 2, i32 0, i32 0, i32 1
  %100 = load %class.TIntermNode**, %class.TIntermNode*** %99, align 8
  %101 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %96, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %102 = load %class.TIntermNode**, %class.TIntermNode*** %101, align 8
  %103 = icmp eq %class.TIntermNode** %100, %102
  %104 = ptrtoint %class.TIntermNode** %102 to i64
  br i1 %103, label %110, label %105

105:                                              ; preds = %97
  %106 = bitcast %class.TIntermNode** %100 to i64*
  store i64 %6, i64* %106, align 8
  %107 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %100, i64 1
  %108 = ptrtoint %class.TIntermNode** %107 to i64
  %109 = bitcast %class.TIntermNode*** %99 to i64*
  store i64 %108, i64* %109, align 8
  br label %163

110:                                              ; preds = %97
  %111 = ptrtoint %class.TIntermNode** %100 to i64
  %112 = bitcast %class.TIntermNode*** %99 to i64*
  %113 = bitcast %"class.std::__1::vector.20"* %98 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = sub i64 %111, %114
  %116 = ashr exact i64 %115, 3
  %117 = add nsw i64 %116, 1
  %118 = icmp ugt i64 %117, 2305843009213693951
  br i1 %118, label %119, label %121

119:                                              ; preds = %110
  %120 = bitcast %"class.std::__1::vector.20"* %98 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %120) #13
  unreachable

121:                                              ; preds = %110
  %122 = bitcast %class.TIntermNode*** %101 to i64*
  %123 = sub i64 %104, %114
  %124 = ashr exact i64 %123, 3
  %125 = icmp ult i64 %124, 1152921504606846975
  br i1 %125, label %126, label %131

126:                                              ; preds = %121
  %127 = ashr exact i64 %123, 2
  %128 = icmp ult i64 %127, %117
  %129 = select i1 %128, i64 %117, i64 %127
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %138, label %131

131:                                              ; preds = %126, %121
  %132 = phi i64 [ %129, %126 ], [ 2305843009213693951, %121 ]
  %133 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %96, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %134 = load %class.TPoolAllocator*, %class.TPoolAllocator** %133, align 8
  %135 = shl i64 %132, 3
  %136 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %134, i64 %135) #10
  %137 = bitcast i8* %136 to %class.TIntermNode**
  br label %138

138:                                              ; preds = %131, %126
  %139 = phi i64 [ %132, %131 ], [ 0, %126 ]
  %140 = phi %class.TIntermNode** [ %137, %131 ], [ null, %126 ]
  %141 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %140, i64 %116
  %142 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %140, i64 %139
  %143 = ptrtoint %class.TIntermNode** %142 to i64
  %144 = bitcast %class.TIntermNode** %141 to i64*
  store i64 %6, i64* %144, align 8
  %145 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %141, i64 1
  %146 = ptrtoint %class.TIntermNode** %145 to i64
  %147 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %98, i64 0, i32 0, i32 0
  %148 = load %class.TIntermNode**, %class.TIntermNode*** %147, align 8
  %149 = load %class.TIntermNode**, %class.TIntermNode*** %99, align 8
  %150 = icmp eq %class.TIntermNode** %149, %148
  br i1 %150, label %160, label %151

151:                                              ; preds = %138, %151
  %152 = phi %class.TIntermNode** [ %154, %151 ], [ %141, %138 ]
  %153 = phi %class.TIntermNode** [ %155, %151 ], [ %149, %138 ]
  %154 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %152, i64 -1
  %155 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %153, i64 -1
  %156 = bitcast %class.TIntermNode** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %class.TIntermNode** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = icmp eq %class.TIntermNode** %155, %148
  br i1 %159, label %160, label %151

160:                                              ; preds = %151, %138
  %161 = phi %class.TIntermNode** [ %141, %138 ], [ %154, %151 ]
  %162 = ptrtoint %class.TIntermNode** %161 to i64
  store i64 %162, i64* %113, align 8
  store i64 %146, i64* %112, align 8
  store i64 %143, i64* %122, align 8
  br label %163

163:                                              ; preds = %160, %105, %95
  %164 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %96, i64 0, i32 0, i32 0, i32 0, i32 1
  %165 = bitcast %struct.TSourceLoc* %164 to i8*
  %166 = bitcast %struct.TSourceLoc* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 4 %166, i64 16, i1 false) #11
  br label %167

167:                                              ; preds = %4, %163
  %168 = phi %class.TIntermAggregate* [ %96, %163 ], [ null, %4 ]
  ret %class.TIntermAggregate* %168
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermAggregate* @_ZN13TIntermediate13makeAggregateEP11TIntermNodeRK10TSourceLoc(%class.TIntermediate* nocapture readnone, %class.TIntermNode*, %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = ptrtoint %class.TIntermNode* %1 to i64
  %5 = icmp eq %class.TIntermNode* %1, null
  br i1 %5, label %81, label %6

6:                                                ; preds = %3
  %7 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %8 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %7, i64 184) #10
  %9 = bitcast i8* %8 to %class.TIntermAggregate*
  tail call void @_ZN16TIntermAggregateC2Ev(%class.TIntermAggregate* %9) #12
  %10 = getelementptr inbounds i8, i8* %8, i64 96
  %11 = getelementptr inbounds i8, i8* %8, i64 104
  %12 = bitcast i8* %11 to %class.TIntermNode***
  %13 = load %class.TIntermNode**, %class.TIntermNode*** %12, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 112
  %15 = bitcast i8* %14 to %class.TIntermNode***
  %16 = load %class.TIntermNode**, %class.TIntermNode*** %15, align 8
  %17 = icmp eq %class.TIntermNode** %13, %16
  %18 = ptrtoint %class.TIntermNode** %16 to i64
  br i1 %17, label %24, label %19

19:                                               ; preds = %6
  %20 = bitcast %class.TIntermNode** %13 to i64*
  store i64 %4, i64* %20, align 8
  %21 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %13, i64 1
  %22 = ptrtoint %class.TIntermNode** %21 to i64
  %23 = bitcast i8* %11 to i64*
  store i64 %22, i64* %23, align 8
  br label %78

24:                                               ; preds = %6
  %25 = ptrtoint %class.TIntermNode** %13 to i64
  %26 = bitcast i8* %11 to i64*
  %27 = bitcast i8* %10 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = icmp ugt i64 %31, 2305843009213693951
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = bitcast i8* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #13
  unreachable

35:                                               ; preds = %24
  %36 = bitcast i8* %14 to i64*
  %37 = sub i64 %18, %28
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %38, 1152921504606846975
  br i1 %39, label %40, label %45

40:                                               ; preds = %35
  %41 = ashr exact i64 %37, 2
  %42 = icmp ult i64 %41, %31
  %43 = select i1 %42, i64 %31, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40, %35
  %46 = phi i64 [ %43, %40 ], [ 2305843009213693951, %35 ]
  %47 = getelementptr inbounds i8, i8* %8, i64 120
  %48 = bitcast i8* %47 to %class.TPoolAllocator**
  %49 = load %class.TPoolAllocator*, %class.TPoolAllocator** %48, align 8
  %50 = shl i64 %46, 3
  %51 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %49, i64 %50) #10
  %52 = bitcast i8* %51 to %class.TIntermNode**
  br label %53

53:                                               ; preds = %45, %40
  %54 = phi i64 [ %46, %45 ], [ 0, %40 ]
  %55 = phi %class.TIntermNode** [ %52, %45 ], [ null, %40 ]
  %56 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %55, i64 %30
  %57 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %55, i64 %54
  %58 = ptrtoint %class.TIntermNode** %57 to i64
  %59 = bitcast %class.TIntermNode** %56 to i64*
  store i64 %4, i64* %59, align 8
  %60 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %56, i64 1
  %61 = ptrtoint %class.TIntermNode** %60 to i64
  %62 = bitcast i8* %10 to %class.TIntermNode***
  %63 = load %class.TIntermNode**, %class.TIntermNode*** %62, align 8
  %64 = load %class.TIntermNode**, %class.TIntermNode*** %12, align 8
  %65 = icmp eq %class.TIntermNode** %64, %63
  br i1 %65, label %75, label %66

66:                                               ; preds = %53, %66
  %67 = phi %class.TIntermNode** [ %69, %66 ], [ %56, %53 ]
  %68 = phi %class.TIntermNode** [ %70, %66 ], [ %64, %53 ]
  %69 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %67, i64 -1
  %70 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %68, i64 -1
  %71 = bitcast %class.TIntermNode** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %class.TIntermNode** %69 to i64*
  store i64 %72, i64* %73, align 8
  %74 = icmp eq %class.TIntermNode** %70, %63
  br i1 %74, label %75, label %66

75:                                               ; preds = %66, %53
  %76 = phi %class.TIntermNode** [ %56, %53 ], [ %69, %66 ]
  %77 = ptrtoint %class.TIntermNode** %76 to i64
  store i64 %77, i64* %27, align 8
  store i64 %61, i64* %26, align 8
  store i64 %58, i64* %36, align 8
  br label %78

78:                                               ; preds = %19, %75
  %79 = getelementptr inbounds i8, i8* %8, i64 8
  %80 = bitcast %struct.TSourceLoc* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 4 %80, i64 16, i1 false) #11
  br label %81

81:                                               ; preds = %3, %78
  %82 = phi %class.TIntermAggregate* [ %9, %78 ], [ null, %3 ]
  ret %class.TIntermAggregate* %82
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermNode* @_ZN13TIntermediate12addSelectionEP12TIntermTyped15TIntermNodePairRK10TSourceLoc(%class.TIntermediate* nocapture readnone, %class.TIntermTyped*, %class.TIntermNode*, %class.TIntermNode*, %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = alloca [26 x i8], align 2
  %7 = alloca [20 x i8], align 4
  %8 = bitcast %class.TIntermTyped* %1 to %class.TIntermTyped* (%class.TIntermTyped*)***
  %9 = load %class.TIntermTyped* (%class.TIntermTyped*)**, %class.TIntermTyped* (%class.TIntermTyped*)*** %8, align 8
  %10 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermTyped*)*, %class.TIntermTyped* (%class.TIntermTyped*)** %9, i64 1
  %11 = load %class.TIntermTyped* (%class.TIntermTyped*)*, %class.TIntermTyped* (%class.TIntermTyped*)** %10, align 8
  %12 = tail call %class.TIntermTyped* %11(%class.TIntermTyped* %1) #10
  %13 = icmp eq %class.TIntermTyped* %12, null
  br i1 %13, label %54, label %14

14:                                               ; preds = %5
  %15 = load %class.TIntermTyped* (%class.TIntermTyped*)**, %class.TIntermTyped* (%class.TIntermTyped*)*** %8, align 8
  %16 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermTyped*)*, %class.TIntermTyped* (%class.TIntermTyped*)** %15, i64 1
  %17 = load %class.TIntermTyped* (%class.TIntermTyped*)*, %class.TIntermTyped* (%class.TIntermTyped*)** %16, align 8
  %18 = tail call %class.TIntermTyped* %17(%class.TIntermTyped* %1) #10
  %19 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %20 = bitcast %class.TIntermTyped* %18 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %21 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %20, align 8
  %22 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %21, i64 2
  %23 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %22, align 8
  %24 = tail call %class.TIntermConstantUnion* %23(%class.TIntermNode* %19) #10
  %25 = icmp eq %class.TIntermConstantUnion* %24, null
  br i1 %25, label %54, label %26

26:                                               ; preds = %14
  %27 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0
  %28 = bitcast %class.TIntermTyped* %1 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %29 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %28, align 8
  %30 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %29, i64 2
  %31 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %30, align 8
  %32 = tail call %class.TIntermConstantUnion* %31(%class.TIntermNode* %27) #10
  %33 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %32, i64 0, i32 1
  %34 = load %class.ConstantUnion*, %class.ConstantUnion** %33, align 8
  %35 = icmp eq %class.ConstantUnion* %34, null
  br i1 %35, label %47, label %36

36:                                               ; preds = %26
  %37 = bitcast %class.ConstantUnion* %34 to i8*
  %38 = load i8, i8* %37, align 4, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %36
  %41 = icmp eq %class.TIntermNode* %2, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = tail call %class.TIntermAggregate* @_ZN13TIntermediate20setAggregateOperatorEP11TIntermNode9TOperatorRK10TSourceLoc(%class.TIntermediate* undef, %class.TIntermNode* nonnull %2, i32 1, %struct.TSourceLoc* dereferenceable(16) undef) #12
  br label %44

44:                                               ; preds = %40, %42
  %45 = phi %class.TIntermAggregate* [ %43, %42 ], [ null, %40 ]
  %46 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %45, i64 0, i32 0, i32 0, i32 0
  br label %80

47:                                               ; preds = %36, %26
  %48 = icmp eq %class.TIntermNode* %3, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = tail call %class.TIntermAggregate* @_ZN13TIntermediate20setAggregateOperatorEP11TIntermNode9TOperatorRK10TSourceLoc(%class.TIntermediate* undef, %class.TIntermNode* nonnull %3, i32 1, %struct.TSourceLoc* dereferenceable(16) undef) #12
  br label %51

51:                                               ; preds = %47, %49
  %52 = phi %class.TIntermAggregate* [ %50, %49 ], [ null, %47 ]
  %53 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %52, i64 0, i32 0, i32 0, i32 0
  br label %80

54:                                               ; preds = %14, %5
  %55 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %56 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %55, i64 112) #10
  %57 = getelementptr inbounds [26 x i8], [26 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %57)
  %58 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %58)
  %59 = getelementptr inbounds [26 x i8], [26 x i8]* %6, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %59, i8 0, i64 24, i1 false)
  %60 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %60, i8 0, i64 16, i1 false)
  %61 = bitcast i8* %56 to i32 (...)***
  %62 = getelementptr inbounds i8, i8* %56, i64 8
  %63 = getelementptr inbounds i8, i8* %56, i64 27
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 19, i1 false)
  store i8 1, i8* %63, align 1
  %64 = getelementptr inbounds i8, i8* %56, i64 28
  store i8 1, i8* %64, align 4
  %65 = getelementptr inbounds i8, i8* %56, i64 29
  store i8 0, i8* %65, align 1
  %66 = getelementptr inbounds i8, i8* %56, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %66, i8* nonnull align 2 %57, i64 26, i1 false) #11
  %67 = getelementptr inbounds i8, i8* %56, i64 56
  %68 = bitcast i8* %67 to i64*
  store i64 4294967295, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %56, i64 64
  %70 = bitcast i8* %69 to i32*
  store i32 0, i32* %70, align 8
  %71 = getelementptr inbounds i8, i8* %56, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* nonnull align 4 %58, i64 20, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %57)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %58)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV16TIntermSelection, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %72 = getelementptr inbounds i8, i8* %56, i64 88
  %73 = bitcast i8* %72 to %class.TIntermTyped**
  store %class.TIntermTyped* %1, %class.TIntermTyped** %73, align 8
  %74 = getelementptr inbounds i8, i8* %56, i64 96
  %75 = bitcast i8* %74 to %class.TIntermNode**
  store %class.TIntermNode* %2, %class.TIntermNode** %75, align 8
  %76 = getelementptr inbounds i8, i8* %56, i64 104
  %77 = bitcast i8* %76 to %class.TIntermNode**
  store %class.TIntermNode* %3, %class.TIntermNode** %77, align 8
  %78 = bitcast i8* %56 to %class.TIntermNode*
  %79 = bitcast %struct.TSourceLoc* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 4 %79, i64 16, i1 false) #11
  br label %80

80:                                               ; preds = %54, %51, %44
  %81 = phi %class.TIntermNode* [ %46, %44 ], [ %53, %51 ], [ %78, %54 ]
  ret %class.TIntermNode* %81
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermTyped* @_ZN13TIntermediate8addCommaEP12TIntermTypedS1_RK10TSourceLoc(%class.TIntermediate* nocapture readnone, %class.TIntermTyped*, %class.TIntermTyped*, %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 2
  %6 = load i8, i8* %5, align 2
  %7 = icmp eq i8 %6, 2
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 2
  %10 = load i8, i8* %9, align 2
  %11 = icmp eq i8 %10, 2
  br i1 %11, label %30, label %12

12:                                               ; preds = %8, %4
  %13 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0
  %14 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0
  %15 = tail call %class.TIntermAggregate* @_ZN13TIntermediate13growAggregateEP11TIntermNodeS1_RK10TSourceLoc(%class.TIntermediate* undef, %class.TIntermNode* %13, %class.TIntermNode* %14, %struct.TSourceLoc* dereferenceable(16) %3) #12
  %16 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %15, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %15, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %class.TIntermAggregate* %15 to %class.TIntermAggregate* (%class.TIntermNode*)***
  %19 = load %class.TIntermAggregate* (%class.TIntermNode*)**, %class.TIntermAggregate* (%class.TIntermNode*)*** %18, align 8
  %20 = getelementptr inbounds %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %19, i64 3
  %21 = load %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %20, align 8
  %22 = tail call %class.TIntermAggregate* %21(%class.TIntermNode* %17) #10
  %23 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %22, i64 0, i32 0, i32 1
  store i32 28, i32* %23, align 8
  %24 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1
  %25 = bitcast %class.TIntermAggregate* %15 to void (%class.TIntermTyped*, %class.TType*)***
  %26 = load void (%class.TIntermTyped*, %class.TType*)**, void (%class.TIntermTyped*, %class.TType*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.TIntermTyped*, %class.TType*)*, void (%class.TIntermTyped*, %class.TType*)** %26, i64 14
  %28 = load void (%class.TIntermTyped*, %class.TType*)*, void (%class.TIntermTyped*, %class.TType*)** %27, align 8
  tail call void %28(%class.TIntermTyped* %16, %class.TType* dereferenceable(64) %24) #10
  %29 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %15, i64 0, i32 0, i32 0, i32 1, i32 2
  store i8 0, i8* %29, align 2
  br label %30

30:                                               ; preds = %8, %12
  %31 = phi %class.TIntermTyped* [ %16, %12 ], [ %2, %8 ]
  ret %class.TIntermTyped* %31
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermTyped* @_ZN13TIntermediate12addSelectionEP12TIntermTypedS1_S1_RK10TSourceLoc(%class.TIntermediate* nocapture readnone, %class.TIntermTyped*, %class.TIntermTyped*, %class.TIntermTyped*, %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1
  %7 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %3, i64 0, i32 1
  %8 = tail call zeroext i1 @_ZNK5TTypeeqERKS_(%class.TType* %6, %class.TType* dereferenceable(64) %7) #10
  br i1 %8, label %9, label %64

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0
  %11 = bitcast %class.TIntermTyped* %1 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %12 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %11, align 8
  %13 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %12, i64 2
  %14 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %13, align 8
  %15 = tail call %class.TIntermConstantUnion* %14(%class.TIntermNode* %10) #10
  %16 = icmp eq %class.TIntermConstantUnion* %15, null
  br i1 %16, label %46, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0
  %19 = bitcast %class.TIntermTyped* %2 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %20 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %19, align 8
  %21 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %20, i64 2
  %22 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %21, align 8
  %23 = tail call %class.TIntermConstantUnion* %22(%class.TIntermNode* %18) #10
  %24 = icmp eq %class.TIntermConstantUnion* %23, null
  br i1 %24, label %46, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %3, i64 0, i32 0
  %27 = bitcast %class.TIntermTyped* %3 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %28 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %27, align 8
  %29 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %28, i64 2
  %30 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %29, align 8
  %31 = tail call %class.TIntermConstantUnion* %30(%class.TIntermNode* %26) #10
  %32 = icmp eq %class.TIntermConstantUnion* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %25
  %34 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %11, align 8
  %35 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %34, i64 2
  %36 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %35, align 8
  %37 = tail call %class.TIntermConstantUnion* %36(%class.TIntermNode* %10) #10
  %38 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %37, i64 0, i32 1
  %39 = load %class.ConstantUnion*, %class.ConstantUnion** %38, align 8
  %40 = icmp eq %class.ConstantUnion* %39, null
  br i1 %40, label %64, label %41

41:                                               ; preds = %33
  %42 = bitcast %class.ConstantUnion* %39 to i8*
  %43 = load i8, i8* %42, align 4, !range !2
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %44, %class.TIntermTyped* %3, %class.TIntermTyped* %2
  ret %class.TIntermTyped* %45

46:                                               ; preds = %25, %17, %9
  %47 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %48 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %47, i64 112) #10
  %49 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0
  %50 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %3, i64 0, i32 0
  %51 = bitcast i8* %48 to i32 (...)***
  %52 = getelementptr inbounds i8, i8* %48, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV12TIntermTyped, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %53 = getelementptr inbounds i8, i8* %48, i64 24
  %54 = getelementptr inbounds %class.TType, %class.TType* %6, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 64, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV16TIntermSelection, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %55 = getelementptr inbounds i8, i8* %48, i64 88
  %56 = bitcast i8* %55 to %class.TIntermTyped**
  store %class.TIntermTyped* %1, %class.TIntermTyped** %56, align 8
  %57 = getelementptr inbounds i8, i8* %48, i64 96
  %58 = bitcast i8* %57 to %class.TIntermNode**
  store %class.TIntermNode* %49, %class.TIntermNode** %58, align 8
  %59 = getelementptr inbounds i8, i8* %48, i64 104
  %60 = bitcast i8* %59 to %class.TIntermNode**
  store %class.TIntermNode* %50, %class.TIntermNode** %60, align 8
  %61 = bitcast i8* %48 to %class.TIntermTyped*
  %62 = getelementptr inbounds i8, i8* %48, i64 26
  store i8 0, i8* %62, align 2
  %63 = bitcast %struct.TSourceLoc* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 4 %63, i64 16, i1 false) #11
  br label %64

64:                                               ; preds = %5, %33, %46
  %65 = phi %class.TIntermTyped* [ %61, %46 ], [ null, %5 ], [ %3, %33 ]
  ret %class.TIntermTyped* %65
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermSwitch* @_ZN13TIntermediate9addSwitchEP12TIntermTypedP16TIntermAggregateRK10TSourceLoc(%class.TIntermediate* nocapture readnone, %class.TIntermTyped*, %class.TIntermAggregate*, %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %6 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %5, i64 40) #10
  %7 = bitcast i8* %6 to %class.TIntermSwitch*
  %8 = bitcast i8* %6 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV13TIntermSwitch, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 24
  %11 = bitcast i8* %10 to %class.TIntermTyped**
  store %class.TIntermTyped* %1, %class.TIntermTyped** %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 32
  %13 = bitcast i8* %12 to %class.TIntermAggregate**
  store %class.TIntermAggregate* %2, %class.TIntermAggregate** %13, align 8
  %14 = bitcast %struct.TSourceLoc* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %14, i64 16, i1 false) #11
  ret %class.TIntermSwitch* %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermCase* @_ZN13TIntermediate7addCaseEP12TIntermTypedRK10TSourceLoc(%class.TIntermediate* nocapture readnone, %class.TIntermTyped*, %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %5 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %4, i64 32) #10
  %6 = bitcast i8* %5 to %class.TIntermCase*
  %7 = bitcast i8* %5 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV11TIntermCase, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 24
  %10 = bitcast i8* %9 to %class.TIntermTyped**
  store %class.TIntermTyped* %1, %class.TIntermTyped** %10, align 8
  %11 = bitcast %struct.TSourceLoc* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 4 %11, i64 16, i1 false) #11
  ret %class.TIntermCase* %6
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermConstantUnion* @_ZN13TIntermediate16addConstantUnionEP13ConstantUnionRK5TTypeRK10TSourceLoc(%class.TIntermediate* nocapture readnone, %class.ConstantUnion*, %class.TType* nocapture readonly dereferenceable(64), %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %6 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %5, i64 96) #10
  %7 = bitcast i8* %6 to %class.TIntermConstantUnion*
  %8 = bitcast i8* %6 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV12TIntermTyped, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 24
  %11 = getelementptr inbounds %class.TType, %class.TType* %2, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 64, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV20TIntermConstantUnion, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 88
  %13 = bitcast i8* %12 to %class.ConstantUnion**
  store %class.ConstantUnion* %1, %class.ConstantUnion** %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 26
  store i8 2, i8* %14, align 2
  %15 = bitcast %struct.TSourceLoc* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %15, i64 16, i1 false) #11
  ret %class.TIntermConstantUnion* %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermTyped* @_ZN13TIntermediate10addSwizzleER13TVectorFieldsRK10TSourceLoc(%class.TIntermediate* nocapture readnone, %struct.TVectorFields* nocapture readonly dereferenceable(20), %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = alloca [26 x i8], align 2
  %5 = alloca [20 x i8], align 4
  %6 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %7 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %6, i64 184) #10
  %8 = bitcast i8* %7 to %class.TIntermAggregate*
  tail call void @_ZN16TIntermAggregateC2E9TOperator(%class.TIntermAggregate* %8, i32 1) #12
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast %struct.TSourceLoc* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %10, i64 16, i1 false) #11
  %11 = getelementptr inbounds i8, i8* %7, i64 96
  %12 = getelementptr inbounds %struct.TVectorFields, %struct.TVectorFields* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %30

15:                                               ; preds = %3
  %16 = getelementptr inbounds [26 x i8], [26 x i8]* %4, i64 0, i64 0
  %17 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 0
  %18 = getelementptr inbounds [26 x i8], [26 x i8]* %4, i64 0, i64 2
  %19 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 4
  %20 = getelementptr inbounds i8, i8* %7, i64 104
  %21 = bitcast i8* %20 to %class.TIntermNode***
  %22 = getelementptr inbounds i8, i8* %7, i64 112
  %23 = bitcast i8* %22 to %class.TIntermNode***
  %24 = bitcast i8* %20 to i64*
  %25 = bitcast i8* %11 to i64*
  %26 = bitcast i8* %22 to i64*
  %27 = getelementptr inbounds i8, i8* %7, i64 120
  %28 = bitcast i8* %27 to %class.TPoolAllocator**
  %29 = bitcast i8* %11 to %class.TIntermNode***
  br label %32

30:                                               ; preds = %117, %3
  %31 = bitcast i8* %7 to %class.TIntermTyped*
  ret %class.TIntermTyped* %31

32:                                               ; preds = %117, %15
  %33 = phi i64 [ 0, %15 ], [ %118, %117 ]
  %34 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %35 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %34, i64 8) #10
  %36 = bitcast i8* %35 to i32*
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %35, i64 4
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds %struct.TVectorFields, %struct.TVectorFields* %1, i64 0, i32 0, i64 %33
  %39 = load i32, i32* %38, align 4
  %40 = bitcast i8* %35 to i32*
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %35, i64 4
  store i8 2, i8* %41, align 4
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %16)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %17)
  call void @llvm.memset.p0i8.i64(i8* align 2 %18, i8 0, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 16, i1 false)
  %42 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %43 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %42, i64 96) #10
  %44 = bitcast i8* %43 to i32 (...)***
  %45 = getelementptr inbounds i8, i8* %43, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #11
  %46 = getelementptr inbounds i8, i8* %43, i64 24
  store i8 2, i8* %46, align 8
  %47 = getelementptr inbounds i8, i8* %43, i64 25
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds i8, i8* %43, i64 26
  %49 = getelementptr inbounds i8, i8* %43, i64 27
  store i8 1, i8* %49, align 1
  %50 = getelementptr inbounds i8, i8* %43, i64 28
  store i8 1, i8* %50, align 4
  %51 = getelementptr inbounds i8, i8* %43, i64 29
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds i8, i8* %43, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %52, i8* nonnull align 2 %16, i64 26, i1 false)
  %53 = getelementptr inbounds i8, i8* %43, i64 56
  %54 = bitcast i8* %53 to i64*
  store i64 4294967295, i64* %54, align 8
  %55 = getelementptr inbounds i8, i8* %43, i64 64
  %56 = bitcast i8* %55 to i32*
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds i8, i8* %43, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* nonnull align 4 %17, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV20TIntermConstantUnion, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %58 = getelementptr inbounds i8, i8* %43, i64 88
  %59 = bitcast i8* %58 to i8**
  store i8* %35, i8** %59, align 8
  store i8 2, i8* %48, align 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 4 %10, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %17)
  %60 = ptrtoint i8* %43 to i64
  %61 = load %class.TIntermNode**, %class.TIntermNode*** %21, align 8
  %62 = load %class.TIntermNode**, %class.TIntermNode*** %23, align 8
  %63 = icmp ult %class.TIntermNode** %61, %62
  %64 = ptrtoint %class.TIntermNode** %62 to i64
  br i1 %63, label %65, label %69

65:                                               ; preds = %32
  %66 = bitcast %class.TIntermNode** %61 to i64*
  store i64 %60, i64* %66, align 8
  %67 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %61, i64 1
  %68 = ptrtoint %class.TIntermNode** %67 to i64
  store i64 %68, i64* %24, align 8
  br label %117

69:                                               ; preds = %32
  %70 = ptrtoint %class.TIntermNode** %61 to i64
  %71 = load i64, i64* %25, align 8
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = add nsw i64 %73, 1
  %75 = icmp ugt i64 %74, 2305843009213693951
  br i1 %75, label %76, label %78

76:                                               ; preds = %69
  %77 = bitcast i8* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %77) #13
  unreachable

78:                                               ; preds = %69
  %79 = sub i64 %64, %71
  %80 = ashr exact i64 %79, 3
  %81 = icmp ult i64 %80, 1152921504606846975
  br i1 %81, label %82, label %87

82:                                               ; preds = %78
  %83 = ashr exact i64 %79, 2
  %84 = icmp ult i64 %83, %74
  %85 = select i1 %84, i64 %74, i64 %83
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %82, %78
  %88 = phi i64 [ %85, %82 ], [ 2305843009213693951, %78 ]
  %89 = load %class.TPoolAllocator*, %class.TPoolAllocator** %28, align 8
  %90 = shl i64 %88, 3
  %91 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %89, i64 %90) #10
  %92 = bitcast i8* %91 to %class.TIntermNode**
  br label %93

93:                                               ; preds = %87, %82
  %94 = phi i64 [ %88, %87 ], [ 0, %82 ]
  %95 = phi %class.TIntermNode** [ %92, %87 ], [ null, %82 ]
  %96 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %95, i64 %73
  %97 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %95, i64 %94
  %98 = ptrtoint %class.TIntermNode** %97 to i64
  %99 = bitcast %class.TIntermNode** %96 to i64*
  store i64 %60, i64* %99, align 8
  %100 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %96, i64 1
  %101 = ptrtoint %class.TIntermNode** %100 to i64
  %102 = load %class.TIntermNode**, %class.TIntermNode*** %29, align 8
  %103 = load %class.TIntermNode**, %class.TIntermNode*** %21, align 8
  %104 = icmp eq %class.TIntermNode** %103, %102
  br i1 %104, label %114, label %105

105:                                              ; preds = %93, %105
  %106 = phi %class.TIntermNode** [ %108, %105 ], [ %96, %93 ]
  %107 = phi %class.TIntermNode** [ %109, %105 ], [ %103, %93 ]
  %108 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %106, i64 -1
  %109 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %107, i64 -1
  %110 = bitcast %class.TIntermNode** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %class.TIntermNode** %108 to i64*
  store i64 %111, i64* %112, align 8
  %113 = icmp eq %class.TIntermNode** %109, %102
  br i1 %113, label %114, label %105

114:                                              ; preds = %105, %93
  %115 = phi %class.TIntermNode** [ %96, %93 ], [ %108, %105 ]
  %116 = ptrtoint %class.TIntermNode** %115 to i64
  store i64 %116, i64* %25, align 8
  store i64 %101, i64* %24, align 8
  store i64 %98, i64* %26, align 8
  br label %117

117:                                              ; preds = %65, %114
  %118 = add nuw nsw i64 %33, 1
  %119 = load i32, i32* %12, align 4
  %120 = sext i32 %119 to i64
  %121 = icmp slt i64 %118, %120
  br i1 %121, label %32, label %30
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermAggregateC2E9TOperator(%class.TIntermAggregate*, i32) unnamed_addr #2 comdat align 2 {
  %3 = alloca [26 x i8], align 2
  %4 = alloca [20 x i8], align 4
  %5 = getelementptr inbounds [26 x i8], [26 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %5)
  %6 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6)
  %7 = getelementptr inbounds [26 x i8], [26 x i8]* %3, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %7, i8 0, i64 24, i1 false)
  %8 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 16, i1 false)
  %9 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = bitcast i32* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  %12 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  store i8 0, i8* %14, align 2
  %15 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 3
  store i8 1, i8* %15, align 1
  %16 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 4
  store i8 1, i8* %16, align 4
  %17 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 5
  store i8 0, i8* %17, align 1
  %18 = bitcast %class.TIntermAggregate* %0 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* nonnull align 2 %5, i64 26, i1 false) #11
  %20 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 10
  %21 = bitcast %struct.TLayoutQualifier* %20 to i64*
  store i64 4294967295, i64* %21, align 8
  %22 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 0, i32 1, i32 10, i32 2
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %18, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* nonnull align 4 %6, i64 20, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6)
  %24 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 0, i32 1
  store i32 %1, i32* %24, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV16TIntermAggregate, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %25 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 2
  %26 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %27 = bitcast %class.TVector.19* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #11
  %28 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  store %class.TPoolAllocator* %28, %class.TPoolAllocator** %26, align 8
  %29 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 3
  %30 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %31 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  store %class.TPoolAllocator* %31, %class.TPoolAllocator** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #11
  %33 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 4
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %0, i64 0, i32 8, i32 0
  %35 = bitcast i32* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermNode* @_ZN13TIntermediate7addLoopE9TLoopTypeP11TIntermNodeP12TIntermTypedS4_S2_RK10TSourceLoc(%class.TIntermediate* nocapture readnone, i32, %class.TIntermNode*, %class.TIntermTyped*, %class.TIntermTyped*, %class.TIntermNode*, %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %8 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %9 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %8, i64 72) #10
  %10 = bitcast i8* %9 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV11TIntermLoop, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 24
  %13 = bitcast i8* %12 to i32*
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 32
  %15 = bitcast i8* %14 to %class.TIntermNode**
  store %class.TIntermNode* %2, %class.TIntermNode** %15, align 8
  %16 = getelementptr inbounds i8, i8* %9, i64 40
  %17 = bitcast i8* %16 to %class.TIntermTyped**
  store %class.TIntermTyped* %3, %class.TIntermTyped** %17, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 48
  %19 = bitcast i8* %18 to %class.TIntermTyped**
  store %class.TIntermTyped* %4, %class.TIntermTyped** %19, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 56
  %21 = bitcast i8* %20 to %class.TIntermNode**
  store %class.TIntermNode* %5, %class.TIntermNode** %21, align 8
  %22 = getelementptr inbounds i8, i8* %9, i64 64
  store i8 0, i8* %22, align 8
  %23 = bitcast i8* %9 to %class.TIntermNode*
  %24 = bitcast %struct.TSourceLoc* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 4 %24, i64 16, i1 false) #11
  ret %class.TIntermNode* %23
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermBranch* @_ZN13TIntermediate9addBranchE9TOperatorRK10TSourceLoc(%class.TIntermediate* nocapture readnone, i32, %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %5 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %4, i64 40) #10
  %6 = bitcast i8* %5 to %class.TIntermBranch*
  %7 = bitcast i8* %5 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV13TIntermBranch, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 24
  %10 = bitcast i8* %9 to i32*
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 32
  %12 = bitcast i8* %11 to %class.TIntermTyped**
  store %class.TIntermTyped* null, %class.TIntermTyped** %12, align 8
  %13 = bitcast %struct.TSourceLoc* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 4 %13, i64 16, i1 false) #11
  ret %class.TIntermBranch* %6
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermBranch* @_ZN13TIntermediate9addBranchE9TOperatorP12TIntermTypedRK10TSourceLoc(%class.TIntermediate* nocapture readnone, i32, %class.TIntermTyped*, %struct.TSourceLoc* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %6 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %5, i64 40) #10
  %7 = bitcast i8* %6 to %class.TIntermBranch*
  %8 = bitcast i8* %6 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV13TIntermBranch, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 24
  %11 = bitcast i8* %10 to i32*
  store i32 %1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 32
  %13 = bitcast i8* %12 to %class.TIntermTyped**
  store %class.TIntermTyped* %2, %class.TIntermTyped** %13, align 8
  %14 = bitcast %struct.TSourceLoc* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %14, i64 16, i1 false) #11
  ret %class.TIntermBranch* %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN13TIntermediate11postProcessEP11TIntermNode(%class.TIntermediate* nocapture readnone, %class.TIntermNode*) local_unnamed_addr #2 align 2 {
  %3 = icmp eq %class.TIntermNode* %1, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %2
  %5 = bitcast %class.TIntermNode* %1 to %class.TIntermAggregate* (%class.TIntermNode*)***
  %6 = load %class.TIntermAggregate* (%class.TIntermNode*)**, %class.TIntermAggregate* (%class.TIntermNode*)*** %5, align 8
  %7 = getelementptr inbounds %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %6, i64 3
  %8 = load %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %7, align 8
  %9 = tail call %class.TIntermAggregate* %8(%class.TIntermNode* nonnull %1) #10
  %10 = icmp eq %class.TIntermAggregate* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %9, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  store i32 1, i32* %12, align 8
  br label %16

16:                                               ; preds = %11, %15, %4, %2
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermTyped* @_ZN12TIntermTyped15CreateIndexNodeEi(i32) local_unnamed_addr #2 align 2 {
  %2 = alloca [26 x i8], align 2
  %3 = alloca [20 x i8], align 4
  %4 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %5 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %4, i64 8) #10
  %6 = bitcast i8* %5 to i32*
  store i32 %0, i32* %6, align 4
  %7 = getelementptr inbounds i8, i8* %5, i64 4
  store i8 2, i8* %7, align 4
  %8 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %8)
  %9 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %9)
  %10 = bitcast [26 x i8]* %2 to i16*
  store i16 -21846, i16* %10, align 2
  %11 = bitcast [20 x i8]* %3 to i32*
  store i32 -1431655766, i32* %11, align 4
  %12 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %12, i8 0, i64 24, i1 false)
  %13 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 16, i1 false)
  %14 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %15 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %14, i64 96) #10
  %16 = bitcast i8* %15 to i32 (...)***
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #11
  %18 = getelementptr inbounds i8, i8* %15, i64 24
  store i8 2, i8* %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 25
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds i8, i8* %15, i64 26
  %21 = getelementptr inbounds i8, i8* %15, i64 27
  store i8 1, i8* %21, align 1
  %22 = getelementptr inbounds i8, i8* %15, i64 28
  store i8 1, i8* %22, align 4
  %23 = getelementptr inbounds i8, i8* %15, i64 29
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds i8, i8* %15, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %24, i8* nonnull align 2 %8, i64 26, i1 false)
  %25 = getelementptr inbounds i8, i8* %15, i64 56
  %26 = bitcast i8* %25 to i64*
  store i64 4294967295, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %15, i64 64
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %15, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* nonnull align 4 %9, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV20TIntermConstantUnion, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %30 = getelementptr inbounds i8, i8* %15, i64 88
  %31 = bitcast i8* %30 to i8**
  store i8* %5, i8** %31, align 8
  store i8 2, i8* %20, align 2
  %32 = bitcast i8* %15 to %class.TIntermTyped*
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %9)
  ret %class.TIntermTyped* %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK15TIntermOperator13modifiesStateEv(%class.TIntermOperator* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TIntermOperator, %class.TIntermOperator* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %4 [
    i32 12, label %5
    i32 13, label %5
    i32 14, label %5
    i32 15, label %5
    i32 144, label %5
    i32 146, label %5
    i32 147, label %5
    i32 148, label %5
    i32 149, label %5
    i32 150, label %5
    i32 151, label %5
    i32 152, label %5
    i32 153, label %5
    i32 154, label %5
    i32 155, label %5
    i32 156, label %5
    i32 157, label %5
    i32 158, label %5
    i32 159, label %5
  ]

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %4
  %6 = phi i1 [ false, %4 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK15TIntermOperator13isConstructorEv(%class.TIntermOperator* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TIntermOperator, %class.TIntermOperator* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -118
  %5 = icmp ult i32 %4, 26
  ret i1 %5
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define internal fastcc zeroext i1 @_ZL22ValidateMultiplication9TOperatorRK5TTypeS2_(i32, %class.TType* nocapture readonly dereferenceable(64), %class.TType* nocapture readonly dereferenceable(64)) unnamed_addr #0 {
  switch i32 %0, label %56 [
    i32 18, label %4
    i32 148, label %4
    i32 33, label %57
    i32 150, label %57
    i32 34, label %16
    i32 149, label %22
    i32 35, label %32
    i32 36, label %57
    i32 151, label %57
    i32 111, label %38
    i32 152, label %44
  ]

4:                                                ; preds = %3, %3
  %5 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 3
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds %class.TType, %class.TType* %2, i64 0, i32 3
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %6, %8
  br i1 %9, label %10, label %57

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 4
  %12 = load i8, i8* %11, align 4
  %13 = getelementptr inbounds %class.TType, %class.TType* %2, i64 0, i32 4
  %14 = load i8, i8* %13, align 4
  %15 = icmp eq i8 %12, %14
  br label %57

16:                                               ; preds = %3
  %17 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 3
  %18 = load i8, i8* %17, align 1
  %19 = getelementptr inbounds %class.TType, %class.TType* %2, i64 0, i32 4
  %20 = load i8, i8* %19, align 4
  %21 = icmp eq i8 %18, %20
  br label %57

22:                                               ; preds = %3
  %23 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 3
  %24 = load i8, i8* %23, align 1
  %25 = getelementptr inbounds %class.TType, %class.TType* %2, i64 0, i32 4
  %26 = load i8, i8* %25, align 4
  %27 = icmp eq i8 %24, %26
  br i1 %27, label %28, label %57

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.TType, %class.TType* %2, i64 0, i32 3
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %24, %30
  br label %57

32:                                               ; preds = %3
  %33 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 3
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds %class.TType, %class.TType* %2, i64 0, i32 3
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %34, %36
  br label %57

38:                                               ; preds = %3
  %39 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 3
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds %class.TType, %class.TType* %2, i64 0, i32 4
  %42 = load i8, i8* %41, align 4
  %43 = icmp eq i8 %40, %42
  br label %57

44:                                               ; preds = %3
  %45 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 3
  %46 = load i8, i8* %45, align 1
  %47 = getelementptr inbounds %class.TType, %class.TType* %2, i64 0, i32 3
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %46, %48
  br i1 %49, label %50, label %57

50:                                               ; preds = %44
  %51 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 4
  %52 = load i8, i8* %51, align 4
  %53 = getelementptr inbounds %class.TType, %class.TType* %2, i64 0, i32 4
  %54 = load i8, i8* %53, align 4
  %55 = icmp eq i8 %52, %54
  br label %57

56:                                               ; preds = %3
  br label %57

57:                                               ; preds = %44, %50, %3, %3, %22, %28, %3, %3, %4, %10, %56, %38, %32, %16
  %58 = phi i1 [ false, %56 ], [ %43, %38 ], [ %37, %32 ], [ %21, %16 ], [ false, %4 ], [ %15, %10 ], [ true, %3 ], [ true, %3 ], [ false, %22 ], [ %31, %28 ], [ true, %3 ], [ true, %3 ], [ false, %44 ], [ %55, %50 ]
  ret i1 %58
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_Z13CompareStructRK5TTypeP13ConstantUnionS3_(%class.TType* nocapture readonly dereferenceable(64), %class.ConstantUnion*, %class.ConstantUnion*) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 11
  %5 = load %class.TStructure*, %class.TStructure** %4, align 8
  %6 = getelementptr inbounds %class.TStructure, %class.TStructure* %5, i64 0, i32 0, i32 2
  %7 = load %class.TVector*, %class.TVector** %6, align 8
  %8 = getelementptr inbounds %class.TVector, %class.TVector* %7, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast %class.TField*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.TVector* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %75, label %16

16:                                               ; preds = %3
  %17 = inttoptr i64 %12 to %class.TField**
  %18 = getelementptr inbounds %class.TVector, %class.TVector* %7, i64 0, i32 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %73, %16
  %20 = phi %class.TField** [ %17, %16 ], [ %74, %73 ]
  %21 = phi i64 [ 0, %16 ], [ %71, %73 ]
  %22 = phi i32 [ 0, %16 ], [ %70, %73 ]
  %23 = getelementptr inbounds %class.TField*, %class.TField** %20, i64 %21
  %24 = load %class.TField*, %class.TField** %23, align 8
  %25 = getelementptr inbounds %class.TField, %class.TField* %24, i64 0, i32 0
  %26 = load %class.TType*, %class.TType** %25, align 8
  %27 = getelementptr inbounds %class.TType, %class.TType* %26, i64 0, i32 5
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  %30 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %26) #10
  br i1 %29, label %40, label %31

31:                                               ; preds = %19
  %32 = getelementptr inbounds %class.TType, %class.TType* %26, i64 0, i32 6
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %class.TType, %class.TType* %26, i64 0, i32 7
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %33, %35
  %37 = select i1 %36, i32 %35, i32 %33
  %38 = sext i32 %37 to i64
  %39 = mul i64 %30, %38
  br label %40

40:                                               ; preds = %19, %31
  %41 = phi i64 [ %39, %31 ], [ %30, %19 ]
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %69, label %43

43:                                               ; preds = %40, %65
  %44 = phi i64 [ %67, %65 ], [ 0, %40 ]
  %45 = phi i32 [ %66, %65 ], [ %22, %40 ]
  %46 = load %class.TField**, %class.TField*** %18, align 8
  %47 = getelementptr inbounds %class.TField*, %class.TField** %46, i64 %21
  %48 = load %class.TField*, %class.TField** %47, align 8
  %49 = getelementptr inbounds %class.TField, %class.TField* %48, i64 0, i32 0
  %50 = load %class.TType*, %class.TType** %49, align 8
  %51 = getelementptr inbounds %class.TType, %class.TType* %50, i64 0, i32 0
  %52 = load i8, i8* %51, align 8
  %53 = icmp eq i8 %52, 37
  %54 = sext i32 %45 to i64
  br i1 %53, label %55, label %59

55:                                               ; preds = %43
  %56 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 %54
  %57 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 %54
  %58 = tail call zeroext i1 @_Z16CompareStructureRK5TTypeP13ConstantUnionS3_(%class.TType* dereferenceable(64) %50, %class.ConstantUnion* %56, %class.ConstantUnion* %57) #12
  br i1 %58, label %65, label %75

59:                                               ; preds = %43
  %60 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 %54
  %61 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 %54
  %62 = tail call zeroext i1 @_ZNK13ConstantUnioneqERKS_(%class.ConstantUnion* %60, %class.ConstantUnion* dereferenceable(8) %61) #10
  br i1 %62, label %63, label %75

63:                                               ; preds = %59
  %64 = add nsw i32 %45, 1
  br label %65

65:                                               ; preds = %63, %55
  %66 = phi i32 [ %45, %55 ], [ %64, %63 ]
  %67 = add nuw i64 %44, 1
  %68 = icmp eq i64 %67, %41
  br i1 %68, label %69, label %43

69:                                               ; preds = %65, %40
  %70 = phi i32 [ %22, %40 ], [ %66, %65 ]
  %71 = add nuw i64 %21, 1
  %72 = icmp ult i64 %71, %14
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = load %class.TField**, %class.TField*** %18, align 8
  br label %19

75:                                               ; preds = %69, %59, %55, %3
  %76 = phi i1 [ true, %3 ], [ false, %55 ], [ false, %59 ], [ true, %69 ]
  ret i1 %76
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_Z16CompareStructureRK5TTypeP13ConstantUnionS3_(%class.TType* nocapture readonly dereferenceable(64), %class.ConstantUnion*, %class.ConstantUnion*) local_unnamed_addr #2 {
  %4 = alloca %class.TType, align 8
  %5 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %44, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #11
  %10 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 64, i1 false)
  %11 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 5
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 6
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 7
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %42

17:                                               ; preds = %8
  %18 = zext i32 %15 to i64
  br label %23

19:                                               ; preds = %35
  %20 = icmp eq i64 %41, %18
  br i1 %20, label %42, label %21

21:                                               ; preds = %19
  %22 = load i8, i8* %11, align 1, !range !2
  br label %23

23:                                               ; preds = %21, %17
  %24 = phi i8 [ 0, %17 ], [ %22, %21 ]
  %25 = phi i64 [ 0, %17 ], [ %41, %21 ]
  %26 = icmp eq i8 %24, 0
  %27 = call i64 @_ZNK5TType14getElementSizeEv(%class.TType* nonnull %4) #10
  br i1 %26, label %35, label %28

28:                                               ; preds = %23
  %29 = load i32, i32* %12, align 8
  %30 = load i32, i32* %13, align 4
  %31 = icmp slt i32 %29, %30
  %32 = select i1 %31, i32 %30, i32 %29
  %33 = sext i32 %32 to i64
  %34 = mul i64 %27, %33
  br label %35

35:                                               ; preds = %23, %28
  %36 = phi i64 [ %34, %28 ], [ %27, %23 ]
  %37 = mul i64 %36, %25
  %38 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 %37
  %39 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 %37
  %40 = call zeroext i1 @_Z13CompareStructRK5TTypeP13ConstantUnionS3_(%class.TType* nonnull dereferenceable(64) %4, %class.ConstantUnion* %38, %class.ConstantUnion* %39) #12
  %41 = add nuw nsw i64 %25, 1
  br i1 %40, label %19, label %42

42:                                               ; preds = %35, %19, %8
  %43 = phi i1 [ true, %8 ], [ false, %35 ], [ true, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #11
  ret i1 %43

44:                                               ; preds = %3
  %45 = tail call zeroext i1 @_Z13CompareStructRK5TTypeP13ConstantUnionS3_(%class.TType* dereferenceable(64) %0, %class.ConstantUnion* %1, %class.ConstantUnion* %2) #12
  ret i1 %45
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden float @_Z12determinant2ffff(float, float, float, float) local_unnamed_addr #1 {
  %5 = fmul float %0, %3
  %6 = fmul float %1, %2
  %7 = fsub float %5, %6
  ret float %7
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden float @_Z12determinant3fffffffff(float, float, float, float, float, float, float, float, float) local_unnamed_addr #1 {
  %10 = fmul float %1, %8
  %11 = fmul float %2, %7
  %12 = fsub float %10, %11
  %13 = fmul float %12, %3
  %14 = insertelement <2 x float> undef, float %1, i32 0
  %15 = insertelement <2 x float> %14, float %4, i32 1
  %16 = insertelement <2 x float> undef, float %5, i32 0
  %17 = insertelement <2 x float> %16, float %8, i32 1
  %18 = fmul <2 x float> %15, %17
  %19 = insertelement <2 x float> undef, float %2, i32 0
  %20 = insertelement <2 x float> %19, float %5, i32 1
  %21 = insertelement <2 x float> undef, float %4, i32 0
  %22 = insertelement <2 x float> %21, float %7, i32 1
  %23 = fmul <2 x float> %20, %22
  %24 = fsub <2 x float> %18, %23
  %25 = insertelement <2 x float> undef, float %6, i32 0
  %26 = insertelement <2 x float> %25, float %0, i32 1
  %27 = fmul <2 x float> %24, %26
  %28 = extractelement <2 x float> %27, i32 1
  %29 = fsub float %28, %13
  %30 = extractelement <2 x float> %27, i32 0
  %31 = fadd float %30, %29
  ret float %31
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden float @_Z12determinant4ffffffffffffffff(float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float) local_unnamed_addr #1 {
  %17 = fmul float %10, %15
  %18 = fmul float %11, %14
  %19 = fsub float %17, %18
  %20 = fmul float %19, %5
  %21 = fmul float %6, %15
  %22 = fmul float %7, %14
  %23 = fsub float %21, %22
  %24 = fmul float %23, %9
  %25 = fsub float %20, %24
  %26 = fmul float %6, %11
  %27 = fmul float %7, %10
  %28 = fsub float %26, %27
  %29 = fmul float %28, %13
  %30 = fadd float %29, %25
  %31 = fmul float %19, %1
  %32 = fmul float %2, %15
  %33 = fmul float %3, %14
  %34 = fsub float %32, %33
  %35 = fmul float %34, %9
  %36 = fsub float %31, %35
  %37 = fmul float %2, %11
  %38 = fmul float %3, %10
  %39 = fsub float %37, %38
  %40 = fmul float %39, %13
  %41 = fadd float %40, %36
  %42 = fmul float %23, %1
  %43 = fmul float %34, %5
  %44 = fsub float %42, %43
  %45 = fmul float %2, %7
  %46 = fmul float %3, %6
  %47 = fsub float %45, %46
  %48 = fmul float %47, %13
  %49 = fadd float %48, %44
  %50 = insertelement <2 x float> undef, float %30, i32 0
  %51 = insertelement <2 x float> %50, float %28, i32 1
  %52 = insertelement <2 x float> undef, float %0, i32 0
  %53 = insertelement <2 x float> %52, float %1, i32 1
  %54 = fmul <2 x float> %51, %53
  %55 = insertelement <2 x float> undef, float %41, i32 0
  %56 = insertelement <2 x float> %55, float %39, i32 1
  %57 = insertelement <2 x float> undef, float %4, i32 0
  %58 = insertelement <2 x float> %57, float %5, i32 1
  %59 = fmul <2 x float> %56, %58
  %60 = fsub <2 x float> %54, %59
  %61 = insertelement <2 x float> undef, float %49, i32 0
  %62 = insertelement <2 x float> %61, float %47, i32 1
  %63 = insertelement <2 x float> undef, float %8, i32 0
  %64 = insertelement <2 x float> %63, float %9, i32 1
  %65 = fmul <2 x float> %62, %64
  %66 = fadd <2 x float> %65, %60
  %67 = extractelement <2 x float> %66, i32 1
  %68 = fmul float %67, %12
  %69 = extractelement <2 x float> %66, i32 0
  %70 = fsub float %69, %68
  ret float %70
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden float @_Z18ComputeDeterminantiP13ConstantUnion(i32, %class.ConstantUnion* readonly) local_unnamed_addr #0 {
  switch i32 %0, label %108 [
    i32 2, label %3
    i32 3, label %18
    i32 4, label %59
  ]

3:                                                ; preds = %2
  %4 = bitcast %class.ConstantUnion* %1 to float*
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 1
  %7 = bitcast %class.ConstantUnion* %6 to float*
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 2
  %10 = bitcast %class.ConstantUnion* %9 to float*
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 3
  %13 = bitcast %class.ConstantUnion* %12 to float*
  %14 = load float, float* %13, align 4
  %15 = fmul float %5, %14
  %16 = fmul float %8, %11
  %17 = fsub float %15, %16
  br label %108

18:                                               ; preds = %2
  %19 = bitcast %class.ConstantUnion* %1 to float*
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 1
  %22 = bitcast %class.ConstantUnion* %21 to float*
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 2
  %25 = bitcast %class.ConstantUnion* %24 to float*
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 3
  %28 = bitcast %class.ConstantUnion* %27 to float*
  %29 = load float, float* %28, align 4
  %30 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 4
  %31 = bitcast %class.ConstantUnion* %30 to float*
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 5
  %34 = bitcast %class.ConstantUnion* %33 to float*
  %35 = load float, float* %34, align 4
  %36 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 6
  %37 = bitcast %class.ConstantUnion* %36 to float*
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 7
  %40 = bitcast %class.ConstantUnion* %39 to float*
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 8
  %43 = bitcast %class.ConstantUnion* %42 to float*
  %44 = load float, float* %43, align 4
  %45 = fmul float %32, %44
  %46 = fmul float %35, %41
  %47 = fsub float %45, %46
  %48 = fmul float %20, %47
  %49 = fmul float %23, %44
  %50 = fmul float %26, %41
  %51 = fsub float %49, %50
  %52 = fmul float %29, %51
  %53 = fsub float %48, %52
  %54 = fmul float %23, %35
  %55 = fmul float %26, %32
  %56 = fsub float %54, %55
  %57 = fmul float %38, %56
  %58 = fadd float %57, %53
  br label %108

59:                                               ; preds = %2
  %60 = bitcast %class.ConstantUnion* %1 to float*
  %61 = load float, float* %60, align 4
  %62 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 1
  %63 = bitcast %class.ConstantUnion* %62 to float*
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 2
  %66 = bitcast %class.ConstantUnion* %65 to float*
  %67 = load float, float* %66, align 4
  %68 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 3
  %69 = bitcast %class.ConstantUnion* %68 to float*
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 4
  %72 = bitcast %class.ConstantUnion* %71 to float*
  %73 = load float, float* %72, align 4
  %74 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 5
  %75 = bitcast %class.ConstantUnion* %74 to float*
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 6
  %78 = bitcast %class.ConstantUnion* %77 to float*
  %79 = load float, float* %78, align 4
  %80 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 7
  %81 = bitcast %class.ConstantUnion* %80 to float*
  %82 = load float, float* %81, align 4
  %83 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 8
  %84 = bitcast %class.ConstantUnion* %83 to float*
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 9
  %87 = bitcast %class.ConstantUnion* %86 to float*
  %88 = load float, float* %87, align 4
  %89 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 10
  %90 = bitcast %class.ConstantUnion* %89 to float*
  %91 = load float, float* %90, align 4
  %92 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 11
  %93 = bitcast %class.ConstantUnion* %92 to float*
  %94 = load float, float* %93, align 4
  %95 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 12
  %96 = bitcast %class.ConstantUnion* %95 to float*
  %97 = load float, float* %96, align 4
  %98 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 13
  %99 = bitcast %class.ConstantUnion* %98 to float*
  %100 = load float, float* %99, align 4
  %101 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 14
  %102 = bitcast %class.ConstantUnion* %101 to float*
  %103 = load float, float* %102, align 4
  %104 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 15
  %105 = bitcast %class.ConstantUnion* %104 to float*
  %106 = load float, float* %105, align 4
  %107 = tail call float @_Z12determinant4ffffffffffffffff(float %61, float %64, float %67, float %70, float %73, float %76, float %79, float %82, float %85, float %88, float %91, float %94, float %97, float %100, float %103, float %106) #12
  br label %108

108:                                              ; preds = %2, %59, %18, %3
  %109 = phi float [ %107, %59 ], [ %58, %18 ], [ %17, %3 ], [ 0.000000e+00, %2 ]
  ret float %109
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.ConstantUnion* @_Z13CreateInverseP20TIntermConstantUnionP13ConstantUnion(%class.TIntermConstantUnion* nocapture readonly, %class.ConstantUnion*) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %0, i64 0, i32 0, i32 1, i32 3
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i32
  %6 = tail call float @_Z18ComputeDeterminantiP13ConstantUnion(i32 %5, %class.ConstantUnion* %1) #12
  %7 = fcmp une float %6, 0.000000e+00
  br i1 %7, label %8, label %390

8:                                                ; preds = %2
  %9 = fdiv float 1.000000e+00, %6
  %10 = mul nuw nsw i32 %5, %5
  %11 = shl nuw nsw i32 %10, 3
  %12 = zext i32 %11 to i64
  %13 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %14 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %13, i64 %12) #10
  %15 = bitcast i8* %14 to %class.ConstantUnion*
  %16 = icmp eq i32 %10, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %8
  %18 = zext i32 %10 to i64
  %19 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %15, i64 %18
  br label %20

20:                                               ; preds = %20, %17
  %21 = phi %class.ConstantUnion* [ %15, %17 ], [ %24, %20 ]
  %22 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %21, i64 0, i32 0, i32 0
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %21, i64 0, i32 1
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %21, i64 1
  %25 = icmp eq %class.ConstantUnion* %24, %19
  br i1 %25, label %26, label %20

26:                                               ; preds = %20, %8
  switch i8 %4, label %390 [
    i8 2, label %27
    i8 3, label %55
    i8 4, label %144
  ]

27:                                               ; preds = %26
  %28 = bitcast %class.ConstantUnion* %1 to float*
  %29 = load float, float* %28, align 4
  %30 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 1
  %31 = bitcast %class.ConstantUnion* %30 to float*
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 2
  %34 = bitcast %class.ConstantUnion* %33 to float*
  %35 = load float, float* %34, align 4
  %36 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 3
  %37 = bitcast %class.ConstantUnion* %36 to float*
  %38 = load float, float* %37, align 4
  %39 = fmul float %9, %38
  %40 = bitcast i8* %14 to float*
  store float %39, float* %40, align 4
  %41 = getelementptr inbounds i8, i8* %14, i64 4
  store i8 1, i8* %41, align 4
  %42 = getelementptr inbounds i8, i8* %14, i64 8
  %43 = fsub float -0.000000e+00, %9
  %44 = fmul float %32, %43
  %45 = bitcast i8* %42 to float*
  store float %44, float* %45, align 4
  %46 = getelementptr inbounds i8, i8* %14, i64 12
  store i8 1, i8* %46, align 4
  %47 = getelementptr inbounds i8, i8* %14, i64 16
  %48 = fmul float %35, %43
  %49 = bitcast i8* %47 to float*
  store float %48, float* %49, align 4
  %50 = getelementptr inbounds i8, i8* %14, i64 20
  store i8 1, i8* %50, align 4
  %51 = getelementptr inbounds i8, i8* %14, i64 24
  %52 = fmul float %9, %29
  %53 = bitcast i8* %51 to float*
  store float %52, float* %53, align 4
  %54 = getelementptr inbounds i8, i8* %14, i64 28
  store i8 1, i8* %54, align 4
  br label %390

55:                                               ; preds = %26
  %56 = bitcast %class.ConstantUnion* %1 to float*
  %57 = load float, float* %56, align 4
  %58 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 1
  %59 = bitcast %class.ConstantUnion* %58 to float*
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 2
  %62 = bitcast %class.ConstantUnion* %61 to float*
  %63 = load float, float* %62, align 4
  %64 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 3
  %65 = bitcast %class.ConstantUnion* %64 to float*
  %66 = load float, float* %65, align 4
  %67 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 4
  %68 = bitcast %class.ConstantUnion* %67 to float*
  %69 = load float, float* %68, align 4
  %70 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 5
  %71 = bitcast %class.ConstantUnion* %70 to float*
  %72 = load float, float* %71, align 4
  %73 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 6
  %74 = bitcast %class.ConstantUnion* %73 to float*
  %75 = load float, float* %74, align 4
  %76 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 7
  %77 = bitcast %class.ConstantUnion* %76 to float*
  %78 = load float, float* %77, align 4
  %79 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 8
  %80 = bitcast %class.ConstantUnion* %79 to float*
  %81 = load float, float* %80, align 4
  %82 = fmul float %69, %81
  %83 = fmul float %72, %78
  %84 = fsub float %82, %83
  %85 = fmul float %9, %84
  %86 = bitcast i8* %14 to float*
  store float %85, float* %86, align 4
  %87 = getelementptr inbounds i8, i8* %14, i64 4
  store i8 1, i8* %87, align 4
  %88 = getelementptr inbounds i8, i8* %14, i64 8
  %89 = fmul float %72, %75
  %90 = fmul float %66, %81
  %91 = fsub float %89, %90
  %92 = fmul float %9, %91
  %93 = bitcast i8* %88 to float*
  store float %92, float* %93, align 4
  %94 = getelementptr inbounds i8, i8* %14, i64 12
  store i8 1, i8* %94, align 4
  %95 = getelementptr inbounds i8, i8* %14, i64 16
  %96 = fmul float %66, %78
  %97 = fmul float %69, %75
  %98 = fsub float %96, %97
  %99 = fmul float %9, %98
  %100 = bitcast i8* %95 to float*
  store float %99, float* %100, align 4
  %101 = getelementptr inbounds i8, i8* %14, i64 20
  store i8 1, i8* %101, align 4
  %102 = getelementptr inbounds i8, i8* %14, i64 24
  %103 = fmul float %63, %78
  %104 = fmul float %60, %81
  %105 = fsub float %103, %104
  %106 = fmul float %9, %105
  %107 = bitcast i8* %102 to float*
  store float %106, float* %107, align 4
  %108 = getelementptr inbounds i8, i8* %14, i64 28
  store i8 1, i8* %108, align 4
  %109 = getelementptr inbounds i8, i8* %14, i64 32
  %110 = fmul float %57, %81
  %111 = fmul float %63, %75
  %112 = fsub float %110, %111
  %113 = fmul float %9, %112
  %114 = bitcast i8* %109 to float*
  store float %113, float* %114, align 4
  %115 = getelementptr inbounds i8, i8* %14, i64 36
  store i8 1, i8* %115, align 4
  %116 = getelementptr inbounds i8, i8* %14, i64 40
  %117 = fmul float %60, %75
  %118 = fmul float %57, %78
  %119 = fsub float %117, %118
  %120 = fmul float %9, %119
  %121 = bitcast i8* %116 to float*
  store float %120, float* %121, align 4
  %122 = getelementptr inbounds i8, i8* %14, i64 44
  store i8 1, i8* %122, align 4
  %123 = getelementptr inbounds i8, i8* %14, i64 48
  %124 = fmul float %60, %72
  %125 = fmul float %63, %69
  %126 = fsub float %124, %125
  %127 = fmul float %9, %126
  %128 = bitcast i8* %123 to float*
  store float %127, float* %128, align 4
  %129 = getelementptr inbounds i8, i8* %14, i64 52
  store i8 1, i8* %129, align 4
  %130 = getelementptr inbounds i8, i8* %14, i64 56
  %131 = fmul float %63, %66
  %132 = fmul float %57, %72
  %133 = fsub float %131, %132
  %134 = fmul float %9, %133
  %135 = bitcast i8* %130 to float*
  store float %134, float* %135, align 4
  %136 = getelementptr inbounds i8, i8* %14, i64 60
  store i8 1, i8* %136, align 4
  %137 = getelementptr inbounds i8, i8* %14, i64 64
  %138 = fmul float %57, %69
  %139 = fmul float %60, %66
  %140 = fsub float %138, %139
  %141 = fmul float %9, %140
  %142 = bitcast i8* %137 to float*
  store float %141, float* %142, align 4
  %143 = getelementptr inbounds i8, i8* %14, i64 68
  store i8 1, i8* %143, align 4
  br label %390

144:                                              ; preds = %26
  %145 = bitcast %class.ConstantUnion* %1 to float*
  %146 = load float, float* %145, align 4
  %147 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 1
  %148 = bitcast %class.ConstantUnion* %147 to float*
  %149 = load float, float* %148, align 4
  %150 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 2
  %151 = bitcast %class.ConstantUnion* %150 to float*
  %152 = load float, float* %151, align 4
  %153 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 3
  %154 = bitcast %class.ConstantUnion* %153 to float*
  %155 = load float, float* %154, align 4
  %156 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 4
  %157 = bitcast %class.ConstantUnion* %156 to float*
  %158 = load float, float* %157, align 4
  %159 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 5
  %160 = bitcast %class.ConstantUnion* %159 to float*
  %161 = load float, float* %160, align 4
  %162 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 6
  %163 = bitcast %class.ConstantUnion* %162 to float*
  %164 = load float, float* %163, align 4
  %165 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 7
  %166 = bitcast %class.ConstantUnion* %165 to float*
  %167 = load float, float* %166, align 4
  %168 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 8
  %169 = bitcast %class.ConstantUnion* %168 to float*
  %170 = load float, float* %169, align 4
  %171 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 9
  %172 = bitcast %class.ConstantUnion* %171 to float*
  %173 = load float, float* %172, align 4
  %174 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 10
  %175 = bitcast %class.ConstantUnion* %174 to float*
  %176 = load float, float* %175, align 4
  %177 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 11
  %178 = bitcast %class.ConstantUnion* %177 to float*
  %179 = load float, float* %178, align 4
  %180 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 12
  %181 = bitcast %class.ConstantUnion* %180 to float*
  %182 = load float, float* %181, align 4
  %183 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 13
  %184 = bitcast %class.ConstantUnion* %183 to float*
  %185 = load float, float* %184, align 4
  %186 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 14
  %187 = bitcast %class.ConstantUnion* %186 to float*
  %188 = load float, float* %187, align 4
  %189 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 15
  %190 = bitcast %class.ConstantUnion* %189 to float*
  %191 = load float, float* %190, align 4
  %192 = fmul float %176, %191
  %193 = fmul float %179, %188
  %194 = fsub float %192, %193
  %195 = fmul float %161, %194
  %196 = fmul float %164, %191
  %197 = fmul float %167, %188
  %198 = fsub float %196, %197
  %199 = fmul float %173, %198
  %200 = fsub float %195, %199
  %201 = fmul float %164, %179
  %202 = fmul float %167, %176
  %203 = fsub float %201, %202
  %204 = fmul float %203, %185
  %205 = fadd float %204, %200
  %206 = fmul float %9, %205
  %207 = bitcast i8* %14 to float*
  store float %206, float* %207, align 4
  %208 = getelementptr inbounds i8, i8* %14, i64 4
  store i8 1, i8* %208, align 4
  %209 = getelementptr inbounds i8, i8* %14, i64 8
  %210 = fsub float -0.000000e+00, %9
  %211 = fmul float %158, %194
  %212 = fmul float %170, %198
  %213 = fsub float %211, %212
  %214 = fmul float %182, %203
  %215 = fadd float %214, %213
  %216 = fmul float %215, %210
  %217 = bitcast i8* %209 to float*
  store float %216, float* %217, align 4
  %218 = getelementptr inbounds i8, i8* %14, i64 12
  store i8 1, i8* %218, align 4
  %219 = getelementptr inbounds i8, i8* %14, i64 16
  %220 = fmul float %173, %191
  %221 = fmul float %179, %185
  %222 = fsub float %220, %221
  %223 = fmul float %158, %222
  %224 = fmul float %161, %191
  %225 = fmul float %167, %185
  %226 = fsub float %224, %225
  %227 = fmul float %170, %226
  %228 = fsub float %223, %227
  %229 = fmul float %161, %179
  %230 = fmul float %167, %173
  %231 = fsub float %229, %230
  %232 = fmul float %182, %231
  %233 = fadd float %232, %228
  %234 = fmul float %9, %233
  %235 = bitcast i8* %219 to float*
  store float %234, float* %235, align 4
  %236 = getelementptr inbounds i8, i8* %14, i64 20
  store i8 1, i8* %236, align 4
  %237 = getelementptr inbounds i8, i8* %14, i64 24
  %238 = fmul float %173, %188
  %239 = fmul float %176, %185
  %240 = fsub float %238, %239
  %241 = fmul float %158, %240
  %242 = fmul float %161, %188
  %243 = fmul float %164, %185
  %244 = fsub float %242, %243
  %245 = fmul float %170, %244
  %246 = fsub float %241, %245
  %247 = fmul float %161, %176
  %248 = fmul float %164, %173
  %249 = fsub float %247, %248
  %250 = fmul float %249, %182
  %251 = fadd float %250, %246
  %252 = fmul float %251, %210
  %253 = bitcast i8* %237 to float*
  store float %252, float* %253, align 4
  %254 = getelementptr inbounds i8, i8* %14, i64 28
  store i8 1, i8* %254, align 4
  %255 = getelementptr inbounds i8, i8* %14, i64 32
  %256 = fmul float %149, %194
  %257 = fmul float %152, %191
  %258 = fmul float %155, %188
  %259 = fsub float %257, %258
  %260 = fmul float %173, %259
  %261 = fsub float %256, %260
  %262 = fmul float %152, %179
  %263 = fmul float %155, %176
  %264 = fsub float %262, %263
  %265 = fmul float %264, %185
  %266 = fadd float %265, %261
  %267 = fmul float %9, %266
  %268 = bitcast i8* %255 to float*
  store float %267, float* %268, align 4
  %269 = getelementptr inbounds i8, i8* %14, i64 36
  store i8 1, i8* %269, align 4
  %270 = getelementptr inbounds i8, i8* %14, i64 40
  %271 = fmul float %146, %194
  %272 = fmul float %170, %259
  %273 = fsub float %271, %272
  %274 = fmul float %182, %264
  %275 = fadd float %274, %273
  %276 = fmul float %275, %210
  %277 = bitcast i8* %270 to float*
  store float %276, float* %277, align 4
  %278 = getelementptr inbounds i8, i8* %14, i64 44
  store i8 1, i8* %278, align 4
  %279 = getelementptr inbounds i8, i8* %14, i64 48
  %280 = fmul float %146, %222
  %281 = fmul float %149, %191
  %282 = fmul float %155, %185
  %283 = fsub float %281, %282
  %284 = fmul float %170, %283
  %285 = fsub float %280, %284
  %286 = fmul float %149, %179
  %287 = fmul float %155, %173
  %288 = fsub float %286, %287
  %289 = fmul float %182, %288
  %290 = fadd float %289, %285
  %291 = fmul float %9, %290
  %292 = bitcast i8* %279 to float*
  store float %291, float* %292, align 4
  %293 = getelementptr inbounds i8, i8* %14, i64 52
  store i8 1, i8* %293, align 4
  %294 = getelementptr inbounds i8, i8* %14, i64 56
  %295 = fmul float %146, %240
  %296 = fmul float %149, %188
  %297 = fmul float %152, %185
  %298 = fsub float %296, %297
  %299 = fmul float %170, %298
  %300 = fsub float %295, %299
  %301 = fmul float %149, %176
  %302 = fmul float %152, %173
  %303 = fsub float %301, %302
  %304 = fmul float %303, %182
  %305 = fadd float %304, %300
  %306 = fmul float %305, %210
  %307 = bitcast i8* %294 to float*
  store float %306, float* %307, align 4
  %308 = getelementptr inbounds i8, i8* %14, i64 60
  store i8 1, i8* %308, align 4
  %309 = getelementptr inbounds i8, i8* %14, i64 64
  %310 = fmul float %149, %198
  %311 = fmul float %161, %259
  %312 = fsub float %310, %311
  %313 = fmul float %152, %167
  %314 = fmul float %155, %164
  %315 = fsub float %313, %314
  %316 = fmul float %315, %185
  %317 = fadd float %316, %312
  %318 = fmul float %9, %317
  %319 = bitcast i8* %309 to float*
  store float %318, float* %319, align 4
  %320 = getelementptr inbounds i8, i8* %14, i64 68
  store i8 1, i8* %320, align 4
  %321 = getelementptr inbounds i8, i8* %14, i64 72
  %322 = fmul float %146, %198
  %323 = fmul float %158, %259
  %324 = fsub float %322, %323
  %325 = fmul float %315, %182
  %326 = fadd float %325, %324
  %327 = fmul float %326, %210
  %328 = bitcast i8* %321 to float*
  store float %327, float* %328, align 4
  %329 = getelementptr inbounds i8, i8* %14, i64 76
  store i8 1, i8* %329, align 4
  %330 = getelementptr inbounds i8, i8* %14, i64 80
  %331 = fmul float %146, %226
  %332 = fmul float %158, %283
  %333 = fsub float %331, %332
  %334 = fmul float %149, %167
  %335 = fmul float %155, %161
  %336 = fsub float %334, %335
  %337 = fmul float %336, %182
  %338 = fadd float %337, %333
  %339 = fmul float %9, %338
  %340 = bitcast i8* %330 to float*
  store float %339, float* %340, align 4
  %341 = getelementptr inbounds i8, i8* %14, i64 84
  store i8 1, i8* %341, align 4
  %342 = getelementptr inbounds i8, i8* %14, i64 88
  %343 = fmul float %146, %244
  %344 = fmul float %158, %298
  %345 = fsub float %343, %344
  %346 = fmul float %149, %164
  %347 = fmul float %152, %161
  %348 = fsub float %346, %347
  %349 = fmul float %348, %182
  %350 = fadd float %349, %345
  %351 = fmul float %350, %210
  %352 = bitcast i8* %342 to float*
  store float %351, float* %352, align 4
  %353 = getelementptr inbounds i8, i8* %14, i64 92
  store i8 1, i8* %353, align 4
  %354 = getelementptr inbounds i8, i8* %14, i64 96
  %355 = fmul float %149, %203
  %356 = fmul float %161, %264
  %357 = fsub float %355, %356
  %358 = fmul float %315, %173
  %359 = fadd float %358, %357
  %360 = fmul float %9, %359
  %361 = bitcast i8* %354 to float*
  store float %360, float* %361, align 4
  %362 = getelementptr inbounds i8, i8* %14, i64 100
  store i8 1, i8* %362, align 4
  %363 = getelementptr inbounds i8, i8* %14, i64 104
  %364 = fmul float %146, %203
  %365 = fmul float %158, %264
  %366 = fsub float %364, %365
  %367 = fmul float %170, %315
  %368 = fadd float %367, %366
  %369 = fmul float %368, %210
  %370 = bitcast i8* %363 to float*
  store float %369, float* %370, align 4
  %371 = getelementptr inbounds i8, i8* %14, i64 108
  store i8 1, i8* %371, align 4
  %372 = getelementptr inbounds i8, i8* %14, i64 112
  %373 = fmul float %146, %231
  %374 = fmul float %158, %288
  %375 = fsub float %373, %374
  %376 = fmul float %170, %336
  %377 = fadd float %376, %375
  %378 = fmul float %9, %377
  %379 = bitcast i8* %372 to float*
  store float %378, float* %379, align 4
  %380 = getelementptr inbounds i8, i8* %14, i64 116
  store i8 1, i8* %380, align 4
  %381 = getelementptr inbounds i8, i8* %14, i64 120
  %382 = fmul float %146, %249
  %383 = fmul float %158, %303
  %384 = fsub float %382, %383
  %385 = fmul float %348, %170
  %386 = fadd float %385, %384
  %387 = fmul float %386, %210
  %388 = bitcast i8* %381 to float*
  store float %387, float* %388, align 4
  %389 = getelementptr inbounds i8, i8* %14, i64 124
  store i8 1, i8* %389, align 4
  br label %390

390:                                              ; preds = %26, %27, %55, %144, %2
  %391 = phi %class.ConstantUnion* [ null, %2 ], [ %15, %144 ], [ %15, %55 ], [ %15, %27 ], [ %15, %26 ]
  ret %class.ConstantUnion* %391
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNK13ConstantUnionplERKS_(%class.ConstantUnion*, %class.ConstantUnion* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 4
  switch i8 %4, label %24 [
    i8 2, label %5
    i8 3, label %11
    i8 1, label %17
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, %7
  br label %24

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %15, %13
  br label %24

17:                                               ; preds = %2
  %18 = bitcast %class.ConstantUnion* %0 to float*
  %19 = load float, float* %18, align 4
  %20 = bitcast %class.ConstantUnion* %1 to float*
  %21 = load float, float* %20, align 4
  %22 = fadd float %19, %21
  %23 = bitcast float %22 to i32
  br label %24

24:                                               ; preds = %2, %17, %11, %5
  %25 = phi i64 [ -6148915424244269056, %2 ], [ -6148915419949301760, %17 ], [ -6148915411359367168, %11 ], [ -6148915415654334464, %5 ]
  %26 = phi i32 [ 0, %2 ], [ %23, %17 ], [ %16, %11 ], [ %10, %5 ]
  %27 = zext i32 %26 to i64
  %28 = or i64 %25, %27
  ret i64 %28
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNK13ConstantUnionmiERKS_(%class.ConstantUnion*, %class.ConstantUnion* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 4
  switch i8 %4, label %24 [
    i8 2, label %5
    i8 3, label %11
    i8 1, label %17
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sub nsw i32 %7, %9
  br label %24

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = sub i32 %13, %15
  br label %24

17:                                               ; preds = %2
  %18 = bitcast %class.ConstantUnion* %0 to float*
  %19 = load float, float* %18, align 4
  %20 = bitcast %class.ConstantUnion* %1 to float*
  %21 = load float, float* %20, align 4
  %22 = fsub float %19, %21
  %23 = bitcast float %22 to i32
  br label %24

24:                                               ; preds = %2, %17, %11, %5
  %25 = phi i64 [ -6148915424244269056, %2 ], [ -6148915419949301760, %17 ], [ -6148915411359367168, %11 ], [ -6148915415654334464, %5 ]
  %26 = phi i32 [ 0, %2 ], [ %23, %17 ], [ %16, %11 ], [ %10, %5 ]
  %27 = zext i32 %26 to i64
  %28 = or i64 %25, %27
  ret i64 %28
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNK13ConstantUnionmlERKS_(%class.ConstantUnion*, %class.ConstantUnion* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 4
  switch i8 %4, label %24 [
    i8 2, label %5
    i8 3, label %11
    i8 1, label %17
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = mul nsw i32 %9, %7
  br label %24

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = mul i32 %15, %13
  br label %24

17:                                               ; preds = %2
  %18 = bitcast %class.ConstantUnion* %0 to float*
  %19 = load float, float* %18, align 4
  %20 = bitcast %class.ConstantUnion* %1 to float*
  %21 = load float, float* %20, align 4
  %22 = fmul float %19, %21
  %23 = bitcast float %22 to i32
  br label %24

24:                                               ; preds = %2, %17, %11, %5
  %25 = phi i64 [ -6148915424244269056, %2 ], [ -6148915419949301760, %17 ], [ -6148915411359367168, %11 ], [ -6148915415654334464, %5 ]
  %26 = phi i32 [ 0, %2 ], [ %23, %17 ], [ %16, %11 ], [ %10, %5 ]
  %27 = zext i32 %26 to i64
  %28 = or i64 %25, %27
  ret i64 %28
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK13ConstantUnioneqERKS_(%class.ConstantUnion*, %class.ConstantUnion* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 4
  %5 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = icmp eq i8 %4, %6
  br i1 %7, label %8, label %33

8:                                                ; preds = %2
  switch i8 %4, label %33 [
    i8 2, label %9
    i8 3, label %15
    i8 1, label %21
    i8 4, label %27
  ]

9:                                                ; preds = %8
  %10 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br label %33

15:                                               ; preds = %8
  %16 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %1, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %17, %19
  br label %33

21:                                               ; preds = %8
  %22 = bitcast %class.ConstantUnion* %1 to float*
  %23 = load float, float* %22, align 4
  %24 = bitcast %class.ConstantUnion* %0 to float*
  %25 = load float, float* %24, align 4
  %26 = fcmp oeq float %23, %25
  br label %33

27:                                               ; preds = %8
  %28 = bitcast %class.ConstantUnion* %1 to i8*
  %29 = load i8, i8* %28, align 4, !range !2
  %30 = bitcast %class.ConstantUnion* %0 to i8*
  %31 = load i8, i8* %30, align 4, !range !2
  %32 = icmp eq i8 %29, %31
  br label %33

33:                                               ; preds = %8, %2, %27, %21, %15, %9
  %34 = phi i1 [ %32, %27 ], [ %26, %21 ], [ %20, %15 ], [ %14, %9 ], [ false, %2 ], [ false, %8 ]
  ret i1 %34
}

; Function Attrs: nofree nounwind optsize
declare float @sinf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare float @cosf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare float @tanf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare float @asinf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare float @acosf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare float @atanf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare float @sinhf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare float @coshf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare float @tanhf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare float @asinhf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare float @acoshf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare float @atanhf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare float @logf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare float @expf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare float @exp2f(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare float @sqrtf(float) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TIntermTyped* @_ZN13TIntermediate20promoteConstantUnionE10TBasicTypeP20TIntermConstantUnion(%class.TIntermediate* nocapture readonly, i8 zeroext, %class.TIntermConstantUnion*) local_unnamed_addr #2 align 2 {
  %4 = alloca [26 x i8], align 2
  %5 = alloca [20 x i8], align 4
  %6 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 1, i32 5
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %6) #10
  br i1 %9, label %20, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 1, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 1, i32 7
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %13, %15
  %17 = select i1 %16, i32 %15, i32 %13
  %18 = sext i32 %17 to i64
  %19 = mul i64 %10, %18
  br label %20

20:                                               ; preds = %3, %11
  %21 = phi i64 [ %19, %11 ], [ %10, %3 ]
  %22 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %21, i64 8)
  %23 = extractvalue { i64, i1 } %22, 1
  %24 = extractvalue { i64, i1 } %22, 0
  %25 = select i1 %23, i64 -1, i64 %24
  %26 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %27 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %26, i64 %25) #10
  %28 = bitcast i8* %27 to %class.ConstantUnion*
  %29 = icmp eq i64 %21, 0
  br i1 %29, label %317, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %21
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi %class.ConstantUnion* [ %28, %30 ], [ %36, %32 ]
  %34 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %33, i64 0, i32 0, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %33, i64 0, i32 1
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %33, i64 1
  %37 = icmp eq %class.ConstantUnion* %36, %31
  br i1 %37, label %38, label %32

38:                                               ; preds = %32
  br i1 %29, label %317, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %class.TType, %class.TType* %6, i64 0, i32 0
  %41 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 1
  br label %42

42:                                               ; preds = %312, %39
  %43 = phi i64 [ 0, %39 ], [ %315, %312 ]
  switch i8 %1, label %302 [
    i8 1, label %44
    i8 2, label %110
    i8 3, label %171
    i8 4, label %232
  ]

44:                                               ; preds = %42
  %45 = load i8, i8* %40, align 8
  switch i8 %45, label %100 [
    i8 2, label %46
    i8 3, label %59
    i8 4, label %72
    i8 1, label %87
  ]

46:                                               ; preds = %44
  %47 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43
  %48 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %49 = icmp eq %class.ConstantUnion* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = shl i64 %43, 32
  %52 = ashr exact i64 %51, 32
  %53 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %48, i64 %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %46, %50
  %56 = phi i32 [ %54, %50 ], [ 0, %46 ]
  %57 = sitofp i32 %56 to float
  %58 = bitcast %class.ConstantUnion* %47 to float*
  store float %57, float* %58, align 4
  br label %312

59:                                               ; preds = %44
  %60 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43
  %61 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %62 = icmp eq %class.ConstantUnion* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = shl i64 %43, 32
  %65 = ashr exact i64 %64, 32
  %66 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %61, i64 %65, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  br label %68

68:                                               ; preds = %59, %63
  %69 = phi i32 [ %67, %63 ], [ 0, %59 ]
  %70 = sitofp i32 %69 to float
  %71 = bitcast %class.ConstantUnion* %60 to float*
  store float %70, float* %71, align 4
  br label %312

72:                                               ; preds = %44
  %73 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43
  %74 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %75 = icmp eq %class.ConstantUnion* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = shl i64 %43, 32
  %78 = ashr exact i64 %77, 32
  %79 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %74, i64 %78
  %80 = bitcast %class.ConstantUnion* %79 to i8*
  %81 = load i8, i8* %80, align 4, !range !2
  %82 = icmp ne i8 %81, 0
  br label %83

83:                                               ; preds = %72, %76
  %84 = phi i1 [ %82, %76 ], [ false, %72 ]
  %85 = uitofp i1 %84 to float
  %86 = bitcast %class.ConstantUnion* %73 to float*
  store float %85, float* %86, align 4
  br label %312

87:                                               ; preds = %44
  %88 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43
  %89 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %90 = icmp eq %class.ConstantUnion* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87
  %92 = shl i64 %43, 32
  %93 = ashr exact i64 %92, 32
  %94 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %89, i64 %93
  %95 = bitcast %class.ConstantUnion* %94 to float*
  %96 = load float, float* %95, align 4
  br label %97

97:                                               ; preds = %87, %91
  %98 = phi float [ %96, %91 ], [ 0.000000e+00, %87 ]
  %99 = bitcast %class.ConstantUnion* %88 to float*
  store float %98, float* %99, align 4
  br label %312

100:                                              ; preds = %44
  %101 = getelementptr inbounds %class.TIntermediate, %class.TIntermediate* %0, i64 0, i32 0
  %102 = load %class.TInfoSink*, %class.TInfoSink** %101, align 8
  %103 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %102, i64 0, i32 0
  %104 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 0, i32 1
  %105 = bitcast %struct.TSourceLoc* %104 to i64*
  %106 = load i64, i64* %105, align 4
  %107 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 0, i32 1, i32 2
  %108 = bitcast i32* %107 to i64*
  %109 = load i64, i64* %108, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %103, i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.96, i64 0, i64 0), i64 %106, i64 %109) #10
  br label %350

110:                                              ; preds = %42
  %111 = load i8, i8* %40, align 8
  switch i8 %111, label %161 [
    i8 2, label %112
    i8 3, label %123
    i8 4, label %134
    i8 1, label %148
  ]

112:                                              ; preds = %110
  %113 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %114 = icmp eq %class.ConstantUnion* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %112
  %116 = shl i64 %43, 32
  %117 = ashr exact i64 %116, 32
  %118 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %113, i64 %117, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  br label %120

120:                                              ; preds = %112, %115
  %121 = phi i32 [ %119, %115 ], [ 0, %112 ]
  %122 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43, i32 0, i32 0
  store i32 %121, i32* %122, align 4
  br label %312

123:                                              ; preds = %110
  %124 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %125 = icmp eq %class.ConstantUnion* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %123
  %127 = shl i64 %43, 32
  %128 = ashr exact i64 %127, 32
  %129 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %124, i64 %128, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  br label %131

131:                                              ; preds = %123, %126
  %132 = phi i32 [ %130, %126 ], [ 0, %123 ]
  %133 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43, i32 0, i32 0
  store i32 %132, i32* %133, align 4
  br label %312

134:                                              ; preds = %110
  %135 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %136 = icmp eq %class.ConstantUnion* %135, null
  br i1 %136, label %144, label %137

137:                                              ; preds = %134
  %138 = shl i64 %43, 32
  %139 = ashr exact i64 %138, 32
  %140 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %135, i64 %139
  %141 = bitcast %class.ConstantUnion* %140 to i8*
  %142 = load i8, i8* %141, align 4, !range !2
  %143 = icmp ne i8 %142, 0
  br label %144

144:                                              ; preds = %134, %137
  %145 = phi i1 [ %143, %137 ], [ false, %134 ]
  %146 = zext i1 %145 to i32
  %147 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43, i32 0, i32 0
  store i32 %146, i32* %147, align 4
  br label %312

148:                                              ; preds = %110
  %149 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %150 = icmp eq %class.ConstantUnion* %149, null
  br i1 %150, label %157, label %151

151:                                              ; preds = %148
  %152 = shl i64 %43, 32
  %153 = ashr exact i64 %152, 32
  %154 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %149, i64 %153
  %155 = bitcast %class.ConstantUnion* %154 to float*
  %156 = load float, float* %155, align 4
  br label %157

157:                                              ; preds = %148, %151
  %158 = phi float [ %156, %151 ], [ 0.000000e+00, %148 ]
  %159 = fptosi float %158 to i32
  %160 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43, i32 0, i32 0
  store i32 %159, i32* %160, align 4
  br label %312

161:                                              ; preds = %110
  %162 = getelementptr inbounds %class.TIntermediate, %class.TIntermediate* %0, i64 0, i32 0
  %163 = load %class.TInfoSink*, %class.TInfoSink** %162, align 8
  %164 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %163, i64 0, i32 0
  %165 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 0, i32 1
  %166 = bitcast %struct.TSourceLoc* %165 to i64*
  %167 = load i64, i64* %166, align 4
  %168 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 0, i32 1, i32 2
  %169 = bitcast i32* %168 to i64*
  %170 = load i64, i64* %169, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %164, i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.96, i64 0, i64 0), i64 %167, i64 %170) #10
  br label %350

171:                                              ; preds = %42
  %172 = load i8, i8* %40, align 8
  switch i8 %172, label %222 [
    i8 2, label %173
    i8 3, label %184
    i8 4, label %195
    i8 1, label %209
  ]

173:                                              ; preds = %171
  %174 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %175 = icmp eq %class.ConstantUnion* %174, null
  br i1 %175, label %181, label %176

176:                                              ; preds = %173
  %177 = shl i64 %43, 32
  %178 = ashr exact i64 %177, 32
  %179 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %174, i64 %178, i32 0, i32 0
  %180 = load i32, i32* %179, align 4
  br label %181

181:                                              ; preds = %173, %176
  %182 = phi i32 [ %180, %176 ], [ 0, %173 ]
  %183 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43, i32 0, i32 0
  store i32 %182, i32* %183, align 4
  br label %312

184:                                              ; preds = %171
  %185 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %186 = icmp eq %class.ConstantUnion* %185, null
  br i1 %186, label %192, label %187

187:                                              ; preds = %184
  %188 = shl i64 %43, 32
  %189 = ashr exact i64 %188, 32
  %190 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %185, i64 %189, i32 0, i32 0
  %191 = load i32, i32* %190, align 4
  br label %192

192:                                              ; preds = %184, %187
  %193 = phi i32 [ %191, %187 ], [ 0, %184 ]
  %194 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43, i32 0, i32 0
  store i32 %193, i32* %194, align 4
  br label %312

195:                                              ; preds = %171
  %196 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %197 = icmp eq %class.ConstantUnion* %196, null
  br i1 %197, label %205, label %198

198:                                              ; preds = %195
  %199 = shl i64 %43, 32
  %200 = ashr exact i64 %199, 32
  %201 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %196, i64 %200
  %202 = bitcast %class.ConstantUnion* %201 to i8*
  %203 = load i8, i8* %202, align 4, !range !2
  %204 = icmp ne i8 %203, 0
  br label %205

205:                                              ; preds = %195, %198
  %206 = phi i1 [ %204, %198 ], [ false, %195 ]
  %207 = zext i1 %206 to i32
  %208 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43, i32 0, i32 0
  store i32 %207, i32* %208, align 4
  br label %312

209:                                              ; preds = %171
  %210 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %211 = icmp eq %class.ConstantUnion* %210, null
  br i1 %211, label %218, label %212

212:                                              ; preds = %209
  %213 = shl i64 %43, 32
  %214 = ashr exact i64 %213, 32
  %215 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %210, i64 %214
  %216 = bitcast %class.ConstantUnion* %215 to float*
  %217 = load float, float* %216, align 4
  br label %218

218:                                              ; preds = %209, %212
  %219 = phi float [ %217, %212 ], [ 0.000000e+00, %209 ]
  %220 = fptoui float %219 to i32
  %221 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43, i32 0, i32 0
  store i32 %220, i32* %221, align 4
  br label %312

222:                                              ; preds = %171
  %223 = getelementptr inbounds %class.TIntermediate, %class.TIntermediate* %0, i64 0, i32 0
  %224 = load %class.TInfoSink*, %class.TInfoSink** %223, align 8
  %225 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %224, i64 0, i32 0
  %226 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 0, i32 1
  %227 = bitcast %struct.TSourceLoc* %226 to i64*
  %228 = load i64, i64* %227, align 4
  %229 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 0, i32 1, i32 2
  %230 = bitcast i32* %229 to i64*
  %231 = load i64, i64* %230, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %225, i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.96, i64 0, i64 0), i64 %228, i64 %231) #10
  br label %350

232:                                              ; preds = %42
  %233 = load i8, i8* %40, align 8
  switch i8 %233, label %292 [
    i8 2, label %234
    i8 3, label %248
    i8 4, label %262
    i8 1, label %277
  ]

234:                                              ; preds = %232
  %235 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43
  %236 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %237 = icmp eq %class.ConstantUnion* %236, null
  br i1 %237, label %243, label %238

238:                                              ; preds = %234
  %239 = shl i64 %43, 32
  %240 = ashr exact i64 %239, 32
  %241 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %236, i64 %240, i32 0, i32 0
  %242 = load i32, i32* %241, align 4
  br label %243

243:                                              ; preds = %234, %238
  %244 = phi i32 [ %242, %238 ], [ 0, %234 ]
  %245 = icmp ne i32 %244, 0
  %246 = zext i1 %245 to i8
  %247 = bitcast %class.ConstantUnion* %235 to i8*
  store i8 %246, i8* %247, align 4
  br label %312

248:                                              ; preds = %232
  %249 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43
  %250 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %251 = icmp eq %class.ConstantUnion* %250, null
  br i1 %251, label %257, label %252

252:                                              ; preds = %248
  %253 = shl i64 %43, 32
  %254 = ashr exact i64 %253, 32
  %255 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %250, i64 %254, i32 0, i32 0
  %256 = load i32, i32* %255, align 4
  br label %257

257:                                              ; preds = %248, %252
  %258 = phi i32 [ %256, %252 ], [ 0, %248 ]
  %259 = icmp ne i32 %258, 0
  %260 = zext i1 %259 to i8
  %261 = bitcast %class.ConstantUnion* %249 to i8*
  store i8 %260, i8* %261, align 4
  br label %312

262:                                              ; preds = %232
  %263 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43
  %264 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %265 = icmp eq %class.ConstantUnion* %264, null
  br i1 %265, label %273, label %266

266:                                              ; preds = %262
  %267 = shl i64 %43, 32
  %268 = ashr exact i64 %267, 32
  %269 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %264, i64 %268
  %270 = bitcast %class.ConstantUnion* %269 to i8*
  %271 = load i8, i8* %270, align 4, !range !2
  %272 = icmp ne i8 %271, 0
  br label %273

273:                                              ; preds = %262, %266
  %274 = phi i1 [ %272, %266 ], [ false, %262 ]
  %275 = zext i1 %274 to i8
  %276 = bitcast %class.ConstantUnion* %263 to i8*
  store i8 %275, i8* %276, align 4
  br label %312

277:                                              ; preds = %232
  %278 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43
  %279 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %280 = icmp eq %class.ConstantUnion* %279, null
  br i1 %280, label %287, label %281

281:                                              ; preds = %277
  %282 = shl i64 %43, 32
  %283 = ashr exact i64 %282, 32
  %284 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %279, i64 %283
  %285 = bitcast %class.ConstantUnion* %284 to float*
  %286 = load float, float* %285, align 4
  br label %287

287:                                              ; preds = %277, %281
  %288 = phi float [ %286, %281 ], [ 0.000000e+00, %277 ]
  %289 = fcmp une float %288, 0.000000e+00
  %290 = zext i1 %289 to i8
  %291 = bitcast %class.ConstantUnion* %278 to i8*
  store i8 %290, i8* %291, align 4
  br label %312

292:                                              ; preds = %232
  %293 = getelementptr inbounds %class.TIntermediate, %class.TIntermediate* %0, i64 0, i32 0
  %294 = load %class.TInfoSink*, %class.TInfoSink** %293, align 8
  %295 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %294, i64 0, i32 0
  %296 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 0, i32 1
  %297 = bitcast %struct.TSourceLoc* %296 to i64*
  %298 = load i64, i64* %297, align 4
  %299 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 0, i32 1, i32 2
  %300 = bitcast i32* %299 to i64*
  %301 = load i64, i64* %300, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %295, i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.96, i64 0, i64 0), i64 %298, i64 %301) #10
  br label %350

302:                                              ; preds = %42
  %303 = getelementptr inbounds %class.TIntermediate, %class.TIntermediate* %0, i64 0, i32 0
  %304 = load %class.TInfoSink*, %class.TInfoSink** %303, align 8
  %305 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %304, i64 0, i32 0
  %306 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 0, i32 1
  %307 = bitcast %struct.TSourceLoc* %306 to i64*
  %308 = load i64, i64* %307, align 4
  %309 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 0, i32 1, i32 2
  %310 = bitcast i32* %309 to i64*
  %311 = load i64, i64* %310, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %305, i32 4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.97, i64 0, i64 0), i64 %308, i64 %311) #10
  br label %350

312:                                              ; preds = %97, %83, %68, %55, %157, %144, %131, %120, %218, %205, %192, %181, %287, %273, %257, %243
  %313 = phi i8 [ 1, %97 ], [ 1, %83 ], [ 1, %68 ], [ 1, %55 ], [ 2, %157 ], [ 2, %144 ], [ 2, %131 ], [ 2, %120 ], [ 3, %218 ], [ 3, %205 ], [ 3, %192 ], [ 3, %181 ], [ 4, %287 ], [ 4, %273 ], [ 4, %257 ], [ 4, %243 ]
  %314 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %28, i64 %43, i32 1
  store i8 %313, i8* %314, align 4
  %315 = add nuw i64 %43, 1
  %316 = icmp eq i64 %315, %21
  br i1 %316, label %317, label %42

317:                                              ; preds = %312, %20, %38
  %318 = getelementptr inbounds [26 x i8], [26 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %318)
  %319 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %319)
  %320 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 1, i32 1
  %321 = load i8, i8* %320, align 1
  %322 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 1, i32 3
  %323 = load i8, i8* %322, align 1
  %324 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 1, i32 4
  %325 = load i8, i8* %324, align 4
  %326 = load i8, i8* %7, align 1, !range !2
  %327 = getelementptr inbounds [26 x i8], [26 x i8]* %4, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %327, i8 0, i64 24, i1 false)
  %328 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %328, i8 0, i64 16, i1 false)
  %329 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %2, i64 0, i32 0, i32 0, i32 1
  %330 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #10
  %331 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %330, i64 96) #10
  %332 = bitcast i8* %331 to i32 (...)***
  %333 = getelementptr inbounds i8, i8* %331, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %333, i8 0, i64 16, i1 false) #11
  %334 = getelementptr inbounds i8, i8* %331, i64 24
  store i8 %1, i8* %334, align 8
  %335 = getelementptr inbounds i8, i8* %331, i64 25
  store i8 %321, i8* %335, align 1
  %336 = getelementptr inbounds i8, i8* %331, i64 26
  %337 = getelementptr inbounds i8, i8* %331, i64 27
  store i8 %323, i8* %337, align 1
  %338 = getelementptr inbounds i8, i8* %331, i64 28
  store i8 %325, i8* %338, align 4
  %339 = getelementptr inbounds i8, i8* %331, i64 29
  store i8 %326, i8* %339, align 1
  %340 = getelementptr inbounds i8, i8* %331, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %340, i8* nonnull align 2 %318, i64 26, i1 false)
  %341 = getelementptr inbounds i8, i8* %331, i64 56
  %342 = bitcast i8* %341 to i64*
  store i64 4294967295, i64* %342, align 8
  %343 = getelementptr inbounds i8, i8* %331, i64 64
  %344 = bitcast i8* %343 to i32*
  store i32 0, i32* %344, align 8
  %345 = getelementptr inbounds i8, i8* %331, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %345, i8* nonnull align 4 %319, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV20TIntermConstantUnion, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %332, align 8
  %346 = getelementptr inbounds i8, i8* %331, i64 88
  %347 = bitcast i8* %346 to i8**
  store i8* %27, i8** %347, align 8
  store i8 2, i8* %336, align 2
  %348 = bitcast %struct.TSourceLoc* %329 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %333, i8* align 4 %348, i64 16, i1 false) #11
  %349 = bitcast i8* %331 to %class.TIntermTyped*
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %318)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %319)
  br label %350

350:                                              ; preds = %100, %161, %222, %292, %302, %317
  %351 = phi %class.TIntermTyped* [ %349, %317 ], [ null, %302 ], [ null, %292 ], [ null, %222 ], [ null, %161 ], [ null, %100 ]
  ret %class.TIntermTyped* %351
}

; Function Attrs: optsize
declare %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #4

; Function Attrs: optsize
declare i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator*, i64) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(32)) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %3, label %33, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %8, label %23, label %13

13:                                               ; preds = %4
  br i1 %12, label %17, label %14

14:                                               ; preds = %13
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  br label %33

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = tail call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %0, i8* %19, i64 %21) #12
  br label %33

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %29 = zext i8 %11 to i64
  %30 = select i1 %12, i8* %25, i8* %28
  %31 = select i1 %12, i64 %27, i64 %29
  %32 = tail call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %0, i8* %30, i64 %31) #12
  br label %33

33:                                               ; preds = %14, %2, %23, %17
  %34 = phi %"class.std::__1::basic_string"* [ %32, %23 ], [ %22, %17 ], [ %0, %2 ], [ %0, %14 ]
  ret %"class.std::__1::basic_string"* %34
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermTyped* @_ZN12TIntermTyped10getAsTypedEv(%class.TIntermTyped*) unnamed_addr #2 comdat align 2 {
  ret %class.TIntermTyped* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermConstantUnion* @_ZN11TIntermNode18getAsConstantUnionEv(%class.TIntermNode*) unnamed_addr #2 comdat align 2 {
  ret %class.TIntermConstantUnion* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermAggregate* @_ZN11TIntermNode14getAsAggregateEv(%class.TIntermNode*) unnamed_addr #2 comdat align 2 {
  ret %class.TIntermAggregate* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermBinary* @_ZN11TIntermNode15getAsBinaryNodeEv(%class.TIntermNode*) unnamed_addr #2 comdat align 2 {
  ret %class.TIntermBinary* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermUnary* @_ZN11TIntermNode14getAsUnaryNodeEv(%class.TIntermNode*) unnamed_addr #2 comdat align 2 {
  ret %class.TIntermUnary* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermSelection* @_ZN11TIntermNode18getAsSelectionNodeEv(%class.TIntermNode*) unnamed_addr #2 comdat align 2 {
  ret %class.TIntermSelection* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermSymbol* @_ZN11TIntermNode15getAsSymbolNodeEv(%class.TIntermNode*) unnamed_addr #2 comdat align 2 {
  ret %class.TIntermSymbol* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermLoop* @_ZN11TIntermNode13getAsLoopNodeEv(%class.TIntermNode*) unnamed_addr #2 comdat align 2 {
  ret %class.TIntermLoop* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermBranch* @_ZN11TIntermNode15getAsBranchNodeEv(%class.TIntermNode*) unnamed_addr #2 comdat align 2 {
  ret %class.TIntermBranch* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermSwitch* @_ZN11TIntermNode15getAsSwitchNodeEv(%class.TIntermNode*) unnamed_addr #2 comdat align 2 {
  ret %class.TIntermSwitch* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermCase* @_ZN11TIntermNode13getAsCaseNodeEv(%class.TIntermNode*) unnamed_addr #2 comdat align 2 {
  ret %class.TIntermCase* null
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN12TIntermTypedD0Ev(%class.TIntermTyped*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN12TIntermTyped7setTypeERK5TType(%class.TIntermTyped*, %class.TType* dereferenceable(64)) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 64, i1 false)
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = icmp ult i64 %2, 23
  br i1 %4, label %5, label %14

5:                                                ; preds = %3
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %7 = trunc i64 %2 to i8
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 %7, i8* %9, align 1
  %10 = icmp eq i64 %2, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %1, i64 %2, i1 false) #11
  br label %12

12:                                               ; preds = %5, %11
  %13 = getelementptr inbounds i8, i8* %6, i64 %2
  store i8 0, i8* %13, align 1
  br label %20

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i64
  %19 = add i64 %2, -22
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE21__grow_by_and_replaceEmmmmmmPKc(%"class.std::__1::basic_string"* %0, i64 22, i64 %19, i64 %18, i64 0, i64 %18, i64 %2, i8* %1) #12
  br label %20

20:                                               ; preds = %14, %12
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 9223372036854775807
  %7 = icmp ugt i64 %6, %2
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %11, align 8
  %12 = icmp eq i64 %2, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %1, i64 %2, i1 false) #11
  br label %14

14:                                               ; preds = %8, %13
  %15 = getelementptr inbounds i8, i8* %10, i64 %2
  store i8 0, i8* %15, align 1
  br label %22

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i64 %6, -1
  %20 = add i64 %2, 1
  %21 = sub i64 %20, %6
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE21__grow_by_and_replaceEmmmmmmPKc(%"class.std::__1::basic_string"* %0, i64 %19, i64 %21, i64 %18, i64 0, i64 %18, i64 %2, i8* %1) #12
  br label %22

22:                                               ; preds = %16, %14
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE21__grow_by_and_replaceEmmmmmmPKc(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i8*) local_unnamed_addr #2 comdat align 2 {
  %9 = sub i64 -18, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i8* [ %20, %18 ], [ %22, %21 ]
  %25 = icmp ult i64 %1, 9223372036854775783
  br i1 %25, label %26, label %35

26:                                               ; preds = %23
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 23
  br i1 %31, label %35, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 16
  %34 = and i64 %33, -16
  br label %35

35:                                               ; preds = %23, %32, %26
  %36 = phi i64 [ %34, %32 ], [ 23, %26 ], [ -17, %23 ]
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %class.TPoolAllocator*, %class.TPoolAllocator** %37, align 8
  %39 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %38, i64 %36) #10
  %40 = icmp eq i64 %4, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %35
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %24, i64 %4, i1 false) #11
  br label %42

42:                                               ; preds = %35, %41
  %43 = icmp eq i64 %6, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds i8, i8* %39, i64 %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %7, i64 %6, i1 false) #11
  br label %46

46:                                               ; preds = %42, %44
  %47 = sub i64 %3, %5
  %48 = sub i64 %47, %4
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds i8, i8* %39, i64 %4
  %52 = getelementptr inbounds i8, i8* %51, i64 %6
  %53 = getelementptr inbounds i8, i8* %24, i64 %4
  %54 = getelementptr inbounds i8, i8* %53, i64 %5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %54, i64 %48, i1 false) #11
  br label %55

55:                                               ; preds = %50, %46
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %39, i8** %56, align 8
  %57 = or i64 %36, -9223372036854775808
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %57, i64* %58, align 8
  %59 = add i64 %47, %6
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %39, i64 %59
  store i8 0, i8* %61, align 1
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN11TIntermNodeD2Ev(%class.TIntermNode*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5TTypeeqERKS_(%class.TType*, %class.TType* dereferenceable(64)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8
  %5 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %4, %6
  br i1 %7, label %8, label %40

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 1
  %11 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 3
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %10, %12
  br i1 %13, label %14, label %40

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %16 = load i8, i8* %15, align 4
  %17 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 4
  %18 = load i8, i8* %17, align 4
  %19 = icmp eq i8 %16, %18
  br i1 %19, label %20, label %40

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 5
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 5
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = icmp eq i8 %22, %24
  br i1 %25, label %26, label %40

26:                                               ; preds = %20
  %27 = icmp eq i8 %22, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 6
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 6
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %26, %28
  %35 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 11
  %36 = load %class.TStructure*, %class.TStructure** %35, align 8
  %37 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 11
  %38 = load %class.TStructure*, %class.TStructure** %37, align 8
  %39 = icmp eq %class.TStructure* %36, %38
  br label %40

40:                                               ; preds = %34, %28, %20, %14, %8, %2
  %41 = phi i1 [ false, %28 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %39, %34 ]
  ret i1 %41
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNK5TType14getElementSizeEv(%class.TType*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  switch i8 %3, label %15 [
    i8 37, label %4
    i8 38, label %6
  ]

4:                                                ; preds = %1
  %5 = tail call i64 @_ZNK5TType13getStructSizeEv(%class.TType* %0) #10
  br label %25

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 9
  %8 = bitcast %class.TInterfaceBlock** %7 to %class.TFieldListCollection**
  %9 = load %class.TFieldListCollection*, %class.TFieldListCollection** %8, align 8
  %10 = getelementptr inbounds %class.TFieldListCollection, %class.TFieldListCollection* %9, i64 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %6
  %14 = tail call i64 @_ZNK20TFieldListCollection19calculateObjectSizeEv(%class.TFieldListCollection* %9) #10
  store i64 %14, i64* %10, align 8
  br label %25

15:                                               ; preds = %1
  %16 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %17 = load i8, i8* %16, align 4
  %18 = icmp ugt i8 %17, 1
  %19 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  br i1 %18, label %22, label %25

22:                                               ; preds = %15
  %23 = zext i8 %17 to i64
  %24 = mul nuw nsw i64 %21, %23
  br label %25

25:                                               ; preds = %13, %6, %15, %22, %4
  %26 = phi i64 [ %5, %4 ], [ %24, %22 ], [ %21, %15 ], [ %14, %13 ], [ %11, %6 ]
  ret i64 %26
}

; Function Attrs: optsize
declare i64 @_ZNK5TType13getStructSizeEv(%class.TType*) local_unnamed_addr #4

; Function Attrs: optsize
declare i64 @_ZNK20TFieldListCollection19calculateObjectSizeEv(%class.TFieldListCollection*) local_unnamed_addr #4

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

attributes #0 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind optsize }
attributes #11 = { nounwind }
attributes #12 = { optsize }
attributes #13 = { noreturn nounwind optsize }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
