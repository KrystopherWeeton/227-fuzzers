; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_memory_agent.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_memory_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.301" }
%"struct.std::__1::atomic.301" = type { %"struct.std::__1::__atomic_base.302" }
%"struct.std::__1::__atomic_base.302" = type { %"struct.std::__1::__atomic_base.303" }
%"struct.std::__1::__atomic_base.303" = type { %"struct.std::__1::__cxx_atomic_impl.304" }
%"struct.std::__1::__cxx_atomic_impl.304" = type { %"struct.std::__1::__cxx_atomic_base_impl.305" }
%"struct.std::__1::__cxx_atomic_base_impl.305" = type { i32 }
%"class.blink::InspectorMemoryAgent" = type { %"class.blink::InspectorBaseAgent", %"class.blink::Member.233", i32, [4 x i8], %"class.WTF::HashMap.239", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Memory::Backend", %"class.blink::Member", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.227" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::Memory::Backend" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.7", %"class.blink::HeapListHashSet.18", %"class.blink::HeapListHashSet.29", %"class.blink::HeapListHashSet.40", %"class.blink::HeapListHashSet.51", %"class.blink::HeapListHashSet.62", %"class.blink::HeapListHashSet.73", %"class.blink::HeapListHashSet.84", %"class.blink::HeapListHashSet.95", %"class.blink::HeapListHashSet.106", %"class.blink::HeapListHashSet.117", %"class.blink::HeapListHashSet.128", %"class.blink::HeapListHashSet.139", %"class.blink::HeapListHashSet.150", %"class.blink::HeapListHashSet.161", %"class.blink::HeapListHashSet.172", %"class.blink::HeapListHashSet.183", %"class.blink::HeapListHashSet.194", %"class.blink::HeapListHashSet.205" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable", %"class.blink::Member.5", %"class.blink::Member.5", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable" = type <{ %"class.blink::Member.5"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.385", %"class.blink::Member.5", %"class.blink::Member.5" }
%"class.blink::Member.385" = type { %"class.blink::MemberBase.386" }
%"class.blink::MemberBase.386" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.7" = type { %"class.WTF::ListHashSet.base.17", [7 x i8] }
%"class.WTF::ListHashSet.base.17" = type <{ %"class.WTF::HashTable.12", %"class.blink::Member.14", %"class.blink::Member.14", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.12" = type <{ %"class.blink::Member.14"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::HeapListHashSetNode.16"* }
%"class.blink::HeapListHashSetNode.16" = type { %"class.blink::Member.2104", %"class.blink::Member.14", %"class.blink::Member.14" }
%"class.blink::Member.2104" = type { %"class.blink::MemberBase.2105" }
%"class.blink::MemberBase.2105" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.18" = type { %"class.WTF::ListHashSet.base.28", [7 x i8] }
%"class.WTF::ListHashSet.base.28" = type <{ %"class.WTF::HashTable.23", %"class.blink::Member.25", %"class.blink::Member.25", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.23" = type <{ %"class.blink::Member.25"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HeapListHashSetNode.27"* }
%"class.blink::HeapListHashSetNode.27" = type { %"class.blink::Member.2100", %"class.blink::Member.25", %"class.blink::Member.25" }
%"class.blink::Member.2100" = type { %"class.blink::MemberBase.2101" }
%"class.blink::MemberBase.2101" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.29" = type { %"class.WTF::ListHashSet.base.39", [7 x i8] }
%"class.WTF::ListHashSet.base.39" = type <{ %"class.WTF::HashTable.34", %"class.blink::Member.36", %"class.blink::Member.36", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.34" = type <{ %"class.blink::Member.36"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::HeapListHashSetNode.38"* }
%"class.blink::HeapListHashSetNode.38" = type { %"class.blink::Member.2096", %"class.blink::Member.36", %"class.blink::Member.36" }
%"class.blink::Member.2096" = type { %"class.blink::MemberBase.2097" }
%"class.blink::MemberBase.2097" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.40" = type { %"class.WTF::ListHashSet.base.50", [7 x i8] }
%"class.WTF::ListHashSet.base.50" = type <{ %"class.WTF::HashTable.45", %"class.blink::Member.47", %"class.blink::Member.47", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.45" = type <{ %"class.blink::Member.47"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::HeapListHashSetNode.49"* }
%"class.blink::HeapListHashSetNode.49" = type { %"class.blink::Member.2092", %"class.blink::Member.47", %"class.blink::Member.47" }
%"class.blink::Member.2092" = type { %"class.blink::MemberBase.2093" }
%"class.blink::MemberBase.2093" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.51" = type { %"class.WTF::ListHashSet.base.61", [7 x i8] }
%"class.WTF::ListHashSet.base.61" = type <{ %"class.WTF::HashTable.56", %"class.blink::Member.58", %"class.blink::Member.58", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.56" = type <{ %"class.blink::Member.58"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::HeapListHashSetNode.60"* }
%"class.blink::HeapListHashSetNode.60" = type { %"class.blink::Member.2088", %"class.blink::Member.58", %"class.blink::Member.58" }
%"class.blink::Member.2088" = type { %"class.blink::MemberBase.2089" }
%"class.blink::MemberBase.2089" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.62" = type { %"class.WTF::ListHashSet.base.72", [7 x i8] }
%"class.WTF::ListHashSet.base.72" = type <{ %"class.WTF::HashTable.67", %"class.blink::Member.69", %"class.blink::Member.69", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.67" = type <{ %"class.blink::Member.69"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::HeapListHashSetNode.71"* }
%"class.blink::HeapListHashSetNode.71" = type { %"class.blink::Member.2084", %"class.blink::Member.69", %"class.blink::Member.69" }
%"class.blink::Member.2084" = type { %"class.blink::MemberBase.2085" }
%"class.blink::MemberBase.2085" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.73" = type { %"class.WTF::ListHashSet.base.83", [7 x i8] }
%"class.WTF::ListHashSet.base.83" = type <{ %"class.WTF::HashTable.78", %"class.blink::Member.80", %"class.blink::Member.80", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.78" = type <{ %"class.blink::Member.80"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::HeapListHashSetNode.82"* }
%"class.blink::HeapListHashSetNode.82" = type { %"class.blink::Member.2080", %"class.blink::Member.80", %"class.blink::Member.80" }
%"class.blink::Member.2080" = type { %"class.blink::MemberBase.2081" }
%"class.blink::MemberBase.2081" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.84" = type { %"class.WTF::ListHashSet.base.94", [7 x i8] }
%"class.WTF::ListHashSet.base.94" = type <{ %"class.WTF::HashTable.89", %"class.blink::Member.91", %"class.blink::Member.91", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.89" = type <{ %"class.blink::Member.91"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::HeapListHashSetNode.93"* }
%"class.blink::HeapListHashSetNode.93" = type { %"class.blink::Member.2076", %"class.blink::Member.91", %"class.blink::Member.91" }
%"class.blink::Member.2076" = type { %"class.blink::MemberBase.2077" }
%"class.blink::MemberBase.2077" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.95" = type { %"class.WTF::ListHashSet.base.105", [7 x i8] }
%"class.WTF::ListHashSet.base.105" = type <{ %"class.WTF::HashTable.100", %"class.blink::Member.102", %"class.blink::Member.102", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.100" = type <{ %"class.blink::Member.102"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::HeapListHashSetNode.104"* }
%"class.blink::HeapListHashSetNode.104" = type { %"class.blink::Member.2072", %"class.blink::Member.102", %"class.blink::Member.102" }
%"class.blink::Member.2072" = type { %"class.blink::MemberBase.2073" }
%"class.blink::MemberBase.2073" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.106" = type { %"class.WTF::ListHashSet.base.116", [7 x i8] }
%"class.WTF::ListHashSet.base.116" = type <{ %"class.WTF::HashTable.111", %"class.blink::Member.113", %"class.blink::Member.113", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.111" = type <{ %"class.blink::Member.113"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::HeapListHashSetNode.115"* }
%"class.blink::HeapListHashSetNode.115" = type { %"class.blink::Member.389", %"class.blink::Member.113", %"class.blink::Member.113" }
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::HeapListHashSet.117" = type { %"class.WTF::ListHashSet.base.127", [7 x i8] }
%"class.WTF::ListHashSet.base.127" = type <{ %"class.WTF::HashTable.122", %"class.blink::Member.124", %"class.blink::Member.124", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.122" = type <{ %"class.blink::Member.124"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::HeapListHashSetNode.126"* }
%"class.blink::HeapListHashSetNode.126" = type { %"class.blink::Member.2066", %"class.blink::Member.124", %"class.blink::Member.124" }
%"class.blink::Member.2066" = type { %"class.blink::MemberBase.2067" }
%"class.blink::MemberBase.2067" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.128" = type { %"class.WTF::ListHashSet.base.138", [7 x i8] }
%"class.WTF::ListHashSet.base.138" = type <{ %"class.WTF::HashTable.133", %"class.blink::Member.135", %"class.blink::Member.135", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.133" = type <{ %"class.blink::Member.135"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::HeapListHashSetNode.137"* }
%"class.blink::HeapListHashSetNode.137" = type { %"class.blink::Member.2062", %"class.blink::Member.135", %"class.blink::Member.135" }
%"class.blink::Member.2062" = type { %"class.blink::MemberBase.2063" }
%"class.blink::MemberBase.2063" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.139" = type { %"class.WTF::ListHashSet.base.149", [7 x i8] }
%"class.WTF::ListHashSet.base.149" = type <{ %"class.WTF::HashTable.144", %"class.blink::Member.146", %"class.blink::Member.146", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.144" = type <{ %"class.blink::Member.146"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::HeapListHashSetNode.148"* }
%"class.blink::HeapListHashSetNode.148" = type { %"class.blink::Member.2058", %"class.blink::Member.146", %"class.blink::Member.146" }
%"class.blink::Member.2058" = type { %"class.blink::MemberBase.2059" }
%"class.blink::MemberBase.2059" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.150" = type { %"class.WTF::ListHashSet.base.160", [7 x i8] }
%"class.WTF::ListHashSet.base.160" = type <{ %"class.WTF::HashTable.155", %"class.blink::Member.157", %"class.blink::Member.157", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.155" = type <{ %"class.blink::Member.157"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::HeapListHashSetNode.159"* }
%"class.blink::HeapListHashSetNode.159" = type { %"class.blink::Member.2054", %"class.blink::Member.157", %"class.blink::Member.157" }
%"class.blink::Member.2054" = type { %"class.blink::MemberBase.2055" }
%"class.blink::MemberBase.2055" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.161" = type { %"class.WTF::ListHashSet.base.171", [7 x i8] }
%"class.WTF::ListHashSet.base.171" = type <{ %"class.WTF::HashTable.166", %"class.blink::Member.168", %"class.blink::Member.168", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.166" = type <{ %"class.blink::Member.168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::HeapListHashSetNode.170"* }
%"class.blink::HeapListHashSetNode.170" = type { %"class.blink::Member.2050", %"class.blink::Member.168", %"class.blink::Member.168" }
%"class.blink::Member.2050" = type { %"class.blink::MemberBase.2051" }
%"class.blink::MemberBase.2051" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.172" = type { %"class.WTF::ListHashSet.base.182", [7 x i8] }
%"class.WTF::ListHashSet.base.182" = type <{ %"class.WTF::HashTable.177", %"class.blink::Member.179", %"class.blink::Member.179", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.177" = type <{ %"class.blink::Member.179"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.179" = type { %"class.blink::MemberBase.180" }
%"class.blink::MemberBase.180" = type { %"class.blink::HeapListHashSetNode.181"* }
%"class.blink::HeapListHashSetNode.181" = type { %"class.blink::Member.2046", %"class.blink::Member.179", %"class.blink::Member.179" }
%"class.blink::Member.2046" = type { %"class.blink::MemberBase.2047" }
%"class.blink::MemberBase.2047" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.183" = type { %"class.WTF::ListHashSet.base.193", [7 x i8] }
%"class.WTF::ListHashSet.base.193" = type <{ %"class.WTF::HashTable.188", %"class.blink::Member.190", %"class.blink::Member.190", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.188" = type <{ %"class.blink::Member.190"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::HeapListHashSetNode.192"* }
%"class.blink::HeapListHashSetNode.192" = type { %"class.blink::Member.2042", %"class.blink::Member.190", %"class.blink::Member.190" }
%"class.blink::Member.2042" = type { %"class.blink::MemberBase.2043" }
%"class.blink::MemberBase.2043" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.194" = type { %"class.WTF::ListHashSet.base.204", [7 x i8] }
%"class.WTF::ListHashSet.base.204" = type <{ %"class.WTF::HashTable.199", %"class.blink::Member.201", %"class.blink::Member.201", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.199" = type <{ %"class.blink::Member.201"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::HeapListHashSetNode.203"* }
%"class.blink::HeapListHashSetNode.203" = type { %"class.blink::Member.391", %"class.blink::Member.201", %"class.blink::Member.201" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::HeapListHashSet.205" = type { %"class.WTF::ListHashSet.base.215", [7 x i8] }
%"class.WTF::ListHashSet.base.215" = type <{ %"class.WTF::HashTable.210", %"class.blink::Member.212", %"class.blink::Member.212", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.210" = type <{ %"class.blink::Member.212"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::HeapListHashSetNode.214"* }
%"class.blink::HeapListHashSetNode.214" = type { %"class.blink::Member.383", %"class.blink::Member.212", %"class.blink::Member.212" }
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr", %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.217" }
%"class.WTF::HashTable.217" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.WTF::Vector.219" }
%"class.WTF::Vector.219" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.WTF::VectorBufferBase.221" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::protocol::Memory::Frontend"* }
%"class.blink::protocol::Memory::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::InspectedFrames"* }
%"class.WTF::HashMap.239" = type { %"class.WTF::HashTable.240" }
%"class.WTF::HashTable.240" = type <{ %"struct.WTF::KeyValuePair.243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.243" = type { i8*, %"class.WTF::String" }
%"class.blink::InspectorAgentState::SimpleField" = type { %"class.blink::InspectorAgentState::Field", i32, i32 }
%"class.blink::InspectedFrames" = type { i32 (...)**, %"class.blink::Member.237" }
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.292", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.316", %"class.blink::FrameLoader", %"class.blink::Member.343", %"class.blink::Member.345", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::Member.378", %"class.blink::Member.380", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member", %class.scoped_refptr.382, %"class.blink::Member.383", %"class.blink::Member.385", %"class.blink::Member.387", %"class.blink::Member.389", %"class.blink::Member.391", %"class.blink::Member.393", %"class.blink::Member.395", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.399", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback", %"class.std::__1::unique_ptr.423", %"class.absl::optional.276", i32, [4 x i8], %"class.std::__1::unique_ptr.429", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.437", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.442", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.447", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::Member.454", %"class.blink::Member.456", %"class.mojo::StructPtr.459", %"class.blink::Member.467", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.469", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.248", %"class.blink::Member.250", %"class.blink::Member.252", i8, i32, i8, i32, %"class.blink::Member.254", %"class.blink::Member.258", %"class.blink::FrameLifecycle", %"class.blink::Member.246", %"class.blink::Member.246", %"class.blink::Member.246", %"class.blink::Member.246", %"class.blink::Member.246", %"class.blink::Member.246", %"class.blink::Member.237", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.263", i8, %"class.base::UnguessableToken", %"class.absl::optional.265", %"class.absl::optional.276", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.246", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.1924", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.246", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.1938", %"class.blink::Member.1942", %"class.blink::Member.1944", %"class.blink::Member.1946", %"class.blink::Member.1948", %"class.blink::Member.1950", %"class.blink::Member.1952", %"class.blink::Member.1954", %"class.blink::HeapObserverSet.1956", %"class.blink::Member.1964", %"class.blink::Member.1966", %"class.blink::Member.1968", %"class.blink::Member.1970", %"class.blink::Member.1972", %"class.blink::Member.1974", %"class.blink::Member.1976", %"class.blink::Member.1978", %"class.blink::Member.1980", %"class.blink::Member.1982", %"class.blink::Member.1984", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2009", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2016", %"class.blink::Member.248", %"class.blink::Member.248", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2024", %"class.std::__1::unique_ptr.2030", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.1924" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1925" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.1925" = type { %"class.WTF::HashMap.1928" }
%"class.WTF::HashMap.1928" = type { %"class.WTF::HashTable.1929" }
%"class.WTF::HashTable.1929" = type <{ %"struct.WTF::KeyValuePair.1931"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1931" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.1932" }
%"class.std::__1::unique_ptr.1932" = type { %"class.std::__1::__compressed_pair.1933" }
%"class.std::__1::__compressed_pair.1933" = type { %"struct.std::__1::__compressed_pair_elem.1934" }
%"struct.std::__1::__compressed_pair_elem.1934" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.1938" = type { %"class.blink::MemberBase.1939" }
%"class.blink::MemberBase.1939" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.248", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.1942" = type { %"class.blink::MemberBase.1943" }
%"class.blink::MemberBase.1943" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.1944" = type { %"class.blink::MemberBase.1945" }
%"class.blink::MemberBase.1945" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.1946" = type { %"class.blink::MemberBase.1947" }
%"class.blink::MemberBase.1947" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.1948" = type { %"class.blink::MemberBase.1949" }
%"class.blink::MemberBase.1949" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.1950" = type { %"class.blink::MemberBase.1951" }
%"class.blink::MemberBase.1951" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.1952" = type { %"class.blink::MemberBase.1953" }
%"class.blink::MemberBase.1953" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.1954" = type { %"class.blink::MemberBase.1955" }
%"class.blink::MemberBase.1955" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.1956" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1957" }
%"class.blink::HeapHashSet.1957" = type { %"class.WTF::HashSet.1960" }
%"class.WTF::HashSet.1960" = type { %"class.WTF::HashTable.1961" }
%"class.WTF::HashTable.1961" = type <{ %"class.blink::WeakMember.1963"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1963" = type opaque
%"class.blink::Member.1964" = type { %"class.blink::MemberBase.1965" }
%"class.blink::MemberBase.1965" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.1966" = type { %"class.blink::MemberBase.1967" }
%"class.blink::MemberBase.1967" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.1968" = type { %"class.blink::MemberBase.1969" }
%"class.blink::MemberBase.1969" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.1970" = type { %"class.blink::MemberBase.1971" }
%"class.blink::MemberBase.1971" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.1972" = type { %"class.blink::MemberBase.1973" }
%"class.blink::MemberBase.1973" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.1974" = type { %"class.blink::MemberBase.1975" }
%"class.blink::MemberBase.1975" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.1976" = type { %"class.blink::MemberBase.1977" }
%"class.blink::MemberBase.1977" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.1978" = type { %"class.blink::MemberBase.1979" }
%"class.blink::MemberBase.1979" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.1980" = type { %"class.blink::MemberBase.1981" }
%"class.blink::MemberBase.1981" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.1982" = type { %"class.blink::MemberBase.1983" }
%"class.blink::MemberBase.1983" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.1984" = type { %"class.blink::MemberBase.1985" }
%"class.blink::MemberBase.1985" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.1986" }
%"class.WTF::Deque.1986" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1989" }
%"class.WTF::VectorBuffer.1989" = type { %"class.WTF::VectorBufferBase.1990" }
%"class.WTF::VectorBufferBase.1990" = type { %"class.std::__1::unique_ptr.1991"*, i32, i32 }
%"class.std::__1::unique_ptr.1991" = type { %"class.std::__1::__compressed_pair.1992" }
%"class.std::__1::__compressed_pair.1992" = type { %"struct.std::__1::__compressed_pair_elem.1993" }
%"struct.std::__1::__compressed_pair_elem.1993" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.1997", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.1997" = type { %"class.std::__1::__bitset.1998" }
%"class.std::__1::__bitset.1998" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1999" }
%"class.absl::optional.1999" = type { %"class.absl::optional_internal::optional_data.2000" }
%"class.absl::optional_internal::optional_data.2000" = type { %"class.absl::optional_internal::optional_data_base.2001" }
%"class.absl::optional_internal::optional_data_base.2001" = type { %"class.absl::optional_internal::optional_data_dtor_base.2002" }
%"class.absl::optional_internal::optional_data_dtor_base.2002" = type { i8, %union.anon.2003 }
%union.anon.2003 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2004", i64, %"class.absl::optional.1139", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.1502" }
%"class.blink::WebPrivatePtr.1502" = type { i8* }
%"class.absl::optional.2004" = type { %"class.absl::optional_internal::optional_data.2005" }
%"class.absl::optional_internal::optional_data.2005" = type { %"class.absl::optional_internal::optional_data_base.2006" }
%"class.absl::optional_internal::optional_data_base.2006" = type { %"class.absl::optional_internal::optional_data_dtor_base.2007" }
%"class.absl::optional_internal::optional_data_dtor_base.2007" = type { i8, %union.anon.2008 }
%union.anon.2008 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.1139" = type { %"class.absl::optional_internal::optional_data.1140" }
%"class.absl::optional_internal::optional_data.1140" = type { %"class.absl::optional_internal::optional_data_base.1141" }
%"class.absl::optional_internal::optional_data_base.1141" = type { %"class.absl::optional_internal::optional_data_dtor_base.1142" }
%"class.absl::optional_internal::optional_data_dtor_base.1142" = type { i8, %union.anon.1143 }
%union.anon.1143 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr.2009" = type { %"class.std::__1::unique_ptr.2010" }
%"class.std::__1::unique_ptr.2010" = type { %"class.std::__1::__compressed_pair.2011" }
%"class.std::__1::__compressed_pair.2011" = type { %"struct.std::__1::__compressed_pair_elem.2012" }
%"struct.std::__1::__compressed_pair_elem.2012" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2016" = type { %"class.WTF::HashSet.2019" }
%"class.WTF::HashSet.2019" = type { %"class.WTF::HashTable.2020" }
%"class.WTF::HashTable.2020" = type <{ %"class.blink::WeakMember.2022"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2022" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2023" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2023" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1812 }
%class.scoped_refptr.1812 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.301" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.306" }
%"struct.std::__1::atomic.306" = type { %"struct.std::__1::__atomic_base.307" }
%"struct.std::__1::__atomic_base.307" = type { %"struct.std::__1::__atomic_base.308" }
%"struct.std::__1::__atomic_base.308" = type { %"struct.std::__1::__cxx_atomic_impl.309" }
%"struct.std::__1::__cxx_atomic_impl.309" = type { %"struct.std::__1::__cxx_atomic_base_impl.310" }
%"struct.std::__1::__cxx_atomic_base_impl.310" = type { i8 }
%"class.std::__1::unique_ptr.2024" = type { %"class.std::__1::__compressed_pair.2025" }
%"class.std::__1::__compressed_pair.2025" = type { %"struct.std::__1::__compressed_pair_elem.2026" }
%"struct.std::__1::__compressed_pair_elem.2026" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2030" = type { %"class.std::__1::__compressed_pair.2031" }
%"class.std::__1::__compressed_pair.2031" = type { %"struct.std::__1::__compressed_pair_elem.2032" }
%"struct.std::__1::__compressed_pair_elem.2032" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.252" = type { %"class.blink::MemberBase.253" }
%"class.blink::MemberBase.253" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.254" = type { %"class.blink::MemberBase.255" }
%"class.blink::MemberBase.255" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::Member.258" = type { %"class.blink::MemberBase.259" }
%"class.blink::MemberBase.259" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.246" = type { %"class.blink::MemberBase.247" }
%"class.blink::MemberBase.247" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.246", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.260" }
%"struct.std::__1::pair" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::pair"* }
%"class.blink::Member.263" = type { %"class.blink::MemberBase.264" }
%"class.blink::MemberBase.264" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.265" = type { %"class.absl::optional_internal::optional_data.266" }
%"class.absl::optional_internal::optional_data.266" = type { %"class.absl::optional_internal::optional_data_base.267" }
%"class.absl::optional_internal::optional_data_base.267" = type { %"class.absl::optional_internal::optional_data_dtor_base.268" }
%"class.absl::optional_internal::optional_data_dtor_base.268" = type { i8, %union.anon.269 }
%union.anon.269 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.272 }
%union.anon.272 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.284" }
%"class.WTF::HashTable.284" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.288" }
%"class.WTF::HashMap.288" = type { %"class.WTF::HashTable.289" }
%"class.WTF::HashTable.289" = type <{ %"struct.WTF::KeyValuePair.291"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.291" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.295", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.295" = type { %"class.WTF::HashTable.296" }
%"class.WTF::HashTable.296" = type <{ %"struct.WTF::KeyValuePair.299"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.299" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.300 }
%class.scoped_refptr.300 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.314" }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2339" }
%"class.blink::WeakMember.2339" = type { %"class.blink::MemberBase.2340" }
%"class.blink::MemberBase.2340" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.992" }
%"class.blink::HeapObserverSet.992" = type { i32, [4 x i8], %"class.blink::HeapHashSet.993" }
%"class.blink::HeapHashSet.993" = type { %"class.WTF::HashSet.996" }
%"class.WTF::HashSet.996" = type { %"class.WTF::HashTable.997" }
%"class.WTF::HashTable.997" = type <{ %"class.blink::WeakMember.999"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.999" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.1137", %"class.base::RepeatingCallback.2341", i64, %"class.std::__1::map.2342", i8*, i64, %"class.base::WeakPtrFactory.2351" }
%"class.base::RepeatingCallback.1137" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.421 }
%class.scoped_refptr.421 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.422", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.422" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.2341" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2342" = type { %"class.std::__1::__tree.2343" }
%"class.std::__1::__tree.2343" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2344", %"class.std::__1::__compressed_pair.2348" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2344" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2348" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { i64 }
%"class.base::WeakPtrFactory.2351" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.316" = type { %"class.WTF::HashSet.319" }
%"class.WTF::HashSet.319" = type { %"class.WTF::HashTable.320" }
%"class.WTF::HashTable.320" = type <{ %"class.blink::WeakMember.322"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.322" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.237", %"class.blink::Member.323", %"class.blink::Member.325", %"class.std::__1::unique_ptr.327", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.339" }
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.325" = type { %"class.blink::MemberBase.326" }
%"class.blink::MemberBase.326" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.1492", %"class.blink::Member.1497", %"class.std::__1::unique_ptr.1499", %"class.std::__1::unique_ptr.1082", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.1681, %"class.WTF::AtomicString", i32, %"class.absl::optional.1579", %class.scoped_refptr.1016, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1544", i8, %"class.absl::optional.1551", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.237", %"class.blink::Member.1682", %"class.blink::Member.538", %"class.blink::Member.1753", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote", %class.scoped_refptr.1008, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.1859", %"class.std::__1::unique_ptr.1556", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.1861", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.1866, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.1880, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.1881", %"class.blink::Member.1896", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.1909", %"class.WTF::Vector.1114", i8, i8, i8, %"class.blink::WebVector.1670", %"class.blink::WebVector.1670", %"class.mojo::Remote.1914" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.1492" = type { %"class.WTF::VectorBuffer.1493" }
%"class.WTF::VectorBuffer.1493" = type { %"class.WTF::VectorBufferBase.1494" }
%"class.WTF::VectorBufferBase.1494" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.1499" = type { %"class.std::__1::__compressed_pair.1500" }
%"class.std::__1::__compressed_pair.1500" = type { %"struct.std::__1::__compressed_pair_elem.1501" }
%"struct.std::__1::__compressed_pair_elem.1501" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.1503", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.1544", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.1551", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.1556", %"class.base::UnguessableToken", %"class.blink::WebVector.1562", %"class.base::TickClock"*, %"class.blink::WebVector.1571", %"class.absl::optional.1579", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.1584", %"class.blink::WebVector", i8, %"class.blink::WebVector.1603", i8, %"class.std::__1::unique_ptr.1611", %"class.blink::WebVector.1670", %"class.blink::WebVector.1670" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector.1503" = type { %"class.std::__1::vector.1504" }
%"class.std::__1::vector.1504" = type { %"class.std::__1::__vector_base.1505" }
%"class.std::__1::__vector_base.1505" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.1539" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.1539" = type { %"struct.std::__1::__compressed_pair_elem.1540" }
%"struct.std::__1::__compressed_pair_elem.1540" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.1506", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.1506" = type { %"class.std::__1::__compressed_pair.1507" }
%"class.std::__1::__compressed_pair.1507" = type { %"struct.std::__1::__compressed_pair_elem.1508" }
%"struct.std::__1::__compressed_pair_elem.1508" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.1550", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.1550" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.1562" = type { %"class.std::__1::vector.1563" }
%"class.std::__1::vector.1563" = type { %"class.std::__1::__vector_base.1564" }
%"class.std::__1::__vector_base.1564" = type { %"class.std::__1::unique_ptr.1565"*, %"class.std::__1::unique_ptr.1565"*, %"class.std::__1::__compressed_pair.1566" }
%"class.std::__1::unique_ptr.1565" = type opaque
%"class.std::__1::__compressed_pair.1566" = type { %"struct.std::__1::__compressed_pair_elem.1567" }
%"struct.std::__1::__compressed_pair_elem.1567" = type { %"class.std::__1::unique_ptr.1565"* }
%"class.blink::WebVector.1571" = type { %"class.std::__1::vector.1572" }
%"class.std::__1::vector.1572" = type { %"class.std::__1::__vector_base.1573" }
%"class.std::__1::__vector_base.1573" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1574" }
%"class.std::__1::__compressed_pair.1574" = type { %"struct.std::__1::__compressed_pair_elem.1575" }
%"struct.std::__1::__compressed_pair_elem.1575" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.1584" = type { %"class.absl::optional_internal::optional_data.1585" }
%"class.absl::optional_internal::optional_data.1585" = type { %"class.absl::optional_internal::optional_data_base.1586" }
%"class.absl::optional_internal::optional_data_base.1586" = type { %"class.absl::optional_internal::optional_data_dtor_base.1587" }
%"class.absl::optional_internal::optional_data_dtor_base.1587" = type { i8, [7 x i8], %union.anon.1588 }
%union.anon.1588 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.404" }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.1603" = type { %"class.std::__1::vector.1604" }
%"class.std::__1::vector.1604" = type { %"class.std::__1::__vector_base.1605" }
%"class.std::__1::__vector_base.1605" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1606" }
%"class.std::__1::__compressed_pair.1606" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"struct.std::__1::__compressed_pair_elem.1607" = type { i32* }
%"class.std::__1::unique_ptr.1611" = type { %"class.std::__1::__compressed_pair.1612" }
%"class.std::__1::__compressed_pair.1612" = type { %"struct.std::__1::__compressed_pair_elem.1613" }
%"struct.std::__1::__compressed_pair_elem.1613" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.1614" }
%"class.blink::WebVector.1614" = type { %"class.std::__1::vector.1615" }
%"class.std::__1::vector.1615" = type { %"class.std::__1::__vector_base.1616" }
%"class.std::__1::__vector_base.1616" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.1662" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.1617", %"class.blink::WebVector.1625", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector", i32, [4 x i8], %"class.absl::optional.1657", %"class.blink::WebVector" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.1617" = type { %"class.std::__1::vector.1618" }
%"class.std::__1::vector.1618" = type { %"class.std::__1::__vector_base.1619" }
%"class.std::__1::__vector_base.1619" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.1620" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.1620" = type { %"struct.std::__1::__compressed_pair_elem.1621" }
%"struct.std::__1::__compressed_pair_elem.1621" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.1625" = type { %"class.std::__1::vector.1626" }
%"class.std::__1::vector.1626" = type { %"class.std::__1::__vector_base.1627" }
%"class.std::__1::__vector_base.1627" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.1652" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.1628", %"class.blink::WebVector", %"class.blink::WebVector.1636", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.1628" = type { %"class.std::__1::vector.1629" }
%"class.std::__1::vector.1629" = type { %"class.std::__1::__vector_base.1630" }
%"class.std::__1::__vector_base.1630" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.1631" }
%"class.std::__1::__compressed_pair.1631" = type { %"struct.std::__1::__compressed_pair_elem.1632" }
%"struct.std::__1::__compressed_pair_elem.1632" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.1636" = type { %"class.std::__1::vector.1637" }
%"class.std::__1::vector.1637" = type { %"class.std::__1::__vector_base.1638" }
%"class.std::__1::__vector_base.1638" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.1647" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.1639" }
%"class.blink::WebVector.1639" = type { %"class.std::__1::vector.1640" }
%"class.std::__1::vector.1640" = type { %"class.std::__1::__vector_base.1641" }
%"class.std::__1::__vector_base.1641" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1642" }
%"class.std::__1::__compressed_pair.1642" = type { %"struct.std::__1::__compressed_pair_elem.1643" }
%"struct.std::__1::__compressed_pair_elem.1643" = type { i8* }
%"class.std::__1::__compressed_pair.1647" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"struct.std::__1::__compressed_pair_elem.1648" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.1652" = type { %"struct.std::__1::__compressed_pair_elem.1653" }
%"struct.std::__1::__compressed_pair_elem.1653" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.1657" = type { %"class.absl::optional_internal::optional_data.1658" }
%"class.absl::optional_internal::optional_data.1658" = type { %"class.absl::optional_internal::optional_data_base.1659" }
%"class.absl::optional_internal::optional_data_base.1659" = type { %"class.absl::optional_internal::optional_data_dtor_base.1660" }
%"class.absl::optional_internal::optional_data_dtor_base.1660" = type { i8, [7 x i8], %union.anon.1661 }
%union.anon.1661 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1662" = type { %"struct.std::__1::__compressed_pair_elem.1663" }
%"struct.std::__1::__compressed_pair_elem.1663" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1156 }
%class.scoped_refptr.1156 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1082" = type { %"class.std::__1::__compressed_pair.1083" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.1085", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.1085" = type { %"class.std::__1::unique_ptr.1086" }
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1089" }
%"class.WTF::Vector.1089" = type { %"class.WTF::VectorBuffer.1090" }
%"class.WTF::VectorBuffer.1090" = type { %"class.WTF::VectorBufferBase.1091" }
%"class.WTF::VectorBufferBase.1091" = type { %"class.mojo::StructPtr.1092"*, i32, i32 }
%"class.mojo::StructPtr.1092" = type { %"class.std::__1::unique_ptr.1093" }
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1096", %"class.WTF::HashMap.1103", %"class.WTF::HashMap.1108", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1113", i8, %"class.WTF::Vector.1114", i32, %"class.mojo::StructPtr.1119", %"class.WTF::Vector.1114" }
%"class.mojo::StructPtr.1096" = type { %"class.std::__1::unique_ptr.1097" }
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1103" = type { %"class.WTF::HashTable.1104" }
%"class.WTF::HashTable.1104" = type <{ %"struct.WTF::KeyValuePair.1107"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1107" = type opaque
%"class.WTF::HashMap.1108" = type { %"class.WTF::HashTable.1109" }
%"class.WTF::HashTable.1109" = type <{ %"struct.WTF::KeyValuePair.1112"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1112" = type opaque
%"class.mojo::InlinedStructPtr.1113" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1119" = type { %"class.std::__1::unique_ptr.1120" }
%"class.std::__1::unique_ptr.1120" = type { %"class.std::__1::__compressed_pair.1121" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.1114", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1204" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1134", i32 }>
%"class.std::__1::unique_ptr.1134" = type { %"class.std::__1::__compressed_pair.1135" }
%"class.std::__1::__compressed_pair.1135" = type { %"struct.std::__1::__compressed_pair_elem.1136" }
%"struct.std::__1::__compressed_pair_elem.1136" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.1137", %"class.base::OnceCallback.1138", %"class.absl::optional.1139", %"class.absl::optional.1144", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1157", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1179", %"class.std::__1::map.1190", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1199", i8, %class.scoped_refptr.1149, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1200" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::OnceCallback.1138" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1144" = type { %"class.absl::optional_internal::optional_data.1145" }
%"class.absl::optional_internal::optional_data.1145" = type { %"class.absl::optional_internal::optional_data_base.1146" }
%"class.absl::optional_internal::optional_data_base.1146" = type { %"class.absl::optional_internal::optional_data_dtor_base.1147" }
%"class.absl::optional_internal::optional_data_dtor_base.1147" = type { i8, %union.anon.1148 }
%union.anon.1148 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1149, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1150" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.1150" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1155 }
%class.scoped_refptr.1155 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1217", [4 x i8], %"class.base::RepeatingCallback.1137", %class.scoped_refptr.1149, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1217" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1157" = type { %"class.std::__1::__compressed_pair.1158" }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.1159" }
%"struct.std::__1::__compressed_pair_elem.1159" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1160", %class.scoped_refptr.1161 }
%"class.base::RepeatingCallback.1160" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1161 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1162", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1162" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1166", %"class.std::__1::unique_ptr.1172", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1178" }
%"class.std::__1::unique_ptr.1166" = type { %"class.std::__1::__compressed_pair.1167" }
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.1168" }
%"struct.std::__1::__compressed_pair_elem.1168" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1172" = type { %"class.std::__1::__compressed_pair.1173" }
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.1174" }
%"struct.std::__1::__compressed_pair_elem.1174" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1178" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1179" = type { %"class.std::__1::__tree.1180" }
%"class.std::__1::__tree.1180" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1181", %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.std::__1::map.1190" = type { %"class.std::__1::__tree.1191" }
%"class.std::__1::__tree.1191" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1192", %"class.std::__1::__compressed_pair.1196" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1199" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1149 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.757" }>
%"class.base::RefCountedThreadSafe.757" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1200" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1204" = type { %"class.std::__1::__compressed_pair.1205" }
%"class.std::__1::__compressed_pair.1205" = type { %"struct.std::__1::__compressed_pair_elem.1206" }
%"struct.std::__1::__compressed_pair_elem.1206" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%class.scoped_refptr.1681 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.1579" = type { %"class.absl::optional_internal::optional_data.1580" }
%"class.absl::optional_internal::optional_data.1580" = type { %"class.absl::optional_internal::optional_data_base.1581" }
%"class.absl::optional_internal::optional_data_base.1581" = type { %"class.absl::optional_internal::optional_data_dtor_base.1582" }
%"class.absl::optional_internal::optional_data_dtor_base.1582" = type { i8, %union.anon.1583 }
%union.anon.1583 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector", %"class.blink::WebString", %"class.blink::WebVector", %"class.blink::WebVector" }
%class.scoped_refptr.1016 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1009", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1011", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1016 }
%"class.WTF::RefCounted.1009" = type { %"class.base::RefCounted.1010" }
%"class.base::RefCounted.1010" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.1011" = type { %"class.absl::optional_internal::optional_data.1012" }
%"class.absl::optional_internal::optional_data.1012" = type { %"class.absl::optional_internal::optional_data_base.1013" }
%"class.absl::optional_internal::optional_data_base.1013" = type { %"class.absl::optional_internal::optional_data_dtor_base.1014" }
%"class.absl::optional_internal::optional_data_dtor_base.1014" = type { i8, %union.anon.1015 }
%union.anon.1015 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1544" = type { %"class.std::__1::__compressed_pair.1545" }
%"class.std::__1::__compressed_pair.1545" = type { %"struct.std::__1::__compressed_pair_elem.1546" }
%"struct.std::__1::__compressed_pair_elem.1546" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.1551" = type { %"class.absl::optional_internal::optional_data.1552" }
%"class.absl::optional_internal::optional_data.1552" = type { %"class.absl::optional_internal::optional_data_base.1553" }
%"class.absl::optional_internal::optional_data_base.1553" = type { %"class.absl::optional_internal::optional_data_dtor_base.1554" }
%"class.absl::optional_internal::optional_data_dtor_base.1554" = type { i8, %union.anon.1555 }
%union.anon.1555 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.1589", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.1589" = type { %"class.std::__1::__vector_base.1590" }
%"class.std::__1::__vector_base.1590" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.1598" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.1591", i8, i8, [6 x i8] }>
%"class.std::__1::vector.1591" = type { %"class.std::__1::__vector_base.1592" }
%"class.std::__1::__vector_base.1592" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.1593" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1011" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.1593" = type { %"struct.std::__1::__compressed_pair_elem.1594" }
%"struct.std::__1::__compressed_pair_elem.1594" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.1598" = type { %"struct.std::__1::__compressed_pair_elem.1599" }
%"struct.std::__1::__compressed_pair_elem.1599" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.1682" = type { %"class.blink::MemberBase.1683" }
%"class.blink::MemberBase.1683" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.1114", %"class.blink::Member.1686", %"class.absl::optional.1688", i64, i64, i32, %class.scoped_refptr.1693, %class.scoped_refptr.1681, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.1693 }
%"class.blink::Member.1686" = type { %"class.blink::MemberBase.1687" }
%"class.blink::MemberBase.1687" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.1688" = type { %"class.absl::optional_internal::optional_data.1689" }
%"class.absl::optional_internal::optional_data.1689" = type { %"class.absl::optional_internal::optional_data_base.1690" }
%"class.absl::optional_internal::optional_data_base.1690" = type { %"class.absl::optional_internal::optional_data_dtor_base.1691" }
%"class.absl::optional_internal::optional_data_dtor_base.1691" = type { i8, %union.anon.1692 }
%union.anon.1692 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.1693 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.1695", i64, %"class.WTF::Vector.1698", %"class.WTF::Vector.1703", %"class.WTF::Vector.1709", %"class.WTF::Vector.1727", %class.scoped_refptr.1008, %"class.WTF::HashMap.1733", %"class.WTF::Vector.1738", %"class.WTF::Vector.1698", %"class.WTF::Vector.1743", %"class.WTF::HashMap.1748", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1694" }
%"class.base::RefCountedThreadSafe.1694" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1695" = type { %"class.std::__1::__compressed_pair.1696" }
%"class.std::__1::__compressed_pair.1696" = type { %"struct.std::__1::__compressed_pair_elem.1643" }
%"class.WTF::Vector.1703" = type { %"class.WTF::VectorBuffer.1704" }
%"class.WTF::VectorBuffer.1704" = type { %"class.WTF::VectorBufferBase.1705", [8 x i8] }
%"class.WTF::VectorBufferBase.1705" = type { %class.scoped_refptr.1706*, i32, i32 }
%class.scoped_refptr.1706 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1709" = type { %"class.WTF::VectorBuffer.1710" }
%"class.WTF::VectorBuffer.1710" = type { %"class.WTF::VectorBufferBase.1711" }
%"class.WTF::VectorBufferBase.1711" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1713", %"class.std::__1::unique_ptr.1719" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1712 }
%class.scoped_refptr.1712 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1713" = type { %"class.std::__1::__compressed_pair.1714" }
%"class.std::__1::__compressed_pair.1714" = type { %"struct.std::__1::__compressed_pair_elem.1715" }
%"struct.std::__1::__compressed_pair_elem.1715" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1719" = type { %"class.std::__1::__compressed_pair.1720" }
%"class.std::__1::__compressed_pair.1720" = type { %"struct.std::__1::__compressed_pair_elem.1721" }
%"struct.std::__1::__compressed_pair_elem.1721" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1727" = type { %"class.WTF::VectorBuffer.1728" }
%"class.WTF::VectorBuffer.1728" = type { %"class.WTF::VectorBufferBase.1729" }
%"class.WTF::VectorBufferBase.1729" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1730", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1730" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1733" = type { %"class.WTF::HashTable.1734" }
%"class.WTF::HashTable.1734" = type <{ %"struct.WTF::KeyValuePair.1737"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1737" = type opaque
%"class.WTF::Vector.1738" = type { %"class.WTF::VectorBuffer.1739" }
%"class.WTF::VectorBuffer.1739" = type { %"class.WTF::VectorBufferBase.1740" }
%"class.WTF::VectorBufferBase.1740" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1698" = type { %"class.WTF::VectorBuffer.1699" }
%"class.WTF::VectorBuffer.1699" = type { %"class.WTF::VectorBufferBase.1700", [16 x i8] }
%"class.WTF::VectorBufferBase.1700" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1743" = type { %"class.WTF::VectorBuffer.1744" }
%"class.WTF::VectorBuffer.1744" = type { %"class.WTF::VectorBufferBase.1745" }
%"class.WTF::VectorBufferBase.1745" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.1756", i32 }
%"class.mojo::ScopedHandleBase.1756" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.WTF::HashMap.1748" = type { %"class.WTF::HashTable.1749" }
%"class.WTF::HashTable.1749" = type <{ %"struct.WTF::KeyValuePair.1752"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1752" = type { i8**, %"class.std::__1::unique_ptr.2327" }
%"class.std::__1::unique_ptr.2327" = type { %"class.std::__1::__compressed_pair.2328" }
%"class.std::__1::__compressed_pair.2328" = type { %"struct.std::__1::__compressed_pair_elem.2329" }
%"struct.std::__1::__compressed_pair_elem.2329" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1753" = type { %"class.blink::MemberBase.1754" }
%"class.blink::MemberBase.1754" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1515", %class.scoped_refptr.1529, %class.scoped_refptr.1530, %"struct.blink::CacheControlHeader", %"class.absl::optional.1139", %"class.absl::optional.1461", %"class.absl::optional.1461", %"class.absl::optional.1461", i64, %"class.blink::KURL", %"class.WTF::Vector.1492", %"class.WTF::String", %"class.WTF::Vector.1114", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.276", %"class.WTF::Vector.1114", %"class.blink::KURL", %"class.absl::optional.1531" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1509" }
%"class.WTF::HashMap.1509" = type { %"class.WTF::HashTable.1510" }
%"class.WTF::HashTable.1510" = type <{ %"struct.WTF::KeyValuePair.1513"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1513" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.1514", i8 }
%"struct.std::__1::array.1514" = type { [16 x i8] }
%"class.absl::optional.1515" = type { %"class.absl::optional_internal::optional_data.1516" }
%"class.absl::optional_internal::optional_data.1516" = type { %"class.absl::optional_internal::optional_data_base.1517" }
%"class.absl::optional_internal::optional_data_base.1517" = type { %"class.absl::optional_internal::optional_data_dtor_base.1518" }
%"class.absl::optional_internal::optional_data_dtor_base.1518" = type { i8, %union.anon.1519 }
%union.anon.1519 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.1114", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1520", %"class.WTF::Vector.1524" }
%"class.WTF::Vector.1520" = type { %"class.WTF::VectorBuffer.1521" }
%"class.WTF::VectorBuffer.1521" = type { %"class.WTF::VectorBufferBase.371" }
%"class.WTF::VectorBufferBase.371" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1524" = type { %"class.WTF::VectorBuffer.1525" }
%"class.WTF::VectorBuffer.1525" = type { %"class.WTF::VectorBufferBase.1526" }
%"class.WTF::VectorBufferBase.1526" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1529 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1530 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.1139", %"class.absl::optional.1139" }
%"class.absl::optional.1461" = type { %"class.absl::optional_internal::optional_data.1462" }
%"class.absl::optional_internal::optional_data.1462" = type { %"class.absl::optional_internal::optional_data_base.1463" }
%"class.absl::optional_internal::optional_data_base.1463" = type { %"class.absl::optional_internal::optional_data_dtor_base.1464" }
%"class.absl::optional_internal::optional_data_dtor_base.1464" = type { i8, %union.anon.1465 }
%union.anon.1465 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1454" }
%"class.base::time_internal::TimeBase.1454" = type { i64 }
%"class.absl::optional.1531" = type { %"class.absl::optional_internal::optional_data.1532" }
%"class.absl::optional_internal::optional_data.1532" = type { %"class.absl::optional_internal::optional_data_base.1533" }
%"class.absl::optional_internal::optional_data_base.1533" = type { %"class.absl::optional_internal::optional_data_dtor_base.1534" }
%"class.absl::optional_internal::optional_data_dtor_base.1534" = type { i8, %union.anon.1535 }
%union.anon.1535 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1848" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1755, %"class.std::__1::unique_ptr.1134", %"class.mojo::ScopedHandleBase.1756", [4 x i8], %class.scoped_refptr.1149, i32 }>
%class.scoped_refptr.1755 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1149, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase.1756", [4 x i8], %"class.absl::optional.1814", %"class.absl::optional.1819", %"class.absl::optional.1773", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1839", i8, [7 x i8], %class.scoped_refptr.1149, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1162" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase.1756", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1149, %"class.std::__1::unique_ptr.1757", %"class.absl::optional.1767", %"struct.std::__1::atomic.750", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1773", %"class.std::__1::unique_ptr.1778", i8, i64, %class.scoped_refptr.1811, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.1813" }
%"class.std::__1::unique_ptr.1757" = type { %"class.std::__1::__compressed_pair.1758" }
%"class.std::__1::__compressed_pair.1758" = type { %"struct.std::__1::__compressed_pair_elem.1759" }
%"struct.std::__1::__compressed_pair_elem.1759" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1149, i8, %"class.mojo::ScopedHandleBase.1760", %class.scoped_refptr.1761, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1762", i8*, %"class.base::WeakPtrFactory.1763" }
%"class.mojo::ScopedHandleBase.1760" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1761 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.1762" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1763" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1767" = type { %"class.absl::optional_internal::optional_data.1768" }
%"class.absl::optional_internal::optional_data.1768" = type { %"class.absl::optional_internal::optional_data_base.1769" }
%"class.absl::optional_internal::optional_data_base.1769" = type { %"class.absl::optional_internal::optional_data_dtor_base.1770" }
%"class.absl::optional_internal::optional_data_dtor_base.1770" = type { i8, %union.anon.1771 }
%union.anon.1771 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1772", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1772" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.750" = type { %"struct.std::__1::__atomic_base.751" }
%"struct.std::__1::__atomic_base.751" = type { %"struct.std::__1::__cxx_atomic_impl.752" }
%"struct.std::__1::__cxx_atomic_impl.752" = type { %"struct.std::__1::__cxx_atomic_base_impl.753" }
%"struct.std::__1::__cxx_atomic_base_impl.753" = type { i8 }
%"class.std::__1::unique_ptr.1778" = type { %"class.std::__1::__compressed_pair.1779" }
%"class.std::__1::__compressed_pair.1779" = type { %"struct.std::__1::__compressed_pair_elem.1780" }
%"struct.std::__1::__compressed_pair_elem.1780" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1781", i8, i64, %class.scoped_refptr.1782, %class.scoped_refptr.1807 }
%"class.base::RepeatingCallback.1781" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1782 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1783", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1785", %"class.std::__1::map.1796", i8, [7 x i8] }>
%"class.base::RefCounted.1783" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1784 }
%class.scoped_refptr.1784 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1785" = type { %"class.std::__1::__tree.1786" }
%"class.std::__1::__tree.1786" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1787", %"class.std::__1::__compressed_pair.1791" }
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"class.std::__1::__compressed_pair.1791" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.std::__1::map.1796" = type { %"class.std::__1::__tree.1797" }
%"class.std::__1::__tree.1797" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1798", %"class.std::__1::__compressed_pair.1802" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"class.std::__1::__compressed_pair.1802" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%class.scoped_refptr.1807 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.1811 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1813" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1814" = type { %"class.absl::optional_internal::optional_data.1815" }
%"class.absl::optional_internal::optional_data.1815" = type { %"class.absl::optional_internal::optional_data_base.1816" }
%"class.absl::optional_internal::optional_data_base.1816" = type { %"class.absl::optional_internal::optional_data_dtor_base.1817" }
%"class.absl::optional_internal::optional_data_dtor_base.1817" = type { i8, %union.anon.1818 }
%union.anon.1818 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1819" = type { %"class.absl::optional_internal::optional_data.1820" }
%"class.absl::optional_internal::optional_data.1820" = type { %"class.absl::optional_internal::optional_data_base.1821" }
%"class.absl::optional_internal::optional_data_base.1821" = type { %"class.absl::optional_internal::optional_data_dtor_base.1822" }
%"class.absl::optional_internal::optional_data_dtor_base.1822" = type { i8, [7 x i8], %union.anon.1823 }
%union.anon.1823 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1773" = type { %"class.absl::optional_internal::optional_data.1774" }
%"class.absl::optional_internal::optional_data.1774" = type { %"class.absl::optional_internal::optional_data_base.1775" }
%"class.absl::optional_internal::optional_data_base.1775" = type { %"class.absl::optional_internal::optional_data_dtor_base.1776" }
%"class.absl::optional_internal::optional_data_dtor_base.1776" = type { i8, %union.anon.1777 }
%union.anon.1777 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1824 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1824 = type { %"class.std::__1::map.1827" }
%"class.std::__1::map.1827" = type { %"class.std::__1::__tree.1828" }
%"class.std::__1::__tree.1828" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1829", %"class.std::__1::__compressed_pair.1833" }
%"class.std::__1::__compressed_pair.1829" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"class.std::__1::__compressed_pair.1833" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1838"*, i64 }
%"class.std::__1::unique_ptr.1838" = type opaque
%"class.std::__1::map.1839" = type { %"class.std::__1::__tree.1840" }
%"class.std::__1::__tree.1840" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1841", %"class.std::__1::__compressed_pair.1845" }
%"class.std::__1::__compressed_pair.1841" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"class.std::__1::__compressed_pair.1845" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.std::__1::unique_ptr.1848" = type { %"class.std::__1::__compressed_pair.1849" }
%"class.std::__1::__compressed_pair.1849" = type { %"struct.std::__1::__compressed_pair_elem.1850" }
%"struct.std::__1::__compressed_pair_elem.1850" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%class.scoped_refptr.1008 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.1139", %"class.absl::optional.1139", %"class.absl::optional.1139", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.1854", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.325" }
%"class.WTF::Vector.1854" = type { %"class.WTF::VectorBuffer.1855" }
%"class.WTF::VectorBuffer.1855" = type { %"class.WTF::VectorBufferBase.1856" }
%"class.WTF::VectorBufferBase.1856" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.1859" = type { %"class.blink::MemberBase.1860" }
%"class.blink::MemberBase.1860" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.1556" = type { %"class.std::__1::__compressed_pair.1557" }
%"class.std::__1::__compressed_pair.1557" = type { %"struct.std::__1::__compressed_pair_elem.1558" }
%"struct.std::__1::__compressed_pair_elem.1558" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.1044" }
%"class.base::flat_map.1044" = type { %"class.base::internal::flat_tree.1045" }
%"class.base::internal::flat_tree.1045" = type { %"class.std::__1::vector.1046" }
%"class.std::__1::vector.1046" = type { %"class.std::__1::__vector_base.1047" }
%"class.std::__1::__vector_base.1047" = type { %"struct.std::__1::pair.1048"*, %"struct.std::__1::pair.1048"*, %"class.std::__1::__compressed_pair.1049" }
%"struct.std::__1::pair.1048" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"struct.std::__1::pair.1048"* }
%"class.WTF::Vector.1861" = type { %"class.WTF::VectorBuffer.1862" }
%"class.WTF::VectorBuffer.1862" = type { %"class.WTF::VectorBufferBase.1863" }
%"class.WTF::VectorBufferBase.1863" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.1866 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1867", i64, %"class.WTF::Vector.1869", %"class.WTF::Vector.1874" }
%"class.WTF::RefCounted.1867" = type { %"class.base::RefCounted.1868" }
%"class.base::RefCounted.1868" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1869" = type { %"class.WTF::VectorBuffer.1870" }
%"class.WTF::VectorBuffer.1870" = type { %"class.WTF::VectorBufferBase.1871" }
%"class.WTF::VectorBufferBase.1871" = type { i8*, i32, i32 }
%"class.WTF::Vector.1874" = type { %"class.WTF::VectorBuffer.1875" }
%"class.WTF::VectorBuffer.1875" = type { %"class.WTF::VectorBufferBase.1876" }
%"class.WTF::VectorBufferBase.1876" = type { %"class.std::__1::unique_ptr.1877"*, i32, i32 }
%"class.std::__1::unique_ptr.1877" = type opaque
%class.scoped_refptr.1880 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.1881" = type { %"class.blink::MemberBase.1882" }
%"class.blink::MemberBase.1882" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.1885", %"class.std::__1::unique_ptr.1890", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.1885" = type { %"class.WTF::HashTable.1886" }
%"class.WTF::HashTable.1886" = type <{ %"struct.WTF::KeyValuePair.1889"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1889" = type { %"class.WTF::Vector.2399", %class.scoped_refptr.2403 }
%"class.WTF::Vector.2399" = type { %"class.WTF::VectorBuffer.2400" }
%"class.WTF::VectorBuffer.2400" = type { %"class.WTF::VectorBufferBase.221", [32 x i8] }
%class.scoped_refptr.2403 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2404", %"class.WTF::Vector.219", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2404" = type { %"class.base::RefCounted.2405" }
%"class.base::RefCounted.2405" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2406", i64, %"class.absl::optional.2411" }
%"class.std::__1::unique_ptr.2406" = type { %"class.std::__1::__compressed_pair.2407" }
%"class.std::__1::__compressed_pair.2407" = type { %"struct.std::__1::__compressed_pair_elem.1643" }
%"class.absl::optional.2411" = type { %"class.absl::optional_internal::optional_data.2412" }
%"class.absl::optional_internal::optional_data.2412" = type { %"class.absl::optional_internal::optional_data_base.2413" }
%"class.absl::optional_internal::optional_data_base.2413" = type { %"class.absl::optional_internal::optional_data_dtor_base.2414" }
%"class.absl::optional_internal::optional_data_dtor_base.2414" = type { i8, %union.anon.2415 }
%union.anon.2415 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2416", %"class.std::__1::unique_ptr.2417" }
%"class.mojo::ScopedHandleBase.2416" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2417" = type { %"class.std::__1::__compressed_pair.2418" }
%"class.std::__1::__compressed_pair.2418" = type { %"struct.std::__1::__compressed_pair_elem.2419" }
%"struct.std::__1::__compressed_pair_elem.2419" = type { i8* }
%"class.std::__1::unique_ptr.1890" = type { %"class.std::__1::__compressed_pair.1891" }
%"class.std::__1::__compressed_pair.1891" = type { %"struct.std::__1::__compressed_pair_elem.1892" }
%"struct.std::__1::__compressed_pair_elem.1892" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.1896" = type { %"class.blink::MemberBase.1897" }
%"class.blink::MemberBase.1897" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.330" }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::KURL"* }
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.1902" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.1898", %"class.std::__1::bitset.1898", %"class.std::__1::bitset.1900" }
%"class.std::__1::bitset.1898" = type { %"class.std::__1::__bitset.1899" }
%"class.std::__1::__bitset.1899" = type { [11 x i64] }
%"class.std::__1::bitset.1900" = type { %"class.std::__1::__bitset.1901" }
%"class.std::__1::__bitset.1901" = type { [2 x i64] }
%"class.blink::HeapHashSet.1902" = type { %"class.WTF::HashSet.1905" }
%"class.WTF::HashSet.1905" = type { %"class.WTF::HashTable.1906" }
%"class.WTF::HashTable.1906" = type <{ %"class.blink::Member.1908"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1908" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.1909" = type { %"class.WTF::VectorBuffer.1910" }
%"class.WTF::VectorBuffer.1910" = type { %"class.WTF::VectorBufferBase.1911" }
%"class.WTF::VectorBufferBase.1911" = type { i32*, i32, i32 }
%"class.WTF::Vector.1114" = type { %"class.WTF::VectorBuffer.1115" }
%"class.WTF::VectorBuffer.1115" = type { %"class.WTF::VectorBufferBase.1116" }
%"class.WTF::VectorBufferBase.1116" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::WebVector.1670" = type { %"class.std::__1::vector.1671" }
%"class.std::__1::vector.1671" = type { %"class.std::__1::__vector_base.1672" }
%"class.std::__1::__vector_base.1672" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.1673" }
%"class.std::__1::__compressed_pair.1673" = type { %"struct.std::__1::__compressed_pair_elem.1674" }
%"struct.std::__1::__compressed_pair_elem.1674" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.1914" = type { %"class.mojo::internal::InterfacePtrState.1915" }
%"class.mojo::internal::InterfacePtrState.1915" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1916" }
%"class.std::__1::unique_ptr.1916" = type { %"class.std::__1::__compressed_pair.1917" }
%"class.std::__1::__compressed_pair.1917" = type { %"struct.std::__1::__compressed_pair_elem.1918" }
%"struct.std::__1::__compressed_pair_elem.1918" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.339" = type { %"class.WTF::HashTable.340" }
%"class.WTF::HashTable.340" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1220", %"class.blink::Member.237", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1225", i8, i32, %"class.blink::Color", %"class.absl::optional.1227", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1232", %"class.blink::Member.1234", %"class.blink::Member.1234", %"class.std::__1::unique_ptr.1237", i32, [4 x i8], %"class.WTF::HashSet.1240", %"class.blink::Member.1247", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1249", %"class.blink::HeapHashSet.1256", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1264", i8, %"class.blink::Member.1270", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1282", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1296", i8, %"class.std::__1::unique_ptr.1302", %"class.std::__1::unique_ptr.1419", %"class.WTF::Vector.1425", i32, %class.scoped_refptr.1430, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1431", %"class.blink::Member.1433", %"class.blink::Member.1435", %"class.blink::HeapHashSet.1437", %"class.blink::HeapHashSet.1444", %"class.std::__1::unique_ptr.1451", %"class.std::__1::unique_ptr.1458", %"class.WTF::Vector.527" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1220" = type { %"class.WTF::HashTable.1221" }
%"class.WTF::HashTable.1221" = type <{ %class.scoped_refptr.1224*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1224 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1225" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1226", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.756, %"class.base::WeakPtrFactory.758" }
%class.scoped_refptr.756 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.758" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1226" = type { %"class.blink::MemberBase.344" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1227" = type { %"class.absl::optional_internal::optional_data.1228" }
%"class.absl::optional_internal::optional_data.1228" = type { %"class.absl::optional_internal::optional_data_base.1229" }
%"class.absl::optional_internal::optional_data_base.1229" = type { %"class.absl::optional_internal::optional_data_dtor_base.1230" }
%"class.absl::optional_internal::optional_data_dtor_base.1230" = type { i8, %union.anon.1231 }
%union.anon.1231 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::HeapHashSet.1236"* }
%"class.blink::HeapHashSet.1236" = type opaque
%"class.std::__1::unique_ptr.1237" = type { %"class.std::__1::__compressed_pair.1238" }
%"class.std::__1::__compressed_pair.1238" = type { %"struct.std::__1::__compressed_pair_elem.1239" }
%"struct.std::__1::__compressed_pair_elem.1239" = type { %"class.WTF::HashSet.1240"* }
%"class.WTF::HashSet.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1247" = type { %"class.blink::MemberBase.1248" }
%"class.blink::MemberBase.1248" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1249" = type { %"class.WTF::HashSet.1252" }
%"class.WTF::HashSet.1252" = type { %"class.WTF::HashTable.1253" }
%"class.WTF::HashTable.1253" = type <{ %"class.blink::Member.1255"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1255" = type opaque
%"class.blink::HeapHashSet.1256" = type { %"class.WTF::HashSet.1259" }
%"class.WTF::HashSet.1259" = type { %"class.WTF::HashTable.1260" }
%"class.WTF::HashTable.1260" = type <{ %"class.blink::Member.1262"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1262" = type { %"class.blink::MemberBase.1263" }
%"class.blink::MemberBase.1263" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1264" = type { %"class.std::__1::__compressed_pair.1265" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.1266" }
%"struct.std::__1::__compressed_pair_elem.1266" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1270" = type { %"class.blink::MemberBase.1271" }
%"class.blink::MemberBase.1271" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1274", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1274" = type { %"class.WTF::HashTable.1275" }
%"class.WTF::HashTable.1275" = type <{ %"struct.WTF::KeyValuePair.1277"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1277" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1278", i32, i32 }
%"class.WTF::Vector.1278" = type { %"class.WTF::VectorBuffer.1279" }
%"class.WTF::VectorBuffer.1279" = type { %"class.WTF::VectorBufferBase.1280" }
%"class.WTF::VectorBufferBase.1280" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1282" = type { %"class.WTF::LinkedHashSet.1285" }
%"class.WTF::LinkedHashSet.1285" = type { %"class.WTF::HashMap.1286", %"class.WTF::VectorBackedLinkedList.1290" }
%"class.WTF::HashMap.1286" = type { %"class.WTF::HashTable.1287" }
%"class.WTF::HashTable.1287" = type <{ %"struct.WTF::KeyValuePair.1289"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1289" = type opaque
%"class.WTF::VectorBackedLinkedList.1290" = type { %"class.WTF::Vector.1291", i32, i32 }
%"class.WTF::Vector.1291" = type { %"class.WTF::VectorBuffer.1292" }
%"class.WTF::VectorBuffer.1292" = type { %"class.WTF::VectorBufferBase.1293" }
%"class.WTF::VectorBufferBase.1293" = type { %"class.WTF::VectorBackedLinkedListNode.1294"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1294" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1296" = type { %"class.std::__1::__compressed_pair.1297" }
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1302" = type { %"class.std::__1::__compressed_pair.1303" }
%"class.std::__1::__compressed_pair.1303" = type { %"struct.std::__1::__compressed_pair_elem.1304" }
%"struct.std::__1::__compressed_pair_elem.1304" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1305, %class.scoped_refptr.1305, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1396", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1401", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1305 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1306", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1313" }
%"class.WTF::RefCounted.1306" = type { %"class.base::RefCounted.1307" }
%"class.base::RefCounted.1307" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1308", i32, [4 x i8] }>
%"class.WTF::Vector.1308" = type { %"class.WTF::VectorBuffer.1309" }
%"class.WTF::VectorBuffer.1309" = type { %"class.WTF::VectorBufferBase.1310" }
%"class.WTF::VectorBufferBase.1310" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1313" = type { %"class.WTF::VectorBuffer.1314" }
%"class.WTF::VectorBuffer.1314" = type { %"class.WTF::VectorBufferBase.1315" }
%"class.WTF::VectorBufferBase.1315" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1319", %"class.std::__1::unique_ptr.1368", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1316, %class.scoped_refptr.1317, %class.scoped_refptr.1318 }
%class.scoped_refptr.1316 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1332", i8, i8, %class.scoped_refptr.1316, i32, i32 }
%"class.WTF::RefCounted.1332" = type { %"class.base::RefCounted.1333" }
%"class.base::RefCounted.1333" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1317 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1487" }
%"class.blink::PaintPropertyNode.1487" = type { %"class.WTF::RefCounted.1488", i8, i8, %class.scoped_refptr.1317, i32, i32 }
%"class.WTF::RefCounted.1488" = type { %"class.base::RefCounted.1489" }
%"class.base::RefCounted.1489" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1318 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1484" }
%"class.blink::PaintPropertyNode.1484" = type { %"class.WTF::RefCounted.1485", i8, i8, %class.scoped_refptr.1318, i32, i32 }
%"class.WTF::RefCounted.1485" = type { %"class.base::RefCounted.1486" }
%"class.base::RefCounted.1486" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1319" = type { %"class.std::__1::__compressed_pair.1320" }
%"class.std::__1::__compressed_pair.1320" = type { %"struct.std::__1::__compressed_pair_elem.1321" }
%"struct.std::__1::__compressed_pair_elem.1321" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1322", %"class.WTF::Vector.1327", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1322" = type { %"class.WTF::VectorBuffer.1323" }
%"class.WTF::VectorBuffer.1323" = type { %"class.WTF::VectorBufferBase.1324" }
%"class.WTF::VectorBufferBase.1324" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1327" = type { %"class.WTF::VectorBuffer.1328" }
%"class.WTF::VectorBuffer.1328" = type { %"class.WTF::VectorBufferBase.1329" }
%"class.WTF::VectorBufferBase.1329" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1347" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1340, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1341", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1334" }
%"class.std::__1::unique_ptr.1334" = type { %"class.std::__1::__compressed_pair.1335" }
%"class.std::__1::__compressed_pair.1335" = type { %"struct.std::__1::__compressed_pair_elem.1336" }
%"struct.std::__1::__compressed_pair_elem.1336" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1340 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1469", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1469" = type { %"class.WTF::RefCounted.1470", i8, i8, %class.scoped_refptr.1340, i32, i32 }
%"class.WTF::RefCounted.1470" = type { %"class.base::RefCounted.1471" }
%"class.base::RefCounted.1471" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1472" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1472" = type { %"class.absl::optional_internal::optional_data.1473" }
%"class.absl::optional_internal::optional_data.1473" = type { %"class.absl::optional_internal::optional_data_base.1474" }
%"class.absl::optional_internal::optional_data_base.1474" = type { %"class.absl::optional_internal::optional_data_dtor_base.1475" }
%"class.absl::optional_internal::optional_data_dtor_base.1475" = type { i8, %union.anon.1476 }
%union.anon.1476 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1477", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1477" = type { %"class.std::__1::__vector_base.1478" }
%"class.std::__1::__vector_base.1478" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1479" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1479" = type { %"struct.std::__1::__compressed_pair_elem.1480" }
%"struct.std::__1::__compressed_pair_elem.1480" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1341" = type { %"class.std::__1::__compressed_pair.1342" }
%"class.std::__1::__compressed_pair.1342" = type { %"struct.std::__1::__compressed_pair_elem.1343" }
%"struct.std::__1::__compressed_pair_elem.1343" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1347" = type { %"class.std::__1::__compressed_pair.1348" }
%"class.std::__1::__compressed_pair.1348" = type { %"struct.std::__1::__compressed_pair_elem.1349" }
%"struct.std::__1::__compressed_pair_elem.1349" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1350", %"class.std::__1::unique_ptr.1356", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1356" = type { %"class.std::__1::__compressed_pair.1357" }
%"class.std::__1::__compressed_pair.1357" = type { %"struct.std::__1::__compressed_pair_elem.1358" }
%"struct.std::__1::__compressed_pair_elem.1358" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1368" = type { %"class.std::__1::__compressed_pair.1369" }
%"class.std::__1::__compressed_pair.1369" = type { %"struct.std::__1::__compressed_pair_elem.1370" }
%"struct.std::__1::__compressed_pair_elem.1370" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1371", %"class.absl::optional.1371" }
%"class.absl::optional.1371" = type { %"class.absl::optional_internal::optional_data.1372" }
%"class.absl::optional_internal::optional_data.1372" = type { %"class.absl::optional_internal::optional_data_base.1373" }
%"class.absl::optional_internal::optional_data_base.1373" = type { %"class.absl::optional_internal::optional_data_dtor_base.1374" }
%"class.absl::optional_internal::optional_data_dtor_base.1374" = type { i8, [3 x i8], %union.anon.1375 }
%union.anon.1375 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1313"*, %"class.absl::optional.1381", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1381" = type { %"class.absl::optional_internal::optional_data.1382" }
%"class.absl::optional_internal::optional_data.1382" = type { %"class.absl::optional_internal::optional_data_base.1383" }
%"class.absl::optional_internal::optional_data_base.1383" = type { %"class.absl::optional_internal::optional_data_dtor_base.1384" }
%"class.absl::optional_internal::optional_data_dtor_base.1384" = type { i8, %union.anon.1385 }
%union.anon.1385 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1386", %"class.WTF::Vector.1391" }
%"class.WTF::Vector.1386" = type { %"class.WTF::VectorBuffer.1387" }
%"class.WTF::VectorBuffer.1387" = type { %"class.WTF::VectorBufferBase.1388", [128 x i8] }
%"class.WTF::VectorBufferBase.1388" = type { i32*, i32, i32 }
%"class.WTF::Vector.1391" = type { %"class.WTF::VectorBuffer.1392" }
%"class.WTF::VectorBuffer.1392" = type { %"class.WTF::VectorBufferBase.1393", [128 x i8] }
%"class.WTF::VectorBufferBase.1393" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1396" = type { %"class.WTF::VectorBuffer.1397" }
%"class.WTF::VectorBuffer.1397" = type { %"class.WTF::VectorBufferBase.1398" }
%"class.WTF::VectorBufferBase.1398" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1401" = type { %"class.WTF::HashTable.1402" }
%"class.WTF::HashTable.1402" = type <{ %"struct.WTF::KeyValuePair.1405"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1405" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1406", %"class.WTF::Vector.1411" }
%"class.WTF::HashMap.1406" = type { %"class.WTF::HashTable.1407" }
%"class.WTF::HashTable.1407" = type <{ %"struct.WTF::KeyValuePair.1410"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1410" = type opaque
%"class.WTF::Vector.1411" = type { %"class.WTF::VectorBuffer.1412" }
%"class.WTF::VectorBuffer.1412" = type { %"class.WTF::VectorBufferBase.1413" }
%"class.WTF::VectorBufferBase.1413" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1419" = type { %"class.std::__1::__compressed_pair.1420" }
%"class.std::__1::__compressed_pair.1420" = type { %"struct.std::__1::__compressed_pair_elem.1421" }
%"struct.std::__1::__compressed_pair_elem.1421" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1425" = type { %"class.WTF::VectorBuffer.1426" }
%"class.WTF::VectorBuffer.1426" = type { %"class.WTF::VectorBufferBase.1427" }
%"class.WTF::VectorBufferBase.1427" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1430 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1431" = type { %"class.blink::MemberBase.1432" }
%"class.blink::MemberBase.1432" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1433" = type { %"class.blink::MemberBase.1434" }
%"class.blink::MemberBase.1434" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1435" = type { %"class.blink::MemberBase.1436" }
%"class.blink::MemberBase.1436" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1437" = type { %"class.WTF::HashSet.1440" }
%"class.WTF::HashSet.1440" = type { %"class.WTF::HashTable.1441" }
%"class.WTF::HashTable.1441" = type <{ %"class.blink::WeakMember.1443"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1443" = type opaque
%"class.blink::HeapHashSet.1444" = type { %"class.WTF::HashSet.1447" }
%"class.WTF::HashSet.1447" = type { %"class.WTF::HashTable.1448" }
%"class.WTF::HashTable.1448" = type <{ %"class.blink::WeakMember.1450"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1450" = type opaque
%"class.std::__1::unique_ptr.1451" = type { %"class.std::__1::__compressed_pair.1452" }
%"class.std::__1::__compressed_pair.1452" = type { %"struct.std::__1::__compressed_pair_elem.1453" }
%"struct.std::__1::__compressed_pair_elem.1453" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1458" = type { %"class.std::__1::__compressed_pair.1459" }
%"class.std::__1::__compressed_pair.1459" = type { %"struct.std::__1::__compressed_pair_elem.1460" }
%"struct.std::__1::__compressed_pair_elem.1460" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1461", i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.527" = type { %"class.WTF::VectorBuffer.528" }
%"class.WTF::VectorBuffer.528" = type { %"class.WTF::VectorBufferBase.529" }
%"class.WTF::VectorBufferBase.529" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.345" = type { %"class.blink::MemberBase.346" }
%"class.blink::MemberBase.346" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.358" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.349", %"class.blink::Member.349" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.349", %"class.blink::Member.351", %"class.blink::Member.349", %"class.blink::Member.349", %"class.blink::Member.353" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.474", %"class.blink::Member.476", %"class.blink::Member.351", %"class.blink::Member.478", %"class.blink::Member.478", %"class.blink::Member.499", %"class.blink::Member.501", %"class.blink::Member.503", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.508", %"class.blink::HeapVector.510" }
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.519", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.527", %"class.WTF::Vector.527", i8, i32, %"class.blink::Member.532", %"class.blink::Member.534", %"class.blink::Member.536", %"class.blink::Member.538", %"class.blink::Member.540", %"class.blink::Member.542", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.544", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.550", %"class.blink::Member.552", %"class.blink::Member.516", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.554", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.345", %"class.blink::Member.760", %"class.blink::Member.345", %"class.blink::Member.345", %"class.blink::Member.345", %"class.blink::UserActionElementSet", %"class.blink::Member.769", double, double, i64, i64, %"class.blink::HeapHashSet.771", %"class.blink::HeapHashSet.778", i16, i8, %"class.blink::Member.785", %"class.blink::Member.787", %"class.blink::Member.789", %"class.blink::Member.791", %"class.blink::TextLinkColors", %"class.blink::Member.793", i8, [7 x i8], %"class.blink::HeapHashMap.795", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.345", %"class.WTF::Vector.802", %"class.blink::Member.807", %"class.blink::Member.809", i8, %"class.blink::Member.345", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.811", %"class.blink::HeapVector.813", %"class.std::__1::unique_ptr.821", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.827", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.840", %"class.WTF::Vector.842", i8, i8, %"class.std::__1::unique_ptr.847", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.853", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.861", i8, i32, %"class.blink::Member.863", %"class.blink::Member.865", %"class.blink::Member.867", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.869", %"class.WTF::HashMap.871", %"class.blink::Member.876", %"class.blink::Member.878", %"class.blink::Member.880", %"class.blink::Member.882", %"class.blink::Member.476", %"class.blink::Member.476", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.884", i8, i32, %"class.blink::Member.891", %"class.blink::Member.893", i32, %"class.blink::Member.895", %"class.blink::Member.897", %"class.blink::Member.899", %"class.std::__1::unique_ptr.901", i64, %"class.std::__1::unique_ptr.907", i32, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.919", %"class.WTF::Vector.921", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.926", %"class.blink::Member.933", %"class.std::__1::unique_ptr.935", %"class.blink::Member.941", i8, i8, %"class.WTF::String", %"class.blink::Member.943", i8, [7 x i8], %"class.blink::HeapHashMap.945", %"class.blink::HeapObserverSet", %"class.blink::Member.959", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.961", i32, i8, i8, %"class.blink::WeakMember.963", %"class.blink::Member.964" }
%"class.blink::Supplementable.519" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.520" }
%"class.blink::HeapHashMap.520" = type { %"class.WTF::HashMap.523" }
%"class.WTF::HashMap.523" = type { %"class.WTF::HashTable.524" }
%"class.WTF::HashTable.524" = type <{ %"struct.WTF::KeyValuePair.526"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.526" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.984", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1061", i32, i8, [3 x i8], %"class.blink::HeapVector.1063", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1071", %"class.blink::Member.1073", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1082", %"class.blink::Member.1213", %"class.blink::Member.1215", i8, [7 x i8] }>
%"class.blink::Supplementable.984" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.985" }
%"class.blink::HeapHashMap.985" = type { %"class.WTF::HashMap.988" }
%"class.WTF::HashMap.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"struct.WTF::KeyValuePair.991"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.991" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1000" }
%"class.blink::Supplementable.1000" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1001" }
%"class.blink::HeapHashMap.1001" = type { %"class.WTF::HashMap.1004" }
%"class.WTF::HashMap.1004" = type { %"class.WTF::HashTable.1005" }
%"class.WTF::HashTable.1005" = type <{ %"struct.WTF::KeyValuePair.1007"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1007" = type { i8*, %"class.blink::Member.2333" }
%"class.blink::Member.2333" = type { %"class.blink::MemberBase.2334" }
%"class.blink::MemberBase.2334" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2335" }
%"class.blink::Member.2335" = type { %"class.blink::MemberBase.2336" }
%"class.blink::MemberBase.2336" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1008, %"class.std::__1::unique_ptr.1017", %"class.std::__1::unique_ptr.1017", %"class.std::__1::unique_ptr.1041", %"class.std::__1::unique_ptr.1041", %"class.blink::Member.534", i32, [4 x i8], %"class.WTF::HashSet.1057", i32, i32 }
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1028", %"class.std::__1::map.1037"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1020", %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.std::__1::map.1028" = type { %"class.std::__1::__tree.1029" }
%"class.std::__1::__tree.1029" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1034" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.std::__1::map.1037" = type opaque
%"class.std::__1::unique_ptr.1041" = type { %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map.1044" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.WTF::HashSet.1057" = type { %"class.WTF::HashTable.1058" }
%"class.WTF::HashTable.1058" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1061" = type { %"class.blink::MemberBase.1062" }
%"class.blink::MemberBase.1062" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::Member.1069"*, i32, i32 }
%"class.blink::Member.1069" = type opaque
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1075", i32, i32 }
%"class.blink::HeapHashMap.1075" = type { %"class.WTF::HashMap.1078" }
%"class.WTF::HashMap.1078" = type { %"class.WTF::HashTable.1079" }
%"class.WTF::HashTable.1079" = type <{ %"struct.WTF::KeyValuePair.1081"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1081" = type opaque
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.WTF::Vector.554" = type { %"class.WTF::VectorBuffer.555" }
%"class.WTF::VectorBuffer.555" = type { %"class.WTF::VectorBufferBase.556" }
%"class.WTF::VectorBufferBase.556" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.557 }
%class.scoped_refptr.557 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.558", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.558" = type { %"class.base::RefCounted.559" }
%"class.base::RefCounted.559" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.562" }
%"class.blink::HeapHashMap.562" = type { %"class.WTF::HashMap.565" }
%"class.WTF::HashMap.565" = type { %"class.WTF::HashTable.566" }
%"class.WTF::HashTable.566" = type <{ %"struct.WTF::KeyValuePair.568"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.568" = type { %"class.blink::WeakMember.569", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.571", i32, [4 x i8], %"class.std::__1::unique_ptr.708", %"class.std::__1::unique_ptr.708", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.719", %"class.std::__1::unique_ptr.725", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.737", %"class.std::__1::unique_ptr.743", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.750", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.574", %"class.std::__1::unique_ptr.580", %"class.std::__1::unique_ptr.586", %"class.std::__1::unique_ptr.592", %"class.std::__1::unique_ptr.598", %"class.std::__1::unique_ptr.604", %"class.std::__1::unique_ptr.615", %"class.std::__1::unique_ptr.622", %"class.std::__1::unique_ptr.622", %"class.std::__1::unique_ptr.629", %"class.std::__1::unique_ptr.636", %"class.std::__1::unique_ptr.643", %"class.std::__1::unique_ptr.643", %"class.std::__1::unique_ptr.650", %"class.std::__1::unique_ptr.657", %"class.std::__1::unique_ptr.664", %"class.std::__1::unique_ptr.688", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.580" = type { %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.607" }
%"struct.std::__1::atomic.607" = type { %"struct.std::__1::__atomic_base.608" }
%"struct.std::__1::__atomic_base.608" = type { %"struct.std::__1::__atomic_base.609" }
%"struct.std::__1::__atomic_base.609" = type { %"struct.std::__1::__cxx_atomic_impl.610" }
%"struct.std::__1::__cxx_atomic_impl.610" = type { %"struct.std::__1::__cxx_atomic_base_impl.611" }
%"struct.std::__1::__cxx_atomic_base_impl.611" = type { i64 }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.blink::Worklist.618"* }
%"class.blink::Worklist.618" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.607" }
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.blink::Worklist.625"* }
%"class.blink::Worklist.625" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.607" }
%"class.std::__1::unique_ptr.629" = type { %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"class.blink::Worklist.632"* }
%"class.blink::Worklist.632" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.607" }
%"class.std::__1::unique_ptr.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.blink::Worklist.639"* }
%"class.blink::Worklist.639" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.607" }
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.blink::Worklist.646"* }
%"class.blink::Worklist.646" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.607" }
%"class.std::__1::unique_ptr.650" = type { %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"class.blink::Worklist.653"* }
%"class.blink::Worklist.653" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.607" }
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.blink::Worklist.660"* }
%"class.blink::Worklist.660" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.607" }
%"class.std::__1::unique_ptr.664" = type { %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.667", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.680", %"class.std::__1::__compressed_pair.682", [4 x i8] }>
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669", %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { float }
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.691", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.700" }
%"class.WTF::Vector.700" = type { %"class.WTF::VectorBuffer.701" }
%"class.WTF::VectorBuffer.701" = type { %"class.WTF::VectorBufferBase.702" }
%"class.WTF::VectorBufferBase.702" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.716" }
%"class.WTF::VectorBuffer.716" = type { %"class.WTF::VectorBufferBase.717" }
%"class.WTF::VectorBufferBase.717" = type { %"struct.std::__1::pair.718"*, i32, i32 }
%"struct.std::__1::pair.718" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.731" }
%"class.std::__1::unique_ptr.731" = type { %"class.std::__1::__compressed_pair.732" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.618"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.625"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.632"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.639"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.646"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.977", i64 }
%"class.std::__1::vector.977" = type { %"class.std::__1::__vector_base.978" }
%"class.std::__1::__vector_base.978" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.979" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.737" = type { %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.743" = type { %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.749 }
%class.scoped_refptr.749 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.762" }
%"class.blink::HeapHashMap.762" = type { %"class.WTF::HashMap.765" }
%"class.WTF::HashMap.765" = type { %"class.WTF::HashTable.766" }
%"class.WTF::HashTable.766" = type <{ %"struct.WTF::KeyValuePair.768"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.768" = type opaque
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.771" = type { %"class.WTF::HashSet.774" }
%"class.WTF::HashSet.774" = type { %"class.WTF::HashTable.775" }
%"class.WTF::HashTable.775" = type <{ %"class.blink::WeakMember.777"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.777" = type opaque
%"class.blink::HeapHashSet.778" = type { %"class.WTF::HashSet.781" }
%"class.WTF::HashSet.781" = type { %"class.WTF::HashTable.782" }
%"class.WTF::HashTable.782" = type <{ %"class.blink::WeakMember.784"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.784" = type opaque
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.795" = type { %"class.WTF::HashMap.798" }
%"class.WTF::HashMap.798" = type { %"class.WTF::HashTable.799" }
%"class.WTF::HashTable.799" = type <{ %"struct.WTF::KeyValuePair.801"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.801" = type opaque
%"class.WTF::Vector.802" = type { %"class.WTF::VectorBuffer.803" }
%"class.WTF::VectorBuffer.803" = type { %"class.WTF::VectorBufferBase.804" }
%"class.WTF::VectorBufferBase.804" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.809" = type { %"class.blink::MemberBase.810" }
%"class.blink::MemberBase.810" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.813" = type { %"class.WTF::Vector.816" }
%"class.WTF::Vector.816" = type { %"class.WTF::VectorBuffer.817" }
%"class.WTF::VectorBuffer.817" = type { %"class.WTF::VectorBufferBase.818" }
%"class.WTF::VectorBufferBase.818" = type { %"class.blink::Member.819"*, i32, i32 }
%"class.blink::Member.819" = type opaque
%"class.std::__1::unique_ptr.821" = type { %"class.std::__1::__compressed_pair.822" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.827" = type { %"class.WTF::HashSet.830" }
%"class.WTF::HashSet.830" = type { %"class.WTF::HashTable.831" }
%"class.WTF::HashTable.831" = type <{ %"class.blink::WeakMember.833"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.833" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.834", i32, [4 x i8] }>
%"class.WTF::Vector.834" = type { %"class.WTF::VectorBuffer.835" }
%"class.WTF::VectorBuffer.835" = type { %"class.WTF::VectorBufferBase.836" }
%"class.WTF::VectorBufferBase.836" = type { %"struct.std::__1::pair.837"*, i32, i32 }
%"struct.std::__1::pair.837" = type opaque
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.842" = type { %"class.WTF::VectorBuffer.843" }
%"class.WTF::VectorBuffer.843" = type { %"class.WTF::VectorBufferBase.844" }
%"class.WTF::VectorBufferBase.844" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.847" = type { %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.495" }
%"class.WTF::Vector.495" = type { %"class.WTF::VectorBuffer.496" }
%"class.WTF::VectorBuffer.496" = type { %"class.WTF::VectorBufferBase.497" }
%"class.WTF::VectorBufferBase.497" = type { %"class.blink::Member.345"*, i32, i32 }
%"class.blink::HeapVector.853" = type { %"class.WTF::Vector.856" }
%"class.WTF::Vector.856" = type { %"class.WTF::VectorBuffer.857" }
%"class.WTF::VectorBuffer.857" = type { %"class.WTF::VectorBufferBase.858" }
%"class.WTF::VectorBufferBase.858" = type { %"class.blink::Member.859"*, i32, i32 }
%"class.blink::Member.859" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.476" }
%"class.blink::Member.861" = type { %"class.blink::MemberBase.862" }
%"class.blink::MemberBase.862" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.863" = type { %"class.blink::MemberBase.864" }
%"class.blink::MemberBase.864" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.871" = type { %"class.WTF::HashTable.872" }
%"class.WTF::HashTable.872" = type <{ %"struct.WTF::KeyValuePair.875"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.875" = type opaque
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.878" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.880" = type { %"class.blink::MemberBase.881" }
%"class.blink::MemberBase.881" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.882" = type { %"class.blink::MemberBase.883" }
%"class.blink::MemberBase.883" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.759", { i64, i64 } }
%"class.blink::WeakMember.759" = type { %"class.blink::MemberBase.477" }
%"class.blink::HeapHashSet.884" = type { %"class.WTF::HashSet.887" }
%"class.WTF::HashSet.887" = type { %"class.WTF::HashTable.888" }
%"class.WTF::HashTable.888" = type <{ %"class.blink::Member.890"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.890" = type opaque
%"class.blink::Member.891" = type { %"class.blink::MemberBase.892" }
%"class.blink::MemberBase.892" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.893" = type { %"class.blink::MemberBase.894" }
%"class.blink::MemberBase.894" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.895" = type { %"class.blink::MemberBase.896" }
%"class.blink::MemberBase.896" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.899" = type { %"class.blink::MemberBase.900" }
%"class.blink::MemberBase.900" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.921" = type { %"class.WTF::VectorBuffer.922" }
%"class.WTF::VectorBuffer.922" = type { %"class.WTF::VectorBufferBase.923" }
%"class.WTF::VectorBufferBase.923" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.926" = type { %"class.WTF::HashMap.929" }
%"class.WTF::HashMap.929" = type { %"class.WTF::HashTable.930" }
%"class.WTF::HashTable.930" = type <{ %"struct.WTF::KeyValuePair.932"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.932" = type opaque
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.941" = type { %"class.blink::MemberBase.942" }
%"class.blink::MemberBase.942" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.945" = type { %"class.WTF::HashMap.948" }
%"class.WTF::HashMap.948" = type { %"class.WTF::HashTable.949" }
%"class.WTF::HashTable.949" = type <{ %"struct.WTF::KeyValuePair.951"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.951" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.952" }
%"class.blink::HeapHashSet.952" = type { %"class.WTF::HashSet.955" }
%"class.WTF::HashSet.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"class.blink::WeakMember.958"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.958" = type opaque
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.961" = type { %"class.blink::MemberBase.962" }
%"class.blink::MemberBase.962" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.476", %"class.blink::HeapHashSet.968", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.975", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.968" = type { %"class.WTF::HashSet.971" }
%"class.WTF::HashSet.971" = type { %"class.WTF::HashTable.972" }
%"class.WTF::HashTable.972" = type <{ %"class.blink::Member.974"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.974" = type opaque
%"class.blink::HeapTaskRunnerTimer.975" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.976", { i64, i64 } }
%"class.blink::WeakMember.976" = type { %"class.blink::MemberBase.962" }
%"class.blink::WeakMember.963" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::Node"* }
%"class.blink::Member.964" = type { %"class.blink::MemberBase.965" }
%"class.blink::MemberBase.965" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.482" }
%"class.blink::HeapHashMap.482" = type { %"class.WTF::HashMap.485" }
%"class.WTF::HashMap.485" = type { %"class.WTF::HashTable.486" }
%"class.WTF::HashTable.486" = type <{ %"struct.WTF::KeyValuePair.488"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.488" = type { %"class.WTF::AtomicString", %"class.blink::Member.489" }
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.345", i32, %"class.blink::HeapVector" }
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.505" }
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::HeapHashMap.507"* }
%"class.blink::HeapHashMap.507" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.510" = type { %"class.WTF::Vector.513" }
%"class.WTF::Vector.513" = type { %"class.WTF::VectorBuffer.514" }
%"class.WTF::VectorBuffer.514" = type { %"class.WTF::VectorBufferBase.515" }
%"class.WTF::VectorBufferBase.515" = type { %"class.blink::Member.516"*, i32, i32 }
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.357 }
%class.scoped_refptr.357 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.362", %"class.blink::Member.364", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.362" = type { %"class.WTF::SingleThreadedBitField.363" }
%"class.WTF::SingleThreadedBitField.363" = type { i32 }
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.366 }
%class.scoped_refptr.366 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.367", %"class.WTF::AtomicString", %"class.WTF::Vector.369" }
%"class.WTF::RefCounted.367" = type { %"class.base::RefCounted.368" }
%"class.base::RefCounted.368" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.369" = type { %"class.WTF::VectorBuffer.370" }
%"class.WTF::VectorBuffer.370" = type { %"class.WTF::VectorBufferBase.371", [32 x i8] }
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%class.scoped_refptr.382 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.387" = type { %"class.blink::MemberBase.388" }
%"class.blink::MemberBase.388" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.397" }
%"class.blink::Member.397" = type { %"class.blink::MemberBase.398" }
%"class.blink::MemberBase.398" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2354" }
%"class.mojo::Remote.2354" = type { %"class.mojo::internal::InterfacePtrState.2355" }
%"class.mojo::internal::InterfacePtrState.2355" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2356" }
%"class.std::__1::unique_ptr.2356" = type { %"class.std::__1::__compressed_pair.2357" }
%"class.std::__1::__compressed_pair.2357" = type { %"struct.std::__1::__compressed_pair_elem.2358" }
%"struct.std::__1::__compressed_pair_elem.2358" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.402, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.402 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.403", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.403" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.411, i8, [7 x i8] }>
%class.scoped_refptr.411 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.412", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.412" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.413" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.276" = type { %"class.absl::optional_internal::optional_data.277" }
%"class.absl::optional_internal::optional_data.277" = type { %"class.absl::optional_internal::optional_data_base.278" }
%"class.absl::optional_internal::optional_data_base.278" = type { %"class.absl::optional_internal::optional_data_dtor_base.279" }
%"class.absl::optional_internal::optional_data_dtor_base.279" = type { i8, %union.anon.280 }
%union.anon.280 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.435" }
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2364" }
%"class.mojo::AssociatedRemote.2364" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2365" }
%"class.mojo::internal::AssociatedInterfacePtrState.2365" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2366" }
%"class.std::__1::unique_ptr.2366" = type { %"class.std::__1::__compressed_pair.2367" }
%"class.std::__1::__compressed_pair.2367" = type { %"struct.std::__1::__compressed_pair_elem.2368" }
%"struct.std::__1::__compressed_pair_elem.2368" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.437" = type { %"class.blink::Member.438" }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2374" }
%"class.mojo::AssociatedRemote.2374" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2375" }
%"class.mojo::internal::AssociatedInterfacePtrState.2375" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2376" }
%"class.std::__1::unique_ptr.2376" = type { %"class.std::__1::__compressed_pair.2377" }
%"class.std::__1::__compressed_pair.2377" = type { %"struct.std::__1::__compressed_pair_elem.2378" }
%"struct.std::__1::__compressed_pair_elem.2378" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.440" }
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.237", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2384" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1134" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2384" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.442" = type { %"class.blink::Member.443" }
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2387", %"class.blink::Member.237", %"class.mojo::AssociatedReceiver.2388" }
%"class.blink::ThreadState::PrefinalizerRegistration.2387" = type { i8 }
%"class.mojo::AssociatedReceiver.2388" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2389" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2389" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.445" }
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2392", %"class.blink::Member.237", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2392" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1755, %"class.std::__1::unique_ptr.1134", %"class.base::WeakPtrFactory.2393" }
%"class.base::WeakPtrFactory.2393" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.447" = type { %"class.blink::Member.448" }
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2396", %"class.blink::Member.237", %"class.mojo::AssociatedReceiver.2397" }
%"class.blink::ThreadState::PrefinalizerRegistration.2396" = type { i8 }
%"class.mojo::AssociatedReceiver.2397" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2398" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2398" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::HeapHashMap.458"* }
%"class.blink::HeapHashMap.458" = type opaque
%"class.mojo::StructPtr.459" = type { %"class.std::__1::unique_ptr.460" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.463" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.463" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.469" = type { %"class.absl::optional_internal::optional_data.470" }
%"class.absl::optional_internal::optional_data.470" = type { %"class.absl::optional_internal::optional_data_base.471" }
%"class.absl::optional_internal::optional_data_base.471" = type { %"class.absl::optional_internal::optional_data_dtor_base.472" }
%"class.absl::optional_internal::optional_data_dtor_base.472" = type { i8, %union.anon.473 }
%union.anon.473 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"class.blink::HeapHashSet.2108" = type { %"class.WTF::HashSet.2111" }
%"class.WTF::HashSet.2111" = type { %"class.WTF::HashTable.2112" }
%"class.WTF::HashTable.2112" = type <{ %"class.blink::WeakMember.2114"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2114" = type { %"class.blink::MemberBase.249" }
%"class.crdtp::detail::ValueMaybe" = type { i8, i32 }
%"class.crdtp::detail::ValueMaybe.2115" = type { i8, i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::SamplingHeapProfiler" = type <{ %"class.base::PoissonAllocationSampler::SamplesObserver", %"class.base::ThreadIdNameManager::Observer", %"class.base::Lock", %"class.std::__1::unordered_map", %"class.std::__1::unordered_set.2141", %"class.base::Lock", i32, %"struct.std::__1::atomic", %"struct.std::__1::atomic.750", [7 x i8] }>
%"class.base::PoissonAllocationSampler::SamplesObserver" = type { i32 (...)** }
%"class.base::ThreadIdNameManager::Observer" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.2116" }
%"class.std::__1::__hash_table.2116" = type <{ %"class.std::__1::unique_ptr.2117", %"class.std::__1::__compressed_pair.2127", %"class.std::__1::__compressed_pair.2132", %"class.std::__1::__compressed_pair.2136", [4 x i8] }>
%"class.std::__1::unique_ptr.2117" = type { %"class.std::__1::__compressed_pair.2118" }
%"class.std::__1::__compressed_pair.2118" = type { %"struct.std::__1::__compressed_pair_elem.2119", %"struct.std::__1::__compressed_pair_elem.2121" }
%"struct.std::__1::__compressed_pair_elem.2119" = type { %"struct.std::__1::__hash_node_base.2120"** }
%"struct.std::__1::__hash_node_base.2120" = type { %"struct.std::__1::__hash_node_base.2120"* }
%"struct.std::__1::__compressed_pair_elem.2121" = type { %"class.std::__1::__bucket_list_deallocator.2122" }
%"class.std::__1::__bucket_list_deallocator.2122" = type { %"class.std::__1::__compressed_pair.2123" }
%"class.std::__1::__compressed_pair.2123" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.std::__1::__compressed_pair.2127" = type { %"struct.std::__1::__compressed_pair_elem.2128" }
%"struct.std::__1::__compressed_pair_elem.2128" = type { %"struct.std::__1::__hash_node_base.2120" }
%"class.std::__1::__compressed_pair.2132" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.std::__1::__compressed_pair.2136" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"class.std::__1::unordered_set.2141" = type { %"class.std::__1::__hash_table.2142" }
%"class.std::__1::__hash_table.2142" = type <{ %"class.std::__1::unique_ptr.2143", %"class.std::__1::__compressed_pair.2153", %"class.std::__1::__compressed_pair.2158", %"class.std::__1::__compressed_pair.2162", [4 x i8] }>
%"class.std::__1::unique_ptr.2143" = type { %"class.std::__1::__compressed_pair.2144" }
%"class.std::__1::__compressed_pair.2144" = type { %"struct.std::__1::__compressed_pair_elem.2145", %"struct.std::__1::__compressed_pair_elem.2147" }
%"struct.std::__1::__compressed_pair_elem.2145" = type { %"struct.std::__1::__hash_node_base.2146"** }
%"struct.std::__1::__hash_node_base.2146" = type { %"struct.std::__1::__hash_node_base.2146"* }
%"struct.std::__1::__compressed_pair_elem.2147" = type { %"class.std::__1::__bucket_list_deallocator.2148" }
%"class.std::__1::__bucket_list_deallocator.2148" = type { %"class.std::__1::__compressed_pair.2149" }
%"class.std::__1::__compressed_pair.2149" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.std::__1::__compressed_pair.2153" = type { %"struct.std::__1::__compressed_pair_elem.2154" }
%"struct.std::__1::__compressed_pair_elem.2154" = type { %"struct.std::__1::__hash_node_base.2146" }
%"class.std::__1::__compressed_pair.2158" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.std::__1::__compressed_pair.2162" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"class.base::PoissonAllocationSampler" = type { %"class.base::Lock", %"class.std::__1::vector.2167" }
%"class.std::__1::vector.2167" = type { %"class.std::__1::__vector_base.2168" }
%"class.std::__1::__vector_base.2168" = type { %"class.base::PoissonAllocationSampler::SamplesObserver"**, %"class.base::PoissonAllocationSampler::SamplesObserver"**, %"class.std::__1::__compressed_pair.2169" }
%"class.std::__1::__compressed_pair.2169" = type { %"struct.std::__1::__compressed_pair_elem.2170" }
%"struct.std::__1::__compressed_pair_elem.2170" = type { %"class.base::PoissonAllocationSampler::SamplesObserver"** }
%"class.std::__1::unique_ptr.2174" = type { %"class.std::__1::__compressed_pair.2175" }
%"class.std::__1::__compressed_pair.2175" = type { %"struct.std::__1::__compressed_pair_elem.2176" }
%"struct.std::__1::__compressed_pair_elem.2176" = type { %"class.blink::protocol::Memory::SamplingProfile"* }
%"class.blink::protocol::Memory::SamplingProfile" = type { %"class.crdtp::ProtocolObject", %"class.std::__1::unique_ptr.2177", %"class.std::__1::unique_ptr.2212" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2177" = type { %"class.std::__1::__compressed_pair.2178" }
%"class.std::__1::__compressed_pair.2178" = type { %"struct.std::__1::__compressed_pair_elem.2179" }
%"struct.std::__1::__compressed_pair_elem.2179" = type { %"class.std::__1::vector.2180"* }
%"class.std::__1::vector.2180" = type { %"class.std::__1::__vector_base.2181" }
%"class.std::__1::__vector_base.2181" = type { %"class.std::__1::unique_ptr.2182"*, %"class.std::__1::unique_ptr.2182"*, %"class.std::__1::__compressed_pair.2204" }
%"class.std::__1::unique_ptr.2182" = type { %"class.std::__1::__compressed_pair.2183" }
%"class.std::__1::__compressed_pair.2183" = type { %"struct.std::__1::__compressed_pair_elem.2184" }
%"struct.std::__1::__compressed_pair_elem.2184" = type { %"class.blink::protocol::Memory::SamplingProfileNode"* }
%"class.blink::protocol::Memory::SamplingProfileNode" = type { %"class.crdtp::ProtocolObject.2185", double, double, %"class.std::__1::unique_ptr.2188" }
%"class.crdtp::ProtocolObject.2185" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2188" = type { %"class.std::__1::__compressed_pair.2189" }
%"class.std::__1::__compressed_pair.2189" = type { %"struct.std::__1::__compressed_pair_elem.2190" }
%"struct.std::__1::__compressed_pair_elem.2190" = type { %"class.std::__1::vector.2191"* }
%"class.std::__1::vector.2191" = type { %"class.std::__1::__vector_base.2192" }
%"class.std::__1::__vector_base.2192" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.2193" }
%"class.std::__1::__compressed_pair.2193" = type { %"struct.std::__1::__compressed_pair_elem.2194" }
%"struct.std::__1::__compressed_pair_elem.2194" = type { %"class.WTF::String"* }
%"class.std::__1::__compressed_pair.2204" = type { %"struct.std::__1::__compressed_pair_elem.2205" }
%"struct.std::__1::__compressed_pair_elem.2205" = type { %"class.std::__1::unique_ptr.2182"* }
%"class.std::__1::unique_ptr.2212" = type { %"class.std::__1::__compressed_pair.2213" }
%"class.std::__1::__compressed_pair.2213" = type { %"struct.std::__1::__compressed_pair_elem.2214" }
%"struct.std::__1::__compressed_pair_elem.2214" = type { %"class.std::__1::vector.2215"* }
%"class.std::__1::vector.2215" = type { %"class.std::__1::__vector_base.2216" }
%"class.std::__1::__vector_base.2216" = type { %"class.std::__1::unique_ptr.2217"*, %"class.std::__1::unique_ptr.2217"*, %"class.std::__1::__compressed_pair.2226" }
%"class.std::__1::unique_ptr.2217" = type { %"class.std::__1::__compressed_pair.2218" }
%"class.std::__1::__compressed_pair.2218" = type { %"struct.std::__1::__compressed_pair_elem.2219" }
%"struct.std::__1::__compressed_pair_elem.2219" = type { %"class.blink::protocol::Memory::Module"* }
%"class.blink::protocol::Memory::Module" = type { %"class.crdtp::ProtocolObject.2220", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", double }
%"class.crdtp::ProtocolObject.2220" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.2226" = type { %"struct.std::__1::__compressed_pair_elem.2227" }
%"struct.std::__1::__compressed_pair_elem.2227" = type { %"class.std::__1::unique_ptr.2217"* }
%"class.base::ModuleCache" = type { %"class.std::__1::set", %"class.base::internal::flat_tree.2244", %"class.std::__1::vector.2245", %"class.base::ModuleCache::AuxiliaryModuleProvider"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.2237" }
%"class.std::__1::__tree.2237" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2238", %"class.std::__1::__compressed_pair.2242" }
%"class.std::__1::__compressed_pair.2238" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"class.std::__1::__compressed_pair.2242" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"class.base::internal::flat_tree.2244" = type { %"class.std::__1::vector.2245" }
%"class.std::__1::vector.2245" = type { %"class.std::__1::__vector_base.2246" }
%"class.std::__1::__vector_base.2246" = type { %"class.std::__1::unique_ptr.2247"*, %"class.std::__1::unique_ptr.2247"*, %"class.std::__1::__compressed_pair.2248" }
%"class.std::__1::unique_ptr.2247" = type opaque
%"class.std::__1::__compressed_pair.2248" = type { %"struct.std::__1::__compressed_pair_elem.2249" }
%"struct.std::__1::__compressed_pair_elem.2249" = type { %"class.std::__1::unique_ptr.2247"* }
%"class.base::ModuleCache::AuxiliaryModuleProvider" = type { i32 (...)** }
%"class.std::__1::vector.2253" = type { %"class.std::__1::__vector_base.2254" }
%"class.std::__1::__vector_base.2254" = type { %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"*, %"class.std::__1::__compressed_pair.2262" }
%"class.base::SamplingHeapProfiler::Sample" = type <{ i64, i64, i32, [4 x i8], i8*, i8*, %"class.std::__1::vector.2255", i32, [4 x i8] }>
%"class.std::__1::vector.2255" = type { %"class.std::__1::__vector_base.2256" }
%"class.std::__1::__vector_base.2256" = type { i8**, i8**, %"class.std::__1::__compressed_pair.2257" }
%"class.std::__1::__compressed_pair.2257" = type { %"struct.std::__1::__compressed_pair_elem.2258" }
%"struct.std::__1::__compressed_pair_elem.2258" = type { i8** }
%"class.std::__1::__compressed_pair.2262" = type { %"struct.std::__1::__compressed_pair_elem.2263" }
%"struct.std::__1::__compressed_pair_elem.2263" = type { %"class.base::SamplingHeapProfiler::Sample"* }
%"class.blink::WebVector.2268" = type { %"class.std::__1::vector.2255" }
%"class.v8::HeapStatistics" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i8, i64, i64, i64, i64 }
%"class.std::__1::vector.2272" = type { %"class.std::__1::__vector_base.2273" }
%"class.std::__1::__vector_base.2273" = type { %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"**, %"class.std::__1::__compressed_pair.2274" }
%"class.base::ModuleCache::Module" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.2274" = type { %"struct.std::__1::__compressed_pair_elem.2275" }
%"struct.std::__1::__compressed_pair_elem.2275" = type { %"class.base::ModuleCache::Module"** }
%"class.std::__1::basic_string.2281" = type { %"class.std::__1::__compressed_pair.2282" }
%"class.std::__1::__compressed_pair.2282" = type { %"struct.std::__1::__compressed_pair_elem.2283" }
%"struct.std::__1::__compressed_pair_elem.2283" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.2284 }
%union.anon.2284 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.2285 }
%struct.anon.2285 = type { %"struct.std::__1::__padding.2286", i8 }
%"struct.std::__1::__padding.2286" = type { [1 x i8] }
%"class.WTF::Vector.2295" = type { %"class.WTF::VectorBuffer.2296" }
%"class.WTF::VectorBuffer.2296" = type { %"class.WTF::VectorBufferBase.2297" }
%"class.WTF::VectorBufferBase.2297" = type { i8**, i32, i32 }
%"class.base::debug::StackTrace" = type { [250 x i8*], i64 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.2301, i32, i8, i8, [2 x i8] }>
%union.anon.2301 = type { %"class.WTF::Vector.2302" }
%"class.WTF::Vector.2302" = type { %"class.WTF::VectorBuffer.2303" }
%"class.WTF::VectorBuffer.2303" = type { %"class.WTF::VectorBufferBase.221", [16 x i8] }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.crdtp::UberDispatcher" = type { i32 (...)**, %"class.crdtp::FrontendChannel"*, %"class.std::__1::vector.2311", %"class.std::__1::vector.2319" }
%"class.std::__1::vector.2311" = type { %"class.std::__1::__vector_base.2312" }
%"class.std::__1::__vector_base.2312" = type { %"struct.std::__1::pair.2313"*, %"struct.std::__1::pair.2313"*, %"class.std::__1::__compressed_pair.2314" }
%"struct.std::__1::pair.2313" = type opaque
%"class.std::__1::__compressed_pair.2314" = type { %"struct.std::__1::__compressed_pair_elem.2315" }
%"struct.std::__1::__compressed_pair_elem.2315" = type { %"struct.std::__1::pair.2313"* }
%"class.std::__1::vector.2319" = type { %"class.std::__1::__vector_base.2320" }
%"class.std::__1::__vector_base.2320" = type { %"struct.std::__1::pair.2321"*, %"struct.std::__1::pair.2321"*, %"class.std::__1::__compressed_pair.2322" }
%"struct.std::__1::pair.2321" = type opaque
%"class.std::__1::__compressed_pair.2322" = type { %"struct.std::__1::__compressed_pair_elem.2323" }
%"struct.std::__1::__compressed_pair_elem.2323" = type { %"struct.std::__1::pair.2321"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink19InspectorAgentState5FieldD2Ev = comdat any

$_ZNK5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIiE5ClearEv = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK3WTF7HashMapIPvNS_6StringENS_7PtrHashIvEENS_10HashTraitsIS1_EENS5_IS2_EENS_18PartitionAllocatorEE2atERKS1_ = comdat any

$_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE = comdat any

$_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE7DisposeEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE7disableEv = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE7disableEv = comdat any

$_ZN5blink19InspectorAgentState5FieldD0Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEED2Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEED0Ev = comdat any

$_ZN5blink14InspectorAgent7RestoreEv = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEED1Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIiED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIiE6DecodeEv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_ = comdat any

$_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol6Memory19SamplingProfileNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA10_KcEEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol6Memory6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN3WTF6VectorIPvLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPvEEmm = comdat any

$_ZN3WTF6VectorIPvLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIPvNS_12KeyValuePairIS1_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIvEENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS1_RS3_EENS_18HashTableAddResultISE_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPvNS_12KeyValuePairIS1_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIvEENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIPvNS_12KeyValuePairIS1_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIvEENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS3_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS4_jSF_ = comdat any

$_ZN3WTF9HashTableIPvNS_12KeyValuePairIS1_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIvEENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS3_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA20_cEEvOT_ = comdat any

$_ZTVN5blink19InspectorAgentState5FieldE = comdat any

$_ZTVN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEEE = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE = comdat any

@_ZTVN5blink20InspectorMemoryAgentE = hidden unnamed_addr constant { [17 x i8*], [11 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorMemoryAgent"*)* @_ZN5blink20InspectorMemoryAgentD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorMemoryAgent"*)* @_ZN5blink20InspectorMemoryAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorMemoryAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink20InspectorMemoryAgent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorMemoryAgent"*)* @_ZN5blink20InspectorMemoryAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorMemoryAgent"*, i32*, i32*, i32*)* @_ZN5blink20InspectorMemoryAgent14getDOMCountersEPiS1_S1_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorMemoryAgent"*)* @_ZN5blink20InspectorMemoryAgent29forciblyPurgeJavaScriptMemoryEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorMemoryAgent"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.2115"*)* @_ZN5blink20InspectorMemoryAgent13startSamplingEN5crdtp6detail10ValueMaybeIiEENS3_IbEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorMemoryAgent"*)* @_ZN5blink20InspectorMemoryAgent12stopSamplingEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorMemoryAgent"*, %"class.std::__1::unique_ptr.2174"*)* @_ZN5blink20InspectorMemoryAgent18getSamplingProfileEPNSt3__110unique_ptrINS_8protocol6Memory15SamplingProfileENS1_14default_deleteIS5_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorMemoryAgent"*, %"class.std::__1::unique_ptr.2174"*)* @_ZN5blink20InspectorMemoryAgent25getAllTimeSamplingProfileEPNSt3__110unique_ptrINS_8protocol6Memory15SamplingProfileENS1_14default_deleteIS5_EEEE to i8*)], [11 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorMemoryAgent"*)* @_ZThn8_N5blink20InspectorMemoryAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorMemoryAgent"*)* @_ZThn8_N5blink20InspectorMemoryAgentD0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorMemoryAgent"*, i32*, i32*, i32*)* @_ZThn8_N5blink20InspectorMemoryAgent14getDOMCountersEPiS1_S1_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorMemoryAgent"*)* @_ZThn8_N5blink20InspectorMemoryAgent29forciblyPurgeJavaScriptMemoryEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorMemoryAgent"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.2115"*)* @_ZThn8_N5blink20InspectorMemoryAgent13startSamplingEN5crdtp6detail10ValueMaybeIiEENS3_IbEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorMemoryAgent"*)* @_ZThn8_N5blink20InspectorMemoryAgent12stopSamplingEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorMemoryAgent"*, %"class.std::__1::unique_ptr.2174"*)* @_ZThn8_N5blink20InspectorMemoryAgent25getAllTimeSamplingProfileEPNSt3__110unique_ptrINS_8protocol6Memory15SamplingProfileENS1_14default_deleteIS5_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorMemoryAgent"*, %"class.std::__1::unique_ptr.2174"*)* @_ZThn8_N5blink20InspectorMemoryAgent18getSamplingProfileEPNSt3__110unique_ptrINS_8protocol6Memory15SamplingProfileENS1_14default_deleteIS5_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE7disableEv to i8*)] }, align 8
@_ZN5blinkL36kDefaultNativeMemorySamplingIntervalE = internal unnamed_addr constant i32 131072, align 4
@.str = private unnamed_addr constant [23 x i8] c"Invalid sampling rate.\00", align 1
@.str.1 = private unnamed_addr constant [34 x i8] c"Sampling profiler is not started.\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"<V8 Heap>\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"0x%lx\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c" \00", align 1
@_ZTVN5blink19InspectorAgentState5FieldE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE7disableEv to i8*)], [11 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEED1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEED0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE7disableEv to i8*)] }, comdat, align 8
@_ZTVN5blink8protocol6Memory19SamplingProfileNodeE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol6Memory6ModuleE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol6Memory15SamplingProfileE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIiED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIiE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIiE6DecodeEv to i8*)] }, comdat, align 8
@_ZN5blink8protocol6Memory8Metainfo10domainNameE = external constant [0 x i8], align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPvEEPKcv = private unnamed_addr constant [54 x i8] c"const char *WTF::GetStringWithTypeName() [T = void *]\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPvNS_6StringEEEEEPKcv = private unnamed_addr constant [86 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<void *, WTF::String>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink20InspectorMemoryAgentC1EPNS_15InspectedFramesE = hidden unnamed_addr alias void (%"class.blink::InspectorMemoryAgent"*, %"class.blink::InspectedFrames"*), void (%"class.blink::InspectorMemoryAgent"*, %"class.blink::InspectedFrames"*)* @_ZN5blink20InspectorMemoryAgentC2EPNS_15InspectedFramesE
@_ZN5blink20InspectorMemoryAgentD1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorMemoryAgent"*), void (%"class.blink::InspectorMemoryAgent"*)* @_ZN5blink20InspectorMemoryAgentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorMemoryAgentC2EPNS_15InspectedFramesE(%"class.blink::InspectorMemoryAgent"*, %"class.blink::InspectedFrames"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.blink::InspectorMemoryAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CoreProbeSink"* null, %"class.blink::CoreProbeSink"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 0, i32 3
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Memory8Metainfo10domainNameE, i64 0, i64 0)) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Memory8Metainfo10domainNameE, i64 0, i64 0), i64 %8) #15
  call void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %3) #15
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #15
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  %26 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 0, i32 4
  %27 = bitcast %"class.std::__1::unique_ptr.227"* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast %"class.blink::InspectorMemoryAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [11 x i8*] }, { [17 x i8*], [11 x i8*] }* @_ZTVN5blink20InspectorMemoryAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [11 x i8*] }, { [17 x i8*], [11 x i8*] }* @_ZTVN5blink20InspectorMemoryAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %28, align 8
  %29 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::InspectedFrames"* %1, %"class.blink::InspectedFrames"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 2
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 4
  %32 = bitcast %"class.WTF::HashMap.239"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 20, i1 false) #15
  %33 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 5
  %34 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %33, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %33, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %6, %"class.blink::InspectorAgentState::Field"* %34) #15
  %37 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %38 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 5, i32 1
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 5, i32 2
  store i32 0, i32* %39, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorMemoryAgentD2Ev(%"class.blink::InspectorMemoryAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InspectorMemoryAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [11 x i8*] }, { [17 x i8*], [11 x i8*] }* @_ZTVN5blink20InspectorMemoryAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [11 x i8*] }, { [17 x i8*], [11 x i8*] }* @_ZTVN5blink20InspectorMemoryAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 5, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #15
  br label %20

20:                                               ; preds = %1, %16, %19
  %21 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %21, align 8
  %23 = icmp eq %"struct.WTF::KeyValuePair.243"* %22, null
  br i1 %23, label %57, label %24, !prof !2

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 4, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %55, label %28

28:                                               ; preds = %24
  %29 = zext i32 %26 to i64
  br label %30

30:                                               ; preds = %52, %28
  %31 = phi i64 [ 0, %28 ], [ %53, %52 ]
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %22, i64 %31, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, inttoptr (i64 -1 to i8*)
  br i1 %34, label %52, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %22, i64 %31, i32 1, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #15
  br label %52

52:                                               ; preds = %51, %48, %35, %30
  %53 = add nuw nsw i64 %31, 1
  %54 = icmp eq i64 %53, %29
  br i1 %54, label %55, label %30

55:                                               ; preds = %52, %24
  %56 = bitcast %"struct.WTF::KeyValuePair.243"* %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #15
  store %"struct.WTF::KeyValuePair.243"* null, %"struct.WTF::KeyValuePair.243"** %21, align 8
  br label %57

57:                                               ; preds = %20, %55
  %58 = bitcast %"class.blink::InspectorMemoryAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %58, align 8
  %59 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.blink::protocol::Memory::Frontend"*, %"class.blink::protocol::Memory::Frontend"** %59, align 8
  store %"class.blink::protocol::Memory::Frontend"* null, %"class.blink::protocol::Memory::Frontend"** %59, align 8
  %61 = icmp eq %"class.blink::protocol::Memory::Frontend"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.blink::protocol::Memory::Frontend"* %60 to i8*
  tail call void @_ZdlPv(i8* %63) #17
  br label %64

64:                                               ; preds = %62, %57
  %65 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %66 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %65, align 8
  %67 = icmp eq %"class.blink::InspectorAgentState::Field"** %66, null
  %68 = bitcast %"class.blink::InspectorAgentState::Field"** %66 to i8*
  br i1 %67, label %75, label %69, !prof !2

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %69
  store i32 0, i32* %70, align 4
  br label %74

74:                                               ; preds = %73, %69
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %68) #15
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %65, align 8
  br label %75

75:                                               ; preds = %74, %64
  %76 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #15
  br label %92

92:                                               ; preds = %75, %88, %91
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD2Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #15
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink20InspectorMemoryAgentD1Ev(%"class.blink::InspectorMemoryAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 -1, i32 5, i32 1
  %3 = bitcast i32* %2 to %"class.blink::InspectorMemoryAgent"*
  tail call void @_ZN5blink20InspectorMemoryAgentD2Ev(%"class.blink::InspectorMemoryAgent"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorMemoryAgentD0Ev(%"class.blink::InspectorMemoryAgent"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink20InspectorMemoryAgentD2Ev(%"class.blink::InspectorMemoryAgent"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink20InspectorMemoryAgentD0Ev(%"class.blink::InspectorMemoryAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 -1, i32 5, i32 1
  %3 = bitcast i32* %2 to %"class.blink::InspectorMemoryAgent"*
  tail call void @_ZN5blink20InspectorMemoryAgentD2Ev(%"class.blink::InspectorMemoryAgent"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorMemoryAgent14getDOMCountersEPiS1_S1_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorMemoryAgent"* nocapture readnone, i32* nocapture, i32* nocapture, i32* nocapture) unnamed_addr #0 align 2 {
  %6 = tail call i32 @_ZN5blink16InstanceCounters12CounterValueENS0_11CounterTypeE(i32 1) #15
  store i32 %6, i32* %2, align 4
  %7 = tail call i32 @_ZN5blink16InstanceCounters12CounterValueENS0_11CounterTypeE(i32 7) #15
  store i32 %7, i32* %3, align 4
  %8 = tail call i32 @_ZN5blink16InstanceCounters12CounterValueENS0_11CounterTypeE(i32 3) #15
  store i32 %8, i32* %4, align 4
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #15
  ret void
}

declare i32 @_ZN5blink16InstanceCounters12CounterValueENS0_11CounterTypeE(i32) local_unnamed_addr #1

declare void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink20InspectorMemoryAgent14getDOMCountersEPiS1_S1_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorMemoryAgent"* nocapture readnone, i32* nocapture, i32* nocapture, i32* nocapture) unnamed_addr #0 align 2 {
  %6 = tail call i32 @_ZN5blink16InstanceCounters12CounterValueENS0_11CounterTypeE(i32 1) #15, !noalias !4
  store i32 %6, i32* %2, align 4, !noalias !4
  %7 = tail call i32 @_ZN5blink16InstanceCounters12CounterValueENS0_11CounterTypeE(i32 7) #15, !noalias !4
  store i32 %7, i32* %3, align 4, !noalias !4
  %8 = tail call i32 @_ZN5blink16InstanceCounters12CounterValueENS0_11CounterTypeE(i32 3) #15, !noalias !4
  store i32 %8, i32* %4, align 4, !noalias !4
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorMemoryAgent29forciblyPurgeJavaScriptMemoryEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorMemoryAgent"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(24) %"class.blink::HeapHashSet.2108"* @_ZN5blink4Page13OrdinaryPagesEv() #15
  %4 = getelementptr inbounds %"class.blink::HeapHashSet.2108", %"class.blink::HeapHashSet.2108"* %3, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::HeapHashSet.2108", %"class.blink::HeapHashSet.2108"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::WeakMember.2114"*, %"class.blink::WeakMember.2114"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HeapHashSet.2108", %"class.blink::HeapHashSet.2108"* %3, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::WeakMember.2114", %"class.blink::WeakMember.2114"* %8, i64 %11
  br i1 %6, label %25, label %13

13:                                               ; preds = %2
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %19
  %16 = phi %"class.blink::WeakMember.2114"* [ %20, %19 ], [ %8, %13 ]
  %17 = bitcast %"class.blink::WeakMember.2114"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %22 [
    i64 -1, label %19
    i64 0, label %19
  ]

19:                                               ; preds = %15, %15
  %20 = getelementptr inbounds %"class.blink::WeakMember.2114", %"class.blink::WeakMember.2114"* %16, i64 1
  %21 = icmp eq %"class.blink::WeakMember.2114"* %20, %12
  br i1 %21, label %25, label %15

22:                                               ; preds = %15, %13
  %23 = phi %"class.blink::WeakMember.2114"* [ %8, %13 ], [ %16, %15 ]
  %24 = icmp eq %"class.blink::WeakMember.2114"* %23, %12
  br i1 %24, label %25, label %27

25:                                               ; preds = %19, %34, %44, %41, %2, %22
  %26 = tail call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() #15
  tail call void @_ZN2v87Isolate26MemoryPressureNotificationENS_19MemoryPressureLevelE(%"class.v8::Isolate"* %26, i32 2) #15
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #15
  ret void

27:                                               ; preds = %22, %44
  %28 = phi %"class.blink::WeakMember.2114"* [ %38, %44 ], [ %23, %22 ]
  %29 = getelementptr inbounds %"class.blink::WeakMember.2114", %"class.blink::WeakMember.2114"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::Page"*, %"class.blink::Page"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %30, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::Frame"*, %"class.blink::Frame"** %31, align 8
  %33 = icmp eq %"class.blink::Frame"* %32, null
  br i1 %33, label %34, label %46

34:                                               ; preds = %55, %27
  %35 = getelementptr inbounds %"class.blink::WeakMember.2114", %"class.blink::WeakMember.2114"* %28, i64 1
  %36 = icmp eq %"class.blink::WeakMember.2114"* %35, %12
  br i1 %36, label %25, label %37

37:                                               ; preds = %34, %41
  %38 = phi %"class.blink::WeakMember.2114"* [ %42, %41 ], [ %35, %34 ]
  %39 = bitcast %"class.blink::WeakMember.2114"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %44 [
    i64 -1, label %41
    i64 0, label %41
  ]

41:                                               ; preds = %37, %37
  %42 = getelementptr inbounds %"class.blink::WeakMember.2114", %"class.blink::WeakMember.2114"* %38, i64 1
  %43 = icmp eq %"class.blink::WeakMember.2114"* %42, %12
  br i1 %43, label %25, label %37

44:                                               ; preds = %37
  %45 = icmp eq %"class.blink::WeakMember.2114"* %38, %12
  br i1 %45, label %25, label %27

46:                                               ; preds = %27, %55
  %47 = phi %"class.blink::Frame"* [ %57, %55 ], [ %32, %27 ]
  %48 = bitcast %"class.blink::Frame"* %47 to i1 (%"class.blink::Frame"*)***
  %49 = load i1 (%"class.blink::Frame"*)**, i1 (%"class.blink::Frame"*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %49, i64 3
  %51 = load i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::Frame"* nonnull %47) #15
  br i1 %52, label %53, label %55

53:                                               ; preds = %46
  %54 = bitcast %"class.blink::Frame"* %47 to %"class.blink::LocalFrame"*
  tail call void @_ZN5blink10LocalFrame21ForciblyPurgeV8MemoryEv(%"class.blink::LocalFrame"* nonnull %54) #15
  br label %55

55:                                               ; preds = %46, %53
  %56 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %47, i64 0, i32 1
  %57 = tail call %"class.blink::Frame"* @_ZNK5blink9FrameTree12TraverseNextEPKNS_5FrameE(%"class.blink::FrameTree"* %56, %"class.blink::Frame"* null) #15
  %58 = icmp eq %"class.blink::Frame"* %57, null
  br i1 %58, label %34, label %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(24) %"class.blink::HeapHashSet.2108"* @_ZN5blink4Page13OrdinaryPagesEv() local_unnamed_addr #1

declare void @_ZN5blink10LocalFrame21ForciblyPurgeV8MemoryEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::Frame"* @_ZNK5blink9FrameTree12TraverseNextEPKNS_5FrameE(%"class.blink::FrameTree"*, %"class.blink::Frame"*) local_unnamed_addr #1

declare %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() local_unnamed_addr #1

declare void @_ZN2v87Isolate26MemoryPressureNotificationENS_19MemoryPressureLevelE(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink20InspectorMemoryAgent29forciblyPurgeJavaScriptMemoryEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorMemoryAgent"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink20InspectorMemoryAgent29forciblyPurgeJavaScriptMemoryEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorMemoryAgent"* undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20InspectorMemoryAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorMemoryAgent"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.233"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv) #15
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 0, i32 2
  %15 = bitcast %"class.blink::Member"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #15
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE5TraceEPNS_7VisitorE(%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #15
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorMemoryAgent7RestoreEv(%"class.blink::InspectorMemoryAgent"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = alloca %"class.crdtp::detail::ValueMaybe", align 4
  %4 = alloca %"class.crdtp::detail::ValueMaybe.2115", align 1
  %5 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %0, i64 0, i32 5, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 0
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 1
  store i32 %6, i32* %8, align 4
  %9 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2115", %"class.crdtp::detail::ValueMaybe.2115"* %4, i64 0, i32 0
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2115", %"class.crdtp::detail::ValueMaybe.2115"* %4, i64 0, i32 1
  store i8 0, i8* %10, align 1
  call void @_ZN5blink20InspectorMemoryAgent13startSamplingEN5crdtp6detail10ValueMaybeIiEENS3_IbEE(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorMemoryAgent"* %0, %"class.crdtp::detail::ValueMaybe"* nonnull %3, %"class.crdtp::detail::ValueMaybe.2115"* nonnull %4)
  %11 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #17
  br label %19

19:                                               ; preds = %1, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorMemoryAgent13startSamplingEN5crdtp6detail10ValueMaybeIiEENS3_IbEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorMemoryAgent"*, %"class.crdtp::detail::ValueMaybe"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2115"* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::WebVector.1639", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca i8, align 1
  %8 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %2, i64 0, i32 0
  %9 = load i8, i8* %8, align 4, !range !7
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %2, i64 0, i32 1
  %12 = select i1 %10, i32* @_ZN5blinkL36kDefaultNativeMemorySamplingIntervalE, i32* %11
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %15, label %25

15:                                               ; preds = %4
  %16 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 22, i8* %17, align 1
  %18 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i64 22, i1 false) #15
  %19 = getelementptr inbounds i8, i8* %18, i64 22
  store i8 0, i8* %19, align 2
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %6) #15
  %20 = load i8, i8* %17, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %68

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #17
  br label %68

25:                                               ; preds = %4
  %26 = tail call %"class.base::SamplingHeapProfiler"* @_ZN4base20SamplingHeapProfiler3GetEv() #15
  %27 = sext i32 %13 to i64
  tail call void @_ZN4base20SamplingHeapProfiler19SetSamplingIntervalEm(%"class.base::SamplingHeapProfiler"* %26, i64 %27) #15
  %28 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 5
  %29 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 5, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, %13
  br i1 %31, label %54, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 5, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, %13
  br i1 %35, label %36, label %41

36:                                               ; preds = %32
  %37 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %28 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %38 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %38, i64 2
  %40 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %39, align 8
  tail call void %40(%"class.blink::InspectorAgentState::SimpleField"* %28) #15
  br label %54

41:                                               ; preds = %32
  store i32 %13, i32* %29, align 4
  %42 = bitcast %"class.blink::WebVector.1639"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #15
  %43 = getelementptr inbounds %"class.blink::WebVector.1639", %"class.blink::WebVector.1639"* %5, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #15
  call void @_ZN5blink19InspectorAgentState9SerializeEiPNS_9WebVectorIhEE(i32 %13, %"class.blink::WebVector.1639"* nonnull %5) #15
  %44 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 5, i32 0, i32 2
  %45 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 5, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %45, %"class.WTF::String"* dereferenceable(8) %46, %"class.blink::WebVector.1639"* nonnull %5) #15
  %47 = load i8*, i8** %43, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::WebVector.1639", %"class.blink::WebVector.1639"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = ptrtoint i8* %47 to i64
  %52 = bitcast i8** %50 to i64*
  store i64 %51, i64* %52, align 8
  call void @_ZdlPv(i8* nonnull %47) #17
  br label %53

53:                                               ; preds = %49, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #15
  br label %54

54:                                               ; preds = %25, %36, %53
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7)
  store i8 0, i8* %7, align 1
  %55 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2115", %"class.crdtp::detail::ValueMaybe.2115"* %3, i64 0, i32 0
  %56 = load i8, i8* %55, align 1, !range !7
  %57 = icmp eq i8 %56, 0
  %58 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2115", %"class.crdtp::detail::ValueMaybe.2115"* %3, i64 0, i32 1
  %59 = select i1 %57, i8* %7, i8* %58
  %60 = load i8, i8* %59, align 1, !range !7
  %61 = icmp eq i8 %60, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7)
  br i1 %61, label %64, label %62

62:                                               ; preds = %54
  %63 = call %"class.base::PoissonAllocationSampler"* @_ZN4base24PoissonAllocationSampler3GetEv() #15
  call void @_ZN4base24PoissonAllocationSampler25SuppressRandomnessForTestEb(%"class.base::PoissonAllocationSampler"* %63, i1 zeroext true) #15
  br label %64

64:                                               ; preds = %54, %62
  %65 = call %"class.base::SamplingHeapProfiler"* @_ZN4base20SamplingHeapProfiler3GetEv() #15
  %66 = call i32 @_ZN4base20SamplingHeapProfiler5StartEv(%"class.base::SamplingHeapProfiler"* %65) #15
  %67 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 2
  store i32 %66, i32* %67, align 8
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #15
  br label %68

68:                                               ; preds = %22, %15, %64
  ret void
}

declare void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare %"class.base::SamplingHeapProfiler"* @_ZN4base20SamplingHeapProfiler3GetEv() local_unnamed_addr #1

declare void @_ZN4base20SamplingHeapProfiler19SetSamplingIntervalEm(%"class.base::SamplingHeapProfiler"*, i64) local_unnamed_addr #1

declare %"class.base::PoissonAllocationSampler"* @_ZN4base24PoissonAllocationSampler3GetEv() local_unnamed_addr #1

declare void @_ZN4base24PoissonAllocationSampler25SuppressRandomnessForTestEb(%"class.base::PoissonAllocationSampler"*, i1 zeroext) local_unnamed_addr #1

declare i32 @_ZN4base20SamplingHeapProfiler5StartEv(%"class.base::SamplingHeapProfiler"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink20InspectorMemoryAgent13startSamplingEN5crdtp6detail10ValueMaybeIiEENS3_IbEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorMemoryAgent"*, %"class.crdtp::detail::ValueMaybe"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2115"* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 -1, i32 5, i32 1
  %6 = bitcast i32* %5 to %"class.blink::InspectorMemoryAgent"*
  tail call void @_ZN5blink20InspectorMemoryAgent13startSamplingEN5crdtp6detail10ValueMaybeIiEENS3_IbEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorMemoryAgent"* %6, %"class.crdtp::detail::ValueMaybe"* %2, %"class.crdtp::detail::ValueMaybe.2115"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorMemoryAgent12stopSamplingEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorMemoryAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 5, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 48) #17
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %11, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i64 33, i1 false) #15
  %12 = getelementptr inbounds i8, i8* %8, i64 33
  store i8 0, i8* %12, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %3) #15
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %30

17:                                               ; preds = %7
  %18 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %18) #17
  br label %30

19:                                               ; preds = %2
  %20 = tail call %"class.base::SamplingHeapProfiler"* @_ZN4base20SamplingHeapProfiler3GetEv() #15
  tail call void @_ZN4base20SamplingHeapProfiler4StopEv(%"class.base::SamplingHeapProfiler"* %20) #15
  %21 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 5, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = load i32, i32* %4, align 4
  %24 = icmp eq i32 %22, %23
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  store i32 %22, i32* %4, align 4
  %26 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 5, i32 0, i32 2
  %27 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 5, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %27, %"class.WTF::String"* dereferenceable(8) %28, %"class.blink::WebVector.1639"* null) #15
  br label %29

29:                                               ; preds = %19, %25
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #15
  br label %30

30:                                               ; preds = %17, %7, %29
  ret void
}

declare void @_ZN4base20SamplingHeapProfiler4StopEv(%"class.base::SamplingHeapProfiler"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIiE5ClearEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store i32 %3, i32* %4, align 4
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector.1639"* null) #15
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink20InspectorMemoryAgent12stopSamplingEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorMemoryAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 -1, i32 5, i32 1
  %4 = bitcast i32* %3 to %"class.blink::InspectorMemoryAgent"*
  tail call void @_ZN5blink20InspectorMemoryAgent12stopSamplingEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorMemoryAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorMemoryAgent25getAllTimeSamplingProfileEPNSt3__110unique_ptrINS_8protocol6Memory15SamplingProfileENS1_14default_deleteIS5_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorMemoryAgent"*, %"class.std::__1::unique_ptr.2174"* nocapture) unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::protocol::Memory::SamplingProfile"* @_ZN5blink20InspectorMemoryAgent22GetSamplingProfileByIdEj(%"class.blink::InspectorMemoryAgent"* %1, i32 0)
  %5 = ptrtoint %"class.blink::protocol::Memory::SamplingProfile"* %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.2174", %"class.std::__1::unique_ptr.2174"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::protocol::Memory::SamplingProfile"*, %"class.blink::protocol::Memory::SamplingProfile"** %6, align 8
  %8 = bitcast %"class.std::__1::unique_ptr.2174"* %2 to i64*
  store i64 %5, i64* %8, align 8
  %9 = icmp eq %"class.blink::protocol::Memory::SamplingProfile"* %7, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::protocol::Memory::SamplingProfile"* %7 to void (%"class.blink::protocol::Memory::SamplingProfile"*)***
  %12 = load void (%"class.blink::protocol::Memory::SamplingProfile"*)**, void (%"class.blink::protocol::Memory::SamplingProfile"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::protocol::Memory::SamplingProfile"*)*, void (%"class.blink::protocol::Memory::SamplingProfile"*)** %12, i64 2
  %14 = load void (%"class.blink::protocol::Memory::SamplingProfile"*)*, void (%"class.blink::protocol::Memory::SamplingProfile"*)** %13, align 8
  tail call void %14(%"class.blink::protocol::Memory::SamplingProfile"* nonnull %7) #15
  br label %15

15:                                               ; preds = %10, %3
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::Memory::SamplingProfile"* @_ZN5blink20InspectorMemoryAgent22GetSamplingProfileByIdEj(%"class.blink::InspectorMemoryAgent"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ModuleCache", align 8
  %4 = alloca %"class.std::__1::vector.2253", align 8
  %5 = alloca %"class.WTF::Vector.1114", align 8
  %6 = alloca %"class.blink::WebVector.2268", align 8
  %7 = alloca %"class.std::__1::unique_ptr.2182", align 8
  %8 = alloca %"class.v8::HeapStatistics", align 8
  %9 = alloca %"class.std::__1::unique_ptr.2182", align 8
  %10 = alloca %"class.std::__1::vector.2272", align 8
  %11 = alloca %"class.std::__1::unique_ptr.2217", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.std::__1::basic_string.2281", align 8
  %14 = alloca %"class.base::FilePath", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = bitcast %"class.base::ModuleCache"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %17) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 80, i1 false)
  call void @_ZN4base11ModuleCacheC1Ev(%"class.base::ModuleCache"* nonnull %3) #15
  %18 = call i8* @_Znwm(i64 24) #17
  %19 = bitcast i8* %18 to %"class.std::__1::vector.2180"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #15
  %20 = ptrtoint i8* %18 to i64
  %21 = bitcast %"class.std::__1::vector.2253"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #15
  %22 = getelementptr inbounds %"class.std::__1::vector.2253", %"class.std::__1::vector.2253"* %4, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::vector.2253", %"class.std::__1::vector.2253"* %4, i64 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::vector.2253"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  %25 = call %"class.base::SamplingHeapProfiler"* @_ZN4base20SamplingHeapProfiler3GetEv() #15
  call void @_ZN4base20SamplingHeapProfiler10GetSamplesEj(%"class.std::__1::vector.2253"* nonnull sret %4, %"class.base::SamplingHeapProfiler"* %25, i32 %1) #15
  %26 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %22, align 8
  %27 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %23, align 8
  %28 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %26, %27
  br i1 %28, label %50, label %29

29:                                               ; preds = %2
  %30 = bitcast %"class.WTF::Vector.1114"* %5 to i8*
  %31 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %5, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %5, i64 0, i32 0, i32 0, i32 2
  %33 = bitcast %"class.blink::WebVector.2268"* %6 to i8*
  %34 = getelementptr inbounds %"class.blink::WebVector.2268", %"class.blink::WebVector.2268"* %6, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast i8*** %34 to i8**
  %36 = bitcast %"class.blink::WebVector.2268"* %6 to i8**
  %37 = getelementptr inbounds %"class.blink::WebVector.2268", %"class.blink::WebVector.2268"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast i8*** %34 to i64*
  %39 = getelementptr inbounds %"class.blink::WebVector.2268", %"class.blink::WebVector.2268"* %6, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.std::__1::unique_ptr.2182"* %7 to i8*
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %7, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr.2182"* %7 to i8**
  %43 = getelementptr inbounds i8, i8* %18, i64 8
  %44 = bitcast i8* %43 to %"class.std::__1::unique_ptr.2182"**
  %45 = getelementptr inbounds i8, i8* %18, i64 16
  %46 = bitcast i8* %45 to %"class.std::__1::unique_ptr.2182"**
  %47 = bitcast i8* %43 to i64*
  %48 = bitcast %"class.WTF::Vector.1114"* %5 to i8**
  %49 = bitcast %"class.WTF::Vector.1114"* %5 to i8*
  br label %52

50:                                               ; preds = %354, %2
  %51 = icmp eq i32 %1, 0
  br i1 %51, label %394, label %438

52:                                               ; preds = %29, %354
  %53 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %26, %29 ], [ %355, %354 ]
  %54 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %53, i64 0, i32 6, i32 0, i32 0
  %55 = load i8**, i8*** %54, align 8
  %56 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %53, i64 0, i32 6, i32 0, i32 1
  %57 = load i8**, i8*** %56, align 8
  %58 = icmp eq i8** %55, %57
  br i1 %58, label %62, label %280

59:                                               ; preds = %280
  %60 = load i8**, i8*** %54, align 8
  %61 = load i8**, i8*** %56, align 8
  br label %62

62:                                               ; preds = %59, %52
  %63 = phi i8** [ %61, %59 ], [ %55, %52 ]
  %64 = phi i8** [ %60, %59 ], [ %55, %52 ]
  %65 = bitcast i8** %64 to i8*
  %66 = ptrtoint i8** %64 to i64
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #15
  %67 = ptrtoint i8** %63 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = icmp eq i64 %68, 0
  br i1 %70, label %259, label %71

71:                                               ; preds = %62
  %72 = icmp ugt i64 %69, 2305843009213693951
  br i1 %72, label %73, label %75

73:                                               ; preds = %71
  %74 = bitcast %"class.blink::WebVector.2268"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %74) #18
  unreachable

75:                                               ; preds = %71
  %76 = call i8* @_Znwm(i64 %68) #17
  %77 = bitcast i8* %76 to i8**
  store i8* %76, i8** %35, align 8
  store i8* %76, i8** %36, align 8
  %78 = getelementptr inbounds i8*, i8** %77, i64 %69
  store i8** %78, i8*** %37, align 8
  %79 = ptrtoint i8* %76 to i64
  %80 = icmp eq i8** %64, %63
  br i1 %80, label %257, label %81

81:                                               ; preds = %75
  %82 = getelementptr i8*, i8** %63, i64 -1
  %83 = ptrtoint i8** %82 to i64
  %84 = sub i64 %83, %66
  %85 = lshr i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = icmp ult i64 %86, 4
  br i1 %87, label %183, label %88

88:                                               ; preds = %81
  %89 = getelementptr i8, i8* %76, i64 8
  %90 = getelementptr i8*, i8** %63, i64 -1
  %91 = ptrtoint i8** %90 to i64
  %92 = sub i64 %91, %66
  %93 = lshr i64 %92, 3
  %94 = and i64 %92, -8
  %95 = getelementptr i8, i8* %89, i64 %94
  %96 = getelementptr i8*, i8** %64, i64 1
  %97 = getelementptr i8*, i8** %96, i64 %93
  %98 = bitcast i8** %97 to i8*
  %99 = icmp ult i8* %76, %98
  %100 = icmp ugt i8* %95, %65
  %101 = and i1 %99, %100
  br i1 %101, label %183, label %102

102:                                              ; preds = %88
  %103 = and i64 %86, 4611686018427387900
  %104 = getelementptr i8*, i8** %77, i64 %103
  %105 = getelementptr i8*, i8** %64, i64 %103
  %106 = add nsw i64 %103, -4
  %107 = lshr exact i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = and i64 %108, 3
  %110 = icmp ult i64 %106, 12
  br i1 %110, label %162, label %111

111:                                              ; preds = %102
  %112 = sub nsw i64 %108, %109
  br label %113

113:                                              ; preds = %113, %111
  %114 = phi i64 [ 0, %111 ], [ %159, %113 ]
  %115 = phi i64 [ %112, %111 ], [ %160, %113 ]
  %116 = getelementptr i8*, i8** %77, i64 %114
  %117 = getelementptr i8*, i8** %64, i64 %114
  %118 = bitcast i8** %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !8
  %120 = getelementptr i8*, i8** %117, i64 2
  %121 = bitcast i8** %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !8
  %123 = bitcast i8** %116 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %123, align 8, !alias.scope !11, !noalias !8
  %124 = getelementptr i8*, i8** %116, i64 2
  %125 = bitcast i8** %124 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %125, align 8, !alias.scope !11, !noalias !8
  %126 = or i64 %114, 4
  %127 = getelementptr i8*, i8** %77, i64 %126
  %128 = getelementptr i8*, i8** %64, i64 %126
  %129 = bitcast i8** %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !8
  %131 = getelementptr i8*, i8** %128, i64 2
  %132 = bitcast i8** %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8, !alias.scope !8
  %134 = bitcast i8** %127 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %134, align 8, !alias.scope !11, !noalias !8
  %135 = getelementptr i8*, i8** %127, i64 2
  %136 = bitcast i8** %135 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %136, align 8, !alias.scope !11, !noalias !8
  %137 = or i64 %114, 8
  %138 = getelementptr i8*, i8** %77, i64 %137
  %139 = getelementptr i8*, i8** %64, i64 %137
  %140 = bitcast i8** %139 to <2 x i64>*
  %141 = load <2 x i64>, <2 x i64>* %140, align 8, !alias.scope !8
  %142 = getelementptr i8*, i8** %139, i64 2
  %143 = bitcast i8** %142 to <2 x i64>*
  %144 = load <2 x i64>, <2 x i64>* %143, align 8, !alias.scope !8
  %145 = bitcast i8** %138 to <2 x i64>*
  store <2 x i64> %141, <2 x i64>* %145, align 8, !alias.scope !11, !noalias !8
  %146 = getelementptr i8*, i8** %138, i64 2
  %147 = bitcast i8** %146 to <2 x i64>*
  store <2 x i64> %144, <2 x i64>* %147, align 8, !alias.scope !11, !noalias !8
  %148 = or i64 %114, 12
  %149 = getelementptr i8*, i8** %77, i64 %148
  %150 = getelementptr i8*, i8** %64, i64 %148
  %151 = bitcast i8** %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !8
  %153 = getelementptr i8*, i8** %150, i64 2
  %154 = bitcast i8** %153 to <2 x i64>*
  %155 = load <2 x i64>, <2 x i64>* %154, align 8, !alias.scope !8
  %156 = bitcast i8** %149 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %156, align 8, !alias.scope !11, !noalias !8
  %157 = getelementptr i8*, i8** %149, i64 2
  %158 = bitcast i8** %157 to <2 x i64>*
  store <2 x i64> %155, <2 x i64>* %158, align 8, !alias.scope !11, !noalias !8
  %159 = add i64 %114, 16
  %160 = add i64 %115, -4
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %113, !llvm.loop !13

162:                                              ; preds = %113, %102
  %163 = phi i64 [ 0, %102 ], [ %159, %113 ]
  %164 = icmp eq i64 %109, 0
  br i1 %164, label %181, label %165

165:                                              ; preds = %162, %165
  %166 = phi i64 [ %178, %165 ], [ %163, %162 ]
  %167 = phi i64 [ %179, %165 ], [ %109, %162 ]
  %168 = getelementptr i8*, i8** %77, i64 %166
  %169 = getelementptr i8*, i8** %64, i64 %166
  %170 = bitcast i8** %169 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8, !alias.scope !8
  %172 = getelementptr i8*, i8** %169, i64 2
  %173 = bitcast i8** %172 to <2 x i64>*
  %174 = load <2 x i64>, <2 x i64>* %173, align 8, !alias.scope !8
  %175 = bitcast i8** %168 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %175, align 8, !alias.scope !11, !noalias !8
  %176 = getelementptr i8*, i8** %168, i64 2
  %177 = bitcast i8** %176 to <2 x i64>*
  store <2 x i64> %174, <2 x i64>* %177, align 8, !alias.scope !11, !noalias !8
  %178 = add i64 %166, 4
  %179 = add i64 %167, -1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %165, !llvm.loop !15

181:                                              ; preds = %165, %162
  %182 = icmp eq i64 %86, %103
  br i1 %182, label %254, label %183

183:                                              ; preds = %181, %88, %81
  %184 = phi i8** [ %77, %88 ], [ %77, %81 ], [ %104, %181 ]
  %185 = phi i8** [ %64, %88 ], [ %64, %81 ], [ %105, %181 ]
  %186 = ptrtoint i8** %185 to i64
  %187 = getelementptr i8*, i8** %63, i64 -1
  %188 = ptrtoint i8** %187 to i64
  %189 = sub i64 %188, %186
  %190 = lshr i64 %189, 3
  %191 = add nuw nsw i64 %190, 1
  %192 = and i64 %191, 7
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %205, label %194

194:                                              ; preds = %183, %194
  %195 = phi i8** [ %202, %194 ], [ %184, %183 ]
  %196 = phi i8** [ %201, %194 ], [ %185, %183 ]
  %197 = phi i64 [ %203, %194 ], [ %192, %183 ]
  %198 = bitcast i8** %195 to i64*
  %199 = bitcast i8** %196 to i64*
  %200 = load i64, i64* %199, align 8
  store i64 %200, i64* %198, align 8
  %201 = getelementptr inbounds i8*, i8** %196, i64 1
  %202 = getelementptr inbounds i8*, i8** %195, i64 1
  %203 = add i64 %197, -1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %194, !llvm.loop !17

205:                                              ; preds = %194, %183
  %206 = phi i8** [ undef, %183 ], [ %202, %194 ]
  %207 = phi i8** [ %184, %183 ], [ %202, %194 ]
  %208 = phi i8** [ %185, %183 ], [ %201, %194 ]
  %209 = icmp ult i64 %189, 56
  br i1 %209, label %254, label %210

210:                                              ; preds = %205, %210
  %211 = phi i8** [ %252, %210 ], [ %207, %205 ]
  %212 = phi i8** [ %251, %210 ], [ %208, %205 ]
  %213 = bitcast i8** %211 to i64*
  %214 = bitcast i8** %212 to i64*
  %215 = load i64, i64* %214, align 8
  store i64 %215, i64* %213, align 8
  %216 = getelementptr inbounds i8*, i8** %212, i64 1
  %217 = getelementptr inbounds i8*, i8** %211, i64 1
  %218 = bitcast i8** %217 to i64*
  %219 = bitcast i8** %216 to i64*
  %220 = load i64, i64* %219, align 8
  store i64 %220, i64* %218, align 8
  %221 = getelementptr inbounds i8*, i8** %212, i64 2
  %222 = getelementptr inbounds i8*, i8** %211, i64 2
  %223 = bitcast i8** %222 to i64*
  %224 = bitcast i8** %221 to i64*
  %225 = load i64, i64* %224, align 8
  store i64 %225, i64* %223, align 8
  %226 = getelementptr inbounds i8*, i8** %212, i64 3
  %227 = getelementptr inbounds i8*, i8** %211, i64 3
  %228 = bitcast i8** %227 to i64*
  %229 = bitcast i8** %226 to i64*
  %230 = load i64, i64* %229, align 8
  store i64 %230, i64* %228, align 8
  %231 = getelementptr inbounds i8*, i8** %212, i64 4
  %232 = getelementptr inbounds i8*, i8** %211, i64 4
  %233 = bitcast i8** %232 to i64*
  %234 = bitcast i8** %231 to i64*
  %235 = load i64, i64* %234, align 8
  store i64 %235, i64* %233, align 8
  %236 = getelementptr inbounds i8*, i8** %212, i64 5
  %237 = getelementptr inbounds i8*, i8** %211, i64 5
  %238 = bitcast i8** %237 to i64*
  %239 = bitcast i8** %236 to i64*
  %240 = load i64, i64* %239, align 8
  store i64 %240, i64* %238, align 8
  %241 = getelementptr inbounds i8*, i8** %212, i64 6
  %242 = getelementptr inbounds i8*, i8** %211, i64 6
  %243 = bitcast i8** %242 to i64*
  %244 = bitcast i8** %241 to i64*
  %245 = load i64, i64* %244, align 8
  store i64 %245, i64* %243, align 8
  %246 = getelementptr inbounds i8*, i8** %212, i64 7
  %247 = getelementptr inbounds i8*, i8** %211, i64 7
  %248 = bitcast i8** %247 to i64*
  %249 = bitcast i8** %246 to i64*
  %250 = load i64, i64* %249, align 8
  store i64 %250, i64* %248, align 8
  %251 = getelementptr inbounds i8*, i8** %212, i64 8
  %252 = getelementptr inbounds i8*, i8** %211, i64 8
  %253 = icmp eq i8** %251, %63
  br i1 %253, label %254, label %210, !llvm.loop !18

254:                                              ; preds = %205, %210, %181
  %255 = phi i8** [ %104, %181 ], [ %206, %205 ], [ %252, %210 ]
  %256 = ptrtoint i8** %255 to i64
  br label %257

257:                                              ; preds = %254, %75
  %258 = phi i64 [ %79, %75 ], [ %256, %254 ]
  store i64 %258, i64* %38, align 8
  br label %259

259:                                              ; preds = %62, %257
  call void @_ZN5blink20InspectorMemoryAgent9SymbolizeERKNS_9WebVectorIPvEE(%"class.WTF::Vector.1114"* nonnull sret %5, %"class.blink::InspectorMemoryAgent"* %0, %"class.blink::WebVector.2268"* nonnull dereferenceable(24) %6)
  %260 = load i8**, i8*** %39, align 8
  %261 = icmp eq i8** %260, null
  br i1 %261, label %265, label %262

262:                                              ; preds = %259
  %263 = ptrtoint i8** %260 to i64
  store i64 %263, i64* %38, align 8
  %264 = bitcast i8** %260 to i8*
  call void @_ZdlPv(i8* %264) #17
  br label %265

265:                                              ; preds = %259, %262
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #15
  %266 = call i8* @_Znwm(i64 24) #17
  %267 = bitcast i8* %266 to %"class.std::__1::vector.2191"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %266, i8 0, i64 24, i1 false) #15
  %268 = ptrtoint i8* %266 to i64
  %269 = load %"class.WTF::String"*, %"class.WTF::String"** %31, align 8
  %270 = load i32, i32* %32, align 4
  %271 = zext i32 %270 to i64
  %272 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %269, i64 %271
  %273 = icmp eq i32 %270, 0
  br i1 %273, label %287, label %274

274:                                              ; preds = %265
  %275 = getelementptr inbounds i8, i8* %266, i64 8
  %276 = bitcast i8* %275 to %"class.WTF::String"**
  %277 = getelementptr inbounds i8, i8* %266, i64 16
  %278 = bitcast i8* %277 to %"class.WTF::String"**
  %279 = bitcast i8* %275 to i64*
  br label %357

280:                                              ; preds = %52, %280
  %281 = phi i8** [ %285, %280 ], [ %55, %52 ]
  %282 = bitcast i8** %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = call %"class.base::ModuleCache::Module"* @_ZN4base11ModuleCache19GetModuleForAddressEm(%"class.base::ModuleCache"* nonnull %3, i64 %283) #15
  %285 = getelementptr inbounds i8*, i8** %281, i64 1
  %286 = icmp eq i8** %285, %57
  br i1 %286, label %59, label %280

287:                                              ; preds = %388, %265
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #15
  %288 = call i8* @_Znwm(i64 32) #17
  %289 = bitcast i8* %288 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Memory19SamplingProfileNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %289, align 8
  %290 = getelementptr inbounds i8, i8* %288, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %290, i8 0, i64 24, i1 false) #15
  %291 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %53, i64 0, i32 0
  %292 = load i64, i64* %291, align 8
  %293 = uitofp i64 %292 to double
  %294 = bitcast i8* %290 to double*
  store double %293, double* %294, align 8
  %295 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %53, i64 0, i32 1
  %296 = load i64, i64* %295, align 8
  %297 = uitofp i64 %296 to double
  %298 = getelementptr inbounds i8, i8* %288, i64 16
  %299 = bitcast i8* %298 to double*
  store double %297, double* %299, align 8
  %300 = getelementptr inbounds i8, i8* %288, i64 24
  %301 = bitcast i8* %300 to i64*
  store i64 %268, i64* %301, align 8
  %302 = load %"class.std::__1::unique_ptr.2182"*, %"class.std::__1::unique_ptr.2182"** %44, align 8
  %303 = load %"class.std::__1::unique_ptr.2182"*, %"class.std::__1::unique_ptr.2182"** %46, align 8
  store i8* %288, i8** %42, align 8
  %304 = icmp ult %"class.std::__1::unique_ptr.2182"* %302, %303
  br i1 %304, label %305, label %310

305:                                              ; preds = %287
  %306 = ptrtoint i8* %288 to i64
  store %"class.blink::protocol::Memory::SamplingProfileNode"* null, %"class.blink::protocol::Memory::SamplingProfileNode"** %41, align 8
  %307 = bitcast %"class.std::__1::unique_ptr.2182"* %302 to i64*
  store i64 %306, i64* %307, align 8
  %308 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %302, i64 1
  %309 = ptrtoint %"class.std::__1::unique_ptr.2182"* %308 to i64
  store i64 %309, i64* %47, align 8
  br label %311

310:                                              ; preds = %287
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol6Memory19SamplingProfileNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2180"* nonnull %19, %"class.std::__1::unique_ptr.2182"* nonnull dereferenceable(8) %7) #15
  br label %311

311:                                              ; preds = %305, %310
  %312 = load %"class.blink::protocol::Memory::SamplingProfileNode"*, %"class.blink::protocol::Memory::SamplingProfileNode"** %41, align 8
  store %"class.blink::protocol::Memory::SamplingProfileNode"* null, %"class.blink::protocol::Memory::SamplingProfileNode"** %41, align 8
  %313 = icmp eq %"class.blink::protocol::Memory::SamplingProfileNode"* %312, null
  br i1 %313, label %319, label %314

314:                                              ; preds = %311
  %315 = bitcast %"class.blink::protocol::Memory::SamplingProfileNode"* %312 to void (%"class.blink::protocol::Memory::SamplingProfileNode"*)***
  %316 = load void (%"class.blink::protocol::Memory::SamplingProfileNode"*)**, void (%"class.blink::protocol::Memory::SamplingProfileNode"*)*** %315, align 8
  %317 = getelementptr inbounds void (%"class.blink::protocol::Memory::SamplingProfileNode"*)*, void (%"class.blink::protocol::Memory::SamplingProfileNode"*)** %316, i64 2
  %318 = load void (%"class.blink::protocol::Memory::SamplingProfileNode"*)*, void (%"class.blink::protocol::Memory::SamplingProfileNode"*)** %317, align 8
  call void %318(%"class.blink::protocol::Memory::SamplingProfileNode"* nonnull %312) #15
  br label %319

319:                                              ; preds = %314, %311
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #15
  %320 = load %"class.WTF::String"*, %"class.WTF::String"** %31, align 8
  %321 = icmp eq %"class.WTF::String"* %320, null
  br i1 %321, label %354, label %322, !prof !2

322:                                              ; preds = %319
  %323 = bitcast %"class.WTF::String"* %320 to i8*
  %324 = load i32, i32* %32, align 4
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %352, label %326, !prof !3

326:                                              ; preds = %322
  %327 = zext i32 %324 to i64
  %328 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %320, i64 %327
  br label %329

329:                                              ; preds = %347, %326
  %330 = phi %"class.WTF::String"* [ %348, %347 ], [ %320, %326 ]
  %331 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %330, i64 0, i32 0, i32 0
  %332 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %331, align 8
  %333 = icmp eq %"class.WTF::StringImpl"* %332, null
  br i1 %333, label %347, label %334

334:                                              ; preds = %329
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %332, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = load atomic i32, i32* %335 monotonic, align 4
  %337 = and i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %332, i64 0, i32 0
  %340 = load i32, i32* %339, align 4
  br i1 %338, label %341, label %343

341:                                              ; preds = %334
  %342 = add i32 %340, -1
  store i32 %342, i32* %339, align 4
  br label %343

343:                                              ; preds = %341, %334
  %344 = phi i32 [ %342, %341 ], [ %340, %334 ]
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %347

346:                                              ; preds = %343
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %332) #15
  br label %347

347:                                              ; preds = %346, %343, %329
  %348 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %330, i64 1
  %349 = icmp eq %"class.WTF::String"* %348, %328
  br i1 %349, label %350, label %329

350:                                              ; preds = %347
  store i32 0, i32* %32, align 4
  %351 = load i8*, i8** %48, align 8
  br label %352

352:                                              ; preds = %350, %322
  %353 = phi i8* [ %351, %350 ], [ %323, %322 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %353) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %31, align 8
  br label %354

354:                                              ; preds = %319, %352
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #15
  %355 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %53, i64 1
  %356 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %355, %27
  br i1 %356, label %50, label %52

357:                                              ; preds = %391, %274
  %358 = phi %"class.WTF::String"* [ null, %274 ], [ %393, %391 ]
  %359 = phi %"class.WTF::String"* [ null, %274 ], [ %392, %391 ]
  %360 = phi %"class.WTF::String"* [ %269, %274 ], [ %389, %391 ]
  %361 = icmp ult %"class.WTF::String"* %359, %358
  br i1 %361, label %362, label %387

362:                                              ; preds = %357
  %363 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %360, i64 0, i32 0, i32 0
  %364 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %363, align 8
  %365 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %359, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %364, %"class.WTF::StringImpl"** %365, align 8
  %366 = icmp eq %"class.WTF::StringImpl"* %364, null
  br i1 %366, label %384, label %367

367:                                              ; preds = %362
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %369 = load atomic i32, i32* %368 monotonic, align 4
  %370 = and i32 %369, 2
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %384

372:                                              ; preds = %367
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 0
  %374 = load i32, i32* %373, align 4
  %375 = zext i32 %374 to i33
  %376 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %375, i33 1) #15
  %377 = extractvalue { i33, i1 } %376, 1
  %378 = extractvalue { i33, i1 } %376, 0
  %379 = icmp slt i33 %378, 0
  %380 = or i1 %377, %379
  br i1 %380, label %381, label %382, !prof !3

381:                                              ; preds = %372
  call void @llvm.trap() #15
  unreachable

382:                                              ; preds = %372
  %383 = trunc i33 %378 to i32
  store i32 %383, i32* %373, align 4
  br label %384

384:                                              ; preds = %382, %367, %362
  %385 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %359, i64 1
  %386 = ptrtoint %"class.WTF::String"* %385 to i64
  store i64 %386, i64* %279, align 8
  br label %388

387:                                              ; preds = %357
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_(%"class.std::__1::vector.2191"* nonnull %267, %"class.WTF::String"* dereferenceable(8) %360) #15
  br label %388

388:                                              ; preds = %384, %387
  %389 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %360, i64 1
  %390 = icmp eq %"class.WTF::String"* %389, %272
  br i1 %390, label %287, label %391

391:                                              ; preds = %388
  %392 = load %"class.WTF::String"*, %"class.WTF::String"** %276, align 8
  %393 = load %"class.WTF::String"*, %"class.WTF::String"** %278, align 8
  br label %357

394:                                              ; preds = %50
  %395 = bitcast %"class.v8::HeapStatistics"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %395) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %395, i8 -86, i64 112, i1 false)
  call void @_ZN2v814HeapStatisticsC1Ev(%"class.v8::HeapStatistics"* nonnull %8) #15
  %396 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #15
  call void @_ZN2v87Isolate17GetHeapStatisticsEPNS_14HeapStatisticsE(%"class.v8::Isolate"* %396, %"class.v8::HeapStatistics"* nonnull %8) #15
  %397 = getelementptr inbounds %"class.v8::HeapStatistics", %"class.v8::HeapStatistics"* %8, i64 0, i32 0
  %398 = load i64, i64* %397, align 8
  %399 = call i8* @_Znwm(i64 24) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %399, i8 0, i64 24, i1 false) #15
  %400 = ptrtoint i8* %399 to i64
  %401 = bitcast i8* %399 to %"class.std::__1::vector.2191"*
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA10_KcEEEvDpOT_(%"class.std::__1::vector.2191"* nonnull %401, [10 x i8]* nonnull dereferenceable(10) @.str.2) #15
  %402 = bitcast %"class.std::__1::unique_ptr.2182"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %402) #15
  %403 = call i8* @_Znwm(i64 32) #17
  %404 = bitcast i8* %403 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Memory19SamplingProfileNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %404, align 8
  %405 = getelementptr inbounds i8, i8* %403, i64 8
  %406 = uitofp i64 %398 to double
  %407 = bitcast i8* %405 to double*
  store double %406, double* %407, align 8
  %408 = getelementptr inbounds i8, i8* %403, i64 16
  %409 = bitcast i8* %408 to double*
  store double %406, double* %409, align 8
  %410 = getelementptr inbounds i8, i8* %403, i64 24
  %411 = bitcast i8* %410 to i64*
  store i64 %400, i64* %411, align 8
  %412 = getelementptr inbounds i8, i8* %18, i64 8
  %413 = bitcast i8* %412 to %"class.std::__1::unique_ptr.2182"**
  %414 = load %"class.std::__1::unique_ptr.2182"*, %"class.std::__1::unique_ptr.2182"** %413, align 8
  %415 = getelementptr inbounds i8, i8* %18, i64 16
  %416 = bitcast i8* %415 to %"class.std::__1::unique_ptr.2182"**
  %417 = load %"class.std::__1::unique_ptr.2182"*, %"class.std::__1::unique_ptr.2182"** %416, align 8
  %418 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %9, i64 0, i32 0, i32 0, i32 0
  %419 = bitcast %"class.std::__1::unique_ptr.2182"* %9 to i8**
  store i8* %403, i8** %419, align 8
  %420 = icmp ult %"class.std::__1::unique_ptr.2182"* %414, %417
  br i1 %420, label %421, label %428

421:                                              ; preds = %394
  %422 = ptrtoint i8* %403 to i64
  %423 = getelementptr inbounds i8, i8* %18, i64 8
  store %"class.blink::protocol::Memory::SamplingProfileNode"* null, %"class.blink::protocol::Memory::SamplingProfileNode"** %418, align 8
  %424 = bitcast %"class.std::__1::unique_ptr.2182"* %414 to i64*
  store i64 %422, i64* %424, align 8
  %425 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %414, i64 1
  %426 = ptrtoint %"class.std::__1::unique_ptr.2182"* %425 to i64
  %427 = bitcast i8* %423 to i64*
  store i64 %426, i64* %427, align 8
  br label %429

428:                                              ; preds = %394
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol6Memory19SamplingProfileNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2180"* nonnull %19, %"class.std::__1::unique_ptr.2182"* nonnull dereferenceable(8) %9) #15
  br label %429

429:                                              ; preds = %421, %428
  %430 = load %"class.blink::protocol::Memory::SamplingProfileNode"*, %"class.blink::protocol::Memory::SamplingProfileNode"** %418, align 8
  store %"class.blink::protocol::Memory::SamplingProfileNode"* null, %"class.blink::protocol::Memory::SamplingProfileNode"** %418, align 8
  %431 = icmp eq %"class.blink::protocol::Memory::SamplingProfileNode"* %430, null
  br i1 %431, label %437, label %432

432:                                              ; preds = %429
  %433 = bitcast %"class.blink::protocol::Memory::SamplingProfileNode"* %430 to void (%"class.blink::protocol::Memory::SamplingProfileNode"*)***
  %434 = load void (%"class.blink::protocol::Memory::SamplingProfileNode"*)**, void (%"class.blink::protocol::Memory::SamplingProfileNode"*)*** %433, align 8
  %435 = getelementptr inbounds void (%"class.blink::protocol::Memory::SamplingProfileNode"*)*, void (%"class.blink::protocol::Memory::SamplingProfileNode"*)** %434, i64 2
  %436 = load void (%"class.blink::protocol::Memory::SamplingProfileNode"*)*, void (%"class.blink::protocol::Memory::SamplingProfileNode"*)** %435, align 8
  call void %436(%"class.blink::protocol::Memory::SamplingProfileNode"* nonnull %430) #15
  br label %437

437:                                              ; preds = %432, %429
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %402) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %395) #15
  br label %438

438:                                              ; preds = %50, %437
  %439 = call i8* @_Znwm(i64 24) #17
  %440 = bitcast i8* %439 to %"class.std::__1::vector.2215"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %439, i8 0, i64 24, i1 false) #15
  %441 = ptrtoint i8* %439 to i64
  %442 = bitcast %"class.std::__1::vector.2272"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %442) #15
  call void @_ZNK4base11ModuleCache10GetModulesEv(%"class.std::__1::vector.2272"* nonnull sret %10, %"class.base::ModuleCache"* nonnull %3) #15
  %443 = getelementptr inbounds %"class.std::__1::vector.2272", %"class.std::__1::vector.2272"* %10, i64 0, i32 0, i32 0
  %444 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %443, align 8
  %445 = getelementptr inbounds %"class.std::__1::vector.2272", %"class.std::__1::vector.2272"* %10, i64 0, i32 0, i32 1
  %446 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %445, align 8
  %447 = icmp eq %"class.base::ModuleCache::Module"** %444, %446
  br i1 %447, label %474, label %448

448:                                              ; preds = %438
  %449 = bitcast %"class.std::__1::unique_ptr.2217"* %11 to i8*
  %450 = bitcast %"class.WTF::String"* %12 to i8*
  %451 = bitcast %"class.std::__1::basic_string.2281"* %13 to i8*
  %452 = bitcast %"class.base::FilePath"* %14 to i8*
  %453 = bitcast %"class.std::__1::basic_string.2281"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %454 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %453, i64 0, i32 1, i32 1
  %455 = getelementptr inbounds %"class.std::__1::basic_string.2281", %"class.std::__1::basic_string.2281"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = bitcast %"class.std::__1::basic_string.2281"* %13 to i16*
  %457 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %458 = bitcast %"class.WTF::String"* %15 to i8*
  %459 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %460 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %461 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %460, i64 0, i32 1, i32 0
  %462 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %463 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %464 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %11, i64 0, i32 0, i32 0, i32 0
  %465 = bitcast %"class.std::__1::unique_ptr.2217"* %11 to i8**
  %466 = getelementptr inbounds i8, i8* %439, i64 8
  %467 = bitcast i8* %466 to %"class.std::__1::unique_ptr.2217"**
  %468 = getelementptr inbounds i8, i8* %439, i64 16
  %469 = bitcast i8* %468 to %"class.std::__1::unique_ptr.2217"**
  %470 = bitcast i8* %466 to i64*
  %471 = bitcast %"class.std::__1::basic_string.2281"* %13 to i8**
  br label %505

472:                                              ; preds = %738
  %473 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %443, align 8
  br label %474

474:                                              ; preds = %472, %438
  %475 = phi %"class.base::ModuleCache::Module"** [ %473, %472 ], [ %444, %438 ]
  %476 = icmp eq %"class.base::ModuleCache::Module"** %475, null
  br i1 %476, label %481, label %477

477:                                              ; preds = %474
  %478 = ptrtoint %"class.base::ModuleCache::Module"** %475 to i64
  %479 = bitcast %"class.base::ModuleCache::Module"*** %445 to i64*
  store i64 %478, i64* %479, align 8
  %480 = bitcast %"class.base::ModuleCache::Module"** %475 to i8*
  call void @_ZdlPv(i8* %480) #17
  br label %481

481:                                              ; preds = %474, %477
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %442) #15
  %482 = call i8* @_Znwm(i64 24) #17
  %483 = bitcast i8* %482 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Memory15SamplingProfileE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %483, align 8
  %484 = getelementptr inbounds i8, i8* %482, i64 8
  %485 = bitcast i8* %482 to %"class.blink::protocol::Memory::SamplingProfile"*
  %486 = bitcast i8* %484 to i64*
  store i64 %20, i64* %486, align 8
  %487 = getelementptr inbounds i8, i8* %482, i64 16
  %488 = bitcast i8* %487 to i64*
  store i64 %441, i64* %488, align 8
  %489 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %22, align 8
  %490 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %489, null
  br i1 %490, label %504, label %491

491:                                              ; preds = %481
  %492 = bitcast %"class.base::SamplingHeapProfiler::Sample"* %489 to i8*
  %493 = load %"class.base::SamplingHeapProfiler::Sample"*, %"class.base::SamplingHeapProfiler::Sample"** %23, align 8
  %494 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %493, %489
  br i1 %494, label %502, label %495

495:                                              ; preds = %491, %495
  %496 = phi %"class.base::SamplingHeapProfiler::Sample"* [ %497, %495 ], [ %493, %491 ]
  %497 = getelementptr inbounds %"class.base::SamplingHeapProfiler::Sample", %"class.base::SamplingHeapProfiler::Sample"* %496, i64 -1
  call void @_ZN4base20SamplingHeapProfiler6SampleD1Ev(%"class.base::SamplingHeapProfiler::Sample"* %497) #15
  %498 = icmp eq %"class.base::SamplingHeapProfiler::Sample"* %497, %489
  br i1 %498, label %499, label %495

499:                                              ; preds = %495
  %500 = bitcast %"class.std::__1::vector.2253"* %4 to i8**
  %501 = load i8*, i8** %500, align 8
  br label %502

502:                                              ; preds = %499, %491
  %503 = phi i8* [ %501, %499 ], [ %492, %491 ]
  store %"class.base::SamplingHeapProfiler::Sample"* %489, %"class.base::SamplingHeapProfiler::Sample"** %23, align 8
  call void @_ZdlPv(i8* %503) #17
  br label %504

504:                                              ; preds = %481, %502
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #15
  call void @_ZN4base11ModuleCacheD1Ev(%"class.base::ModuleCache"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %17) #15
  ret %"class.blink::protocol::Memory::SamplingProfile"* %485

505:                                              ; preds = %448, %738
  %506 = phi %"class.base::ModuleCache::Module"** [ %444, %448 ], [ %739, %738 ]
  %507 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %506, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %449) #15
  %508 = call i8* @_Znwm(i64 40) #17
  %509 = bitcast i8* %508 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Memory6ModuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %509, align 8
  %510 = getelementptr inbounds i8, i8* %508, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %510, i8 0, i64 32, i1 false) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %450) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %451) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %452) #15
  %511 = bitcast %"class.base::ModuleCache::Module"* %507 to void (%"class.base::FilePath"*, %"class.base::ModuleCache::Module"*)***
  %512 = load void (%"class.base::FilePath"*, %"class.base::ModuleCache::Module"*)**, void (%"class.base::FilePath"*, %"class.base::ModuleCache::Module"*)*** %511, align 8
  %513 = getelementptr inbounds void (%"class.base::FilePath"*, %"class.base::ModuleCache::Module"*)*, void (%"class.base::FilePath"*, %"class.base::ModuleCache::Module"*)** %512, i64 4
  %514 = load void (%"class.base::FilePath"*, %"class.base::ModuleCache::Module"*)*, void (%"class.base::FilePath"*, %"class.base::ModuleCache::Module"*)** %513, align 8
  call void %514(%"class.base::FilePath"* nonnull sret %14, %"class.base::ModuleCache::Module"* %507) #15
  call void @_ZNK4base8FilePath13AsUTF16UnsafeEv(%"class.std::__1::basic_string.2281"* nonnull sret %13, %"class.base::FilePath"* nonnull %14) #15
  %515 = load i8, i8* %454, align 1
  %516 = icmp slt i8 %515, 0
  %517 = load i16*, i16** %455, align 8
  %518 = select i1 %516, i16* %517, i16* %456
  call void @_ZN3WTF6StringC1EPKDs(%"class.WTF::String"* nonnull %12, i16* %518) #15
  %519 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %457, align 8
  %520 = icmp eq %"class.WTF::StringImpl"* %519, null
  br i1 %520, label %538, label %521

521:                                              ; preds = %505
  %522 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %519, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %523 = load atomic i32, i32* %522 monotonic, align 4
  %524 = and i32 %523, 2
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %526, label %538

526:                                              ; preds = %521
  %527 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %519, i64 0, i32 0
  %528 = load i32, i32* %527, align 4
  %529 = zext i32 %528 to i33
  %530 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %529, i33 1) #15
  %531 = extractvalue { i33, i1 } %530, 1
  %532 = extractvalue { i33, i1 } %530, 0
  %533 = icmp slt i33 %532, 0
  %534 = or i1 %531, %533
  br i1 %534, label %535, label %536, !prof !3

535:                                              ; preds = %526
  call void @llvm.trap() #15
  unreachable

536:                                              ; preds = %526
  %537 = trunc i33 %532 to i32
  store i32 %537, i32* %527, align 4
  br label %538

538:                                              ; preds = %536, %521, %505
  %539 = ptrtoint %"class.WTF::StringImpl"* %519 to i64
  %540 = bitcast i8* %510 to i64*
  %541 = bitcast i8* %510 to %"class.WTF::StringImpl"**
  %542 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %541, align 8
  store i64 %539, i64* %540, align 8
  %543 = icmp eq %"class.WTF::StringImpl"* %542, null
  br i1 %543, label %557, label %544

544:                                              ; preds = %538
  %545 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %542, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %546 = load atomic i32, i32* %545 monotonic, align 4
  %547 = and i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %542, i64 0, i32 0
  %550 = load i32, i32* %549, align 4
  br i1 %548, label %551, label %553

551:                                              ; preds = %544
  %552 = add i32 %550, -1
  store i32 %552, i32* %549, align 4
  br label %553

553:                                              ; preds = %551, %544
  %554 = phi i32 [ %552, %551 ], [ %550, %544 ]
  %555 = icmp eq i32 %554, 0
  br i1 %555, label %556, label %557

556:                                              ; preds = %553
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %542) #15
  br label %557

557:                                              ; preds = %538, %553, %556
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %458) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %459) #15
  %558 = bitcast %"class.base::ModuleCache::Module"* %507 to void (%"class.std::__1::basic_string"*, %"class.base::ModuleCache::Module"*)***
  %559 = load void (%"class.std::__1::basic_string"*, %"class.base::ModuleCache::Module"*)**, void (%"class.std::__1::basic_string"*, %"class.base::ModuleCache::Module"*)*** %558, align 8
  %560 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.base::ModuleCache::Module"*)*, void (%"class.std::__1::basic_string"*, %"class.base::ModuleCache::Module"*)** %559, i64 3
  %561 = load void (%"class.std::__1::basic_string"*, %"class.base::ModuleCache::Module"*)*, void (%"class.std::__1::basic_string"*, %"class.base::ModuleCache::Module"*)** %560, align 8
  call void %561(%"class.std::__1::basic_string"* nonnull sret %16, %"class.base::ModuleCache::Module"* %507) #15
  %562 = load i8, i8* %461, align 1
  %563 = icmp slt i8 %562, 0
  br i1 %563, label %564, label %567

564:                                              ; preds = %557
  %565 = load i8*, i8** %462, align 8
  %566 = icmp eq i8* %565, null
  br i1 %566, label %570, label %567

567:                                              ; preds = %557, %564
  %568 = phi i8* [ %565, %564 ], [ %459, %557 ]
  %569 = call i64 @strlen(i8* nonnull %568) #16
  br label %570

570:                                              ; preds = %564, %567
  %571 = phi i8* [ %568, %567 ], [ null, %564 ]
  %572 = phi i64 [ %569, %567 ], [ 0, %564 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* %571, i64 %572) #15
  %573 = getelementptr inbounds i8, i8* %508, i64 16
  %574 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %463, align 8
  %575 = icmp eq %"class.WTF::StringImpl"* %574, null
  br i1 %575, label %593, label %576

576:                                              ; preds = %570
  %577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %574, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %578 = load atomic i32, i32* %577 monotonic, align 4
  %579 = and i32 %578, 2
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %581, label %593

581:                                              ; preds = %576
  %582 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %574, i64 0, i32 0
  %583 = load i32, i32* %582, align 4
  %584 = zext i32 %583 to i33
  %585 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %584, i33 1) #15
  %586 = extractvalue { i33, i1 } %585, 1
  %587 = extractvalue { i33, i1 } %585, 0
  %588 = icmp slt i33 %587, 0
  %589 = or i1 %586, %588
  br i1 %589, label %590, label %591, !prof !3

590:                                              ; preds = %581
  call void @llvm.trap() #15
  unreachable

591:                                              ; preds = %581
  %592 = trunc i33 %587 to i32
  store i32 %592, i32* %582, align 4
  br label %593

593:                                              ; preds = %591, %576, %570
  %594 = ptrtoint %"class.WTF::StringImpl"* %574 to i64
  %595 = bitcast i8* %573 to i64*
  %596 = bitcast i8* %573 to %"class.WTF::StringImpl"**
  %597 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %596, align 8
  store i64 %594, i64* %595, align 8
  %598 = icmp eq %"class.WTF::StringImpl"* %597, null
  br i1 %598, label %612, label %599

599:                                              ; preds = %593
  %600 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %597, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %601 = load atomic i32, i32* %600 monotonic, align 4
  %602 = and i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %597, i64 0, i32 0
  %605 = load i32, i32* %604, align 4
  br i1 %603, label %606, label %608

606:                                              ; preds = %599
  %607 = add i32 %605, -1
  store i32 %607, i32* %604, align 4
  br label %608

608:                                              ; preds = %606, %599
  %609 = phi i32 [ %607, %606 ], [ %605, %599 ]
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %612

611:                                              ; preds = %608
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %597) #15
  br label %612

612:                                              ; preds = %593, %608, %611
  %613 = bitcast %"class.base::ModuleCache::Module"* %507 to i64 (%"class.base::ModuleCache::Module"*)***
  %614 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %613, align 8
  %615 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %614, i64 2
  %616 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %615, align 8
  %617 = call i64 %616(%"class.base::ModuleCache::Module"* %507) #15
  %618 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 %617) #15
  %619 = getelementptr inbounds i8, i8* %508, i64 24
  %620 = icmp eq %"class.WTF::StringImpl"* %618, null
  br i1 %620, label %638, label %621

621:                                              ; preds = %612
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %618, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %623 = load atomic i32, i32* %622 monotonic, align 4
  %624 = and i32 %623, 2
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %626, label %638

626:                                              ; preds = %621
  %627 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %618, i64 0, i32 0
  %628 = load i32, i32* %627, align 4
  %629 = zext i32 %628 to i33
  %630 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %629, i33 1) #15
  %631 = extractvalue { i33, i1 } %630, 1
  %632 = extractvalue { i33, i1 } %630, 0
  %633 = icmp slt i33 %632, 0
  %634 = or i1 %631, %633
  br i1 %634, label %635, label %636, !prof !3

635:                                              ; preds = %626
  call void @llvm.trap() #15
  unreachable

636:                                              ; preds = %626
  %637 = trunc i33 %632 to i32
  store i32 %637, i32* %627, align 4
  br label %638

638:                                              ; preds = %636, %621, %612
  %639 = ptrtoint %"class.WTF::StringImpl"* %618 to i64
  %640 = bitcast i8* %619 to i64*
  %641 = bitcast i8* %619 to %"class.WTF::StringImpl"**
  %642 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %641, align 8
  store i64 %639, i64* %640, align 8
  %643 = icmp eq %"class.WTF::StringImpl"* %642, null
  br i1 %643, label %657, label %644

644:                                              ; preds = %638
  %645 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %642, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %646 = load atomic i32, i32* %645 monotonic, align 4
  %647 = and i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %642, i64 0, i32 0
  %650 = load i32, i32* %649, align 4
  br i1 %648, label %651, label %653

651:                                              ; preds = %644
  %652 = add i32 %650, -1
  store i32 %652, i32* %649, align 4
  br label %653

653:                                              ; preds = %651, %644
  %654 = phi i32 [ %652, %651 ], [ %650, %644 ]
  %655 = icmp eq i32 %654, 0
  br i1 %655, label %656, label %657

656:                                              ; preds = %653
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %642) #15
  br label %657

657:                                              ; preds = %638, %653, %656
  %658 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %613, align 8
  %659 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %658, i64 5
  %660 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %659, align 8
  %661 = call i64 %660(%"class.base::ModuleCache::Module"* %507) #15
  %662 = uitofp i64 %661 to double
  %663 = getelementptr inbounds i8, i8* %508, i64 32
  %664 = bitcast i8* %663 to double*
  store double %662, double* %664, align 8
  store i8* %508, i8** %465, align 8
  %665 = load %"class.std::__1::unique_ptr.2217"*, %"class.std::__1::unique_ptr.2217"** %467, align 8
  %666 = load %"class.std::__1::unique_ptr.2217"*, %"class.std::__1::unique_ptr.2217"** %469, align 8
  %667 = icmp ult %"class.std::__1::unique_ptr.2217"* %665, %666
  br i1 %667, label %668, label %673

668:                                              ; preds = %657
  %669 = ptrtoint i8* %508 to i64
  store %"class.blink::protocol::Memory::Module"* null, %"class.blink::protocol::Memory::Module"** %464, align 8
  %670 = bitcast %"class.std::__1::unique_ptr.2217"* %665 to i64*
  store i64 %669, i64* %670, align 8
  %671 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %665, i64 1
  %672 = ptrtoint %"class.std::__1::unique_ptr.2217"* %671 to i64
  store i64 %672, i64* %470, align 8
  br label %674

673:                                              ; preds = %657
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol6Memory6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2215"* nonnull %440, %"class.std::__1::unique_ptr.2217"* nonnull dereferenceable(8) %11) #15
  br label %674

674:                                              ; preds = %668, %673
  %675 = load %"class.blink::protocol::Memory::Module"*, %"class.blink::protocol::Memory::Module"** %464, align 8
  store %"class.blink::protocol::Memory::Module"* null, %"class.blink::protocol::Memory::Module"** %464, align 8
  %676 = icmp eq %"class.blink::protocol::Memory::Module"* %675, null
  br i1 %676, label %682, label %677

677:                                              ; preds = %674
  %678 = bitcast %"class.blink::protocol::Memory::Module"* %675 to void (%"class.blink::protocol::Memory::Module"*)***
  %679 = load void (%"class.blink::protocol::Memory::Module"*)**, void (%"class.blink::protocol::Memory::Module"*)*** %678, align 8
  %680 = getelementptr inbounds void (%"class.blink::protocol::Memory::Module"*)*, void (%"class.blink::protocol::Memory::Module"*)** %679, i64 2
  %681 = load void (%"class.blink::protocol::Memory::Module"*)*, void (%"class.blink::protocol::Memory::Module"*)** %680, align 8
  call void %681(%"class.blink::protocol::Memory::Module"* nonnull %675) #15
  br label %682

682:                                              ; preds = %674, %677
  br i1 %620, label %696, label %683

683:                                              ; preds = %682
  %684 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %618, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %685 = load atomic i32, i32* %684 monotonic, align 4
  %686 = and i32 %685, 2
  %687 = icmp eq i32 %686, 0
  %688 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %618, i64 0, i32 0
  %689 = load i32, i32* %688, align 4
  br i1 %687, label %690, label %692

690:                                              ; preds = %683
  %691 = add i32 %689, -1
  store i32 %691, i32* %688, align 4
  br label %692

692:                                              ; preds = %690, %683
  %693 = phi i32 [ %691, %690 ], [ %689, %683 ]
  %694 = icmp eq i32 %693, 0
  br i1 %694, label %695, label %696

695:                                              ; preds = %692
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %618) #15
  br label %696

696:                                              ; preds = %682, %692, %695
  %697 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %463, align 8
  %698 = icmp eq %"class.WTF::StringImpl"* %697, null
  br i1 %698, label %712, label %699

699:                                              ; preds = %696
  %700 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %697, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %701 = load atomic i32, i32* %700 monotonic, align 4
  %702 = and i32 %701, 2
  %703 = icmp eq i32 %702, 0
  %704 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %697, i64 0, i32 0
  %705 = load i32, i32* %704, align 4
  br i1 %703, label %706, label %708

706:                                              ; preds = %699
  %707 = add i32 %705, -1
  store i32 %707, i32* %704, align 4
  br label %708

708:                                              ; preds = %706, %699
  %709 = phi i32 [ %707, %706 ], [ %705, %699 ]
  %710 = icmp eq i32 %709, 0
  br i1 %710, label %711, label %712

711:                                              ; preds = %708
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %697) #15
  br label %712

712:                                              ; preds = %696, %708, %711
  %713 = load i8, i8* %461, align 1
  %714 = icmp slt i8 %713, 0
  br i1 %714, label %715, label %717

715:                                              ; preds = %712
  %716 = load i8*, i8** %462, align 8
  call void @_ZdlPv(i8* %716) #17
  br label %717

717:                                              ; preds = %712, %715
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %459) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %458) #15
  %718 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %457, align 8
  %719 = icmp eq %"class.WTF::StringImpl"* %718, null
  br i1 %719, label %733, label %720

720:                                              ; preds = %717
  %721 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %718, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %722 = load atomic i32, i32* %721 monotonic, align 4
  %723 = and i32 %722, 2
  %724 = icmp eq i32 %723, 0
  %725 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %718, i64 0, i32 0
  %726 = load i32, i32* %725, align 4
  br i1 %724, label %727, label %729

727:                                              ; preds = %720
  %728 = add i32 %726, -1
  store i32 %728, i32* %725, align 4
  br label %729

729:                                              ; preds = %727, %720
  %730 = phi i32 [ %728, %727 ], [ %726, %720 ]
  %731 = icmp eq i32 %730, 0
  br i1 %731, label %732, label %733

732:                                              ; preds = %729
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %718) #15
  br label %733

733:                                              ; preds = %717, %729, %732
  %734 = load i8, i8* %454, align 1
  %735 = icmp slt i8 %734, 0
  br i1 %735, label %736, label %738

736:                                              ; preds = %733
  %737 = load i8*, i8** %471, align 8
  call void @_ZdlPv(i8* %737) #17
  br label %738

738:                                              ; preds = %736, %733
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %14) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %452) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %451) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %450) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %449) #15
  %739 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %506, i64 1
  %740 = icmp eq %"class.base::ModuleCache::Module"** %739, %446
  br i1 %740, label %472, label %505
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink20InspectorMemoryAgent25getAllTimeSamplingProfileEPNSt3__110unique_ptrINS_8protocol6Memory15SamplingProfileENS1_14default_deleteIS5_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorMemoryAgent"*, %"class.std::__1::unique_ptr.2174"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 -1, i32 5, i32 1
  %5 = bitcast i32* %4 to %"class.blink::InspectorMemoryAgent"*
  %6 = tail call %"class.blink::protocol::Memory::SamplingProfile"* @_ZN5blink20InspectorMemoryAgent22GetSamplingProfileByIdEj(%"class.blink::InspectorMemoryAgent"* %5, i32 0) #15, !noalias !19
  %7 = ptrtoint %"class.blink::protocol::Memory::SamplingProfile"* %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.2174", %"class.std::__1::unique_ptr.2174"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::protocol::Memory::SamplingProfile"*, %"class.blink::protocol::Memory::SamplingProfile"** %8, align 8, !noalias !19
  %10 = bitcast %"class.std::__1::unique_ptr.2174"* %2 to i64*
  store i64 %7, i64* %10, align 8, !noalias !19
  %11 = icmp eq %"class.blink::protocol::Memory::SamplingProfile"* %9, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::protocol::Memory::SamplingProfile"* %9 to void (%"class.blink::protocol::Memory::SamplingProfile"*)***
  %14 = load void (%"class.blink::protocol::Memory::SamplingProfile"*)**, void (%"class.blink::protocol::Memory::SamplingProfile"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::protocol::Memory::SamplingProfile"*)*, void (%"class.blink::protocol::Memory::SamplingProfile"*)** %14, i64 2
  %16 = load void (%"class.blink::protocol::Memory::SamplingProfile"*)*, void (%"class.blink::protocol::Memory::SamplingProfile"*)** %15, align 8
  tail call void %16(%"class.blink::protocol::Memory::SamplingProfile"* nonnull %9) #15
  br label %17

17:                                               ; preds = %3, %12
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorMemoryAgent18getSamplingProfileEPNSt3__110unique_ptrINS_8protocol6Memory15SamplingProfileENS1_14default_deleteIS5_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorMemoryAgent"*, %"class.std::__1::unique_ptr.2174"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = tail call %"class.blink::protocol::Memory::SamplingProfile"* @_ZN5blink20InspectorMemoryAgent22GetSamplingProfileByIdEj(%"class.blink::InspectorMemoryAgent"* %1, i32 %5)
  %7 = ptrtoint %"class.blink::protocol::Memory::SamplingProfile"* %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.2174", %"class.std::__1::unique_ptr.2174"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::protocol::Memory::SamplingProfile"*, %"class.blink::protocol::Memory::SamplingProfile"** %8, align 8
  %10 = bitcast %"class.std::__1::unique_ptr.2174"* %2 to i64*
  store i64 %7, i64* %10, align 8
  %11 = icmp eq %"class.blink::protocol::Memory::SamplingProfile"* %9, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::protocol::Memory::SamplingProfile"* %9 to void (%"class.blink::protocol::Memory::SamplingProfile"*)***
  %14 = load void (%"class.blink::protocol::Memory::SamplingProfile"*)**, void (%"class.blink::protocol::Memory::SamplingProfile"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::protocol::Memory::SamplingProfile"*)*, void (%"class.blink::protocol::Memory::SamplingProfile"*)** %14, i64 2
  %16 = load void (%"class.blink::protocol::Memory::SamplingProfile"*)*, void (%"class.blink::protocol::Memory::SamplingProfile"*)** %15, align 8
  tail call void %16(%"class.blink::protocol::Memory::SamplingProfile"* nonnull %9) #15
  br label %17

17:                                               ; preds = %12, %3
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink20InspectorMemoryAgent18getSamplingProfileEPNSt3__110unique_ptrINS_8protocol6Memory15SamplingProfileENS1_14default_deleteIS5_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorMemoryAgent"*, %"class.std::__1::unique_ptr.2174"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 -1, i32 5, i32 1
  %5 = bitcast i32* %4 to %"class.blink::InspectorMemoryAgent"*
  %6 = getelementptr inbounds i32, i32* %4, i64 16
  %7 = load i32, i32* %6, align 8, !noalias !22
  %8 = tail call %"class.blink::protocol::Memory::SamplingProfile"* @_ZN5blink20InspectorMemoryAgent22GetSamplingProfileByIdEj(%"class.blink::InspectorMemoryAgent"* %5, i32 %7) #15, !noalias !22
  %9 = ptrtoint %"class.blink::protocol::Memory::SamplingProfile"* %8 to i64
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.2174", %"class.std::__1::unique_ptr.2174"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::protocol::Memory::SamplingProfile"*, %"class.blink::protocol::Memory::SamplingProfile"** %10, align 8, !noalias !22
  %12 = bitcast %"class.std::__1::unique_ptr.2174"* %2 to i64*
  store i64 %9, i64* %12, align 8, !noalias !22
  %13 = icmp eq %"class.blink::protocol::Memory::SamplingProfile"* %11, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.blink::protocol::Memory::SamplingProfile"* %11 to void (%"class.blink::protocol::Memory::SamplingProfile"*)***
  %16 = load void (%"class.blink::protocol::Memory::SamplingProfile"*)**, void (%"class.blink::protocol::Memory::SamplingProfile"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::protocol::Memory::SamplingProfile"*)*, void (%"class.blink::protocol::Memory::SamplingProfile"*)** %16, i64 2
  %18 = load void (%"class.blink::protocol::Memory::SamplingProfile"*)*, void (%"class.blink::protocol::Memory::SamplingProfile"*)** %17, align 8
  tail call void %18(%"class.blink::protocol::Memory::SamplingProfile"* nonnull %11) #15
  br label %19

19:                                               ; preds = %3, %14
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base11ModuleCacheC1Ev(%"class.base::ModuleCache"*) unnamed_addr #1

declare void @_ZN4base20SamplingHeapProfiler10GetSamplesEj(%"class.std::__1::vector.2253"* sret, %"class.base::SamplingHeapProfiler"*, i32) local_unnamed_addr #1

declare %"class.base::ModuleCache::Module"* @_ZN4base11ModuleCache19GetModuleForAddressEm(%"class.base::ModuleCache"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorMemoryAgent9SymbolizeERKNS_9WebVectorIPvEE(%"class.WTF::Vector.1114"* noalias sret, %"class.blink::InspectorMemoryAgent"*, %"class.blink::WebVector.2268"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.2295", align 8
  %5 = alloca i8*, align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.base::debug::StackTrace", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca i8*, align 8
  %12 = alloca [20 x i8], align 16
  %13 = alloca %"class.WTF::StringBuilder", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = bitcast %"class.WTF::Vector.2295"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.WTF::Vector.2295", %"class.WTF::Vector.2295"* %4, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.WTF::Vector.2295", %"class.WTF::Vector.2295"* %4, i64 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::Vector.2295", %"class.WTF::Vector.2295"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #15
  %22 = getelementptr inbounds %"class.blink::WebVector.2268", %"class.blink::WebVector.2268"* %2, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast i8*** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::WebVector.2268"* %2 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %24, %26
  br i1 %27, label %37, label %28

28:                                               ; preds = %3
  %29 = bitcast i8** %5 to i8*
  %30 = bitcast i8** %5 to i64*
  %31 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 4, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 4, i32 0, i32 1
  br label %72

33:                                               ; preds = %154
  %34 = load i8**, i8*** %19, align 8
  %35 = load i32, i32* %21, align 4
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %33, %3
  %38 = phi i64 [ %36, %33 ], [ 0, %3 ]
  %39 = phi i8** [ %34, %33 ], [ null, %3 ]
  %40 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #15
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %41, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #15
  %43 = bitcast %"class.base::debug::StackTrace"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2008, i8* nonnull %43) #15
  call void @_ZN4base5debug10StackTraceC1EPKPKvm(%"class.base::debug::StackTrace"* nonnull %8, i8** %39, i64 %38) #15
  call void @_ZNK4base5debug10StackTrace8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.base::debug::StackTrace"* nonnull %8) #15
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %37, %48
  %53 = phi i8* [ %50, %48 ], [ %42, %37 ]
  %54 = call i64 @strlen(i8* nonnull %53) #16
  br label %55

55:                                               ; preds = %48, %52
  %56 = phi i8* [ %53, %52 ], [ null, %48 ]
  %57 = phi i64 [ %54, %52 ], [ 0, %48 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %56, i64 %57) #15
  %58 = load i8, i8* %45, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #17
  br label %63

63:                                               ; preds = %55, %60
  call void @llvm.lifetime.end.p0i8(i64 2008, i8* nonnull %43) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #15
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %205, label %66

66:                                               ; preds = %63
  %67 = bitcast %"class.WTF::String"* %9 to i8*
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %69 = bitcast %"class.WTF::String"* %10 to i8*
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 4, i32 0
  br label %161

72:                                               ; preds = %28, %154
  %73 = phi i64 [ %26, %28 ], [ %157, %154 ]
  %74 = phi i64 [ 0, %28 ], [ %155, %154 ]
  %75 = inttoptr i64 %73 to i8**
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %76 = getelementptr inbounds i8*, i8** %75, i64 %74
  %77 = bitcast i8** %76 to i64*
  %78 = load i64, i64* %77, align 8
  store i64 %78, i64* %30, align 8
  %79 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %31, align 8
  %80 = icmp eq %"struct.WTF::KeyValuePair.243"* %79, null
  br i1 %80, label %142, label %81

81:                                               ; preds = %72
  %82 = load i32, i32* %32, align 8
  %83 = add i32 %82, -1
  %84 = zext i32 %83 to i64
  %85 = shl i64 %78, 32
  %86 = xor i64 %85, -1
  %87 = add i64 %78, %86
  %88 = lshr i64 %87, 22
  %89 = xor i64 %88, %87
  %90 = shl i64 %89, 13
  %91 = xor i64 %90, -1
  %92 = add i64 %89, %91
  %93 = lshr i64 %92, 8
  %94 = xor i64 %93, %92
  %95 = mul i64 %94, 9
  %96 = lshr i64 %95, 15
  %97 = xor i64 %96, %95
  %98 = shl i64 %97, 27
  %99 = xor i64 %98, -1
  %100 = add i64 %97, %99
  %101 = lshr i64 %100, 31
  %102 = xor i64 %101, %100
  %103 = trunc i64 %102 to i32
  %104 = and i32 %83, %103
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %79, i64 %105
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %106, i64 0, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = inttoptr i64 %78 to i8*
  %110 = icmp eq i8* %108, %109
  br i1 %110, label %139, label %111

111:                                              ; preds = %81
  %112 = xor i32 %103, -1
  %113 = lshr i32 %103, 23
  %114 = add i32 %113, %112
  %115 = shl i32 %114, 12
  %116 = xor i32 %115, %114
  %117 = lshr i32 %116, 7
  %118 = xor i32 %117, %116
  %119 = shl i32 %118, 2
  %120 = xor i32 %119, %118
  %121 = lshr i32 %120, 20
  %122 = xor i32 %121, %120
  %123 = or i32 %122, 1
  %124 = zext i32 %123 to i64
  br label %125

125:                                              ; preds = %130, %111
  %126 = phi i8* [ %108, %111 ], [ %137, %130 ]
  %127 = phi i64 [ %105, %111 ], [ %134, %130 ]
  %128 = phi i64 [ 0, %111 ], [ %132, %130 ]
  %129 = icmp eq i8* %126, null
  br i1 %129, label %142, label %130

130:                                              ; preds = %125
  %131 = icmp eq i64 %128, 0
  %132 = select i1 %131, i64 %124, i64 %128
  %133 = add i64 %132, %127
  %134 = and i64 %133, %84
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %79, i64 %134
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %135, i64 0, i32 0
  %137 = load i8*, i8** %136, align 8
  %138 = icmp eq i8* %137, %109
  br i1 %138, label %139, label %125

139:                                              ; preds = %130, %81
  %140 = phi %"struct.WTF::KeyValuePair.243"* [ %106, %81 ], [ %135, %130 ]
  %141 = icmp eq %"struct.WTF::KeyValuePair.243"* %140, null
  br i1 %141, label %142, label %154

142:                                              ; preds = %125, %139, %72
  %143 = load i32, i32* %21, align 4
  %144 = load i32, i32* %20, align 8
  %145 = icmp eq i32 %143, %144
  br i1 %145, label %153, label %146, !prof !3

146:                                              ; preds = %142
  %147 = load i8**, i8*** %19, align 8
  %148 = zext i32 %143 to i64
  %149 = getelementptr inbounds i8*, i8** %147, i64 %148
  %150 = bitcast i8** %149 to i64*
  store i64 %78, i64* %150, align 8
  %151 = load i32, i32* %21, align 4
  %152 = add i32 %151, 1
  store i32 %152, i32* %21, align 4
  br label %154

153:                                              ; preds = %142
  call void @_ZN3WTF6VectorIPvLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.2295"* nonnull %4, i8** nonnull dereferenceable(8) %5) #15
  br label %154

154:                                              ; preds = %139, %153, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  %155 = add nuw i64 %74, 1
  %156 = load i64, i64* %23, align 8
  %157 = load i64, i64* %25, align 8
  %158 = sub i64 %156, %157
  %159 = ashr exact i64 %158, 3
  %160 = icmp ult i64 %155, %159
  br i1 %160, label %72, label %33

161:                                              ; preds = %66, %289
  %162 = phi %"class.WTF::StringImpl"* [ %64, %66 ], [ %292, %289 ]
  %163 = phi i32 [ 0, %66 ], [ %290, %289 ]
  %164 = phi i64 [ 0, %66 ], [ %291, %289 ]
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 1
  br i1 %168, label %185, label %170

170:                                              ; preds = %161
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = icmp ugt i32 %172, %163
  br i1 %173, label %174, label %205

174:                                              ; preds = %170
  %175 = bitcast %"class.WTF::StringImpl"* %169 to i8*
  %176 = zext i32 %163 to i64
  %177 = getelementptr inbounds i8, i8* %175, i64 %176
  %178 = sub i32 %172, %163
  %179 = zext i32 %178 to i64
  %180 = call i8* @memchr(i8* %177, i32 10, i64 %179) #16
  %181 = icmp eq i8* %180, null
  %182 = ptrtoint i8* %180 to i64
  %183 = ptrtoint %"class.WTF::StringImpl"* %169 to i64
  %184 = sub i64 %182, %183
  br i1 %181, label %205, label %201

185:                                              ; preds = %161
  %186 = bitcast %"class.WTF::StringImpl"* %169 to i16*
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = icmp ugt i32 %188, %163
  br i1 %189, label %190, label %205

190:                                              ; preds = %185
  %191 = zext i32 %163 to i64
  br label %192

192:                                              ; preds = %197, %190
  %193 = phi i64 [ %191, %190 ], [ %198, %197 ]
  %194 = getelementptr inbounds i16, i16* %186, i64 %193
  %195 = load i16, i16* %194, align 2
  %196 = icmp eq i16 %195, 10
  br i1 %196, label %201, label %197

197:                                              ; preds = %192
  %198 = add nuw nsw i64 %193, 1
  %199 = trunc i64 %198 to i32
  %200 = icmp eq i32 %188, %199
  br i1 %200, label %205, label %192

201:                                              ; preds = %192, %174
  %202 = phi i64 [ %184, %174 ], [ %193, %192 ]
  %203 = trunc i64 %202 to i32
  %204 = icmp eq i32 %203, -1
  br i1 %204, label %205, label %245

205:                                              ; preds = %201, %289, %170, %185, %174, %197, %63
  %206 = phi %"class.WTF::StringImpl"* [ null, %63 ], [ %162, %197 ], [ %162, %201 ], [ null, %289 ], [ %162, %170 ], [ %162, %185 ], [ %162, %174 ]
  %207 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 0
  %208 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 1
  %209 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 2
  %210 = bitcast %"class.WTF::Vector.1114"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %210, i8 0, i64 16, i1 false) #15
  %211 = getelementptr inbounds %"class.blink::WebVector.2268", %"class.blink::WebVector.2268"* %2, i64 0, i32 0, i32 0, i32 0
  %212 = load i8**, i8*** %211, align 8
  %213 = load i8**, i8*** %22, align 8
  %214 = icmp eq i8** %212, %213
  br i1 %214, label %296, label %215

215:                                              ; preds = %205
  %216 = bitcast i8** %11 to i8*
  %217 = bitcast i8** %11 to i64*
  %218 = getelementptr inbounds [20 x i8], [20 x i8]* %12, i64 0, i64 0
  %219 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 4
  %220 = getelementptr inbounds %"class.WTF::HashMap.239", %"class.WTF::HashMap.239"* %219, i64 0, i32 0, i32 0
  %221 = getelementptr inbounds %"class.blink::InspectorMemoryAgent", %"class.blink::InspectorMemoryAgent"* %1, i64 0, i32 4, i32 0, i32 1
  %222 = bitcast %"class.WTF::StringBuilder"* %13 to i8*
  %223 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %13, i64 0, i32 0, i32 0, i32 0
  %224 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %13, i64 0, i32 1
  %225 = bitcast %union.anon.2301* %224 to i8*
  %226 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %13, i64 0, i32 2
  %227 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %13, i64 0, i32 3
  %228 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %13, i64 0, i32 4
  %229 = bitcast %"class.WTF::StringView"* %14 to i8*
  %230 = bitcast %"class.WTF::StringView"* %14 to i64*
  %231 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %232 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  %233 = bitcast %"class.WTF::StringView"* %15 to i8*
  %234 = bitcast %"class.WTF::StringView"* %15 to i64*
  %235 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %236 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  %237 = bitcast %"class.WTF::StringView"* %16 to i8*
  %238 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  %239 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %240 = bitcast i8** %239 to %"class.WTF::StringImpl"**
  %241 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  %242 = bitcast %"class.WTF::StringView"* %16 to i64*
  %243 = bitcast %"class.WTF::String"* %17 to i8*
  %244 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  br label %322

245:                                              ; preds = %201
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #15
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %68, align 8
  %246 = sub i32 %203, %163
  %247 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %6, i32 %163, i32 %246) #15
  store %"class.WTF::StringImpl"* %247, %"class.WTF::StringImpl"** %68, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %251, label %249

249:                                              ; preds = %245
  %250 = call i32 @_ZN3WTF10StringImpl11ReverseFindEDsj(%"class.WTF::StringImpl"* nonnull %247, i16 zeroext 32, i32 -1) #15
  br label %251

251:                                              ; preds = %245, %249
  %252 = phi i32 [ %250, %249 ], [ -1, %245 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #15
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %70, align 8
  %253 = add i32 %252, 1
  %254 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %9, i32 %253, i32 -1) #15
  store %"class.WTF::StringImpl"* %254, %"class.WTF::StringImpl"** %70, align 8
  %255 = trunc i64 %164 to i32
  %256 = call dereferenceable(8) i8** @_ZN3WTF6VectorIPvLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2295"* nonnull %4, i32 %255) #15
  %257 = call { %"struct.WTF::KeyValuePair.243"*, i8 } @_ZN3WTF9HashTableIPvNS_12KeyValuePairIS1_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIvEENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS1_RS3_EENS_18HashTableAddResultISE_S4_EEOT0_OT1_(%"class.WTF::HashTable.240"* %71, i8** dereferenceable(8) %256, %"class.WTF::String"* nonnull dereferenceable(8) %10) #15
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %251
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #15
  br label %273

273:                                              ; preds = %251, %269, %272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #15
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %289, label %276

276:                                              ; preds = %273
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = and i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  br i1 %280, label %283, label %285

283:                                              ; preds = %276
  %284 = add i32 %282, -1
  store i32 %284, i32* %281, align 4
  br label %285

285:                                              ; preds = %283, %276
  %286 = phi i32 [ %284, %283 ], [ %282, %276 ]
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %274) #15
  br label %289

289:                                              ; preds = %273, %285, %288
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #15
  %290 = add nuw i32 %203, 1
  %291 = add i64 %164, 1
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %292, null
  br i1 %293, label %205, label %161

294:                                              ; preds = %477
  %295 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  br label %296

296:                                              ; preds = %294, %205
  %297 = phi %"class.WTF::StringImpl"* [ %295, %294 ], [ %206, %205 ]
  %298 = icmp eq %"class.WTF::StringImpl"* %297, null
  br i1 %298, label %312, label %299

299:                                              ; preds = %296
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = load atomic i32, i32* %300 monotonic, align 4
  %302 = and i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 0
  %305 = load i32, i32* %304, align 4
  br i1 %303, label %306, label %308

306:                                              ; preds = %299
  %307 = add i32 %305, -1
  store i32 %307, i32* %304, align 4
  br label %308

308:                                              ; preds = %306, %299
  %309 = phi i32 [ %307, %306 ], [ %305, %299 ]
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %312

311:                                              ; preds = %308
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %297) #15
  br label %312

312:                                              ; preds = %296, %308, %311
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #15
  %313 = load i8**, i8*** %19, align 8
  %314 = icmp eq i8** %313, null
  %315 = bitcast i8** %313 to i8*
  br i1 %314, label %321, label %316, !prof !2

316:                                              ; preds = %312
  %317 = load i32, i32* %21, align 4
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %320, label %319, !prof !3

319:                                              ; preds = %316
  store i32 0, i32* %21, align 4
  br label %320

320:                                              ; preds = %319, %316
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %315) #15
  store i8** null, i8*** %19, align 8
  br label %321

321:                                              ; preds = %312, %320
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #15
  ret void

322:                                              ; preds = %215, %477
  %323 = phi i8** [ %212, %215 ], [ %478, %477 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %11, align 8
  %324 = bitcast i8** %323 to i64*
  %325 = load i64, i64* %324, align 8
  store i64 %325, i64* %217, align 8
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %218) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %218, i8 -86, i64 20, i1 false)
  %326 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %218, i64 20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 %325) #15
  %327 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %220, align 8
  %328 = icmp eq %"struct.WTF::KeyValuePair.243"* %327, null
  br i1 %328, label %465, label %329

329:                                              ; preds = %322
  %330 = load i32, i32* %221, align 8
  %331 = add i32 %330, -1
  %332 = zext i32 %331 to i64
  %333 = load i64, i64* %217, align 8
  %334 = shl i64 %333, 32
  %335 = xor i64 %334, -1
  %336 = add i64 %333, %335
  %337 = lshr i64 %336, 22
  %338 = xor i64 %337, %336
  %339 = shl i64 %338, 13
  %340 = xor i64 %339, -1
  %341 = add i64 %338, %340
  %342 = lshr i64 %341, 8
  %343 = xor i64 %342, %341
  %344 = mul i64 %343, 9
  %345 = lshr i64 %344, 15
  %346 = xor i64 %345, %344
  %347 = shl i64 %346, 27
  %348 = xor i64 %347, -1
  %349 = add i64 %346, %348
  %350 = lshr i64 %349, 31
  %351 = xor i64 %350, %349
  %352 = trunc i64 %351 to i32
  %353 = and i32 %331, %352
  %354 = zext i32 %353 to i64
  %355 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %327, i64 %354
  %356 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %355, i64 0, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = inttoptr i64 %333 to i8*
  %359 = icmp eq i8* %357, %358
  br i1 %359, label %388, label %360

360:                                              ; preds = %329
  %361 = xor i32 %352, -1
  %362 = lshr i32 %352, 23
  %363 = add i32 %362, %361
  %364 = shl i32 %363, 12
  %365 = xor i32 %364, %363
  %366 = lshr i32 %365, 7
  %367 = xor i32 %366, %365
  %368 = shl i32 %367, 2
  %369 = xor i32 %368, %367
  %370 = lshr i32 %369, 20
  %371 = xor i32 %370, %369
  %372 = or i32 %371, 1
  %373 = zext i32 %372 to i64
  br label %374

374:                                              ; preds = %379, %360
  %375 = phi i8* [ %357, %360 ], [ %386, %379 ]
  %376 = phi i64 [ %354, %360 ], [ %383, %379 ]
  %377 = phi i64 [ 0, %360 ], [ %381, %379 ]
  %378 = icmp eq i8* %375, null
  br i1 %378, label %465, label %379

379:                                              ; preds = %374
  %380 = icmp eq i64 %377, 0
  %381 = select i1 %380, i64 %373, i64 %377
  %382 = add i64 %381, %376
  %383 = and i64 %382, %332
  %384 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %327, i64 %383
  %385 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %384, i64 0, i32 0
  %386 = load i8*, i8** %385, align 8
  %387 = icmp eq i8* %386, %358
  br i1 %387, label %388, label %374

388:                                              ; preds = %379, %329
  %389 = phi %"struct.WTF::KeyValuePair.243"* [ %355, %329 ], [ %384, %379 ]
  %390 = icmp eq %"struct.WTF::KeyValuePair.243"* %389, null
  br i1 %390, label %465, label %391

391:                                              ; preds = %388
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %222) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %222, i8 -86, i64 48, i1 false)
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %223, align 8
  store i8 0, i8* %225, align 8
  store i32 0, i32* %226, align 8
  store i8 1, i8* %227, align 4
  store i8 0, i8* %228, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #15
  %392 = call i64 @strlen(i8* nonnull %218) #16
  %393 = icmp ult i64 %392, 4294967296
  br i1 %393, label %395, label %394, !prof !2

394:                                              ; preds = %391
  call void @llvm.trap() #15
  unreachable

395:                                              ; preds = %391
  %396 = trunc i64 %392 to i32
  %397 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %397, i64* %230, align 8
  store i8* %218, i8** %231, align 8
  store i32 %396, i32* %232, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #15
  %398 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %398, i64* %234, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8** %235, align 8
  store i32 1, i32* %236, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %237) #15
  %399 = call %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIPvNS_6StringENS_7PtrHashIvEENS_10HashTraitsIS1_EENS5_IS2_EENS_18PartitionAllocatorEE2atERKS1_(%"class.WTF::HashMap.239"* %219, i8** nonnull dereferenceable(8) %11)
  %400 = icmp eq %"class.WTF::StringImpl"* %399, null
  br i1 %400, label %401, label %403

401:                                              ; preds = %395
  store i8* null, i8** %239, align 8
  %402 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %402, i64* %242, align 8
  store i32 0, i32* %241, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %16)
  br label %419

403:                                              ; preds = %395
  store %"class.WTF::StringImpl"* %399, %"class.WTF::StringImpl"** %238, align 8
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 1
  %405 = load i32, i32* %404, align 4
  %406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 1
  store %"class.WTF::StringImpl"* %406, %"class.WTF::StringImpl"** %240, align 8
  store i32 %405, i32* %241, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %16)
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %408 = load atomic i32, i32* %407 monotonic, align 4
  %409 = and i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 0
  %412 = load i32, i32* %411, align 4
  br i1 %410, label %413, label %415

413:                                              ; preds = %403
  %414 = add i32 %412, -1
  store i32 %414, i32* %411, align 4
  br label %415

415:                                              ; preds = %413, %403
  %416 = phi i32 [ %414, %413 ], [ %412, %403 ]
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %419

418:                                              ; preds = %415
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %399) #15
  br label %419

419:                                              ; preds = %401, %415, %418
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %237) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243) #15
  %420 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %13) #15
  store %"class.WTF::StringImpl"* %420, %"class.WTF::StringImpl"** %244, align 8
  %421 = load i32, i32* %209, align 4
  %422 = load i32, i32* %208, align 8
  %423 = icmp eq i32 %421, %422
  br i1 %423, label %432, label %424, !prof !3

424:                                              ; preds = %419
  %425 = ptrtoint %"class.WTF::StringImpl"* %420 to i64
  %426 = load %"class.WTF::String"*, %"class.WTF::String"** %207, align 8
  %427 = zext i32 %421 to i64
  %428 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %426, i64 %427
  %429 = bitcast %"class.WTF::String"* %428 to i64*
  store i64 %425, i64* %429, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %244, align 8
  %430 = load i32, i32* %209, align 4
  %431 = add i32 %430, 1
  store i32 %431, i32* %209, align 4
  br label %448

432:                                              ; preds = %419
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.1114"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %17) #15
  %433 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %244, align 8
  %434 = icmp eq %"class.WTF::StringImpl"* %433, null
  br i1 %434, label %448, label %435

435:                                              ; preds = %432
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %437 = load atomic i32, i32* %436 monotonic, align 4
  %438 = and i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 0
  %441 = load i32, i32* %440, align 4
  br i1 %439, label %442, label %444

442:                                              ; preds = %435
  %443 = add i32 %441, -1
  store i32 %443, i32* %440, align 4
  br label %444

444:                                              ; preds = %442, %435
  %445 = phi i32 [ %443, %442 ], [ %441, %435 ]
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %448

447:                                              ; preds = %444
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %433) #15
  br label %448

448:                                              ; preds = %424, %432, %444, %447
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243) #15
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %13) #15
  %449 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %223, align 8
  %450 = icmp eq %"class.WTF::StringImpl"* %449, null
  br i1 %450, label %464, label %451

451:                                              ; preds = %448
  %452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %453 = load atomic i32, i32* %452 monotonic, align 4
  %454 = and i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 0, i32 0
  %457 = load i32, i32* %456, align 4
  br i1 %455, label %458, label %460

458:                                              ; preds = %451
  %459 = add i32 %457, -1
  store i32 %459, i32* %456, align 4
  br label %460

460:                                              ; preds = %458, %451
  %461 = phi i32 [ %459, %458 ], [ %457, %451 ]
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %463, label %464

463:                                              ; preds = %460
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %449) #15
  br label %464

464:                                              ; preds = %448, %460, %463
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %222) #15
  br label %477

465:                                              ; preds = %374, %388, %322
  %466 = load i32, i32* %209, align 4
  %467 = load i32, i32* %208, align 8
  %468 = icmp eq i32 %466, %467
  br i1 %468, label %476, label %469, !prof !3

469:                                              ; preds = %465
  %470 = load %"class.WTF::String"*, %"class.WTF::String"** %207, align 8
  %471 = zext i32 %466 to i64
  %472 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %470, i64 %471
  %473 = call i64 @strlen(i8* nonnull %218) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %472, i8* nonnull %218, i64 %473) #15
  %474 = load i32, i32* %209, align 4
  %475 = add i32 %474, 1
  store i32 %475, i32* %209, align 4
  br label %477

476:                                              ; preds = %465
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA20_cEEvOT_(%"class.WTF::Vector.1114"* %0, [20 x i8]* nonnull dereferenceable(20) %12) #15
  br label %477

477:                                              ; preds = %476, %469, %464
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %218) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %216) #15
  %478 = getelementptr inbounds i8*, i8** %323, i64 1
  %479 = icmp eq i8** %478, %213
  br i1 %479, label %294, label %322
}

declare void @_ZN2v814HeapStatisticsC1Ev(%"class.v8::HeapStatistics"*) unnamed_addr #1

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare void @_ZN2v87Isolate17GetHeapStatisticsEPNS_14HeapStatisticsE(%"class.v8::Isolate"*, %"class.v8::HeapStatistics"*) local_unnamed_addr #1

declare void @_ZNK4base11ModuleCache10GetModulesEv(%"class.std::__1::vector.2272"* sret, %"class.base::ModuleCache"*) local_unnamed_addr #1

declare void @_ZNK4base8FilePath13AsUTF16UnsafeEv(%"class.std::__1::basic_string.2281"* sret, %"class.base::FilePath"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC1EPKDs(%"class.WTF::String"*, i16*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base11ModuleCacheD1Ev(%"class.base::ModuleCache"*) unnamed_addr #3

declare void @_ZN4base5debug10StackTraceC1EPKPKvm(%"class.base::debug::StackTrace"*, i8**, i64) unnamed_addr #1

declare void @_ZNK4base5debug10StackTrace8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.base::debug::StackTrace"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !7
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #15
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #15
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #15
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #15
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #15
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIPvNS_6StringENS_7PtrHashIvEENS_10HashTraitsIS1_EENS5_IS2_EENS_18PartitionAllocatorEE2atERKS1_(%"class.WTF::HashMap.239"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.239", %"class.WTF::HashMap.239"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.243"* %4, null
  br i1 %5, label %91, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashMap.239", %"class.WTF::HashMap.239"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast i8** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %34, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = inttoptr i64 %12 to i8*
  %38 = icmp eq i8* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %6
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi i8* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq i8* %54, null
  br i1 %57, label %91, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %63, i64 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %6
  %68 = phi %"struct.WTF::KeyValuePair.243"* [ %34, %6 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.243"* %68, null
  br i1 %69, label %91, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %68, i64 0, i32 1, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #15
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !3

88:                                               ; preds = %79
  tail call void @llvm.trap() #15
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %53, %2, %89, %74, %70, %67
  %92 = phi %"class.WTF::StringImpl"* [ null, %67 ], [ null, %70 ], [ %72, %74 ], [ %72, %89 ], [ null, %2 ], [ null, %53 ]
  ret %"class.WTF::StringImpl"* %92
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE(%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %6 = ptrtoint %"class.blink::CoreProbeSink"* %1 to i64
  %7 = bitcast %"class.blink::Member"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::CoreProbeSink"* %1 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #15
  br label %13

13:                                               ; preds = %4, %10
  %14 = tail call i8* @_Znwm(i64 8) #17
  %15 = getelementptr inbounds %"class.crdtp::UberDispatcher", %"class.crdtp::UberDispatcher"* %2, i64 0, i32 1
  %16 = bitcast %"class.crdtp::FrontendChannel"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::protocol::Memory::Frontend"*, %"class.blink::protocol::Memory::Frontend"** %19, align 8
  %21 = bitcast %"class.blink::protocol::Memory::Frontend"** %19 to i8**
  store i8* %14, i8** %21, align 8
  %22 = icmp eq %"class.blink::protocol::Memory::Frontend"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::protocol::Memory::Frontend"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #17
  br label %25

25:                                               ; preds = %13, %23
  %26 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 1
  tail call void @_ZN5blink8protocol6Memory10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"* %2, %"class.blink::protocol::Memory::Backend"* %26) #15
  %27 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3
  tail call void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"* %27, %"class.blink::InspectorSessionState"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE7DisposeEv(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = bitcast %"class.blink::InspectorBaseAgent"* %0 to void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)***
  %4 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)**, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %4, i64 8
  %6 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %5, align 8
  call void %6(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorBaseAgent"* %0) #15
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #17
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::protocol::Memory::Frontend"*, %"class.blink::protocol::Memory::Frontend"** %16, align 8
  store %"class.blink::protocol::Memory::Frontend"* null, %"class.blink::protocol::Memory::Frontend"** %16, align 8
  %18 = icmp eq %"class.blink::protocol::Memory::Frontend"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::protocol::Memory::Frontend"* %17 to i8*
  call void @_ZdlPv(i8* %20) #17
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::Member"* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD0Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEED2Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::InspectorBaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::Memory::Frontend"*, %"class.blink::protocol::Memory::Frontend"** %3, align 8
  store %"class.blink::protocol::Memory::Frontend"* null, %"class.blink::protocol::Memory::Frontend"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::Memory::Frontend"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::Memory::Frontend"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  %11 = icmp eq %"class.blink::InspectorAgentState::Field"** %10, null
  %12 = bitcast %"class.blink::InspectorAgentState::Field"** %10 to i8*
  br i1 %11, label %19, label %13, !prof !2

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !3

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #15
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  br label %19

19:                                               ; preds = %18, %8
  %20 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #15
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent7RestoreEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEED1Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 -1, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.227"* %2 to %"class.blink::InspectorBaseAgent"*
  %4 = bitcast %"class.std::__1::unique_ptr.227"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 6, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::Memory::Frontend"*, %"class.blink::protocol::Memory::Frontend"** %5, align 8
  store %"class.blink::protocol::Memory::Frontend"* null, %"class.blink::protocol::Memory::Frontend"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::Memory::Frontend"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::protocol::Memory::Frontend"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #17
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 4
  %12 = bitcast %"class.std::__1::unique_ptr.227"* %11 to %"class.blink::InspectorAgentState::Field"***
  %13 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  %14 = icmp eq %"class.blink::InspectorAgentState::Field"** %13, null
  %15 = bitcast %"class.blink::InspectorAgentState::Field"** %13 to i8*
  br i1 %14, label %22, label %16, !prof !2

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %3, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #15
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  br label %22

22:                                               ; preds = %21, %10
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 3
  %24 = bitcast %"class.std::__1::unique_ptr.227"* %23 to %"class.WTF::StringImpl"**
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #15
  br label %40

40:                                               ; preds = %22, %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Memory8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #9

declare i32 @_ZN3WTF10StringImpl11ReverseFindEDsj(%"class.WTF::StringImpl"*, i16 zeroext, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIiED0Ev(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #15
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIiE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #15
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"* %8, %"class.WTF::String"* dereferenceable(8) %7) #15
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !7
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %18
  tail call void @llvm.trap() #15
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPi(i8* %25, i64 %28, i32* %29) #15
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorAgentState::Field"*) local_unnamed_addr #1

declare %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPi(i8*, i64, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #15
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #15
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectedFrames"*
  tail call void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CoreProbeSink"*
  tail call void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZN5blink19InspectorAgentState9SerializeEiPNS_9WebVectorIhEE(i32, %"class.blink::WebVector.1639"*) local_unnamed_addr #1

declare void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::WebVector.1639"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base20SamplingHeapProfiler6SampleD1Ev(%"class.base::SamplingHeapProfiler::Sample"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_(%"class.std::__1::vector.2191"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2191", %"class.std::__1::vector.2191"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2191"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2191"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2191", %"class.std::__1::vector.2191"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %43, label %61, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i33
  %53 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #15
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %59, !prof !3

58:                                               ; preds = %49
  tail call void @llvm.trap() #15
  unreachable

59:                                               ; preds = %49
  %60 = trunc i33 %55 to i32
  store i32 %60, i32* %50, align 4
  br label %61

61:                                               ; preds = %34, %44, %59
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %63 = ptrtoint %"class.WTF::String"* %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.2191", %"class.std::__1::vector.2191"* %0, i64 0, i32 0, i32 0
  %65 = load %"class.WTF::String"*, %"class.WTF::String"** %64, align 8
  %66 = ptrtoint %"class.WTF::String"* %65 to i64
  %67 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %68 = icmp eq %"class.WTF::String"* %67, %65
  br i1 %68, label %150, label %69

69:                                               ; preds = %61
  %70 = getelementptr %"class.WTF::String", %"class.WTF::String"* %67, i64 -1, i32 0, i32 0
  %71 = ptrtoint %"class.WTF::StringImpl"** %70 to i64
  %72 = sub i64 %71, %66
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %89, label %77

77:                                               ; preds = %69, %77
  %78 = phi %"class.WTF::String"* [ %81, %77 ], [ %37, %69 ]
  %79 = phi %"class.WTF::String"* [ %82, %77 ], [ %67, %69 ]
  %80 = phi i64 [ %87, %77 ], [ %75, %69 ]
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -1
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -1
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %82, i64 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::String"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.WTF::String"* %81 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %87 = add i64 %80, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %77, !llvm.loop !25

89:                                               ; preds = %77, %69
  %90 = phi %"class.WTF::String"* [ undef, %69 ], [ %81, %77 ]
  %91 = phi %"class.WTF::String"* [ %37, %69 ], [ %81, %77 ]
  %92 = phi %"class.WTF::String"* [ %67, %69 ], [ %82, %77 ]
  %93 = icmp ult i64 %72, 56
  br i1 %93, label %146, label %94

94:                                               ; preds = %89, %94
  %95 = phi %"class.WTF::String"* [ %139, %94 ], [ %91, %89 ]
  %96 = phi %"class.WTF::String"* [ %140, %94 ], [ %92, %89 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -1
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -1
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %100 = bitcast %"class.WTF::String"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.WTF::String"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %99, align 8
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -2
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -2
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -3
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -3
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.WTF::String"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -4
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -4
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 0, i32 0, i32 0
  %118 = bitcast %"class.WTF::String"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.WTF::String"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -5
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -5
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %124 = bitcast %"class.WTF::String"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.WTF::String"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  %127 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -6
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -6
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %128, i64 0, i32 0, i32 0
  %130 = bitcast %"class.WTF::String"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.WTF::String"* %127 to i64*
  store i64 %131, i64* %132, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %129, align 8
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -7
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -7
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %134, i64 0, i32 0, i32 0
  %136 = bitcast %"class.WTF::String"* %134 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.WTF::String"* %133 to i64*
  store i64 %137, i64* %138, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %135, align 8
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -8
  %140 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -8
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 0, i32 0, i32 0
  %142 = bitcast %"class.WTF::String"* %140 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.WTF::String"* %139 to i64*
  store i64 %143, i64* %144, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %141, align 8
  %145 = icmp eq %"class.WTF::String"* %140, %65
  br i1 %145, label %146, label %94

146:                                              ; preds = %94, %89
  %147 = phi %"class.WTF::String"* [ %90, %89 ], [ %139, %94 ]
  %148 = load i64, i64* %6, align 8
  %149 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %150

150:                                              ; preds = %61, %146
  %151 = phi %"class.WTF::String"* [ %149, %146 ], [ %65, %61 ]
  %152 = phi %"class.WTF::String"* [ %147, %146 ], [ %37, %61 ]
  %153 = phi i64 [ %148, %146 ], [ %66, %61 ]
  %154 = ptrtoint %"class.WTF::String"* %152 to i64
  store i64 %154, i64* %6, align 8
  store i64 %63, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %155 = inttoptr i64 %153 to %"class.WTF::String"*
  %156 = icmp eq %"class.WTF::String"* %151, %155
  br i1 %156, label %178, label %157

157:                                              ; preds = %150, %176
  %158 = phi %"class.WTF::String"* [ %159, %176 ], [ %151, %150 ]
  %159 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %158, i64 -1
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %159, i64 0, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #15
  br label %176

176:                                              ; preds = %175, %172, %157
  %177 = icmp eq %"class.WTF::String"* %159, %155
  br i1 %177, label %178, label %157

178:                                              ; preds = %176, %150
  %179 = icmp eq i64 %153, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %178
  %181 = inttoptr i64 %153 to i8*
  tail call void @_ZdlPv(i8* %181) #17
  br label %182

182:                                              ; preds = %178, %180
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol6Memory19SamplingProfileNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2180"*, %"class.std::__1::unique_ptr.2182"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2180", %"class.std::__1::vector.2180"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.2182"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2180"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2180"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2180", %"class.std::__1::vector.2180"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.2182"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.2182"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.2182"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.2182"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.2182"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Memory::SamplingProfileNode"* null, %"class.blink::protocol::Memory::SamplingProfileNode"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.2182"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.2182"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2180", %"class.std::__1::vector.2180"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.2182"*, %"class.std::__1::unique_ptr.2182"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.2182"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.2182"*, %"class.std::__1::unique_ptr.2182"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.2182"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Memory::SamplingProfileNode"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.2182"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.2182"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.2182"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Memory::SamplingProfileNode"* null, %"class.blink::protocol::Memory::SamplingProfileNode"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.2182"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !26

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.2182"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.2182"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.2182"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.2182"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.2182"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.2182"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Memory::SamplingProfileNode"* null, %"class.blink::protocol::Memory::SamplingProfileNode"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.2182"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.2182"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Memory::SamplingProfileNode"* null, %"class.blink::protocol::Memory::SamplingProfileNode"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.2182"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.2182"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Memory::SamplingProfileNode"* null, %"class.blink::protocol::Memory::SamplingProfileNode"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.2182"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.2182"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Memory::SamplingProfileNode"* null, %"class.blink::protocol::Memory::SamplingProfileNode"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.2182"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2182"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Memory::SamplingProfileNode"* null, %"class.blink::protocol::Memory::SamplingProfileNode"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2182"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.2182"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Memory::SamplingProfileNode"* null, %"class.blink::protocol::Memory::SamplingProfileNode"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.2182"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.2182"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Memory::SamplingProfileNode"* null, %"class.blink::protocol::Memory::SamplingProfileNode"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.2182"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.2182"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Memory::SamplingProfileNode"* null, %"class.blink::protocol::Memory::SamplingProfileNode"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.2182"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.2182"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.2182"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.2182"*, %"class.std::__1::unique_ptr.2182"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.2182"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.2182"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.2182"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.2182"*
  %138 = icmp eq %"class.std::__1::unique_ptr.2182"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.2182"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.2182", %"class.std::__1::unique_ptr.2182"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Memory::SamplingProfileNode"*, %"class.blink::protocol::Memory::SamplingProfileNode"** %142, align 8
  store %"class.blink::protocol::Memory::SamplingProfileNode"* null, %"class.blink::protocol::Memory::SamplingProfileNode"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Memory::SamplingProfileNode"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Memory::SamplingProfileNode"* %143 to void (%"class.blink::protocol::Memory::SamplingProfileNode"*)***
  %147 = load void (%"class.blink::protocol::Memory::SamplingProfileNode"*)**, void (%"class.blink::protocol::Memory::SamplingProfileNode"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Memory::SamplingProfileNode"*)*, void (%"class.blink::protocol::Memory::SamplingProfileNode"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Memory::SamplingProfileNode"*)*, void (%"class.blink::protocol::Memory::SamplingProfileNode"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Memory::SamplingProfileNode"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.2182"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #17
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA10_KcEEEvDpOT_(%"class.std::__1::vector.2191"*, [10 x i8]* dereferenceable(10)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2191", %"class.std::__1::vector.2191"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2191"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2191"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2191", %"class.std::__1::vector.2191"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %41 = icmp eq [10 x i8]* %1, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  %43 = tail call i64 @strlen(i8* nonnull %40) #16
  br label %44

44:                                               ; preds = %34, %42
  %45 = phi i64 [ %43, %42 ], [ 0, %34 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %37, i8* %40, i64 %45) #15
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %47 = ptrtoint %"class.WTF::String"* %46 to i64
  %48 = getelementptr inbounds %"class.std::__1::vector.2191", %"class.std::__1::vector.2191"* %0, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = ptrtoint %"class.WTF::String"* %49 to i64
  %51 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %52 = icmp eq %"class.WTF::String"* %51, %49
  br i1 %52, label %134, label %53

53:                                               ; preds = %44
  %54 = getelementptr %"class.WTF::String", %"class.WTF::String"* %51, i64 -1, i32 0, i32 0
  %55 = ptrtoint %"class.WTF::StringImpl"** %54 to i64
  %56 = sub i64 %55, %50
  %57 = lshr i64 %56, 3
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 7
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %73, label %61

61:                                               ; preds = %53, %61
  %62 = phi %"class.WTF::String"* [ %65, %61 ], [ %37, %53 ]
  %63 = phi %"class.WTF::String"* [ %66, %61 ], [ %51, %53 ]
  %64 = phi i64 [ %71, %61 ], [ %59, %53 ]
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 -1
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 -1
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  %68 = bitcast %"class.WTF::String"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.WTF::String"* %65 to i64*
  store i64 %69, i64* %70, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %67, align 8
  %71 = add i64 %64, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %61, !llvm.loop !27

73:                                               ; preds = %61, %53
  %74 = phi %"class.WTF::String"* [ undef, %53 ], [ %65, %61 ]
  %75 = phi %"class.WTF::String"* [ %37, %53 ], [ %65, %61 ]
  %76 = phi %"class.WTF::String"* [ %51, %53 ], [ %66, %61 ]
  %77 = icmp ult i64 %56, 56
  br i1 %77, label %130, label %78

78:                                               ; preds = %73, %78
  %79 = phi %"class.WTF::String"* [ %123, %78 ], [ %75, %73 ]
  %80 = phi %"class.WTF::String"* [ %124, %78 ], [ %76, %73 ]
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -1
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -1
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %82, i64 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::String"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.WTF::String"* %81 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -2
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -2
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 0, i32 0, i32 0
  %90 = bitcast %"class.WTF::String"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.WTF::String"* %87 to i64*
  store i64 %91, i64* %92, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %89, align 8
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -3
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -3
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %94, i64 0, i32 0, i32 0
  %96 = bitcast %"class.WTF::String"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.WTF::String"* %93 to i64*
  store i64 %97, i64* %98, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -4
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -4
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %102 = bitcast %"class.WTF::String"* %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.WTF::String"* %99 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %101, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -5
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -5
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = bitcast %"class.WTF::String"* %106 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.WTF::String"* %105 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %107, align 8
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -6
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -6
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 0, i32 0, i32 0
  %114 = bitcast %"class.WTF::String"* %112 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.WTF::String"* %111 to i64*
  store i64 %115, i64* %116, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %113, align 8
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -7
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -7
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %118, i64 0, i32 0, i32 0
  %120 = bitcast %"class.WTF::String"* %118 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.WTF::String"* %117 to i64*
  store i64 %121, i64* %122, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %119, align 8
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -8
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -8
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %124, i64 0, i32 0, i32 0
  %126 = bitcast %"class.WTF::String"* %124 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.WTF::String"* %123 to i64*
  store i64 %127, i64* %128, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %125, align 8
  %129 = icmp eq %"class.WTF::String"* %124, %49
  br i1 %129, label %130, label %78

130:                                              ; preds = %78, %73
  %131 = phi %"class.WTF::String"* [ %74, %73 ], [ %123, %78 ]
  %132 = load i64, i64* %6, align 8
  %133 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %134

134:                                              ; preds = %44, %130
  %135 = phi %"class.WTF::String"* [ %133, %130 ], [ %49, %44 ]
  %136 = phi %"class.WTF::String"* [ %131, %130 ], [ %37, %44 ]
  %137 = phi i64 [ %132, %130 ], [ %50, %44 ]
  %138 = ptrtoint %"class.WTF::String"* %136 to i64
  store i64 %138, i64* %6, align 8
  store i64 %47, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %139 = inttoptr i64 %137 to %"class.WTF::String"*
  %140 = icmp eq %"class.WTF::String"* %135, %139
  br i1 %140, label %162, label %141

141:                                              ; preds = %134, %160
  %142 = phi %"class.WTF::String"* [ %143, %160 ], [ %135, %134 ]
  %143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %142, i64 -1
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #15
  br label %160

160:                                              ; preds = %159, %156, %141
  %161 = icmp eq %"class.WTF::String"* %143, %139
  br i1 %161, label %162, label %141

162:                                              ; preds = %160, %134
  %163 = icmp eq i64 %137, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = inttoptr i64 %137 to i8*
  tail call void @_ZdlPv(i8* %165) #17
  br label %166

166:                                              ; preds = %162, %164
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol6Memory6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2215"*, %"class.std::__1::unique_ptr.2217"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2215", %"class.std::__1::vector.2215"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.2217"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2215"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2215"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2215", %"class.std::__1::vector.2215"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.2217"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.2217"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.2217"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.2217"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.2217"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Memory::Module"* null, %"class.blink::protocol::Memory::Module"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.2217"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.2217"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2215", %"class.std::__1::vector.2215"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.2217"*, %"class.std::__1::unique_ptr.2217"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.2217"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.2217"*, %"class.std::__1::unique_ptr.2217"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.2217"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Memory::Module"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.2217"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.2217"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.2217"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Memory::Module"* null, %"class.blink::protocol::Memory::Module"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.2217"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !28

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.2217"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.2217"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.2217"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.2217"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.2217"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.2217"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Memory::Module"* null, %"class.blink::protocol::Memory::Module"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.2217"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.2217"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Memory::Module"* null, %"class.blink::protocol::Memory::Module"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.2217"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.2217"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Memory::Module"* null, %"class.blink::protocol::Memory::Module"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.2217"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.2217"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Memory::Module"* null, %"class.blink::protocol::Memory::Module"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.2217"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2217"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Memory::Module"* null, %"class.blink::protocol::Memory::Module"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2217"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.2217"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Memory::Module"* null, %"class.blink::protocol::Memory::Module"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.2217"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.2217"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Memory::Module"* null, %"class.blink::protocol::Memory::Module"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.2217"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.2217"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Memory::Module"* null, %"class.blink::protocol::Memory::Module"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.2217"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.2217"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.2217"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.2217"*, %"class.std::__1::unique_ptr.2217"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.2217"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.2217"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.2217"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.2217"*
  %138 = icmp eq %"class.std::__1::unique_ptr.2217"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.2217"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.2217", %"class.std::__1::unique_ptr.2217"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Memory::Module"*, %"class.blink::protocol::Memory::Module"** %142, align 8
  store %"class.blink::protocol::Memory::Module"* null, %"class.blink::protocol::Memory::Module"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Memory::Module"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Memory::Module"* %143 to void (%"class.blink::protocol::Memory::Module"*)***
  %147 = load void (%"class.blink::protocol::Memory::Module"*)**, void (%"class.blink::protocol::Memory::Module"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Memory::Module"*)*, void (%"class.blink::protocol::Memory::Module"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Memory::Module"*)*, void (%"class.blink::protocol::Memory::Module"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Memory::Module"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.2217"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #17
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPvLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.2295"*, i8** dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2295", %"class.WTF::Vector.2295"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2295", %"class.WTF::Vector.2295"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = icmp ugt i8** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8*, i8** %7, i64 %10
  %12 = icmp ugt i8** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2295", %"class.WTF::Vector.2295"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq i8** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPvEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPvEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2295"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i8**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load i8**, i8*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i8** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i8** %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.2295"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.2295"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i8**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i8** %1 to i64
  %56 = ptrtoint i8** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.2295", %"class.WTF::Vector.2295"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq i8** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPvEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPvEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2295"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i8**, i8*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i8** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i8** %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.2295"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.2295"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i8**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i8** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i8*, i8** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i8** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i8** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i8*, i8** %100, i64 %103
  %105 = bitcast i8** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPvEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i8** @_ZN3WTF6VectorIPvLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2295"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2295", %"class.WTF::Vector.2295"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.2295", %"class.WTF::Vector.2295"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8**, i8*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i8*, i8** %24, i64 %25
  ret i8** %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.243"*, i8 } @_ZN3WTF9HashTableIPvNS_12KeyValuePairIS1_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIvEENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS1_RS3_EENS_18HashTableAddResultISE_S4_EEOT0_OT1_(%"class.WTF::HashTable.240"*, i8** dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.243"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.243"* @_ZN3WTF9HashTableIPvNS_12KeyValuePairIS1_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIvEENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.240"* %0, %"struct.WTF::KeyValuePair.243"* null)
  %9 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.243"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast i8** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %39, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  %43 = inttoptr i64 %17 to i8*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi i8* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.243"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.243"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq i8* %59, %43
  br i1 %64, label %143, label %65

65:                                               ; preds = %58
  %66 = icmp eq i8* %59, inttoptr (i64 -1 to i8*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.243"* %60, %"struct.WTF::KeyValuePair.243"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %72, i64 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.243"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.243"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #15
  %80 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.243"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.243"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %89, i64 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %112, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i33
  %104 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #15
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !3

109:                                              ; preds = %100
  tail call void @llvm.trap() #15
  unreachable

110:                                              ; preds = %100
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %101, align 4
  br label %112

112:                                              ; preds = %110, %95, %87
  %113 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %114 = bitcast %"class.WTF::String"* %91 to i64*
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %91, i64 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  store i64 %113, i64* %114, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #15
  br label %131

131:                                              ; preds = %112, %127, %130
  %132 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %132, align 4
  %135 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 3
  %136 = load i32, i32* %135, align 8
  %137 = add i32 %136, %134
  %138 = shl i32 %137, 1
  %139 = load i32, i32* %12, align 8
  %140 = icmp ult i32 %138, %139
  br i1 %140, label %143, label %141

141:                                              ; preds = %131
  %142 = tail call %"struct.WTF::KeyValuePair.243"* @_ZN3WTF9HashTableIPvNS_12KeyValuePairIS1_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIvEENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.240"* %0, %"struct.WTF::KeyValuePair.243"* %89)
  br label %143

143:                                              ; preds = %58, %131, %141
  %144 = phi i8 [ 1, %131 ], [ 1, %141 ], [ 0, %58 ]
  %145 = phi %"struct.WTF::KeyValuePair.243"* [ %89, %131 ], [ %142, %141 ], [ %60, %58 ]
  %146 = insertvalue { %"struct.WTF::KeyValuePair.243"*, i8 } undef, %"struct.WTF::KeyValuePair.243"* %145, 0
  %147 = insertvalue { %"struct.WTF::KeyValuePair.243"*, i8 } %146, i8 %144, 1
  ret { %"struct.WTF::KeyValuePair.243"*, i8 } %147
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.243"* @_ZN3WTF9HashTableIPvNS_12KeyValuePairIS1_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIvEENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.240"*, %"struct.WTF::KeyValuePair.243"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPvNS_6StringEEEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.243"*
  %37 = call %"struct.WTF::KeyValuePair.243"* @_ZN3WTF9HashTableIPvNS_12KeyValuePairIS1_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIvEENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS3_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS4_jSF_(%"class.WTF::HashTable.240"* %0, %"struct.WTF::KeyValuePair.243"* %36, i32 %32, %"struct.WTF::KeyValuePair.243"* %1) #15
  ret %"struct.WTF::KeyValuePair.243"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.243"* @_ZN3WTF9HashTableIPvNS_12KeyValuePairIS1_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIvEENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS3_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS4_jSF_(%"class.WTF::HashTable.240"*, %"struct.WTF::KeyValuePair.243"*, i32, %"struct.WTF::KeyValuePair.243"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.240", align 8
  %6 = bitcast %"class.WTF::HashTable.240"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.240"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.243"* %1, %"struct.WTF::KeyValuePair.243"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.243"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.240"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.240"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.243"* %22 to i64
  br label %72

24:                                               ; preds = %117
  %25 = bitcast %"class.WTF::HashTable.240"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.240"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %118, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.243"* [ null, %16 ], [ %121, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %119, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.243"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %68, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %66, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %63, %39
  %42 = phi i64 [ 0, %39 ], [ %64, %63 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %35, i64 %42, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, inttoptr (i64 -1 to i8*)
  br i1 %45, label %63, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %35, i64 %42, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #15
  br label %63

63:                                               ; preds = %62, %59, %46, %41
  %64 = add nuw nsw i64 %42, 1
  %65 = icmp eq i64 %64, %40
  br i1 %65, label %66, label %41

66:                                               ; preds = %63, %37
  %67 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %67) #15
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %68

68:                                               ; preds = %28, %66
  %69 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, -2147483648
  store i32 %71, i32* %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"struct.WTF::KeyValuePair.243"* %33

72:                                               ; preds = %21, %117
  %73 = phi i64 [ %118, %117 ], [ %23, %21 ]
  %74 = phi i32 [ %119, %117 ], [ %13, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair.243"* [ %120, %117 ], [ %22, %21 ]
  %76 = phi %"struct.WTF::KeyValuePair.243"* [ %121, %117 ], [ null, %21 ]
  %77 = phi i32 [ %122, %117 ], [ 0, %21 ]
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %75, i64 %78
  %80 = bitcast %"struct.WTF::KeyValuePair.243"* %79 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %117
    i64 0, label %117
  ]

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %79, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair.243"*, i8 } @_ZN3WTF9HashTableIPvNS_12KeyValuePairIS1_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIvEENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS3_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.240"* nonnull %5, i8** dereferenceable(8) %83) #15
  %85 = extractvalue { %"struct.WTF::KeyValuePair.243"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %85, i64 0, i32 1, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #15
  br label %102

102:                                              ; preds = %82, %98, %101
  %103 = load i64, i64* %80, align 8
  %104 = bitcast %"struct.WTF::KeyValuePair.243"* %85 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %85, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %75, i64 %78, i32 1
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = bitcast %"class.WTF::String"* %106 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.WTF::String"* %105 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %107, align 8
  %111 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %15, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %111, i64 %78
  %113 = icmp eq %"struct.WTF::KeyValuePair.243"* %112, %3
  %114 = select i1 %113, %"struct.WTF::KeyValuePair.243"* %85, %"struct.WTF::KeyValuePair.243"* %76
  %115 = load i32, i32* %12, align 8
  %116 = ptrtoint %"struct.WTF::KeyValuePair.243"* %111 to i64
  br label %117

117:                                              ; preds = %72, %72, %102
  %118 = phi i64 [ %73, %72 ], [ %116, %102 ], [ %73, %72 ]
  %119 = phi i32 [ %74, %72 ], [ %115, %102 ], [ %74, %72 ]
  %120 = phi %"struct.WTF::KeyValuePair.243"* [ %75, %72 ], [ %111, %102 ], [ %75, %72 ]
  %121 = phi %"struct.WTF::KeyValuePair.243"* [ %76, %72 ], [ %114, %102 ], [ %76, %72 ]
  %122 = add i32 %77, 1
  %123 = icmp eq i32 %122, %119
  br i1 %123, label %24, label %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.243"*, i8 } @_ZN3WTF9HashTableIPvNS_12KeyValuePairIS1_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIvEENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS3_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.240"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast i8** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.243"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %32, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  %37 = inttoptr i64 %10 to i8*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.243"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.243"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.243"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.243"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.243"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi i8* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq i8* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq i8* %63, inttoptr (i64 -1 to i8*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.243"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %75, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.243"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.243"*, i8 } undef, %"struct.WTF::KeyValuePair.243"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.243"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.243"*, i8 } %85
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.1114"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1114"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.1114"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.1114"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1114"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.1114"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.1114"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA20_cEEvOT_(%"class.WTF::Vector.1114"*, [20 x i8]* dereferenceable(20)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  br i1 %15, label %18, label %45, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq %"class.WTF::String"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %20) #15
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.1114"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.WTF::String"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.WTF::String"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !2

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #15
  %36 = bitcast %"class.WTF::Vector.1114"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #15
  %40 = bitcast %"class.WTF::Vector.1114"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.WTF::String"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.WTF::String"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 %48
  %50 = getelementptr inbounds [20 x i8], [20 x i8]* %1, i64 0, i64 0
  %51 = icmp eq [20 x i8]* %1, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %45
  %53 = tail call i64 @strlen(i8* nonnull %50) #16
  br label %54

54:                                               ; preds = %45, %52
  %55 = phi i64 [ %53, %52 ], [ 0, %45 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %49, i8* %50, i64 %55) #15
  %56 = load i32, i32* %3, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %3, align 4
  ret void
}

declare void @_ZN5blink8protocol6Memory10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"*, %"class.blink::protocol::Memory::Backend"*) local_unnamed_addr #1

declare void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorSessionState"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { nounwind readonly }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink20InspectorMemoryAgent14getDOMCountersEPiS1_S1_: argument 0"}
!6 = distinct !{!6, !"_ZN5blink20InspectorMemoryAgent14getDOMCountersEPiS1_S1_"}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = distinct !{!17, !16}
!18 = distinct !{!18, !14}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN5blink20InspectorMemoryAgent25getAllTimeSamplingProfileEPNSt3__110unique_ptrINS_8protocol6Memory15SamplingProfileENS1_14default_deleteIS5_EEEE: argument 0"}
!21 = distinct !{!21, !"_ZN5blink20InspectorMemoryAgent25getAllTimeSamplingProfileEPNSt3__110unique_ptrINS_8protocol6Memory15SamplingProfileENS1_14default_deleteIS5_EEEE"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN5blink20InspectorMemoryAgent18getSamplingProfileEPNSt3__110unique_ptrINS_8protocol6Memory15SamplingProfileENS1_14default_deleteIS5_EEEE: argument 0"}
!24 = distinct !{!24, !"_ZN5blink20InspectorMemoryAgent18getSamplingProfileEPNSt3__110unique_ptrINS_8protocol6Memory15SamplingProfileENS1_14default_deleteIS5_EEEE"}
!25 = distinct !{!25, !16}
!26 = distinct !{!26, !16}
!27 = distinct !{!27, !16}
!28 = distinct !{!28, !16}
