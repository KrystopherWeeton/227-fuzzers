; ModuleID = '../../base/task/sequence_manager/sequence_manager.cc'
source_filename = "../../base/task/sequence_manager/sequence_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::sequence_manager::NativeWorkHandle" = type { i32 (...)** }
%"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings" = type { double }
%"struct.base::sequence_manager::SequenceManager::Settings" = type <{ i32, i8, [3 x i8], %"class.base::TickClock"*, i8, [7 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::sequence_manager::SequenceManager::Settings::Builder" = type { %"struct.base::sequence_manager::SequenceManager::Settings" }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }

@_ZTVN4base16sequence_manager16NativeWorkHandleE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::sequence_manager::NativeWorkHandle"*)* @_ZN4base16sequence_manager16NativeWorkHandleD2Ev to i8*), i8* bitcast (void (%"class.base::sequence_manager::NativeWorkHandle"*)* @_ZN4base16sequence_manager16NativeWorkHandleD0Ev to i8*)] }, align 8

@_ZN4base16sequence_manager16NativeWorkHandleD1Ev = hidden unnamed_addr alias void (%"class.base::sequence_manager::NativeWorkHandle"*), void (%"class.base::sequence_manager::NativeWorkHandle"*)* @_ZN4base16sequence_manager16NativeWorkHandleD2Ev
@_ZN4base16sequence_manager15SequenceManager23MetricRecordingSettingsC1Ed = hidden unnamed_addr alias void (%"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"*, double), void (%"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"*, double)* @_ZN4base16sequence_manager15SequenceManager23MetricRecordingSettingsC2Ed
@_ZN4base16sequence_manager15SequenceManager8SettingsC1Ev = hidden unnamed_addr alias void (%"struct.base::sequence_manager::SequenceManager::Settings"*), void (%"struct.base::sequence_manager::SequenceManager::Settings"*)* @_ZN4base16sequence_manager15SequenceManager8SettingsC2Ev
@_ZN4base16sequence_manager15SequenceManager8SettingsC1EOS2_ = hidden unnamed_addr alias void (%"struct.base::sequence_manager::SequenceManager::Settings"*, %"struct.base::sequence_manager::SequenceManager::Settings"*), void (%"struct.base::sequence_manager::SequenceManager::Settings"*, %"struct.base::sequence_manager::SequenceManager::Settings"*)* @_ZN4base16sequence_manager15SequenceManager8SettingsC2EOS2_
@_ZN4base16sequence_manager15SequenceManager8Settings7BuilderC1Ev = hidden unnamed_addr alias void (%"class.base::sequence_manager::SequenceManager::Settings::Builder"*), void (%"class.base::sequence_manager::SequenceManager::Settings::Builder"*)* @_ZN4base16sequence_manager15SequenceManager8Settings7BuilderC2Ev
@_ZN4base16sequence_manager15SequenceManager8Settings7BuilderD1Ev = hidden unnamed_addr alias void (%"class.base::sequence_manager::SequenceManager::Settings::Builder"*), void (%"class.base::sequence_manager::SequenceManager::Settings::Builder"*)* @_ZN4base16sequence_manager15SequenceManager8Settings7BuilderD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base16sequence_manager16NativeWorkHandleD2Ev(%"class.base::sequence_manager::NativeWorkHandle"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager16NativeWorkHandleD0Ev(%"class.base::sequence_manager::NativeWorkHandle"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.base::sequence_manager::NativeWorkHandle"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base16sequence_manager15SequenceManager23MetricRecordingSettingsC2Ed(%"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* nocapture, double) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings", %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings"* %0, i64 0, i32 0
  store double %1, double* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager15SequenceManager8SettingsC2Ev(%"struct.base::sequence_manager::SequenceManager::Settings"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.base::sequence_manager::SequenceManager::Settings", %"struct.base::sequence_manager::SequenceManager::Settings"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.base::sequence_manager::SequenceManager::Settings", %"struct.base::sequence_manager::SequenceManager::Settings"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"struct.base::sequence_manager::SequenceManager::Settings", %"struct.base::sequence_manager::SequenceManager::Settings"* %0, i64 0, i32 3
  %5 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #7
  %6 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %5, i64 0, i32 0
  store %"class.base::TickClock"* %6, %"class.base::TickClock"** %4, align 8
  %7 = getelementptr inbounds %"struct.base::sequence_manager::SequenceManager::Settings", %"struct.base::sequence_manager::SequenceManager::Settings"* %0, i64 0, i32 4
  store i8 0, i8* %7, align 8
  ret void
}

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager15SequenceManager8SettingsC2EOS2_(%"struct.base::sequence_manager::SequenceManager::Settings"* nocapture, %"struct.base::sequence_manager::SequenceManager::Settings"* nocapture readonly dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.base::sequence_manager::SequenceManager::Settings"* %0 to i8*
  %4 = bitcast %"struct.base::sequence_manager::SequenceManager::Settings"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 17, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager15SequenceManager8Settings7BuilderC2Ev(%"class.base::sequence_manager::SequenceManager::Settings::Builder"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::SequenceManager::Settings::Builder", %"class.base::sequence_manager::SequenceManager::Settings::Builder"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.base::sequence_manager::SequenceManager::Settings::Builder", %"class.base::sequence_manager::SequenceManager::Settings::Builder"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"class.base::sequence_manager::SequenceManager::Settings::Builder", %"class.base::sequence_manager::SequenceManager::Settings::Builder"* %0, i64 0, i32 0, i32 3
  %5 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #7
  %6 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %5, i64 0, i32 0
  store %"class.base::TickClock"* %6, %"class.base::TickClock"** %4, align 8
  %7 = getelementptr inbounds %"class.base::sequence_manager::SequenceManager::Settings::Builder", %"class.base::sequence_manager::SequenceManager::Settings::Builder"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base16sequence_manager15SequenceManager8Settings7BuilderD2Ev(%"class.base::sequence_manager::SequenceManager::Settings::Builder"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden dereferenceable(24) %"class.base::sequence_manager::SequenceManager::Settings::Builder"* @_ZN4base16sequence_manager15SequenceManager8Settings7Builder18SetMessagePumpTypeENS_15MessagePumpTypeE(%"class.base::sequence_manager::SequenceManager::Settings::Builder"* returned, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::SequenceManager::Settings::Builder", %"class.base::sequence_manager::SequenceManager::Settings::Builder"* %0, i64 0, i32 0, i32 0
  store i32 %1, i32* %3, align 8
  ret %"class.base::sequence_manager::SequenceManager::Settings::Builder"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden dereferenceable(24) %"class.base::sequence_manager::SequenceManager::Settings::Builder"* @_ZN4base16sequence_manager15SequenceManager8Settings7Builder28SetRandomisedSamplingEnabledEb(%"class.base::sequence_manager::SequenceManager::Settings::Builder"* returned, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.base::sequence_manager::SequenceManager::Settings::Builder", %"class.base::sequence_manager::SequenceManager::Settings::Builder"* %0, i64 0, i32 0, i32 1
  store i8 %3, i8* %4, align 4
  ret %"class.base::sequence_manager::SequenceManager::Settings::Builder"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden dereferenceable(24) %"class.base::sequence_manager::SequenceManager::Settings::Builder"* @_ZN4base16sequence_manager15SequenceManager8Settings7Builder12SetTickClockEPKNS_9TickClockE(%"class.base::sequence_manager::SequenceManager::Settings::Builder"* returned, %"class.base::TickClock"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::SequenceManager::Settings::Builder", %"class.base::sequence_manager::SequenceManager::Settings::Builder"* %0, i64 0, i32 0, i32 3
  store %"class.base::TickClock"* %1, %"class.base::TickClock"** %3, align 8
  ret %"class.base::sequence_manager::SequenceManager::Settings::Builder"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden dereferenceable(24) %"class.base::sequence_manager::SequenceManager::Settings::Builder"* @_ZN4base16sequence_manager15SequenceManager8Settings7Builder22SetAddQueueTimeToTasksEb(%"class.base::sequence_manager::SequenceManager::Settings::Builder"* returned, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.base::sequence_manager::SequenceManager::Settings::Builder", %"class.base::sequence_manager::SequenceManager::Settings::Builder"* %0, i64 0, i32 0, i32 4
  store i8 %3, i8* %4, align 8
  ret %"class.base::sequence_manager::SequenceManager::Settings::Builder"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager15SequenceManager8Settings7Builder5BuildEv(%"struct.base::sequence_manager::SequenceManager::Settings"* noalias nocapture sret, %"class.base::sequence_manager::SequenceManager::Settings::Builder"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.base::sequence_manager::SequenceManager::Settings"* %0 to i8*
  %4 = bitcast %"class.base::sequence_manager::SequenceManager::Settings::Builder"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 17, i1 false) #7
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
