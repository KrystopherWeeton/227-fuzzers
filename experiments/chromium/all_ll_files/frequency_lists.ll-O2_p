; ModuleID = '../../third_party/zxcvbn-cpp/native-src/zxcvbn/frequency_lists.cpp'
source_filename = "../../third_party/zxcvbn-cpp/native-src/zxcvbn/frequency_lists.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.base::NoDestructor" = type { [24 x i8] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.zxcvbn::RankedDicts" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.5" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::vector.3"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.zxcvbn::(anonymous namespace)::MergedEntry"*, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"*, %"class.std::__1::__compressed_pair.17" }
%"struct.zxcvbn::(anonymous namespace)::MergedEntry" = type { i64, %"class.base::BasicStringPiece" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPcEEE4typeENSC_IS6_EES8_S8_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [26 x i8] c"data_.size() == dict_size\00", align 1
@.str.1 = private unnamed_addr constant [67 x i8] c"../../third_party/zxcvbn-cpp/native-src/zxcvbn/frequency_lists.cpp\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"data_.size() >= 3UL\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"IsRealMarker(0)\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"offset < data_.size()\00", align 1
@_ZZN6zxcvbn20default_ranked_dictsEvE13default_dicts = internal global %"class.base::NoDestructor" zeroinitializer, align 16
@_ZGVZN6zxcvbn20default_ranked_dictsEvE13default_dicts = internal global i64 0, align 8
@.str.5 = private unnamed_addr constant [28 x i8] c"MarkedBigEndianU15 clamping\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.7 = private unnamed_addr constant [19 x i8] c"value <= MAX_VALUE\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"offset + sizeof(MarkedBigEndianU15) < vec.size()\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"value_end < vec.size()\00", align 1

@_ZN6zxcvbn11RankedDictsC1ERKNSt3__16vectorINS2_IN4base16BasicStringPieceIcNS1_11char_traitsIcEEEENS1_9allocatorIS7_EEEENS8_ISA_EEEE = hidden unnamed_addr alias void (%"class.zxcvbn::RankedDicts"*, %"class.std::__1::vector.1"*), void (%"class.zxcvbn::RankedDicts"*, %"class.std::__1::vector.1"*)* @_ZN6zxcvbn11RankedDictsC2ERKNSt3__16vectorINS2_IN4base16BasicStringPieceIcNS1_11char_traitsIcEEEENS1_9allocatorIS7_EEEENS8_ISA_EEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6zxcvbn11RankedDictsC2ERKNSt3__16vectorINS2_IN4base16BasicStringPieceIcNS1_11char_traitsIcEEEENS1_9allocatorIS7_EEEENS8_ISA_EEEE(%"class.zxcvbn::RankedDicts"*, %"class.std::__1::vector.1"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca %"class.std::__1::vector.15", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.zxcvbn::RankedDicts", %"class.zxcvbn::RankedDicts"* %0, i64 0, i32 0
  %11 = bitcast %"class.zxcvbn::RankedDicts"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #9
  %12 = bitcast %"class.std::__1::vector.15"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %6, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %6, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #9
  %16 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %19 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %18, align 8
  %20 = icmp eq %"class.std::__1::vector.3"* %17, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"** %14 to i64*
  br label %28

23:                                               ; preds = %2
  %24 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  %25 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"** %14 to i64*
  %26 = bitcast %"class.std::__1::vector.15"* %6 to i64*
  %27 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"** %15 to i64*
  br label %40

28:                                               ; preds = %55, %21
  %29 = phi i64* [ %22, %21 ], [ %25, %55 ]
  %30 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ null, %21 ], [ %56, %55 ]
  %31 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ null, %21 ], [ %57, %55 ]
  %32 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ null, %21 ], [ %58, %55 ]
  %33 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ null, %21 ], [ %59, %55 ]
  %34 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ null, %21 ], [ %60, %55 ]
  %35 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ null, %21 ], [ %61, %55 ]
  tail call fastcc void @"_ZNSt3__16__sortIRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEvT0_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %35, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %34) #9
  %36 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %34 to i64
  %37 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %35 to i64
  %38 = sub i64 %36, %37
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %465, label %214

40:                                               ; preds = %23, %55
  %41 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ null, %23 ], [ %56, %55 ]
  %42 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ null, %23 ], [ %57, %55 ]
  %43 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ null, %23 ], [ %58, %55 ]
  %44 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ null, %23 ], [ %59, %55 ]
  %45 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ null, %23 ], [ %60, %55 ]
  %46 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ null, %23 ], [ %61, %55 ]
  %47 = phi i64 [ 0, %23 ], [ %62, %55 ]
  %48 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ null, %23 ], [ %63, %55 ]
  %49 = phi %"class.std::__1::vector.3"* [ %17, %23 ], [ %64, %55 ]
  %50 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %49, i64 0, i32 0, i32 1
  %53 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %52, align 8
  %54 = icmp eq %"class.base::BasicStringPiece"* %51, %53
  br i1 %54, label %55, label %66

55:                                               ; preds = %202, %40
  %56 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %41, %40 ], [ %203, %202 ]
  %57 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %42, %40 ], [ %204, %202 ]
  %58 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %43, %40 ], [ %205, %202 ]
  %59 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %44, %40 ], [ %206, %202 ]
  %60 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %45, %40 ], [ %207, %202 ]
  %61 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %46, %40 ], [ %208, %202 ]
  %62 = phi i64 [ %47, %40 ], [ %209, %202 ]
  %63 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %48, %40 ], [ %210, %202 ]
  %64 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %49, i64 1
  %65 = icmp eq %"class.std::__1::vector.3"* %64, %19
  br i1 %65, label %28, label %40

66:                                               ; preds = %40, %202
  %67 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %203, %202 ], [ %41, %40 ]
  %68 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %204, %202 ], [ %42, %40 ]
  %69 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %205, %202 ], [ %43, %40 ]
  %70 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %206, %202 ], [ %44, %40 ]
  %71 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %207, %202 ], [ %45, %40 ]
  %72 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %208, %202 ], [ %46, %40 ]
  %73 = phi i64 [ %209, %202 ], [ %47, %40 ]
  %74 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %210, %202 ], [ %48, %40 ]
  %75 = phi i64 [ %211, %202 ], [ 1, %40 ]
  %76 = phi %"class.base::BasicStringPiece"* [ %212, %202 ], [ %51, %40 ]
  %77 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %76, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %76, i64 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %138, label %82

82:                                               ; preds = %66
  %83 = add i64 %80, -1
  %84 = and i64 %80, 7
  %85 = icmp ult i64 %83, 7
  br i1 %85, label %88, label %86

86:                                               ; preds = %82
  %87 = sub i64 %80, %84
  br label %107

88:                                               ; preds = %107, %82
  %89 = phi i8 [ undef, %82 ], [ %134, %107 ]
  %90 = phi i8 [ 1, %82 ], [ %134, %107 ]
  %91 = phi i8* [ %78, %82 ], [ %135, %107 ]
  %92 = icmp eq i64 %84, 0
  br i1 %92, label %103, label %93

93:                                               ; preds = %88, %93
  %94 = phi i8 [ %99, %93 ], [ %90, %88 ]
  %95 = phi i8* [ %100, %93 ], [ %91, %88 ]
  %96 = phi i64 [ %101, %93 ], [ %84, %88 ]
  %97 = load i8, i8* %95, align 1
  %98 = icmp slt i8 %97, 0
  %99 = select i1 %98, i8 0, i8 %94
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = add i64 %96, -1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %93, !llvm.loop !2

103:                                              ; preds = %93, %88
  %104 = phi i8 [ %89, %88 ], [ %99, %93 ]
  %105 = and i8 %104, 1
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %202, label %138

107:                                              ; preds = %107, %86
  %108 = phi i8 [ 1, %86 ], [ %134, %107 ]
  %109 = phi i8* [ %78, %86 ], [ %135, %107 ]
  %110 = phi i64 [ %87, %86 ], [ %136, %107 ]
  %111 = load i8, i8* %109, align 1
  %112 = getelementptr inbounds i8, i8* %109, i64 1
  %113 = load i8, i8* %112, align 1
  %114 = or i8 %113, %111
  %115 = getelementptr inbounds i8, i8* %109, i64 2
  %116 = load i8, i8* %115, align 1
  %117 = getelementptr inbounds i8, i8* %109, i64 3
  %118 = load i8, i8* %117, align 1
  %119 = or i8 %118, %116
  %120 = or i8 %119, %114
  %121 = getelementptr inbounds i8, i8* %109, i64 4
  %122 = load i8, i8* %121, align 1
  %123 = getelementptr inbounds i8, i8* %109, i64 5
  %124 = load i8, i8* %123, align 1
  %125 = or i8 %124, %122
  %126 = or i8 %125, %120
  %127 = getelementptr inbounds i8, i8* %109, i64 6
  %128 = load i8, i8* %127, align 1
  %129 = getelementptr inbounds i8, i8* %109, i64 7
  %130 = load i8, i8* %129, align 1
  %131 = or i8 %130, %128
  %132 = or i8 %131, %126
  %133 = icmp sgt i8 %132, -1
  %134 = select i1 %133, i8 %108, i8 0
  %135 = getelementptr inbounds i8, i8* %109, i64 8
  %136 = add i64 %110, -8
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %88, label %107

138:                                              ; preds = %66, %103
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24)
  %139 = add i64 %75, 1
  %140 = bitcast %"class.base::BasicStringPiece"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %140, i64 16, i1 false)
  %141 = load %"struct.zxcvbn::(anonymous namespace)::MergedEntry"*, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"** %15, align 8
  %142 = icmp ult %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %74, %141
  %143 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %141 to i64
  br i1 %142, label %144, label %150

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %74, i64 0, i32 0
  store i64 %75, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %74, i64 0, i32 1
  %147 = bitcast %"class.base::BasicStringPiece"* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* nonnull align 8 %24, i64 16, i1 false)
  %148 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %74, i64 1
  %149 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %148 to i64
  store i64 %149, i64* %25, align 8
  br label %196

150:                                              ; preds = %138
  %151 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %74 to i64
  %152 = load i64, i64* %26, align 8
  %153 = sub i64 %151, %152
  %154 = sdiv exact i64 %153, 24
  %155 = add nsw i64 %154, 1
  %156 = icmp ugt i64 %155, 768614336404564650
  br i1 %156, label %157, label %159

157:                                              ; preds = %150
  %158 = bitcast %"class.std::__1::vector.15"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %158) #10
  unreachable

159:                                              ; preds = %150
  %160 = sub i64 %143, %152
  %161 = sdiv exact i64 %160, 24
  %162 = icmp ult i64 %161, 384307168202282325
  br i1 %162, label %163, label %168

163:                                              ; preds = %159
  %164 = shl nsw i64 %161, 1
  %165 = icmp ult i64 %164, %155
  %166 = select i1 %165, i64 %155, i64 %164
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %173, label %168

168:                                              ; preds = %163, %159
  %169 = phi i64 [ %166, %163 ], [ 768614336404564650, %159 ]
  %170 = mul i64 %169, 24
  %171 = tail call i8* @_Znwm(i64 %170) #11
  %172 = bitcast i8* %171 to %"struct.zxcvbn::(anonymous namespace)::MergedEntry"*
  br label %173

173:                                              ; preds = %168, %163
  %174 = phi i64 [ %169, %168 ], [ 0, %163 ]
  %175 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %172, %168 ], [ null, %163 ]
  %176 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %175, i64 %154
  %177 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %175, i64 %174
  %178 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %177 to i64
  %179 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %176, i64 0, i32 0
  store i64 %75, i64* %179, align 8
  %180 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %175, i64 %154, i32 1
  %181 = bitcast %"class.base::BasicStringPiece"* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* nonnull align 8 %24, i64 16, i1 false)
  %182 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %176, i64 1
  %183 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %182 to i64
  %184 = sub i64 %73, %152
  %185 = sdiv exact i64 %184, -24
  %186 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %176, i64 %185
  %187 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %186 to i64
  %188 = icmp sgt i64 %184, 0
  br i1 %188, label %189, label %192

189:                                              ; preds = %173
  %190 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %186 to i8*
  %191 = inttoptr i64 %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %190, i8* align 8 %191, i64 %184, i1 false) #9
  br label %192

192:                                              ; preds = %189, %173
  store i64 %187, i64* %26, align 8
  store i64 %183, i64* %25, align 8
  store i64 %178, i64* %27, align 8
  %193 = icmp eq i64 %152, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %192
  %195 = inttoptr i64 %152 to i8*
  tail call void @_ZdlPv(i8* %195) #11
  br label %196

196:                                              ; preds = %144, %192, %194
  %197 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %148, %144 ], [ %182, %192 ], [ %182, %194 ]
  %198 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %68, %144 ], [ %186, %192 ], [ %186, %194 ]
  %199 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %70, %144 ], [ %186, %192 ], [ %186, %194 ]
  %200 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %72, %144 ], [ %186, %192 ], [ %186, %194 ]
  %201 = phi i64 [ %149, %144 ], [ %183, %192 ], [ %183, %194 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24)
  br label %202

202:                                              ; preds = %103, %196
  %203 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %197, %196 ], [ %67, %103 ]
  %204 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %198, %196 ], [ %68, %103 ]
  %205 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %197, %196 ], [ %69, %103 ]
  %206 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %199, %196 ], [ %70, %103 ]
  %207 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %197, %196 ], [ %71, %103 ]
  %208 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %200, %196 ], [ %72, %103 ]
  %209 = phi i64 [ %201, %196 ], [ %73, %103 ]
  %210 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %197, %196 ], [ %74, %103 ]
  %211 = phi i64 [ %139, %196 ], [ %75, %103 ]
  %212 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %76, i64 1
  %213 = icmp eq %"class.base::BasicStringPiece"* %212, %53
  br i1 %213, label %55, label %66

214:                                              ; preds = %28
  %215 = sdiv exact i64 %38, 24
  %216 = shl nsw i64 %215, 1
  %217 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %33, %32
  br i1 %217, label %218, label %255

218:                                              ; preds = %255, %214
  %219 = phi i64 [ %216, %214 ], [ %260, %255 ]
  %220 = add i64 %219, 1
  %221 = getelementptr inbounds %"class.zxcvbn::RankedDicts", %"class.zxcvbn::RankedDicts"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %222 = bitcast i8** %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast %"class.zxcvbn::RankedDicts"* %0 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = sub i64 %223, %225
  %227 = icmp ult i64 %226, %220
  %228 = inttoptr i64 %225 to i8*
  br i1 %227, label %229, label %245

229:                                              ; preds = %218
  %230 = getelementptr inbounds %"class.zxcvbn::RankedDicts", %"class.zxcvbn::RankedDicts"* %0, i64 0, i32 0, i32 0, i32 1
  %231 = bitcast i8** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = sub i64 %232, %225
  %234 = tail call i8* @_Znwm(i64 %220) #11
  %235 = getelementptr inbounds i8, i8* %234, i64 %233
  %236 = ptrtoint i8* %235 to i64
  %237 = getelementptr inbounds i8, i8* %234, i64 %220
  %238 = ptrtoint i8* %237 to i64
  %239 = ptrtoint i8* %234 to i64
  %240 = icmp sgt i64 %233, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %229
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %234, i8* align 1 %228, i64 %233, i1 false) #9
  br label %242

242:                                              ; preds = %241, %229
  store i64 %239, i64* %224, align 8
  store i64 %236, i64* %231, align 8
  store i64 %238, i64* %222, align 8
  %243 = icmp eq i64 %225, 0
  br i1 %243, label %245, label %244

244:                                              ; preds = %242
  tail call void @_ZdlPv(i8* nonnull %228) #11
  br label %245

245:                                              ; preds = %218, %242, %244
  %246 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %31, %30
  br i1 %246, label %263, label %247

247:                                              ; preds = %245
  %248 = bitcast %"class.logging::CheckError"* %4 to i8*
  %249 = bitcast %"class.logging::LogMessage"* %5 to i8*
  %250 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %251 = bitcast %"class.std::__1::basic_ostringstream"* %250 to %"class.std::__1::basic_ostream"*
  %252 = getelementptr inbounds %"class.zxcvbn::RankedDicts", %"class.zxcvbn::RankedDicts"* %0, i64 0, i32 0, i32 0, i32 1
  %253 = bitcast i8** %252 to i64*
  %254 = getelementptr inbounds %"class.zxcvbn::RankedDicts", %"class.zxcvbn::RankedDicts"* %0, i64 0, i32 0, i32 0, i32 0
  br label %280

255:                                              ; preds = %214, %255
  %256 = phi i64 [ %260, %255 ], [ %216, %214 ]
  %257 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %261, %255 ], [ %33, %214 ]
  %258 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %257, i64 0, i32 1, i32 1
  %259 = load i64, i64* %258, align 8
  %260 = add i64 %259, %256
  %261 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %257, i64 1
  %262 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %261, %32
  br i1 %262, label %218, label %255

263:                                              ; preds = %404, %245
  %264 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %264) #9
  %265 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %265, align 8
  %266 = getelementptr inbounds %"class.zxcvbn::RankedDicts", %"class.zxcvbn::RankedDicts"* %0, i64 0, i32 0, i32 0, i32 1
  %267 = bitcast i8** %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = load i64, i64* %224, align 8
  %270 = sub i64 %268, %269
  %271 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %271)
  %272 = icmp eq i64 %270, %219
  br i1 %272, label %273, label %274

273:                                              ; preds = %263
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %271)
  store i8* null, i8** %265, align 8
  br label %413

274:                                              ; preds = %263
  %275 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %270) #9
  %276 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %219) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* %275, i8* %276) #9
  %277 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %278 = load i8*, i8** %277, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %271)
  store i8* %278, i8** %265, align 8
  %279 = icmp eq i8* %278, null
  br i1 %279, label %413, label %410

280:                                              ; preds = %247, %404
  %281 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %31, %247 ], [ %408, %404 ]
  %282 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %281, i64 0, i32 0
  %283 = load i64, i64* %282, align 8
  %284 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %281, i64 0, i32 1, i32 0
  %285 = load i8*, i8** %284, align 8
  %286 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %281, i64 0, i32 1, i32 1
  %287 = load i64, i64* %286, align 8
  %288 = icmp ugt i64 %283, 32767
  br i1 %288, label %289, label %293

289:                                              ; preds = %280
  %290 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %290, label %291, label %298

291:                                              ; preds = %289
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %249) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 84, i32 2) #9
  %292 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %251, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i64 27) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %249) #9
  br label %298

293:                                              ; preds = %280
  %294 = trunc i64 %283 to i16
  %295 = icmp sgt i16 %294, -1
  br i1 %295, label %298, label %296

296:                                              ; preds = %293
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 29, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0)) #9
  %297 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #9
  br label %298

298:                                              ; preds = %289, %291, %296, %293
  %299 = phi i16 [ %294, %296 ], [ %294, %293 ], [ 32767, %291 ], [ 32767, %289 ]
  %300 = phi i64 [ %283, %296 ], [ %283, %293 ], [ 32767, %291 ], [ 32767, %289 ]
  %301 = lshr i16 %299, 8
  %302 = trunc i16 %301 to i8
  %303 = or i8 %302, -128
  %304 = load i8*, i8** %252, align 8
  %305 = load i8*, i8** %221, align 8
  %306 = icmp ult i8* %304, %305
  %307 = ptrtoint i8* %305 to i64
  br i1 %306, label %308, label %311

308:                                              ; preds = %298
  store i8 %303, i8* %304, align 1
  %309 = getelementptr inbounds i8, i8* %304, i64 1
  %310 = ptrtoint i8* %309 to i64
  store i64 %310, i64* %253, align 8
  br label %353

311:                                              ; preds = %298
  %312 = ptrtoint i8* %304 to i64
  %313 = load i64, i64* %224, align 8
  %314 = sub i64 %312, %313
  %315 = add i64 %314, 1
  %316 = icmp slt i64 %315, 0
  br i1 %316, label %317, label %319

317:                                              ; preds = %311
  %318 = bitcast %"class.zxcvbn::RankedDicts"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %318) #10
  unreachable

319:                                              ; preds = %311
  %320 = sub i64 %307, %313
  %321 = icmp ult i64 %320, 4611686018427387903
  br i1 %321, label %322, label %327

322:                                              ; preds = %319
  %323 = shl i64 %320, 1
  %324 = icmp ult i64 %323, %315
  %325 = select i1 %324, i64 %315, i64 %323
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %330, label %327

327:                                              ; preds = %322, %319
  %328 = phi i64 [ %325, %322 ], [ 9223372036854775807, %319 ]
  %329 = call i8* @_Znwm(i64 %328) #11
  br label %330

330:                                              ; preds = %327, %322
  %331 = phi i64 [ %328, %327 ], [ 0, %322 ]
  %332 = phi i8* [ %329, %327 ], [ null, %322 ]
  %333 = getelementptr inbounds i8, i8* %332, i64 %314
  %334 = getelementptr inbounds i8, i8* %332, i64 %331
  %335 = ptrtoint i8* %334 to i64
  store i8 %303, i8* %333, align 1
  %336 = getelementptr inbounds i8, i8* %333, i64 1
  %337 = ptrtoint i8* %336 to i64
  %338 = load i8*, i8** %254, align 8
  %339 = load i64, i64* %253, align 8
  %340 = ptrtoint i8* %338 to i64
  %341 = sub i64 %339, %340
  %342 = sub i64 0, %341
  %343 = getelementptr inbounds i8, i8* %333, i64 %342
  %344 = ptrtoint i8* %343 to i64
  %345 = icmp sgt i64 %341, 0
  br i1 %345, label %346, label %348

346:                                              ; preds = %330
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %343, i8* align 1 %338, i64 %341, i1 false) #9
  %347 = load i8*, i8** %254, align 8
  br label %348

348:                                              ; preds = %346, %330
  %349 = phi i8* [ %338, %330 ], [ %347, %346 ]
  store i64 %344, i64* %224, align 8
  store i64 %337, i64* %253, align 8
  store i64 %335, i64* %222, align 8
  %350 = icmp eq i8* %349, null
  br i1 %350, label %353, label %351

351:                                              ; preds = %348
  call void @_ZdlPv(i8* nonnull %349) #11
  %352 = load i8*, i8** %252, align 8
  br label %353

353:                                              ; preds = %351, %348, %308
  %354 = phi i8* [ %309, %308 ], [ %336, %348 ], [ %352, %351 ]
  %355 = trunc i64 %300 to i8
  %356 = load i8*, i8** %221, align 8
  %357 = icmp ult i8* %354, %356
  %358 = ptrtoint i8* %356 to i64
  br i1 %357, label %359, label %362

359:                                              ; preds = %353
  store i8 %355, i8* %354, align 1
  %360 = getelementptr inbounds i8, i8* %354, i64 1
  %361 = ptrtoint i8* %360 to i64
  store i64 %361, i64* %253, align 8
  br label %404

362:                                              ; preds = %353
  %363 = ptrtoint i8* %354 to i64
  %364 = load i64, i64* %224, align 8
  %365 = sub i64 %363, %364
  %366 = add i64 %365, 1
  %367 = icmp slt i64 %366, 0
  br i1 %367, label %368, label %370

368:                                              ; preds = %362
  %369 = bitcast %"class.zxcvbn::RankedDicts"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %369) #10
  unreachable

370:                                              ; preds = %362
  %371 = sub i64 %358, %364
  %372 = icmp ult i64 %371, 4611686018427387903
  br i1 %372, label %373, label %378

373:                                              ; preds = %370
  %374 = shl i64 %371, 1
  %375 = icmp ult i64 %374, %366
  %376 = select i1 %375, i64 %366, i64 %374
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %381, label %378

378:                                              ; preds = %373, %370
  %379 = phi i64 [ %376, %373 ], [ 9223372036854775807, %370 ]
  %380 = call i8* @_Znwm(i64 %379) #11
  br label %381

381:                                              ; preds = %378, %373
  %382 = phi i64 [ %379, %378 ], [ 0, %373 ]
  %383 = phi i8* [ %380, %378 ], [ null, %373 ]
  %384 = getelementptr inbounds i8, i8* %383, i64 %365
  %385 = getelementptr inbounds i8, i8* %383, i64 %382
  %386 = ptrtoint i8* %385 to i64
  store i8 %355, i8* %384, align 1
  %387 = getelementptr inbounds i8, i8* %384, i64 1
  %388 = ptrtoint i8* %387 to i64
  %389 = load i8*, i8** %254, align 8
  %390 = load i64, i64* %253, align 8
  %391 = ptrtoint i8* %389 to i64
  %392 = sub i64 %390, %391
  %393 = sub i64 0, %392
  %394 = getelementptr inbounds i8, i8* %384, i64 %393
  %395 = ptrtoint i8* %394 to i64
  %396 = icmp sgt i64 %392, 0
  br i1 %396, label %397, label %399

397:                                              ; preds = %381
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %394, i8* align 1 %389, i64 %392, i1 false) #9
  %398 = load i8*, i8** %254, align 8
  br label %399

399:                                              ; preds = %397, %381
  %400 = phi i8* [ %389, %381 ], [ %398, %397 ]
  store i64 %395, i64* %224, align 8
  store i64 %388, i64* %253, align 8
  store i64 %386, i64* %222, align 8
  %401 = icmp eq i8* %400, null
  br i1 %401, label %404, label %402

402:                                              ; preds = %399
  call void @_ZdlPv(i8* nonnull %400) #11
  %403 = load i8*, i8** %252, align 8
  br label %404

404:                                              ; preds = %359, %399, %402
  %405 = phi i8* [ %360, %359 ], [ %387, %399 ], [ %403, %402 ]
  %406 = getelementptr inbounds i8, i8* %285, i64 %287
  %407 = call i8* @_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPcEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"* %10, i8* %405, i8* %285, i8* %406) #9
  %408 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %281, i64 1
  %409 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %408, %30
  br i1 %409, label %263, label %280

410:                                              ; preds = %274
  %411 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %411) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 133, %"class.logging::CheckOpResult"* nonnull %8) #9
  %412 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %411) #9
  br label %413

413:                                              ; preds = %273, %274, %410
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %264) #9
  %414 = load i8*, i8** %266, align 8
  %415 = load i8*, i8** %221, align 8
  %416 = icmp ult i8* %414, %415
  %417 = ptrtoint i8* %415 to i64
  br i1 %416, label %418, label %421

418:                                              ; preds = %413
  store i8 -128, i8* %414, align 1
  %419 = getelementptr inbounds i8, i8* %414, i64 1
  %420 = ptrtoint i8* %419 to i64
  store i64 %420, i64* %267, align 8
  br label %463

421:                                              ; preds = %413
  %422 = ptrtoint i8* %414 to i64
  %423 = load i64, i64* %224, align 8
  %424 = sub i64 %422, %423
  %425 = add i64 %424, 1
  %426 = icmp slt i64 %425, 0
  br i1 %426, label %427, label %429

427:                                              ; preds = %421
  %428 = bitcast %"class.zxcvbn::RankedDicts"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %428) #10
  unreachable

429:                                              ; preds = %421
  %430 = sub i64 %417, %423
  %431 = icmp ult i64 %430, 4611686018427387903
  br i1 %431, label %432, label %437

432:                                              ; preds = %429
  %433 = shl i64 %430, 1
  %434 = icmp ult i64 %433, %425
  %435 = select i1 %434, i64 %425, i64 %433
  %436 = icmp eq i64 %435, 0
  br i1 %436, label %440, label %437

437:                                              ; preds = %432, %429
  %438 = phi i64 [ %435, %432 ], [ 9223372036854775807, %429 ]
  %439 = call i8* @_Znwm(i64 %438) #11
  br label %440

440:                                              ; preds = %437, %432
  %441 = phi i64 [ %438, %437 ], [ 0, %432 ]
  %442 = phi i8* [ %439, %437 ], [ null, %432 ]
  %443 = getelementptr inbounds i8, i8* %442, i64 %424
  %444 = getelementptr inbounds i8, i8* %442, i64 %441
  %445 = ptrtoint i8* %444 to i64
  store i8 -128, i8* %443, align 1
  %446 = getelementptr inbounds i8, i8* %443, i64 1
  %447 = ptrtoint i8* %446 to i64
  %448 = getelementptr inbounds %"class.zxcvbn::RankedDicts", %"class.zxcvbn::RankedDicts"* %0, i64 0, i32 0, i32 0, i32 0
  %449 = load i8*, i8** %448, align 8
  %450 = load i64, i64* %267, align 8
  %451 = ptrtoint i8* %449 to i64
  %452 = sub i64 %450, %451
  %453 = sub i64 0, %452
  %454 = getelementptr inbounds i8, i8* %443, i64 %453
  %455 = ptrtoint i8* %454 to i64
  %456 = icmp sgt i64 %452, 0
  br i1 %456, label %457, label %459

457:                                              ; preds = %440
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %454, i8* align 1 %449, i64 %452, i1 false) #9
  %458 = load i8*, i8** %448, align 8
  br label %459

459:                                              ; preds = %457, %440
  %460 = phi i8* [ %449, %440 ], [ %458, %457 ]
  store i64 %455, i64* %224, align 8
  store i64 %447, i64* %267, align 8
  store i64 %445, i64* %222, align 8
  %461 = icmp eq i8* %460, null
  br i1 %461, label %463, label %462

462:                                              ; preds = %459
  call void @_ZdlPv(i8* nonnull %460) #11
  br label %463

463:                                              ; preds = %418, %459, %462
  %464 = load %"struct.zxcvbn::(anonymous namespace)::MergedEntry"*, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"** %13, align 8
  br label %465

465:                                              ; preds = %463, %28
  %466 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %464, %463 ], [ %35, %28 ]
  %467 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %466, null
  br i1 %467, label %471, label %468

468:                                              ; preds = %465
  %469 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %466 to i64
  store i64 %469, i64* %29, align 8
  %470 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %466 to i8*
  call void @_ZdlPv(i8* %470) #11
  br label %471

471:                                              ; preds = %465, %468
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK6zxcvbn11RankedDicts4FindEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.zxcvbn::RankedDicts"* nocapture readonly, i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = getelementptr inbounds %"class.zxcvbn::RankedDicts", %"class.zxcvbn::RankedDicts"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.zxcvbn::RankedDicts"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %146, label %21

21:                                               ; preds = %3
  %22 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ult i64 %19, 3
  br i1 %25, label %27, label %26

26:                                               ; preds = %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %36

27:                                               ; preds = %21
  %28 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %19) #9
  %29 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i8* %28, i8* %29) #9
  %30 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %31, i8** %23, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 145, %"class.logging::CheckOpResult"* nonnull %11) #9
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %36

36:                                               ; preds = %26, %27, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  %37 = load i64, i64* %15, align 8
  %38 = load i64, i64* %17, align 8
  %39 = add i64 %37, -2
  %40 = sub i64 %39, %38
  %41 = call zeroext i1 @_ZNK6zxcvbn11RankedDicts12IsRealMarkerEm(%"class.zxcvbn::RankedDicts"* %0, i64 0)
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)) #9
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #9
  br label %45

45:                                               ; preds = %36, %42
  br label %46

46:                                               ; preds = %45, %46
  %47 = phi i64 [ %49, %46 ], [ %40, %45 ]
  %48 = call zeroext i1 @_ZNK6zxcvbn11RankedDicts12IsRealMarkerEm(%"class.zxcvbn::RankedDicts"* %0, i64 %47)
  %49 = add i64 %47, -1
  br i1 %48, label %50, label %46

50:                                               ; preds = %46
  %51 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  %52 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %53 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %55 = bitcast %"class.logging::CheckError"* %7 to i8*
  %56 = getelementptr inbounds %"class.zxcvbn::RankedDicts", %"class.zxcvbn::RankedDicts"* %0, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  %58 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  %59 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  %60 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %61 = bitcast %"class.logging::CheckError"* %9 to i8*
  br label %62

62:                                               ; preds = %136, %50
  %63 = phi i64 [ %47, %50 ], [ %138, %136 ]
  %64 = phi i64 [ 0, %50 ], [ %66, %136 ]
  br label %65

65:                                               ; preds = %130, %62
  %66 = phi i64 [ %64, %62 ], [ %132, %130 ]
  %67 = sub i64 %63, %66
  %68 = lshr i64 %67, 1
  %69 = add i64 %68, %66
  br label %70

70:                                               ; preds = %70, %65
  %71 = phi i64 [ %69, %65 ], [ %73, %70 ]
  %72 = call zeroext i1 @_ZNK6zxcvbn11RankedDicts12IsRealMarkerEm(%"class.zxcvbn::RankedDicts"* %0, i64 %71)
  %73 = add i64 %71, 1
  br i1 %72, label %74, label %70

74:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %52, align 8
  %75 = add i64 %71, 2
  %76 = load i64, i64* %15, align 8
  %77 = load i64, i64* %17, align 8
  %78 = sub i64 %76, %77
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #9
  %79 = icmp ult i64 %75, %78
  br i1 %79, label %80, label %81

80:                                               ; preds = %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #9
  store i8* null, i8** %52, align 8
  br label %88

81:                                               ; preds = %74
  %82 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %75) #9
  %83 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %78) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i64 0, i64 0), i8* %82, i8* %83) #9
  %84 = load i8*, i8** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #9
  store i8* %84, i8** %52, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %81
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 61, %"class.logging::CheckOpResult"* nonnull %6) #9
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #9
  br label %88

88:                                               ; preds = %86, %81, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  %89 = load i8*, i8** %56, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 %71
  %91 = load i8, i8* %90, align 1
  %92 = getelementptr inbounds i8, i8* %90, i64 1
  %93 = load i8, i8* %92, align 1
  br label %94

94:                                               ; preds = %109, %88
  %95 = phi i8* [ %89, %88 ], [ %110, %109 ]
  %96 = phi i64 [ %75, %88 ], [ %114, %109 ]
  %97 = ptrtoint i8* %95 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %58, align 8
  %98 = load i64, i64* %15, align 8
  %99 = sub i64 %98, %97
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #9
  %100 = icmp ult i64 %96, %99
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #9
  store i8* null, i8** %58, align 8
  br label %109

102:                                              ; preds = %94
  %103 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %96) #9
  %104 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %99) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %103, i8* %104) #9
  %105 = load i8*, i8** %60, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #9
  store i8* %105, i8** %58, align 8
  %106 = icmp eq i8* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %102
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 68, %"class.logging::CheckOpResult"* nonnull %8) #9
  %108 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #9
  br label %109

109:                                              ; preds = %107, %102, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #9
  %110 = load i8*, i8** %56, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 %96
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  %114 = add i64 %96, 1
  br i1 %113, label %115, label %94

115:                                              ; preds = %109
  %116 = getelementptr inbounds i8, i8* %110, i64 %75
  %117 = sub i64 %96, %75
  %118 = icmp ugt i64 %117, %2
  %119 = select i1 %118, i64 %2, i64 %117
  %120 = call i32 @memcmp(i8* %116, i8* %1, i64 %119) #9
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %126

122:                                              ; preds = %115
  %123 = icmp eq i64 %117, %2
  br i1 %123, label %140, label %124

124:                                              ; preds = %122
  %125 = icmp ult i64 %117, %2
  br i1 %125, label %128, label %134

126:                                              ; preds = %115
  %127 = icmp slt i32 %120, 0
  br i1 %127, label %128, label %134

128:                                              ; preds = %124, %126
  %129 = icmp eq i64 %71, %63
  br i1 %129, label %146, label %130

130:                                              ; preds = %128, %130
  %131 = phi i64 [ %132, %130 ], [ %71, %128 ]
  %132 = add i64 %131, 1
  %133 = call zeroext i1 @_ZNK6zxcvbn11RankedDicts12IsRealMarkerEm(%"class.zxcvbn::RankedDicts"* %0, i64 %132)
  br i1 %133, label %65, label %130

134:                                              ; preds = %124, %126
  %135 = icmp eq i64 %71, %66
  br i1 %135, label %146, label %136

136:                                              ; preds = %134, %136
  %137 = phi i64 [ %138, %136 ], [ %71, %134 ]
  %138 = add i64 %137, -1
  %139 = call zeroext i1 @_ZNK6zxcvbn11RankedDicts12IsRealMarkerEm(%"class.zxcvbn::RankedDicts"* %0, i64 %138)
  br i1 %139, label %62, label %136

140:                                              ; preds = %122
  %141 = and i8 %91, 127
  %142 = zext i8 %141 to i64
  %143 = shl nuw nsw i64 %142, 8
  %144 = zext i8 %93 to i64
  %145 = or i64 %143, %144
  br label %146

146:                                              ; preds = %128, %134, %140, %3
  %147 = phi i8 [ 0, %3 ], [ 1, %140 ], [ 0, %134 ], [ 0, %128 ]
  %148 = phi i64 [ undef, %3 ], [ %145, %140 ], [ undef, %134 ], [ undef, %128 ]
  %149 = insertvalue { i8, i64 } undef, i8 %147, 0
  %150 = insertvalue { i8, i64 } %149, i64 %148, 1
  ret { i8, i64 } %150
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6zxcvbn11RankedDicts12IsRealMarkerEm(%"class.zxcvbn::RankedDicts"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.zxcvbn::RankedDicts", %"class.zxcvbn::RankedDicts"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.zxcvbn::RankedDicts"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = icmp ugt i64 %13, %1
  br i1 %15, label %16, label %17

16:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* null, i8** %7, align 8
  br label %26

17:                                               ; preds = %2
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #9
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %13) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i8* %18, i8* %19) #9
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* %21, i8** %7, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 187, %"class.logging::CheckOpResult"* nonnull %4) #9
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %26

26:                                               ; preds = %16, %17, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %27 = getelementptr inbounds %"class.zxcvbn::RankedDicts", %"class.zxcvbn::RankedDicts"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %26
  %33 = icmp eq i64 %1, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %32
  %35 = add i64 %1, -1
  %36 = getelementptr inbounds i8, i8* %28, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %34, %26
  br label %40

40:                                               ; preds = %34, %32, %39
  %41 = phi i1 [ false, %39 ], [ true, %32 ], [ true, %34 ]
  ret i1 %41
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6zxcvbn14SetRankedDictsENS_11RankedDictsE(%"class.zxcvbn::RankedDicts"* nocapture) local_unnamed_addr #0 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN6zxcvbn20default_ranked_dictsEvE13default_dicts to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !4

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN6zxcvbn20default_ranked_dictsEvE13default_dicts) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 16 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN6zxcvbn20default_ranked_dictsEvE13default_dicts, i64 0, i32 0, i64 0), i8 0, i64 24, i1 false) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN6zxcvbn20default_ranked_dictsEvE13default_dicts) #9
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = load i8*, i8** bitcast (%"class.base::NoDestructor"* @_ZZN6zxcvbn20default_ranked_dictsEvE13default_dicts to i8**), align 16
  %10 = icmp eq i8* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i8* %9 to i64
  store i64 %12, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN6zxcvbn20default_ranked_dictsEvE13default_dicts, i64 0, i32 0, i64 8) to i64*), align 8
  tail call void @_ZdlPv(i8* nonnull %9) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 16 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN6zxcvbn20default_ranked_dictsEvE13default_dicts, i64 0, i32 0, i64 0), i8 0, i64 24, i1 false) #9
  br label %13

13:                                               ; preds = %8, %11
  %14 = bitcast %"class.zxcvbn::RankedDicts"* %0 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 8
  store <2 x i64> %15, <2 x i64>* bitcast (%"class.base::NoDestructor"* @_ZZN6zxcvbn20default_ranked_dictsEvE13default_dicts to <2 x i64>*), align 16
  %16 = getelementptr inbounds %"class.zxcvbn::RankedDicts", %"class.zxcvbn::RankedDicts"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN6zxcvbn20default_ranked_dictsEvE13default_dicts, i64 0, i32 0, i64 16) to i64*), align 16
  %19 = bitcast %"class.zxcvbn::RankedDicts"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.zxcvbn::RankedDicts"* @_ZN6zxcvbn20default_ranked_dictsEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN6zxcvbn20default_ranked_dictsEvE13default_dicts to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !4

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN6zxcvbn20default_ranked_dictsEvE13default_dicts) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 16 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN6zxcvbn20default_ranked_dictsEvE13default_dicts, i64 0, i32 0, i64 0), i8 0, i64 24, i1 false) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN6zxcvbn20default_ranked_dictsEvE13default_dicts) #9
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.zxcvbn::RankedDicts"* bitcast (%"class.base::NoDestructor"* @_ZZN6zxcvbn20default_ranked_dictsEvE13default_dicts to %"class.zxcvbn::RankedDicts"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPcEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint i8* %3 to i64
  %8 = ptrtoint i8* %2 to i64
  %9 = sub i64 %7, %8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %414

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %164, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %37

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = ptrtoint i8* %25 to i64
  %27 = sub i64 %7, %26
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %25, i64 %27, i1 false) #9
  %30 = getelementptr inbounds i8, i8* %16, i64 %27
  %31 = ptrtoint i8* %30 to i64
  br label %32

32:                                               ; preds = %29, %24
  %33 = phi i64 [ %31, %29 ], [ %17, %24 ]
  store i64 %33, i64* %20, align 8
  %34 = icmp sgt i64 %22, 0
  br i1 %34, label %35, label %414

35:                                               ; preds = %32
  %36 = inttoptr i64 %33 to i8*
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi i64 [ %33, %35 ], [ %17, %21 ]
  %39 = phi i8* [ %36, %35 ], [ %16, %21 ]
  %40 = phi i8* [ %25, %35 ], [ %3, %21 ]
  %41 = getelementptr inbounds i8, i8* %1, i64 %9
  %42 = ptrtoint i8* %41 to i64
  %43 = sub i64 %38, %42
  %44 = getelementptr inbounds i8, i8* %1, i64 %43
  %45 = icmp ult i8* %44, %16
  br i1 %45, label %46, label %146

46:                                               ; preds = %37
  %47 = sub i64 %9, %38
  %48 = getelementptr i8, i8* %16, i64 %47
  %49 = ptrtoint i8* %48 to i64
  %50 = icmp ult i8* %48, inttoptr (i64 32 to i8*)
  br i1 %50, label %51, label %54

51:                                               ; preds = %141, %54, %46
  %52 = phi i8* [ %44, %54 ], [ %44, %46 ], [ %64, %141 ]
  %53 = phi i8* [ %39, %54 ], [ %39, %46 ], [ %65, %141 ]
  br label %152

54:                                               ; preds = %46
  %55 = sub i64 %9, %38
  %56 = getelementptr i8, i8* %16, i64 %55
  %57 = ptrtoint i8* %56 to i64
  %58 = getelementptr i8, i8* %39, i64 %57
  %59 = icmp ult i8* %39, %16
  %60 = icmp ult i8* %44, %58
  %61 = and i1 %59, %60
  br i1 %61, label %51, label %62

62:                                               ; preds = %54
  %63 = and i64 %49, -32
  %64 = getelementptr i8, i8* %44, i64 %63
  %65 = getelementptr i8, i8* %39, i64 %63
  %66 = add i64 %63, -32
  %67 = lshr exact i64 %66, 5
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 96
  br i1 %70, label %122, label %71

71:                                               ; preds = %62
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i8, i8* %44, i64 %74
  %77 = getelementptr i8, i8* %39, i64 %74
  %78 = bitcast i8* %76 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1, !alias.scope !5
  %80 = getelementptr i8, i8* %76, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !5
  %83 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> %79, <16 x i8>* %83, align 1, !alias.scope !8, !noalias !5
  %84 = getelementptr i8, i8* %77, i64 16
  %85 = bitcast i8* %84 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %85, align 1, !alias.scope !8, !noalias !5
  %86 = or i64 %74, 32
  %87 = getelementptr i8, i8* %44, i64 %86
  %88 = getelementptr i8, i8* %39, i64 %86
  %89 = bitcast i8* %87 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1, !alias.scope !5
  %91 = getelementptr i8, i8* %87, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !5
  %94 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %94, align 1, !alias.scope !8, !noalias !5
  %95 = getelementptr i8, i8* %88, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %96, align 1, !alias.scope !8, !noalias !5
  %97 = or i64 %74, 64
  %98 = getelementptr i8, i8* %44, i64 %97
  %99 = getelementptr i8, i8* %39, i64 %97
  %100 = bitcast i8* %98 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1, !alias.scope !5
  %102 = getelementptr i8, i8* %98, i64 16
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !alias.scope !5
  %105 = bitcast i8* %99 to <16 x i8>*
  store <16 x i8> %101, <16 x i8>* %105, align 1, !alias.scope !8, !noalias !5
  %106 = getelementptr i8, i8* %99, i64 16
  %107 = bitcast i8* %106 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %107, align 1, !alias.scope !8, !noalias !5
  %108 = or i64 %74, 96
  %109 = getelementptr i8, i8* %44, i64 %108
  %110 = getelementptr i8, i8* %39, i64 %108
  %111 = bitcast i8* %109 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !5
  %113 = getelementptr i8, i8* %109, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !5
  %116 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !8, !noalias !5
  %117 = getelementptr i8, i8* %110, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1, !alias.scope !8, !noalias !5
  %119 = add i64 %74, 128
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !10

122:                                              ; preds = %73, %62
  %123 = phi i64 [ 0, %62 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i8, i8* %44, i64 %126
  %129 = getelementptr i8, i8* %39, i64 %126
  %130 = bitcast i8* %128 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !5
  %132 = getelementptr i8, i8* %128, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !5
  %135 = bitcast i8* %129 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %135, align 1, !alias.scope !8, !noalias !5
  %136 = getelementptr i8, i8* %129, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %137, align 1, !alias.scope !8, !noalias !5
  %138 = add i64 %126, 32
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !12

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %63, %49
  br i1 %142, label %143, label %51

143:                                              ; preds = %152, %141
  %144 = phi i8* [ %65, %141 ], [ %157, %152 ]
  %145 = ptrtoint i8* %144 to i64
  br label %146

146:                                              ; preds = %143, %37
  %147 = phi i64 [ %145, %143 ], [ %38, %37 ]
  store i64 %147, i64* %20, align 8
  %148 = icmp eq i64 %43, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %146
  %150 = sub i64 0, %43
  %151 = getelementptr inbounds i8, i8* %39, i64 %150
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %1, i64 %43, i1 false) #9
  br label %159

152:                                              ; preds = %51, %152
  %153 = phi i8* [ %156, %152 ], [ %52, %51 ]
  %154 = phi i8* [ %157, %152 ], [ %53, %51 ]
  %155 = load i8, i8* %153, align 1
  store i8 %155, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  %157 = getelementptr inbounds i8, i8* %154, i64 1
  %158 = icmp eq i8* %156, %16
  br i1 %158, label %143, label %152, !llvm.loop !13

159:                                              ; preds = %146, %149
  %160 = ptrtoint i8* %40 to i64
  %161 = sub i64 %160, %8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %414, label %163

163:                                              ; preds = %159
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %161, i1 false) #9
  br label %414

164:                                              ; preds = %11
  %165 = bitcast %"class.std::__1::vector"* %0 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %17, %166
  %168 = add i64 %167, %9
  %169 = icmp slt i64 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %164
  %171 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %171) #10
  unreachable

172:                                              ; preds = %164
  %173 = sub i64 %14, %166
  %174 = icmp ult i64 %173, 4611686018427387903
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = sub i64 %5, %166
  br label %183

177:                                              ; preds = %172
  %178 = shl i64 %173, 1
  %179 = icmp ult i64 %178, %168
  %180 = select i1 %179, i64 %168, i64 %178
  %181 = sub i64 %5, %166
  %182 = icmp eq i64 %180, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %175, %177
  %184 = phi i64 [ %176, %175 ], [ %181, %177 ]
  %185 = phi i64 [ 9223372036854775807, %175 ], [ %180, %177 ]
  %186 = tail call i8* @_Znwm(i64 %185) #11
  br label %187

187:                                              ; preds = %177, %183
  %188 = phi i64 [ %184, %183 ], [ %181, %177 ]
  %189 = phi i64 [ %185, %183 ], [ 0, %177 ]
  %190 = phi i8* [ %186, %183 ], [ null, %177 ]
  %191 = getelementptr inbounds i8, i8* %190, i64 %188
  %192 = getelementptr inbounds i8, i8* %190, i64 %189
  %193 = getelementptr inbounds i8, i8* %191, i64 %9
  %194 = icmp ult i64 %9, 32
  br i1 %194, label %280, label %195

195:                                              ; preds = %187
  %196 = icmp ult i8* %191, %3
  %197 = icmp ugt i8* %193, %2
  %198 = and i1 %196, %197
  br i1 %198, label %280, label %199

199:                                              ; preds = %195
  %200 = and i64 %9, -32
  %201 = getelementptr i8, i8* %191, i64 %200
  %202 = getelementptr i8, i8* %2, i64 %200
  %203 = add i64 %200, -32
  %204 = lshr exact i64 %203, 5
  %205 = add nuw nsw i64 %204, 1
  %206 = and i64 %205, 3
  %207 = icmp ult i64 %203, 96
  br i1 %207, label %259, label %208

208:                                              ; preds = %199
  %209 = sub nsw i64 %205, %206
  br label %210

210:                                              ; preds = %210, %208
  %211 = phi i64 [ 0, %208 ], [ %256, %210 ]
  %212 = phi i64 [ %209, %208 ], [ %257, %210 ]
  %213 = getelementptr i8, i8* %191, i64 %211
  %214 = getelementptr i8, i8* %2, i64 %211
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !14
  %217 = getelementptr i8, i8* %214, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !14
  %220 = bitcast i8* %213 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !17, !noalias !14
  %221 = getelementptr i8, i8* %213, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !17, !noalias !14
  %223 = or i64 %211, 32
  %224 = getelementptr i8, i8* %191, i64 %223
  %225 = getelementptr i8, i8* %2, i64 %223
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !14
  %228 = getelementptr i8, i8* %225, i64 16
  %229 = bitcast i8* %228 to <16 x i8>*
  %230 = load <16 x i8>, <16 x i8>* %229, align 1, !alias.scope !14
  %231 = bitcast i8* %224 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %231, align 1, !alias.scope !17, !noalias !14
  %232 = getelementptr i8, i8* %224, i64 16
  %233 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %230, <16 x i8>* %233, align 1, !alias.scope !17, !noalias !14
  %234 = or i64 %211, 64
  %235 = getelementptr i8, i8* %191, i64 %234
  %236 = getelementptr i8, i8* %2, i64 %234
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !14
  %239 = getelementptr i8, i8* %236, i64 16
  %240 = bitcast i8* %239 to <16 x i8>*
  %241 = load <16 x i8>, <16 x i8>* %240, align 1, !alias.scope !14
  %242 = bitcast i8* %235 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %242, align 1, !alias.scope !17, !noalias !14
  %243 = getelementptr i8, i8* %235, i64 16
  %244 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %241, <16 x i8>* %244, align 1, !alias.scope !17, !noalias !14
  %245 = or i64 %211, 96
  %246 = getelementptr i8, i8* %191, i64 %245
  %247 = getelementptr i8, i8* %2, i64 %245
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !14
  %250 = getelementptr i8, i8* %247, i64 16
  %251 = bitcast i8* %250 to <16 x i8>*
  %252 = load <16 x i8>, <16 x i8>* %251, align 1, !alias.scope !14
  %253 = bitcast i8* %246 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %253, align 1, !alias.scope !17, !noalias !14
  %254 = getelementptr i8, i8* %246, i64 16
  %255 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %252, <16 x i8>* %255, align 1, !alias.scope !17, !noalias !14
  %256 = add i64 %211, 128
  %257 = add i64 %212, -4
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %210, !llvm.loop !19

259:                                              ; preds = %210, %199
  %260 = phi i64 [ 0, %199 ], [ %256, %210 ]
  %261 = icmp eq i64 %206, 0
  br i1 %261, label %278, label %262

262:                                              ; preds = %259, %262
  %263 = phi i64 [ %275, %262 ], [ %260, %259 ]
  %264 = phi i64 [ %276, %262 ], [ %206, %259 ]
  %265 = getelementptr i8, i8* %191, i64 %263
  %266 = getelementptr i8, i8* %2, i64 %263
  %267 = bitcast i8* %266 to <16 x i8>*
  %268 = load <16 x i8>, <16 x i8>* %267, align 1, !alias.scope !14
  %269 = getelementptr i8, i8* %266, i64 16
  %270 = bitcast i8* %269 to <16 x i8>*
  %271 = load <16 x i8>, <16 x i8>* %270, align 1, !alias.scope !14
  %272 = bitcast i8* %265 to <16 x i8>*
  store <16 x i8> %268, <16 x i8>* %272, align 1, !alias.scope !17, !noalias !14
  %273 = getelementptr i8, i8* %265, i64 16
  %274 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %271, <16 x i8>* %274, align 1, !alias.scope !17, !noalias !14
  %275 = add i64 %263, 32
  %276 = add i64 %264, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %262, !llvm.loop !20

278:                                              ; preds = %262, %259
  %279 = icmp eq i64 %9, %200
  br i1 %279, label %290, label %280

280:                                              ; preds = %278, %195, %187
  %281 = phi i8* [ %191, %195 ], [ %191, %187 ], [ %201, %278 ]
  %282 = phi i8* [ %2, %195 ], [ %2, %187 ], [ %202, %278 ]
  br label %283

283:                                              ; preds = %280, %283
  %284 = phi i8* [ %287, %283 ], [ %281, %280 ]
  %285 = phi i8* [ %288, %283 ], [ %282, %280 ]
  %286 = load i8, i8* %285, align 1
  store i8 %286, i8* %284, align 1
  %287 = getelementptr inbounds i8, i8* %284, i64 1
  %288 = getelementptr inbounds i8, i8* %285, i64 1
  %289 = icmp eq i8* %193, %287
  br i1 %289, label %290, label %283, !llvm.loop !21

290:                                              ; preds = %283, %278
  %291 = ptrtoint i8* %192 to i64
  %292 = load i8*, i8** %6, align 8
  %293 = ptrtoint i8* %292 to i64
  %294 = sub i64 %5, %293
  %295 = sub i64 0, %294
  %296 = getelementptr inbounds i8, i8* %191, i64 %295
  %297 = ptrtoint i8* %296 to i64
  %298 = icmp sgt i64 %294, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %290
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %296, i8* align 1 %292, i64 %294, i1 false) #9
  br label %300

300:                                              ; preds = %299, %290
  %301 = load i8*, i8** %15, align 8
  %302 = icmp eq i8* %301, %1
  br i1 %302, label %408, label %303

303:                                              ; preds = %300
  %304 = ptrtoint i8* %301 to i64
  %305 = sub i64 %304, %5
  %306 = icmp ult i64 %305, 32
  br i1 %306, label %398, label %307

307:                                              ; preds = %303
  %308 = add i64 %188, %7
  %309 = sub i64 %308, %5
  %310 = sub i64 %309, %8
  %311 = getelementptr i8, i8* %301, i64 %310
  %312 = ptrtoint i8* %311 to i64
  %313 = getelementptr i8, i8* %190, i64 %312
  %314 = icmp ult i8* %193, %301
  %315 = icmp ugt i8* %313, %1
  %316 = and i1 %314, %315
  br i1 %316, label %398, label %317

317:                                              ; preds = %307
  %318 = and i64 %305, -32
  %319 = getelementptr i8, i8* %193, i64 %318
  %320 = getelementptr i8, i8* %1, i64 %318
  %321 = add i64 %318, -32
  %322 = lshr exact i64 %321, 5
  %323 = add nuw nsw i64 %322, 1
  %324 = and i64 %323, 3
  %325 = icmp ult i64 %321, 96
  br i1 %325, label %377, label %326

326:                                              ; preds = %317
  %327 = sub nsw i64 %323, %324
  br label %328

328:                                              ; preds = %328, %326
  %329 = phi i64 [ 0, %326 ], [ %374, %328 ]
  %330 = phi i64 [ %327, %326 ], [ %375, %328 ]
  %331 = getelementptr i8, i8* %193, i64 %329
  %332 = getelementptr i8, i8* %1, i64 %329
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !22
  %335 = getelementptr i8, i8* %332, i64 16
  %336 = bitcast i8* %335 to <16 x i8>*
  %337 = load <16 x i8>, <16 x i8>* %336, align 1, !alias.scope !22
  %338 = bitcast i8* %331 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %338, align 1, !alias.scope !25, !noalias !22
  %339 = getelementptr i8, i8* %331, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %337, <16 x i8>* %340, align 1, !alias.scope !25, !noalias !22
  %341 = or i64 %329, 32
  %342 = getelementptr i8, i8* %193, i64 %341
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = bitcast i8* %343 to <16 x i8>*
  %345 = load <16 x i8>, <16 x i8>* %344, align 1, !alias.scope !22
  %346 = getelementptr i8, i8* %343, i64 16
  %347 = bitcast i8* %346 to <16 x i8>*
  %348 = load <16 x i8>, <16 x i8>* %347, align 1, !alias.scope !22
  %349 = bitcast i8* %342 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %349, align 1, !alias.scope !25, !noalias !22
  %350 = getelementptr i8, i8* %342, i64 16
  %351 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %348, <16 x i8>* %351, align 1, !alias.scope !25, !noalias !22
  %352 = or i64 %329, 64
  %353 = getelementptr i8, i8* %193, i64 %352
  %354 = getelementptr i8, i8* %1, i64 %352
  %355 = bitcast i8* %354 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !22
  %357 = getelementptr i8, i8* %354, i64 16
  %358 = bitcast i8* %357 to <16 x i8>*
  %359 = load <16 x i8>, <16 x i8>* %358, align 1, !alias.scope !22
  %360 = bitcast i8* %353 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %360, align 1, !alias.scope !25, !noalias !22
  %361 = getelementptr i8, i8* %353, i64 16
  %362 = bitcast i8* %361 to <16 x i8>*
  store <16 x i8> %359, <16 x i8>* %362, align 1, !alias.scope !25, !noalias !22
  %363 = or i64 %329, 96
  %364 = getelementptr i8, i8* %193, i64 %363
  %365 = getelementptr i8, i8* %1, i64 %363
  %366 = bitcast i8* %365 to <16 x i8>*
  %367 = load <16 x i8>, <16 x i8>* %366, align 1, !alias.scope !22
  %368 = getelementptr i8, i8* %365, i64 16
  %369 = bitcast i8* %368 to <16 x i8>*
  %370 = load <16 x i8>, <16 x i8>* %369, align 1, !alias.scope !22
  %371 = bitcast i8* %364 to <16 x i8>*
  store <16 x i8> %367, <16 x i8>* %371, align 1, !alias.scope !25, !noalias !22
  %372 = getelementptr i8, i8* %364, i64 16
  %373 = bitcast i8* %372 to <16 x i8>*
  store <16 x i8> %370, <16 x i8>* %373, align 1, !alias.scope !25, !noalias !22
  %374 = add i64 %329, 128
  %375 = add i64 %330, -4
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %328, !llvm.loop !27

377:                                              ; preds = %328, %317
  %378 = phi i64 [ 0, %317 ], [ %374, %328 ]
  %379 = icmp eq i64 %324, 0
  br i1 %379, label %396, label %380

380:                                              ; preds = %377, %380
  %381 = phi i64 [ %393, %380 ], [ %378, %377 ]
  %382 = phi i64 [ %394, %380 ], [ %324, %377 ]
  %383 = getelementptr i8, i8* %193, i64 %381
  %384 = getelementptr i8, i8* %1, i64 %381
  %385 = bitcast i8* %384 to <16 x i8>*
  %386 = load <16 x i8>, <16 x i8>* %385, align 1, !alias.scope !22
  %387 = getelementptr i8, i8* %384, i64 16
  %388 = bitcast i8* %387 to <16 x i8>*
  %389 = load <16 x i8>, <16 x i8>* %388, align 1, !alias.scope !22
  %390 = bitcast i8* %383 to <16 x i8>*
  store <16 x i8> %386, <16 x i8>* %390, align 1, !alias.scope !25, !noalias !22
  %391 = getelementptr i8, i8* %383, i64 16
  %392 = bitcast i8* %391 to <16 x i8>*
  store <16 x i8> %389, <16 x i8>* %392, align 1, !alias.scope !25, !noalias !22
  %393 = add i64 %381, 32
  %394 = add i64 %382, -1
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %396, label %380, !llvm.loop !28

396:                                              ; preds = %380, %377
  %397 = icmp eq i64 %305, %318
  br i1 %397, label %408, label %398

398:                                              ; preds = %396, %307, %303
  %399 = phi i8* [ %193, %307 ], [ %193, %303 ], [ %319, %396 ]
  %400 = phi i8* [ %1, %307 ], [ %1, %303 ], [ %320, %396 ]
  br label %401

401:                                              ; preds = %398, %401
  %402 = phi i8* [ %406, %401 ], [ %399, %398 ]
  %403 = phi i8* [ %405, %401 ], [ %400, %398 ]
  %404 = load i8, i8* %403, align 1
  store i8 %404, i8* %402, align 1
  %405 = getelementptr inbounds i8, i8* %403, i64 1
  %406 = getelementptr inbounds i8, i8* %402, i64 1
  %407 = icmp eq i8* %405, %301
  br i1 %407, label %408, label %401, !llvm.loop !29

408:                                              ; preds = %401, %396, %300
  %409 = phi i8* [ %193, %300 ], [ %319, %396 ], [ %406, %401 ]
  %410 = ptrtoint i8* %409 to i64
  %411 = load i8*, i8** %6, align 8
  store i64 %297, i64* %165, align 8
  store i64 %410, i64* %20, align 8
  store i64 %291, i64* %13, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %414, label %413

413:                                              ; preds = %408
  tail call void @_ZdlPv(i8* nonnull %411) #11
  br label %414

414:                                              ; preds = %413, %408, %32, %159, %163, %4
  %415 = phi i8* [ %1, %4 ], [ %1, %163 ], [ %1, %159 ], [ %1, %32 ], [ %191, %408 ], [ %191, %413 ]
  ret i8* %415
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !30
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEvT0_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"*, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %378, %2
  %4 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %1, %2 ], [ %342, %378 ]
  %5 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %0, %2 ], [ %17, %378 ]
  %6 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4 to i64
  %7 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4, i64 -1
  %8 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4, i64 -1, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4, i64 -1, i32 1, i32 1
  %10 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %7 to i8*
  %11 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %7, i64 0, i32 0
  %12 = bitcast i8** %8 to i64*
  %13 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4 to i64
  br label %14

14:                                               ; preds = %389, %3
  %15 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %5, %3 ], [ %390, %389 ]
  br label %16

16:                                               ; preds = %234, %14
  %17 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %15, %14 ], [ %201, %234 ]
  %18 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17 to i64
  %19 = sub i64 %6, %18
  %20 = sdiv exact i64 %19, 24
  switch i64 %20, label %62 [
    i64 0, label %393
    i64 1, label %393
    i64 2, label %21
    i64 3, label %47
    i64 4, label %51
    i64 5, label %56
  ]

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4, i64 -1
  %23 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4, i64 -1, i32 1, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4, i64 -1, i32 1, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 0, i32 1, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 0, i32 1, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %26, %30
  %32 = select i1 %31, i64 %30, i64 %26
  %33 = tail call i32 @memcmp(i8* %24, i8* %28, i64 %32) #9
  %34 = icmp eq i32 %33, 0
  %35 = ptrtoint i8* %28 to i64
  br i1 %34, label %36, label %38

36:                                               ; preds = %21
  %37 = icmp ult i64 %26, %30
  br i1 %37, label %40, label %393

38:                                               ; preds = %21
  %39 = icmp slt i32 %33, 0
  br i1 %39, label %40, label %393

40:                                               ; preds = %36, %38
  %41 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17 to i8*
  %44 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #9
  %45 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %22, i64 0, i32 0
  store i64 %42, i64* %45, align 8
  %46 = bitcast i8** %23 to i64*
  store i64 %35, i64* %46, align 8
  store i64 %30, i64* %25, align 8
  br label %393

47:                                               ; preds = %16
  %48 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 1
  %49 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4, i64 -1
  %50 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEjT0_SL_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %48, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %49)
  br label %393

51:                                               ; preds = %16
  %52 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 1
  %53 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 2
  %54 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4, i64 -1
  %55 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEjT0_SL_SL_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %52, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %53, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %54)
  br label %393

56:                                               ; preds = %16
  %57 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 1
  %58 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 2
  %59 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 3
  %60 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4, i64 -1
  %61 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEjT0_SL_SL_SL_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %57, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %58, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %59, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %60)
  br label %393

62:                                               ; preds = %16
  %63 = icmp slt i64 %19, 744
  br i1 %63, label %64, label %121

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 2
  %66 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 1
  %67 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEjT0_SL_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %66, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %65) #9
  %68 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 3
  %69 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %68, %4
  br i1 %69, label %393, label %70

70:                                               ; preds = %64, %118
  %71 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %119, %118 ], [ %68, %64 ]
  %72 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %71, %118 ], [ %65, %64 ]
  %73 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %71, i64 0, i32 1, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %71, i64 0, i32 1, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %72, i64 0, i32 1, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %72, i64 0, i32 1, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = icmp ugt i64 %76, %80
  %82 = select i1 %81, i64 %80, i64 %76
  %83 = tail call i32 @memcmp(i8* %74, i8* %78, i64 %82) #9
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %70
  %86 = icmp ult i64 %76, %80
  br i1 %86, label %89, label %118

87:                                               ; preds = %70
  %88 = icmp slt i32 %83, 0
  br i1 %88, label %89, label %118

89:                                               ; preds = %87, %85
  %90 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %71, i64 0, i32 0
  %91 = load i64, i64* %90, align 8
  br label %92

92:                                               ; preds = %110, %89
  %93 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %71, %89 ], [ %94, %110 ]
  %94 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %72, %89 ], [ %99, %110 ]
  %95 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %93 to i8*
  %96 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 24, i1 false) #9
  %97 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %94, %17
  br i1 %97, label %113, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %94, i64 -1
  %100 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %94, i64 -1, i32 1, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %94, i64 -1, i32 1, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = icmp ugt i64 %76, %103
  %105 = select i1 %104, i64 %103, i64 %76
  %106 = tail call i32 @memcmp(i8* %74, i8* %101, i64 %105) #9
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %98
  %109 = icmp ult i64 %76, %103
  br i1 %109, label %110, label %113

110:                                              ; preds = %108, %98
  %111 = phi i32 [ %106, %98 ], [ -1, %108 ]
  %112 = icmp slt i32 %111, 0
  br i1 %112, label %92, label %113

113:                                              ; preds = %110, %108, %92
  %114 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %94, %108 ], [ %17, %92 ], [ %94, %110 ]
  %115 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %114, i64 0, i32 0
  store i64 %91, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %114, i64 0, i32 1, i32 0
  store i8* %74, i8** %116, align 8
  %117 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %114, i64 0, i32 1, i32 1
  store i64 %76, i64* %117, align 8
  br label %118

118:                                              ; preds = %113, %87, %85
  %119 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %71, i64 1
  %120 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %119, %4
  br i1 %120, label %393, label %70

121:                                              ; preds = %62
  %122 = icmp sgt i64 %19, 23976
  %123 = udiv i64 %19, 48
  %124 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 %123
  br i1 %122, label %125, label %130

125:                                              ; preds = %121
  %126 = udiv i64 %19, 96
  %127 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 %126
  %128 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %124, i64 %126
  %129 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEjT0_SL_SL_SL_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %127, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %124, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %128, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %7)
  br label %132

130:                                              ; preds = %121
  %131 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEjT0_SL_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %124, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %7)
  br label %132

132:                                              ; preds = %130, %125
  %133 = phi i32 [ %129, %125 ], [ %131, %130 ]
  %134 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 0, i32 1, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 0, i32 1, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 %123, i32 1, i32 0
  %139 = load i8*, i8** %138, align 8
  %140 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 %123, i32 1, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = icmp ugt i64 %137, %141
  %143 = select i1 %142, i64 %141, i64 %137
  %144 = tail call i32 @memcmp(i8* %135, i8* %139, i64 %143) #9
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %148

146:                                              ; preds = %132
  %147 = icmp ult i64 %137, %141
  br i1 %147, label %273, label %150

148:                                              ; preds = %132
  %149 = icmp slt i32 %144, 0
  br i1 %149, label %273, label %150

150:                                              ; preds = %146, %148
  br label %151

151:                                              ; preds = %150, %259
  %152 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %153, %259 ], [ %7, %150 ]
  %153 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %152, i64 -1
  %154 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, %153
  br i1 %154, label %155, label %246

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 1
  %157 = load i8*, i8** %8, align 8
  %158 = load i64, i64* %9, align 8
  %159 = icmp ugt i64 %137, %158
  %160 = select i1 %159, i64 %158, i64 %137
  %161 = tail call i32 @memcmp(i8* %135, i8* %157, i64 %160) #9
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %155
  %164 = icmp ult i64 %137, %158
  br i1 %164, label %192, label %167

165:                                              ; preds = %155
  %166 = icmp slt i32 %161, 0
  br i1 %166, label %192, label %167

167:                                              ; preds = %163, %165
  %168 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %156, %7
  br i1 %168, label %393, label %169

169:                                              ; preds = %167, %189
  %170 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %190, %189 ], [ %156, %167 ]
  %171 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %170, i64 0, i32 1, i32 0
  %172 = load i8*, i8** %171, align 8
  %173 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %170, i64 0, i32 1, i32 1
  %174 = load i64, i64* %173, align 8
  %175 = icmp ugt i64 %137, %174
  %176 = select i1 %175, i64 %174, i64 %137
  %177 = tail call i32 @memcmp(i8* %135, i8* %172, i64 %176) #9
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %181

179:                                              ; preds = %169
  %180 = icmp ult i64 %137, %174
  br i1 %180, label %183, label %189

181:                                              ; preds = %169
  %182 = icmp slt i32 %177, 0
  br i1 %182, label %183, label %189

183:                                              ; preds = %179, %181
  %184 = ptrtoint i8* %172 to i64
  %185 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %170, i64 0, i32 0
  %186 = load i64, i64* %185, align 8
  %187 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %170 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %10, i64 24, i1 false) #9
  store i64 %186, i64* %11, align 8
  store i64 %184, i64* %12, align 8
  store i64 %174, i64* %9, align 8
  %188 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %170, i64 1
  br label %192

189:                                              ; preds = %179, %181
  %190 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %170, i64 1
  %191 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %190, %7
  br i1 %191, label %393, label %169

192:                                              ; preds = %163, %183, %165
  %193 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %156, %165 ], [ %188, %183 ], [ %156, %163 ]
  %194 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %193, %7
  br i1 %194, label %393, label %195

195:                                              ; preds = %192, %236
  %196 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %245, %236 ], [ %193, %192 ]
  %197 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %220, %236 ], [ %7, %192 ]
  %198 = load i8*, i8** %134, align 8
  %199 = load i64, i64* %136, align 8
  br label %200

200:                                              ; preds = %216, %195
  %201 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %196, %195 ], [ %217, %216 ]
  %202 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %201, i64 0, i32 1, i32 0
  %203 = load i8*, i8** %202, align 8
  %204 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %201, i64 0, i32 1, i32 1
  %205 = load i64, i64* %204, align 8
  %206 = icmp ugt i64 %199, %205
  %207 = select i1 %206, i64 %205, i64 %199
  %208 = tail call i32 @memcmp(i8* %198, i8* %203, i64 %207) #9
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %212

210:                                              ; preds = %200
  %211 = icmp ult i64 %199, %205
  br i1 %211, label %214, label %216

212:                                              ; preds = %200
  %213 = icmp slt i32 %208, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %210, %212
  %215 = ptrtoint i8* %203 to i64
  br label %218

216:                                              ; preds = %210, %212
  %217 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %201, i64 1
  br label %200

218:                                              ; preds = %214, %231
  %219 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %220, %231 ], [ %197, %214 ]
  %220 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %219, i64 -1
  %221 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %219, i64 -1, i32 1, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %219, i64 -1, i32 1, i32 1
  %224 = load i64, i64* %223, align 8
  %225 = icmp ugt i64 %199, %224
  %226 = select i1 %225, i64 %224, i64 %199
  %227 = tail call i32 @memcmp(i8* %198, i8* %222, i64 %226) #9
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %218
  %230 = icmp ult i64 %199, %224
  br i1 %230, label %231, label %234

231:                                              ; preds = %229, %218
  %232 = phi i32 [ %227, %218 ], [ -1, %229 ]
  %233 = icmp slt i32 %232, 0
  br i1 %233, label %218, label %234

234:                                              ; preds = %229, %231
  %235 = icmp ult %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %201, %220
  br i1 %235, label %236, label %16

236:                                              ; preds = %234
  %237 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %219, i64 -1, i32 1, i32 1
  %238 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %219, i64 -1, i32 1, i32 0
  %239 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %201, i64 0, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %201 to i8*
  %242 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %220 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %242, i64 24, i1 false) #9
  %243 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %220, i64 0, i32 0
  store i64 %240, i64* %243, align 8
  %244 = bitcast i8** %238 to i64*
  store i64 %215, i64* %244, align 8
  store i64 %205, i64* %237, align 8
  %245 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %201, i64 1
  br label %195

246:                                              ; preds = %151
  %247 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %152, i64 -1, i32 1, i32 0
  %248 = load i8*, i8** %247, align 8
  %249 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %152, i64 -1, i32 1, i32 1
  %250 = load i64, i64* %249, align 8
  %251 = icmp ugt i64 %250, %141
  %252 = select i1 %251, i64 %141, i64 %250
  %253 = tail call i32 @memcmp(i8* %248, i8* %139, i64 %252) #9
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %259

255:                                              ; preds = %246
  %256 = icmp eq i64 %250, %141
  br i1 %256, label %259, label %257

257:                                              ; preds = %255
  %258 = icmp ult i64 %250, %141
  br i1 %258, label %262, label %259

259:                                              ; preds = %257, %246, %255
  %260 = phi i32 [ 1, %257 ], [ %253, %246 ], [ 0, %255 ]
  %261 = icmp slt i32 %260, 0
  br i1 %261, label %262, label %151

262:                                              ; preds = %257, %259
  %263 = ptrtoint i8* %135 to i64
  %264 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %152, i64 -1, i32 1, i32 0
  %265 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %152, i64 -1, i32 1, i32 1
  %266 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 0, i32 0
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17 to i8*
  %269 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %153 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %268, i8* align 8 %269, i64 24, i1 false) #9
  %270 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %153, i64 0, i32 0
  store i64 %267, i64* %270, align 8
  %271 = bitcast i8** %264 to i64*
  store i64 %263, i64* %271, align 8
  store i64 %137, i64* %265, align 8
  %272 = add i32 %133, 1
  br label %273

273:                                              ; preds = %148, %146, %262
  %274 = phi i32 [ %272, %262 ], [ %133, %146 ], [ %133, %148 ]
  %275 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %153, %262 ], [ %7, %146 ], [ %7, %148 ]
  %276 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17 to i64
  %277 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, i64 1
  %278 = icmp ult %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %277, %275
  br i1 %278, label %279, label %339

279:                                              ; preds = %273, %326
  %280 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %337, %326 ], [ %124, %273 ]
  %281 = phi i32 [ %335, %326 ], [ %274, %273 ]
  %282 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %338, %326 ], [ %277, %273 ]
  %283 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %308, %326 ], [ %275, %273 ]
  %284 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %280, i64 0, i32 1, i32 0
  %285 = load i8*, i8** %284, align 8
  %286 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %280, i64 0, i32 1, i32 1
  %287 = load i64, i64* %286, align 8
  br label %288

288:                                              ; preds = %304, %279
  %289 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %282, %279 ], [ %305, %304 ]
  %290 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %289, i64 0, i32 1, i32 0
  %291 = load i8*, i8** %290, align 8
  %292 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %289, i64 0, i32 1, i32 1
  %293 = load i64, i64* %292, align 8
  %294 = icmp ugt i64 %293, %287
  %295 = select i1 %294, i64 %287, i64 %293
  %296 = tail call i32 @memcmp(i8* %291, i8* %285, i64 %295) #9
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %300

298:                                              ; preds = %288
  %299 = icmp ult i64 %293, %287
  br i1 %299, label %304, label %302

300:                                              ; preds = %288
  %301 = icmp slt i32 %296, 0
  br i1 %301, label %304, label %302

302:                                              ; preds = %298, %300
  %303 = ptrtoint i8* %291 to i64
  br label %306

304:                                              ; preds = %298, %300
  %305 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %289, i64 1
  br label %288

306:                                              ; preds = %302, %321
  %307 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %308, %321 ], [ %283, %302 ]
  %308 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %307, i64 -1
  %309 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %307, i64 -1, i32 1, i32 0
  %310 = load i8*, i8** %309, align 8
  %311 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %307, i64 -1, i32 1, i32 1
  %312 = load i64, i64* %311, align 8
  %313 = icmp ugt i64 %312, %287
  %314 = select i1 %313, i64 %287, i64 %312
  %315 = tail call i32 @memcmp(i8* %310, i8* %285, i64 %314) #9
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %321

317:                                              ; preds = %306
  %318 = icmp eq i64 %312, %287
  br i1 %318, label %321, label %319

319:                                              ; preds = %317
  %320 = icmp ult i64 %312, %287
  br i1 %320, label %324, label %321

321:                                              ; preds = %319, %306, %317
  %322 = phi i32 [ 1, %319 ], [ %315, %306 ], [ 0, %317 ]
  %323 = icmp slt i32 %322, 0
  br i1 %323, label %324, label %306

324:                                              ; preds = %319, %321
  %325 = icmp ugt %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %289, %308
  br i1 %325, label %339, label %326

326:                                              ; preds = %324
  %327 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %307, i64 -1, i32 1, i32 1
  %328 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %307, i64 -1, i32 1, i32 0
  %329 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %289, i64 0, i32 0
  %330 = load i64, i64* %329, align 8
  %331 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %289 to i8*
  %332 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %308 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %331, i8* align 8 %332, i64 24, i1 false) #9
  %333 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %308, i64 0, i32 0
  store i64 %330, i64* %333, align 8
  %334 = bitcast i8** %328 to i64*
  store i64 %303, i64* %334, align 8
  store i64 %293, i64* %327, align 8
  %335 = add i32 %281, 1
  %336 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %280, %289
  %337 = select i1 %336, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %308, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %280
  %338 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %289, i64 1
  br label %279

339:                                              ; preds = %324, %273
  %340 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %124, %273 ], [ %280, %324 ]
  %341 = phi i32 [ %274, %273 ], [ %281, %324 ]
  %342 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %277, %273 ], [ %289, %324 ]
  %343 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %342, %340
  br i1 %343, label %370, label %344

344:                                              ; preds = %339
  %345 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %340, i64 0, i32 1, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %340, i64 0, i32 1, i32 1
  %348 = load i64, i64* %347, align 8
  %349 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %342, i64 0, i32 1, i32 0
  %350 = load i8*, i8** %349, align 8
  %351 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %342, i64 0, i32 1, i32 1
  %352 = load i64, i64* %351, align 8
  %353 = icmp ugt i64 %348, %352
  %354 = select i1 %353, i64 %352, i64 %348
  %355 = tail call i32 @memcmp(i8* %346, i8* %350, i64 %354) #9
  %356 = icmp eq i32 %355, 0
  %357 = ptrtoint i8* %350 to i64
  br i1 %356, label %358, label %360

358:                                              ; preds = %344
  %359 = icmp ult i64 %348, %352
  br i1 %359, label %362, label %370

360:                                              ; preds = %344
  %361 = icmp slt i32 %355, 0
  br i1 %361, label %362, label %370

362:                                              ; preds = %358, %360
  %363 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %342, i64 0, i32 0
  %364 = load i64, i64* %363, align 8
  %365 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %342 to i8*
  %366 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %340 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %365, i8* align 8 %366, i64 24, i1 false) #9
  %367 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %340, i64 0, i32 0
  store i64 %364, i64* %367, align 8
  %368 = bitcast i8** %345 to i64*
  store i64 %357, i64* %368, align 8
  store i64 %352, i64* %347, align 8
  %369 = add i32 %341, 1
  br label %370

370:                                              ; preds = %358, %339, %362, %360
  %371 = phi i32 [ %369, %362 ], [ %341, %360 ], [ %341, %339 ], [ %341, %358 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %380

373:                                              ; preds = %370
  %374 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEbT0_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %342)
  %375 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %342, i64 1
  %376 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEbT0_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %375, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4)
  br i1 %376, label %377, label %379

377:                                              ; preds = %373
  br i1 %374, label %393, label %378

378:                                              ; preds = %377, %391
  br label %3

379:                                              ; preds = %373
  br i1 %374, label %389, label %380

380:                                              ; preds = %379, %370
  %381 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %342 to i64
  %382 = sub i64 %381, %276
  %383 = sdiv exact i64 %382, 24
  %384 = sub i64 %13, %381
  %385 = sdiv exact i64 %384, 24
  %386 = icmp slt i64 %383, %385
  br i1 %386, label %387, label %391

387:                                              ; preds = %380
  tail call fastcc void @"_ZNSt3__16__sortIRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEvT0_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %17, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %342)
  %388 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %342, i64 1
  br label %389

389:                                              ; preds = %387, %379
  %390 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %375, %379 ], [ %388, %387 ]
  br label %14

391:                                              ; preds = %380
  %392 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %342, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEvT0_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %392, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4)
  br label %378

393:                                              ; preds = %377, %192, %16, %16, %167, %189, %118, %36, %64, %38, %40, %47, %51, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEjT0_SL_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* nocapture, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"*, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* nocapture) unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 0, i32 1, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 0, i32 1, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 0, i32 1, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %7, %11
  %13 = select i1 %12, i64 %11, i64 %7
  %14 = tail call i32 @memcmp(i8* %5, i8* %9, i64 %13) #9
  %15 = icmp eq i32 %14, 0
  %16 = ptrtoint i8* %5 to i64
  %17 = ptrtoint i8* %9 to i64
  br i1 %15, label %18, label %23

18:                                               ; preds = %3
  %19 = icmp eq i64 %7, %11
  br i1 %19, label %23, label %20

20:                                               ; preds = %18
  %21 = icmp ult i64 %7, %11
  %22 = select i1 %21, i32 -1, i32 1
  br label %23

23:                                               ; preds = %3, %18, %20
  %24 = phi i32 [ %22, %20 ], [ %14, %3 ], [ 0, %18 ]
  %25 = icmp slt i32 %24, 0
  %26 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2, i64 0, i32 1, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2, i64 0, i32 1, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp ugt i64 %29, %7
  %31 = select i1 %30, i64 %7, i64 %29
  %32 = tail call i32 @memcmp(i8* %27, i8* %5, i64 %31) #9
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %39

34:                                               ; preds = %23
  %35 = icmp eq i64 %29, %7
  br i1 %35, label %39, label %36

36:                                               ; preds = %34
  %37 = icmp ult i64 %29, %7
  %38 = select i1 %37, i32 -1, i32 1
  br label %39

39:                                               ; preds = %23, %34, %36
  %40 = phi i32 [ %38, %36 ], [ %32, %23 ], [ 0, %34 ]
  %41 = icmp slt i32 %40, 0
  br i1 %25, label %68, label %42

42:                                               ; preds = %39
  br i1 %41, label %43, label %94

43:                                               ; preds = %42
  %44 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = bitcast i8** %4 to i64*
  %47 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1 to i8*
  %48 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #9
  %49 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2, i64 0, i32 0
  store i64 %45, i64* %49, align 8
  %50 = bitcast i8** %26 to i64*
  store i64 %16, i64* %50, align 8
  store i64 %7, i64* %28, align 8
  %51 = load i8*, i8** %4, align 8
  %52 = load i64, i64* %6, align 8
  %53 = load i8*, i8** %8, align 8
  %54 = load i64, i64* %10, align 8
  %55 = icmp ugt i64 %52, %54
  %56 = select i1 %55, i64 %54, i64 %52
  %57 = tail call i32 @memcmp(i8* %51, i8* %53, i64 %56) #9
  %58 = icmp eq i32 %57, 0
  %59 = ptrtoint i8* %53 to i64
  br i1 %58, label %60, label %62

60:                                               ; preds = %43
  %61 = icmp ult i64 %52, %54
  br i1 %61, label %64, label %94

62:                                               ; preds = %43
  %63 = icmp slt i32 %57, 0
  br i1 %63, label %64, label %94

64:                                               ; preds = %60, %62
  %65 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %47, i64 24, i1 false) #9
  store i64 %66, i64* %44, align 8
  store i64 %59, i64* %46, align 8
  store i64 %54, i64* %6, align 8
  br label %94

68:                                               ; preds = %39
  %69 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0 to i8*
  br i1 %41, label %72, label %76

72:                                               ; preds = %68
  %73 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %73, i64 24, i1 false) #9
  %74 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2, i64 0, i32 0
  store i64 %70, i64* %74, align 8
  %75 = bitcast i8** %26 to i64*
  store i64 %17, i64* %75, align 8
  store i64 %11, i64* %28, align 8
  br label %94

76:                                               ; preds = %68
  %77 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %77, i64 24, i1 false) #9
  %78 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 0, i32 0
  store i64 %70, i64* %78, align 8
  %79 = bitcast i8** %4 to i64*
  store i64 %17, i64* %79, align 8
  store i64 %11, i64* %6, align 8
  %80 = load i8*, i8** %26, align 8
  %81 = load i64, i64* %28, align 8
  %82 = icmp ugt i64 %81, %11
  %83 = select i1 %82, i64 %11, i64 %81
  %84 = tail call i32 @memcmp(i8* %80, i8* %9, i64 %83) #9
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %76
  %87 = icmp ult i64 %81, %11
  br i1 %87, label %90, label %94

88:                                               ; preds = %76
  %89 = icmp slt i32 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %86, %88
  %91 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %91, i64 24, i1 false) #9
  %92 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2, i64 0, i32 0
  store i64 %70, i64* %92, align 8
  %93 = bitcast i8** %26 to i64*
  store i64 %17, i64* %93, align 8
  store i64 %11, i64* %28, align 8
  br label %94

94:                                               ; preds = %86, %60, %88, %90, %62, %64, %42, %72
  %95 = phi i32 [ 1, %72 ], [ 0, %42 ], [ 2, %64 ], [ 1, %62 ], [ 2, %90 ], [ 1, %88 ], [ 1, %60 ], [ 1, %86 ]
  ret i32 %95
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEjT0_SL_SL_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* nocapture, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"*, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* nocapture, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* nocapture) unnamed_addr #0 {
  %5 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEjT0_SL_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2)
  %6 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %3, i64 0, i32 1, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %3, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2, i64 0, i32 1, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2, i64 0, i32 1, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %9, %13
  %15 = select i1 %14, i64 %13, i64 %9
  %16 = tail call i32 @memcmp(i8* %7, i8* %11, i64 %15) #9
  %17 = icmp eq i32 %16, 0
  %18 = ptrtoint i8* %11 to i64
  br i1 %17, label %19, label %21

19:                                               ; preds = %4
  %20 = icmp ult i64 %9, %13
  br i1 %20, label %23, label %73

21:                                               ; preds = %4
  %22 = icmp slt i32 %16, 0
  br i1 %22, label %23, label %73

23:                                               ; preds = %19, %21
  %24 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = bitcast i8** %10 to i64*
  %27 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2 to i8*
  %28 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #9
  %29 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %3, i64 0, i32 0
  store i64 %25, i64* %29, align 8
  %30 = bitcast i8** %6 to i64*
  store i64 %18, i64* %30, align 8
  store i64 %13, i64* %8, align 8
  %31 = add i32 %5, 1
  %32 = load i8*, i8** %10, align 8
  %33 = load i64, i64* %12, align 8
  %34 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 0, i32 1, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp ugt i64 %33, %37
  %39 = select i1 %38, i64 %37, i64 %33
  %40 = tail call i32 @memcmp(i8* %32, i8* %35, i64 %39) #9
  %41 = icmp eq i32 %40, 0
  %42 = ptrtoint i8* %35 to i64
  br i1 %41, label %43, label %45

43:                                               ; preds = %23
  %44 = icmp ult i64 %33, %37
  br i1 %44, label %47, label %73

45:                                               ; preds = %23
  %46 = icmp slt i32 %40, 0
  br i1 %46, label %47, label %73

47:                                               ; preds = %43, %45
  %48 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = bitcast i8** %34 to i64*
  %51 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %27, i64 24, i1 false) #9
  store i64 %49, i64* %24, align 8
  store i64 %42, i64* %26, align 8
  store i64 %37, i64* %12, align 8
  %52 = add i32 %5, 2
  %53 = load i8*, i8** %34, align 8
  %54 = load i64, i64* %36, align 8
  %55 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 0, i32 1, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 0, i32 1, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = icmp ugt i64 %54, %58
  %60 = select i1 %59, i64 %58, i64 %54
  %61 = tail call i32 @memcmp(i8* %53, i8* %56, i64 %60) #9
  %62 = icmp eq i32 %61, 0
  %63 = ptrtoint i8* %56 to i64
  br i1 %62, label %64, label %66

64:                                               ; preds = %47
  %65 = icmp ult i64 %54, %58
  br i1 %65, label %68, label %73

66:                                               ; preds = %47
  %67 = icmp slt i32 %61, 0
  br i1 %67, label %68, label %73

68:                                               ; preds = %64, %66
  %69 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %51, i64 24, i1 false) #9
  store i64 %70, i64* %48, align 8
  store i64 %63, i64* %50, align 8
  store i64 %58, i64* %36, align 8
  %72 = add i32 %5, 3
  br label %73

73:                                               ; preds = %64, %43, %19, %45, %68, %66, %21
  %74 = phi i32 [ %72, %68 ], [ %52, %66 ], [ %31, %45 ], [ %5, %21 ], [ %5, %19 ], [ %31, %43 ], [ %52, %64 ]
  ret i32 %74
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEjT0_SL_SL_SL_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* nocapture, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"*, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* nocapture, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* nocapture, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* nocapture) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEjT0_SL_SL_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %3)
  %7 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4, i64 0, i32 1, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4, i64 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %3, i64 0, i32 1, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %3, i64 0, i32 1, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %10, %14
  %16 = select i1 %15, i64 %14, i64 %10
  %17 = tail call i32 @memcmp(i8* %8, i8* %12, i64 %16) #9
  %18 = icmp eq i32 %17, 0
  %19 = ptrtoint i8* %12 to i64
  br i1 %18, label %20, label %22

20:                                               ; preds = %5
  %21 = icmp ult i64 %10, %14
  br i1 %21, label %24, label %95

22:                                               ; preds = %5
  %23 = icmp slt i32 %17, 0
  br i1 %23, label %24, label %95

24:                                               ; preds = %20, %22
  %25 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %3, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = bitcast i8** %11 to i64*
  %28 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %3 to i8*
  %29 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #9
  %30 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %4, i64 0, i32 0
  store i64 %26, i64* %30, align 8
  %31 = bitcast i8** %7 to i64*
  store i64 %19, i64* %31, align 8
  store i64 %14, i64* %9, align 8
  %32 = add i32 %6, 1
  %33 = load i8*, i8** %11, align 8
  %34 = load i64, i64* %13, align 8
  %35 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2, i64 0, i32 1, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2, i64 0, i32 1, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %34, %38
  %40 = select i1 %39, i64 %38, i64 %34
  %41 = tail call i32 @memcmp(i8* %33, i8* %36, i64 %40) #9
  %42 = icmp eq i32 %41, 0
  %43 = ptrtoint i8* %36 to i64
  br i1 %42, label %44, label %46

44:                                               ; preds = %24
  %45 = icmp ult i64 %34, %38
  br i1 %45, label %48, label %95

46:                                               ; preds = %24
  %47 = icmp slt i32 %41, 0
  br i1 %47, label %48, label %95

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = bitcast i8** %35 to i64*
  %52 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %28, i64 24, i1 false) #9
  store i64 %50, i64* %25, align 8
  store i64 %43, i64* %27, align 8
  store i64 %38, i64* %13, align 8
  %53 = add i32 %6, 2
  %54 = load i8*, i8** %35, align 8
  %55 = load i64, i64* %37, align 8
  %56 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 0, i32 1, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 0, i32 1, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp ugt i64 %55, %59
  %61 = select i1 %60, i64 %59, i64 %55
  %62 = tail call i32 @memcmp(i8* %54, i8* %57, i64 %61) #9
  %63 = icmp eq i32 %62, 0
  %64 = ptrtoint i8* %57 to i64
  br i1 %63, label %65, label %67

65:                                               ; preds = %48
  %66 = icmp ult i64 %55, %59
  br i1 %66, label %69, label %95

67:                                               ; preds = %48
  %68 = icmp slt i32 %62, 0
  br i1 %68, label %69, label %95

69:                                               ; preds = %65, %67
  %70 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = bitcast i8** %56 to i64*
  %73 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %52, i64 24, i1 false) #9
  store i64 %71, i64* %49, align 8
  store i64 %64, i64* %51, align 8
  store i64 %59, i64* %37, align 8
  %74 = add i32 %6, 3
  %75 = load i8*, i8** %56, align 8
  %76 = load i64, i64* %58, align 8
  %77 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 0, i32 1, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 0, i32 1, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = icmp ugt i64 %76, %80
  %82 = select i1 %81, i64 %80, i64 %76
  %83 = tail call i32 @memcmp(i8* %75, i8* %78, i64 %82) #9
  %84 = icmp eq i32 %83, 0
  %85 = ptrtoint i8* %78 to i64
  br i1 %84, label %86, label %88

86:                                               ; preds = %69
  %87 = icmp ult i64 %76, %80
  br i1 %87, label %90, label %95

88:                                               ; preds = %69
  %89 = icmp slt i32 %83, 0
  br i1 %89, label %90, label %95

90:                                               ; preds = %86, %88
  %91 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %73, i64 24, i1 false) #9
  store i64 %92, i64* %70, align 8
  store i64 %85, i64* %72, align 8
  store i64 %80, i64* %58, align 8
  %94 = add i32 %6, 4
  br label %95

95:                                               ; preds = %86, %65, %44, %20, %46, %88, %90, %67, %22
  %96 = phi i32 [ %94, %90 ], [ %74, %88 ], [ %53, %67 ], [ %32, %46 ], [ %6, %22 ], [ %6, %20 ], [ %32, %44 ], [ %53, %65 ], [ %74, %86 ]
  ret i32 %96
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEbT0_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"*, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"*) unnamed_addr #0 {
  %3 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1 to i64
  %4 = ptrtoint %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = sdiv exact i64 %5, 24
  switch i64 %6, label %48 [
    i64 0, label %112
    i64 1, label %112
    i64 2, label %7
    i64 3, label %33
    i64 4, label %37
    i64 5, label %42
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 -1
  %9 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 -1, i32 1, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 -1, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 0, i32 1, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 0, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %12, %16
  %18 = select i1 %17, i64 %16, i64 %12
  %19 = tail call i32 @memcmp(i8* %10, i8* %14, i64 %18) #9
  %20 = icmp eq i32 %19, 0
  %21 = ptrtoint i8* %14 to i64
  br i1 %20, label %22, label %24

22:                                               ; preds = %7
  %23 = icmp ult i64 %12, %16
  br i1 %23, label %26, label %112

24:                                               ; preds = %7
  %25 = icmp slt i32 %19, 0
  br i1 %25, label %26, label %112

26:                                               ; preds = %22, %24
  %27 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0 to i8*
  %30 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false) #9
  %31 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %8, i64 0, i32 0
  store i64 %28, i64* %31, align 8
  %32 = bitcast i8** %9 to i64*
  store i64 %21, i64* %32, align 8
  store i64 %16, i64* %11, align 8
  br label %112

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 1
  %35 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 -1
  %36 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEjT0_SL_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %34, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %35)
  br label %112

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 1
  %39 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 2
  %40 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 -1
  %41 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEjT0_SL_SL_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %38, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %39, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %40)
  br label %112

42:                                               ; preds = %2
  %43 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 1
  %44 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 2
  %45 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 3
  %46 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %1, i64 -1
  %47 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEjT0_SL_SL_SL_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %43, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %44, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %45, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %46)
  br label %112

48:                                               ; preds = %2
  %49 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 2
  %50 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 1
  %51 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN6zxcvbn11RankedDictsC1ERKNS_6vectorINS3_IN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS8_EEEENS9_ISB_EEEEE3$_0PNS1_12_GLOBAL__N_111MergedEntryEEEjT0_SL_SL_T_"(%"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %50, %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %49)
  %52 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %0, i64 3
  %53 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %52, %1
  br i1 %53, label %112, label %54

54:                                               ; preds = %48, %105
  %55 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %107, %105 ], [ %52, %48 ]
  %56 = phi i32 [ %106, %105 ], [ 0, %48 ]
  %57 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %55, %105 ], [ %49, %48 ]
  %58 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %55, i64 0, i32 1, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %55, i64 0, i32 1, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %57, i64 0, i32 1, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %57, i64 0, i32 1, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = icmp ugt i64 %61, %65
  %67 = select i1 %66, i64 %65, i64 %61
  %68 = tail call i32 @memcmp(i8* %59, i8* %63, i64 %67) #9
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %54
  %71 = icmp ult i64 %61, %65
  br i1 %71, label %74, label %105

72:                                               ; preds = %54
  %73 = icmp slt i32 %68, 0
  br i1 %73, label %74, label %105

74:                                               ; preds = %70, %72
  %75 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %55, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  br label %77

77:                                               ; preds = %95, %74
  %78 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %55, %74 ], [ %79, %95 ]
  %79 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %57, %74 ], [ %84, %95 ]
  %80 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %78 to i8*
  %81 = bitcast %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 24, i1 false)
  %82 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %79, %0
  br i1 %82, label %98, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %79, i64 -1
  %85 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %79, i64 -1, i32 1, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %79, i64 -1, i32 1, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = icmp ugt i64 %61, %88
  %90 = select i1 %89, i64 %88, i64 %61
  %91 = tail call i32 @memcmp(i8* %59, i8* %86, i64 %90) #9
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %83
  %94 = icmp ult i64 %61, %88
  br i1 %94, label %95, label %98

95:                                               ; preds = %93, %83
  %96 = phi i32 [ %91, %83 ], [ -1, %93 ]
  %97 = icmp slt i32 %96, 0
  br i1 %97, label %77, label %98

98:                                               ; preds = %93, %77, %95
  %99 = phi %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* [ %79, %93 ], [ %0, %77 ], [ %79, %95 ]
  %100 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %99, i64 0, i32 0
  store i64 %76, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %99, i64 0, i32 1, i32 0
  store i8* %59, i8** %101, align 8
  %102 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %99, i64 0, i32 1, i32 1
  store i64 %61, i64* %102, align 8
  %103 = add i32 %56, 1
  %104 = icmp eq i32 %103, 8
  br i1 %104, label %109, label %105

105:                                              ; preds = %98, %70, %72
  %106 = phi i32 [ %103, %98 ], [ %56, %72 ], [ %56, %70 ]
  %107 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %55, i64 1
  %108 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %107, %1
  br i1 %108, label %112, label %54

109:                                              ; preds = %98
  %110 = getelementptr inbounds %"struct.zxcvbn::(anonymous namespace)::MergedEntry", %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %55, i64 1
  %111 = icmp eq %"struct.zxcvbn::(anonymous namespace)::MergedEntry"* %110, %1
  br label %112

112:                                              ; preds = %105, %109, %48, %22, %24, %26, %2, %2, %42, %37, %33
  %113 = phi i1 [ true, %42 ], [ true, %37 ], [ true, %33 ], [ true, %2 ], [ true, %2 ], [ true, %26 ], [ true, %24 ], [ true, %22 ], [ true, %48 ], [ %111, %109 ], [ true, %105 ]
  ret i1 %113
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !11}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !11}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !11}
!30 = !{i8 0, i8 2}
