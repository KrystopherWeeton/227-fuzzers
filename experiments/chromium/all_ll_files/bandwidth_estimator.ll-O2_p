; ModuleID = '../../third_party/webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c'
source_filename = "../../third_party/webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.BwEstimatorstr = type { i32, i32, i32, i32, float, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, float, i16, %struct.IsacBandwidthInfo }
%struct.IsacBandwidthInfo = type { i32, i32, i32, i16, i16 }
%struct.RateModel = type { i32, i32, i32, i32, double }

@kQRateTableWb = internal unnamed_addr constant [12 x float] [float 1.000000e+04, float 0x40C5B5A660000000, float 0x40C8218CC0000000, float 0x40CAD28CC0000000, float 0x40CDD06660000000, float 0x40D091D340000000, float 0x40D26AF340000000, float 0x40D478D340000000, float 0x40D6C159A0000000, float 0x40D94B1340000000, float 2.878900e+04, float 3.200000e+04], align 16
@kQRateTableSwb = internal unnamed_addr constant [24 x float] [float 1.000000e+04, float 0x40C5B5A660000000, float 0x40C8218CC0000000, float 0x40CAD28CC0000000, float 0x40CDD06660000000, float 0x40D091D340000000, float 0x40D26AF340000000, float 0x40D478D340000000, float 0x40D69C4660000000, float 0x40D8BFB9A0000000, float 0x40DAE32CC0000000, float 2.972250e+04, float 0x40DF2A1340000000, float 0x40E0A6C340000000, float 0x40E1B87CC0000000, float 0x40E2CA3660000000, float 0x40E3DBECC0000000, float 0x40E4EDA660000000, float 4.505100e+04, float 0x40E71119A0000000, float 0x40E822D340000000, float 0x40E9348CC0000000, float 0x40EA464660000000, float 5.600000e+04], align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @WebRtcIsac_InitBandwidthEstimator(%struct.BwEstimatorstr*, i32, i32) local_unnamed_addr #0 {
  switch i32 %1, label %8 [
    i32 16, label %5
    i32 32, label %4
  ]

4:                                                ; preds = %3
  br label %5

5:                                                ; preds = %3, %4
  %6 = phi float [ 5.600000e+04, %4 ], [ 2.000000e+04, %3 ]
  %7 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 18
  store float %6, float* %7, align 4
  br label %8

8:                                                ; preds = %5, %3
  switch i32 %2, label %23 [
    i32 16, label %10
    i32 32, label %9
  ]

9:                                                ; preds = %8
  br label %10

10:                                               ; preds = %8, %9
  %11 = phi i32 [ 30, %9 ], [ 60, %8 ]
  %12 = phi float [ 0x3EF00CB4C0000000, %9 ], [ 0x3F05414260000000, %8 ]
  %13 = phi i32 [ 56000, %9 ], [ 20000, %8 ]
  %14 = phi float [ 5.600000e+04, %9 ], [ 2.000000e+04, %8 ]
  %15 = phi float [ 0x40EFE6AAA0000000, %9 ], [ 0x40D816AAA0000000, %8 ]
  %16 = phi float [ 0x40C23AAAA0000000, %9 ], [ 0x40B23AAAA0000000, %8 ]
  %17 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 0
  store i32 %11, i32* %17, align 4
  %18 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 9
  store float %12, float* %18, align 4
  %19 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 8
  store i32 %13, i32* %19, align 4
  %20 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 11
  store float %14, float* %20, align 4
  %21 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 10
  store float %15, float* %21, align 4
  %22 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 17
  store float %16, float* %22, align 4
  br label %23

23:                                               ; preds = %10, %8
  %24 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 1
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 3
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 2
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 4
  store float 1.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 5
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 6
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 7
  store i32 -9, i32* %30, align 4
  %31 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 12
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> <float 1.000000e+01, float 0.000000e+00, float 5.000000e+00, float 1.000000e+01>, <4 x float>* %32, align 4
  %33 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 16
  store float 1.000000e+01, float* %33, align 4
  %34 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 20
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 19
  store float 1.000000e+01, float* %35, align 4
  %36 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 21
  %37 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 26
  %38 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 31
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 32
  store i16 0, i16* %39, align 4
  %40 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 33, i32 0
  store i32 0, i32* %40, align 4
  %41 = bitcast i32* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 16, i1 false)
  %42 = bitcast i32* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 18, i1 false)
  ret i32 0
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden signext i16 @WebRtcIsac_UpdateBandwidthEstimator(%struct.BwEstimatorstr*, i16 zeroext, i32, i32, i32, i64) local_unnamed_addr #1 {
  %7 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, %2
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 17
  %12 = load float, float* %11, align 4
  %13 = sitofp i32 %2 to float
  br label %18

14:                                               ; preds = %6
  %15 = sitofp i32 %2 to float
  %16 = fdiv float 2.800000e+05, %15
  %17 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 17
  store float %16, float* %17, align 4
  br label %18

18:                                               ; preds = %10, %14
  %19 = phi float [ %13, %10 ], [ %15, %14 ]
  %20 = phi float [ %12, %10 ], [ %16, %14 ]
  %21 = uitofp i64 %5 to float
  %22 = fmul float %21, 8.000000e+00
  %23 = fmul float %22, 1.000000e+03
  %24 = fdiv float %23, %19
  %25 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 17
  %26 = fadd float %24, %20
  %27 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = icmp ugt i32 %28, %4
  br i1 %29, label %30, label %38

30:                                               ; preds = %18
  store i32 %4, i32* %27, align 4
  %31 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 5
  store i32 %4, i32* %31, align 4
  %32 = add i32 %4, 48000
  %33 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 6
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 20
  store i32 0, i32* %34, align 4
  store i32 %2, i32* %7, align 4
  %35 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 4
  store float %26, float* %35, align 4
  %36 = zext i16 %1 to i32
  %37 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 1
  store i32 %36, i32* %37, align 4
  br label %325

38:                                               ; preds = %18
  %39 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 20
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %39, align 4
  %42 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 7
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %276

45:                                               ; preds = %38
  %46 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 26
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = add nsw i32 %47, -1
  store i32 %50, i32* %46, align 4
  br label %51

51:                                               ; preds = %49, %45
  %52 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 32
  %53 = load i16, i16* %52, align 4
  %54 = icmp sgt i16 %53, 0
  %55 = zext i1 %54 to i16
  %56 = sub i16 %53, %55
  store i16 %56, i16* %52, align 4
  %57 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = sub i32 %3, %58
  %60 = uitofp i32 %59 to float
  %61 = shl nsw i32 %2, 4
  %62 = shl nsw i32 %2, 5
  %63 = sitofp i32 %62 to float
  %64 = fcmp ugt float %60, %63
  br i1 %64, label %112, label %65

65:                                               ; preds = %51
  %66 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 5
  %67 = load i32, i32* %66, align 4
  %68 = sub i32 %4, %67
  %69 = uitofp i32 %68 to float
  %70 = fmul float %69, 1.000000e+03
  %71 = fdiv float %70, 1.600000e+04
  %72 = fcmp ogt float %71, 3.000000e+03
  br i1 %72, label %73, label %116

73:                                               ; preds = %65
  %74 = fdiv float %71, %19
  %75 = fptosi float %74 to i32
  %76 = sitofp i32 %41 to float
  %77 = sitofp i32 %75 to float
  %78 = fdiv float %76, %77
  %79 = fpext float %78 to double
  %80 = fcmp ogt double %79, 9.000000e-01
  br i1 %80, label %81, label %109

81:                                               ; preds = %73
  %82 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 6
  %83 = load i32, i32* %82, align 4
  %84 = sub i32 %4, %83
  %85 = uitofp i32 %84 to float
  %86 = fmul float %85, 1.000000e+03
  %87 = fdiv float %86, 1.600000e+04
  %88 = fpext float %87 to double
  %89 = tail call double @pow(double 9.999500e-01, double %88) #8
  %90 = fptrunc double %89 to float
  %91 = fcmp une float %90, 0.000000e+00
  %92 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 9
  br i1 %91, label %93, label %106

93:                                               ; preds = %81
  %94 = load float, float* %92, align 4
  %95 = fdiv float %94, %90
  store float %95, float* %92, align 4
  %96 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 24
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %107, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 22
  %101 = load i32, i32* %100, align 4
  %102 = icmp ne i32 %101, 0
  %103 = fcmp ogt float %95, 0x3F114D2F60000000
  %104 = and i1 %103, %102
  br i1 %104, label %105, label %107

105:                                              ; preds = %99
  store float 0x3F114D2F60000000, float* %92, align 4
  br label %107

106:                                              ; preds = %81
  store float 0x3F05414260000000, float* %92, align 4
  br label %107

107:                                              ; preds = %99, %93, %105, %106
  store i32 %4, i32* %82, align 4
  %108 = load i32, i32* %7, align 4
  br label %116

109:                                              ; preds = %73
  %110 = add i32 %4, 48000
  %111 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 6
  store i32 %110, i32* %111, align 4
  store i32 %4, i32* %66, align 4
  store i32 0, i32* %39, align 4
  br label %116

112:                                              ; preds = %51
  %113 = add i32 %4, 48000
  %114 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 6
  store i32 %113, i32* %114, align 4
  %115 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 5
  store i32 %4, i32* %115, align 4
  store i32 0, i32* %39, align 4
  br label %116

116:                                              ; preds = %65, %109, %107, %112
  %117 = phi i32 [ %8, %65 ], [ %8, %109 ], [ %108, %107 ], [ %8, %112 ]
  %118 = icmp eq i32 %117, %2
  br i1 %118, label %127, label %119

119:                                              ; preds = %116
  store i32 10, i32* %42, align 4
  %120 = fdiv float 2.800000e+05, %19
  store float %120, float* %25, align 4
  %121 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 8
  %122 = load i32, i32* %121, align 4
  %123 = sitofp i32 %122 to float
  %124 = fadd float %120, %123
  %125 = fdiv float 1.000000e+00, %124
  %126 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 9
  store float %125, float* %126, align 4
  br label %127

127:                                              ; preds = %116, %119
  %128 = load i32, i32* %27, align 4
  %129 = sub i32 %4, %128
  %130 = uitofp i32 %129 to float
  %131 = icmp eq i32 %59, 0
  %132 = sitofp i32 %61 to float
  %133 = select i1 %131, float %132, float %60
  %134 = fsub float %130, %133
  %135 = fcmp ogt float %134, 0.000000e+00
  br i1 %135, label %136, label %139

136:                                              ; preds = %127
  %137 = load i16, i16* %52, align 4
  %138 = icmp eq i16 %137, 0
  br i1 %138, label %142, label %139

139:                                              ; preds = %127, %136
  %140 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 30
  store i16 0, i16* %140, align 4
  %141 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 31
  store float 0.000000e+00, float* %141, align 4
  br label %159

142:                                              ; preds = %136
  %143 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 30
  %144 = load i16, i16* %143, align 4
  %145 = add i16 %144, 1
  store i16 %145, i16* %143, align 4
  %146 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 31
  %147 = load float, float* %146, align 4
  %148 = fadd float %134, %147
  store float %148, float* %146, align 4
  %149 = fmul float %148, 6.250000e-02
  %150 = icmp ugt i16 %145, 50
  br i1 %150, label %151, label %159

151:                                              ; preds = %142
  %152 = uitofp i16 %145 to float
  %153 = fdiv float %149, %152
  %154 = fadd float %153, %19
  %155 = fdiv float %19, %154
  %156 = fdiv float %149, 3.000000e+01
  %157 = fptosi float %156 to i16
  store i16 %157, i16* %52, align 4
  %158 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 25
  store i32 %4, i32* %158, align 4
  br label %159

159:                                              ; preds = %139, %151, %142
  %160 = phi float [ %155, %151 ], [ 1.000000e+00, %142 ], [ 1.000000e+00, %139 ]
  %161 = phi i32 [ 1, %151 ], [ 0, %142 ], [ 0, %139 ]
  %162 = zext i16 %1 to i32
  %163 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = add nsw i32 %164, 1
  %166 = icmp eq i32 %165, %162
  br i1 %166, label %167, label %281

167:                                              ; preds = %159
  %168 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 24
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %177, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 22
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 0
  %175 = fcmp ogt float %130, %132
  %176 = and i1 %175, %174
  br i1 %176, label %179, label %193

177:                                              ; preds = %167
  %178 = fcmp ogt float %130, %132
  br i1 %178, label %179, label %193

179:                                              ; preds = %171, %177
  %180 = fcmp ogt float %134, 8.000000e+03
  br i1 %180, label %181, label %186

181:                                              ; preds = %179
  %182 = load i32, i32* %46, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %186

184:                                              ; preds = %181
  store i32 55, i32* %46, align 4
  %185 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 25
  store i32 %4, i32* %185, align 4
  br label %193

186:                                              ; preds = %181, %179
  %187 = fcmp ogt float %134, 5.120000e+03
  br i1 %187, label %188, label %193

188:                                              ; preds = %186
  %189 = load i32, i32* %46, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %193

191:                                              ; preds = %188
  store i32 44, i32* %46, align 4
  %192 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 25
  store i32 %4, i32* %192, align 4
  br label %193

193:                                              ; preds = %171, %188, %177, %186, %191, %184
  %194 = phi float [ %160, %171 ], [ %160, %188 ], [ 0x3FE99999A0000000, %191 ], [ %160, %186 ], [ 0x3FE6666660000000, %184 ], [ %160, %177 ]
  %195 = phi i32 [ %161, %171 ], [ %161, %188 ], [ 1, %191 ], [ %161, %186 ], [ 1, %184 ], [ %161, %177 ]
  %196 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 4
  %197 = load float, float* %196, align 4
  %198 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 10
  %199 = load float, float* %198, align 4
  %200 = fcmp ogt float %197, %199
  %201 = fcmp ogt float %26, %199
  %202 = and i1 %200, %201
  br i1 %202, label %203, label %281

203:                                              ; preds = %193
  %204 = load i32, i32* %46, align 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %281

206:                                              ; preds = %203
  %207 = load i32, i32* %42, align 4
  %208 = add nsw i32 %207, 1
  store i32 %208, i32* %42, align 4
  %209 = icmp sgt i32 %207, 99
  br i1 %209, label %213, label %210

210:                                              ; preds = %206
  %211 = sitofp i32 %208 to float
  %212 = fdiv float 1.000000e+00, %211
  br label %213

213:                                              ; preds = %206, %210
  %214 = phi float [ %212, %210 ], [ 0x3F847AE140000000, %206 ]
  %215 = fadd float %132, 4.000000e+02
  %216 = fcmp olt float %215, %130
  %217 = select i1 %216, float %215, float %130
  %218 = fadd float %132, -1.600000e+02
  %219 = fcmp olt float %217, %218
  br i1 %219, label %220, label %224

220:                                              ; preds = %213
  %221 = fmul float %19, 1.600000e+04
  %222 = fdiv float %221, 1.000000e+03
  %223 = fadd float %222, -1.600000e+02
  br label %224

224:                                              ; preds = %220, %213
  %225 = phi float [ %223, %220 ], [ %217, %213 ]
  %226 = add i64 %5, 35
  %227 = uitofp i64 %226 to float
  %228 = fmul float %227, 8.000000e+00
  %229 = load float, float* %25, align 4
  %230 = insertelement <2 x float> undef, float %228, i32 0
  %231 = insertelement <2 x float> %230, float %229, i32 1
  %232 = fmul <2 x float> %231, <float 1.600000e+04, float undef>
  %233 = fadd <2 x float> %231, <float undef, float 5.600000e+04>
  %234 = shufflevector <2 x float> %232, <2 x float> %233, <2 x i32> <i32 0, i32 3>
  %235 = insertelement <2 x float> undef, float %225, i32 0
  %236 = insertelement <2 x float> %235, float 1.000000e+00, i32 1
  %237 = fdiv <2 x float> %236, %234
  %238 = extractelement <2 x float> %237, i32 0
  %239 = extractelement <2 x float> %237, i32 1
  %240 = fcmp olt float %238, %239
  %241 = select i1 %240, float %239, float %238
  %242 = fmul float %214, %241
  %243 = fsub float 1.000000e+00, %214
  %244 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 9
  %245 = load float, float* %244, align 4
  %246 = fmul float %243, %245
  %247 = fadd float %246, %242
  store float %247, float* %244, align 4
  %248 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 5
  store i32 %4, i32* %248, align 4
  %249 = add i32 %4, 48000
  %250 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 6
  store i32 %249, i32* %250, align 4
  store i32 0, i32* %39, align 4
  %251 = insertelement <2 x float> %235, float %228, i32 1
  %252 = fmul <2 x float> %251, <float 1.000000e+03, float 1.000000e+03>
  %253 = insertelement <2 x float> <float 1.600000e+04, float undef>, float %199, i32 1
  %254 = fdiv <2 x float> %252, %253
  %255 = extractelement <2 x float> %254, i32 0
  %256 = extractelement <2 x float> %254, i32 1
  %257 = fsub float %255, %256
  %258 = tail call float @llvm.fabs.f32(float %257)
  %259 = fmul float %214, %258
  %260 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 12
  %261 = load float, float* %260, align 4
  %262 = fmul float %243, %261
  %263 = fadd float %259, %262
  %264 = fcmp ogt float %263, 1.000000e+01
  %265 = select i1 %264, float 1.000000e+01, float %263
  store float %265, float* %260, align 4
  %266 = fmul float %258, 0x3FA99999A0000000
  %267 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 14
  %268 = load float, float* %267, align 4
  %269 = fmul float %268, 0x3FEE666660000000
  %270 = fadd float %266, %269
  store float %270, float* %267, align 4
  %271 = fmul float %257, 0x3FA99999A0000000
  %272 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 13
  %273 = load float, float* %272, align 4
  %274 = fmul float %273, 0x3FEE666660000000
  %275 = fadd float %271, %274
  store float %275, float* %272, align 4
  br label %281

276:                                              ; preds = %38
  %277 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 5
  store i32 %4, i32* %277, align 4
  %278 = add i32 %4, 48000
  %279 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 6
  store i32 %278, i32* %279, align 4
  store i32 0, i32* %39, align 4
  %280 = add nsw i32 %43, 1
  store i32 %280, i32* %42, align 4
  br label %281

281:                                              ; preds = %203, %159, %224, %193, %276
  %282 = phi float [ %194, %203 ], [ %194, %224 ], [ %194, %193 ], [ %160, %159 ], [ 1.000000e+00, %276 ]
  %283 = phi i32 [ %195, %203 ], [ %195, %224 ], [ %195, %193 ], [ %161, %159 ], [ 0, %276 ]
  %284 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 9
  %285 = load float, float* %284, align 4
  %286 = load float, float* %25, align 4
  %287 = fadd float %286, 1.000000e+04
  %288 = fdiv float 1.000000e+00, %287
  %289 = fcmp ogt float %285, %288
  %290 = select i1 %289, float %288, float %285
  %291 = fadd float %286, 5.600000e+04
  %292 = fdiv float 1.000000e+00, %291
  %293 = fcmp olt float %290, %292
  %294 = select i1 %293, float %292, float %290
  %295 = or i1 %289, %293
  br i1 %295, label %296, label %297

296:                                              ; preds = %281
  store float %294, float* %284, align 4
  br label %297

297:                                              ; preds = %281, %296
  store i32 %2, i32* %7, align 4
  %298 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 4
  store float %26, float* %298, align 4
  %299 = zext i16 %1 to i32
  %300 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 1
  store i32 %299, i32* %300, align 4
  %301 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 12
  %302 = load float, float* %301, align 4
  %303 = fmul float %302, 3.000000e+00
  %304 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 15
  store float %303, float* %304, align 4
  store i32 %4, i32* %27, align 4
  %305 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 2
  store i32 %3, i32* %305, align 4
  %306 = fdiv float 1.000000e+00, %294
  %307 = fsub float %306, %286
  %308 = fptosi float %307 to i32
  %309 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 8
  store i32 %308, i32* %309, align 4
  %310 = icmp eq i32 %283, 0
  br i1 %310, label %325, label %311

311:                                              ; preds = %297
  %312 = sitofp i32 %308 to float
  %313 = fmul float %282, %312
  %314 = fptosi float %313 to i32
  %315 = icmp sgt i32 %314, 10000
  %316 = select i1 %315, i32 %314, i32 10000
  store i32 %316, i32* %309, align 4
  %317 = sitofp i32 %316 to float
  %318 = fadd float %286, %317
  %319 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 10
  store float %318, float* %319, align 4
  %320 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 11
  store float %317, float* %320, align 4
  %321 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 13
  store float 0.000000e+00, float* %321, align 4
  %322 = fdiv float 1.000000e+00, %318
  store float %322, float* %284, align 4
  store i32 1, i32* %42, align 4
  %323 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 31
  store float 0.000000e+00, float* %323, align 4
  %324 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 30
  store i16 0, i16* %324, align 4
  br label %325

325:                                              ; preds = %311, %297, %30
  ret i16 0
}

; Function Attrs: nofree nounwind
declare double @pow(double, double) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i16 @WebRtcIsac_UpdateUplinkBwImpl(%struct.BwEstimatorstr* nocapture, i16 signext, i32) local_unnamed_addr #3 {
  %4 = icmp ugt i16 %1, 23
  br i1 %4, label %49, label %5

5:                                                ; preds = %3
  %6 = icmp eq i32 %2, 16
  br i1 %6, label %7, label %24

7:                                                ; preds = %5
  %8 = icmp sgt i16 %1, 11
  %9 = add nsw i16 %1, -12
  %10 = select i1 %8, float 2.500000e+00, float 5.000000e-01
  %11 = select i1 %8, i16 %9, i16 %1
  %12 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 19
  %13 = load float, float* %12, align 4
  %14 = fmul float %13, 0x3FECCCCCC0000000
  %15 = fadd float %14, %10
  store float %15, float* %12, align 4
  %16 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 18
  %17 = load float, float* %16, align 4
  %18 = fmul float %17, 0x3FECCCCCC0000000
  %19 = sext i16 %11 to i64
  %20 = getelementptr inbounds [12 x float], [12 x float]* @kQRateTableWb, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = fmul float %21, 0x3FB99999A0000000
  %23 = fadd float %18, %22
  store float %23, float* %16, align 4
  br label %33

24:                                               ; preds = %5
  %25 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 18
  %26 = load float, float* %25, align 4
  %27 = fmul float %26, 0x3FECCCCCC0000000
  %28 = sext i16 %1 to i64
  %29 = getelementptr inbounds [24 x float], [24 x float]* @kQRateTableSwb, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fmul float %30, 0x3FB99999A0000000
  %32 = fadd float %27, %31
  store float %32, float* %25, align 4
  br label %33

33:                                               ; preds = %24, %7
  %34 = phi float [ %32, %24 ], [ %23, %7 ]
  %35 = fcmp ogt float %34, 2.800000e+04
  %36 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 24
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %35, label %39, label %46

39:                                               ; preds = %33
  br i1 %38, label %40, label %49

40:                                               ; preds = %39
  %41 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 23
  %42 = load i32, i32* %41, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %41, align 4
  %44 = icmp sgt i32 %42, 64
  br i1 %44, label %45, label %49

45:                                               ; preds = %40
  store i32 1, i32* %36, align 4
  br label %49

46:                                               ; preds = %33
  br i1 %38, label %47, label %49

47:                                               ; preds = %46
  %48 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 23
  store i32 0, i32* %48, align 4
  br label %49

49:                                               ; preds = %39, %45, %40, %47, %46, %3
  %50 = phi i16 [ -6240, %3 ], [ 0, %46 ], [ 0, %47 ], [ 0, %40 ], [ 0, %45 ], [ 0, %39 ]
  ret i16 %50
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i16 @WebRtcIsac_UpdateUplinkJitter(%struct.BwEstimatorstr* nocapture, i32) local_unnamed_addr #3 {
  %3 = icmp ugt i32 %1, 23
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = icmp eq i32 %1, 0
  %6 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 19
  %7 = load float, float* %6, align 4
  %8 = fmul float %7, 0x3FECCCCCC0000000
  %9 = select i1 %5, float 5.000000e-01, float 2.500000e+00
  %10 = fadd float %9, %8
  store float %10, float* %6, align 4
  br label %11

11:                                               ; preds = %2, %4
  %12 = phi i16 [ 0, %4 ], [ -6240, %2 ]
  ret i16 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcIsac_GetDownlinkBwJitIndexImpl(%struct.BwEstimatorstr* nocapture, i16* nocapture, i16* nocapture, i32) local_unnamed_addr #3 {
  %5 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 33, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 33, i32 3
  %10 = load i16, i16* %9, align 4
  store i16 %10, i16* %1, align 2
  %11 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 33, i32 4
  %12 = load i16, i16* %11, align 2
  store i16 %12, i16* %2, align 2
  br label %122

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 15
  %15 = load float, float* %14, align 4
  %16 = fptosi float %15 to i32
  %17 = icmp slt i32 %16, 25
  %18 = select i1 %17, i32 %16, i32 25
  %19 = icmp sgt i32 %18, 5
  %20 = select i1 %19, i32 %18, i32 5
  %21 = sitofp i32 %20 to float
  %22 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 16
  %23 = load float, float* %22, align 4
  %24 = fmul float %23, 0x3FECCCCCC0000000
  %25 = fadd float %24, 2.500000e+00
  %26 = fsub float %25, %21
  %27 = fsub float %21, %24
  %28 = fadd float %27, -5.000000e-01
  %29 = fcmp ogt float %26, %28
  %30 = xor i1 %29, true
  %31 = zext i1 %30 to i16
  %32 = select i1 %29, float 5.000000e-01, float 2.500000e+00
  store i16 %31, i16* %2, align 2
  %33 = load float, float* %22, align 4
  %34 = fmul float %33, 0x3FECCCCCC0000000
  %35 = fadd float %34, %32
  store float %35, float* %22, align 4
  %36 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 13
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 14
  %39 = load float, float* %38, align 4
  %40 = fdiv float %37, %39
  %41 = fmul float %40, 0x3FC3333340000000
  %42 = fmul float %40, %41
  %43 = fadd float %42, 0x3FC3333340000000
  %44 = fmul float %40, %43
  %45 = fsub float 1.000000e+00, %44
  %46 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 8
  %47 = load i32, i32* %46, align 4
  %48 = sitofp i32 %47 to float
  %49 = fmul float %45, %48
  %50 = fptosi float %49 to i32
  %51 = icmp slt i32 %50, 56000
  %52 = select i1 %51, i32 %50, i32 56000
  %53 = icmp sgt i32 %52, 10000
  %54 = select i1 %53, i32 %52, i32 10000
  %55 = sitofp i32 %54 to float
  %56 = icmp eq i32 %3, 16
  %57 = select i1 %56, float* getelementptr inbounds ([12 x float], [12 x float]* @kQRateTableWb, i64 0, i64 0), float* getelementptr inbounds ([24 x float], [24 x float]* @kQRateTableSwb, i64 0, i64 0)
  %58 = select i1 %56, i16 11, i16 23
  %59 = zext i16 %58 to i32
  br label %60

60:                                               ; preds = %13, %60
  %61 = phi i32 [ 0, %13 ], [ %75, %60 ]
  %62 = phi i32 [ %59, %13 ], [ %74, %60 ]
  %63 = phi i16 [ %58, %13 ], [ %73, %60 ]
  %64 = phi i16 [ 0, %13 ], [ %72, %60 ]
  %65 = add nsw i32 %62, %61
  %66 = lshr i32 %65, 1
  %67 = trunc i32 %66 to i16
  %68 = sext i16 %67 to i64
  %69 = getelementptr inbounds float, float* %57, i64 %68
  %70 = load float, float* %69, align 4
  %71 = fcmp olt float %70, %55
  %72 = select i1 %71, i16 %67, i16 %64
  %73 = select i1 %71, i16 %63, i16 %67
  %74 = sext i16 %73 to i32
  %75 = sext i16 %72 to i32
  %76 = add nsw i32 %75, 1
  %77 = icmp slt i32 %76, %74
  br i1 %77, label %60, label %78

78:                                               ; preds = %60
  %79 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 11
  %80 = load float, float* %79, align 4
  %81 = fmul float %80, 0x3FECCCCCC0000000
  %82 = fsub float %81, %55
  %83 = sext i16 %72 to i64
  %84 = getelementptr inbounds float, float* %57, i64 %83
  %85 = load float, float* %84, align 4
  %86 = sext i16 %73 to i64
  %87 = getelementptr inbounds float, float* %57, i64 %86
  %88 = load float, float* %87, align 4
  %89 = insertelement <2 x float> undef, float %85, i32 0
  %90 = insertelement <2 x float> %89, float %88, i32 1
  %91 = fmul <2 x float> %90, <float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %92 = insertelement <2 x float> undef, float %82, i32 0
  %93 = shufflevector <2 x float> %92, <2 x float> undef, <2 x i32> zeroinitializer
  %94 = fadd <2 x float> %91, %93
  %95 = fcmp ogt <2 x float> %94, zeroinitializer
  %96 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %94
  %97 = select <2 x i1> %95, <2 x float> %94, <2 x float> %96
  %98 = extractelement <2 x float> %97, i32 0
  %99 = extractelement <2 x float> %97, i32 1
  %100 = fcmp olt float %98, %99
  %101 = select i1 %100, i16 %72, i16 %73
  store i16 %101, i16* %1, align 2
  %102 = load float, float* %79, align 4
  %103 = fmul float %102, 0x3FECCCCCC0000000
  %104 = sext i16 %101 to i64
  %105 = getelementptr inbounds float, float* %57, i64 %104
  %106 = load float, float* %105, align 4
  %107 = fmul float %106, 0x3FB99999A0000000
  %108 = fadd float %103, %107
  store float %108, float* %79, align 4
  %109 = load i16, i16* %2, align 2
  %110 = mul i16 %109, 12
  %111 = select i1 %56, i16 %110, i16 0
  %112 = load i16, i16* %1, align 2
  %113 = add i16 %111, %112
  store i16 %113, i16* %1, align 2
  %114 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 10
  %115 = load float, float* %114, align 4
  %116 = fmul float %115, 0x3FECCCCCC0000000
  %117 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 17
  %118 = load float, float* %117, align 4
  %119 = fadd float %118, %55
  %120 = fmul float %119, 0x3FB99999A0000000
  %121 = fadd float %116, %120
  store float %121, float* %114, align 4
  br label %122

122:                                              ; preds = %78, %8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @WebRtcIsac_GetDownlinkMaxDelay(%struct.BwEstimatorstr* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 15
  %3 = load float, float* %2, align 4
  %4 = fptosi float %3 to i32
  %5 = icmp slt i32 %4, 5
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = icmp slt i32 %4, 25
  %8 = select i1 %7, i32 %4, i32 25
  ret i32 %8

9:                                                ; preds = %1
  ret i32 5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @WebRtcIsac_GetDownlinkBandwidth(%struct.BwEstimatorstr* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 13
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 14
  %5 = load float, float* %4, align 4
  %6 = fdiv float %3, %5
  %7 = fmul float %6, 0x3FC3333340000000
  %8 = fmul float %6, %7
  %9 = fadd float %8, 0x3FC3333340000000
  %10 = fmul float %6, %9
  %11 = fsub float 1.000000e+00, %10
  %12 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 8
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  %15 = fmul float %11, %14
  %16 = fptosi float %15 to i32
  %17 = icmp slt i32 %16, 10000
  br i1 %17, label %21, label %18

18:                                               ; preds = %1
  %19 = icmp slt i32 %16, 56000
  %20 = select i1 %19, i32 %16, i32 56000
  ret i32 %20

21:                                               ; preds = %1
  ret i32 10000
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @WebRtcIsac_GetUplinkBandwidth(%struct.BwEstimatorstr* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 33, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 33, i32 1
  %7 = load i32, i32* %6, align 4
  br label %16

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 18
  %10 = load float, float* %9, align 4
  %11 = fptosi float %10 to i32
  %12 = icmp slt i32 %11, 56000
  %13 = select i1 %12, i32 %11, i32 56000
  %14 = icmp sgt i32 %13, 10000
  %15 = select i1 %14, i32 %13, i32 10000
  br label %16

16:                                               ; preds = %8, %5
  %17 = phi i32 [ %7, %5 ], [ %15, %8 ]
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @WebRtcIsac_GetUplinkMaxDelay(%struct.BwEstimatorstr* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 33, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 33, i32 2
  %7 = load i32, i32* %6, align 4
  br label %16

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.BwEstimatorstr, %struct.BwEstimatorstr* %0, i64 0, i32 19
  %10 = load float, float* %9, align 4
  %11 = fptosi float %10 to i32
  %12 = icmp slt i32 %11, 25
  %13 = select i1 %12, i32 %11, i32 25
  %14 = icmp sgt i32 %13, 5
  %15 = select i1 %14, i32 %13, i32 5
  br label %16

16:                                               ; preds = %8, %5
  %17 = phi i32 [ %7, %5 ], [ %15, %8 ]
  ret i32 %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @WebRtcIsac_GetMinBytes(%struct.RateModel* nocapture, i32, i32, double, double, i32) local_unnamed_addr #3 {
  %7 = getelementptr inbounds %struct.RateModel, %struct.RateModel* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = add nsw i32 %8, -1
  store i32 %11, i32* %7, align 4
  %12 = icmp slt i32 %8, 6
  br i1 %12, label %13, label %45

13:                                               ; preds = %10
  %14 = icmp eq i32 %5, 8
  %15 = select i1 %14, double 2.000000e+04, double 5.600000e+04
  br label %45

16:                                               ; preds = %6
  %17 = getelementptr inbounds %struct.RateModel, %struct.RateModel* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %45, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.RateModel, %struct.RateModel* %0, i64 0, i32 4
  %22 = load double, double* %21, align 8
  %23 = fmul double %4, 0x3FE5555555555556
  %24 = fcmp olt double %22, %23
  br i1 %24, label %25, label %32

25:                                               ; preds = %20
  %26 = fmul double %4, 1.600000e+01
  %27 = mul nsw i32 %2, 3
  %28 = sitofp i32 %27 to double
  %29 = fdiv double %26, %28
  %30 = fadd double %29, 1.000000e+00
  %31 = fmul double %30, %3
  br label %42

32:                                               ; preds = %20
  %33 = fsub double %4, %22
  %34 = fmul double %33, 1.600000e+01
  %35 = sitofp i32 %2 to double
  %36 = fdiv double %34, %35
  %37 = fadd double %36, 1.000000e+00
  %38 = fmul double %37, %3
  %39 = fmul double %3, 1.040000e+00
  %40 = fcmp olt double %38, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %32
  br label %42

42:                                               ; preds = %32, %41, %25
  %43 = phi double [ %31, %25 ], [ %39, %41 ], [ %38, %32 ]
  %44 = add nsw i32 %18, -1
  store i32 %44, i32* %17, align 8
  br label %45

45:                                               ; preds = %10, %13, %16, %42
  %46 = phi double [ %43, %42 ], [ 0.000000e+00, %16 ], [ %15, %13 ], [ 0.000000e+00, %10 ]
  %47 = sitofp i32 %2 to double
  %48 = fmul double %46, %47
  %49 = fdiv double %48, 1.280000e+05
  %50 = fptosi double %49 to i32
  %51 = icmp sgt i32 %50, %1
  %52 = select i1 %51, i32 %50, i32 %1
  %53 = sitofp i32 %52 to double
  %54 = fmul double %53, 8.000000e+00
  %55 = fmul double %54, 1.600000e+04
  %56 = fdiv double %55, %47
  %57 = fmul double %3, 1.010000e+00
  %58 = fcmp ogt double %56, %57
  %59 = getelementptr inbounds %struct.RateModel, %struct.RateModel* %0, i64 0, i32 0
  br i1 %58, label %60, label %74

60:                                               ; preds = %45
  %61 = load i32, i32* %59, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %69, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.RateModel, %struct.RateModel* %0, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %65, 250
  %67 = select i1 %66, i32 %65, i32 250
  %68 = add nsw i32 %67, -250
  store i32 %68, i32* %64, align 4
  br label %79

69:                                               ; preds = %60
  %70 = sdiv i32 %2, 16
  %71 = getelementptr inbounds %struct.RateModel, %struct.RateModel* %0, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = add nsw i32 %72, %70
  store i32 %73, i32* %71, align 4
  store i32 1, i32* %59, align 8
  br label %79

74:                                               ; preds = %45
  store i32 0, i32* %59, align 8
  %75 = sdiv i32 %2, 16
  %76 = getelementptr inbounds %struct.RateModel, %struct.RateModel* %0, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = add nsw i32 %77, %75
  store i32 %78, i32* %76, align 4
  br label %79

79:                                               ; preds = %63, %69, %74
  %80 = phi i32 [ %61, %63 ], [ 1, %69 ], [ 0, %74 ]
  %81 = phi i32 [ %68, %63 ], [ %73, %69 ], [ %78, %74 ]
  %82 = icmp sgt i32 %81, 500
  br i1 %82, label %83, label %91

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RateModel, %struct.RateModel* %0, i64 0, i32 2
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %83
  %88 = icmp eq i32 %80, 0
  br i1 %88, label %90, label %89

89:                                               ; preds = %87
  store i32 2, i32* %84, align 8
  br label %91

90:                                               ; preds = %87
  store i32 3, i32* %84, align 8
  br label %91

91:                                               ; preds = %89, %90, %83, %79
  %92 = fmul double %54, 1.000000e+03
  %93 = fdiv double %92, %3
  %94 = getelementptr inbounds %struct.RateModel, %struct.RateModel* %0, i64 0, i32 4
  %95 = load double, double* %94, align 8
  %96 = fadd double %93, %95
  %97 = sdiv i32 %2, 16
  %98 = sitofp i32 %97 to double
  %99 = fsub double %96, %98
  %100 = fcmp olt double %99, 0.000000e+00
  %101 = select i1 %100, double 0.000000e+00, double %99
  store double %101, double* %94, align 8
  ret i32 %50
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcIsac_UpdateRateModel(%struct.RateModel* nocapture, i32, i32, double) local_unnamed_addr #3 {
  %5 = getelementptr inbounds %struct.RateModel, %struct.RateModel* %0, i64 0, i32 3
  store i32 0, i32* %5, align 4
  %6 = sitofp i32 %1 to double
  %7 = fmul double %6, 8.000000e+00
  %8 = fmul double %7, 1.000000e+03
  %9 = fdiv double %8, %3
  %10 = getelementptr inbounds %struct.RateModel, %struct.RateModel* %0, i64 0, i32 4
  %11 = load double, double* %10, align 8
  %12 = fadd double %9, %11
  %13 = sdiv i32 %2, 16
  %14 = sitofp i32 %13 to double
  %15 = fsub double %12, %14
  %16 = fcmp olt double %15, 0.000000e+00
  %17 = select i1 %16, double 0.000000e+00, double %15
  store double %17, double* %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @WebRtcIsac_InitRateModel(%struct.RateModel* nocapture) local_unnamed_addr #0 {
  %2 = bitcast %struct.RateModel* %0 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 15>, <4 x i32>* %2, align 8
  %3 = getelementptr inbounds %struct.RateModel, %struct.RateModel* %0, i64 0, i32 4
  store double 1.000000e+00, double* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @WebRtcIsac_GetNewFrameLength(double, i32) local_unnamed_addr #5 {
  switch i32 %1, label %14 [
    i32 320, label %3
    i32 480, label %6
    i32 960, label %11
  ]

3:                                                ; preds = %2
  %4 = fcmp olt double %0, 2.000000e+04
  br i1 %4, label %5, label %14

5:                                                ; preds = %3
  br label %14

6:                                                ; preds = %2
  %7 = fcmp olt double %0, 1.800000e+04
  br i1 %7, label %14, label %8

8:                                                ; preds = %6
  %9 = fcmp ogt double %0, 1.000000e+06
  br i1 %9, label %10, label %14

10:                                               ; preds = %8
  br label %14

11:                                               ; preds = %2
  %12 = fcmp ult double %0, 2.700000e+04
  br i1 %12, label %14, label %13

13:                                               ; preds = %11
  br label %14

14:                                               ; preds = %6, %11, %13, %10, %8, %3, %5, %2
  %15 = phi i32 [ %1, %2 ], [ 480, %13 ], [ 960, %11 ], [ 320, %10 ], [ 480, %8 ], [ 480, %5 ], [ 320, %3 ], [ 960, %6 ]
  ret i32 %15
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @WebRtcIsac_GetSnr(double, i32) local_unnamed_addr #5 {
  switch i32 %1, label %27 [
    i32 320, label %3
    i32 480, label %11
    i32 960, label %19
  ]

3:                                                ; preds = %2
  %4 = fmul double %0, 8.000000e-01
  %5 = fmul double %4, 1.000000e-03
  %6 = fadd double %5, -3.000000e+01
  %7 = fmul double %0, 0.000000e+00
  %8 = fmul double %7, %0
  %9 = fmul double %8, 0x3EB0C6F7A0B5ED8D
  %10 = fadd double %6, %9
  br label %27

11:                                               ; preds = %2
  %12 = fmul double %0, 4.800000e-01
  %13 = fmul double %12, 1.000000e-03
  %14 = fadd double %13, -2.300000e+01
  %15 = fmul double %0, 0.000000e+00
  %16 = fmul double %15, %0
  %17 = fmul double %16, 0x3EB0C6F7A0B5ED8D
  %18 = fadd double %14, %17
  br label %27

19:                                               ; preds = %2
  %20 = fmul double %0, 5.300000e-01
  %21 = fmul double %20, 1.000000e-03
  %22 = fadd double %21, -2.300000e+01
  %23 = fmul double %0, 0.000000e+00
  %24 = fmul double %23, %0
  %25 = fmul double %24, 0x3EB0C6F7A0B5ED8D
  %26 = fadd double %22, %25
  br label %27

27:                                               ; preds = %2, %19, %11, %3
  %28 = phi double [ %26, %19 ], [ %18, %11 ], [ %10, %3 ], [ 0.000000e+00, %2 ]
  ret double %28
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
