; ModuleID = 'gen/third_party/blink/public/mojom/interest_group/restricted_interest_group_store.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/interest_group/restricted_interest_group_store.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::RestrictedInterestGroupStoreAsyncWaiter" = type { %"class.blink::mojom::blink::RestrictedInterestGroupStore"* }
%"class.blink::mojom::blink::RestrictedInterestGroupStore" = type { i32 (...)** }
%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting" = type { %"class.blink::mojom::blink::RestrictedInterestGroupStore" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::InterestGroup"* }
%"class.blink::mojom::blink::InterestGroup" = type { %"class.base::Time", %class.scoped_refptr, %"class.WTF::String", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.6", %"class.WTF::String", %"class.absl::optional.11" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.31", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.31" = type { %"class.absl::optional_internal::optional_data.32" }
%"class.absl::optional_internal::optional_data.32" = type { %"class.absl::optional_internal::optional_data_base.33" }
%"class.absl::optional_internal::optional_data_base.33" = type { %"class.absl::optional_internal::optional_data_dtor_base.34" }
%"class.absl::optional_internal::optional_data_dtor_base.34" = type { i8, %union.anon.35 }
%union.anon.35 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.2" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::KURL"* }
%"class.absl::optional.6" = type { %"class.absl::optional_internal::optional_data.7" }
%"class.absl::optional_internal::optional_data.7" = type { %"class.absl::optional_internal::optional_data_base.8" }
%"class.absl::optional_internal::optional_data_base.8" = type { %"class.absl::optional_internal::optional_data_dtor_base.9" }
%"class.absl::optional_internal::optional_data_dtor_base.9" = type { i8, %union.anon.10 }
%union.anon.10 = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional.11" = type { %"class.absl::optional_internal::optional_data.12" }
%"class.absl::optional_internal::optional_data.12" = type { %"class.absl::optional_internal::optional_data_base.13" }
%"class.absl::optional_internal::optional_data_base.13" = type { %"class.absl::optional_internal::optional_data_dtor_base.14" }
%"class.absl::optional_internal::optional_data_dtor_base.14" = type { i8, %union.anon.15 }
%union.anon.15 = type { %"class.WTF::Vector.16" }
%"class.WTF::Vector.16" = type { %"class.WTF::VectorBuffer.17" }
%"class.WTF::VectorBuffer.17" = type { %"class.WTF::VectorBufferBase.18" }
%"class.WTF::VectorBufferBase.18" = type { %"class.mojo::StructPtr.19"*, i32, i32 }
%"class.mojo::StructPtr.19" = type { %"class.std::__1::unique_ptr.20" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::mojom::blink::InterestGroupAd"* }
%"class.blink::mojom::blink::InterestGroupAd" = type { %"class.blink::KURL", %"class.WTF::String" }

$_ZN5blink5mojom5blink28RestrictedInterestGroupStoreD2Ev = comdat any

$_ZN5blink5mojom5blink49RestrictedInterestGroupStoreInterceptorForTestingD0Ev = comdat any

@_ZTVN5blink5mojom5blink49RestrictedInterestGroupStoreInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::RestrictedInterestGroupStore"*)* @_ZN5blink5mojom5blink28RestrictedInterestGroupStoreD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*)* @_ZN5blink5mojom5blink49RestrictedInterestGroupStoreInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*, %"class.mojo::StructPtr"*)* @_ZN5blink5mojom5blink49RestrictedInterestGroupStoreInterceptorForTesting17JoinInterestGroupEN4mojo9StructPtrINS1_13InterestGroupEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*, %class.scoped_refptr*, %"class.WTF::String"*)* @_ZN5blink5mojom5blink49RestrictedInterestGroupStoreInterceptorForTesting18LeaveInterestGroupERK13scoped_refptrIKNS_14SecurityOriginEERKN3WTF6StringE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink39RestrictedInterestGroupStoreAsyncWaiterC1EPNS1_28RestrictedInterestGroupStoreE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::RestrictedInterestGroupStoreAsyncWaiter"*, %"class.blink::mojom::blink::RestrictedInterestGroupStore"*), void (%"class.blink::mojom::blink::RestrictedInterestGroupStoreAsyncWaiter"*, %"class.blink::mojom::blink::RestrictedInterestGroupStore"*)* @_ZN5blink5mojom5blink39RestrictedInterestGroupStoreAsyncWaiterC2EPNS1_28RestrictedInterestGroupStoreE
@_ZN5blink5mojom5blink39RestrictedInterestGroupStoreAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::RestrictedInterestGroupStoreAsyncWaiter"*), void (%"class.blink::mojom::blink::RestrictedInterestGroupStoreAsyncWaiter"*)* @_ZN5blink5mojom5blink39RestrictedInterestGroupStoreAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink49RestrictedInterestGroupStoreInterceptorForTesting17JoinInterestGroupEN4mojo9StructPtrINS1_13InterestGroupEEE(%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = bitcast %"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"* %0 to %"class.blink::mojom::blink::RestrictedInterestGroupStore"* (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::RestrictedInterestGroupStore"* (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*)**, %"class.blink::mojom::blink::RestrictedInterestGroupStore"* (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::RestrictedInterestGroupStore"* (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*)*, %"class.blink::mojom::blink::RestrictedInterestGroupStore"* (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.blink::mojom::blink::RestrictedInterestGroupStore"* (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*)*, %"class.blink::mojom::blink::RestrictedInterestGroupStore"* (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::RestrictedInterestGroupStore"* %7(%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"* %0) #7
  %9 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.blink::mojom::blink::RestrictedInterestGroupStore"* %8 to void (%"class.blink::mojom::blink::RestrictedInterestGroupStore"*, %"class.mojo::StructPtr"*)***
  %14 = load void (%"class.blink::mojom::blink::RestrictedInterestGroupStore"*, %"class.mojo::StructPtr"*)**, void (%"class.blink::mojom::blink::RestrictedInterestGroupStore"*, %"class.mojo::StructPtr"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::RestrictedInterestGroupStore"*, %"class.mojo::StructPtr"*)*, void (%"class.blink::mojom::blink::RestrictedInterestGroupStore"*, %"class.mojo::StructPtr"*)** %14, i64 2
  %16 = load void (%"class.blink::mojom::blink::RestrictedInterestGroupStore"*, %"class.mojo::StructPtr"*)*, void (%"class.blink::mojom::blink::RestrictedInterestGroupStore"*, %"class.mojo::StructPtr"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::RestrictedInterestGroupStore"* %8, %"class.mojo::StructPtr"* nonnull %3) #7
  %17 = load %"class.blink::mojom::blink::InterestGroup"*, %"class.blink::mojom::blink::InterestGroup"** %10, align 8
  store %"class.blink::mojom::blink::InterestGroup"* null, %"class.blink::mojom::blink::InterestGroup"** %10, align 8
  %18 = icmp eq %"class.blink::mojom::blink::InterestGroup"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN5blink5mojom5blink13InterestGroupD1Ev(%"class.blink::mojom::blink::InterestGroup"* nonnull %17) #7
  %20 = bitcast %"class.blink::mojom::blink::InterestGroup"* %17 to i8*
  call void @_ZdlPv(i8* %20) #8
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink49RestrictedInterestGroupStoreInterceptorForTesting18LeaveInterestGroupERK13scoped_refptrIKNS_14SecurityOriginEERKN3WTF6StringE(%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*, %class.scoped_refptr* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"* %0 to %"class.blink::mojom::blink::RestrictedInterestGroupStore"* (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::RestrictedInterestGroupStore"* (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*)**, %"class.blink::mojom::blink::RestrictedInterestGroupStore"* (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::RestrictedInterestGroupStore"* (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*)*, %"class.blink::mojom::blink::RestrictedInterestGroupStore"* (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.blink::mojom::blink::RestrictedInterestGroupStore"* (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*)*, %"class.blink::mojom::blink::RestrictedInterestGroupStore"* (%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::RestrictedInterestGroupStore"* %7(%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"* %0) #7
  %9 = bitcast %"class.blink::mojom::blink::RestrictedInterestGroupStore"* %8 to void (%"class.blink::mojom::blink::RestrictedInterestGroupStore"*, %class.scoped_refptr*, %"class.WTF::String"*)***
  %10 = load void (%"class.blink::mojom::blink::RestrictedInterestGroupStore"*, %class.scoped_refptr*, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::RestrictedInterestGroupStore"*, %class.scoped_refptr*, %"class.WTF::String"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::blink::RestrictedInterestGroupStore"*, %class.scoped_refptr*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::RestrictedInterestGroupStore"*, %class.scoped_refptr*, %"class.WTF::String"*)** %10, i64 3
  %12 = load void (%"class.blink::mojom::blink::RestrictedInterestGroupStore"*, %class.scoped_refptr*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::RestrictedInterestGroupStore"*, %class.scoped_refptr*, %"class.WTF::String"*)** %11, align 8
  tail call void %12(%"class.blink::mojom::blink::RestrictedInterestGroupStore"* %8, %class.scoped_refptr* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink39RestrictedInterestGroupStoreAsyncWaiterC2EPNS1_28RestrictedInterestGroupStoreE(%"class.blink::mojom::blink::RestrictedInterestGroupStoreAsyncWaiter"* nocapture, %"class.blink::mojom::blink::RestrictedInterestGroupStore"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::RestrictedInterestGroupStoreAsyncWaiter", %"class.blink::mojom::blink::RestrictedInterestGroupStoreAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::RestrictedInterestGroupStore"* %1, %"class.blink::mojom::blink::RestrictedInterestGroupStore"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink39RestrictedInterestGroupStoreAsyncWaiterD2Ev(%"class.blink::mojom::blink::RestrictedInterestGroupStoreAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink28RestrictedInterestGroupStoreD2Ev(%"class.blink::mojom::blink::RestrictedInterestGroupStore"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink49RestrictedInterestGroupStoreInterceptorForTestingD0Ev(%"class.blink::mojom::blink::RestrictedInterestGroupStoreInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink13InterestGroupD1Ev(%"class.blink::mojom::blink::InterestGroup"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
