; ModuleID = '../../third_party/blink/renderer/core/layout/svg/svg_text_layout_engine.cc'
source_filename = "../../third_party/blink/renderer/core/layout/svg/svg_text_layout_engine.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::Vector.1623" = type { %"class.WTF::VectorBuffer.1624" }
%"class.WTF::VectorBuffer.1624" = type { %"class.WTF::VectorBufferBase.1625" }
%"class.WTF::VectorBufferBase.1625" = type { %"class.blink::LayoutSVGInlineText"**, i32, i32 }
%"class.blink::LayoutSVGInlineText" = type { %"class.blink::LayoutText", float, %"class.blink::Font", %"class.WTF::HashMap.1627", %"class.WTF::Vector.1632" }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.1626 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1733 }
%class.scoped_refptr.1733 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1734", %"class.WTF::Vector.630", %"class.WTF::Vector.1736", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1734" = type { %"class.base::RefCounted.1735" }
%"class.base::RefCounted.1735" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1736" = type { %"class.WTF::VectorBuffer.1737" }
%"class.WTF::VectorBuffer.1737" = type { %"class.WTF::VectorBufferBase.1738" }
%"class.WTF::VectorBufferBase.1738" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1739 }
%union.anon.1739 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1719" }
%"class.blink::Member.1719" = type { %"class.blink::MemberBase.1720" }
%"class.blink::MemberBase.1720" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1721" }
%"class.blink::Member.1721" = type { %"class.blink::MemberBase.1722" }
%"class.blink::MemberBase.1722" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1747 }
%class.scoped_refptr.1747 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1757" }
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1753" }
%"class.blink::MemberBase.1753" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1754" }
%"class.blink::MemberBase.1754" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1755" }
%"class.blink::MemberBase.1755" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1756" }
%"class.blink::MemberBase.1756" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1748", %"class.WTF::Vector.1748" }
%"class.WTF::Vector.1748" = type { %"class.WTF::VectorBuffer.1749" }
%"class.WTF::VectorBuffer.1749" = type { %"class.WTF::VectorBufferBase.1750" }
%"class.WTF::VectorBufferBase.1750" = type { %class.scoped_refptr.1747*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1723" }
%"class.WTF::Vector.1723" = type { %"class.WTF::VectorBuffer.1724" }
%"class.WTF::VectorBuffer.1724" = type { %"class.WTF::VectorBufferBase.1725" }
%"class.WTF::VectorBufferBase.1725" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1728", %"class.absl::optional.1728", %"class.absl::optional.1728" }
%"class.absl::optional.1728" = type { %"class.absl::optional_internal::optional_data.1729" }
%"class.absl::optional_internal::optional_data.1729" = type { %"class.absl::optional_internal::optional_data_base.1730" }
%"class.absl::optional_internal::optional_data_base.1730" = type { %"class.absl::optional_internal::optional_data_dtor_base.1731" }
%"class.absl::optional_internal::optional_data_dtor_base.1731" = type { i8, %union.anon.1732 }
%union.anon.1732 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1743" }
%"class.WTF::VectorBuffer.1743" = type { %"class.WTF::VectorBufferBase.1744", [32 x i8] }
%"class.WTF::VectorBufferBase.1744" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1626 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.WTF::HashMap.1627" = type { %"class.WTF::HashTable.1628" }
%"class.WTF::HashTable.1628" = type <{ %"struct.WTF::KeyValuePair.1631"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1631" = type { i32, %"struct.blink::SVGCharacterData" }
%"struct.blink::SVGCharacterData" = type { float, float, float, float, float }
%"class.WTF::Vector.1632" = type { %"class.WTF::VectorBuffer.1633" }
%"class.WTF::VectorBuffer.1633" = type { %"class.WTF::VectorBufferBase.1634" }
%"class.WTF::VectorBufferBase.1634" = type { %"class.blink::SVGTextMetrics"*, i32, i32 }
%"class.blink::SVGTextMetrics" = type { float, float, i32 }
%"class.WTF::Vector.1639" = type { %"class.WTF::VectorBuffer.1640" }
%"class.WTF::VectorBuffer.1640" = type { %"class.WTF::VectorBufferBase.1641" }
%"class.WTF::VectorBufferBase.1641" = type { %"class.blink::SVGInlineTextBox"**, i32, i32 }
%"class.blink::SVGInlineTextBox" = type { %"class.blink::InlineTextBox", %"class.blink::LayoutUnit", i8, %"class.WTF::Vector.1642" }
%"class.WTF::Vector.1642" = type { %"class.WTF::VectorBuffer.1643" }
%"class.WTF::VectorBuffer.1643" = type { %"class.WTF::VectorBufferBase.1644" }
%"class.WTF::VectorBufferBase.1644" = type { %"struct.blink::SVGTextFragment"*, i32, i32 }
%"struct.blink::SVGTextFragment" = type { i32, i32, i32, float, float, float, float, %"struct.blink::GlyphOverflow", %"class.blink::AffineTransform", float, float }
%"struct.blink::GlyphOverflow" = type { float, float, float, float }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::SVGInlineTextMetricsIterator" = type { %"class.blink::LineLayoutSVGInlineText", i32, i32 }
%"class.blink::LineLayoutSVGInlineText" = type { %"class.blink::LineLayoutText" }
%"class.blink::LineLayoutText" = type { %"class.blink::LineLayoutItem" }
%"class.blink::FloatPoint" = type { float, float }
%"class.std::__1::unique_ptr.1649" = type { %"class.std::__1::__compressed_pair.1650" }
%"class.std::__1::__compressed_pair.1650" = type { %"struct.std::__1::__compressed_pair_elem.1651" }
%"struct.std::__1::__compressed_pair_elem.1651" = type { %"class.blink::PathPositionMapper"* }
%"class.blink::PathPositionMapper" = type { %"class.blink::Path::PositionCalculator", float, float }
%"class.blink::Path::PositionCalculator" = type <{ %class.SkPath, %class.SkPathMeasure, float, [4 x i8] }>
%class.SkPathMeasure = type { %class.SkContourMeasureIter, %class.sk_sp.1658 }
%class.SkContourMeasureIter = type { %"class.std::__1::unique_ptr.1652" }
%"class.std::__1::unique_ptr.1652" = type { %"class.std::__1::__compressed_pair.1653" }
%"class.std::__1::__compressed_pair.1653" = type { %"struct.std::__1::__compressed_pair_elem.1654" }
%"struct.std::__1::__compressed_pair_elem.1654" = type { %"class.SkContourMeasureIter::Impl"* }
%"class.SkContourMeasureIter::Impl" = type opaque
%class.sk_sp.1658 = type { %class.SkContourMeasure* }
%class.SkContourMeasure = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkTDArray.1659, %class.SkTDArray, float, i8, [3 x i8] }>
%class.SkTDArray.1659 = type { %"struct.SkContourMeasure::Segment"*, i32, i32 }
%"struct.SkContourMeasure::Segment" = type { float, i32, i32 }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::SVGTextLayoutEngine" = type <{ %"class.WTF::Vector.1623"*, i32, i32, i32, [4 x i8], %"class.WTF::Vector.1639", %"struct.blink::SVGTextFragment", %"class.blink::SVGInlineTextMetricsIterator", %"class.blink::FloatPoint", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.1649", float, float, float, float, float, [4 x i8] }>
%"class.blink::TextRun" = type <{ %union.anon.1663, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon.1663 = type { i8* }
%"class.WTF::HashSet.1664" = type opaque
%"class.blink::SVGInlineFlowBox" = type { %"class.blink::InlineFlowBox.base", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%"class.blink::LineLayoutSVGTextPath" = type { %"class.blink::LineLayoutSVGInline" }
%"class.blink::LineLayoutSVGInline" = type { %"class.blink::LineLayoutInline" }
%"class.blink::LineLayoutInline" = type { %"class.blink::LineLayoutBoxModel" }
%"class.blink::LineLayoutBoxModel" = type { %"class.blink::LineLayoutItem" }
%"class.blink::SVGTextPathChunkBuilder" = type { %"class.blink::SVGTextChunkBuilder", float, i32 }
%"class.blink::SVGTextChunkBuilder" = type { i32 (...)** }
%"class.blink::SVGLengthContext" = type { %"class.blink::SVGElement"* }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet.1665", %"class.blink::HeapHashMap.1672", %"class.blink::Member.1679", %"class.blink::Member.1681" }
%"class.blink::HeapHashSet.1665" = type { %"class.WTF::HashSet.1668" }
%"class.WTF::HashSet.1668" = type { %"class.WTF::HashTable.1669" }
%"class.WTF::HashTable.1669" = type <{ %"class.blink::WeakMember.1671"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1671" = type opaque
%"class.blink::HeapHashMap.1672" = type { %"class.WTF::HashMap.1675" }
%"class.WTF::HashMap.1675" = type { %"class.WTF::HashTable.1676" }
%"class.WTF::HashTable.1676" = type <{ %"struct.WTF::KeyValuePair.1678"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1678" = type opaque
%"class.blink::Member.1679" = type { %"class.blink::MemberBase.1680" }
%"class.blink::MemberBase.1680" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.1681" = type { %"class.blink::MemberBase.1682" }
%"class.blink::MemberBase.1682" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::LayoutSVGTextPath" = type { %"class.blink::LayoutSVGInline" }
%"class.blink::LayoutSVGInline" = type { %"class.blink::LayoutInline" }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1759 }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%union.anon.1759 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList.1760" }
%"class.blink::InlineBoxList.1760" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::SVGTextContentElement" = type { %"class.blink::SVGGraphicsElement", %"class.blink::Member.1687", i8, %"class.blink::Member.1703" }
%"class.blink::SVGGraphicsElement" = type { %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.1685" }
%"class.blink::SVGTests" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1683", %"class.blink::Member.1683" }
%"class.blink::Member.1683" = type { %"class.blink::MemberBase.1684" }
%"class.blink::MemberBase.1684" = type { %"class.blink::SVGStaticStringList"* }
%"class.blink::SVGStaticStringList" = type opaque
%"class.blink::Member.1685" = type { %"class.blink::MemberBase.1686" }
%"class.blink::MemberBase.1686" = type { %"class.blink::SVGAnimatedTransformList"* }
%"class.blink::SVGAnimatedTransformList" = type opaque
%"class.blink::Member.1687" = type { %"class.blink::MemberBase.1688" }
%"class.blink::MemberBase.1688" = type { %"class.blink::SVGAnimatedLength"* }
%"class.blink::SVGAnimatedLength" = type { %"class.blink::ScriptWrappable", %"class.blink::SVGAnimatedProperty" }
%"class.blink::SVGAnimatedProperty" = type { %"class.blink::SVGAnimatedPropertyCommon", %"class.blink::Member.1699", %"class.blink::Member.1699" }
%"class.blink::SVGAnimatedPropertyCommon" = type { %"class.blink::SVGAnimatedPropertyBase", %"class.blink::Member.1691", %"class.blink::Member.1691" }
%"class.blink::SVGAnimatedPropertyBase" = type { %"class.blink::GarbageCollectedMixin", i24, %"class.blink::Member.1689", %"class.blink::QualifiedName"* }
%"class.blink::Member.1689" = type { %"class.blink::MemberBase.1690" }
%"class.blink::MemberBase.1690" = type { %"class.blink::SVGElement"* }
%"class.blink::Member.1691" = type { %"class.blink::MemberBase.1692" }
%"class.blink::MemberBase.1692" = type { %"class.blink::SVGLength"* }
%"class.blink::SVGLength" = type <{ %"class.blink::SVGListablePropertyBase", %"class.blink::Member.1697", i8, [7 x i8] }>
%"class.blink::SVGListablePropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::UntracedMember.1695" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::UntracedMember.1695" = type { %"class.blink::MemberBase.1696" }
%"class.blink::MemberBase.1696" = type { %"class.blink::SVGListPropertyBase"* }
%"class.blink::SVGListPropertyBase" = type opaque
%"class.blink::Member.1697" = type { %"class.blink::MemberBase.1698" }
%"class.blink::MemberBase.1698" = type { %"class.blink::CSSPrimitiveValue"* }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::Member.1699" = type { %"class.blink::MemberBase.1700" }
%"class.blink::MemberBase.1700" = type { %"class.blink::SVGLengthTearOff"* }
%"class.blink::SVGLengthTearOff" = type { %"class.blink::SVGPropertyTearOff" }
%"class.blink::SVGPropertyTearOff" = type { %"class.blink::SVGPropertyTearOffBase.base", %"class.blink::Member.1691" }
%"class.blink::SVGPropertyTearOffBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.1689", %"class.blink::Member.1701", i32 }>
%"class.blink::Member.1701" = type { %"class.blink::MemberBase.1702" }
%"class.blink::MemberBase.1702" = type { %"class.blink::SVGAnimatedPropertyBase"* }
%"class.blink::Member.1703" = type { %"class.blink::MemberBase.1704" }
%"class.blink::MemberBase.1704" = type { %"class.blink::SVGAnimatedEnumeration"* }
%"class.blink::SVGAnimatedEnumeration" = type { %"class.blink::SVGAnimatedEnumerationBase" }
%"class.blink::SVGAnimatedEnumerationBase" = type { %"class.blink::ScriptWrappable", %"class.blink::SVGAnimatedProperty.1705" }
%"class.blink::SVGAnimatedProperty.1705" = type { %"class.blink::SVGAnimatedPropertyCommon.1706" }
%"class.blink::SVGAnimatedPropertyCommon.1706" = type { %"class.blink::SVGAnimatedPropertyBase", %"class.blink::Member.1707", %"class.blink::Member.1707" }
%"class.blink::Member.1707" = type { %"class.blink::MemberBase.1708" }
%"class.blink::MemberBase.1708" = type { %"class.blink::SVGEnumeration"* }
%"class.blink::SVGEnumeration" = type { %"class.blink::SVGPropertyBase", i16, %"class.blink::SVGEnumerationMap"* }
%"class.blink::SVGEnumerationMap" = type opaque
%"class.blink::SVGTextLayoutEngineSpacing" = type { %"class.blink::Font"*, i16, float }
%"class.blink::SVGTextLayoutEngineBaseline" = type <{ %"class.blink::Font"*, float, [4 x i8] }>
%"struct.blink::PointAndTangent" = type { %"class.blink::FloatPoint", float }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink13GlyphOverflow13SetFromBoundsERKNS_9FloatRectERKNS_4FontEf = comdat any

$_ZNK3WTF6VectorIN5blink14SVGTextMetricsELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15SVGTextFragmentEEEmm = comdat any

$_ZNK3WTF6VectorIPN5blink19LayoutSVGInlineTextELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink15SVGTextFragmentELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink16SVGInlineTextBoxEEEmm = comdat any

@__const._ZN5blink19SVGTextLayoutEngine19BeginTextPathLayoutEPNS_16SVGInlineFlowBoxE.line_layout = private unnamed_addr constant <{ %"class.WTF::Vector.1623"*, i32, i32, i32, [4 x i8], %"class.WTF::Vector.1639", { i32, i32, i32, float, float, float, float, %"struct.blink::GlyphOverflow", [4 x i8], %"class.blink::AffineTransform", float, float }, %"class.blink::SVGInlineTextMetricsIterator", %"class.blink::FloatPoint", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.1649", float, float, float, float, float, [4 x i8] }> <{ %"class.WTF::Vector.1623"* inttoptr (i64 -6148914691236517206 to %"class.WTF::Vector.1623"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.WTF::Vector.1639" { %"class.WTF::VectorBuffer.1640" { %"class.WTF::VectorBufferBase.1641" { %"class.blink::SVGInlineTextBox"** inttoptr (i64 -6148914691236517206 to %"class.blink::SVGInlineTextBox"**), i32 -1431655766, i32 -1431655766 } } }, { i32, i32, i32, float, float, float, float, %"struct.blink::GlyphOverflow", [4 x i8], %"class.blink::AffineTransform", float, float } { i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::GlyphOverflow" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %"class.blink::AffineTransform" { [6 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF] }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::SVGInlineTextMetricsIterator" { %"class.blink::LineLayoutSVGInlineText" { %"class.blink::LineLayoutText" { %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) } } }, i32 -1431655766, i32 -1431655766 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.1649" { %"class.std::__1::__compressed_pair.1650" { %"struct.std::__1::__compressed_pair_elem.1651" { %"class.blink::PathPositionMapper"* inttoptr (i64 -6148914691236517206 to %"class.blink::PathPositionMapper"*) } } }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN5blink19SVGTextLayoutEngine22LayoutTextOnLineOrPathEPNS_16SVGInlineTextBoxENS_23LineLayoutSVGInlineTextERKNS_13ComputedStyleE.spacing_layout = private unnamed_addr constant { %"class.blink::Font"*, i16, [2 x i8], float } { %"class.blink::Font"* inttoptr (i64 -6148914691236517206 to %"class.blink::Font"*), i16 -21846, [2 x i8] c"\AA\AA", float 0xFFFFFFFFE0000000 }, align 8
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGTextFragmentEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGTextFragment]\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink16SVGInlineTextBoxEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGInlineTextBox *]\00", align 1
@_ZN5blink9svg_names12kTextPathTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8

@_ZN5blink19SVGTextLayoutEngineC1ERKN3WTF6VectorIPNS_19LayoutSVGInlineTextELj0ENS1_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::SVGTextLayoutEngine"*, %"class.WTF::Vector.1623"*), void (%"class.blink::SVGTextLayoutEngine"*, %"class.WTF::Vector.1623"*)* @_ZN5blink19SVGTextLayoutEngineC2ERKN3WTF6VectorIPNS_19LayoutSVGInlineTextELj0ENS1_18PartitionAllocatorEEE
@_ZN5blink19SVGTextLayoutEngineD1Ev = hidden unnamed_addr alias void (%"class.blink::SVGTextLayoutEngine"*), void (%"class.blink::SVGTextLayoutEngine"*)* @_ZN5blink19SVGTextLayoutEngineD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SVGTextLayoutEngineC2ERKN3WTF6VectorIPNS_19LayoutSVGInlineTextELj0ENS1_18PartitionAllocatorEEE(%"class.blink::SVGTextLayoutEngine"*, %"class.WTF::Vector.1623"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 0
  store %"class.WTF::Vector.1623"* %1, %"class.WTF::Vector.1623"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 2
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 3
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6, i32 8
  %9 = bitcast %"class.WTF::Vector.1639"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 60, i1 false)
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %8) #7
  %10 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6, i32 9
  store float 1.000000e+00, float* %10, align 8
  %11 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6, i32 10
  %12 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 14
  %13 = bitcast %"class.std::__1::unique_ptr.1649"* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 16
  store float 0.000000e+00, float* %14, align 4
  %15 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 17
  store float 0.000000e+00, float* %15, align 8
  %16 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 18
  store float 0.000000e+00, float* %16, align 4
  %17 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 19
  %18 = bitcast float* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 32, i1 false)
  store float 1.000000e+00, float* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SVGTextLayoutEngineD2Ev(%"class.blink::SVGTextLayoutEngine"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %3 = load %"class.blink::PathPositionMapper"*, %"class.blink::PathPositionMapper"** %2, align 8
  store %"class.blink::PathPositionMapper"* null, %"class.blink::PathPositionMapper"** %2, align 8
  %4 = icmp eq %"class.blink::PathPositionMapper"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PathPositionMapper", %"class.blink::PathPositionMapper"* %3, i64 0, i32 0, i32 1
  tail call void @_ZN13SkPathMeasureD1Ev(%class.SkPathMeasure* %6) #7
  %7 = getelementptr inbounds %"class.blink::PathPositionMapper", %"class.blink::PathPositionMapper"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %7) #7
  %8 = bitcast %"class.blink::PathPositionMapper"* %3 to i8*
  tail call void @free(i8* %8) #7
  br label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %10, align 8
  %12 = icmp eq %"class.blink::SVGInlineTextBox"** %11, null
  %13 = bitcast %"class.blink::SVGInlineTextBox"** %11 to i8*
  br i1 %12, label %20, label %14, !prof !2

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18, !prof !3

18:                                               ; preds = %14
  store i32 0, i32* %15, align 4
  br label %19

19:                                               ; preds = %18, %14
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %13) #7
  store %"class.blink::SVGInlineTextBox"** null, %"class.blink::SVGInlineTextBox"*** %10, align 8
  br label %20

20:                                               ; preds = %9, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19SVGTextLayoutEngine22SetCurrentTextPositionERKNS_16SVGCharacterDataE(%"class.blink::SVGTextLayoutEngine"* nocapture, %"struct.blink::SVGCharacterData"* nocapture readonly dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::SVGCharacterData", %"struct.blink::SVGCharacterData"* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = fcmp ord float %4, 0.000000e+00
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 8, i32 0
  store float %4, float* %7, align 4
  br label %8

8:                                                ; preds = %6, %2
  %9 = getelementptr inbounds %"struct.blink::SVGCharacterData", %"struct.blink::SVGCharacterData"* %1, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = fcmp ord float %10, 0.000000e+00
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 8, i32 1
  store float %10, float* %13, align 4
  br label %14

14:                                               ; preds = %12, %8
  %15 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 10
  %16 = load i8, i8* %15, align 1, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 9
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  br i1 %11, label %23, label %69

23:                                               ; preds = %22
  %24 = load float, float* %9, align 4
  %25 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 15
  %26 = load float, float* %25, align 8
  %27 = fadd float %24, %26
  %28 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 16
  store float %27, float* %28, align 4
  br label %69

29:                                               ; preds = %18
  br i1 %5, label %30, label %69

30:                                               ; preds = %29
  %31 = load float, float* %3, align 4
  %32 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 15
  %33 = load float, float* %32, align 8
  %34 = fadd float %31, %33
  %35 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 16
  store float %34, float* %35, align 4
  br label %69

36:                                               ; preds = %14
  %37 = fcmp uno float %4, %10
  br i1 %37, label %38, label %69

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 12
  %40 = load i8, i8* %39, align 1, !range !4
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %69, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 0
  %44 = load %"class.WTF::Vector.1623"*, %"class.WTF::Vector.1623"** %43, align 8
  %45 = tail call dereferenceable(8) %"class.blink::LayoutSVGInlineText"** @_ZNK3WTF6VectorIPN5blink19LayoutSVGInlineTextELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1623"* %44, i32 0) #7
  %46 = bitcast %"class.blink::LayoutSVGInlineText"** %45 to %"class.blink::LayoutObject"**
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 6, i32 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %51, label %58

51:                                               ; preds = %42, %51
  %52 = phi %"class.blink::LayoutObject"* [ %54, %51 ], [ %47, %42 ]
  %53 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %52, i64 0, i32 7
  %54 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %54, i64 0, i32 6, i32 0, i32 0
  %56 = load %"class.blink::Node"*, %"class.blink::Node"** %55, align 8
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %51, label %58

58:                                               ; preds = %51, %42
  %59 = phi %"class.blink::Node"* [ %49, %42 ], [ %56, %51 ]
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %59, i64 0, i32 3, i32 0, i32 0
  %61 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::Document"*, %"class.blink::Document"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %63, i64 0, i32 2
  %65 = bitcast %"class.blink::UseCounter"* %64 to void (%"class.blink::UseCounter"*, i32)***
  %66 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %66, i64 3
  %68 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %67, align 8
  tail call void %68(%"class.blink::UseCounter"* %64, i32 3914) #7
  store i8 0, i8* %39, align 1
  br label %69

69:                                               ; preds = %36, %38, %58, %23, %22, %30, %29
  %70 = or i1 %5, %11
  ret i1 %70
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink19SVGTextLayoutEngine26AdvanceCurrentTextPositionEf(%"class.blink::SVGTextLayoutEngine"* nocapture, float) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8, !range !4
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 8, i32 0
  %7 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 8, i32 1
  %8 = select i1 %5, float* %6, float* %7
  %9 = select i1 %5, float* %6, float* %7
  %10 = load float, float* %8, align 4
  %11 = fadd float %10, %1
  store float %11, float* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19SVGTextLayoutEngine40ApplyRelativePositionAdjustmentsIfNeededERKNS_16SVGCharacterDataE(%"class.blink::SVGTextLayoutEngine"* nocapture, %"struct.blink::SVGCharacterData"* nocapture readonly dereferenceable(20)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.blink::SVGCharacterData", %"struct.blink::SVGCharacterData"* %1, i64 0, i32 2
  %4 = load float, float* %3, align 4
  %5 = fcmp ord float %4, 0.000000e+00
  %6 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %4, i32 0
  %7 = select i1 %5, <2 x float> %6, <2 x float> zeroinitializer
  %8 = getelementptr inbounds %"struct.blink::SVGCharacterData", %"struct.blink::SVGCharacterData"* %1, i64 0, i32 3
  %9 = load float, float* %8, align 4
  %10 = fcmp ord float %9, 0.000000e+00
  %11 = insertelement <2 x float> %7, float %9, i32 1
  %12 = select i1 %10, <2 x float> %11, <2 x float> %7
  %13 = extractelement <2 x float> %12, i32 0
  %14 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 8, i32 0
  %15 = load float, float* %14, align 4
  %16 = fadd float %15, %13
  store float %16, float* %14, align 4
  %17 = extractelement <2 x float> %12, i32 1
  %18 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 8, i32 1
  %19 = load float, float* %18, align 4
  %20 = fadd float %19, %17
  store float %20, float* %18, align 4
  %21 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 10
  %22 = load i8, i8* %21, align 1, !range !4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %38, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 9
  %26 = load i8, i8* %25, align 8, !range !4
  %27 = icmp eq i8 %26, 0
  %28 = shufflevector <2 x float> %12, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %29 = select i1 %27, <2 x float> %12, <2 x float> %28
  %30 = extractelement <2 x float> %29, i32 0
  %31 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 16
  %32 = load float, float* %31, align 4
  %33 = fadd float %32, %30
  store float %33, float* %31, align 4
  %34 = extractelement <2 x float> %29, i32 1
  %35 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 17
  %36 = load float, float* %35, align 8
  %37 = fadd float %36, %34
  store float %37, float* %35, align 8
  br label %38

38:                                               ; preds = %2, %24
  %39 = or i1 %5, %10
  ret i1 %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SVGTextLayoutEngine29ComputeCurrentFragmentMetricsEPNS_16SVGInlineTextBoxE(%"class.blink::SVGTextLayoutEngine"*, %"class.blink::SVGInlineTextBox"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::TextRun", align 8
  %4 = alloca %"class.blink::FloatRect", align 4
  %5 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %1, i64 0, i32 0, i32 0, i32 4, i32 0
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %7 = bitcast %"class.blink::TextRun"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 3
  %9 = bitcast %"class.blink::TextRun"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %8, align 8
  %10 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %10, align 4
  %11 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 5
  store i16 -21846, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 6, i64 0
  store i8 -86, i8* %12, align 2
  %13 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 6, i64 1
  store i8 -86, i8* %13, align 1
  %14 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %14, align 4
  %15 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 7, i32 1
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 5, i32 0
  %17 = bitcast i8* %15 to i64*
  store i64 -6148914691236517206, i64* %17, align 4
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %19 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6
  call void @_ZNK5blink16SVGInlineTextBox16ConstructTextRunERKNS_13ComputedStyleERKNS_15SVGTextFragmentE(%"class.blink::TextRun"* nonnull sret %3, %"class.blink::SVGInlineTextBox"* %1, %"class.blink::ComputedStyle"* dereferenceable(104) %18, %"struct.blink::SVGTextFragment"* dereferenceable(104) %19) #7
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 1, i32 8
  %21 = bitcast %"class.blink::LayoutObject"** %20 to float*
  %22 = load float, float* %21, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 1, i32 9
  %24 = bitcast %"class.blink::LayoutObject"** %23 to %"class.blink::Font"*
  %25 = bitcast %"class.blink::FloatRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %25, i8 0, i64 16, i1 false) #7
  %26 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %24) #7
  %27 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %26, i64 0, i32 2
  %28 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %27, align 8
  %29 = icmp eq %"class.blink::SimpleFontData"* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %2
  %31 = bitcast %"class.blink::LayoutObject"** %23 to %"class.blink::FontDescription"*
  %32 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %26, %"class.blink::FontDescription"* dereferenceable(80) %31) #7
  store %"class.blink::SimpleFontData"* %32, %"class.blink::SimpleFontData"** %27, align 8
  %33 = icmp eq %"class.blink::SimpleFontData"* %32, null
  br i1 %33, label %53, label %34

34:                                               ; preds = %2, %30
  %35 = phi %"class.blink::SimpleFontData"* [ %32, %30 ], [ %28, %2 ]
  %36 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %24, %"class.blink::TextRun"* nonnull dereferenceable(40) %3, %"class.WTF::HashSet.1664"* null, %"class.blink::FloatRect"* nonnull %4) #7
  %37 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6, i32 7
  call void @_ZN5blink13GlyphOverflow13SetFromBoundsERKNS_9FloatRectERKNS_4FontEf(%"struct.blink::GlyphOverflow"* %37, %"class.blink::FloatRect"* nonnull dereferenceable(16) %4, %"class.blink::Font"* dereferenceable(88) %24, float %36)
  %38 = bitcast %"struct.blink::GlyphOverflow"* %37 to <4 x float>*
  %39 = load <4 x float>, <4 x float>* %38, align 4
  %40 = insertelement <4 x float> undef, float %22, i32 0
  %41 = shufflevector <4 x float> %40, <4 x float> undef, <4 x i32> zeroinitializer
  %42 = fdiv <4 x float> %39, %41
  %43 = bitcast %"struct.blink::GlyphOverflow"* %37 to <4 x float>*
  store <4 x float> %42, <4 x float>* %43, align 4
  %44 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %35, i64 0, i32 1, i32 1
  %45 = load float, float* %44, align 4
  %46 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %35, i64 0, i32 1, i32 2
  %47 = load float, float* %46, align 4
  %48 = fadd float %45, %47
  %49 = fdiv float %48, %22
  %50 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6, i32 6
  store float %49, float* %50, align 8
  %51 = fdiv float %36, %22
  %52 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6, i32 5
  store float %51, float* %52, align 4
  br label %53

53:                                               ; preds = %30, %34
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #7
  ret void
}

declare void @_ZNK5blink16SVGInlineTextBox16ConstructTextRunERKNS_13ComputedStyleERKNS_15SVGTextFragmentE(%"class.blink::TextRun"* sret, %"class.blink::SVGInlineTextBox"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::SVGTextFragment"* dereferenceable(104)) local_unnamed_addr #4

declare float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), %"class.WTF::HashSet.1664"*, %"class.blink::FloatRect"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13GlyphOverflow13SetFromBoundsERKNS_9FloatRectERKNS_4FontEf(%"struct.blink::GlyphOverflow"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::Font"* dereferenceable(88), float) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %2) #7
  %14 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %13, i64 0, i32 2
  %15 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %14, align 8
  %16 = icmp eq %"class.blink::SimpleFontData"* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %2, i64 0, i32 0
  %19 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %13, %"class.blink::FontDescription"* dereferenceable(80) %18) #7
  store %"class.blink::SimpleFontData"* %19, %"class.blink::SimpleFontData"** %14, align 8
  %20 = icmp eq %"class.blink::SimpleFontData"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %4, %17
  %22 = phi %"class.blink::SimpleFontData"* [ %19, %17 ], [ %15, %4 ]
  %23 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %22, i64 0, i32 1, i32 1
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %22, i64 0, i32 1, i32 2
  %26 = load float, float* %25, align 4
  br label %27

27:                                               ; preds = %17, %21
  %28 = phi float [ %24, %21 ], [ 0.000000e+00, %17 ]
  %29 = phi float [ %26, %21 ], [ 0.000000e+00, %17 ]
  %30 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30)
  store float 0.000000e+00, float* %5, align 4
  %31 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31)
  %32 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 0, i32 1
  %33 = load float, float* %32, align 4
  %34 = fsub float -0.000000e+00, %33
  %35 = fsub float %34, %28
  store float %35, float* %6, align 4
  %36 = fcmp ogt float %35, 0.000000e+00
  %37 = select i1 %36, float* %6, float* %5
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %0, i64 0, i32 2
  %41 = bitcast float* %40 to i32*
  store i32 %39, i32* %41, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30)
  %42 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42)
  store float 0.000000e+00, float* %7, align 4
  %43 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43)
  %44 = load float, float* %32, align 4
  %45 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1, i32 1
  %46 = load float, float* %45, align 4
  %47 = fadd float %44, %46
  %48 = fsub float %47, %29
  store float %48, float* %8, align 4
  %49 = fcmp ogt float %48, 0.000000e+00
  %50 = select i1 %49, float* %8, float* %7
  %51 = bitcast float* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %0, i64 0, i32 3
  %54 = bitcast float* %53 to i32*
  store i32 %52, i32* %54, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42)
  %55 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55)
  store float 0.000000e+00, float* %9, align 4
  %56 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56)
  %57 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 0, i32 0
  %58 = load float, float* %57, align 4
  %59 = fsub float -0.000000e+00, %58
  store float %59, float* %10, align 4
  %60 = fcmp olt float %58, 0.000000e+00
  %61 = select i1 %60, float* %10, float* %9
  %62 = bitcast float* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = bitcast %"struct.blink::GlyphOverflow"* %0 to i32*
  store i32 %63, i32* %64, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55)
  %65 = bitcast float* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65)
  store float 0.000000e+00, float* %11, align 4
  %66 = bitcast float* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66)
  %67 = load float, float* %57, align 4
  %68 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1, i32 0
  %69 = load float, float* %68, align 4
  %70 = fadd float %67, %69
  %71 = fsub float %70, %3
  store float %71, float* %12, align 4
  %72 = fcmp ogt float %71, 0.000000e+00
  %73 = select i1 %72, float* %12, float* %11
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %0, i64 0, i32 1
  %77 = bitcast float* %76 to i32*
  store i32 %75, i32* %77, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SVGTextLayoutEngine18RecordTextFragmentEPNS_16SVGInlineTextBoxE(%"class.blink::SVGTextLayoutEngine"*, %"class.blink::SVGInlineTextBox"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::SVGTextFragment", align 8
  %4 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 7, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6
  %7 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = sub i32 %5, %8
  %10 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %9, 1073741823
  %13 = and i32 %11, -1073741824
  %14 = or i32 %13, %12
  store i32 %14, i32* %10, align 8
  tail call void @_ZN5blink19SVGTextLayoutEngine29ComputeCurrentFragmentMetricsEPNS_16SVGInlineTextBoxE(%"class.blink::SVGTextLayoutEngine"* %0, %"class.blink::SVGInlineTextBox"* %1)
  %15 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %1, i64 0, i32 3
  %16 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %30, label %21, !prof !3

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.WTF::Vector.1642", %"class.WTF::Vector.1642"* %15, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::SVGTextFragment"*, %"struct.blink::SVGTextFragment"** %22, align 8
  %24 = zext i32 %17 to i64
  %25 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %23, i64 %24
  %26 = bitcast %"struct.blink::SVGTextFragment"* %25 to i8*
  %27 = bitcast %"struct.blink::SVGTextFragment"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 104, i1 false) #7
  %28 = load i32, i32* %16, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %16, align 4
  br label %32

30:                                               ; preds = %2
  tail call void @_ZN3WTF6VectorIN5blink15SVGTextFragmentELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1642"* %15, %"struct.blink::SVGTextFragment"* dereferenceable(104) %6) #7
  %31 = bitcast %"struct.blink::SVGTextFragment"* %6 to i8*
  br label %32

32:                                               ; preds = %21, %30
  %33 = phi i8* [ %27, %21 ], [ %31, %30 ]
  %34 = bitcast %"struct.blink::SVGTextFragment"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %34) #7
  %35 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %3, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 44, i1 false) #7
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %35) #7
  %36 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %3, i64 0, i32 9
  store float 1.000000e+00, float* %36, align 8
  %37 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %3, i64 0, i32 10
  store float 0.000000e+00, float* %37, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* nonnull align 8 %34, i64 104, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %34) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SVGTextLayoutEngine19BeginTextPathLayoutEPNS_16SVGInlineFlowBoxE(%"class.blink::SVGTextLayoutEngine"* nocapture, %"class.blink::SVGInlineFlowBox"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SVGTextLayoutEngine", align 8
  %4 = alloca %"class.blink::LineLayoutSVGTextPath", align 8
  %5 = alloca %"class.blink::SVGTextPathChunkBuilder", align 8
  %6 = alloca %"class.blink::SVGLengthContext", align 8
  %7 = bitcast %"class.blink::SVGTextLayoutEngine"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %7) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (<{ %"class.WTF::Vector.1623"*, i32, i32, i32, [4 x i8], %"class.WTF::Vector.1639", { i32, i32, i32, float, float, float, float, %"struct.blink::GlyphOverflow", [4 x i8], %"class.blink::AffineTransform", float, float }, %"class.blink::SVGInlineTextMetricsIterator", %"class.blink::FloatPoint", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.1649", float, float, float, float, float, [4 x i8] }>* @__const._ZN5blink19SVGTextLayoutEngine19BeginTextPathLayoutEPNS_16SVGInlineFlowBoxE.line_layout to i8*), i64 208, i1 false)
  %8 = bitcast %"class.blink::SVGTextLayoutEngine"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::SVGTextLayoutEngine"* %3 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 2
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 3
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 5
  %15 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 6, i32 8
  %16 = bitcast %"class.WTF::Vector.1639"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 60, i1 false) #7
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %15) #7
  %17 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 6, i32 9
  store float 1.000000e+00, float* %17, align 8
  %18 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 6, i32 10
  %19 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 14
  %20 = bitcast %"class.std::__1::unique_ptr.1649"* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 16
  store float 0.000000e+00, float* %21, align 4
  %22 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 17
  store float 0.000000e+00, float* %22, align 8
  %23 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 18
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 19
  %25 = bitcast float* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 32, i1 false) #7
  store float 1.000000e+00, float* %24, align 8
  %26 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 11
  %27 = load i8, i8* %26, align 2, !range !4
  %28 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 11
  store i8 %27, i8* %28, align 2
  %29 = bitcast %"class.blink::SVGInlineFlowBox"* %1 to %"class.blink::InlineFlowBox"*
  call void @_ZN5blink19SVGTextLayoutEngine27LayoutCharactersInTextBoxesEPNS_13InlineFlowBoxE(%"class.blink::SVGTextLayoutEngine"* nonnull %3, %"class.blink::InlineFlowBox"* %29)
  %30 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 10
  store i8 1, i8* %30, align 1
  %31 = bitcast %"class.blink::LineLayoutSVGTextPath"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.blink::LineLayoutSVGTextPath", %"class.blink::LineLayoutSVGTextPath"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::SVGInlineFlowBox", %"class.blink::SVGInlineFlowBox"* %1, i64 0, i32 0, i32 0, i32 4, i32 0
  %34 = bitcast %"class.blink::LayoutObject"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.blink::LineLayoutSVGTextPath"* %4 to i64*
  store i64 %35, i64* %36, align 8
  %37 = inttoptr i64 %35 to %"class.blink::LayoutSVGTextPath"*
  %38 = call %"class.blink::PathPositionMapper"* @_ZNK5blink17LayoutSVGTextPath10LayoutPathEv(%"class.blink::LayoutSVGTextPath"* %37) #7
  %39 = ptrtoint %"class.blink::PathPositionMapper"* %38 to i64
  %40 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 14
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.1649", %"class.std::__1::unique_ptr.1649"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PathPositionMapper"*, %"class.blink::PathPositionMapper"** %41, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.1649"* %40 to i64*
  store i64 %39, i64* %43, align 8
  %44 = icmp eq %"class.blink::PathPositionMapper"* %42, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %2
  %46 = getelementptr inbounds %"class.blink::PathPositionMapper", %"class.blink::PathPositionMapper"* %42, i64 0, i32 0, i32 1
  call void @_ZN13SkPathMeasureD1Ev(%class.SkPathMeasure* %46) #7
  %47 = getelementptr inbounds %"class.blink::PathPositionMapper", %"class.blink::PathPositionMapper"* %42, i64 0, i32 0, i32 0
  call void @_ZN6SkPathD1Ev(%class.SkPath* %47) #7
  %48 = bitcast %"class.blink::PathPositionMapper"* %42 to i8*
  call void @free(i8* %48) #7
  %49 = load %"class.blink::PathPositionMapper"*, %"class.blink::PathPositionMapper"** %41, align 8
  br label %50

50:                                               ; preds = %45, %2
  %51 = phi %"class.blink::PathPositionMapper"* [ %49, %45 ], [ %38, %2 ]
  %52 = icmp eq %"class.blink::PathPositionMapper"* %51, null
  br i1 %52, label %115, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.blink::PathPositionMapper", %"class.blink::PathPositionMapper"* %51, i64 0, i32 2
  %55 = bitcast float* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 15
  %58 = bitcast float* %57 to i32*
  store i32 %56, i32* %58, align 8
  %59 = bitcast %"class.blink::SVGTextPathChunkBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #7
  %60 = getelementptr inbounds %"class.blink::SVGTextPathChunkBuilder", %"class.blink::SVGTextPathChunkBuilder"* %5, i64 0, i32 0, i32 0
  store i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds %"class.blink::SVGTextPathChunkBuilder", %"class.blink::SVGTextPathChunkBuilder"* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %61, align 8
  %62 = getelementptr inbounds %"class.blink::SVGTextPathChunkBuilder", %"class.blink::SVGTextPathChunkBuilder"* %5, i64 0, i32 2
  store i32 -1431655766, i32* %62, align 4
  call void @_ZN5blink23SVGTextPathChunkBuilderC1Ev(%"class.blink::SVGTextPathChunkBuilder"* nonnull %5) #7
  %63 = getelementptr inbounds %"class.blink::SVGTextPathChunkBuilder", %"class.blink::SVGTextPathChunkBuilder"* %5, i64 0, i32 0
  call void @_ZN5blink19SVGTextChunkBuilder17ProcessTextChunksERKN3WTF6VectorIPNS_16SVGInlineTextBoxELj0ENS1_18PartitionAllocatorEEE(%"class.blink::SVGTextChunkBuilder"* nonnull %63, %"class.WTF::Vector.1639"* dereferenceable(16) %14) #7
  %64 = getelementptr inbounds %"class.blink::LineLayoutSVGTextPath", %"class.blink::LineLayoutSVGTextPath"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = call %"class.blink::SVGTextContentElement"* @_ZN5blink21SVGTextContentElement25ElementFromLineLayoutItemERKNS_14LineLayoutItemE(%"class.blink::LineLayoutItem"* nonnull dereferenceable(8) %64) #7
  %66 = icmp eq %"class.blink::SVGTextContentElement"* %65, null
  br i1 %66, label %67, label %69

67:                                               ; preds = %53
  %68 = load float, float* %61, align 8
  br label %106

69:                                               ; preds = %53
  %70 = bitcast %"class.blink::SVGLengthContext"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #7
  %71 = getelementptr inbounds %"class.blink::SVGLengthContext", %"class.blink::SVGLengthContext"* %6, i64 0, i32 0
  store %"class.blink::SVGElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGElement"*), %"class.blink::SVGElement"** %71, align 8
  %72 = getelementptr inbounds %"class.blink::SVGTextContentElement", %"class.blink::SVGTextContentElement"* %65, i64 0, i32 0, i32 0
  call void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"* nonnull %6, %"class.blink::SVGElement"* %72) #7
  %73 = getelementptr inbounds %"class.blink::SVGTextContentElement", %"class.blink::SVGTextContentElement"* %65, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::SVGAnimatedEnumeration"*, %"class.blink::SVGAnimatedEnumeration"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::SVGAnimatedEnumeration", %"class.blink::SVGAnimatedEnumeration"* %74, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %76 = load %"class.blink::SVGEnumeration"*, %"class.blink::SVGEnumeration"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::SVGEnumeration", %"class.blink::SVGEnumeration"* %76, i64 0, i32 1
  %78 = load i16, i16* %77, align 8
  %79 = getelementptr inbounds %"class.blink::SVGTextContentElement", %"class.blink::SVGTextContentElement"* %65, i64 0, i32 2
  %80 = load i8, i8* %79, align 8, !range !4
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #7
  %83 = load float, float* %61, align 8
  br label %106

84:                                               ; preds = %69
  %85 = getelementptr inbounds %"class.blink::SVGTextContentElement", %"class.blink::SVGTextContentElement"* %65, i64 0, i32 1, i32 0, i32 0
  %86 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %86, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %88 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %87, align 8
  %89 = call float @_ZNK5blink9SVGLength5ValueERKNS_16SVGLengthContextE(%"class.blink::SVGLength"* %88, %"class.blink::SVGLengthContext"* nonnull dereferenceable(8) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #7
  %90 = load float, float* %61, align 8
  %91 = fcmp une float %89, 0.000000e+00
  br i1 %91, label %92, label %106

92:                                               ; preds = %84
  %93 = icmp eq i16 %78, 1
  br i1 %93, label %94, label %103

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 18
  store float 0.000000e+00, float* %95, align 4
  %96 = load i32, i32* %62, align 4
  %97 = icmp ugt i32 %96, 1
  br i1 %97, label %98, label %106

98:                                               ; preds = %94
  %99 = fsub float %89, %90
  %100 = add i32 %96, -1
  %101 = uitofp i32 %100 to float
  %102 = fdiv float %99, %101
  store float %102, float* %95, align 4
  br label %106

103:                                              ; preds = %92
  %104 = fdiv float %89, %90
  %105 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 19
  store float %104, float* %105, align 8
  br label %106

106:                                              ; preds = %82, %67, %103, %98, %94, %84
  %107 = phi float [ %90, %84 ], [ %89, %94 ], [ %89, %98 ], [ %89, %103 ], [ %68, %67 ], [ %83, %82 ]
  %108 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %109 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %108, i64 0, i32 5, i32 0
  %110 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %109, align 8
  %111 = call float @_ZN5blink24CalculateTextAnchorShiftERKNS_13ComputedStyleEf(%"class.blink::ComputedStyle"* dereferenceable(104) %110, float %107) #7
  %112 = load float, float* %57, align 8
  %113 = fadd float %111, %112
  store float %113, float* %57, align 8
  %114 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 16
  store float %113, float* %114, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #7
  br label %115

115:                                              ; preds = %50, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  %116 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 14, i32 0, i32 0, i32 0
  %117 = load %"class.blink::PathPositionMapper"*, %"class.blink::PathPositionMapper"** %116, align 8
  store %"class.blink::PathPositionMapper"* null, %"class.blink::PathPositionMapper"** %116, align 8
  %118 = icmp eq %"class.blink::PathPositionMapper"* %117, null
  br i1 %118, label %123, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::PathPositionMapper", %"class.blink::PathPositionMapper"* %117, i64 0, i32 0, i32 1
  call void @_ZN13SkPathMeasureD1Ev(%class.SkPathMeasure* %120) #7
  %121 = getelementptr inbounds %"class.blink::PathPositionMapper", %"class.blink::PathPositionMapper"* %117, i64 0, i32 0, i32 0
  call void @_ZN6SkPathD1Ev(%class.SkPath* %121) #7
  %122 = bitcast %"class.blink::PathPositionMapper"* %117 to i8*
  call void @free(i8* %122) #7
  br label %123

123:                                              ; preds = %119, %115
  %124 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %125 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %124, align 8
  %126 = icmp eq %"class.blink::SVGInlineTextBox"** %125, null
  %127 = bitcast %"class.blink::SVGInlineTextBox"** %125 to i8*
  br i1 %126, label %134, label %128, !prof !2

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %3, i64 0, i32 5, i32 0, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %133, label %132, !prof !3

132:                                              ; preds = %128
  store i32 0, i32* %129, align 4
  br label %133

133:                                              ; preds = %132, %128
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %127) #7
  store %"class.blink::SVGInlineTextBox"** null, %"class.blink::SVGInlineTextBox"*** %124, align 8
  br label %134

134:                                              ; preds = %123, %133
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %7) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SVGTextLayoutEngine27LayoutCharactersInTextBoxesEPNS_13InlineFlowBoxE(%"class.blink::SVGTextLayoutEngine"*, %"class.blink::InlineFlowBox"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LineLayoutItem", align 8
  %4 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 11
  %5 = load i8, i8* %4, align 2, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %26

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::LineLayoutItem"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %1, i64 0, i32 0, i32 4, i32 0
  %10 = bitcast %"class.blink::LayoutObject"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::LineLayoutItem"* %3 to i64*
  store i64 %11, i64* %12, align 8
  %13 = call %"class.blink::SVGTextContentElement"* @_ZN5blink21SVGTextContentElement25ElementFromLineLayoutItemERKNS_14LineLayoutItemE(%"class.blink::LineLayoutItem"* nonnull dereferenceable(8) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  %14 = icmp eq %"class.blink::SVGTextContentElement"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.blink::SVGTextContentElement", %"class.blink::SVGTextContentElement"* %13, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::SVGAnimatedEnumeration"*, %"class.blink::SVGAnimatedEnumeration"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::SVGAnimatedEnumeration", %"class.blink::SVGAnimatedEnumeration"* %17, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::SVGEnumeration"*, %"class.blink::SVGEnumeration"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::SVGEnumeration", %"class.blink::SVGEnumeration"* %19, i64 0, i32 1
  %21 = load i16, i16* %20, align 8
  %22 = icmp eq i16 %21, 1
  br i1 %22, label %23, label %26

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.blink::SVGTextContentElement", %"class.blink::SVGTextContentElement"* %13, i64 0, i32 2
  %25 = load i8, i8* %24, align 8, !range !4
  br label %26

26:                                               ; preds = %23, %15, %7, %2
  %27 = phi i8 [ 1, %2 ], [ 0, %15 ], [ 0, %7 ], [ %25, %23 ]
  %28 = load i8, i8* %4, align 1, !range !4
  store i8 %27, i8* %4, align 1
  %29 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 12
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %1, i64 0, i32 2
  %31 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %30, align 8
  %32 = icmp eq %"class.blink::InlineBox"* %31, null
  br i1 %32, label %42, label %33

33:                                               ; preds = %26
  %34 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names12kTextPathTagE, align 8
  %35 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 10
  %37 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 15
  %39 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 16
  %40 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 18
  %41 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 19
  br label %46

42:                                               ; preds = %96, %26
  %43 = icmp eq i8* %4, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %42
  store i8 %28, i8* %4, align 1
  br label %45

45:                                               ; preds = %42, %44
  ret void

46:                                               ; preds = %33, %96
  %47 = phi %"class.blink::InlineBox"* [ %31, %33 ], [ %98, %96 ]
  %48 = bitcast %"class.blink::InlineBox"* %47 to i1 (%"class.blink::InlineBox"*)***
  %49 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %49, i64 17
  %51 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %50, align 8
  %52 = call zeroext i1 %51(%"class.blink::InlineBox"* nonnull %47) #7
  br i1 %52, label %53, label %55

53:                                               ; preds = %46
  %54 = bitcast %"class.blink::InlineBox"* %47 to %"class.blink::SVGInlineTextBox"*
  call void @_ZN5blink19SVGTextLayoutEngine19LayoutInlineTextBoxEPNS_16SVGInlineTextBoxE(%"class.blink::SVGTextLayoutEngine"* %0, %"class.blink::SVGInlineTextBox"* nonnull %54)
  store i8 0, i8* %29, align 1
  br label %96

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %47, i64 0, i32 4, i32 0
  %57 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 4
  %59 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %58 to i96*
  %60 = load i96, i96* %59, align 4
  %61 = and i96 %60, 16777216
  %62 = icmp eq i96 %61, 0
  br i1 %62, label %63, label %96

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 6, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, null
  br i1 %66, label %96, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.blink::InlineBox"* %47 to %"class.blink::SVGInlineFlowBox"*
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %65, i64 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 48
  %72 = icmp eq i32 %71, 32
  br i1 %72, label %73, label %92

73:                                               ; preds = %67
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %75 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %65, i64 1, i32 2
  %76 = bitcast %"class.blink::Member.318"* %75 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %77, i64 0, i32 3, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %79, %81
  br i1 %82, label %83, label %92

83:                                               ; preds = %73
  call void @_ZN5blink19SVGTextLayoutEngine19BeginTextPathLayoutEPNS_16SVGInlineFlowBoxE(%"class.blink::SVGTextLayoutEngine"* %0, %"class.blink::SVGInlineFlowBox"* nonnull %68)
  %84 = bitcast %"class.blink::InlineBox"* %47 to %"class.blink::InlineFlowBox"*
  call void @_ZN5blink19SVGTextLayoutEngine27LayoutCharactersInTextBoxesEPNS_13InlineFlowBoxE(%"class.blink::SVGTextLayoutEngine"* %0, %"class.blink::InlineFlowBox"* nonnull %84)
  store i8 0, i8* %36, align 1
  %85 = load %"class.blink::PathPositionMapper"*, %"class.blink::PathPositionMapper"** %37, align 8
  store %"class.blink::PathPositionMapper"* null, %"class.blink::PathPositionMapper"** %37, align 8
  %86 = icmp eq %"class.blink::PathPositionMapper"* %85, null
  br i1 %86, label %91, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::PathPositionMapper", %"class.blink::PathPositionMapper"* %85, i64 0, i32 0, i32 1
  call void @_ZN13SkPathMeasureD1Ev(%class.SkPathMeasure* %88) #7
  %89 = getelementptr inbounds %"class.blink::PathPositionMapper", %"class.blink::PathPositionMapper"* %85, i64 0, i32 0, i32 0
  call void @_ZN6SkPathD1Ev(%class.SkPath* %89) #7
  %90 = bitcast %"class.blink::PathPositionMapper"* %85 to i8*
  call void @free(i8* %90) #7
  br label %91

91:                                               ; preds = %83, %87
  store float 0.000000e+00, float* %38, align 8
  store float 0.000000e+00, float* %39, align 4
  store float 0.000000e+00, float* %40, align 4
  store float 1.000000e+00, float* %41, align 8
  br label %94

92:                                               ; preds = %67, %73
  %93 = bitcast %"class.blink::InlineBox"* %47 to %"class.blink::InlineFlowBox"*
  call void @_ZN5blink19SVGTextLayoutEngine27LayoutCharactersInTextBoxesEPNS_13InlineFlowBoxE(%"class.blink::SVGTextLayoutEngine"* %0, %"class.blink::InlineFlowBox"* nonnull %93)
  br label %94

94:                                               ; preds = %92, %91
  %95 = phi i8 [ 0, %92 ], [ 1, %91 ]
  store i8 %95, i8* %29, align 1
  br label %96

96:                                               ; preds = %55, %53, %94, %63
  %97 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %47, i64 0, i32 1
  %98 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %97, align 8
  %99 = icmp eq %"class.blink::InlineBox"* %98, null
  br i1 %99, label %42, label %46
}

declare void @_ZN5blink23SVGTextPathChunkBuilderC1Ev(%"class.blink::SVGTextPathChunkBuilder"*) unnamed_addr #4

declare void @_ZN5blink19SVGTextChunkBuilder17ProcessTextChunksERKN3WTF6VectorIPNS_16SVGInlineTextBoxELj0ENS1_18PartitionAllocatorEEE(%"class.blink::SVGTextChunkBuilder"*, %"class.WTF::Vector.1639"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.blink::SVGTextContentElement"* @_ZN5blink21SVGTextContentElement25ElementFromLineLayoutItemERKNS_14LineLayoutItemE(%"class.blink::LineLayoutItem"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"*, %"class.blink::SVGElement"*) unnamed_addr #4

declare float @_ZNK5blink9SVGLength5ValueERKNS_16SVGLengthContextE(%"class.blink::SVGLength"*, %"class.blink::SVGLengthContext"* dereferenceable(8)) local_unnamed_addr #4

declare float @_ZN5blink24CalculateTextAnchorShiftERKNS_13ComputedStyleEf(%"class.blink::ComputedStyle"* dereferenceable(104), float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SVGTextLayoutEngine17EndTextPathLayoutEv(%"class.blink::SVGTextLayoutEngine"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 10
  store i8 0, i8* %2, align 1
  %3 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PathPositionMapper"*, %"class.blink::PathPositionMapper"** %3, align 8
  store %"class.blink::PathPositionMapper"* null, %"class.blink::PathPositionMapper"** %3, align 8
  %5 = icmp eq %"class.blink::PathPositionMapper"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::PathPositionMapper", %"class.blink::PathPositionMapper"* %4, i64 0, i32 0, i32 1
  tail call void @_ZN13SkPathMeasureD1Ev(%class.SkPathMeasure* %7) #7
  %8 = getelementptr inbounds %"class.blink::PathPositionMapper", %"class.blink::PathPositionMapper"* %4, i64 0, i32 0, i32 0
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %8) #7
  %9 = bitcast %"class.blink::PathPositionMapper"* %4 to i8*
  tail call void @free(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 15
  store float 0.000000e+00, float* %11, align 8
  %12 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 16
  store float 0.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 18
  store float 0.000000e+00, float* %13, align 4
  %14 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 19
  store float 1.000000e+00, float* %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SVGTextLayoutEngine19LayoutInlineTextBoxEPNS_16SVGInlineTextBoxE(%"class.blink::SVGTextLayoutEngine"*, %"class.blink::SVGInlineTextBox"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SVGInlineTextBox"*, align 8
  store %"class.blink::SVGInlineTextBox"* %1, %"class.blink::SVGInlineTextBox"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %1, i64 0, i32 0, i32 0, i32 4, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %1, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = ptrtoint %"class.blink::SVGInlineTextBox"* %1 to i64
  br i1 %11, label %22, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  %19 = bitcast %"class.WTF::Vector.1642"* %8 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %"class.WTF::Vector.1642"* %8 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store i32 0, i32* %9, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %20) #7
  br label %22

22:                                               ; preds = %2, %18
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = and i160 %25, 15211807202738752817960438464512
  %27 = icmp ne i160 %26, 0
  %28 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 9
  %29 = zext i1 %27 to i8
  store i8 %29, i8* %28, align 8
  tail call void @_ZN5blink19SVGTextLayoutEngine22LayoutTextOnLineOrPathEPNS_16SVGInlineTextBoxENS_23LineLayoutSVGInlineTextERKNS_13ComputedStyleE(%"class.blink::SVGTextLayoutEngine"* %0, %"class.blink::SVGInlineTextBox"* %1, %"class.blink::LayoutObject"* %5, %"class.blink::ComputedStyle"* dereferenceable(104) %7)
  %30 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 10
  %31 = load i8, i8* %30, align 1, !range !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %48, label %40, !prof !3

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::Vector.1639", %"class.WTF::Vector.1639"* %34, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %41, align 8
  %43 = zext i32 %36 to i64
  %44 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %42, i64 %43
  %45 = bitcast %"class.blink::SVGInlineTextBox"** %44 to i64*
  store i64 %12, i64* %45, align 8
  %46 = load i32, i32* %35, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %35, align 4
  br label %49

48:                                               ; preds = %33
  call void @_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1639"* %34, %"class.blink::SVGInlineTextBox"** nonnull dereferenceable(8) %3) #7
  br label %49

49:                                               ; preds = %48, %40, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SVGTextLayoutEngine22LayoutTextOnLineOrPathEPNS_16SVGInlineTextBoxENS_23LineLayoutSVGInlineTextERKNS_13ComputedStyleE(%"class.blink::SVGTextLayoutEngine"*, %"class.blink::SVGInlineTextBox"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #3 align 2 {
  %5 = alloca %"struct.blink::SVGTextFragment", align 8
  %6 = alloca %"struct.blink::SVGTextFragment", align 8
  %7 = alloca %"class.blink::SVGTextLayoutEngineSpacing", align 8
  %8 = alloca %"class.blink::SVGTextLayoutEngineBaseline", align 8
  %9 = alloca %"class.blink::SVGTextMetrics", align 4
  %10 = alloca %"struct.blink::PointAndTangent", align 8
  %11 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 10
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %16 = load %"class.blink::PathPositionMapper"*, %"class.blink::PathPositionMapper"** %15, align 8
  %17 = icmp eq %"class.blink::PathPositionMapper"* %16, null
  br i1 %17, label %681, label %18

18:                                               ; preds = %14, %4
  %19 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 7
  %20 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %1, i64 0, i32 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"class.blink::SVGInlineTextMetricsIterator", %"class.blink::SVGInlineTextMetricsIterator"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  %24 = icmp eq %"class.blink::LayoutObject"* %23, null
  %25 = icmp ne %"class.blink::LayoutObject"* %23, %2
  %26 = or i1 %24, %25
  br i1 %26, label %30, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 7, i32 2
  %29 = load i32, i32* %28, align 4
  br label %33

30:                                               ; preds = %18
  store %"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject"** %22, align 8
  %31 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 7, i32 2
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 7, i32 1
  store i32 0, i32* %32, align 8
  br label %33

33:                                               ; preds = %30, %27
  %34 = phi i32 [ %29, %27 ], [ 0, %30 ]
  %35 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 7, i32 2
  %36 = icmp eq i32 %34, %21
  br i1 %36, label %70, label %37

37:                                               ; preds = %33
  %38 = icmp ugt i32 %34, %21
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  store %"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject"** %22, align 8
  store i32 0, i32* %35, align 4
  %40 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 7, i32 1
  store i32 0, i32* %40, align 8
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i32 [ 0, %39 ], [ %34, %37 ]
  %43 = icmp ult i32 %42, %21
  br i1 %43, label %44, label %70

44:                                               ; preds = %41
  %45 = bitcast %"class.blink::SVGInlineTextMetricsIterator"* %19 to %"class.blink::LayoutSVGInlineText"**
  %46 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 7, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 3
  %49 = bitcast %"class.blink::LayoutObject"* %48 to %"class.WTF::Vector.1632"*
  %50 = tail call dereferenceable(12) %"class.blink::SVGTextMetrics"* @_ZNK3WTF6VectorIN5blink14SVGTextMetricsELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1632"* %49, i32 %47) #7
  %51 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %50, i64 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = load i32, i32* %35, align 4
  %54 = add i32 %53, %52
  store i32 %54, i32* %35, align 4
  %55 = load i32, i32* %46, align 8
  %56 = add i32 %55, 1
  store i32 %56, i32* %46, align 8
  %57 = icmp ult i32 %54, %21
  br i1 %57, label %58, label %70

58:                                               ; preds = %44, %58
  %59 = phi i32 [ %68, %58 ], [ %56, %44 ]
  %60 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %45, align 8
  %61 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %60, i64 0, i32 4
  %62 = tail call dereferenceable(12) %"class.blink::SVGTextMetrics"* @_ZNK3WTF6VectorIN5blink14SVGTextMetricsELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1632"* %61, i32 %59) #7
  %63 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %62, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = load i32, i32* %35, align 4
  %66 = add i32 %65, %64
  store i32 %66, i32* %35, align 4
  %67 = load i32, i32* %46, align 8
  %68 = add i32 %67, 1
  store i32 %68, i32* %46, align 8
  %69 = icmp ult i32 %66, %21
  br i1 %69, label %58, label %70

70:                                               ; preds = %58, %44, %33, %41
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %72, i64 0, i32 1, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %74, i64 0, i32 1
  %76 = bitcast %"class.blink::SVGTextLayoutEngineSpacing"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* align 8 bitcast ({ %"class.blink::Font"*, i16, [2 x i8], float }* @__const._ZN5blink19SVGTextLayoutEngine22LayoutTextOnLineOrPathEPNS_16SVGInlineTextBoxENS_23LineLayoutSVGInlineTextERKNS_13ComputedStyleE.spacing_layout to i8*), i64 16, i1 false)
  %77 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %78 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %78, i64 0, i32 2, i32 0, i32 0
  %80 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %80, i64 0, i32 6
  %82 = load float, float* %81, align 8
  call void @_ZN5blink26SVGTextLayoutEngineSpacingC1ERKNS_4FontEf(%"class.blink::SVGTextLayoutEngineSpacing"* nonnull %7, %"class.blink::Font"* dereferenceable(88) %75, float %82) #7
  %83 = bitcast %"class.blink::SVGTextLayoutEngineBaseline"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #7
  %84 = getelementptr inbounds %"class.blink::SVGTextLayoutEngineBaseline", %"class.blink::SVGTextLayoutEngineBaseline"* %8, i64 0, i32 0
  store %"class.blink::Font"* inttoptr (i64 -6148914691236517206 to %"class.blink::Font"*), %"class.blink::Font"** %84, align 8
  %85 = getelementptr inbounds %"class.blink::SVGTextLayoutEngineBaseline", %"class.blink::SVGTextLayoutEngineBaseline"* %8, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %85, align 8
  %86 = getelementptr inbounds %"class.blink::SVGTextLayoutEngineBaseline", %"class.blink::SVGTextLayoutEngineBaseline"* %8, i64 0, i32 2, i64 0
  %87 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 1, i32 9
  %88 = bitcast %"class.blink::LayoutObject"** %87 to %"class.blink::Font"*
  %89 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 1, i32 8
  %90 = bitcast %"class.blink::LayoutObject"** %89 to float*
  %91 = bitcast i8* %86 to i32*
  store i32 -1431655766, i32* %91, align 4
  %92 = load float, float* %90, align 8
  call void @_ZN5blink27SVGTextLayoutEngineBaselineC1ERKNS_4FontEf(%"class.blink::SVGTextLayoutEngineBaseline"* nonnull %8, %"class.blink::Font"* dereferenceable(88) %88, float %92) #7
  %93 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 9
  %94 = load i8, i8* %93, align 8, !range !4
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %103

96:                                               ; preds = %70
  %97 = load i8, i8* %11, align 1, !range !4
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 11
  %101 = load i8, i8* %100, align 2, !range !4
  %102 = icmp ne i8 %101, 0
  br label %103

103:                                              ; preds = %96, %70, %99
  %104 = phi i1 [ true, %96 ], [ true, %70 ], [ %102, %99 ]
  %105 = call float @_ZNK5blink27SVGTextLayoutEngineBaseline22CalculateBaselineShiftERKNS_13ComputedStyleE(%"class.blink::SVGTextLayoutEngineBaseline"* nonnull %8, %"class.blink::ComputedStyle"* dereferenceable(104) %3) #7
  %106 = load i8, i8* %93, align 8, !range !4
  %107 = icmp ne i8 %106, 0
  %108 = call float @_ZNK5blink27SVGTextLayoutEngineBaseline31CalculateAlignmentBaselineShiftEbNS_14LineLayoutItemE(%"class.blink::SVGTextLayoutEngineBaseline"* nonnull %8, i1 zeroext %107, %"class.blink::LayoutObject"* %2) #7
  %109 = fsub float %105, %108
  %110 = load i8, i8* %93, align 8, !range !4
  %111 = icmp eq i8 %110, 0
  %112 = fsub float -0.000000e+00, %109
  %113 = select i1 %111, float 0.000000e+00, float %109
  %114 = select i1 %111, float %112, float 0.000000e+00
  %115 = load i32, i32* %20, align 8
  %116 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %1, i64 0, i32 0, i32 4
  %117 = load i16, i16* %116, align 4
  %118 = zext i16 %117 to i32
  %119 = add i32 %115, %118
  %120 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 7, i32 1
  %121 = bitcast %"class.blink::SVGInlineTextMetricsIterator"* %19 to %"class.blink::LayoutSVGInlineText"**
  %122 = bitcast %"class.blink::SVGTextMetrics"* %9 to i8*
  %123 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %9, i64 0, i32 0
  %124 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %9, i64 0, i32 1
  %125 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %9, i64 0, i32 2
  %126 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 2
  %127 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 8, i32 0
  %128 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 8, i32 1
  %129 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 15
  %130 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 16
  %131 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 12
  %132 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 0
  %133 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %1, i64 0, i32 2
  %134 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 17
  %135 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 1, i32 4, i32 0, i64 4
  %136 = bitcast i8* %135 to %"class.WTF::StringImpl"**
  %137 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %74, i64 0, i32 1, i32 0, i32 12, i32 0
  %138 = bitcast %"struct.blink::FontDescription::BitFields"* %137 to i64*
  %139 = bitcast %"struct.blink::PointAndTangent"* %10 to i8*
  %140 = getelementptr inbounds %"struct.blink::PointAndTangent", %"struct.blink::PointAndTangent"* %10, i64 0, i32 0, i32 0
  %141 = getelementptr inbounds %"struct.blink::PointAndTangent", %"struct.blink::PointAndTangent"* %10, i64 0, i32 0, i32 1
  %142 = getelementptr inbounds %"struct.blink::PointAndTangent", %"struct.blink::PointAndTangent"* %10, i64 0, i32 1
  %143 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 19
  %144 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 18
  %145 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %146 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 3
  %147 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 8
  %148 = bitcast %"struct.blink::PointAndTangent"* %10 to i64*
  %149 = bitcast %"class.blink::FloatPoint"* %147 to i64*
  %150 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6
  %151 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %150, i64 0, i32 0
  %152 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6, i32 2
  %153 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %1, i64 0, i32 3
  %154 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %155 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %156 = getelementptr inbounds %"class.WTF::Vector.1642", %"class.WTF::Vector.1642"* %153, i64 0, i32 0, i32 0, i32 0
  %157 = bitcast %"struct.blink::SVGTextFragment"* %150 to i8*
  %158 = bitcast %"struct.blink::SVGTextFragment"* %5 to i8*
  %159 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %5, i64 0, i32 8
  %160 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %5, i64 0, i32 9
  %161 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %5, i64 0, i32 10
  %162 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6, i32 0
  %163 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6, i32 1
  %164 = bitcast %"struct.blink::PointAndTangent"* %10 to i32*
  %165 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6, i32 3
  %166 = bitcast float* %165 to i32*
  %167 = bitcast float* %141 to i32*
  %168 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6, i32 4
  %169 = bitcast float* %168 to i32*
  %170 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6, i32 8
  %171 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 6, i32 9
  br label %172

172:                                              ; preds = %646, %103
  %173 = phi float [ 0.000000e+00, %103 ], [ %647, %646 ]
  %174 = phi i8 [ 0, %103 ], [ %649, %646 ]
  %175 = phi i8 [ 0, %103 ], [ %650, %646 ]
  %176 = load i32, i32* %120, align 8
  %177 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %121, align 8
  %178 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %177, i64 0, i32 4, i32 0, i32 0, i32 2
  %179 = load i32, i32* %178, align 4
  %180 = icmp eq i32 %176, %179
  br i1 %180, label %652, label %181

181:                                              ; preds = %172
  %182 = load i32, i32* %35, align 4
  %183 = icmp ult i32 %182, %119
  br i1 %183, label %184, label %652

184:                                              ; preds = %181
  %185 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %177, i64 0, i32 4
  %186 = call dereferenceable(12) %"class.blink::SVGTextMetrics"* @_ZNK3WTF6VectorIN5blink14SVGTextMetricsELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1632"* %185, i32 %176) #7
  %187 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %186, i64 0, i32 0
  %188 = load float, float* %187, align 4
  %189 = fcmp une float %188, 0.000000e+00
  br i1 %189, label %209, label %190

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %186, i64 0, i32 1
  %192 = load float, float* %191, align 4
  %193 = fcmp une float %192, 0.000000e+00
  br i1 %193, label %209, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %186, i64 0, i32 2
  %196 = load i32, i32* %195, align 4
  %197 = icmp ult i32 %196, 2
  br i1 %197, label %198, label %209

198:                                              ; preds = %194
  %199 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %121, align 8
  %200 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %199, i64 0, i32 4
  %201 = load i32, i32* %120, align 8
  %202 = call dereferenceable(12) %"class.blink::SVGTextMetrics"* @_ZNK3WTF6VectorIN5blink14SVGTextMetricsELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1632"* %200, i32 %201) #7
  %203 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %202, i64 0, i32 2
  %204 = load i32, i32* %203, align 4
  %205 = load i32, i32* %35, align 4
  %206 = add i32 %205, %204
  store i32 %206, i32* %35, align 4
  %207 = load i32, i32* %120, align 8
  %208 = add i32 %207, 1
  store i32 %208, i32* %120, align 8
  br label %646

209:                                              ; preds = %184, %190, %194
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %122) #7
  store float 0xFFFFFFFFE0000000, float* %123, align 4
  store float 0xFFFFFFFFE0000000, float* %124, align 4
  store i32 -1431655766, i32* %125, align 4
  call void @_ZN5blink14SVGTextMetricsC1ENS0_11MetricsTypeE(%"class.blink::SVGTextMetrics"* nonnull %9, i32 0) #7
  %210 = call %"class.blink::LayoutSVGInlineText"* @_ZN5blink19SVGTextLayoutEngine30CurrentLogicalCharacterMetricsERNS_14SVGTextMetricsE(%"class.blink::SVGTextLayoutEngine"* %0, %"class.blink::SVGTextMetrics"* nonnull dereferenceable(12) %9)
  %211 = icmp eq %"class.blink::LayoutSVGInlineText"* %210, null
  br i1 %211, label %641, label %212

212:                                              ; preds = %209
  %213 = load i32, i32* %126, align 4
  %214 = add i32 %213, 1
  %215 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %210, i64 0, i32 3, i32 0, i32 0
  %216 = load %"struct.WTF::KeyValuePair.1631"*, %"struct.WTF::KeyValuePair.1631"** %215, align 8
  %217 = icmp eq %"struct.WTF::KeyValuePair.1631"* %216, null
  br i1 %217, label %289, label %218

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %210, i64 0, i32 3, i32 0, i32 1
  %220 = load i32, i32* %219, align 8
  %221 = add i32 %220, -1
  %222 = zext i32 %221 to i64
  %223 = shl i32 %214, 15
  %224 = sub i32 %213, %223
  %225 = lshr i32 %224, 10
  %226 = xor i32 %225, %224
  %227 = mul i32 %226, 9
  %228 = lshr i32 %227, 6
  %229 = xor i32 %228, %227
  %230 = shl i32 %229, 11
  %231 = xor i32 %230, -1
  %232 = add i32 %229, %231
  %233 = lshr i32 %232, 16
  %234 = xor i32 %233, %232
  %235 = and i32 %221, %234
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds %"struct.WTF::KeyValuePair.1631", %"struct.WTF::KeyValuePair.1631"* %216, i64 %236
  %238 = getelementptr inbounds %"struct.WTF::KeyValuePair.1631", %"struct.WTF::KeyValuePair.1631"* %237, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  %240 = icmp eq i32 %239, %214
  br i1 %240, label %269, label %241

241:                                              ; preds = %218
  %242 = xor i32 %234, -1
  %243 = lshr i32 %232, 23
  %244 = add i32 %243, %242
  %245 = shl i32 %244, 12
  %246 = xor i32 %245, %244
  %247 = lshr i32 %246, 7
  %248 = xor i32 %247, %246
  %249 = shl i32 %248, 2
  %250 = xor i32 %249, %248
  %251 = lshr i32 %250, 20
  %252 = xor i32 %251, %250
  %253 = or i32 %252, 1
  %254 = zext i32 %253 to i64
  br label %255

255:                                              ; preds = %260, %241
  %256 = phi i32 [ %239, %241 ], [ %267, %260 ]
  %257 = phi i64 [ %236, %241 ], [ %264, %260 ]
  %258 = phi i64 [ 0, %241 ], [ %262, %260 ]
  %259 = icmp eq i32 %256, 0
  br i1 %259, label %289, label %260

260:                                              ; preds = %255
  %261 = icmp eq i64 %258, 0
  %262 = select i1 %261, i64 %254, i64 %258
  %263 = add i64 %262, %257
  %264 = and i64 %263, %222
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.1631", %"struct.WTF::KeyValuePair.1631"* %216, i64 %264
  %266 = getelementptr inbounds %"struct.WTF::KeyValuePair.1631", %"struct.WTF::KeyValuePair.1631"* %265, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  %268 = icmp eq i32 %267, %214
  br i1 %268, label %269, label %255

269:                                              ; preds = %260, %218
  %270 = phi %"struct.WTF::KeyValuePair.1631"* [ %237, %218 ], [ %265, %260 ]
  %271 = icmp eq %"struct.WTF::KeyValuePair.1631"* %270, null
  br i1 %271, label %289, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds %"struct.WTF::KeyValuePair.1631", %"struct.WTF::KeyValuePair.1631"* %270, i64 0, i32 1, i32 0
  %274 = load float, float* %273, align 4
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.1631", %"struct.WTF::KeyValuePair.1631"* %270, i64 0, i32 1, i32 1
  %276 = load float, float* %275, align 4
  %277 = getelementptr inbounds %"struct.WTF::KeyValuePair.1631", %"struct.WTF::KeyValuePair.1631"* %270, i64 0, i32 1, i32 2
  %278 = load float, float* %277, align 4
  %279 = getelementptr inbounds %"struct.WTF::KeyValuePair.1631", %"struct.WTF::KeyValuePair.1631"* %270, i64 0, i32 1, i32 3
  %280 = load float, float* %279, align 4
  %281 = getelementptr inbounds %"struct.WTF::KeyValuePair.1631", %"struct.WTF::KeyValuePair.1631"* %270, i64 0, i32 1, i32 4
  %282 = load float, float* %281, align 4
  %283 = fcmp ord float %274, 0.000000e+00
  br i1 %283, label %284, label %285

284:                                              ; preds = %272
  store float %274, float* %127, align 4
  br label %285

285:                                              ; preds = %284, %272
  %286 = phi i1 [ true, %284 ], [ false, %272 ]
  %287 = fcmp ord float %276, 0.000000e+00
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  store float %276, float* %128, align 4
  br label %289

289:                                              ; preds = %255, %269, %212, %288, %285
  %290 = phi i1 [ true, %288 ], [ false, %285 ], [ false, %212 ], [ false, %269 ], [ false, %255 ]
  %291 = phi float [ %282, %288 ], [ %282, %285 ], [ 0x7FF8000000000000, %212 ], [ 0x7FF8000000000000, %269 ], [ 0x7FF8000000000000, %255 ]
  %292 = phi float [ %280, %288 ], [ %280, %285 ], [ 0x7FF8000000000000, %212 ], [ 0x7FF8000000000000, %269 ], [ 0x7FF8000000000000, %255 ]
  %293 = phi float [ %278, %288 ], [ %278, %285 ], [ 0x7FF8000000000000, %212 ], [ 0x7FF8000000000000, %269 ], [ 0x7FF8000000000000, %255 ]
  %294 = phi float [ %276, %288 ], [ %276, %285 ], [ 0x7FF8000000000000, %212 ], [ 0x7FF8000000000000, %269 ], [ 0x7FF8000000000000, %255 ]
  %295 = phi float [ %274, %288 ], [ %274, %285 ], [ 0x7FF8000000000000, %212 ], [ 0x7FF8000000000000, %269 ], [ 0x7FF8000000000000, %255 ]
  %296 = phi i1 [ %286, %288 ], [ %286, %285 ], [ false, %212 ], [ false, %269 ], [ false, %255 ]
  %297 = load i8, i8* %11, align 1, !range !4
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %310, label %299

299:                                              ; preds = %289
  %300 = load i8, i8* %93, align 8, !range !4
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %306, label %302

302:                                              ; preds = %299
  br i1 %290, label %303, label %341

303:                                              ; preds = %302
  %304 = load float, float* %129, align 8
  %305 = fadd float %294, %304
  store float %305, float* %130, align 4
  br label %341

306:                                              ; preds = %299
  br i1 %296, label %307, label %341

307:                                              ; preds = %306
  %308 = load float, float* %129, align 8
  %309 = fadd float %295, %308
  store float %309, float* %130, align 4
  br label %341

310:                                              ; preds = %289
  %311 = fcmp uno float %295, %294
  br i1 %311, label %312, label %341

312:                                              ; preds = %310
  %313 = load i8, i8* %131, align 1, !range !4
  %314 = icmp eq i8 %313, 0
  br i1 %314, label %341, label %315

315:                                              ; preds = %312
  %316 = load %"class.WTF::Vector.1623"*, %"class.WTF::Vector.1623"** %132, align 8
  %317 = call dereferenceable(8) %"class.blink::LayoutSVGInlineText"** @_ZNK3WTF6VectorIPN5blink19LayoutSVGInlineTextELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1623"* %316, i32 0) #7
  %318 = bitcast %"class.blink::LayoutSVGInlineText"** %317 to %"class.blink::LayoutObject"**
  %319 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %318, align 8
  %320 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %319, i64 0, i32 6, i32 0, i32 0
  %321 = load %"class.blink::Node"*, %"class.blink::Node"** %320, align 8
  %322 = icmp eq %"class.blink::Node"* %321, null
  br i1 %322, label %323, label %330

323:                                              ; preds = %315, %323
  %324 = phi %"class.blink::LayoutObject"* [ %326, %323 ], [ %319, %315 ]
  %325 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %324, i64 0, i32 7
  %326 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %325, align 8
  %327 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %326, i64 0, i32 6, i32 0, i32 0
  %328 = load %"class.blink::Node"*, %"class.blink::Node"** %327, align 8
  %329 = icmp eq %"class.blink::Node"* %328, null
  br i1 %329, label %323, label %330

330:                                              ; preds = %323, %315
  %331 = phi %"class.blink::Node"* [ %321, %315 ], [ %328, %323 ]
  %332 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %331, i64 0, i32 3, i32 0, i32 0
  %333 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %332, align 8
  %334 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %333, i64 0, i32 2, i32 0, i32 0
  %335 = load %"class.blink::Document"*, %"class.blink::Document"** %334, align 8
  %336 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %335, i64 0, i32 2
  %337 = bitcast %"class.blink::UseCounter"* %336 to void (%"class.blink::UseCounter"*, i32)***
  %338 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %337, align 8
  %339 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %338, i64 3
  %340 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %339, align 8
  call void %340(%"class.blink::UseCounter"* %336, i32 3914) #7
  store i8 0, i8* %131, align 1
  br label %341

341:                                              ; preds = %302, %303, %306, %307, %310, %312, %330
  %342 = load i32, i32* %35, align 4
  %343 = load i32, i32* %20, align 8
  %344 = icmp eq i32 %342, %343
  br i1 %344, label %345, label %352

345:                                              ; preds = %341
  %346 = load i32, i32* %126, align 4
  %347 = call zeroext i1 @_ZNK5blink19LayoutSVGInlineText27CharacterStartsNewTextChunkEi(%"class.blink::LayoutSVGInlineText"* nonnull %210, i32 %346) #7
  %348 = zext i1 %347 to i8
  %349 = load i8, i8* %133, align 4
  %350 = and i8 %349, -2
  %351 = or i8 %350, %348
  store i8 %351, i8* %133, align 4
  br label %352

352:                                              ; preds = %345, %341
  %353 = fcmp ord float %293, 0.000000e+00
  %354 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %293, i32 0
  %355 = select i1 %353, <2 x float> %354, <2 x float> zeroinitializer
  %356 = fcmp ord float %292, 0.000000e+00
  %357 = insertelement <2 x float> %355, float %292, i32 1
  %358 = select i1 %356, <2 x float> %357, <2 x float> %355
  %359 = extractelement <2 x float> %358, i32 0
  %360 = load float, float* %127, align 4
  %361 = fadd float %359, %360
  store float %361, float* %127, align 4
  %362 = extractelement <2 x float> %358, i32 1
  %363 = load float, float* %128, align 4
  %364 = fadd float %362, %363
  store float %364, float* %128, align 4
  %365 = load i8, i8* %11, align 1, !range !4
  %366 = icmp eq i8 %365, 0
  br i1 %366, label %378, label %367

367:                                              ; preds = %352
  %368 = load i8, i8* %93, align 8, !range !4
  %369 = icmp eq i8 %368, 0
  %370 = shufflevector <2 x float> %358, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %371 = select i1 %369, <2 x float> %358, <2 x float> %370
  %372 = extractelement <2 x float> %371, i32 0
  %373 = load float, float* %130, align 4
  %374 = fadd float %373, %372
  store float %374, float* %130, align 4
  %375 = extractelement <2 x float> %371, i32 1
  %376 = load float, float* %134, align 8
  %377 = fadd float %376, %375
  store float %377, float* %134, align 8
  br label %378

378:                                              ; preds = %352, %367
  %379 = or i1 %356, %353
  %380 = load i32, i32* %35, align 4
  %381 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %382 = icmp eq %"class.WTF::StringImpl"* %381, null
  br i1 %382, label %438, label %383

383:                                              ; preds = %378
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 1
  %385 = load i32, i32* %384, align 4
  %386 = icmp ugt i32 %385, %380
  br i1 %386, label %387, label %438

387:                                              ; preds = %383
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %389 = load atomic i32, i32* %388 monotonic, align 4
  %390 = and i32 %389, 1
  %391 = icmp eq i32 %390, 0
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 1
  br i1 %391, label %399, label %393

393:                                              ; preds = %387
  %394 = bitcast %"class.WTF::StringImpl"* %392 to i8*
  %395 = zext i32 %380 to i64
  %396 = getelementptr inbounds i8, i8* %394, i64 %395
  %397 = load i8, i8* %396, align 1
  %398 = zext i8 %397 to i32
  br label %438

399:                                              ; preds = %387
  %400 = bitcast %"class.WTF::StringImpl"* %392 to i16*
  %401 = zext i32 %380 to i64
  %402 = getelementptr inbounds i16, i16* %400, i64 %401
  %403 = load i16, i16* %402, align 2
  %404 = zext i16 %403 to i32
  %405 = and i32 %404, 63488
  %406 = icmp eq i32 %405, 55296
  br i1 %406, label %407, label %438

407:                                              ; preds = %399
  %408 = and i32 %404, 1024
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %424

410:                                              ; preds = %407
  %411 = add nuw i32 %380, 1
  %412 = icmp eq i32 %411, %385
  br i1 %412, label %438, label %413

413:                                              ; preds = %410
  %414 = zext i32 %411 to i64
  %415 = getelementptr inbounds i16, i16* %400, i64 %414
  %416 = load i16, i16* %415, align 2
  %417 = zext i16 %416 to i32
  %418 = and i32 %417, 64512
  %419 = icmp eq i32 %418, 56320
  br i1 %419, label %420, label %438

420:                                              ; preds = %413
  %421 = shl nuw nsw i32 %404, 10
  %422 = add nsw i32 %421, -56613888
  %423 = add nsw i32 %422, %417
  br label %438

424:                                              ; preds = %407
  %425 = icmp eq i32 %380, 0
  br i1 %425, label %438, label %426

426:                                              ; preds = %424
  %427 = add i32 %380, -1
  %428 = zext i32 %427 to i64
  %429 = getelementptr inbounds i16, i16* %400, i64 %428
  %430 = load i16, i16* %429, align 2
  %431 = zext i16 %430 to i32
  %432 = and i32 %431, 64512
  %433 = icmp eq i32 %432, 55296
  br i1 %433, label %434, label %438

434:                                              ; preds = %426
  %435 = shl nuw nsw i32 %431, 10
  %436 = add nuw nsw i32 %404, -56613888
  %437 = add nsw i32 %436, %435
  br label %438

438:                                              ; preds = %378, %383, %393, %399, %410, %413, %420, %424, %426, %434
  %439 = phi i32 [ %398, %393 ], [ 0, %383 ], [ %404, %399 ], [ %423, %420 ], [ %404, %413 ], [ %404, %410 ], [ %437, %434 ], [ %404, %426 ], [ %404, %424 ], [ 0, %378 ]
  %440 = load i64, i64* %138, align 8
  %441 = trunc i64 %440 to i32
  %442 = and i32 %441, 3
  %443 = icmp eq i32 %442, 2
  br i1 %443, label %444, label %447

444:                                              ; preds = %438
  %445 = call zeroext i1 @_ZN5blink9Character24IsUprightInMixedVerticalEi(i32 %439) #7
  %446 = select i1 %445, i32 3, i32 1
  br label %447

447:                                              ; preds = %438, %444
  %448 = phi i32 [ %446, %444 ], [ %442, %438 ]
  %449 = call float @_ZNK5blink14SVGTextMetrics7AdvanceENS_15FontOrientationE(%"class.blink::SVGTextMetrics"* %186, i32 %448) #7
  %450 = trunc i32 %439 to i16
  %451 = call float @_ZN5blink26SVGTextLayoutEngineSpacing19CalculateCSSSpacingEDs(%"class.blink::SVGTextLayoutEngineSpacing"* nonnull %7, i16 zeroext %450) #7
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %139) #7
  store float 0.000000e+00, float* %140, align 8
  store float 0.000000e+00, float* %141, align 4
  store float 0.000000e+00, float* %142, align 8
  %452 = load i8, i8* %11, align 1, !range !4
  %453 = icmp eq i8 %452, 0
  br i1 %453, label %505, label %454

454:                                              ; preds = %447
  %455 = load float, float* %143, align 8
  %456 = fmul float %449, %455
  %457 = fmul float %456, -5.000000e-01
  %458 = load float, float* %134, align 8
  %459 = insertelement <2 x float> undef, float %457, i32 0
  %460 = insertelement <2 x float> %459, float %458, i32 1
  %461 = load i8, i8* %93, align 8, !range !4
  %462 = icmp eq i8 %461, 0
  %463 = insertelement <2 x float> undef, float %458, i32 0
  %464 = insertelement <2 x float> %463, float %457, i32 1
  %465 = select i1 %462, <2 x float> %460, <2 x float> %464
  %466 = extractelement <2 x float> %465, i32 0
  %467 = fadd float %113, %466
  %468 = insertelement <2 x float> undef, float %467, i32 0
  %469 = extractelement <2 x float> %465, i32 1
  %470 = fadd float %114, %469
  %471 = insertelement <2 x float> %468, float %470, i32 1
  %472 = load float, float* %130, align 4
  %473 = fmul float %456, 5.000000e-01
  %474 = fadd float %473, %472
  %475 = load float, float* %144, align 4
  %476 = fadd float %456, %475
  %477 = fmul float %451, %455
  %478 = fadd float %477, %476
  %479 = fadd float %472, %478
  store float %479, float* %130, align 4
  %480 = load %"class.blink::PathPositionMapper"*, %"class.blink::PathPositionMapper"** %145, align 8
  %481 = call i32 @_ZN5blink18PathPositionMapper22PointAndNormalAtLengthEfRNS_15PointAndTangentE(%"class.blink::PathPositionMapper"* %480, float %474, %"struct.blink::PointAndTangent"* nonnull dereferenceable(12) %10) #7
  switch i32 %481, label %498 [
    i32 1, label %482
    i32 2, label %636
  ]

482:                                              ; preds = %454
  %483 = load i32, i32* %146, align 8
  %484 = add i32 %483, 1
  store i32 %484, i32* %146, align 8
  %485 = load i32, i32* %125, align 4
  %486 = load i32, i32* %126, align 4
  %487 = add i32 %486, %485
  store i32 %487, i32* %126, align 4
  %488 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %121, align 8
  %489 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %488, i64 0, i32 4
  %490 = load i32, i32* %120, align 8
  %491 = call dereferenceable(12) %"class.blink::SVGTextMetrics"* @_ZNK3WTF6VectorIN5blink14SVGTextMetricsELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1632"* %489, i32 %490) #7
  %492 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %491, i64 0, i32 2
  %493 = load i32, i32* %492, align 4
  %494 = load i32, i32* %35, align 4
  %495 = add i32 %494, %493
  store i32 %495, i32* %35, align 4
  %496 = load i32, i32* %120, align 8
  %497 = add i32 %496, 1
  store i32 %497, i32* %120, align 8
  br label %636

498:                                              ; preds = %454
  %499 = load i64, i64* %148, align 8
  store i64 %499, i64* %149, align 8
  %500 = load i8, i8* %93, align 8, !range !4
  %501 = icmp eq i8 %500, 0
  br i1 %501, label %514, label %502

502:                                              ; preds = %498
  %503 = load float, float* %142, align 8
  %504 = fadd float %503, -9.000000e+01
  store float %504, float* %142, align 8
  br label %514

505:                                              ; preds = %447
  %506 = load i64, i64* %149, align 4
  %507 = trunc i64 %506 to i32
  %508 = bitcast i32 %507 to float
  %509 = fadd float %113, %508
  store float %509, float* %140, align 8
  %510 = lshr i64 %506, 32
  %511 = trunc i64 %510 to i32
  %512 = bitcast i32 %511 to float
  %513 = fadd float %114, %512
  store float %513, float* %141, align 4
  br label %514

514:                                              ; preds = %502, %498, %505
  %515 = phi <2 x float> [ zeroinitializer, %505 ], [ %471, %498 ], [ %471, %502 ]
  %516 = fcmp ord float %291, 0.000000e+00
  br i1 %516, label %517, label %520

517:                                              ; preds = %514
  %518 = load float, float* %142, align 8
  %519 = fadd float %291, %518
  store float %519, float* %142, align 8
  br label %520

520:                                              ; preds = %517, %514
  %521 = or i1 %104, %379
  br i1 %521, label %530, label %522

522:                                              ; preds = %520
  %523 = load float, float* %142, align 8
  %524 = fcmp une float %523, 0.000000e+00
  %525 = fcmp une float %523, %173
  %526 = or i1 %524, %525
  br i1 %526, label %530, label %527

527:                                              ; preds = %522
  %528 = and i8 %174, 1
  %529 = icmp ne i8 %528, 0
  br label %530

530:                                              ; preds = %520, %527, %522
  %531 = phi i1 [ true, %522 ], [ true, %520 ], [ %529, %527 ]
  %532 = and i8 %175, 1
  %533 = icmp eq i8 %532, 0
  %534 = xor i1 %531, true
  %535 = or i1 %533, %534
  br i1 %535, label %556, label %536

536:                                              ; preds = %530
  %537 = load i32, i32* %35, align 4
  %538 = load i32, i32* %151, align 8
  %539 = sub i32 %537, %538
  %540 = load i32, i32* %152, align 8
  %541 = and i32 %539, 1073741823
  %542 = and i32 %540, -1073741824
  %543 = or i32 %542, %541
  store i32 %543, i32* %152, align 8
  call void @_ZN5blink19SVGTextLayoutEngine29ComputeCurrentFragmentMetricsEPNS_16SVGInlineTextBoxE(%"class.blink::SVGTextLayoutEngine"* %0, %"class.blink::SVGInlineTextBox"* %1) #7
  %544 = load i32, i32* %154, align 4
  %545 = load i32, i32* %155, align 8
  %546 = icmp eq i32 %544, %545
  br i1 %546, label %554, label %547, !prof !3

547:                                              ; preds = %536
  %548 = load %"struct.blink::SVGTextFragment"*, %"struct.blink::SVGTextFragment"** %156, align 8
  %549 = zext i32 %544 to i64
  %550 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %548, i64 %549
  %551 = bitcast %"struct.blink::SVGTextFragment"* %550 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %551, i8* align 8 %157, i64 104, i1 false) #7
  %552 = load i32, i32* %154, align 4
  %553 = add i32 %552, 1
  store i32 %553, i32* %154, align 4
  br label %555

554:                                              ; preds = %536
  call void @_ZN3WTF6VectorIN5blink15SVGTextFragmentELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1642"* %153, %"struct.blink::SVGTextFragment"* dereferenceable(104) %150) #7
  br label %555

555:                                              ; preds = %547, %554
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %158) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 0, i64 44, i1 false) #7
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %159) #7
  store float 1.000000e+00, float* %160, align 8
  store float 0.000000e+00, float* %161, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* nonnull align 8 %158, i64 104, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %158) #7
  br label %556

556:                                              ; preds = %530, %555
  %557 = phi i8 [ 0, %555 ], [ %174, %530 ]
  %558 = or i1 %533, %531
  br i1 %558, label %561, label %559

559:                                              ; preds = %556
  %560 = load i8, i8* %93, align 8, !range !4
  br label %606

561:                                              ; preds = %556
  %562 = load i32, i32* %35, align 4
  store i32 %562, i32* %162, align 8
  %563 = load i32, i32* %120, align 8
  store i32 %563, i32* %163, align 4
  %564 = load i32, i32* %164, align 8
  store i32 %564, i32* %166, align 4
  %565 = load i32, i32* %167, align 4
  store i32 %565, i32* %169, align 8
  %566 = load float, float* %142, align 8
  %567 = fcmp une float %566, 0.000000e+00
  br i1 %567, label %568, label %571

568:                                              ; preds = %561
  %569 = fpext float %566 to double
  %570 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform6RotateEd(%"class.blink::AffineTransform"* %170, double %569) #7
  br label %571

571:                                              ; preds = %568, %561
  %572 = extractelement <2 x float> %515, i32 0
  %573 = fcmp une float %572, 0.000000e+00
  %574 = extractelement <2 x float> %515, i32 1
  %575 = fcmp une float %574, 0.000000e+00
  %576 = or i1 %573, %575
  br i1 %576, label %577, label %581

577:                                              ; preds = %571
  %578 = fpext float %572 to double
  %579 = fpext float %574 to double
  %580 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* %170, double %578, double %579) #7
  br label %581

581:                                              ; preds = %571, %577
  %582 = load i8, i8* %93, align 8, !range !4
  %583 = icmp eq i8 %582, 0
  br i1 %583, label %587, label %584

584:                                              ; preds = %581
  %585 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform6RotateEd(%"class.blink::AffineTransform"* %170, double 9.000000e+01) #7
  %586 = load i8, i8* %93, align 8, !range !4
  br label %587

587:                                              ; preds = %581, %584
  %588 = phi i8 [ 0, %581 ], [ %586, %584 ]
  %589 = zext i8 %588 to i32
  %590 = load i32, i32* %152, align 8
  %591 = shl nuw i32 %589, 31
  %592 = and i32 %590, 2147483647
  %593 = or i32 %592, %591
  store i32 %593, i32* %152, align 8
  %594 = load i8, i8* %11, align 1, !range !4
  %595 = icmp eq i8 %594, 0
  br i1 %595, label %596, label %598

596:                                              ; preds = %587
  %597 = and i32 %593, -1073741825
  store i32 %597, i32* %152, align 8
  br label %606

598:                                              ; preds = %587
  %599 = load float, float* %143, align 8
  %600 = fcmp une float %599, 1.000000e+00
  %601 = zext i1 %600 to i32
  %602 = shl nuw nsw i32 %601, 30
  %603 = and i32 %593, -1073741825
  %604 = or i32 %602, %603
  store i32 %604, i32* %152, align 8
  br i1 %600, label %605, label %606

605:                                              ; preds = %598
  store float %599, float* %171, align 8
  br label %606

606:                                              ; preds = %559, %596, %598, %605
  %607 = phi i8 [ %588, %605 ], [ %588, %598 ], [ %560, %559 ], [ %588, %596 ]
  %608 = phi i8 [ 1, %605 ], [ 1, %598 ], [ %175, %559 ], [ 1, %596 ]
  %609 = fadd float %449, %451
  %610 = icmp eq i8 %607, 0
  %611 = select i1 %610, float* %127, float* %128
  %612 = select i1 %610, float* %127, float* %128
  %613 = load float, float* %611, align 4
  %614 = fadd float %609, %613
  store float %614, float* %612, align 4
  %615 = load i8, i8* %11, align 1, !range !4
  %616 = icmp eq i8 %615, 0
  %617 = fcmp une float %451, 0.000000e+00
  %618 = and i1 %617, %616
  %619 = select i1 %618, i8 1, i8 %557
  %620 = load i32, i32* %146, align 8
  %621 = add i32 %620, 1
  store i32 %621, i32* %146, align 8
  %622 = load i32, i32* %125, align 4
  %623 = load i32, i32* %126, align 4
  %624 = add i32 %623, %622
  store i32 %624, i32* %126, align 4
  %625 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %121, align 8
  %626 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %625, i64 0, i32 4
  %627 = load i32, i32* %120, align 8
  %628 = call dereferenceable(12) %"class.blink::SVGTextMetrics"* @_ZNK3WTF6VectorIN5blink14SVGTextMetricsELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1632"* %626, i32 %627) #7
  %629 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %628, i64 0, i32 2
  %630 = load i32, i32* %629, align 4
  %631 = load i32, i32* %35, align 4
  %632 = add i32 %631, %630
  store i32 %632, i32* %35, align 4
  %633 = load i32, i32* %120, align 8
  %634 = add i32 %633, 1
  store i32 %634, i32* %120, align 8
  %635 = load float, float* %142, align 8
  br label %636

636:                                              ; preds = %482, %454, %606
  %637 = phi float [ %635, %606 ], [ %173, %454 ], [ %173, %482 ]
  %638 = phi i32 [ 0, %606 ], [ 3, %454 ], [ 2, %482 ]
  %639 = phi i8 [ %619, %606 ], [ %174, %454 ], [ %174, %482 ]
  %640 = phi i8 [ %608, %606 ], [ %175, %454 ], [ %175, %482 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %139) #7
  br label %641

641:                                              ; preds = %209, %636
  %642 = phi float [ %173, %209 ], [ %637, %636 ]
  %643 = phi i32 [ 3, %209 ], [ %638, %636 ]
  %644 = phi i8 [ %174, %209 ], [ %639, %636 ]
  %645 = phi i8 [ %175, %209 ], [ %640, %636 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %122) #7
  br label %646

646:                                              ; preds = %641, %198
  %647 = phi float [ %173, %198 ], [ %642, %641 ]
  %648 = phi i32 [ 2, %198 ], [ %643, %641 ]
  %649 = phi i8 [ %174, %198 ], [ %644, %641 ]
  %650 = phi i8 [ %175, %198 ], [ %645, %641 ]
  %651 = icmp eq i32 %648, 3
  br i1 %651, label %652, label %172

652:                                              ; preds = %646, %172, %181
  %653 = phi i8 [ %175, %172 ], [ %650, %646 ], [ %175, %181 ]
  %654 = and i8 %653, 1
  %655 = icmp eq i8 %654, 0
  br i1 %655, label %680, label %656

656:                                              ; preds = %652
  %657 = load i32, i32* %35, align 4
  %658 = load i32, i32* %151, align 8
  %659 = sub i32 %657, %658
  %660 = load i32, i32* %152, align 8
  %661 = and i32 %659, 1073741823
  %662 = and i32 %660, -1073741824
  %663 = or i32 %662, %661
  store i32 %663, i32* %152, align 8
  call void @_ZN5blink19SVGTextLayoutEngine29ComputeCurrentFragmentMetricsEPNS_16SVGInlineTextBoxE(%"class.blink::SVGTextLayoutEngine"* %0, %"class.blink::SVGInlineTextBox"* %1) #7
  %664 = load i32, i32* %154, align 4
  %665 = load i32, i32* %155, align 8
  %666 = icmp eq i32 %664, %665
  br i1 %666, label %674, label %667, !prof !3

667:                                              ; preds = %656
  %668 = load %"struct.blink::SVGTextFragment"*, %"struct.blink::SVGTextFragment"** %156, align 8
  %669 = zext i32 %664 to i64
  %670 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %668, i64 %669
  %671 = bitcast %"struct.blink::SVGTextFragment"* %670 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %671, i8* align 8 %157, i64 104, i1 false) #7
  %672 = load i32, i32* %154, align 4
  %673 = add i32 %672, 1
  store i32 %673, i32* %154, align 4
  br label %675

674:                                              ; preds = %656
  call void @_ZN3WTF6VectorIN5blink15SVGTextFragmentELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1642"* %153, %"struct.blink::SVGTextFragment"* dereferenceable(104) %150) #7
  br label %675

675:                                              ; preds = %667, %674
  %676 = bitcast %"struct.blink::SVGTextFragment"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %676) #7
  %677 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %6, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %676, i8 0, i64 44, i1 false) #7
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %677) #7
  %678 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %6, i64 0, i32 9
  store float 1.000000e+00, float* %678, align 8
  %679 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %6, i64 0, i32 10
  store float 0.000000e+00, float* %679, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* nonnull align 8 %676, i64 104, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %676) #7
  br label %680

680:                                              ; preds = %652, %675
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #7
  br label %681

681:                                              ; preds = %14, %680
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SVGTextLayoutEngine12FinishLayoutEv(%"class.blink::SVGTextLayoutEngine"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SVGTextChunkBuilder", align 8
  %3 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 7
  %4 = bitcast %"class.blink::SVGInlineTextMetricsIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  %5 = bitcast %"class.blink::SVGTextChunkBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.blink::SVGTextChunkBuilder", %"class.blink::SVGTextChunkBuilder"* %2, i64 0, i32 0
  store i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 (...)*** %6, align 8
  call void @_ZN5blink19SVGTextChunkBuilderC1Ev(%"class.blink::SVGTextChunkBuilder"* nonnull %2) #7
  %7 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 5
  call void @_ZN5blink19SVGTextChunkBuilder17ProcessTextChunksERKN3WTF6VectorIPNS_16SVGInlineTextBoxELj0ENS1_18PartitionAllocatorEEE(%"class.blink::SVGTextChunkBuilder"* nonnull %2, %"class.WTF::Vector.1639"* dereferenceable(16) %7) #7
  %8 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  store i32 0, i32* %12, align 4
  br label %16

16:                                               ; preds = %15, %11
  %17 = bitcast %"class.WTF::Vector.1639"* %7 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"class.WTF::Vector.1639"* %7 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  store i32 0, i32* %8, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %18) #7
  br label %20

20:                                               ; preds = %1, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  ret void
}

declare void @_ZN5blink19SVGTextChunkBuilderC1Ev(%"class.blink::SVGTextChunkBuilder"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutSVGInlineText"* @_ZN5blink19SVGTextLayoutEngine19NextLogicalTextNodeEv(%"class.blink::SVGTextLayoutEngine"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, 1
  store i32 %4, i32* %2, align 8
  %5 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 0
  %6 = load %"class.WTF::Vector.1623"*, %"class.WTF::Vector.1623"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1623", %"class.WTF::Vector.1623"* %6, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %4, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 3
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 2
  store i32 0, i32* %12, align 4
  %13 = tail call dereferenceable(8) %"class.blink::LayoutSVGInlineText"** @_ZNK3WTF6VectorIPN5blink19LayoutSVGInlineTextELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1623"* %6, i32 %4) #7
  %14 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %13, align 8
  br label %15

15:                                               ; preds = %1, %10
  %16 = phi %"class.blink::LayoutSVGInlineText"* [ %14, %10 ], [ null, %1 ]
  ret %"class.blink::LayoutSVGInlineText"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutSVGInlineText"* @_ZN5blink19SVGTextLayoutEngine30CurrentLogicalCharacterMetricsERNS_14SVGTextMetricsE(%"class.blink::SVGTextLayoutEngine"* nocapture, %"class.blink::SVGTextMetrics"* nocapture dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 0
  %6 = load %"class.WTF::Vector.1623"*, %"class.WTF::Vector.1623"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1623", %"class.WTF::Vector.1623"* %6, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %4, %8
  br i1 %9, label %56, label %10

10:                                               ; preds = %2
  %11 = tail call dereferenceable(8) %"class.blink::LayoutSVGInlineText"** @_ZNK3WTF6VectorIPN5blink19LayoutSVGInlineTextELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1623"* %6, i32 %4) #7
  %12 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 3
  %14 = bitcast %"class.blink::SVGTextMetrics"* %1 to i8*
  %15 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %1, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %1, i64 0, i32 1
  %17 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 2
  br label %19

19:                                               ; preds = %33, %10
  %20 = phi %"class.blink::LayoutSVGInlineText"* [ %12, %10 ], [ %35, %33 ]
  %21 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %20, i64 0, i32 4, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %20, i64 0, i32 4
  %24 = load i32, i32* %13, align 8
  %25 = icmp eq i32 %24, %22
  br i1 %25, label %26, label %37

26:                                               ; preds = %49, %19
  %27 = load i32, i32* %3, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %3, align 8
  %29 = load %"class.WTF::Vector.1623"*, %"class.WTF::Vector.1623"** %5, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector.1623", %"class.WTF::Vector.1623"* %29, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %28, %31
  br i1 %32, label %56, label %33

33:                                               ; preds = %26
  store i32 0, i32* %13, align 8
  store i32 0, i32* %18, align 4
  %34 = tail call dereferenceable(8) %"class.blink::LayoutSVGInlineText"** @_ZNK3WTF6VectorIPN5blink19LayoutSVGInlineTextELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1623"* %29, i32 %28) #7
  %35 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutSVGInlineText"* %35, null
  br i1 %36, label %56, label %19

37:                                               ; preds = %19, %49
  %38 = phi i32 [ %51, %49 ], [ %24, %19 ]
  %39 = tail call dereferenceable(12) %"class.blink::SVGTextMetrics"* @_ZNK3WTF6VectorIN5blink14SVGTextMetricsELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1632"* %23, i32 %38)
  %40 = bitcast %"class.blink::SVGTextMetrics"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %40, i64 12, i1 false)
  %41 = load float, float* %15, align 4
  %42 = fcmp oeq float %41, 0.000000e+00
  %43 = load float, float* %16, align 4
  %44 = fcmp oeq float %43, 0.000000e+00
  %45 = and i1 %44, %42
  %46 = load i32, i32* %17, align 4
  %47 = icmp ult i32 %46, 2
  %48 = and i1 %45, %47
  br i1 %48, label %49, label %56

49:                                               ; preds = %37
  %50 = load i32, i32* %13, align 8
  %51 = add i32 %50, 1
  store i32 %51, i32* %13, align 8
  %52 = load i32, i32* %17, align 4
  %53 = load i32, i32* %18, align 4
  %54 = add i32 %53, %52
  store i32 %54, i32* %18, align 4
  %55 = icmp eq i32 %51, %22
  br i1 %55, label %26, label %37

56:                                               ; preds = %26, %33, %37, %2
  %57 = phi %"class.blink::LayoutSVGInlineText"* [ null, %2 ], [ %20, %37 ], [ null, %33 ], [ null, %26 ]
  ret %"class.blink::LayoutSVGInlineText"* %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(12) %"class.blink::SVGTextMetrics"* @_ZNK3WTF6VectorIN5blink14SVGTextMetricsELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1632"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1632", %"class.WTF::Vector.1632"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.1632", %"class.WTF::Vector.1632"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::SVGTextMetrics"*, %"class.blink::SVGTextMetrics"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %24, i64 %25
  ret %"class.blink::SVGTextMetrics"* %26
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink19SVGTextLayoutEngine29AdvanceToNextLogicalCharacterERKNS_14SVGTextMetricsE(%"class.blink::SVGTextLayoutEngine"* nocapture, %"class.blink::SVGTextMetrics"* nocapture readonly dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, 1
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::SVGTextLayoutEngine", %"class.blink::SVGTextLayoutEngine"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, %7
  store i32 %10, i32* %8, align 4
  ret void
}

declare void @_ZN5blink26SVGTextLayoutEngineSpacingC1ERKNS_4FontEf(%"class.blink::SVGTextLayoutEngineSpacing"*, %"class.blink::Font"* dereferenceable(88), float) unnamed_addr #4

declare void @_ZN5blink27SVGTextLayoutEngineBaselineC1ERKNS_4FontEf(%"class.blink::SVGTextLayoutEngineBaseline"*, %"class.blink::Font"* dereferenceable(88), float) unnamed_addr #4

declare float @_ZNK5blink27SVGTextLayoutEngineBaseline22CalculateBaselineShiftERKNS_13ComputedStyleE(%"class.blink::SVGTextLayoutEngineBaseline"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #4

declare float @_ZNK5blink27SVGTextLayoutEngineBaseline31CalculateAlignmentBaselineShiftEbNS_14LineLayoutItemE(%"class.blink::SVGTextLayoutEngineBaseline"*, i1 zeroext, %"class.blink::LayoutObject"*) local_unnamed_addr #4

declare void @_ZN5blink14SVGTextMetricsC1ENS0_11MetricsTypeE(%"class.blink::SVGTextMetrics"*, i32) unnamed_addr #4

declare zeroext i1 @_ZNK5blink19LayoutSVGInlineText27CharacterStartsNewTextChunkEi(%"class.blink::LayoutSVGInlineText"*, i32) local_unnamed_addr #4

declare float @_ZNK5blink14SVGTextMetrics7AdvanceENS_15FontOrientationE(%"class.blink::SVGTextMetrics"*, i32) local_unnamed_addr #4

declare float @_ZN5blink26SVGTextLayoutEngineSpacing19CalculateCSSSpacingEDs(%"class.blink::SVGTextLayoutEngineSpacing"*, i16 zeroext) local_unnamed_addr #4

declare i32 @_ZN5blink18PathPositionMapper22PointAndNormalAtLengthEfRNS_15PointAndTangentE(%"class.blink::PathPositionMapper"*, float, %"struct.blink::PointAndTangent"* dereferenceable(12)) local_unnamed_addr #4

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform6RotateEd(%"class.blink::AffineTransform"*, double) local_unnamed_addr #4

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"*, double, double) local_unnamed_addr #4

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #4

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #4

declare %"class.blink::PathPositionMapper"* @_ZNK5blink17LayoutSVGTextPath10LayoutPathEv(%"class.blink::LayoutSVGTextPath"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15SVGTextFragmentEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 20628716
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 20628716) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = mul i64 %0, 104
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink9Character24IsUprightInMixedVerticalEi(i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN13SkPathMeasureD1Ev(%class.SkPathMeasure*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::LayoutSVGInlineText"** @_ZNK3WTF6VectorIPN5blink19LayoutSVGInlineTextELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1623"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1623", %"class.WTF::Vector.1623"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.1623", %"class.WTF::Vector.1623"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutSVGInlineText"**, %"class.blink::LayoutSVGInlineText"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %24, i64 %25
  ret %"class.blink::LayoutSVGInlineText"** %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15SVGTextFragmentELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1642"*, %"struct.blink::SVGTextFragment"* dereferenceable(104)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1642", %"class.WTF::Vector.1642"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1642", %"class.WTF::Vector.1642"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::SVGTextFragment"*, %"struct.blink::SVGTextFragment"** %6, align 8
  %8 = icmp ugt %"struct.blink::SVGTextFragment"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::SVGTextFragment"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1642", %"class.WTF::Vector.1642"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::SVGTextFragment"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15SVGTextFragmentEEEmm(i64 %26) #7
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGTextFragmentEEEPKcv, i64 0, i64 0)) #7
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1642"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 104
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::SVGTextFragment"*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 104
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::SVGTextFragment"*, %"struct.blink::SVGTextFragment"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::SVGTextFragment"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::SVGTextFragment"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 104
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #7
  %47 = bitcast %"class.WTF::Vector.1642"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #7
  %51 = bitcast %"class.WTF::Vector.1642"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::SVGTextFragment"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::SVGTextFragment"* %1 to i64
  %56 = ptrtoint %"struct.blink::SVGTextFragment"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 104
  %59 = getelementptr inbounds %"class.WTF::Vector.1642", %"class.WTF::Vector.1642"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::SVGTextFragment"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15SVGTextFragmentEEEmm(i64 %71) #7
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGTextFragmentEEEPKcv, i64 0, i64 0)) #7
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1642"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::SVGTextFragment"*, %"struct.blink::SVGTextFragment"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::SVGTextFragment"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::SVGTextFragment"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 104
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #7
  %87 = bitcast %"class.WTF::Vector.1642"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #7
  %91 = bitcast %"class.WTF::Vector.1642"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 104
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::SVGTextFragment"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::SVGTextFragment"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::SVGTextFragment"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::SVGTextFragment"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %100, i64 %103
  %105 = bitcast %"struct.blink::SVGTextFragment"* %104 to i8*
  %106 = bitcast %"struct.blink::SVGTextFragment"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 104, i1 false) #7
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1639"*, %"class.blink::SVGInlineTextBox"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1639", %"class.WTF::Vector.1639"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1639", %"class.WTF::Vector.1639"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %6, align 8
  %8 = icmp ugt %"class.blink::SVGInlineTextBox"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %7, i64 %10
  %12 = icmp ugt %"class.blink::SVGInlineTextBox"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1639", %"class.WTF::Vector.1639"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::SVGInlineTextBox"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink16SVGInlineTextBoxEEEmm(i64 %26) #7
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink16SVGInlineTextBoxEEEPKcv, i64 0, i64 0)) #7
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1639"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::SVGInlineTextBox"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::SVGInlineTextBox"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::SVGInlineTextBox"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #7
  %47 = bitcast %"class.WTF::Vector.1639"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #7
  %51 = bitcast %"class.WTF::Vector.1639"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::SVGInlineTextBox"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::SVGInlineTextBox"** %1 to i64
  %56 = ptrtoint %"class.blink::SVGInlineTextBox"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1639", %"class.WTF::Vector.1639"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::SVGInlineTextBox"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink16SVGInlineTextBoxEEEmm(i64 %71) #7
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink16SVGInlineTextBoxEEEPKcv, i64 0, i64 0)) #7
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1639"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::SVGInlineTextBox"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::SVGInlineTextBox"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #7
  %87 = bitcast %"class.WTF::Vector.1639"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #7
  %91 = bitcast %"class.WTF::Vector.1639"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::SVGInlineTextBox"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::SVGInlineTextBox"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::SVGInlineTextBox"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::SVGInlineTextBox"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %100, i64 %103
  %105 = bitcast %"class.blink::SVGInlineTextBox"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::SVGInlineTextBox"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink16SVGInlineTextBoxEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
