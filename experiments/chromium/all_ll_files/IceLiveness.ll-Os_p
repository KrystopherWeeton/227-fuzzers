; ModuleID = '../../third_party/swiftshader/third_party/subzero/src/IceLiveness.cpp'
source_filename = "../../third_party/swiftshader/third_party/subzero/src/IceLiveness.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.Ice::Liveness" = type { %"class.std::__1::unique_ptr", %"struct.Ice::sz_allocator_scope", %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.278", %"class.std::__1::vector.296", %"class.std::__1::vector.280", %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl", i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::BumpPtrAllocatorImpl" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.0", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase" }
%"class.llvm::SmallVectorTemplateBase" = type { %"class.llvm::SmallVectorTemplateCommon" }
%"class.llvm::SmallVectorTemplateCommon" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion" }
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [8 x i8] }
%"struct.llvm::SmallVectorStorage" = type { [3 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::SmallVector.0" = type <{ %"class.llvm::SmallVectorImpl.1", %"struct.llvm::SmallVectorStorage.6", [7 x i8] }>
%"class.llvm::SmallVectorImpl.1" = type { %"class.llvm::SmallVectorTemplateBase.2" }
%"class.llvm::SmallVectorTemplateBase.2" = type { %"class.llvm::SmallVectorTemplateCommon.3" }
%"class.llvm::SmallVectorTemplateCommon.3" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.4" }
%"struct.llvm::AlignedCharArrayUnion.4" = type { %"struct.llvm::AlignedCharArray.5" }
%"struct.llvm::AlignedCharArray.5" = type { [16 x i8] }
%"struct.llvm::SmallVectorStorage.6" = type { i8 }
%"class.llvm::MallocAllocator" = type { i8 }
%"struct.Ice::sz_allocator_scope" = type { i8 }
%"class.Ice::Cfg" = type <{ %"class.std::__1::unique_ptr", %"class.Ice::GlobalContext"*, i32, i32, i32, [4 x i8], %"class.Ice::StringID", i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.Ice::CfgNode"*, %"class.std::__1::vector.196", i32, [4 x i8], %"class.std::__1::vector.201", %"class.std::__1::vector.201", %"class.std::__1::vector.201", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.138", %"class.std::__1::vector.243", %"class.Ice::CfgNode"*, %"class.std::__1::vector.249", i32, [4 x i8] }>
%"class.Ice::GlobalContext" = type { %"class.std::__1::mutex", %"class.llvm::BumpPtrAllocatorImpl", [16 x i8], %"class.std::__1::mutex", %"class.Ice::VariableDeclarationList", [8 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.12", %"class.std::__1::mutex", %"class.std::__1::unique_ptr.26", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::unique_ptr.51", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.57", %"class.std::__1::mutex", %"class.Ice::ErrorCode", %"class.std::__1::mutex", %"class.Ice::GlobalContext::CodeStats", %"class.std::__1::mutex", %"class.Ice::GlobalContext::TimerList", %"class.std::__1::mutex", %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"struct.std::__1::atomic", [63 x i8], %"class.std::__1::unique_ptr.118", i64, %"class.Ice::BoundedProducerConsumerQueue", %"class.Ice::BoundedProducerConsumerQueue.134", %"class.std::__1::unique_ptr.171", i8, %"class.std::__1::unique_ptr.177", i8, [15 x %"class.Ice::Constant"*], %"class.Ice::Constant"*, [36 x %"class.Ice::Constant"*], %"class.llvm::SmallVector.183", %"class.llvm::SmallVector.189", %"class.llvm::SmallVector.189" }
%"class.Ice::VariableDeclarationList" = type { %"class.std::__1::unique_ptr", %"class.std::__1::vector", %"class.std::__1::vector.12", %"class.std::__1::vector.19" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.Ice::VariableDeclaration"**, %"class.Ice::VariableDeclaration"**, %"class.std::__1::__compressed_pair.9" }
%"class.Ice::VariableDeclaration" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.Ice::VariableDeclaration"** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.std::__1::function"*, %"class.std::__1::function"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::function"* }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.Ice::ConstantPool"* }
%"class.Ice::ConstantPool" = type opaque
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.Ice::JumpTableData"*, %"class.Ice::JumpTableData"*, %"class.std::__1::__compressed_pair.66" }
%"class.Ice::JumpTableData" = type { %"class.Ice::StringID", %"class.Ice::StringID", i32, %"class.std::__1::vector.59" }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { i64*, i64*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { i64* }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.Ice::JumpTableData"* }
%"class.Ice::ErrorCode" = type <{ %"class.std::__1::error_code", i8, [7 x i8] }>
%"class.std::__1::error_code" = type { i32, %"class.std::__1::error_category"* }
%"class.std::__1::error_category" = type { i32 (...)** }
%"class.Ice::GlobalContext::CodeStats" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [6 x i32] }
%"class.Ice::GlobalContext::TimerList" = type { %"class.std::__1::vector.71" }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.Ice::TimerStack"*, %"class.Ice::TimerStack"*, %"class.std::__1::__compressed_pair.113" }
%"class.Ice::TimerStack" = type { %"class.std::__1::basic_string", double, double, i64, %"class.std::__1::map", %"class.std::__1::vector.85", %"class.std::__1::vector.92", %"class.std::__1::vector.106", %"class.std::__1::vector.94", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i64 }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.Ice::TimerStack::TimerTreeNode"*, %"class.Ice::TimerStack::TimerTreeNode"*, %"class.std::__1::__compressed_pair.101" }
%"class.Ice::TimerStack::TimerTreeNode" = type { %"class.std::__1::vector.94", i64, i32, double, i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.Ice::TimerStack::TimerTreeNode"* }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { double*, double*, %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { double* }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { i64*, i64*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { i64* }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.Ice::TimerStack"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.Ice::ELFObjectWriter"* }
%"class.Ice::ELFObjectWriter" = type opaque
%"class.Ice::BoundedProducerConsumerQueue" = type <{ [65536 x %"class.std::__1::unique_ptr.124"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.Ice::OptWorkItem"* }
%"class.Ice::OptWorkItem" = type { i32 (...)** }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.130, %union.anon.132, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.130 = type { i64 }
%union.anon.132 = type { i64 }
%"class.Ice::BoundedProducerConsumerQueue.134" = type <{ [128 x %"class.std::__1::unique_ptr.135"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.Ice::EmitterWorkItem"* }
%"class.Ice::EmitterWorkItem" = type { i32, i32, %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.Ice::Cfg"* }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.Ice::TargetDataLowering"* }
%"class.Ice::TargetDataLowering" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.Ice::Instrumentation"* }
%"class.Ice::Instrumentation" = type { i32 (...)**, %"class.Ice::GlobalContext"*, i8, %"class.std::__1::mutex", %"class.std::__1::condition_variable" }
%"class.Ice::Constant" = type <{ %"class.Ice::Operand", %"class.Ice::StringID", i8, i8, [6 x i8] }>
%"class.Ice::Operand" = type { i32 (...)**, i32, i32, i32, %"class.Ice::Variable"**, i8* }
%"class.llvm::SmallVector.183" = type { %"class.llvm::SmallVectorImpl.184", %"struct.llvm::SmallVectorStorage.188" }
%"class.llvm::SmallVectorImpl.184" = type { %"class.llvm::SmallVectorTemplateBase.185" }
%"class.llvm::SmallVectorTemplateBase.185" = type { %"class.llvm::SmallVectorTemplateCommon.186" }
%"class.llvm::SmallVectorTemplateCommon.186" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.187" }
%"struct.llvm::AlignedCharArrayUnion.187" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.188" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.187"] }
%"class.llvm::SmallVector.189" = type { %"class.llvm::SmallVectorImpl.190", %"struct.llvm::SmallVectorStorage.194" }
%"class.llvm::SmallVectorImpl.190" = type { %"class.llvm::SmallVectorTemplateBase.191" }
%"class.llvm::SmallVectorTemplateBase.191" = type { %"class.llvm::SmallVectorTemplateCommon.192" }
%"class.llvm::SmallVectorTemplateCommon.192" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.193" }
%"struct.llvm::AlignedCharArrayUnion.193" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.194" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.193"] }
%"class.Ice::StringID" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"**, %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199", %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.Ice::CfgNode"** }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"struct.Ice::sz_allocator" }
%"struct.Ice::sz_allocator" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.201" = type { %"class.std::__1::__vector_base.202" }
%"class.std::__1::__vector_base.202" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204", %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.Ice::Variable"** }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.Ice::sz_allocator.206" }
%"struct.Ice::sz_allocator.206" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.Ice::StringPool"* }
%"class.Ice::StringPool" = type { i64, %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.29", %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.45", [4 x i8] }>
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31", %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { float }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.Ice::Liveness"* }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.Ice::TargetLowering"* }
%"class.Ice::TargetLowering" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.Ice::VariablesMetadata"* }
%"class.Ice::VariablesMetadata" = type { %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.222" }
%"class.std::__1::vector.222" = type { %"class.std::__1::__vector_base.223" }
%"class.std::__1::__vector_base.223" = type { %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"*, %"class.std::__1::__compressed_pair.236" }
%"class.Ice::VariableTracking" = type <{ i32, i32, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::vector.224", %"class.Ice::Inst"*, %"class.Ice::RegWeight", [4 x i8] }>
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"class.Ice::Inst"**, %"class.Ice::Inst"**, %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.Ice::Inst"** }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.Ice::sz_allocator.235" }
%"struct.Ice::sz_allocator.235" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::Inst" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.226", i32, [4 x i8] }>
%"class.llvm::ilist_node" = type { %"class.llvm::ilist_node_impl" }
%"class.llvm::ilist_node_impl" = type { %"class.llvm::ilist_node_base" }
%"class.llvm::ilist_node_base" = type { %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"* }
%"class.Ice::Variable" = type { %"class.Ice::Operand", i32, %"class.Ice::StringID.302", i8, i8, i8, i8, i8, i8, %"class.Ice::RegNumT", %"class.Ice::RegNumT", i32, %"class.Ice::LiveRange", [1 x %"class.Ice::Variable"*], %"class.Ice::Variable"*, i8* }
%"class.Ice::StringID.302" = type { i64 }
%"class.Ice::RegNumT" = type { i32 }
%"class.Ice::LiveRange" = type { %"class.std::__1::vector.303", %"class.std::__1::unordered_map.310", %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector.303" = type { %"class.std::__1::__vector_base.304" }
%"class.std::__1::__vector_base.304" = type { %"struct.std::__1::pair.305"*, %"struct.std::__1::pair.305"*, %"class.std::__1::__compressed_pair.306" }
%"struct.std::__1::pair.305" = type { i32, i32 }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307", %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"struct.std::__1::pair.305"* }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.Ice::sz_allocator.309" }
%"struct.Ice::sz_allocator.309" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unordered_map.310" = type { %"class.std::__1::__hash_table.311" }
%"class.std::__1::__hash_table.311" = type <{ %"class.std::__1::unique_ptr.312", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.325", %"class.std::__1::__compressed_pair.330", [4 x i8] }>
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314", %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.std::__1::__hash_node_base.315"** }
%"struct.std::__1::__hash_node_base.315" = type { %"struct.std::__1::__hash_node_base.315"* }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.std::__1::__bucket_list_deallocator.317" }
%"class.std::__1::__bucket_list_deallocator.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"struct.Ice::sz_allocator.320" }
%"struct.Ice::sz_allocator.320" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322", %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"struct.std::__1::__hash_node_base.315" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"struct.Ice::sz_allocator.324" }
%"struct.Ice::sz_allocator.324" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair.305"* }
%"class.std::__1::vector.226" = type { %"class.std::__1::__vector_base.227" }
%"class.std::__1::__vector_base.227" = type { %"class.Ice::Operand"**, %"class.Ice::Operand"**, %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.Ice::Operand"** }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.Ice::sz_allocator.231" }
%"struct.Ice::sz_allocator.231" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::RegWeight" = type { i32 }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237", %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.Ice::VariableTracking"* }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.Ice::sz_allocator.239" }
%"struct.Ice::sz_allocator.239" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.Ice::Assembler"* }
%"class.Ice::Assembler" = type { i32 (...)**, i32, [4 x i8], %"class.llvm::BumpPtrAllocatorImpl.147", %"class.Ice::StringID", i8, i8, [6 x i8], %"class.Ice::AssemblerBuffer" }
%"class.llvm::BumpPtrAllocatorImpl.147" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.0", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.Ice::AssemblerBuffer" = type <{ i8, [7 x i8], i64, i64, i64, %"class.Ice::Assembler"*, %"class.std::__1::vector.150", i8, [7 x i8] }>
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"class.Ice::AssemblerFixup"**, %"class.Ice::AssemblerFixup"**, %"class.std::__1::__compressed_pair.153" }
%"class.Ice::AssemblerFixup" = type { i32 (...)**, i64, i32, i32, i8, %union.anon.152 }
%union.anon.152 = type { %"class.Ice::Constant"* }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.Ice::AssemblerFixup"** }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.Ice::VariableDeclarationList"* }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"class.Ice::InstJumpTable"**, %"class.Ice::InstJumpTable"**, %"class.std::__1::__compressed_pair.245" }
%"class.Ice::InstJumpTable" = type { %"class.Ice::InstHighLevel.base", i32, i32, %"class.Ice::CfgNode"**, %"class.Ice::StringID", %"class.Ice::StringID" }
%"class.Ice::InstHighLevel.base" = type { %"class.Ice::Inst.base" }
%"class.Ice::Inst.base" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.226", i32 }>
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246", %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.Ice::InstJumpTable"** }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.Ice::sz_allocator.248" }
%"struct.Ice::sz_allocator.248" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::CfgNode" = type { %"class.Ice::Cfg"*, i32, i32, %"class.Ice::StringID.195", i32, i8, i8, i8, i32, %"class.std::__1::vector.196", %"class.std::__1::vector.196", %"class.llvm::iplist", %"class.llvm::iplist", i8* }
%"class.Ice::StringID.195" = type { i64 }
%"class.llvm::iplist" = type { %"class.llvm::iplist_impl" }
%"class.llvm::iplist_impl" = type { %"class.llvm::simple_ilist" }
%"class.llvm::simple_ilist" = type { %"class.llvm::ilist_sentinel" }
%"class.llvm::ilist_sentinel" = type { %"class.llvm::ilist_node_impl" }
%"class.std::__1::vector.249" = type { %"class.std::__1::__vector_base.250" }
%"class.std::__1::__vector_base.250" = type { %"struct.Ice::Loop"*, %"struct.Ice::Loop"*, %"class.std::__1::__compressed_pair.274" }
%"struct.Ice::Loop" = type { %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.251" }
%"class.std::__1::__hash_table.251" = type <{ %"class.std::__1::unique_ptr.252", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.265", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254", %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.std::__1::__hash_node_base.255"** }
%"struct.std::__1::__hash_node_base.255" = type { %"struct.std::__1::__hash_node_base.255"* }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.std::__1::__bucket_list_deallocator.257" }
%"class.std::__1::__bucket_list_deallocator.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"struct.Ice::sz_allocator.260" }
%"struct.Ice::sz_allocator.260" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.255" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.Ice::sz_allocator.264" }
%"struct.Ice::sz_allocator.264" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275", %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.Ice::Loop"* }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.Ice::sz_allocator.277" }
%"struct.Ice::sz_allocator.277" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"*, %"class.std::__1::__compressed_pair.292" }
%"class.Ice::Liveness::LivenessNode" = type { i32, i32, %"class.std::__1::vector.280", %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl", %"class.std::__1::vector.286", %"class.std::__1::vector.286" }
%"class.std::__1::vector.286" = type { %"class.std::__1::__vector_base.287" }
%"class.std::__1::__vector_base.287" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.288" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289", %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.Ice::sz_allocator.291" }
%"struct.Ice::sz_allocator.291" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293", %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.Ice::Liveness::LivenessNode"* }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.Ice::sz_allocator.295" }
%"struct.Ice::sz_allocator.295" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { i32*, i32*, %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299", %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.299" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.Ice::sz_allocator.301" }
%"struct.Ice::sz_allocator.301" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.204", %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.Ice::sz_allocator.284" }
%"struct.Ice::sz_allocator.284" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::BitVectorTmpl" = type { i64*, i32, i32, %"struct.Ice::sz_allocator.285" }
%"struct.Ice::sz_allocator.285" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer" = type { %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"*, %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.293", %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"struct.Ice::sz_allocator.295"* }
%"struct.std::__1::pair.341" = type { i8*, i64 }

$_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE6resizeEm = comdat any

$_ZNSt3__16vectorIjN3Ice12sz_allocatorIjNS1_23LivenessAllocatorTraitsEEEE6resizeEm = comdat any

$_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE6assignEmRKS3_ = comdat any

$_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE6resizeEjb = comdat any

$_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE3setEjj = comdat any

$_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE17__destruct_at_endEPS3_ = comdat any

$_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS6_EE = comdat any

$_ZN3Ice12sz_allocatorINS_8Liveness12LivenessNodeENS_23LivenessAllocatorTraitsEE8allocateEm = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm = comdat any

$_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_ = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_ = comdat any

$_ZN3Ice8Liveness12LivenessNodeC2ERKS1_ = comdat any

$_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEEC2ERKS7_ = comdat any

$_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEC2ERKS2_ = comdat any

$_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEEC2ERKS7_ = comdat any

$_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE11__vallocateEm = comdat any

$_ZN3Ice12sz_allocatorIPNS_8VariableENS_23LivenessAllocatorTraitsEE8allocateEm = comdat any

$_ZN3Ice12sz_allocatorImNS_23LivenessAllocatorTraitsEE8allocateEm = comdat any

$_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEE11__vallocateEm = comdat any

$_ZN3Ice12sz_allocatorINSt3__14pairIjiEENS_23LivenessAllocatorTraitsEE8allocateEm = comdat any

$_ZNSt3__16vectorIjN3Ice12sz_allocatorIjNS1_23LivenessAllocatorTraitsEEEE8__appendEm = comdat any

$_ZN3Ice12sz_allocatorIjNS_23LivenessAllocatorTraitsEE8allocateEm = comdat any

$_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE4growEj = comdat any

$_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE15set_unused_bitsEb = comdat any

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice8Liveness12initInternalENSt3__111__wrap_iterIPKPNS_7CfgNodeEEENS2_IPKPNS_8VariableEEEb(%"class.Ice::Liveness"*, %"class.Ice::CfgNode"**, %"class.Ice::Variable"**, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.Ice::Variable"*, align 8
  %6 = alloca %"class.Ice::Variable"*, align 8
  %7 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 2
  %8 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %7, align 8
  %9 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %8, i64 0, i32 17
  %10 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %8, i64 0, i32 17, i32 0, i32 1
  %11 = bitcast %"class.Ice::Variable"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.201"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %8, i64 0, i32 14
  %19 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %8, i64 0, i32 14, i32 0, i32 1
  %20 = bitcast %"class.Ice::CfgNode"*** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.196"* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = lshr exact i64 %24, 3
  %26 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %8, i64 0, i32 24, i32 0, i32 0, i32 0
  %27 = load %"class.Ice::VariablesMetadata"*, %"class.Ice::VariablesMetadata"** %26, align 8
  %28 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 4
  %29 = and i64 %25, 4294967295
  tail call void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE6resizeEm(%"class.std::__1::vector.278"* %28, i64 %29) #6
  %30 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 5
  %31 = and i64 %16, 4294967295
  tail call void @_ZNSt3__16vectorIjN3Ice12sz_allocatorIjNS1_23LivenessAllocatorTraitsEEEE6resizeEm(%"class.std::__1::vector.296"* %30, i64 %31) #6
  %32 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %7, align 8
  %33 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %32, i64 0, i32 17, i32 0, i32 1
  %34 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %33, align 8
  %35 = icmp eq %"class.Ice::Variable"** %34, %2
  br i1 %35, label %38, label %36

36:                                               ; preds = %4
  %37 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %28, i64 0, i32 0, i32 0
  br label %40

38:                                               ; preds = %58, %4
  %39 = phi i32 [ 0, %4 ], [ %59, %58 ]
  br i1 %3, label %62, label %64

40:                                               ; preds = %36, %58
  %41 = phi i32 [ 0, %36 ], [ %59, %58 ]
  %42 = phi %"class.Ice::Variable"** [ %2, %36 ], [ %60, %58 ]
  %43 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %42, align 8
  %44 = tail call zeroext i1 @_ZNK3Ice17VariablesMetadata12isMultiBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %27, %"class.Ice::Variable"* %43) #7
  br i1 %44, label %45, label %47

45:                                               ; preds = %40
  %46 = add i32 %41, 1
  br label %58

47:                                               ; preds = %40
  %48 = tail call zeroext i1 @_ZNK3Ice17VariablesMetadata13isSingleBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %27, %"class.Ice::Variable"* %43) #7
  br i1 %48, label %49, label %58

49:                                               ; preds = %47
  %50 = tail call %"class.Ice::CfgNode"* @_ZNK3Ice17VariablesMetadata15getLocalUseNodeEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %27, %"class.Ice::Variable"* %43) #7
  %51 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %50, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = zext i32 %52 to i64
  %54 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %37, align 8
  %55 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %54, i64 %53, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = add i32 %56, 1
  store i32 %57, i32* %55, align 8
  br label %58

58:                                               ; preds = %47, %49, %45
  %59 = phi i32 [ %46, %45 ], [ %41, %49 ], [ %41, %47 ]
  %60 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %42, i64 1
  %61 = icmp eq %"class.Ice::Variable"** %60, %34
  br i1 %61, label %38, label %40

62:                                               ; preds = %38
  %63 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 10
  store i32 %39, i32* %63, align 4
  br label %64

64:                                               ; preds = %38, %62
  %65 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %7, align 8
  %66 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %65, i64 0, i32 14, i32 0, i32 1
  %67 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %66, align 8
  %68 = icmp eq %"class.Ice::CfgNode"** %67, %1
  br i1 %68, label %72, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %28, i64 0, i32 0, i32 0
  %71 = bitcast %"class.Ice::Variable"** %5 to i8*
  br label %73

72:                                               ; preds = %73, %64
  br i1 %3, label %87, label %93

73:                                               ; preds = %69, %73
  %74 = phi %"class.Ice::CfgNode"** [ %1, %69 ], [ %85, %73 ]
  %75 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %74, align 8
  %76 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %75, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = zext i32 %77 to i64
  %79 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %70, align 8
  %80 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 %78, i32 2
  %81 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 %78, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = zext i32 %82 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #8
  store %"class.Ice::Variable"* null, %"class.Ice::Variable"** %5, align 8
  call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE6assignEmRKS3_(%"class.std::__1::vector.280"* %80, i64 %83, %"class.Ice::Variable"** nonnull dereferenceable(8) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #8
  store i32 0, i32* %81, align 8
  %84 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 %78, i32 1
  store i32 0, i32* %84, align 4
  %85 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %74, i64 1
  %86 = icmp eq %"class.Ice::CfgNode"** %85, %67
  br i1 %86, label %72, label %73

87:                                               ; preds = %72
  %88 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 6
  %89 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 10
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i64
  %92 = bitcast %"class.Ice::Variable"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #8
  store %"class.Ice::Variable"* null, %"class.Ice::Variable"** %6, align 8
  call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE6assignEmRKS3_(%"class.std::__1::vector.280"* %88, i64 %91, %"class.Ice::Variable"** nonnull dereferenceable(8) %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #8
  br label %93

93:                                               ; preds = %87, %72
  %94 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 7
  call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE6resizeEjb(%"class.Ice::BitVectorTmpl"* %94, i32 %17, i1 zeroext false) #6
  %95 = call dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE3setEjj(%"class.Ice::BitVectorTmpl"* %94, i32 0, i32 %17) #6
  %96 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %7, align 8
  %97 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %96, i64 0, i32 17, i32 0, i32 1
  %98 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %97, align 8
  %99 = icmp eq %"class.Ice::Variable"** %98, %2
  br i1 %99, label %108, label %100

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.std::__1::vector.296", %"class.std::__1::vector.296"* %30, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %28, i64 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 10
  %104 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 6, i32 0, i32 0
  %105 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %94, i64 0, i32 0
  br label %115

106:                                              ; preds = %176
  %107 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %7, align 8
  br label %108

108:                                              ; preds = %106, %93
  %109 = phi %"class.Ice::Cfg"* [ %107, %106 ], [ %96, %93 ]
  %110 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %109, i64 0, i32 17, i32 0, i32 0
  %111 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %110, align 8
  %112 = icmp eq %"class.Ice::Variable"** %111, %2
  br i1 %112, label %182, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %94, i64 0, i32 0
  br label %191

115:                                              ; preds = %100, %176
  %116 = phi i32 [ 0, %100 ], [ %177, %176 ]
  %117 = phi %"class.Ice::Variable"** [ %2, %100 ], [ %178, %176 ]
  %118 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %117, align 8
  %119 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %118, i64 0, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = call zeroext i1 @_ZNK3Ice17VariablesMetadata12isMultiBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %27, %"class.Ice::Variable"* %118) #7
  br i1 %121, label %122, label %127

122:                                              ; preds = %115
  %123 = add i32 %116, 1
  %124 = zext i32 %116 to i64
  %125 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %104, align 8
  %126 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %125, i64 %124
  store %"class.Ice::Variable"* %118, %"class.Ice::Variable"** %126, align 8
  br label %149

127:                                              ; preds = %115
  %128 = call zeroext i1 @_ZNK3Ice17VariablesMetadata13isSingleBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %27, %"class.Ice::Variable"* %118) #7
  br i1 %128, label %133, label %129

129:                                              ; preds = %127
  %130 = zext i32 %120 to i64
  %131 = load i32*, i32** %101, align 8
  %132 = getelementptr inbounds i32, i32* %131, i64 %130
  store i32 -1, i32* %132, align 4
  br label %164

133:                                              ; preds = %127
  %134 = call %"class.Ice::CfgNode"* @_ZNK3Ice17VariablesMetadata15getLocalUseNodeEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %27, %"class.Ice::Variable"* %118) #7
  %135 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %134, i64 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = zext i32 %136 to i64
  %138 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %102, align 8
  %139 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %138, i64 %137, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = add i32 %140, 1
  store i32 %141, i32* %139, align 8
  %142 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %102, align 8
  %143 = zext i32 %140 to i64
  %144 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %142, i64 %137, i32 2, i32 0, i32 0
  %145 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %144, align 8
  %146 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %145, i64 %143
  store %"class.Ice::Variable"* %118, %"class.Ice::Variable"** %146, align 8
  %147 = load i32, i32* %103, align 4
  %148 = add i32 %147, %140
  br label %149

149:                                              ; preds = %133, %122
  %150 = phi i32 [ %123, %122 ], [ %116, %133 ]
  %151 = phi i32 [ %116, %122 ], [ %148, %133 ]
  %152 = zext i32 %120 to i64
  %153 = load i32*, i32** %101, align 8
  %154 = getelementptr inbounds i32, i32* %153, i64 %152
  store i32 %151, i32* %154, align 4
  %155 = icmp eq i32 %151, -1
  br i1 %155, label %164, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %118, i64 0, i32 5
  %158 = load i8, i8* %157, align 2, !range !2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %160, label %164

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %118, i64 0, i32 6
  %162 = load i8, i8* %161, align 1, !range !2
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %176, label %164

164:                                              ; preds = %160, %156, %129, %149
  %165 = phi i32 [ %116, %129 ], [ %150, %160 ], [ %150, %149 ], [ %150, %156 ]
  %166 = load i64*, i64** %105, align 8
  %167 = lshr i32 %120, 6
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds i64, i64* %166, i64 %168
  %170 = and i32 %120, 63
  %171 = zext i32 %170 to i64
  %172 = shl i64 1, %171
  %173 = xor i64 %172, -1
  %174 = load i64, i64* %169, align 8
  %175 = and i64 %174, %173
  store i64 %175, i64* %169, align 8
  br label %176

176:                                              ; preds = %160, %164
  %177 = phi i32 [ %165, %164 ], [ %150, %160 ]
  %178 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %117, i64 1
  %179 = icmp eq %"class.Ice::Variable"** %178, %98
  br i1 %179, label %106, label %115

180:                                              ; preds = %223
  %181 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %7, align 8
  br label %182

182:                                              ; preds = %180, %108
  %183 = phi %"class.Ice::Cfg"* [ %181, %180 ], [ %109, %108 ]
  %184 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 9
  store i32 0, i32* %184, align 8
  %185 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %183, i64 0, i32 14, i32 0, i32 1
  %186 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %185, align 8
  %187 = icmp eq %"class.Ice::CfgNode"** %186, %1
  br i1 %187, label %226, label %188

188:                                              ; preds = %182
  %189 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %28, i64 0, i32 0, i32 0
  %190 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 10
  br label %238

191:                                              ; preds = %113, %223
  %192 = phi %"class.Ice::Variable"** [ %111, %113 ], [ %224, %223 ]
  %193 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %192, align 8
  %194 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %193, i64 0, i32 1
  %195 = load i32, i32* %194, align 8
  %196 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %193, i64 0, i32 5
  %197 = load i8, i8* %196, align 2, !range !2
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %199, label %212

199:                                              ; preds = %191
  %200 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %193, i64 0, i32 6
  %201 = load i8, i8* %200, align 1, !range !2
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %203, label %212

203:                                              ; preds = %199
  br i1 %3, label %223, label %204

204:                                              ; preds = %203
  %205 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %193, i64 0, i32 9, i32 0
  %206 = load i32, i32* %205, align 8
  %207 = icmp eq i32 %206, -1
  br i1 %207, label %208, label %223

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %193, i64 0, i32 7
  %210 = load i8, i8* %209, align 4
  %211 = icmp eq i8 %210, 1
  br i1 %211, label %223, label %212

212:                                              ; preds = %199, %191, %208
  %213 = load i64*, i64** %114, align 8
  %214 = lshr i32 %195, 6
  %215 = zext i32 %214 to i64
  %216 = getelementptr inbounds i64, i64* %213, i64 %215
  %217 = and i32 %195, 63
  %218 = zext i32 %217 to i64
  %219 = shl i64 1, %218
  %220 = xor i64 %219, -1
  %221 = load i64, i64* %216, align 8
  %222 = and i64 %221, %220
  store i64 %222, i64* %216, align 8
  br label %223

223:                                              ; preds = %204, %212, %208, %203
  %224 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %192, i64 1
  %225 = icmp eq %"class.Ice::Variable"** %224, %2
  br i1 %225, label %180, label %191

226:                                              ; preds = %238, %182
  %227 = phi i32 [ 0, %182 ], [ %253, %238 ]
  %228 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 10
  %229 = load i32, i32* %228, align 4
  %230 = add i32 %227, %229
  %231 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 8, i32 2
  %232 = load i32, i32* %231, align 4
  %233 = shl i32 %232, 6
  %234 = icmp ult i32 %233, %230
  br i1 %234, label %235, label %237

235:                                              ; preds = %226
  %236 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 8
  call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE4growEj(%"class.Ice::BitVectorTmpl"* %236, i32 %230) #7
  br label %237

237:                                              ; preds = %226, %235
  ret void

238:                                              ; preds = %188, %238
  %239 = phi %"class.Ice::CfgNode"** [ %1, %188 ], [ %254, %238 ]
  %240 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %239, align 8
  %241 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %240, i64 0, i32 1
  %242 = load i32, i32* %241, align 8
  %243 = zext i32 %242 to i64
  %244 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %189, align 8
  %245 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %244, i64 %243, i32 3
  %246 = load i32, i32* %190, align 4
  call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE6resizeEjb(%"class.Ice::BitVectorTmpl"* %245, i32 %246, i1 zeroext false) #6
  %247 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %244, i64 %243, i32 4
  %248 = load i32, i32* %190, align 4
  call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE6resizeEjb(%"class.Ice::BitVectorTmpl"* %247, i32 %248, i1 zeroext false) #6
  %249 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %244, i64 %243, i32 0
  %250 = load i32, i32* %184, align 4
  %251 = load i32, i32* %249, align 4
  %252 = icmp ult i32 %250, %251
  %253 = select i1 %252, i32 %251, i32 %250
  store i32 %253, i32* %184, align 8
  %254 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %239, i64 1
  %255 = icmp eq %"class.Ice::CfgNode"** %254, %186
  br i1 %255, label %226, label %238
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE6resizeEm(%"class.std::__1::vector.278"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.Ice::Liveness::LivenessNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.278"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 152
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.Ice::Liveness::LivenessNode"*
  br i1 %10, label %12, label %14

12:                                               ; preds = %2
  %13 = sub i64 %1, %9
  tail call void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE8__appendEm(%"class.std::__1::vector.278"* %0, i64 %13) #6
  br label %18

14:                                               ; preds = %2
  %15 = icmp ugt i64 %9, %1
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %11, i64 %1
  tail call void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE17__destruct_at_endEPS3_(%"class.std::__1::vector.278"* %0, %"class.Ice::Liveness::LivenessNode"* %17) #7
  br label %18

18:                                               ; preds = %14, %16, %12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjN3Ice12sz_allocatorIjNS1_23LivenessAllocatorTraitsEEEE6resizeEm(%"class.std::__1::vector.296"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.296", %"class.std::__1::vector.296"* %0, i64 0, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.296"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to i32*
  br i1 %10, label %12, label %14

12:                                               ; preds = %2
  %13 = sub i64 %1, %9
  tail call void @_ZNSt3__16vectorIjN3Ice12sz_allocatorIjNS1_23LivenessAllocatorTraitsEEEE8__appendEm(%"class.std::__1::vector.296"* %0, i64 %13) #6
  br label %18

14:                                               ; preds = %2
  %15 = icmp ugt i64 %9, %1
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = getelementptr inbounds i32, i32* %11, i64 %1
  store i32* %17, i32** %3, align 8
  br label %18

18:                                               ; preds = %14, %16, %12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: optsize
declare zeroext i1 @_ZNK3Ice17VariablesMetadata12isMultiBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"*, %"class.Ice::Variable"*) local_unnamed_addr #2

; Function Attrs: optsize
declare zeroext i1 @_ZNK3Ice17VariablesMetadata13isSingleBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"*, %"class.Ice::Variable"*) local_unnamed_addr #2

; Function Attrs: optsize
declare %"class.Ice::CfgNode"* @_ZNK3Ice17VariablesMetadata15getLocalUseNodeEPKNS_8VariableE(%"class.Ice::VariablesMetadata"*, %"class.Ice::Variable"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE6assignEmRKS3_(%"class.std::__1::vector.280"*, i64, %"class.Ice::Variable"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.Ice::Variable"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.280"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  %12 = inttoptr i64 %8 to %"class.Ice::Variable"**
  br i1 %11, label %55, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.Ice::Variable"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %8
  %18 = ashr exact i64 %17, 3
  %19 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 0
  %20 = icmp ult i64 %18, %1
  %21 = select i1 %20, i64 %18, i64 %1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.Ice::Variable"** %2 to i64*
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi %"class.Ice::Variable"** [ %12, %23 ], [ %30, %25 ]
  %27 = phi i64 [ %21, %23 ], [ %31, %25 ]
  %28 = load i64, i64* %24, align 8
  %29 = bitcast %"class.Ice::Variable"** %26 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %26, i64 1
  %31 = add i64 %27, -1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %25

33:                                               ; preds = %25, %13
  br i1 %20, label %34, label %52

34:                                               ; preds = %33
  %35 = sub i64 %1, %18
  %36 = load i64, i64* %15, align 8
  %37 = inttoptr i64 %36 to %"class.Ice::Variable"**
  %38 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %37, i64 %35
  %39 = icmp eq i64 %35, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.Ice::Variable"** %2 to i64*
  br label %44

42:                                               ; preds = %44
  %43 = ptrtoint %"class.Ice::Variable"** %38 to i64
  br label %50

44:                                               ; preds = %44, %40
  %45 = phi %"class.Ice::Variable"** [ %37, %40 ], [ %48, %44 ]
  %46 = load i64, i64* %41, align 8
  %47 = bitcast %"class.Ice::Variable"** %45 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %45, i64 1
  %49 = icmp eq %"class.Ice::Variable"** %48, %38
  br i1 %49, label %42, label %44

50:                                               ; preds = %34, %42
  %51 = phi i64 [ %43, %42 ], [ %36, %34 ]
  store i64 %51, i64* %15, align 8
  br label %86

52:                                               ; preds = %33
  %53 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %19, align 8
  %54 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %53, i64 %1
  store %"class.Ice::Variable"** %54, %"class.Ice::Variable"*** %14, align 8
  br label %86

55:                                               ; preds = %3
  %56 = icmp eq i64 %8, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::vector.280"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #8
  br label %59

59:                                               ; preds = %55, %57
  %60 = phi i64 [ %6, %55 ], [ 0, %57 ]
  %61 = icmp ugt i64 %1, 2305843009213693951
  br i1 %61, label %62, label %64

62:                                               ; preds = %59
  %63 = bitcast %"class.std::__1::vector.280"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %63) #9
  unreachable

64:                                               ; preds = %59
  %65 = ashr exact i64 %60, 3
  %66 = icmp ult i64 %65, 1152921504606846975
  br i1 %66, label %67, label %71

67:                                               ; preds = %64
  %68 = ashr exact i64 %60, 2
  %69 = icmp ult i64 %68, %1
  %70 = select i1 %69, i64 %1, i64 %68
  br label %71

71:                                               ; preds = %67, %64
  %72 = phi i64 [ %70, %67 ], [ 2305843009213693951, %64 ]
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.280"* %0, i64 %72) #6
  %73 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 1
  %74 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %73, align 8
  %75 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %74, i64 %1
  %76 = bitcast %"class.Ice::Variable"** %2 to i64*
  br label %77

77:                                               ; preds = %77, %71
  %78 = phi %"class.Ice::Variable"** [ %74, %71 ], [ %81, %77 ]
  %79 = load i64, i64* %76, align 8
  %80 = bitcast %"class.Ice::Variable"** %78 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %78, i64 1
  %82 = icmp eq %"class.Ice::Variable"** %81, %75
  br i1 %82, label %83, label %77

83:                                               ; preds = %77
  %84 = bitcast %"class.Ice::Variable"*** %73 to i64*
  %85 = ptrtoint %"class.Ice::Variable"** %75 to i64
  store i64 %85, i64* %84, align 8
  br label %86

86:                                               ; preds = %50, %52, %83
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE6resizeEjb(%"class.Ice::BitVectorTmpl"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = shl i32 %5, 6
  %7 = icmp ult i32 %6, %1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE4growEj(%"class.Ice::BitVectorTmpl"* %0, i32 %1) #6
  %9 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = zext i32 %5 to i64
  %12 = getelementptr inbounds i64, i64* %10, i64 %11
  %13 = load i32, i32* %4, align 4
  %14 = sub i32 %13, %5
  %15 = bitcast i64* %12 to i8*
  %16 = sext i1 %2 to i8
  %17 = zext i32 %14 to i64
  %18 = shl nuw nsw i64 %17, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 %16, i64 %18, i1 false) #8
  br label %19

19:                                               ; preds = %8, %3
  %20 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %21, %1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE15set_unused_bitsEb(%"class.Ice::BitVectorTmpl"* %0, i1 zeroext %2) #6
  %24 = load i32, i32* %20, align 8
  br label %25

25:                                               ; preds = %23, %19
  %26 = phi i32 [ %24, %23 ], [ %21, %19 ]
  store i32 %1, i32* %20, align 8
  %27 = icmp ugt i32 %26, %1
  %28 = or i1 %27, %2
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE15set_unused_bitsEb(%"class.Ice::BitVectorTmpl"* %0, i1 zeroext false) #7
  br label %30

30:                                               ; preds = %25, %29
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE3setEjj(%"class.Ice::BitVectorTmpl"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %1, %2
  br i1 %4, label %60, label %5

5:                                                ; preds = %3
  %6 = lshr i32 %1, 6
  %7 = lshr i32 %2, 6
  %8 = icmp eq i32 %6, %7
  br i1 %8, label %9, label %23

9:                                                ; preds = %5
  %10 = and i32 %2, 63
  %11 = zext i32 %10 to i64
  %12 = shl i64 1, %11
  %13 = and i32 %1, 63
  %14 = zext i32 %13 to i64
  %15 = shl i64 1, %14
  %16 = sub i64 %12, %15
  %17 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = zext i32 %6 to i64
  %20 = getelementptr inbounds i64, i64* %18, i64 %19
  %21 = load i64, i64* %20, align 8
  %22 = or i64 %21, %16
  store i64 %22, i64* %20, align 8
  br label %60

23:                                               ; preds = %5
  %24 = and i32 %1, 63
  %25 = zext i32 %24 to i64
  %26 = shl i64 -1, %25
  %27 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = zext i32 %6 to i64
  %30 = getelementptr inbounds i64, i64* %28, i64 %29
  %31 = load i64, i64* %30, align 8
  %32 = or i64 %31, %26
  store i64 %32, i64* %30, align 8
  %33 = add i32 %1, 63
  %34 = and i32 %33, -64
  %35 = add i32 %34, 64
  %36 = icmp ugt i32 %35, %2
  br i1 %36, label %46, label %37

37:                                               ; preds = %23, %37
  %38 = phi i32 [ %44, %37 ], [ %35, %23 ]
  %39 = phi i32 [ %38, %37 ], [ %34, %23 ]
  %40 = load i64*, i64** %27, align 8
  %41 = lshr i32 %39, 6
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i64, i64* %40, i64 %42
  store i64 -1, i64* %43, align 8
  %44 = add i32 %38, 64
  %45 = icmp ugt i32 %44, %2
  br i1 %45, label %46, label %37

46:                                               ; preds = %37, %23
  %47 = phi i32 [ %34, %23 ], [ %38, %37 ]
  %48 = icmp ult i32 %47, %2
  br i1 %48, label %49, label %60

49:                                               ; preds = %46
  %50 = and i32 %2, 63
  %51 = zext i32 %50 to i64
  %52 = shl nsw i64 -1, %51
  %53 = xor i64 %52, -1
  %54 = load i64*, i64** %27, align 8
  %55 = lshr i32 %47, 6
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i64, i64* %54, i64 %56
  %58 = load i64, i64* %57, align 8
  %59 = or i64 %58, %53
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %46, %49, %3, %9
  ret %"class.Ice::BitVectorTmpl"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice8Liveness4initEv(%"class.Ice::Liveness"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 2
  %3 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %2, align 8
  %4 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %3, i64 0, i32 14, i32 0, i32 0
  %5 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %4, align 8
  %6 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %3, i64 0, i32 17, i32 0, i32 0
  %7 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %6, align 8
  tail call void @_ZN3Ice8Liveness12initInternalENSt3__111__wrap_iterIPKPNS_7CfgNodeEEENS2_IPKPNS_8VariableEEEb(%"class.Ice::Liveness"* %0, %"class.Ice::CfgNode"** %5, %"class.Ice::Variable"** %7, i1 zeroext true) #6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice8Liveness17initPhiEdgeSplitsENSt3__111__wrap_iterIPKPNS_7CfgNodeEEENS2_IPKPNS_8VariableEEE(%"class.Ice::Liveness"*, %"class.Ice::CfgNode"**, %"class.Ice::Variable"**) local_unnamed_addr #0 align 2 {
  tail call void @_ZN3Ice8Liveness12initInternalENSt3__111__wrap_iterIPKPNS_7CfgNodeEEENS2_IPKPNS_8VariableEEEb(%"class.Ice::Liveness"* %0, %"class.Ice::CfgNode"** %1, %"class.Ice::Variable"** %2, i1 zeroext false) #6
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %"class.Ice::Variable"* @_ZNK3Ice8Liveness11getVariableEjPKNS_7CfgNodeE(%"class.Ice::Liveness"* nocapture readonly, i32, %"class.Ice::CfgNode"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 10
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %5, %1
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 6, i32 0, i32 0
  br label %17

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %2, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 4, i32 0, i32 0
  %14 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %13, align 8
  %15 = sub i32 %1, %5
  %16 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %14, i64 %12, i32 2, i32 0, i32 0
  br label %17

17:                                               ; preds = %9, %7
  %18 = phi %"class.Ice::Variable"*** [ %16, %9 ], [ %8, %7 ]
  %19 = phi i32 [ %15, %9 ], [ %1, %7 ]
  %20 = zext i32 %19 to i64
  %21 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %18, align 8
  %22 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %21, i64 %20
  %23 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %22, align 8
  ret %"class.Ice::Variable"* %23
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE8__appendEm(%"class.std::__1::vector.278"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.Ice::Liveness::LivenessNode"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.Ice::Liveness::LivenessNode"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = sdiv exact i64 %10, 152
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %31, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %9 to %"class.Ice::Liveness::LivenessNode"*
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %14, i64 %1
  %18 = inttoptr i64 %9 to i8*
  %19 = add i64 %1, -1
  %20 = getelementptr %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %14, i64 %19, i32 0
  %21 = bitcast i32* %20 to i8*
  %22 = sub i64 0, %9
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = ptrtoint i8* %23 to i64
  %25 = urem i64 %24, 152
  %26 = add i64 %24, 152
  %27 = sub i64 %26, %25
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %27, i1 false) #8
  %28 = ptrtoint %"class.Ice::Liveness::LivenessNode"* %17 to i64
  br label %29

29:                                               ; preds = %13, %16
  %30 = phi i64 [ %28, %16 ], [ %9, %13 ]
  store i64 %30, i64* %8, align 8
  br label %108

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %33 = bitcast %"struct.std::__1::__split_buffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 2
  %37 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 3, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 3, i32 1, i32 0
  %39 = bitcast %"class.std::__1::vector.278"* %0 to i64*
  %40 = bitcast %"struct.std::__1::__split_buffer"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 40, i1 false)
  %41 = load i64, i64* %39, align 8
  %42 = sub i64 %9, %41
  %43 = sdiv exact i64 %42, 152
  %44 = add i64 %43, %1
  %45 = icmp ugt i64 %44, 121360158379668102
  br i1 %45, label %46, label %48

46:                                               ; preds = %31
  %47 = bitcast %"class.std::__1::vector.278"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %47) #9
  unreachable

48:                                               ; preds = %31
  %49 = sub i64 %6, %41
  %50 = sdiv exact i64 %49, 152
  %51 = icmp ult i64 %50, 60680079189834051
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  store %"class.Ice::Liveness::LivenessNode"* null, %"class.Ice::Liveness::LivenessNode"** %37, align 8
  store %"struct.Ice::sz_allocator.295"* %32, %"struct.Ice::sz_allocator.295"** %38, align 8
  br label %58

53:                                               ; preds = %48
  %54 = shl nsw i64 %50, 1
  %55 = icmp ult i64 %54, %44
  %56 = select i1 %55, i64 %44, i64 %54
  store %"class.Ice::Liveness::LivenessNode"* null, %"class.Ice::Liveness::LivenessNode"** %37, align 8
  store %"struct.Ice::sz_allocator.295"* %32, %"struct.Ice::sz_allocator.295"** %38, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %52, %53
  %59 = phi i64 [ 121360158379668102, %52 ], [ %56, %53 ]
  %60 = tail call %"class.Ice::Liveness::LivenessNode"* @_ZN3Ice12sz_allocatorINS_8Liveness12LivenessNodeENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.295"* %32, i64 %59) #7
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %59, %58 ], [ 0, %53 ]
  %63 = phi %"class.Ice::Liveness::LivenessNode"* [ %60, %58 ], [ null, %53 ]
  store %"class.Ice::Liveness::LivenessNode"* %63, %"class.Ice::Liveness::LivenessNode"** %34, align 8
  %64 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %63, i64 %43
  %65 = bitcast %"class.Ice::Liveness::LivenessNode"* %64 to i8*
  store %"class.Ice::Liveness::LivenessNode"* %64, %"class.Ice::Liveness::LivenessNode"** %35, align 8
  %66 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %63, i64 %62
  store %"class.Ice::Liveness::LivenessNode"* %66, %"class.Ice::Liveness::LivenessNode"** %37, align 8
  %67 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %64, i64 %1
  %68 = mul nsw i64 %1, 152
  %69 = add i64 %68, -152
  %70 = urem i64 %69, 152
  %71 = sub i64 %69, %70
  %72 = add i64 %71, 152
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 %72, i1 false)
  %73 = bitcast %"class.Ice::Liveness::LivenessNode"** %36 to i64*
  %74 = ptrtoint %"class.Ice::Liveness::LivenessNode"* %67 to i64
  store i64 %74, i64* %73, align 8
  call void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS6_EE(%"class.std::__1::vector.278"* %0, %"struct.std::__1::__split_buffer"* nonnull dereferenceable(40) %3) #6
  %75 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %35, align 8
  %76 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %36, align 8
  %77 = icmp eq %"class.Ice::Liveness::LivenessNode"* %76, %75
  br i1 %77, label %107, label %78

78:                                               ; preds = %61, %104
  %79 = phi %"class.Ice::Liveness::LivenessNode"* [ %105, %104 ], [ %76, %61 ]
  %80 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 -1
  store %"class.Ice::Liveness::LivenessNode"* %80, %"class.Ice::Liveness::LivenessNode"** %36, align 8
  %81 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 -1, i32 6, i32 0, i32 0
  %82 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %81, align 8
  %83 = icmp eq %"struct.std::__1::pair"* %82, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %78
  %85 = ptrtoint %"struct.std::__1::pair"* %82 to i64
  %86 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 -1, i32 6, i32 0, i32 1
  %87 = bitcast %"struct.std::__1::pair"** %86 to i64*
  store i64 %85, i64* %87, align 8
  br label %88

88:                                               ; preds = %84, %78
  %89 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 -1, i32 5, i32 0, i32 0
  %90 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %89, align 8
  %91 = icmp eq %"struct.std::__1::pair"* %90, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = ptrtoint %"struct.std::__1::pair"* %90 to i64
  %94 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 -1, i32 5, i32 0, i32 1
  %95 = bitcast %"struct.std::__1::pair"** %94 to i64*
  store i64 %93, i64* %95, align 8
  br label %96

96:                                               ; preds = %92, %88
  %97 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 -1, i32 2, i32 0, i32 0
  %98 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %97, align 8
  %99 = icmp eq %"class.Ice::Variable"** %98, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %96
  %101 = ptrtoint %"class.Ice::Variable"** %98 to i64
  %102 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 -1, i32 2, i32 0, i32 1
  %103 = bitcast %"class.Ice::Variable"*** %102 to i64*
  store i64 %101, i64* %103, align 8
  br label %104

104:                                              ; preds = %100, %96
  %105 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %36, align 8
  %106 = icmp eq %"class.Ice::Liveness::LivenessNode"* %105, %75
  br i1 %106, label %107, label %78

107:                                              ; preds = %104, %61
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #8
  br label %108

108:                                              ; preds = %107, %29
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE17__destruct_at_endEPS3_(%"class.std::__1::vector.278"*, %"class.Ice::Liveness::LivenessNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %3, align 8
  %5 = icmp eq %"class.Ice::Liveness::LivenessNode"* %4, %1
  br i1 %5, label %34, label %6

6:                                                ; preds = %2, %32
  %7 = phi %"class.Ice::Liveness::LivenessNode"* [ %8, %32 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %7, i64 -1
  %9 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %7, i64 -1, i32 6, i32 0, i32 0
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %6
  %13 = ptrtoint %"struct.std::__1::pair"* %10 to i64
  %14 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %7, i64 -1, i32 6, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::pair"** %14 to i64*
  store i64 %13, i64* %15, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %7, i64 -1, i32 5, i32 0, i32 0
  %18 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair"* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %"struct.std::__1::pair"* %18 to i64
  %22 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %7, i64 -1, i32 5, i32 0, i32 1
  %23 = bitcast %"struct.std::__1::pair"** %22 to i64*
  store i64 %21, i64* %23, align 8
  br label %24

24:                                               ; preds = %20, %16
  %25 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %7, i64 -1, i32 2, i32 0, i32 0
  %26 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %25, align 8
  %27 = icmp eq %"class.Ice::Variable"** %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = ptrtoint %"class.Ice::Variable"** %26 to i64
  %30 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %7, i64 -1, i32 2, i32 0, i32 1
  %31 = bitcast %"class.Ice::Variable"*** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %28, %24
  %33 = icmp eq %"class.Ice::Liveness::LivenessNode"* %8, %1
  br i1 %33, label %34, label %6

34:                                               ; preds = %32, %2
  store %"class.Ice::Liveness::LivenessNode"* %1, %"class.Ice::Liveness::LivenessNode"** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS6_EE(%"class.std::__1::vector.278"*, %"struct.std::__1::__split_buffer"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 1
  %8 = icmp eq %"class.Ice::Liveness::LivenessNode"* %6, %4
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = ptrtoint %"class.Ice::Liveness::LivenessNode"* %4 to i64
  %11 = bitcast %"class.Ice::Liveness::LivenessNode"** %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.278"* %0 to i64*
  br label %29

14:                                               ; preds = %2
  %15 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %7, align 8
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"class.Ice::Liveness::LivenessNode"* [ %22, %16 ], [ %15, %14 ]
  %18 = phi %"class.Ice::Liveness::LivenessNode"* [ %20, %16 ], [ %6, %14 ]
  %19 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %17, i64 -1
  %20 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %18, i64 -1
  tail call void @_ZN3Ice8Liveness12LivenessNodeC2ERKS1_(%"class.Ice::Liveness::LivenessNode"* %19, %"class.Ice::Liveness::LivenessNode"* dereferenceable(152) %20) #7
  %21 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %7, align 8
  %22 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %21, i64 -1
  store %"class.Ice::Liveness::LivenessNode"* %22, %"class.Ice::Liveness::LivenessNode"** %7, align 8
  %23 = icmp eq %"class.Ice::Liveness::LivenessNode"* %20, %4
  br i1 %23, label %24, label %16

24:                                               ; preds = %16
  %25 = ptrtoint %"class.Ice::Liveness::LivenessNode"* %22 to i64
  %26 = bitcast %"class.std::__1::vector.278"* %0 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.Ice::Liveness::LivenessNode"** %7 to i64*
  br label %29

29:                                               ; preds = %9, %24
  %30 = phi i64* [ %11, %9 ], [ %28, %24 ]
  %31 = phi i64* [ %13, %9 ], [ %26, %24 ]
  %32 = phi i64 [ %12, %9 ], [ %25, %24 ]
  %33 = phi i64 [ %10, %9 ], [ %27, %24 ]
  store i64 %32, i64* %31, align 8
  store i64 %33, i64* %30, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 2
  %35 = bitcast %"class.Ice::Liveness::LivenessNode"** %5 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.Ice::Liveness::LivenessNode"** %34 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %35, align 8
  store i64 %36, i64* %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 3, i32 0, i32 0
  %41 = bitcast %"class.Ice::Liveness::LivenessNode"** %39 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.Ice::Liveness::LivenessNode"** %40 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %41, align 8
  store i64 %42, i64* %43, align 8
  %45 = load i64, i64* %30, align 8
  %46 = bitcast %"struct.std::__1::__split_buffer"* %1 to i64*
  store i64 %45, i64* %46, align 8
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::Liveness::LivenessNode"* @_ZN3Ice12sz_allocatorINS_8Liveness12LivenessNodeENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.295"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.Ice::sz_allocator.295", %"struct.Ice::sz_allocator.295"* %0, i64 0, i32 0
  %4 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  %5 = icmp eq %"class.llvm::BumpPtrAllocatorImpl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice23LivenessAllocatorTraits7currentEv() #7
  store %"class.llvm::BumpPtrAllocatorImpl"* %7, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.llvm::BumpPtrAllocatorImpl"* [ %7, %6 ], [ %4, %2 ]
  %10 = mul i64 %1, 152
  %11 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 %10, i64 8) #7
  %12 = bitcast i8* %11 to %"class.Ice::Liveness::LivenessNode"*
  ret %"class.Ice::Liveness::LivenessNode"* %12
}

; Function Attrs: optsize
declare %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice23LivenessAllocatorTraits7currentEv() local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.341", align 8
  %5 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %1
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = ptrtoint i8* %9 to i64
  %11 = add i64 %2, -1
  %12 = add i64 %11, %10
  %13 = sub i64 0, %2
  %14 = and i64 %12, %13
  %15 = sub i64 %14, %10
  %16 = add i64 %15, %1
  %17 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %10
  %21 = icmp ugt i64 %16, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds i8, i8* %9, i64 %15
  %24 = getelementptr inbounds i8, i8* %23, i64 %1
  store i8* %24, i8** %8, align 8
  br label %45

25:                                               ; preds = %3
  %26 = add i64 %11, %1
  %27 = icmp ugt i64 %26, 1048576
  br i1 %27, label %28, label %38

28:                                               ; preds = %25
  %29 = tail call noalias i8* @malloc(i64 %26) #7
  %30 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::pair.341"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"struct.std::__1::pair.341", %"struct.std::__1::pair.341"* %4, i64 0, i32 0
  store i8* %29, i8** %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.341", %"struct.std::__1::pair.341"* %4, i64 0, i32 1
  store i64 %26, i64* %33, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.2"* %30, %"struct.std::__1::pair.341"* nonnull dereferenceable(16) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #8
  %34 = ptrtoint i8* %29 to i64
  %35 = add i64 %11, %34
  %36 = and i64 %35, %13
  %37 = inttoptr i64 %36 to i8*
  br label %45

38:                                               ; preds = %25
  tail call void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"* %0) #6
  %39 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %11
  %42 = and i64 %41, %13
  %43 = inttoptr i64 %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %1
  store i8* %44, i8** %8, align 8
  br label %45

45:                                               ; preds = %28, %38, %22
  %46 = phi i8* [ %23, %22 ], [ %37, %28 ], [ %43, %38 ]
  ret i8* %46
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.2"*, %"struct.std::__1::pair.341"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !3

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 16) #7
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = bitcast i8** %3 to %"struct.std::__1::pair.341"**
  %15 = bitcast %"struct.std::__1::pair.341"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 8 %15, i64 16, i1 false)
  %16 = load %"struct.std::__1::pair.341"*, %"struct.std::__1::pair.341"** %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.341", %"struct.std::__1::pair.341"* %16, i64 1
  store %"struct.std::__1::pair.341"* %17, %"struct.std::__1::pair.341"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.llvm::SmallVector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr i64 %9, 10
  %11 = and i64 %10, 33554431
  %12 = icmp ult i64 %11, 30
  %13 = select i1 %12, i64 %11, i64 30
  %14 = shl i64 1048576, %13
  %15 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  %16 = tail call noalias i8* @malloc(i64 %14) #7
  store i8* %16, i8** %2, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %3, i64 0, i32 0, i32 0
  call void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"* %17, i8** nonnull dereferenceable(8) %2) #6
  %18 = bitcast i8** %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  store i64 %19, i64* %20, align 8
  %21 = inttoptr i64 %19 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %14
  %23 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  store i8* %22, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"*, i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %10, !prof !3

8:                                                ; preds = %2
  %9 = bitcast i8* %4 to i64*
  br label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %11, i8* %12, i64 0, i64 8) #7
  %13 = bitcast i8** %3 to i64**
  %14 = load i64*, i64** %13, align 8
  br label %15

15:                                               ; preds = %8, %10
  %16 = phi i64* [ %9, %8 ], [ %14, %10 ]
  %17 = bitcast i8** %3 to i8***
  %18 = bitcast i8** %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 1
  %20 = load i8**, i8*** %17, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  store i8** %21, i8*** %17, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice8Liveness12LivenessNodeC2ERKS1_(%"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"* dereferenceable(152)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.Ice::Liveness::LivenessNode"* %1 to i64*
  %4 = bitcast %"class.Ice::Liveness::LivenessNode"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %1, i64 0, i32 2
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEEC2ERKS7_(%"class.std::__1::vector.280"* %6, %"class.std::__1::vector.280"* dereferenceable(32) %7) #6
  %8 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %1, i64 0, i32 3
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEC2ERKS2_(%"class.Ice::BitVectorTmpl"* %8, %"class.Ice::BitVectorTmpl"* dereferenceable(24) %9) #6
  %10 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %1, i64 0, i32 4
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEC2ERKS2_(%"class.Ice::BitVectorTmpl"* %10, %"class.Ice::BitVectorTmpl"* dereferenceable(24) %11) #6
  %12 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %1, i64 0, i32 5
  tail call void @_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEEC2ERKS7_(%"class.std::__1::vector.286"* %12, %"class.std::__1::vector.286"* dereferenceable(32) %13) #6
  %14 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %1, i64 0, i32 6
  tail call void @_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEEC2ERKS7_(%"class.std::__1::vector.286"* %14, %"class.std::__1::vector.286"* dereferenceable(32) %15) #6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEEC2ERKS7_(%"class.std::__1::vector.280"*, %"class.std::__1::vector.280"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %1, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %4 = bitcast %"class.llvm::BumpPtrAllocatorImpl"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 2, i32 1
  %7 = bitcast %"struct.std::__1::__compressed_pair_elem.283"* %6 to i64*
  %8 = bitcast %"class.std::__1::vector.280"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #8
  store i64 %5, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %"class.Ice::Variable"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.280"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = ashr exact i64 %14, 3
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.280"* %0, i64 %17) #6
  %18 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %18, align 8
  %20 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %9, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 1
  %22 = bitcast %"class.Ice::Variable"*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq %"class.Ice::Variable"** %19, %20
  br i1 %24, label %41, label %25

25:                                               ; preds = %16
  %26 = inttoptr i64 %23 to i64*
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i64 [ %23, %25 ], [ %36, %27 ]
  %29 = phi i64* [ %26, %25 ], [ %38, %27 ]
  %30 = phi %"class.Ice::Variable"** [ %19, %25 ], [ %33, %27 ]
  %31 = bitcast %"class.Ice::Variable"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %29, align 8
  %33 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %30, i64 1
  %34 = inttoptr i64 %28 to %"class.Ice::Variable"**
  %35 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %34, i64 1
  %36 = ptrtoint %"class.Ice::Variable"** %35 to i64
  %37 = icmp eq %"class.Ice::Variable"** %33, %20
  %38 = bitcast %"class.Ice::Variable"** %35 to i64*
  br i1 %37, label %39, label %27

39:                                               ; preds = %27
  %40 = ptrtoint %"class.Ice::Variable"** %35 to i64
  br label %41

41:                                               ; preds = %39, %16
  %42 = phi i64 [ %23, %16 ], [ %40, %39 ]
  store i64 %42, i64* %22, align 8
  br label %43

43:                                               ; preds = %2, %41
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEC2ERKS2_(%"class.Ice::BitVectorTmpl"*, %"class.Ice::BitVectorTmpl"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %1, i64 0, i32 3
  %8 = bitcast %"struct.Ice::sz_allocator.285"* %7 to i64*
  %9 = bitcast %"struct.Ice::sz_allocator.285"* %6 to i64*
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %9, align 8
  %11 = icmp eq i32 %5, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  store i64* null, i64** %13, align 8
  %14 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 2
  store i32 0, i32* %14, align 4
  br label %29

15:                                               ; preds = %2
  %16 = load i32, i32* %4, align 8
  %17 = add i32 %16, 63
  %18 = lshr i32 %17, 6
  %19 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 2
  store i32 %18, i32* %19, align 4
  %20 = zext i32 %18 to i64
  %21 = tail call i64* @_ZN3Ice12sz_allocatorImNS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.285"* %6, i64 %20) #6
  %22 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  store i64* %21, i64** %22, align 8
  %23 = bitcast i64* %21 to i8*
  %24 = bitcast %"class.Ice::BitVectorTmpl"* %1 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i32, i32* %19, align 4
  %27 = zext i32 %26 to i64
  %28 = shl nuw nsw i64 %27, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %25, i64 %28, i1 false)
  br label %29

29:                                               ; preds = %15, %12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEEC2ERKS7_(%"class.std::__1::vector.286"*, %"class.std::__1::vector.286"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.286", %"class.std::__1::vector.286"* %1, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %4 = bitcast %"class.llvm::BumpPtrAllocatorImpl"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.286", %"class.std::__1::vector.286"* %0, i64 0, i32 0, i32 2, i32 1
  %7 = bitcast %"struct.std::__1::__compressed_pair_elem.290"* %6 to i64*
  %8 = bitcast %"class.std::__1::vector.286"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #8
  store i64 %5, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.286", %"class.std::__1::vector.286"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.286"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = ashr exact i64 %14, 3
  tail call void @_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.286"* %0, i64 %17) #6
  %18 = getelementptr inbounds %"class.std::__1::vector.286", %"class.std::__1::vector.286"* %1, i64 0, i32 0, i32 0
  %19 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %20 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.286", %"class.std::__1::vector.286"* %0, i64 0, i32 0, i32 1
  %22 = bitcast %"struct.std::__1::pair"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq %"struct.std::__1::pair"* %19, %20
  br i1 %24, label %41, label %25

25:                                               ; preds = %16
  %26 = inttoptr i64 %23 to i64*
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i64 [ %23, %25 ], [ %36, %27 ]
  %29 = phi i64* [ %26, %25 ], [ %38, %27 ]
  %30 = phi %"struct.std::__1::pair"* [ %19, %25 ], [ %33, %27 ]
  %31 = bitcast %"struct.std::__1::pair"* %30 to i64*
  %32 = load i64, i64* %31, align 4
  store i64 %32, i64* %29, align 4
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 1
  %34 = inttoptr i64 %28 to %"struct.std::__1::pair"*
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 1
  %36 = ptrtoint %"struct.std::__1::pair"* %35 to i64
  %37 = icmp eq %"struct.std::__1::pair"* %33, %20
  %38 = bitcast %"struct.std::__1::pair"* %35 to i64*
  br i1 %37, label %39, label %27

39:                                               ; preds = %27
  %40 = ptrtoint %"struct.std::__1::pair"* %35 to i64
  br label %41

41:                                               ; preds = %39, %16
  %42 = phi i64 [ %23, %16 ], [ %40, %39 ]
  store i64 %42, i64* %22, align 8
  br label %43

43:                                               ; preds = %2, %41
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.280"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.280"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #9
  unreachable

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %8 = tail call %"class.Ice::Variable"** @_ZN3Ice12sz_allocatorIPNS_8VariableENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.284"* %7, i64 %1) #7
  %9 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 1
  store %"class.Ice::Variable"** %8, %"class.Ice::Variable"*** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 0
  store %"class.Ice::Variable"** %8, %"class.Ice::Variable"*** %10, align 8
  %11 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %8, i64 %1
  %12 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.Ice::Variable"** %11, %"class.Ice::Variable"*** %12, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::Variable"** @_ZN3Ice12sz_allocatorIPNS_8VariableENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.284"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.Ice::sz_allocator.284", %"struct.Ice::sz_allocator.284"* %0, i64 0, i32 0
  %4 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  %5 = icmp eq %"class.llvm::BumpPtrAllocatorImpl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice23LivenessAllocatorTraits7currentEv() #7
  store %"class.llvm::BumpPtrAllocatorImpl"* %7, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.llvm::BumpPtrAllocatorImpl"* [ %7, %6 ], [ %4, %2 ]
  %10 = shl i64 %1, 3
  %11 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 %10, i64 8) #7
  %12 = bitcast i8* %11 to %"class.Ice::Variable"**
  ret %"class.Ice::Variable"** %12
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64* @_ZN3Ice12sz_allocatorImNS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.285"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.Ice::sz_allocator.285", %"struct.Ice::sz_allocator.285"* %0, i64 0, i32 0
  %4 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  %5 = icmp eq %"class.llvm::BumpPtrAllocatorImpl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice23LivenessAllocatorTraits7currentEv() #7
  store %"class.llvm::BumpPtrAllocatorImpl"* %7, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.llvm::BumpPtrAllocatorImpl"* [ %7, %6 ], [ %4, %2 ]
  %10 = shl i64 %1, 3
  %11 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 %10, i64 8) #7
  %12 = bitcast i8* %11 to i64*
  ret i64* %12
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.286"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.286"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #9
  unreachable

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::vector.286", %"class.std::__1::vector.286"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %8 = tail call %"struct.std::__1::pair"* @_ZN3Ice12sz_allocatorINSt3__14pairIjiEENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.291"* %7, i64 %1) #7
  %9 = getelementptr inbounds %"class.std::__1::vector.286", %"class.std::__1::vector.286"* %0, i64 0, i32 0, i32 1
  store %"struct.std::__1::pair"* %8, %"struct.std::__1::pair"** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.286", %"class.std::__1::vector.286"* %0, i64 0, i32 0, i32 0
  store %"struct.std::__1::pair"* %8, %"struct.std::__1::pair"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 %1
  %12 = getelementptr inbounds %"class.std::__1::vector.286", %"class.std::__1::vector.286"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair"* %11, %"struct.std::__1::pair"** %12, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZN3Ice12sz_allocatorINSt3__14pairIjiEENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.291"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.Ice::sz_allocator.291", %"struct.Ice::sz_allocator.291"* %0, i64 0, i32 0
  %4 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  %5 = icmp eq %"class.llvm::BumpPtrAllocatorImpl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice23LivenessAllocatorTraits7currentEv() #7
  store %"class.llvm::BumpPtrAllocatorImpl"* %7, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.llvm::BumpPtrAllocatorImpl"* [ %7, %6 ], [ %4, %2 ]
  %10 = shl i64 %1, 3
  %11 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 %10, i64 4) #7
  %12 = bitcast i8* %11 to %"struct.std::__1::pair"*
  ret %"struct.std::__1::pair"* %12
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjN3Ice12sz_allocatorIjNS1_23LivenessAllocatorTraitsEEEE8__appendEm(%"class.std::__1::vector.296"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.296", %"class.std::__1::vector.296"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.296", %"class.std::__1::vector.296"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #8
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  ret void

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.std::__1::vector.296", %"class.std::__1::vector.296"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %31 = bitcast %"class.std::__1::vector.296"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = ashr exact i64 %33, 2
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 4611686018427387903
  br i1 %36, label %37, label %39

37:                                               ; preds = %29
  %38 = bitcast %"class.std::__1::vector.296"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #9
  unreachable

39:                                               ; preds = %29
  %40 = sub i64 %5, %32
  %41 = ashr exact i64 %40, 2
  %42 = icmp ult i64 %41, 2305843009213693951
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = ashr exact i64 %40, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 4611686018427387903, %39 ]
  %50 = tail call i32* @_ZN3Ice12sz_allocatorIjNS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.301"* %30, i64 %49) #7
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %53 = phi i32* [ %50, %48 ], [ null, %43 ]
  %54 = getelementptr inbounds i32, i32* %53, i64 %34
  %55 = getelementptr inbounds i32, i32* %53, i64 %52
  %56 = getelementptr inbounds i32, i32* %54, i64 %1
  %57 = bitcast i32* %54 to i8*
  %58 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 %58, i1 false) #8
  %59 = ptrtoint i32* %55 to i64
  %60 = ptrtoint i32* %56 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.296", %"class.std::__1::vector.296"* %0, i64 0, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = load i32*, i32** %6, align 8
  %64 = icmp eq i32* %63, %62
  br i1 %64, label %72, label %65

65:                                               ; preds = %51, %65
  %66 = phi i32* [ %68, %65 ], [ %54, %51 ]
  %67 = phi i32* [ %69, %65 ], [ %63, %51 ]
  %68 = getelementptr inbounds i32, i32* %66, i64 -1
  %69 = getelementptr inbounds i32, i32* %67, i64 -1
  %70 = load i32, i32* %69, align 4
  store i32 %70, i32* %68, align 4
  %71 = icmp eq i32* %69, %62
  br i1 %71, label %72, label %65

72:                                               ; preds = %65, %51
  %73 = phi i32* [ %54, %51 ], [ %68, %65 ]
  %74 = ptrtoint i32* %73 to i64
  store i64 %74, i64* %31, align 8
  store i64 %60, i64* %7, align 8
  store i64 %59, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32* @_ZN3Ice12sz_allocatorIjNS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.301"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.Ice::sz_allocator.301", %"struct.Ice::sz_allocator.301"* %0, i64 0, i32 0
  %4 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  %5 = icmp eq %"class.llvm::BumpPtrAllocatorImpl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice23LivenessAllocatorTraits7currentEv() #7
  store %"class.llvm::BumpPtrAllocatorImpl"* %7, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.llvm::BumpPtrAllocatorImpl"* [ %7, %6 ], [ %4, %2 ]
  %10 = shl i64 %1, 2
  %11 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 %10, i64 4) #7
  %12 = bitcast i8* %11 to i32*
  ret i32* %12
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE4growEj(%"class.Ice::BitVectorTmpl"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %1, 63
  %6 = lshr i32 %5, 6
  %7 = shl i32 %4, 1
  %8 = icmp ult i32 %6, %7
  %9 = select i1 %8, i32 %7, i32 %6
  store i32 %9, i32* %3, align 4
  %10 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 3
  %11 = zext i32 %9 to i64
  %12 = tail call i64* @_ZN3Ice12sz_allocatorImNS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.285"* %10, i64 %11) #6
  %13 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp eq i64* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %2
  %17 = bitcast i64* %12 to i8*
  %18 = bitcast i64* %14 to i8*
  %19 = zext i32 %4 to i64
  %20 = shl nuw nsw i64 %19, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %18, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %2, %16
  store i64* %12, i64** %13, align 8
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE15set_unused_bitsEb(%"class.Ice::BitVectorTmpl"* %0, i1 zeroext false) #7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE15set_unused_bitsEb(%"class.Ice::BitVectorTmpl"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, 63
  %6 = lshr i32 %5, 6
  %7 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %6
  br i1 %9, label %10, label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds i64, i64* %12, i64 %13
  %15 = sub i32 %8, %6
  %16 = bitcast i64* %14 to i8*
  %17 = sext i1 %1 to i8
  %18 = zext i32 %15 to i64
  %19 = shl nuw nsw i64 %18, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 %17, i64 %19, i1 false) #8
  %20 = load i32, i32* %3, align 8
  br label %21

21:                                               ; preds = %10, %2
  %22 = phi i32 [ %20, %10 ], [ %4, %2 ]
  %23 = and i32 %22, 63
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %45, label %25

25:                                               ; preds = %21
  %26 = zext i32 %23 to i64
  %27 = shl i64 -1, %26
  br i1 %1, label %28, label %36

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = add nsw i32 %6, -1
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i64, i64* %30, i64 %32
  %34 = load i64, i64* %33, align 8
  %35 = or i64 %34, %27
  store i64 %35, i64* %33, align 8
  br label %45

36:                                               ; preds = %25
  %37 = xor i64 %27, -1
  %38 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = add nsw i32 %6, -1
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i64, i64* %39, i64 %41
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, %37
  store i64 %44, i64* %42, align 8
  br label %45

45:                                               ; preds = %28, %36, %21
  ret void
}

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { optsize }
attributes #7 = { nounwind optsize }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
