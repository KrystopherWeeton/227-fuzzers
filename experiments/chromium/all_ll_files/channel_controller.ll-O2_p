; ModuleID = '../../third_party/webrtc/modules/audio_coding/audio_network_adaptor/channel_controller.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/audio_network_adaptor/channel_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.webrtc::ChannelController::Config" = type { i64, i64, i32, i32 }
%"class.webrtc::ChannelController" = type { %"class.webrtc::Controller", %"struct.webrtc::ChannelController::Config", i64, %"class.absl::optional" }
%"class.webrtc::Controller" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"struct.webrtc::Controller::NetworkMetrics" = type { %"class.absl::optional", %"class.absl::optional.0", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.5" }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { float }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { i64 }
%"struct.webrtc::AudioEncoderRuntimeConfig" = type <{ %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.0", %"class.absl::optional.10", %"class.absl::optional.10", [4 x i8], %"class.absl::optional.5", i8, [7 x i8] }>
%"class.absl::optional.10" = type { %"class.absl::optional_internal::optional_data.11" }
%"class.absl::optional_internal::optional_data.11" = type { %"class.absl::optional_internal::optional_data_base.12" }
%"class.absl::optional_internal::optional_data_base.12" = type { %"class.absl::optional_internal::optional_data_dtor_base.13" }
%"class.absl::optional_internal::optional_data_dtor_base.13" = type { i8, %union.anon.14 }
%union.anon.14 = type { i8 }

@_ZTVN6webrtc17ChannelControllerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::ChannelController"*)* @_ZN6webrtc17ChannelControllerD2Ev to i8*), i8* bitcast (void (%"class.webrtc::ChannelController"*)* @_ZN6webrtc17ChannelControllerD0Ev to i8*), i8* bitcast (void (%"class.webrtc::ChannelController"*, %"struct.webrtc::Controller::NetworkMetrics"*)* @_ZN6webrtc17ChannelController20UpdateNetworkMetricsERKNS_10Controller14NetworkMetricsE to i8*), i8* bitcast (void (%"class.webrtc::ChannelController"*, %"struct.webrtc::AudioEncoderRuntimeConfig"*)* @_ZN6webrtc17ChannelController12MakeDecisionEPNS_25AudioEncoderRuntimeConfigE to i8*)] }, align 8

@_ZN6webrtc17ChannelController6ConfigC1Emmii = hidden unnamed_addr alias void (%"struct.webrtc::ChannelController::Config"*, i64, i64, i32, i32), void (%"struct.webrtc::ChannelController::Config"*, i64, i64, i32, i32)* @_ZN6webrtc17ChannelController6ConfigC2Emmii
@_ZN6webrtc17ChannelControllerC1ERKNS0_6ConfigE = hidden unnamed_addr alias void (%"class.webrtc::ChannelController"*, %"struct.webrtc::ChannelController::Config"*), void (%"class.webrtc::ChannelController"*, %"struct.webrtc::ChannelController::Config"*)* @_ZN6webrtc17ChannelControllerC2ERKNS0_6ConfigE
@_ZN6webrtc17ChannelControllerD1Ev = hidden unnamed_addr alias void (%"class.webrtc::ChannelController"*), void (%"class.webrtc::ChannelController"*)* @_ZN6webrtc17ChannelControllerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc17ChannelController6ConfigC2Emmii(%"struct.webrtc::ChannelController::Config"* nocapture, i64, i64, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.webrtc::ChannelController::Config", %"struct.webrtc::ChannelController::Config"* %0, i64 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.webrtc::ChannelController::Config", %"struct.webrtc::ChannelController::Config"* %0, i64 0, i32 1
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.webrtc::ChannelController::Config", %"struct.webrtc::ChannelController::Config"* %0, i64 0, i32 2
  store i32 %3, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.webrtc::ChannelController::Config", %"struct.webrtc::ChannelController::Config"* %0, i64 0, i32 3
  store i32 %4, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17ChannelControllerC2ERKNS0_6ConfigE(%"class.webrtc::ChannelController"* nocapture, %"struct.webrtc::ChannelController::Config"* nocapture readonly dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::ChannelController", %"class.webrtc::ChannelController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc17ChannelControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::ChannelController", %"class.webrtc::ChannelController"* %0, i64 0, i32 1
  %5 = bitcast %"struct.webrtc::ChannelController::Config"* %4 to i8*
  %6 = bitcast %"struct.webrtc::ChannelController::Config"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"class.webrtc::ChannelController", %"class.webrtc::ChannelController"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.webrtc::ChannelController", %"class.webrtc::ChannelController"* %0, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"class.webrtc::ChannelController", %"class.webrtc::ChannelController"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc17ChannelControllerD2Ev(%"class.webrtc::ChannelController"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17ChannelControllerD0Ev(%"class.webrtc::ChannelController"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.webrtc::ChannelController"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc17ChannelController20UpdateNetworkMetricsERKNS_10Controller14NetworkMetricsE(%"class.webrtc::ChannelController"* nocapture, %"struct.webrtc::Controller::NetworkMetrics"* nocapture readonly dereferenceable(48)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::Controller::NetworkMetrics", %"struct.webrtc::Controller::NetworkMetrics"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.webrtc::ChannelController", %"class.webrtc::ChannelController"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.webrtc::Controller::NetworkMetrics"* %1 to i64*
  %9 = bitcast i8* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 8
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17ChannelController12MakeDecisionEPNS_25AudioEncoderRuntimeConfigE(%"class.webrtc::ChannelController"* nocapture, %"struct.webrtc::AudioEncoderRuntimeConfig"* nocapture) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::ChannelController", %"class.webrtc::ChannelController"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.webrtc::ChannelController", %"class.webrtc::ChannelController"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  br i1 %5, label %27, label %8

8:                                                ; preds = %2
  switch i64 %7, label %27 [
    i64 2, label %9
    i64 1, label %16
  ]

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.webrtc::ChannelController", %"class.webrtc::ChannelController"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.webrtc::ChannelController", %"class.webrtc::ChannelController"* %0, i64 0, i32 1, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %11, %13
  br i1 %14, label %27, label %15

15:                                               ; preds = %9
  store i64 1, i64* %6, align 8
  br label %27

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.webrtc::ChannelController", %"class.webrtc::ChannelController"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.webrtc::ChannelController", %"class.webrtc::ChannelController"* %0, i64 0, i32 1, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %18, %20
  br i1 %21, label %27, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.webrtc::ChannelController", %"class.webrtc::ChannelController"* %0, i64 0, i32 1, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, 2
  %26 = select i1 %25, i64 %24, i64 2
  store i64 %26, i64* %6, align 8
  br label %27

27:                                               ; preds = %2, %8, %9, %16, %15, %22
  %28 = phi i64 [ %7, %8 ], [ 2, %9 ], [ 1, %16 ], [ 1, %15 ], [ %26, %22 ], [ %7, %2 ]
  %29 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %29, align 8
  %30 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %28, i64* %30, align 8
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
