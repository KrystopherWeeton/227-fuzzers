; ModuleID = '../../third_party/skia/modules/skottie/src/layers/shapelayer/Ellipse.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/layers/shapelayer/Ellipse.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp.29 = type { %"class.sksg::GeometryNode"* }
%"class.sksg::GeometryNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%struct.SkSize = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.sksg::RRect" = type <{ %"class.sksg::GeometryNode.base", [2 x i8], %class.SkRRect, %"struct.sksg::RRect::AttrContainer", [7 x i8] }>
%"class.sksg::GeometryNode.base" = type { %"class.sksg::Node.base" }
%"struct.sksg::RRect::AttrContainer" = type { i8 }
%struct.SkV2 = type { float, float }
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.skottie::internal::DiscardableAdapterBase" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.31 }
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%class.sk_sp.31 = type { %"class.sksg::RRect"* }
%"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter" = type { %"class.skottie::internal::DiscardableAdapterBase", %struct.SkV2, %struct.SkV2 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@_ZTVN7skottie8internal12_GLOBAL__N_122EllipseGeometryAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122EllipseGeometryAdapterEN4sksg5RRectEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_122EllipseGeometryAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_122EllipseGeometryAdapter6onSyncEv to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122EllipseGeometryAdapterEN4sksg5RRectEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122EllipseGeometryAdapterEN4sksg5RRectEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122EllipseGeometryAdapterEN4sksg5RRectEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12ShapeBuilder21AttachEllipseGeometryERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderE(%class.sk_sp.29* noalias nocapture sret, %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skottie::internal::AnimationBuilder"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %class.SkRRect, align 4
  %6 = alloca %class.sk_sp.6, align 8
  %7 = tail call i8* @_Znwm(i64 72) #10, !noalias !2
  %8 = getelementptr inbounds i8, i8* %7, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4, !noalias !2
  %10 = bitcast i8* %7 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 25, i1 false) #11, !noalias !2
  %12 = getelementptr inbounds i8, i8* %7, i64 48
  %13 = tail call i8* @_Znwm(i64 104) #10, !noalias !7
  %14 = bitcast i8* %13 to %"class.sksg::RRect"*
  %15 = bitcast %class.SkRRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %15) #11, !noalias !7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 0, i64 52, i1 false) #11, !noalias !7
  call void @_ZN4sksg5RRectC1ERK7SkRRect(%"class.sksg::RRect"* nonnull %14, %class.SkRRect* nonnull dereferenceable(52) %5) #11, !noalias !7
  %16 = bitcast i8* %12 to i8**
  store i8* %13, i8** %16, align 8, !alias.scope !10, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %15) #11, !noalias !7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_122EllipseGeometryAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8, !noalias !2
  %17 = getelementptr inbounds i8, i8* %7, i64 56
  %18 = bitcast i8* %17 to %struct.SkV2*
  %19 = getelementptr inbounds i8, i8* %7, i64 64
  %20 = bitcast i8* %19 to %struct.SkV2*
  %21 = bitcast i8* %12 to %"class.sksg::RRect"**
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #11, !noalias !2
  %22 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #11, !noalias !2
  %23 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #11, !noalias !2
  store i32 -1431655766, i32* %4, align 4, !noalias !2
  %24 = call zeroext i1 @_ZN7skottie5ParseIiEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %22, i32* nonnull %4) #11, !noalias !2
  br i1 %24, label %25, label %29

25:                                               ; preds = %3
  %26 = load i32, i32* %4, align 4, !noalias !2
  %27 = icmp eq i32 %26, 3
  %28 = zext i1 %27 to i32
  br label %30

29:                                               ; preds = %3
  store i32 -1, i32* %4, align 4, !noalias !2
  br label %30

30:                                               ; preds = %29, %25
  %31 = phi i32 [ %28, %25 ], [ 0, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #11, !noalias !2
  %32 = getelementptr inbounds i8, i8* %13, i64 96
  %33 = load i8, i8* %32, align 1, !noalias !2
  %34 = and i8 %33, 1
  %35 = zext i8 %34 to i32
  %36 = icmp eq i32 %31, %35
  br i1 %36, label %43, label %37

37:                                               ; preds = %30
  %38 = trunc i32 %31 to i8
  %39 = and i8 %33, -2
  %40 = or i8 %39, %38
  store i8 %40, i8* %32, align 1, !noalias !2
  %41 = bitcast i8* %13 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* nonnull %41, i1 zeroext true) #11, !noalias !11
  %42 = load %"class.sksg::RRect"*, %"class.sksg::RRect"** %21, align 8, !noalias !2
  br label %43

43:                                               ; preds = %37, %30
  %44 = phi %"class.sksg::RRect"* [ %42, %37 ], [ %14, %30 ]
  %45 = getelementptr inbounds %"class.sksg::RRect", %"class.sksg::RRect"* %44, i64 0, i32 3, i32 0
  %46 = load i8, i8* %45, align 1, !noalias !2
  %47 = and i8 %46, 6
  %48 = icmp eq i8 %47, 2
  br i1 %48, label %53, label %49

49:                                               ; preds = %43
  %50 = and i8 %46, -7
  %51 = or i8 %50, 2
  store i8 %51, i8* %45, align 1, !noalias !11
  %52 = bitcast %"class.sksg::RRect"* %44 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %52, i1 zeroext true) #11, !noalias !11
  br label %53

53:                                               ; preds = %49, %43
  %54 = bitcast i8* %7 to %"class.skottie::internal::AnimatablePropertyContainer"*
  %55 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #11, !noalias !2
  %56 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %55, i64 0, i32 0, i64 0
  %57 = load i8, i8* %56, align 8, !noalias !2
  %58 = and i8 %57, 7
  %59 = icmp eq i8 %58, 7
  %60 = bitcast %"class.skjson::Value"* %55 to %"class.skjson::ObjectValue"*
  %61 = select i1 %59, %"class.skjson::ObjectValue"* %60, %"class.skjson::ObjectValue"* null
  %62 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %54, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %61, %struct.SkV2* %18) #11, !noalias !2
  %63 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11, !noalias !2
  %64 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %63, i64 0, i32 0, i64 0
  %65 = load i8, i8* %64, align 8, !noalias !2
  %66 = and i8 %65, 7
  %67 = icmp eq i8 %66, 7
  %68 = bitcast %"class.skjson::Value"* %63 to %"class.skjson::ObjectValue"*
  %69 = select i1 %67, %"class.skjson::ObjectValue"* %68, %"class.skjson::ObjectValue"* null
  %70 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %54, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %69, %struct.SkV2* %20) #11, !noalias !2
  %71 = ptrtoint i8* %7 to i64
  call void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %54) #11, !noalias !2
  %72 = load %"class.sksg::RRect"*, %"class.sksg::RRect"** %21, align 8, !noalias !12
  %73 = icmp eq %"class.sksg::RRect"* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %53
  %75 = getelementptr inbounds %"class.sksg::RRect", %"class.sksg::RRect"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 1 monotonic
  br label %77

77:                                               ; preds = %53, %74
  %78 = ptrtoint %"class.sksg::RRect"* %72 to i64
  %79 = bitcast i8* %11 to %class.sk_sp.6**
  %80 = load %class.sk_sp.6*, %class.sk_sp.6** %79, align 8, !noalias !12
  %81 = getelementptr inbounds i8, i8* %7, i64 24
  %82 = bitcast i8* %81 to %class.sk_sp.6**
  %83 = load %class.sk_sp.6*, %class.sk_sp.6** %82, align 8, !noalias !12
  %84 = icmp eq %class.sk_sp.6* %80, %83
  br i1 %84, label %117, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %2, i64 0, i32 11
  %87 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %86, align 8, !noalias !12
  %88 = bitcast %class.sk_sp.6* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #11, !noalias !12
  %89 = bitcast %class.sk_sp.6* %6 to i64*
  store i64 %71, i64* %89, align 8, !noalias !12
  %90 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %87, i64 0, i32 0, i32 1
  %91 = load %class.sk_sp.6*, %class.sk_sp.6** %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %87, i64 0, i32 0, i32 2, i32 0, i32 0
  %93 = load %class.sk_sp.6*, %class.sk_sp.6** %92, align 8
  %94 = icmp ult %class.sk_sp.6* %91, %93
  br i1 %94, label %95, label %101

95:                                               ; preds = %85
  %96 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %96, align 8, !noalias !12
  %97 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %71, i64* %97, align 8
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %91, i64 1
  %99 = ptrtoint %class.sk_sp.6* %98 to i64
  %100 = bitcast %class.sk_sp.6** %90 to i64*
  store i64 %99, i64* %100, align 8
  br label %102

101:                                              ; preds = %85
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %87, %class.sk_sp.6* nonnull dereferenceable(8) %6) #11
  br label %102

102:                                              ; preds = %101, %95
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  %104 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %103, align 8, !noalias !12
  %105 = icmp eq %"class.skottie::internal::Animator"* %104, null
  br i1 %105, label %116, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %104, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %116

110:                                              ; preds = %106
  %111 = bitcast %"class.skottie::internal::Animator"* %104 to %class.SkRefCntBase*
  %112 = bitcast %"class.skottie::internal::Animator"* %104 to void (%class.SkRefCntBase*)***
  %113 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %112, align 8
  %114 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %113, i64 2
  %115 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %114, align 8
  call void %115(%class.SkRefCntBase* nonnull %111) #11
  br label %116

116:                                              ; preds = %110, %106, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #11, !noalias !12
  br label %132

117:                                              ; preds = %77
  %118 = bitcast i8* %7 to %"class.skottie::internal::Animator"*
  %119 = bitcast i8* %7 to i1 (%"class.skottie::internal::Animator"*, float)***
  %120 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %119, align 8, !noalias !12
  %121 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %120, i64 3
  %122 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %121, align 8
  %123 = call zeroext i1 %122(%"class.skottie::internal::Animator"* nonnull %118, float 0.000000e+00) #11
  %124 = atomicrmw add i32* %9, i32 -1 acq_rel, !noalias !12
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %132

126:                                              ; preds = %117
  %127 = bitcast i8* %7 to %class.SkRefCntBase*
  %128 = bitcast i8* %7 to void (%class.SkRefCntBase*)***
  %129 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %128, align 8, !noalias !12
  %130 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %129, i64 2
  %131 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, align 8
  call void %131(%class.SkRefCntBase* nonnull %127) #11
  br label %132

132:                                              ; preds = %126, %117, %116
  %133 = bitcast %class.sk_sp.29* %0 to i64*
  store i64 %78, i64* %133, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"*) local_unnamed_addr #3

declare dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"*, i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122EllipseGeometryAdapterEN4sksg5RRectEED2Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122EllipseGeometryAdapterEN4sksg5RRectEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.sksg::RRect"*, %"class.sksg::RRect"** %3, align 8
  %5 = icmp eq %"class.sksg::RRect"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::RRect", %"class.sksg::RRect"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::RRect"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::RRect"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #11
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #10
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_122EllipseGeometryAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122EllipseGeometryAdapterEN4sksg5RRectEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.sksg::RRect"*, %"class.sksg::RRect"** %3, align 8
  %5 = icmp eq %"class.sksg::RRect"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::RRect", %"class.sksg::RRect"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::RRect"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::RRect"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #11
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #10
  br label %49

49:                                               ; preds = %16, %47
  %50 = bitcast %"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %50) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_122EllipseGeometryAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %struct.SkRect*
  %4 = alloca %class.SkRRect, align 4
  %5 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter"* %0, i64 0, i32 2, i32 0
  %7 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter"* %0, i64 0, i32 1, i32 0
  %8 = bitcast float* %6 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 8
  %10 = bitcast float* %7 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 8
  %12 = fmul <2 x float> %11, <float 5.000000e-01, float 5.000000e-01>
  %13 = fsub <2 x float> %9, %12
  %14 = fadd <2 x float> %11, %13
  %15 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  store <2 x float> %13, <2 x float>* %15, align 8
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  store <2 x float> %14, <2 x float>* %16, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter", %"class.skottie::internal::(anonymous namespace)::EllipseGeometryAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %"class.sksg::RRect"*, %"class.sksg::RRect"** %17, align 8
  %19 = bitcast %class.SkRRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 0, i64 52, i1 false) #11, !alias.scope !13
  call void @_ZN7SkRRect7setOvalERK6SkRect(%class.SkRRect* nonnull %4, %struct.SkRect* nonnull dereferenceable(16) %3) #11
  %20 = getelementptr inbounds %"class.sksg::RRect", %"class.sksg::RRect"* %18, i64 0, i32 2
  %21 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %20, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %4, i64 0, i32 0, i32 0
  %23 = load float, float* %21, align 4
  %24 = load float, float* %22, align 4
  %25 = fcmp une float %23, %24
  br i1 %25, label %92, label %26

26:                                               ; preds = %1
  %27 = getelementptr inbounds float, float* %21, i64 1
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds float, float* %22, i64 1
  %30 = load float, float* %29, align 4
  %31 = fcmp une float %28, %30
  br i1 %31, label %92, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds float, float* %21, i64 2
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds float, float* %22, i64 2
  %36 = load float, float* %35, align 4
  %37 = fcmp une float %34, %36
  br i1 %37, label %92, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds float, float* %21, i64 3
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds float, float* %22, i64 3
  %42 = load float, float* %41, align 4
  %43 = fcmp une float %40, %42
  br i1 %43, label %92, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.sksg::RRect", %"class.sksg::RRect"* %18, i64 0, i32 2, i32 1, i64 0, i32 0
  %46 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %4, i64 0, i32 1, i64 0, i32 0
  %47 = load float, float* %45, align 4
  %48 = load float, float* %46, align 4
  %49 = fcmp une float %47, %48
  br i1 %49, label %92, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds float, float* %45, i64 1
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds float, float* %46, i64 1
  %54 = load float, float* %53, align 4
  %55 = fcmp une float %52, %54
  br i1 %55, label %92, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds float, float* %45, i64 2
  %58 = load float, float* %57, align 4
  %59 = getelementptr inbounds float, float* %46, i64 2
  %60 = load float, float* %59, align 4
  %61 = fcmp une float %58, %60
  br i1 %61, label %92, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds float, float* %45, i64 3
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds float, float* %46, i64 3
  %66 = load float, float* %65, align 4
  %67 = fcmp une float %64, %66
  br i1 %67, label %92, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds float, float* %45, i64 4
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds float, float* %46, i64 4
  %72 = load float, float* %71, align 4
  %73 = fcmp une float %70, %72
  br i1 %73, label %92, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds float, float* %45, i64 5
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds float, float* %46, i64 5
  %78 = load float, float* %77, align 4
  %79 = fcmp une float %76, %78
  br i1 %79, label %92, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds float, float* %45, i64 6
  %82 = load float, float* %81, align 4
  %83 = getelementptr inbounds float, float* %46, i64 6
  %84 = load float, float* %83, align 4
  %85 = fcmp une float %82, %84
  br i1 %85, label %92, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds float, float* %45, i64 7
  %88 = load float, float* %87, align 4
  %89 = getelementptr inbounds float, float* %46, i64 7
  %90 = load float, float* %89, align 4
  %91 = fcmp une float %88, %90
  br i1 %91, label %92, label %95

92:                                               ; preds = %1, %26, %32, %38, %44, %50, %56, %62, %68, %74, %80, %86
  %93 = bitcast %class.SkRRect* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* nonnull align 4 %19, i64 52, i1 false) #11
  %94 = bitcast %"class.sksg::RRect"* %18 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %94, i1 zeroext true) #11
  br label %95

95:                                               ; preds = %86, %92
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122EllipseGeometryAdapterEN4sksg5RRectEED0Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4sksg5RRectC1ERK7SkRRect(%"class.sksg::RRect"*, %class.SkRRect* dereferenceable(52)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN7skottie5ParseIiEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8), i32*) local_unnamed_addr #3

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, %struct.SkV2*) local_unnamed_addr #3

declare void @_ZN7SkRRect7setOvalERK6SkRect(%class.SkRRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !16

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #11
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #10
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122EllipseGeometryAdapterEN4sksg5RRectEE4MakeIJRKN6skjson11ObjectValueERPKNS0_16AnimationBuilderEEEE5sk_spIS3_EDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_122EllipseGeometryAdapterEN4sksg5RRectEE4MakeIJRKN6skjson11ObjectValueERPKNS0_16AnimationBuilderEEEE5sk_spIS3_EDpOT_"}
!5 = distinct !{!5, !6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_122EllipseGeometryAdapterEJRKN6skjson11ObjectValueERPKS1_EEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSF_: argument 0"}
!6 = distinct !{!6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_122EllipseGeometryAdapterEJRKN6skjson11ObjectValueERPKS1_EEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSF_"}
!7 = !{!8, !3, !5}
!8 = distinct !{!8, !9, !"_ZN4sksg5RRect4MakeEv: argument 0"}
!9 = distinct !{!9, !"_ZN4sksg5RRect4MakeEv"}
!10 = !{!8}
!11 = !{!3}
!12 = !{!5}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN7SkRRect8MakeOvalERK6SkRect: argument 0"}
!15 = distinct !{!15, !"_ZN7SkRRect8MakeOvalERK6SkRect"}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
