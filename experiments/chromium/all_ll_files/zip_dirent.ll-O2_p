; ModuleID = '../../third_party/libzip/src/lib/zip_dirent.c'
source_filename = "../../third_party/libzip/src/lib/zip_dirent.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip_cdir = type { %struct.zip_entry*, i64, i64, i64, i64, %struct.zip_string*, i8 }
%struct.zip_entry = type { %struct.zip_dirent*, %struct.zip_dirent*, %struct.zip_source*, i8 }
%struct.zip_dirent = type { i32, i8, i8, i8, i16, i16, i16, i32, i64, i32, i64, i64, %struct.zip_string*, %struct.zip_extra_field*, %struct.zip_string*, i32, i16, i32, i64, i16, i16, i8* }
%struct.zip_extra_field = type { %struct.zip_extra_field*, i32, i16, i16, i8* }
%struct.zip_source = type { %struct.zip_source*, %union.anon, i8*, %struct.zip_error, i64, i32, i32, i8, %struct.zip*, i32, i8, i8 }
%union.anon = type { i64 (i8*, i8*, i64, i32)* }
%struct.zip_error = type { i32, i32, i8* }
%struct.zip = type { %struct.zip_source*, i32, %struct.zip_error, i32, i32, i8*, %struct.zip_string*, %struct.zip_string*, i8, i64, i64, %struct.zip_entry*, i32, i32, %struct.zip_source**, %struct.zip_hash*, %struct.zip_progress* }
%struct.zip_hash = type opaque
%struct.zip_progress = type opaque
%struct.zip_string = type { i8*, i16, i32, i8*, i32 }
%struct.zip_filelist = type { i64 }
%struct.zip_buffer = type { i8, i8, i8*, i64, i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.zip_file_attributes = type { i64, i8, i8, i8, i8, i32, i16, i16 }

@.str = private unnamed_addr constant [5 x i8] c"PK\06\06\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"PK\06\07\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"PK\05\06\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"PK\03\04\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"PK\01\02\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"AE\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_zip_cdir_free(%struct.zip_cdir*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.zip_cdir* %0, null
  br i1 %2, label %23, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.zip_cdir, %struct.zip_cdir* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = getelementptr inbounds %struct.zip_cdir, %struct.zip_cdir* %0, i64 0, i32 0
  %8 = load %struct.zip_entry*, %struct.zip_entry** %7, align 8
  br i1 %6, label %17, label %9

9:                                                ; preds = %3, %9
  %10 = phi %struct.zip_entry* [ %16, %9 ], [ %8, %3 ]
  %11 = phi i64 [ %13, %9 ], [ 0, %3 ]
  %12 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %10, i64 %11
  tail call void @_zip_entry_finalize(%struct.zip_entry* %12) #9
  %13 = add nuw i64 %11, 1
  %14 = load i64, i64* %4, align 8
  %15 = icmp ult i64 %13, %14
  %16 = load %struct.zip_entry*, %struct.zip_entry** %7, align 8
  br i1 %15, label %9, label %17

17:                                               ; preds = %9, %3
  %18 = phi %struct.zip_entry* [ %8, %3 ], [ %16, %9 ]
  %19 = bitcast %struct.zip_entry* %18 to i8*
  tail call void @free(i8* %19) #9
  %20 = getelementptr inbounds %struct.zip_cdir, %struct.zip_cdir* %0, i64 0, i32 5
  %21 = load %struct.zip_string*, %struct.zip_string** %20, align 8
  tail call void @_zip_string_free(%struct.zip_string* %21) #9
  %22 = bitcast %struct.zip_cdir* %0 to i8*
  tail call void @free(i8* %22) #9
  br label %23

23:                                               ; preds = %1, %17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_zip_entry_finalize(%struct.zip_entry*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_zip_string_free(%struct.zip_string*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.zip_cdir* @_zip_cdir_new(i64, %struct.zip_error*) local_unnamed_addr #0 {
  %3 = tail call noalias i8* @malloc(i64 56) #9
  %4 = bitcast i8* %3 to %struct.zip_cdir*
  %5 = icmp eq i8* %3, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @zip_error_set(%struct.zip_error* %1, i32 14, i32 0) #9
  br label %26

7:                                                ; preds = %2
  %8 = getelementptr inbounds i8, i8* %3, i64 40
  %9 = bitcast i8* %8 to %struct.zip_string**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 49, i1 false)
  %10 = tail call zeroext i1 @_zip_cdir_grow(%struct.zip_cdir* nonnull %4, i64 %0, %struct.zip_error* %1)
  br i1 %10, label %26, label %11

11:                                               ; preds = %7
  %12 = bitcast i8* %3 to %struct.zip_entry**
  %13 = getelementptr inbounds i8, i8* %3, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = load %struct.zip_entry*, %struct.zip_entry** %12, align 8
  br i1 %16, label %23, label %18

18:                                               ; preds = %11, %18
  %19 = phi i64 [ %21, %18 ], [ 0, %11 ]
  %20 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %17, i64 %19
  tail call void @_zip_entry_finalize(%struct.zip_entry* %20) #9
  %21 = add nuw i64 %19, 1
  %22 = icmp eq i64 %21, %15
  br i1 %22, label %23, label %18

23:                                               ; preds = %18, %11
  %24 = bitcast %struct.zip_entry* %17 to i8*
  tail call void @free(i8* %24) #9
  %25 = load %struct.zip_string*, %struct.zip_string** %9, align 8
  tail call void @_zip_string_free(%struct.zip_string* %25) #9
  tail call void @free(i8* %3) #9
  br label %26

26:                                               ; preds = %7, %23, %6
  %27 = phi %struct.zip_cdir* [ null, %6 ], [ null, %23 ], [ %4, %7 ]
  ret %struct.zip_cdir* %27
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare void @zip_error_set(%struct.zip_error*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_zip_cdir_grow(%struct.zip_cdir* nocapture, i64, %struct.zip_error*) local_unnamed_addr #0 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %37, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.zip_cdir, %struct.zip_cdir* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %1
  %9 = icmp ult i64 %8, %1
  %10 = icmp ugt i64 %8, 576460752303423487
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %5
  tail call void @zip_error_set(%struct.zip_error* %2, i32 14, i32 0) #9
  br label %37

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.zip_cdir, %struct.zip_cdir* %0, i64 0, i32 0
  %15 = bitcast %struct.zip_cdir* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = shl i64 %8, 5
  %18 = tail call i8* @realloc(i8* %16, i64 %17) #9
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %13
  tail call void @zip_error_set(%struct.zip_error* %2, i32 14, i32 0) #9
  br label %37

21:                                               ; preds = %13
  store i8* %18, i8** %15, align 8
  %22 = getelementptr inbounds %struct.zip_cdir, %struct.zip_cdir* %0, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, %8
  br i1 %24, label %25, label %36

25:                                               ; preds = %21
  %26 = bitcast i8* %18 to %struct.zip_entry*
  %27 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %26, i64 %23
  tail call void @_zip_entry_init(%struct.zip_entry* %27) #9
  %28 = add i64 %23, 1
  %29 = icmp eq i64 %28, %8
  br i1 %29, label %36, label %30

30:                                               ; preds = %25, %30
  %31 = phi i64 [ %34, %30 ], [ %28, %25 ]
  %32 = load %struct.zip_entry*, %struct.zip_entry** %14, align 8
  %33 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %32, i64 %31
  tail call void @_zip_entry_init(%struct.zip_entry* %33) #9
  %34 = add i64 %31, 1
  %35 = icmp eq i64 %34, %8
  br i1 %35, label %36, label %30

36:                                               ; preds = %30, %25, %21
  store i64 %8, i64* %6, align 8
  store i64 %8, i64* %22, align 8
  br label %37

37:                                               ; preds = %3, %36, %20, %12
  %38 = phi i1 [ false, %12 ], [ false, %20 ], [ true, %36 ], [ true, %3 ]
  ret i1 %38
}

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #3

declare void @_zip_entry_init(%struct.zip_entry*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_zip_cdir_write(%struct.zip*, %struct.zip_filelist* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = alloca [98 x i8], align 16
  %5 = getelementptr inbounds [98 x i8], [98 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 98, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 98, i1 false)
  %6 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 0
  %7 = load %struct.zip_source*, %struct.zip_source** %6, align 8
  %8 = tail call i64 @zip_source_tell_write(%struct.zip_source* %7) #9
  %9 = icmp slt i64 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = icmp eq i64 %2, 0
  br i1 %11, label %40, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 11
  br label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  %16 = load %struct.zip_source*, %struct.zip_source** %6, align 8
  tail call void @_zip_error_set_from_source(%struct.zip_error* %15, %struct.zip_source* %16) #9
  br label %123

17:                                               ; preds = %33, %12
  %18 = phi i8 [ 0, %12 ], [ %35, %33 ]
  %19 = phi i64 [ 0, %12 ], [ %36, %33 ]
  %20 = load %struct.zip_entry*, %struct.zip_entry** %13, align 8
  %21 = getelementptr inbounds %struct.zip_filelist, %struct.zip_filelist* %1, i64 %19, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %20, i64 %22, i32 1
  %24 = load %struct.zip_dirent*, %struct.zip_dirent** %23, align 8
  %25 = icmp eq %struct.zip_dirent* %24, null
  br i1 %25, label %26, label %29

26:                                               ; preds = %17
  %27 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %20, i64 %22, i32 0
  %28 = load %struct.zip_dirent*, %struct.zip_dirent** %27, align 8
  br label %29

29:                                               ; preds = %17, %26
  %30 = phi %struct.zip_dirent* [ %28, %26 ], [ %24, %17 ]
  %31 = tail call i32 @_zip_dirent_write(%struct.zip* %0, %struct.zip_dirent* %30, i32 512)
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %33, label %123

33:                                               ; preds = %29
  %34 = icmp eq i32 %31, 0
  %35 = select i1 %34, i8 %18, i8 1
  %36 = add nuw i64 %19, 1
  %37 = icmp eq i64 %36, %2
  br i1 %37, label %38, label %17

38:                                               ; preds = %33
  %39 = and i8 %35, 1
  br label %40

40:                                               ; preds = %38, %10
  %41 = phi i8 [ 0, %10 ], [ %39, %38 ]
  %42 = load %struct.zip_source*, %struct.zip_source** %6, align 8
  %43 = tail call i64 @zip_source_tell_write(%struct.zip_source* %42) #9
  %44 = icmp slt i64 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  %47 = load %struct.zip_source*, %struct.zip_source** %6, align 8
  tail call void @_zip_error_set_from_source(%struct.zip_error* %46, %struct.zip_source* %47) #9
  br label %123

48:                                               ; preds = %40
  %49 = sub i64 %43, %8
  %50 = call %struct.zip_buffer* @_zip_buffer_new(i8* nonnull %5, i64 98) #9
  %51 = icmp eq %struct.zip_buffer* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  call void @zip_error_set(%struct.zip_error* %53, i32 14, i32 0) #9
  br label %123

54:                                               ; preds = %48
  %55 = icmp ult i64 %8, 4294967296
  %56 = icmp ult i64 %2, 65536
  %57 = icmp eq i8 %41, 0
  %58 = and i1 %56, %55
  %59 = and i1 %58, %57
  br i1 %59, label %75, label %60

60:                                               ; preds = %54
  %61 = call i32 @_zip_buffer_put(%struct.zip_buffer* nonnull %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #9
  %62 = call i32 @_zip_buffer_put_64(%struct.zip_buffer* nonnull %50, i64 44) #9
  %63 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %50, i16 zeroext 45) #9
  %64 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %50, i16 zeroext 45) #9
  %65 = call i32 @_zip_buffer_put_32(%struct.zip_buffer* nonnull %50, i32 0) #9
  %66 = call i32 @_zip_buffer_put_32(%struct.zip_buffer* nonnull %50, i32 0) #9
  %67 = call i32 @_zip_buffer_put_64(%struct.zip_buffer* nonnull %50, i64 %2) #9
  %68 = call i32 @_zip_buffer_put_64(%struct.zip_buffer* nonnull %50, i64 %2) #9
  %69 = call i32 @_zip_buffer_put_64(%struct.zip_buffer* nonnull %50, i64 %49) #9
  %70 = call i32 @_zip_buffer_put_64(%struct.zip_buffer* nonnull %50, i64 %8) #9
  %71 = call i32 @_zip_buffer_put(%struct.zip_buffer* nonnull %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #9
  %72 = call i32 @_zip_buffer_put_32(%struct.zip_buffer* nonnull %50, i32 0) #9
  %73 = call i32 @_zip_buffer_put_64(%struct.zip_buffer* nonnull %50, i64 %43) #9
  %74 = call i32 @_zip_buffer_put_32(%struct.zip_buffer* nonnull %50, i32 1) #9
  br label %75

75:                                               ; preds = %54, %60
  %76 = call i32 @_zip_buffer_put(%struct.zip_buffer* nonnull %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #9
  %77 = call i32 @_zip_buffer_put_32(%struct.zip_buffer* nonnull %50, i32 0) #9
  %78 = icmp ult i64 %2, 65535
  %79 = select i1 %78, i64 %2, i64 65535
  %80 = trunc i64 %79 to i16
  %81 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %50, i16 zeroext %80) #9
  %82 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %50, i16 zeroext %80) #9
  %83 = icmp ult i64 %49, 4294967295
  %84 = select i1 %83, i64 %49, i64 4294967295
  %85 = trunc i64 %84 to i32
  %86 = call i32 @_zip_buffer_put_32(%struct.zip_buffer* nonnull %50, i32 %85) #9
  %87 = icmp ult i64 %8, 4294967295
  %88 = select i1 %87, i64 %8, i64 4294967295
  %89 = trunc i64 %88 to i32
  %90 = call i32 @_zip_buffer_put_32(%struct.zip_buffer* nonnull %50, i32 %89) #9
  %91 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 8
  %92 = load i8, i8* %91, align 8, !range !2
  %93 = icmp eq i8 %92, 0
  %94 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 7
  %95 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 6
  %96 = select i1 %93, %struct.zip_string** %95, %struct.zip_string** %94
  %97 = load %struct.zip_string*, %struct.zip_string** %96, align 8
  %98 = icmp ne %struct.zip_string* %97, null
  br i1 %98, label %99, label %102

99:                                               ; preds = %75
  %100 = getelementptr inbounds %struct.zip_string, %struct.zip_string* %97, i64 0, i32 1
  %101 = load i16, i16* %100, align 8
  br label %102

102:                                              ; preds = %75, %99
  %103 = phi i16 [ %101, %99 ], [ 0, %75 ]
  %104 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %50, i16 zeroext %103) #9
  %105 = call zeroext i1 @_zip_buffer_ok(%struct.zip_buffer* nonnull %50) #9
  br i1 %105, label %108, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  call void @zip_error_set(%struct.zip_error* %107, i32 20, i32 0) #9
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %50) #9
  br label %123

108:                                              ; preds = %102
  %109 = call i8* @_zip_buffer_data(%struct.zip_buffer* nonnull %50) #9
  %110 = call i64 @_zip_buffer_offset(%struct.zip_buffer* nonnull %50) #9
  %111 = call i32 @_zip_write(%struct.zip* %0, i8* %109, i64 %110) #9
  %112 = icmp slt i32 %111, 0
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %50) #9
  br i1 %112, label %123, label %113

113:                                              ; preds = %108
  br i1 %98, label %114, label %122

114:                                              ; preds = %113
  %115 = getelementptr inbounds %struct.zip_string, %struct.zip_string* %97, i64 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds %struct.zip_string, %struct.zip_string* %97, i64 0, i32 1
  %118 = load i16, i16* %117, align 8
  %119 = zext i16 %118 to i64
  %120 = call i32 @_zip_write(%struct.zip* %0, i8* %116, i64 %119) #9
  %121 = icmp slt i32 %120, 0
  br i1 %121, label %123, label %122

122:                                              ; preds = %114, %113
  br label %123

123:                                              ; preds = %29, %114, %108, %122, %106, %52, %45, %14
  %124 = phi i64 [ -1, %14 ], [ -1, %45 ], [ -1, %52 ], [ %49, %122 ], [ -1, %106 ], [ -1, %108 ], [ -1, %114 ], [ -1, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 98, i8* nonnull %5) #9
  ret i64 %124
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @zip_source_tell_write(%struct.zip_source*) local_unnamed_addr #2

declare void @_zip_error_set_from_source(%struct.zip_error*, %struct.zip_source*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_zip_dirent_write(%struct.zip*, %struct.zip_dirent*, i32) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.tm, align 8
  %6 = alloca [46 x i8], align 16
  %7 = alloca [28 x i8], align 16
  %8 = alloca [7 x i8], align 1
  %9 = getelementptr inbounds [46 x i8], [46 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 46, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 46, i1 false)
  %10 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 12
  %11 = load %struct.zip_string*, %struct.zip_string** %10, align 8
  %12 = tail call i32 @_zip_guess_encoding(%struct.zip_string* %11, i32 0) #9
  %13 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 14
  %14 = load %struct.zip_string*, %struct.zip_string** %13, align 8
  %15 = tail call i32 @_zip_guess_encoding(%struct.zip_string* %14, i32 0) #9
  %16 = icmp eq i32 %12, 2
  %17 = icmp eq i32 %15, 1
  %18 = and i1 %16, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %3
  %20 = icmp eq i32 %15, 2
  %21 = add i32 %12, -1
  %22 = icmp ult i32 %21, 2
  %23 = and i1 %22, %20
  br i1 %23, label %24, label %28

24:                                               ; preds = %19, %3
  %25 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 6
  %26 = load i16, i16* %25, align 4
  %27 = or i16 %26, 2048
  store i16 %27, i16* %25, align 4
  br label %50

28:                                               ; preds = %19
  %29 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 6
  %30 = load i16, i16* %29, align 4
  %31 = and i16 %30, -2049
  store i16 %31, i16* %29, align 4
  br i1 %16, label %32, label %37

32:                                               ; preds = %28
  %33 = load %struct.zip_string*, %struct.zip_string** %10, align 8
  %34 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  %35 = tail call fastcc %struct.zip_extra_field* @_zip_ef_utf8(i16 zeroext 28789, %struct.zip_string* %33, %struct.zip_error* %34)
  %36 = icmp eq %struct.zip_extra_field* %35, null
  br i1 %36, label %350, label %37

37:                                               ; preds = %32, %28
  %38 = phi %struct.zip_extra_field* [ %35, %32 ], [ null, %28 ]
  %39 = and i32 %2, 256
  %40 = icmp eq i32 %39, 0
  %41 = and i1 %40, %20
  br i1 %41, label %42, label %50

42:                                               ; preds = %37
  %43 = load %struct.zip_string*, %struct.zip_string** %13, align 8
  %44 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  %45 = tail call fastcc %struct.zip_extra_field* @_zip_ef_utf8(i16 zeroext 25461, %struct.zip_string* %43, %struct.zip_error* %44)
  %46 = icmp eq %struct.zip_extra_field* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %45, i64 0, i32 0
  store %struct.zip_extra_field* %38, %struct.zip_extra_field** %48, align 8
  br label %50

49:                                               ; preds = %42
  tail call void @_zip_ef_free(%struct.zip_extra_field* %38) #9
  br label %350

50:                                               ; preds = %47, %37, %24
  %51 = phi %struct.zip_extra_field* [ null, %24 ], [ %38, %37 ], [ %45, %47 ]
  %52 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 20
  %53 = load i16, i16* %52, align 2
  %54 = icmp eq i16 %53, 0
  %55 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 6
  %56 = load i16, i16* %55, align 4
  %57 = or i16 %56, 1
  %58 = and i16 %56, -2
  %59 = select i1 %54, i16 %58, i16 %57
  store i16 %59, i16* %55, align 4
  %60 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 11
  %61 = load i64, i64* %60, align 8
  %62 = icmp ugt i64 %61, 4294967294
  br i1 %62, label %74, label %63

63:                                               ; preds = %50
  %64 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 10
  %65 = load i64, i64* %64, align 8
  %66 = icmp ugt i64 %65, 4294967294
  br i1 %66, label %74, label %67

67:                                               ; preds = %63
  %68 = and i32 %2, 512
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %77, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 18
  %72 = load i64, i64* %71, align 8
  %73 = icmp ugt i64 %72, 4294967294
  br i1 %73, label %74, label %77

74:                                               ; preds = %70, %63, %50
  %75 = add i16 %53, -257
  %76 = icmp ult i16 %75, 3
  br label %82

77:                                               ; preds = %67, %70
  %78 = and i32 %2, 1280
  %79 = icmp eq i32 %78, 1280
  %80 = add i16 %53, -257
  %81 = icmp ult i16 %80, 3
  br i1 %79, label %82, label %149

82:                                               ; preds = %74, %77
  %83 = phi i1 [ %76, %74 ], [ %81, %77 ]
  %84 = phi i1 [ true, %74 ], [ false, %77 ]
  %85 = getelementptr inbounds [28 x i8], [28 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %85) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %85, i8 -86, i64 28, i1 false)
  %86 = call %struct.zip_buffer* @_zip_buffer_new(i8* nonnull %85, i64 28) #9
  %87 = icmp eq %struct.zip_buffer* %86, null
  br i1 %87, label %88, label %90

88:                                               ; preds = %82
  %89 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  call void @zip_error_set(%struct.zip_error* %89, i32 14, i32 0) #9
  br label %143

90:                                               ; preds = %82
  %91 = and i32 %2, 256
  %92 = icmp eq i32 %91, 0
  %93 = and i32 %2, 1024
  %94 = icmp ne i32 %93, 0
  br i1 %92, label %109, label %95

95:                                               ; preds = %90
  br i1 %94, label %103, label %96

96:                                               ; preds = %95
  %97 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 10
  %98 = load i64, i64* %97, align 8
  %99 = icmp ugt i64 %98, 4294967295
  br i1 %99, label %103, label %100

100:                                              ; preds = %96
  %101 = load i64, i64* %60, align 8
  %102 = icmp ugt i64 %101, 4294967295
  br i1 %102, label %103, label %139

103:                                              ; preds = %100, %96, %95
  %104 = load i64, i64* %60, align 8
  %105 = call i32 @_zip_buffer_put_64(%struct.zip_buffer* nonnull %86, i64 %104) #9
  %106 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 10
  %107 = load i64, i64* %106, align 8
  %108 = call i32 @_zip_buffer_put_64(%struct.zip_buffer* nonnull %86, i64 %107) #9
  br label %139

109:                                              ; preds = %90
  br i1 %94, label %121, label %110

110:                                              ; preds = %109
  %111 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 10
  %112 = load i64, i64* %111, align 8
  %113 = icmp ugt i64 %112, 4294967295
  br i1 %113, label %121, label %114

114:                                              ; preds = %110
  %115 = load i64, i64* %60, align 8
  %116 = icmp ugt i64 %115, 4294967295
  br i1 %116, label %124, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 18
  %119 = load i64, i64* %118, align 8
  %120 = icmp ugt i64 %119, 4294967295
  br i1 %120, label %121, label %139

121:                                              ; preds = %117, %110, %109
  %122 = load i64, i64* %60, align 8
  %123 = icmp ugt i64 %122, 4294967294
  br i1 %123, label %124, label %127

124:                                              ; preds = %114, %121
  %125 = phi i64 [ %122, %121 ], [ %115, %114 ]
  %126 = call i32 @_zip_buffer_put_64(%struct.zip_buffer* nonnull %86, i64 %125) #9
  br label %127

127:                                              ; preds = %124, %121
  %128 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 10
  %129 = load i64, i64* %128, align 8
  %130 = icmp ugt i64 %129, 4294967294
  br i1 %130, label %131, label %133

131:                                              ; preds = %127
  %132 = call i32 @_zip_buffer_put_64(%struct.zip_buffer* nonnull %86, i64 %129) #9
  br label %133

133:                                              ; preds = %131, %127
  %134 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 18
  %135 = load i64, i64* %134, align 8
  %136 = icmp ugt i64 %135, 4294967294
  br i1 %136, label %137, label %139

137:                                              ; preds = %133
  %138 = call i32 @_zip_buffer_put_64(%struct.zip_buffer* nonnull %86, i64 %135) #9
  br label %139

139:                                              ; preds = %117, %137, %133, %100, %103
  %140 = call zeroext i1 @_zip_buffer_ok(%struct.zip_buffer* nonnull %86) #9
  br i1 %140, label %144, label %141

141:                                              ; preds = %139
  %142 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  call void @zip_error_set(%struct.zip_error* %142, i32 20, i32 0) #9
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %86) #9
  br label %143

143:                                              ; preds = %88, %141
  call void @_zip_ef_free(%struct.zip_extra_field* %51) #9
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %85) #9
  br label %350

144:                                              ; preds = %139
  %145 = call i64 @_zip_buffer_offset(%struct.zip_buffer* nonnull %86) #9
  %146 = trunc i64 %145 to i16
  %147 = call %struct.zip_extra_field* @_zip_ef_new(i16 zeroext 1, i16 zeroext %146, i8* nonnull %85, i32 768) #9
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %86) #9
  %148 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %147, i64 0, i32 0
  store %struct.zip_extra_field* %51, %struct.zip_extra_field** %148, align 8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %85) #9
  br i1 %83, label %150, label %176

149:                                              ; preds = %77
  br i1 %81, label %150, label %176

150:                                              ; preds = %144, %149
  %151 = phi %struct.zip_extra_field* [ %147, %144 ], [ %51, %149 ]
  %152 = phi i1 [ %84, %144 ], [ false, %149 ]
  %153 = phi i32 [ 1, %144 ], [ 0, %149 ]
  %154 = getelementptr inbounds [7 x i8], [7 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %154) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %154, i8 -86, i64 7, i1 false)
  %155 = call %struct.zip_buffer* @_zip_buffer_new(i8* nonnull %154, i64 7) #9
  %156 = icmp eq %struct.zip_buffer* %155, null
  br i1 %156, label %157, label %159

157:                                              ; preds = %150
  %158 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  call void @zip_error_set(%struct.zip_error* %158, i32 14, i32 0) #9
  br label %172

159:                                              ; preds = %150
  %160 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %155, i16 zeroext 2) #9
  %161 = call i32 @_zip_buffer_put(%struct.zip_buffer* nonnull %155, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 2) #9
  %162 = load i16, i16* %52, align 2
  %163 = trunc i16 %162 to i8
  %164 = call i32 @_zip_buffer_put_8(%struct.zip_buffer* nonnull %155, i8 zeroext %163) #9
  %165 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 7
  %166 = load i32, i32* %165, align 8
  %167 = trunc i32 %166 to i16
  %168 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %155, i16 zeroext %167) #9
  %169 = call zeroext i1 @_zip_buffer_ok(%struct.zip_buffer* nonnull %155) #9
  br i1 %169, label %173, label %170

170:                                              ; preds = %159
  %171 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  call void @zip_error_set(%struct.zip_error* %171, i32 20, i32 0) #9
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %155) #9
  br label %172

172:                                              ; preds = %157, %170
  call void @_zip_ef_free(%struct.zip_extra_field* %151) #9
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %154) #9
  br label %350

173:                                              ; preds = %159
  %174 = call %struct.zip_extra_field* @_zip_ef_new(i16 zeroext -26367, i16 zeroext 7, i8* nonnull %154, i32 768) #9
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %155) #9
  %175 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %174, i64 0, i32 0
  store %struct.zip_extra_field* %151, %struct.zip_extra_field** %175, align 8
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %154) #9
  br label %176

176:                                              ; preds = %173, %144, %149
  %177 = phi i1 [ %152, %173 ], [ false, %149 ], [ %84, %144 ]
  %178 = phi i32 [ %153, %173 ], [ 0, %149 ], [ 1, %144 ]
  %179 = phi i1 [ true, %173 ], [ false, %149 ], [ false, %144 ]
  %180 = phi %struct.zip_extra_field* [ %174, %173 ], [ %51, %149 ], [ %147, %144 ]
  %181 = call %struct.zip_buffer* @_zip_buffer_new(i8* nonnull %9, i64 46) #9
  %182 = icmp eq %struct.zip_buffer* %181, null
  br i1 %182, label %183, label %185

183:                                              ; preds = %176
  %184 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  call void @zip_error_set(%struct.zip_error* %184, i32 14, i32 0) #9
  call void @_zip_ef_free(%struct.zip_extra_field* %180) #9
  br label %350

185:                                              ; preds = %176
  %186 = and i32 %2, 256
  %187 = icmp eq i32 %186, 0
  %188 = select i1 %187, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)
  %189 = call i32 @_zip_buffer_put(%struct.zip_buffer* nonnull %181, i8* %188, i64 4) #9
  br i1 %187, label %190, label %194

190:                                              ; preds = %185
  %191 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 4
  %192 = load i16, i16* %191, align 8
  %193 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %181, i16 zeroext %192) #9
  br label %194

194:                                              ; preds = %190, %185
  %195 = select i1 %177, i32 45, i32 0
  %196 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 5
  %197 = load i16, i16* %196, align 2
  %198 = zext i16 %197 to i32
  %199 = icmp ugt i32 %195, %198
  %200 = select i1 %199, i32 %195, i32 %198
  %201 = trunc i32 %200 to i16
  %202 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %181, i16 zeroext %201) #9
  %203 = load i16, i16* %55, align 4
  %204 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %181, i16 zeroext %203) #9
  br i1 %179, label %209, label %205

205:                                              ; preds = %194
  %206 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 7
  %207 = load i32, i32* %206, align 8
  %208 = trunc i32 %207 to i16
  br label %209

209:                                              ; preds = %194, %205
  %210 = phi i16 [ %208, %205 ], [ 99, %194 ]
  %211 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %181, i16 zeroext %210) #9
  %212 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 8
  %213 = load i64, i64* %212, align 8
  %214 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214)
  store i64 %213, i64* %4, align 8
  %215 = bitcast %struct.tm* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %215) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %215, i8 -86, i64 56, i1 false) #9
  %216 = call %struct.tm* @localtime_r(i64* nonnull %4, %struct.tm* nonnull %5) #9
  %217 = icmp eq %struct.tm* %216, null
  br i1 %217, label %247, label %218

218:                                              ; preds = %209
  %219 = getelementptr inbounds %struct.tm, %struct.tm* %216, i64 0, i32 5
  %220 = load i32, i32* %219, align 4
  %221 = icmp slt i32 %220, 80
  br i1 %221, label %222, label %223

222:                                              ; preds = %218
  store i32 80, i32* %219, align 4
  br label %223

223:                                              ; preds = %222, %218
  %224 = phi i32 [ 80, %222 ], [ %220, %218 ]
  %225 = shl i32 %224, 9
  %226 = getelementptr inbounds %struct.tm, %struct.tm* %216, i64 0, i32 4
  %227 = load i32, i32* %226, align 8
  %228 = shl i32 %227, 5
  %229 = getelementptr inbounds %struct.tm, %struct.tm* %216, i64 0, i32 3
  %230 = load i32, i32* %229, align 4
  %231 = add i32 %225, 24608
  %232 = add i32 %231, %228
  %233 = add i32 %232, %230
  %234 = trunc i32 %233 to i16
  %235 = getelementptr inbounds %struct.tm, %struct.tm* %216, i64 0, i32 2
  %236 = load i32, i32* %235, align 8
  %237 = shl i32 %236, 11
  %238 = getelementptr inbounds %struct.tm, %struct.tm* %216, i64 0, i32 1
  %239 = load i32, i32* %238, align 4
  %240 = shl i32 %239, 5
  %241 = add nsw i32 %240, %237
  %242 = getelementptr inbounds %struct.tm, %struct.tm* %216, i64 0, i32 0
  %243 = load i32, i32* %242, align 8
  %244 = lshr i32 %243, 1
  %245 = add i32 %241, %244
  %246 = trunc i32 %245 to i16
  br label %247

247:                                              ; preds = %209, %223
  %248 = phi i16 [ %234, %223 ], [ 33, %209 ]
  %249 = phi i16 [ %246, %223 ], [ 0, %209 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %215) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214)
  %250 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %181, i16 zeroext %249) #9
  %251 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %181, i16 zeroext %248) #9
  br i1 %179, label %252, label %255

252:                                              ; preds = %247
  %253 = load i64, i64* %60, align 8
  %254 = icmp ult i64 %253, 20
  br i1 %254, label %258, label %255

255:                                              ; preds = %252, %247
  %256 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 9
  %257 = load i32, i32* %256, align 8
  br label %258

258:                                              ; preds = %252, %255
  %259 = phi i32 [ %257, %255 ], [ 0, %252 ]
  %260 = call i32 @_zip_buffer_put_32(%struct.zip_buffer* nonnull %181, i32 %259) #9
  %261 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 10
  %262 = load i64, i64* %261, align 8
  br i1 %187, label %270, label %263

263:                                              ; preds = %258
  %264 = icmp ugt i64 %262, 4294967294
  br i1 %264, label %268, label %265

265:                                              ; preds = %263
  %266 = load i64, i64* %60, align 8
  %267 = icmp ugt i64 %266, 4294967294
  br i1 %267, label %268, label %272

268:                                              ; preds = %265, %263
  %269 = call i32 @_zip_buffer_put_32(%struct.zip_buffer* nonnull %181, i32 -1) #9
  br label %281

270:                                              ; preds = %258
  %271 = icmp ult i64 %262, 4294967295
  br i1 %271, label %272, label %274

272:                                              ; preds = %265, %270
  %273 = trunc i64 %262 to i32
  br label %274

274:                                              ; preds = %270, %272
  %275 = phi i32 [ %273, %272 ], [ -1, %270 ]
  %276 = call i32 @_zip_buffer_put_32(%struct.zip_buffer* nonnull %181, i32 %275) #9
  %277 = load i64, i64* %60, align 8
  %278 = icmp ult i64 %277, 4294967295
  %279 = select i1 %278, i64 %277, i64 4294967295
  %280 = trunc i64 %279 to i32
  br label %281

281:                                              ; preds = %274, %268
  %282 = phi i32 [ -1, %268 ], [ %280, %274 ]
  %283 = call i32 @_zip_buffer_put_32(%struct.zip_buffer* nonnull %181, i32 %282) #9
  %284 = load %struct.zip_string*, %struct.zip_string** %10, align 8
  %285 = call zeroext i16 @_zip_string_length(%struct.zip_string* %284) #9
  %286 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %181, i16 zeroext %285) #9
  %287 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 13
  %288 = load %struct.zip_extra_field*, %struct.zip_extra_field** %287, align 8
  %289 = call zeroext i16 @_zip_ef_size(%struct.zip_extra_field* %288, i32 %2) #9
  %290 = call zeroext i16 @_zip_ef_size(%struct.zip_extra_field* %180, i32 768) #9
  %291 = add i16 %290, %289
  %292 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %181, i16 zeroext %291) #9
  br i1 %187, label %293, label %313

293:                                              ; preds = %281
  %294 = load %struct.zip_string*, %struct.zip_string** %13, align 8
  %295 = call zeroext i16 @_zip_string_length(%struct.zip_string* %294) #9
  %296 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %181, i16 zeroext %295) #9
  %297 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 15
  %298 = load i32, i32* %297, align 8
  %299 = trunc i32 %298 to i16
  %300 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %181, i16 zeroext %299) #9
  %301 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 16
  %302 = load i16, i16* %301, align 4
  %303 = call i32 @_zip_buffer_put_16(%struct.zip_buffer* nonnull %181, i16 zeroext %302) #9
  %304 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 17
  %305 = load i32, i32* %304, align 8
  %306 = call i32 @_zip_buffer_put_32(%struct.zip_buffer* nonnull %181, i32 %305) #9
  %307 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %1, i64 0, i32 18
  %308 = load i64, i64* %307, align 8
  %309 = icmp ult i64 %308, 4294967295
  %310 = select i1 %309, i64 %308, i64 4294967295
  %311 = trunc i64 %310 to i32
  %312 = call i32 @_zip_buffer_put_32(%struct.zip_buffer* nonnull %181, i32 %311) #9
  br label %313

313:                                              ; preds = %293, %281
  %314 = call zeroext i1 @_zip_buffer_ok(%struct.zip_buffer* nonnull %181) #9
  br i1 %314, label %317, label %315

315:                                              ; preds = %313
  %316 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  call void @zip_error_set(%struct.zip_error* %316, i32 20, i32 0) #9
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %181) #9
  call void @_zip_ef_free(%struct.zip_extra_field* %180) #9
  br label %350

317:                                              ; preds = %313
  %318 = call i64 @_zip_buffer_offset(%struct.zip_buffer* nonnull %181) #9
  %319 = call i32 @_zip_write(%struct.zip* %0, i8* nonnull %9, i64 %318) #9
  %320 = icmp slt i32 %319, 0
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %181) #9
  br i1 %320, label %321, label %322

321:                                              ; preds = %317
  call void @_zip_ef_free(%struct.zip_extra_field* %180) #9
  br label %350

322:                                              ; preds = %317
  %323 = load %struct.zip_string*, %struct.zip_string** %10, align 8
  %324 = icmp eq %struct.zip_string* %323, null
  br i1 %324, label %329, label %325

325:                                              ; preds = %322
  %326 = call i32 @_zip_string_write(%struct.zip* %0, %struct.zip_string* nonnull %323) #9
  %327 = icmp slt i32 %326, 0
  br i1 %327, label %328, label %329

328:                                              ; preds = %325
  call void @_zip_ef_free(%struct.zip_extra_field* %180) #9
  br label %350

329:                                              ; preds = %322, %325
  %330 = icmp eq %struct.zip_extra_field* %180, null
  br i1 %330, label %335, label %331

331:                                              ; preds = %329
  %332 = call i32 @_zip_ef_write(%struct.zip* %0, %struct.zip_extra_field* nonnull %180, i32 768) #9
  %333 = icmp slt i32 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %331
  call void @_zip_ef_free(%struct.zip_extra_field* nonnull %180) #9
  br label %350

335:                                              ; preds = %329, %331
  call void @_zip_ef_free(%struct.zip_extra_field* %180) #9
  %336 = load %struct.zip_extra_field*, %struct.zip_extra_field** %287, align 8
  %337 = icmp eq %struct.zip_extra_field* %336, null
  br i1 %337, label %341, label %338

338:                                              ; preds = %335
  %339 = call i32 @_zip_ef_write(%struct.zip* %0, %struct.zip_extra_field* nonnull %336, i32 %2) #9
  %340 = icmp slt i32 %339, 0
  br i1 %340, label %350, label %341

341:                                              ; preds = %335, %338
  br i1 %187, label %342, label %348

342:                                              ; preds = %341
  %343 = load %struct.zip_string*, %struct.zip_string** %13, align 8
  %344 = icmp eq %struct.zip_string* %343, null
  br i1 %344, label %348, label %345

345:                                              ; preds = %342
  %346 = call i32 @_zip_string_write(%struct.zip* %0, %struct.zip_string* nonnull %343) #9
  %347 = icmp slt i32 %346, 0
  br i1 %347, label %350, label %348

348:                                              ; preds = %342, %345, %341
  %349 = and i32 %178, 1
  br label %350

350:                                              ; preds = %172, %143, %49, %345, %338, %32, %348, %334, %328, %321, %315, %183
  %351 = phi i32 [ -1, %183 ], [ -1, %321 ], [ -1, %328 ], [ -1, %334 ], [ %349, %348 ], [ -1, %315 ], [ -1, %49 ], [ -1, %32 ], [ -1, %338 ], [ -1, %345 ], [ -1, %143 ], [ -1, %172 ]
  call void @llvm.lifetime.end.p0i8(i64 46, i8* nonnull %9) #9
  ret i32 %351
}

declare %struct.zip_buffer* @_zip_buffer_new(i8*, i64) local_unnamed_addr #2

declare i32 @_zip_buffer_put(%struct.zip_buffer*, i8*, i64) local_unnamed_addr #2

declare i32 @_zip_buffer_put_64(%struct.zip_buffer*, i64) local_unnamed_addr #2

declare i32 @_zip_buffer_put_16(%struct.zip_buffer*, i16 zeroext) local_unnamed_addr #2

declare i32 @_zip_buffer_put_32(%struct.zip_buffer*, i32) local_unnamed_addr #2

declare zeroext i1 @_zip_buffer_ok(%struct.zip_buffer*) local_unnamed_addr #2

declare void @_zip_buffer_free(%struct.zip_buffer*) local_unnamed_addr #2

declare i32 @_zip_write(%struct.zip*, i8*, i64) local_unnamed_addr #2

declare i8* @_zip_buffer_data(%struct.zip_buffer*) local_unnamed_addr #2

declare i64 @_zip_buffer_offset(%struct.zip_buffer*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.zip_dirent* @_zip_dirent_clone(%struct.zip_dirent* readonly) local_unnamed_addr #0 {
  %2 = tail call noalias i8* @malloc(i64 120) #9
  %3 = bitcast i8* %2 to %struct.zip_dirent*
  %4 = icmp eq i8* %2, null
  br i1 %4, label %41, label %5

5:                                                ; preds = %1
  %6 = icmp eq %struct.zip_dirent* %0, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %5
  %8 = bitcast %struct.zip_dirent* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %8, i64 120, i1 false)
  %9 = bitcast i8* %2 to i32*
  br label %38

10:                                               ; preds = %5
  %11 = bitcast i8* %2 to i32*
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 4
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 5
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds i8, i8* %2, i64 6
  store i8 1, i8* %14, align 2
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i16*
  store i16 831, i16* %16, align 8
  %17 = getelementptr inbounds i8, i8* %2, i64 10
  %18 = bitcast i8* %17 to i16*
  store i16 10, i16* %18, align 2
  %19 = getelementptr inbounds i8, i8* %2, i64 12
  %20 = bitcast i8* %19 to i16*
  store i16 0, i16* %20, align 4
  %21 = getelementptr inbounds i8, i8* %2, i64 16
  %22 = bitcast i8* %21 to i32*
  store i32 -1, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %2, i64 24
  %24 = bitcast i8* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 32
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %2, i64 40
  %28 = getelementptr inbounds i8, i8* %2, i64 88
  %29 = bitcast i8* %28 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 46, i1 false) #9
  store i32 -2118778880, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %2, i64 96
  %31 = bitcast i8* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %2, i64 104
  %33 = bitcast i8* %32 to i16*
  store i16 0, i16* %33, align 8
  %34 = getelementptr inbounds i8, i8* %2, i64 106
  %35 = bitcast i8* %34 to i16*
  store i16 0, i16* %35, align 2
  %36 = getelementptr inbounds i8, i8* %2, i64 112
  %37 = bitcast i8* %36 to i8**
  store i8* null, i8** %37, align 8
  br label %38

38:                                               ; preds = %10, %7
  %39 = phi i32* [ %11, %10 ], [ %9, %7 ]
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %2, i64 5
  store i8 1, i8* %40, align 1
  br label %41

41:                                               ; preds = %1, %38
  %42 = phi %struct.zip_dirent* [ %3, %38 ], [ null, %1 ]
  ret %struct.zip_dirent* %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_zip_dirent_init(%struct.zip_dirent*) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 2
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 3
  store i8 1, i8* %5, align 2
  %6 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 4
  store i16 831, i16* %6, align 8
  %7 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 5
  store i16 10, i16* %7, align 2
  %8 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 6
  store i16 0, i16* %8, align 4
  %9 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 7
  store i32 -1, i32* %9, align 8
  %10 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 8
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 9
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 10
  %13 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 17
  %14 = bitcast i64* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 46, i1 false)
  store i32 -2118778880, i32* %13, align 8
  %15 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 18
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 19
  store i16 0, i16* %16, align 8
  %17 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 20
  store i16 0, i16* %17, align 2
  %18 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 21
  store i8* null, i8** %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_zip_dirent_finalize(%struct.zip_dirent* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 12
  %12 = load %struct.zip_string*, %struct.zip_string** %11, align 8
  tail call void @_zip_string_free(%struct.zip_string* %12) #9
  store %struct.zip_string* null, %struct.zip_string** %11, align 8
  %13 = load i8, i8* %2, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %5, %10
  %16 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %10, %15
  %21 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 13
  %22 = load %struct.zip_extra_field*, %struct.zip_extra_field** %21, align 8
  tail call void @_zip_ef_free(%struct.zip_extra_field* %22) #9
  store %struct.zip_extra_field* null, %struct.zip_extra_field** %21, align 8
  %23 = load i8, i8* %2, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %15, %20
  %26 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %20, %25
  %31 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 14
  %32 = load %struct.zip_string*, %struct.zip_string** %31, align 8
  tail call void @_zip_string_free(%struct.zip_string* %32) #9
  store %struct.zip_string* null, %struct.zip_string** %31, align 8
  %33 = load i8, i8* %2, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %25, %30
  %36 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = trunc i32 %37 to i8
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %49

40:                                               ; preds = %30, %35
  %41 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 21
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = tail call i64 @strlen(i8* nonnull %42) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %42, i8 0, i64 %45, i1 false)
  %46 = load i8*, i8** %41, align 8
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i8* [ null, %40 ], [ %46, %44 ]
  tail call void @free(i8* %48) #9
  store i8* null, i8** %41, align 8
  br label %49

49:                                               ; preds = %47, %35
  ret void
}

declare void @_zip_ef_free(%struct.zip_extra_field*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_zip_dirent_free(%struct.zip_dirent*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.zip_dirent* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  tail call void @_zip_dirent_finalize(%struct.zip_dirent* nonnull %0)
  %4 = bitcast %struct.zip_dirent* %0 to i8*
  tail call void @free(i8* %4) #9
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_zip_dirent_needs_zip64(%struct.zip_dirent* nocapture readonly, i32) local_unnamed_addr #7 {
  %3 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 11
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, 4294967294
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 10
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, 4294967294
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = and i32 %1, 512
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 18
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %15, 4294967294
  br i1 %16, label %18, label %17

17:                                               ; preds = %10, %13
  br label %18

18:                                               ; preds = %2, %6, %13, %17
  %19 = phi i1 [ false, %17 ], [ true, %13 ], [ true, %6 ], [ true, %2 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.zip_dirent* @_zip_dirent_new() local_unnamed_addr #0 {
  %1 = tail call noalias i8* @malloc(i64 120) #9
  %2 = icmp eq i8* %1, null
  br i1 %2, label %32, label %3

3:                                                ; preds = %0
  %4 = bitcast i8* %1 to %struct.zip_dirent*
  %5 = bitcast i8* %1 to i32*
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 4
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds i8, i8* %1, i64 5
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds i8, i8* %1, i64 6
  store i8 1, i8* %8, align 2
  %9 = getelementptr inbounds i8, i8* %1, i64 8
  %10 = bitcast i8* %9 to i16*
  store i16 831, i16* %10, align 8
  %11 = getelementptr inbounds i8, i8* %1, i64 10
  %12 = bitcast i8* %11 to i16*
  store i16 10, i16* %12, align 2
  %13 = getelementptr inbounds i8, i8* %1, i64 12
  %14 = bitcast i8* %13 to i16*
  store i16 0, i16* %14, align 4
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  store i32 -1, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %1, i64 24
  %18 = bitcast i8* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %1, i64 32
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds i8, i8* %1, i64 40
  %22 = getelementptr inbounds i8, i8* %1, i64 88
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 46, i1 false) #9
  store i32 -2118778880, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %1, i64 96
  %25 = bitcast i8* %24 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 104
  %27 = bitcast i8* %26 to i16*
  store i16 0, i16* %27, align 8
  %28 = getelementptr inbounds i8, i8* %1, i64 106
  %29 = bitcast i8* %28 to i16*
  store i16 0, i16* %29, align 2
  %30 = getelementptr inbounds i8, i8* %1, i64 112
  %31 = bitcast i8* %30 to i8**
  store i8* null, i8** %31, align 8
  br label %32

32:                                               ; preds = %0, %3
  %33 = phi %struct.zip_dirent* [ %4, %3 ], [ null, %0 ]
  ret %struct.zip_dirent* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_zip_dirent_read(%struct.zip_dirent*, %struct.zip_source*, %struct.zip_buffer*, i1 zeroext, %struct.zip_error*) local_unnamed_addr #0 {
  %6 = alloca %struct.tm, align 8
  %7 = alloca i16, align 2
  %8 = alloca [46 x i8], align 16
  %9 = alloca i16, align 2
  %10 = getelementptr inbounds [46 x i8], [46 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 46, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 46, i1 false)
  %11 = icmp ne %struct.zip_buffer* %2, null
  %12 = select i1 %3, i32 30, i32 46
  br i1 %11, label %13, label %18

13:                                               ; preds = %5
  %14 = tail call i64 @_zip_buffer_left(%struct.zip_buffer* nonnull %2) #9
  %15 = zext i32 %12 to i64
  %16 = icmp ult i64 %14, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  tail call void @zip_error_set(%struct.zip_error* %4, i32 19, i32 0) #9
  br label %332

18:                                               ; preds = %5
  %19 = zext i32 %12 to i64
  %20 = call %struct.zip_buffer* @_zip_buffer_new_from_source(%struct.zip_source* %1, i64 %19, i8* nonnull %10, %struct.zip_error* %4) #9
  %21 = icmp eq %struct.zip_buffer* %20, null
  br i1 %21, label %332, label %22

22:                                               ; preds = %18, %13
  %23 = phi %struct.zip_buffer* [ %2, %13 ], [ %20, %18 ]
  %24 = call i8* @_zip_buffer_get(%struct.zip_buffer* nonnull %23, i64 4) #9
  %25 = select i1 %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)
  %26 = call i32 @bcmp(i8* %24, i8* %25, i64 4)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %22
  call void @zip_error_set(%struct.zip_error* %4, i32 19, i32 0) #9
  br i1 %11, label %332, label %29

29:                                               ; preds = %28
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %23) #9
  br label %332

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 0
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 1
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 2
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 3
  store i8 1, i8* %34, align 2
  %35 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 4
  store i16 831, i16* %35, align 8
  %36 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 5
  store i16 10, i16* %36, align 2
  %37 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 6
  store i16 0, i16* %37, align 4
  %38 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 7
  store i32 -1, i32* %38, align 8
  %39 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 8
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 9
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 10
  %42 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 17
  %43 = bitcast i64* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 46, i1 false) #9
  store i32 -2118778880, i32* %42, align 8
  %44 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 18
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 19
  store i16 0, i16* %45, align 8
  %46 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 20
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 21
  store i8* null, i8** %47, align 8
  br i1 %3, label %50, label %48

48:                                               ; preds = %30
  %49 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %23) #9
  br label %50

50:                                               ; preds = %30, %48
  %51 = phi i16 [ %49, %48 ], [ 0, %30 ]
  store i16 %51, i16* %35, align 8
  %52 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %23) #9
  store i16 %52, i16* %36, align 2
  %53 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %23) #9
  store i16 %53, i16* %37, align 4
  %54 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %23) #9
  %55 = zext i16 %54 to i32
  store i32 %55, i32* %38, align 8
  %56 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %23) #9
  %57 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %23) #9
  %58 = bitcast %struct.tm* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %58) #9
  %59 = getelementptr inbounds %struct.tm, %struct.tm* %6, i64 0, i32 6
  %60 = bitcast i32* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 32, i1 false) #9
  %61 = getelementptr inbounds %struct.tm, %struct.tm* %6, i64 0, i32 8
  store i32 -1, i32* %61, align 8
  %62 = zext i16 %57 to i32
  %63 = lshr i32 %62, 9
  %64 = add nuw nsw i32 %63, 80
  %65 = getelementptr inbounds %struct.tm, %struct.tm* %6, i64 0, i32 5
  store i32 %64, i32* %65, align 4
  %66 = lshr i32 %62, 5
  %67 = and i32 %66, 15
  %68 = add nsw i32 %67, -1
  %69 = getelementptr inbounds %struct.tm, %struct.tm* %6, i64 0, i32 4
  store i32 %68, i32* %69, align 8
  %70 = and i32 %62, 31
  %71 = getelementptr inbounds %struct.tm, %struct.tm* %6, i64 0, i32 3
  store i32 %70, i32* %71, align 4
  %72 = zext i16 %56 to i32
  %73 = lshr i32 %72, 11
  %74 = getelementptr inbounds %struct.tm, %struct.tm* %6, i64 0, i32 2
  store i32 %73, i32* %74, align 8
  %75 = lshr i32 %72, 5
  %76 = and i32 %75, 63
  %77 = getelementptr inbounds %struct.tm, %struct.tm* %6, i64 0, i32 1
  store i32 %76, i32* %77, align 4
  %78 = shl nuw nsw i32 %72, 1
  %79 = and i32 %78, 62
  %80 = getelementptr inbounds %struct.tm, %struct.tm* %6, i64 0, i32 0
  store i32 %79, i32* %80, align 8
  %81 = call i64 @mktime(%struct.tm* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %58) #9
  store i64 %81, i64* %39, align 8
  %82 = call i32 @_zip_buffer_get_32(%struct.zip_buffer* nonnull %23) #9
  store i32 %82, i32* %40, align 8
  %83 = call i32 @_zip_buffer_get_32(%struct.zip_buffer* nonnull %23) #9
  %84 = zext i32 %83 to i64
  store i64 %84, i64* %41, align 8
  %85 = call i32 @_zip_buffer_get_32(%struct.zip_buffer* nonnull %23) #9
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 11
  store i64 %86, i64* %87, align 8
  %88 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %23) #9
  %89 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %23) #9
  br i1 %3, label %90, label %93

90:                                               ; preds = %50
  %91 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 15
  store i32 0, i32* %91, align 8
  %92 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 16
  store i16 0, i16* %92, align 4
  store i32 0, i32* %42, align 8
  br label %103

93:                                               ; preds = %50
  %94 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %23) #9
  %95 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %23) #9
  %96 = zext i16 %95 to i32
  %97 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 15
  store i32 %96, i32* %97, align 8
  %98 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %23) #9
  %99 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 16
  store i16 %98, i16* %99, align 4
  %100 = call i32 @_zip_buffer_get_32(%struct.zip_buffer* nonnull %23) #9
  store i32 %100, i32* %42, align 8
  %101 = call i32 @_zip_buffer_get_32(%struct.zip_buffer* nonnull %23) #9
  %102 = zext i32 %101 to i64
  br label %103

103:                                              ; preds = %93, %90
  %104 = phi i64 [ %102, %93 ], [ 0, %90 ]
  %105 = phi i16 [ %94, %93 ], [ 0, %90 ]
  store i64 %104, i64* %44, align 8
  %106 = call zeroext i1 @_zip_buffer_ok(%struct.zip_buffer* nonnull %23) #9
  br i1 %106, label %109, label %107

107:                                              ; preds = %103
  call void @zip_error_set(%struct.zip_error* %4, i32 20, i32 0) #9
  br i1 %11, label %332, label %108

108:                                              ; preds = %107
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %23) #9
  br label %332

109:                                              ; preds = %103
  %110 = load i16, i16* %37, align 4
  %111 = zext i16 %110 to i32
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %109
  %115 = and i32 %111, 64
  %116 = icmp eq i32 %115, 0
  %117 = select i1 %116, i16 1, i16 -1
  br label %118

118:                                              ; preds = %109, %114
  %119 = phi i16 [ %117, %114 ], [ 0, %109 ]
  store i16 %119, i16* %46, align 2
  %120 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 12
  %121 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 13
  %122 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 14
  %123 = zext i16 %88 to i32
  %124 = zext i16 %89 to i32
  %125 = add nuw nsw i32 %124, %123
  %126 = zext i16 %105 to i32
  %127 = add nuw nsw i32 %125, %126
  %128 = bitcast %struct.zip_string** %120 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 24, i1 false)
  br i1 %11, label %129, label %134

129:                                              ; preds = %118
  %130 = call i64 @_zip_buffer_left(%struct.zip_buffer* nonnull %23) #9
  %131 = zext i32 %127 to i64
  %132 = icmp ult i64 %130, %131
  br i1 %132, label %133, label %138

133:                                              ; preds = %129
  call void @zip_error_set(%struct.zip_error* %4, i32 21, i32 0) #9
  br label %332

134:                                              ; preds = %118
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %23) #9
  %135 = zext i32 %127 to i64
  %136 = call %struct.zip_buffer* @_zip_buffer_new_from_source(%struct.zip_source* %1, i64 %135, i8* null, %struct.zip_error* %4) #9
  %137 = icmp eq %struct.zip_buffer* %136, null
  br i1 %137, label %332, label %138

138:                                              ; preds = %134, %129
  %139 = phi %struct.zip_buffer* [ %23, %129 ], [ %136, %134 ]
  %140 = icmp eq i16 %88, 0
  br i1 %140, label %159, label %141

141:                                              ; preds = %138
  %142 = call %struct.zip_string* @_zip_read_string(%struct.zip_buffer* nonnull %139, %struct.zip_source* %1, i16 zeroext %88, i1 zeroext true, %struct.zip_error* %4) #9
  store %struct.zip_string* %142, %struct.zip_string** %120, align 8
  %143 = icmp eq %struct.zip_string* %142, null
  br i1 %143, label %144, label %150

144:                                              ; preds = %141
  %145 = call i32 @zip_error_code_zip(%struct.zip_error* %4) #9
  %146 = icmp eq i32 %145, 17
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @zip_error_set(%struct.zip_error* %4, i32 21, i32 0) #9
  br label %148

148:                                              ; preds = %147, %144
  br i1 %11, label %332, label %149

149:                                              ; preds = %148
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %139) #9
  br label %332

150:                                              ; preds = %141
  %151 = load i16, i16* %37, align 4
  %152 = and i16 %151, 2048
  %153 = icmp eq i16 %152, 0
  br i1 %153, label %159, label %154

154:                                              ; preds = %150
  %155 = call i32 @_zip_guess_encoding(%struct.zip_string* nonnull %142, i32 2) #9
  %156 = icmp eq i32 %155, 5
  br i1 %156, label %157, label %159

157:                                              ; preds = %154
  call void @zip_error_set(%struct.zip_error* %4, i32 21, i32 0) #9
  br i1 %11, label %332, label %158

158:                                              ; preds = %157
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %139) #9
  br label %332

159:                                              ; preds = %150, %138, %154
  %160 = icmp eq i16 %89, 0
  br i1 %160, label %174, label %161

161:                                              ; preds = %159
  %162 = zext i16 %89 to i64
  %163 = call i8* @_zip_read_data(%struct.zip_buffer* nonnull %139, %struct.zip_source* %1, i64 %162, i1 zeroext false, %struct.zip_error* %4) #9
  %164 = icmp eq i8* %163, null
  br i1 %164, label %165, label %167

165:                                              ; preds = %161
  br i1 %11, label %332, label %166

166:                                              ; preds = %165
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %139) #9
  br label %332

167:                                              ; preds = %161
  %168 = select i1 %3, i32 256, i32 512
  %169 = call zeroext i1 @_zip_ef_parse(i8* nonnull %163, i16 zeroext %89, i32 %168, %struct.zip_extra_field** %121, %struct.zip_error* %4) #9
  call void @free(i8* nonnull %163) #9
  br i1 %169, label %172, label %170

170:                                              ; preds = %167
  br i1 %11, label %332, label %171

171:                                              ; preds = %170
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %139) #9
  br label %332

172:                                              ; preds = %167
  br i1 %3, label %173, label %174

173:                                              ; preds = %172
  store i8 1, i8* %32, align 4
  br label %174

174:                                              ; preds = %173, %172, %159
  %175 = icmp eq i16 %105, 0
  br i1 %175, label %190, label %176

176:                                              ; preds = %174
  %177 = call %struct.zip_string* @_zip_read_string(%struct.zip_buffer* nonnull %139, %struct.zip_source* %1, i16 zeroext %105, i1 zeroext false, %struct.zip_error* %4) #9
  store %struct.zip_string* %177, %struct.zip_string** %122, align 8
  %178 = icmp eq %struct.zip_string* %177, null
  br i1 %178, label %179, label %181

179:                                              ; preds = %176
  br i1 %11, label %332, label %180

180:                                              ; preds = %179
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %139) #9
  br label %332

181:                                              ; preds = %176
  %182 = load i16, i16* %37, align 4
  %183 = and i16 %182, 2048
  %184 = icmp eq i16 %183, 0
  br i1 %184, label %190, label %185

185:                                              ; preds = %181
  %186 = call i32 @_zip_guess_encoding(%struct.zip_string* nonnull %177, i32 2) #9
  %187 = icmp eq i32 %186, 5
  br i1 %187, label %188, label %190

188:                                              ; preds = %185
  call void @zip_error_set(%struct.zip_error* %4, i32 21, i32 0) #9
  br i1 %11, label %332, label %189

189:                                              ; preds = %188
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %139) #9
  br label %332

190:                                              ; preds = %181, %174, %185
  %191 = load %struct.zip_string*, %struct.zip_string** %120, align 8
  %192 = call fastcc %struct.zip_string* @_zip_dirent_process_ef_utf_8(%struct.zip_dirent* %0, i16 zeroext 28789, %struct.zip_string* %191)
  store %struct.zip_string* %192, %struct.zip_string** %120, align 8
  %193 = load %struct.zip_string*, %struct.zip_string** %122, align 8
  %194 = call fastcc %struct.zip_string* @_zip_dirent_process_ef_utf_8(%struct.zip_dirent* %0, i16 zeroext 25461, %struct.zip_string* %193)
  store %struct.zip_string* %194, %struct.zip_string** %122, align 8
  %195 = load i64, i64* %87, align 8
  %196 = icmp eq i64 %195, 4294967295
  br i1 %196, label %203, label %197

197:                                              ; preds = %190
  %198 = load i64, i64* %41, align 8
  %199 = icmp eq i64 %198, 4294967295
  br i1 %199, label %203, label %200

200:                                              ; preds = %197
  %201 = load i64, i64* %44, align 8
  %202 = icmp eq i64 %201, 4294967295
  br i1 %202, label %203, label %272

203:                                              ; preds = %200, %197, %190
  %204 = bitcast i16* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %204) #9
  store i16 -21846, i16* %9, align 2
  %205 = load %struct.zip_extra_field*, %struct.zip_extra_field** %121, align 8
  %206 = select i1 %3, i32 256, i32 512
  %207 = call i8* @_zip_ef_get_by_id(%struct.zip_extra_field* %205, i16* nonnull %9, i16 zeroext 1, i16 zeroext 0, i32 %206, %struct.zip_error* %4) #9
  %208 = icmp eq i8* %207, null
  br i1 %208, label %209, label %211

209:                                              ; preds = %203
  br i1 %11, label %270, label %210

210:                                              ; preds = %209
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %139) #9
  br label %270

211:                                              ; preds = %203
  %212 = load i16, i16* %9, align 2
  %213 = zext i16 %212 to i64
  %214 = call %struct.zip_buffer* @_zip_buffer_new(i8* nonnull %207, i64 %213) #9
  %215 = icmp eq %struct.zip_buffer* %214, null
  br i1 %215, label %216, label %218

216:                                              ; preds = %211
  call void @zip_error_set(%struct.zip_error* %4, i32 14, i32 0) #9
  br i1 %11, label %270, label %217

217:                                              ; preds = %216
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %139) #9
  br label %270

218:                                              ; preds = %211
  %219 = load i64, i64* %87, align 8
  %220 = icmp eq i64 %219, 4294967295
  br i1 %220, label %221, label %223

221:                                              ; preds = %218
  %222 = call i64 @_zip_buffer_get_64(%struct.zip_buffer* nonnull %214) #9
  store i64 %222, i64* %87, align 8
  br label %226

223:                                              ; preds = %218
  br i1 %3, label %224, label %226

224:                                              ; preds = %223
  %225 = call i32 @_zip_buffer_skip(%struct.zip_buffer* nonnull %214, i64 8) #9
  br label %226

226:                                              ; preds = %223, %224, %221
  %227 = load i64, i64* %41, align 8
  %228 = icmp eq i64 %227, 4294967295
  br i1 %228, label %229, label %231

229:                                              ; preds = %226
  %230 = call i64 @_zip_buffer_get_64(%struct.zip_buffer* nonnull %214) #9
  store i64 %230, i64* %41, align 8
  br label %231

231:                                              ; preds = %229, %226
  br i1 %3, label %243, label %232

232:                                              ; preds = %231
  %233 = load i64, i64* %44, align 8
  %234 = icmp eq i64 %233, 4294967295
  br i1 %234, label %235, label %237

235:                                              ; preds = %232
  %236 = call i64 @_zip_buffer_get_64(%struct.zip_buffer* nonnull %214) #9
  store i64 %236, i64* %44, align 8
  br label %237

237:                                              ; preds = %235, %232
  %238 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 15
  %239 = load i32, i32* %238, align 8
  %240 = icmp eq i32 %239, 65535
  br i1 %240, label %241, label %243

241:                                              ; preds = %237
  %242 = call i32 @_zip_buffer_get_32(%struct.zip_buffer* nonnull %214) #9
  store i32 %242, i32* %238, align 8
  br label %243

243:                                              ; preds = %237, %241, %231
  %244 = call zeroext i1 @_zip_buffer_eof(%struct.zip_buffer* nonnull %214) #9
  br i1 %244, label %271, label %245

245:                                              ; preds = %243
  %246 = load i16, i16* %9, align 2
  switch i16 %246, label %268 [
    i16 28, label %247
    i16 24, label %253
  ]

247:                                              ; preds = %245
  %248 = call i32 @_zip_buffer_set_offset(%struct.zip_buffer* nonnull %214, i64 24) #9
  %249 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 15
  %250 = load i32, i32* %249, align 8
  %251 = call i32 @_zip_buffer_get_32(%struct.zip_buffer* nonnull %214) #9
  %252 = icmp ne i32 %250, %251
  br label %253

253:                                              ; preds = %247, %245
  %254 = phi i1 [ false, %245 ], [ %252, %247 ]
  %255 = call i32 @_zip_buffer_set_offset(%struct.zip_buffer* nonnull %214, i64 0) #9
  %256 = load i64, i64* %87, align 8
  %257 = call i64 @_zip_buffer_get_64(%struct.zip_buffer* nonnull %214) #9
  %258 = icmp eq i64 %256, %257
  br i1 %258, label %259, label %268

259:                                              ; preds = %253
  %260 = load i64, i64* %41, align 8
  %261 = call i64 @_zip_buffer_get_64(%struct.zip_buffer* nonnull %214) #9
  %262 = icmp eq i64 %260, %261
  br i1 %262, label %263, label %268

263:                                              ; preds = %259
  %264 = load i64, i64* %44, align 8
  %265 = call i64 @_zip_buffer_get_64(%struct.zip_buffer* nonnull %214) #9
  %266 = icmp ne i64 %264, %265
  %267 = or i1 %266, %254
  br i1 %267, label %268, label %271

268:                                              ; preds = %263, %245, %259, %253
  call void @zip_error_set(%struct.zip_error* %4, i32 21, i32 0) #9
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %214) #9
  br i1 %11, label %270, label %269

269:                                              ; preds = %268
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %139) #9
  br label %270

270:                                              ; preds = %210, %209, %217, %216, %269, %268
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %204) #9
  br label %332

271:                                              ; preds = %243, %263
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %214) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %204) #9
  br label %272

272:                                              ; preds = %271, %200
  %273 = call zeroext i1 @_zip_buffer_ok(%struct.zip_buffer* nonnull %139) #9
  br i1 %273, label %276, label %274

274:                                              ; preds = %272
  call void @zip_error_set(%struct.zip_error* %4, i32 20, i32 0) #9
  br i1 %11, label %332, label %275

275:                                              ; preds = %274
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %139) #9
  br label %332

276:                                              ; preds = %272
  br i1 %11, label %278, label %277

277:                                              ; preds = %276
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %139) #9
  br label %278

278:                                              ; preds = %277, %276
  %279 = load i64, i64* %44, align 8
  %280 = icmp slt i64 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %278
  call void @zip_error_set(%struct.zip_error* %4, i32 4, i32 27) #9
  br label %332

282:                                              ; preds = %278
  %283 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %283) #9
  store i16 -21846, i16* %7, align 2
  %284 = load i32, i32* %38, align 8
  %285 = icmp eq i32 %284, 99
  br i1 %285, label %286, label %327

286:                                              ; preds = %282
  %287 = load %struct.zip_extra_field*, %struct.zip_extra_field** %121, align 8
  %288 = call i8* @_zip_ef_get_by_id(%struct.zip_extra_field* %287, i16* nonnull %7, i16 zeroext -26367, i16 zeroext 0, i32 768, %struct.zip_error* null) #9
  %289 = icmp eq i8* %288, null
  br i1 %289, label %293, label %290

290:                                              ; preds = %286
  %291 = load i16, i16* %7, align 2
  %292 = icmp ult i16 %291, 7
  br i1 %292, label %293, label %294

293:                                              ; preds = %290, %286
  call void @zip_error_set(%struct.zip_error* %4, i32 21, i32 0) #9
  br label %326

294:                                              ; preds = %290
  %295 = zext i16 %291 to i64
  %296 = call %struct.zip_buffer* @_zip_buffer_new(i8* nonnull %288, i64 %295) #9
  %297 = icmp eq %struct.zip_buffer* %296, null
  br i1 %297, label %298, label %299

298:                                              ; preds = %294
  call void @zip_error_set(%struct.zip_error* %4, i32 20, i32 0) #9
  br label %326

299:                                              ; preds = %294
  %300 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %296) #9
  switch i16 %300, label %305 [
    i16 1, label %306
    i16 2, label %301
  ]

301:                                              ; preds = %299
  %302 = load i64, i64* %87, align 8
  %303 = icmp ugt i64 %302, 19
  %304 = zext i1 %303 to i8
  br label %306

305:                                              ; preds = %299
  call void @zip_error_set(%struct.zip_error* %4, i32 24, i32 0) #9
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %296) #9
  br label %326

306:                                              ; preds = %301, %299
  %307 = phi i8 [ 1, %299 ], [ %304, %301 ]
  %308 = call i8* @_zip_buffer_get(%struct.zip_buffer* nonnull %296, i64 2) #9
  %309 = call i32 @bcmp(i8* %308, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 2) #9
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %312, label %311

311:                                              ; preds = %306
  call void @zip_error_set(%struct.zip_error* %4, i32 24, i32 0) #9
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %296) #9
  br label %326

312:                                              ; preds = %306
  %313 = call zeroext i8 @_zip_buffer_get_8(%struct.zip_buffer* nonnull %296) #9
  %314 = add i8 %313, -1
  %315 = icmp ult i8 %314, 3
  br i1 %315, label %317, label %316

316:                                              ; preds = %312
  call void @zip_error_set(%struct.zip_error* %4, i32 24, i32 0) #9
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %296) #9
  br label %326

317:                                              ; preds = %312
  %318 = load i16, i16* %7, align 2
  %319 = icmp eq i16 %318, 7
  br i1 %319, label %321, label %320

320:                                              ; preds = %317
  call void @zip_error_set(%struct.zip_error* %4, i32 21, i32 0) #9
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %296) #9
  br label %326

321:                                              ; preds = %317
  %322 = zext i8 %314 to i16
  %323 = add nuw nsw i16 %322, 257
  store i8 %307, i8* %34, align 2
  store i16 %323, i16* %46, align 2
  %324 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %296) #9
  %325 = zext i16 %324 to i32
  store i32 %325, i32* %38, align 8
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %296) #9
  br label %327

326:                                              ; preds = %293, %298, %305, %311, %316, %320
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %283) #9
  br label %332

327:                                              ; preds = %321, %282
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %283) #9
  %328 = load %struct.zip_extra_field*, %struct.zip_extra_field** %121, align 8
  %329 = call %struct.zip_extra_field* @_zip_ef_remove_internal(%struct.zip_extra_field* %328) #9
  store %struct.zip_extra_field* %329, %struct.zip_extra_field** %121, align 8
  %330 = add nuw nsw i32 %127, %12
  %331 = zext i32 %330 to i64
  br label %332

332:                                              ; preds = %326, %270, %170, %165, %274, %275, %188, %189, %179, %180, %171, %166, %157, %158, %148, %149, %134, %107, %108, %28, %29, %18, %327, %281, %133, %17
  %333 = phi i64 [ -1, %17 ], [ -1, %133 ], [ -1, %281 ], [ %331, %327 ], [ -1, %18 ], [ -1, %29 ], [ -1, %28 ], [ -1, %108 ], [ -1, %107 ], [ -1, %134 ], [ -1, %149 ], [ -1, %148 ], [ -1, %158 ], [ -1, %157 ], [ -1, %166 ], [ -1, %171 ], [ -1, %180 ], [ -1, %179 ], [ -1, %189 ], [ -1, %188 ], [ -1, %275 ], [ -1, %274 ], [ -1, %165 ], [ -1, %170 ], [ -1, %270 ], [ -1, %326 ]
  call void @llvm.lifetime.end.p0i8(i64 46, i8* nonnull %10) #9
  ret i64 %333
}

declare i64 @_zip_buffer_left(%struct.zip_buffer*) local_unnamed_addr #2

declare %struct.zip_buffer* @_zip_buffer_new_from_source(%struct.zip_source*, i64, i8*, %struct.zip_error*) local_unnamed_addr #2

declare i8* @_zip_buffer_get(%struct.zip_buffer*, i64) local_unnamed_addr #2

declare zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_zip_d2u_time(i16 zeroext, i16 zeroext) local_unnamed_addr #0 {
  %3 = alloca %struct.tm, align 8
  %4 = bitcast %struct.tm* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 6
  %6 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 32, i1 false)
  %7 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 8
  store i32 -1, i32* %7, align 8
  %8 = zext i16 %1 to i32
  %9 = lshr i32 %8, 9
  %10 = add nuw nsw i32 %9, 80
  %11 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 5
  store i32 %10, i32* %11, align 4
  %12 = lshr i32 %8, 5
  %13 = and i32 %12, 15
  %14 = add nsw i32 %13, -1
  %15 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 4
  store i32 %14, i32* %15, align 8
  %16 = and i32 %8, 31
  %17 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 3
  store i32 %16, i32* %17, align 4
  %18 = zext i16 %0 to i32
  %19 = lshr i32 %18, 11
  %20 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 2
  store i32 %19, i32* %20, align 8
  %21 = lshr i32 %18, 5
  %22 = and i32 %21, 63
  %23 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 1
  store i32 %22, i32* %23, align 4
  %24 = shl nuw nsw i32 %18, 1
  %25 = and i32 %24, 62
  %26 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 0
  store i32 %25, i32* %26, align 8
  %27 = call i64 @mktime(%struct.tm* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #9
  ret i64 %27
}

declare i32 @_zip_buffer_get_32(%struct.zip_buffer*) local_unnamed_addr #2

declare %struct.zip_string* @_zip_read_string(%struct.zip_buffer*, %struct.zip_source*, i16 zeroext, i1 zeroext, %struct.zip_error*) local_unnamed_addr #2

declare i32 @zip_error_code_zip(%struct.zip_error*) local_unnamed_addr #2

declare i32 @_zip_guess_encoding(%struct.zip_string*, i32) local_unnamed_addr #2

declare i8* @_zip_read_data(%struct.zip_buffer*, %struct.zip_source*, i64, i1 zeroext, %struct.zip_error*) local_unnamed_addr #2

declare zeroext i1 @_zip_ef_parse(i8*, i16 zeroext, i32, %struct.zip_extra_field**, %struct.zip_error*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.zip_string* @_zip_dirent_process_ef_utf_8(%struct.zip_dirent* nocapture readonly, i16 zeroext, %struct.zip_string*) unnamed_addr #0 {
  %4 = alloca i16, align 2
  %5 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %5) #9
  store i16 -21846, i16* %4, align 2
  %6 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 13
  %7 = load %struct.zip_extra_field*, %struct.zip_extra_field** %6, align 8
  %8 = call i8* @_zip_ef_get_by_id(%struct.zip_extra_field* %7, i16* nonnull %4, i16 zeroext %1, i16 zeroext 0, i32 768, %struct.zip_error* null) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %35, label %10

10:                                               ; preds = %3
  %11 = load i16, i16* %4, align 2
  %12 = icmp ult i16 %11, 5
  br i1 %12, label %35, label %13

13:                                               ; preds = %10
  %14 = load i8, i8* %8, align 1
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %35

16:                                               ; preds = %13
  %17 = zext i16 %11 to i64
  %18 = call %struct.zip_buffer* @_zip_buffer_new(i8* nonnull %8, i64 %17) #9
  %19 = icmp eq %struct.zip_buffer* %18, null
  br i1 %19, label %35, label %20

20:                                               ; preds = %16
  %21 = call zeroext i8 @_zip_buffer_get_8(%struct.zip_buffer* nonnull %18) #9
  %22 = call i32 @_zip_buffer_get_32(%struct.zip_buffer* nonnull %18) #9
  %23 = call i32 @_zip_string_crc32(%struct.zip_string* %2) #9
  %24 = icmp eq i32 %23, %22
  br i1 %24, label %25, label %33

25:                                               ; preds = %20
  %26 = call i64 @_zip_buffer_left(%struct.zip_buffer* nonnull %18) #9
  %27 = trunc i64 %26 to i16
  %28 = and i64 %26, 65535
  %29 = call i8* @_zip_buffer_get(%struct.zip_buffer* nonnull %18, i64 %28) #9
  %30 = call %struct.zip_string* @_zip_string_new(i8* %29, i16 zeroext %27, i32 2048, %struct.zip_error* null) #9
  %31 = icmp eq %struct.zip_string* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %25
  call void @_zip_string_free(%struct.zip_string* %2) #9
  br label %33

33:                                               ; preds = %32, %25, %20
  %34 = phi %struct.zip_string* [ %2, %20 ], [ %30, %32 ], [ %2, %25 ]
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %18) #9
  br label %35

35:                                               ; preds = %16, %3, %10, %13, %33
  %36 = phi %struct.zip_string* [ %34, %33 ], [ %2, %13 ], [ %2, %10 ], [ %2, %3 ], [ %2, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %5) #9
  ret %struct.zip_string* %36
}

declare i8* @_zip_ef_get_by_id(%struct.zip_extra_field*, i16*, i16 zeroext, i16 zeroext, i32, %struct.zip_error*) local_unnamed_addr #2

declare i64 @_zip_buffer_get_64(%struct.zip_buffer*) local_unnamed_addr #2

declare i32 @_zip_buffer_skip(%struct.zip_buffer*, i64) local_unnamed_addr #2

declare zeroext i1 @_zip_buffer_eof(%struct.zip_buffer*) local_unnamed_addr #2

declare i32 @_zip_buffer_set_offset(%struct.zip_buffer*, i64) local_unnamed_addr #2

declare %struct.zip_extra_field* @_zip_ef_remove_internal(%struct.zip_extra_field*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_zip_dirent_size(%struct.zip_source*, i16 zeroext, %struct.zip_error*) local_unnamed_addr #0 {
  %4 = alloca [6 x i8], align 1
  %5 = and i16 %1, 256
  %6 = icmp ne i16 %5, 0
  %7 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %7) #9
  %8 = select i1 %6, i64 26, i64 28
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %7, i8 -86, i64 6, i1 false)
  %9 = tail call i32 @zip_source_seek(%struct.zip_source* %0, i64 %8, i32 1) #9
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_zip_error_set_from_source(%struct.zip_error* %2, %struct.zip_source* %0) #9
  br label %31

12:                                               ; preds = %3
  %13 = select i1 %6, i64 4, i64 6
  %14 = call %struct.zip_buffer* @_zip_buffer_new_from_source(%struct.zip_source* %0, i64 %13, i8* nonnull %7, %struct.zip_error* %2) #9
  %15 = icmp eq %struct.zip_buffer* %14, null
  br i1 %15, label %31, label %16

16:                                               ; preds = %12
  %17 = select i1 %6, i32 30, i32 46
  %18 = select i1 %6, i32 2, i32 3
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ 0, %16 ], [ %25, %19 ]
  %21 = phi i32 [ %17, %16 ], [ %24, %19 ]
  %22 = call zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nonnull %14) #9
  %23 = zext i16 %22 to i32
  %24 = add nuw nsw i32 %21, %23
  %25 = add nuw nsw i32 %20, 1
  %26 = icmp eq i32 %25, %18
  br i1 %26, label %27, label %19

27:                                               ; preds = %19
  %28 = call zeroext i1 @_zip_buffer_eof(%struct.zip_buffer* nonnull %14) #9
  br i1 %28, label %30, label %29

29:                                               ; preds = %27
  call void @zip_error_set(%struct.zip_error* %2, i32 20, i32 0) #9
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %14) #9
  br label %31

30:                                               ; preds = %27
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %14) #9
  br label %31

31:                                               ; preds = %12, %30, %29, %11
  %32 = phi i32 [ -1, %11 ], [ %24, %30 ], [ -1, %29 ], [ -1, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %7) #9
  ret i32 %32
}

declare i32 @zip_source_seek(%struct.zip_source*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.zip_extra_field* @_zip_ef_utf8(i16 zeroext, %struct.zip_string*, %struct.zip_error*) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #9
  store i32 -1431655766, i32* %4, align 4
  %6 = call i8* @_zip_string_get(%struct.zip_string* %1, i32* nonnull %4, i32 64, %struct.zip_error* null) #9
  %7 = icmp eq i8* %6, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %3
  %9 = load i32, i32* %4, align 4
  %10 = add i32 %9, 5
  %11 = icmp ugt i32 %10, 65535
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  call void @zip_error_set(%struct.zip_error* %2, i32 18, i32 0) #9
  br label %32

13:                                               ; preds = %8
  %14 = zext i32 %10 to i64
  %15 = call %struct.zip_buffer* @_zip_buffer_new(i8* null, i64 %14) #9
  %16 = icmp eq %struct.zip_buffer* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  call void @zip_error_set(%struct.zip_error* %2, i32 14, i32 0) #9
  br label %32

18:                                               ; preds = %13
  %19 = call i32 @_zip_buffer_put_8(%struct.zip_buffer* nonnull %15, i8 zeroext 1) #9
  %20 = call i32 @_zip_string_crc32(%struct.zip_string* %1) #9
  %21 = call i32 @_zip_buffer_put_32(%struct.zip_buffer* nonnull %15, i32 %20) #9
  %22 = load i32, i32* %4, align 4
  %23 = zext i32 %22 to i64
  %24 = call i32 @_zip_buffer_put(%struct.zip_buffer* nonnull %15, i8* nonnull %6, i64 %23) #9
  %25 = call zeroext i1 @_zip_buffer_ok(%struct.zip_buffer* nonnull %15) #9
  br i1 %25, label %27, label %26

26:                                               ; preds = %18
  call void @zip_error_set(%struct.zip_error* %2, i32 20, i32 0) #9
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %15) #9
  br label %32

27:                                               ; preds = %18
  %28 = call i64 @_zip_buffer_offset(%struct.zip_buffer* nonnull %15) #9
  %29 = trunc i64 %28 to i16
  %30 = call i8* @_zip_buffer_data(%struct.zip_buffer* nonnull %15) #9
  %31 = call %struct.zip_extra_field* @_zip_ef_new(i16 zeroext %0, i16 zeroext %29, i8* %30, i32 768) #9
  call void @_zip_buffer_free(%struct.zip_buffer* nonnull %15) #9
  br label %32

32:                                               ; preds = %3, %27, %26, %17, %12
  %33 = phi %struct.zip_extra_field* [ null, %12 ], [ null, %17 ], [ %31, %27 ], [ null, %26 ], [ null, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9
  ret %struct.zip_extra_field* %33
}

declare %struct.zip_extra_field* @_zip_ef_new(i16 zeroext, i16 zeroext, i8*, i32) local_unnamed_addr #2

declare i32 @_zip_buffer_put_8(%struct.zip_buffer*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_zip_u2d_time(i64, i16* nocapture, i16* nocapture) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.tm, align 8
  store i64 %0, i64* %4, align 8
  %6 = bitcast %struct.tm* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  %7 = call %struct.tm* @localtime_r(i64* nonnull %4, %struct.tm* nonnull %5) #9
  %8 = icmp eq %struct.tm* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  store i16 33, i16* %2, align 2
  br label %39

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.tm, %struct.tm* %7, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 80
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i32 80, i32* %11, align 4
  br label %15

15:                                               ; preds = %14, %10
  %16 = phi i32 [ 80, %14 ], [ %12, %10 ]
  %17 = shl i32 %16, 9
  %18 = getelementptr inbounds %struct.tm, %struct.tm* %7, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = shl i32 %19, 5
  %21 = getelementptr inbounds %struct.tm, %struct.tm* %7, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %17, 24608
  %24 = add i32 %23, %20
  %25 = add i32 %24, %22
  %26 = trunc i32 %25 to i16
  store i16 %26, i16* %2, align 2
  %27 = getelementptr inbounds %struct.tm, %struct.tm* %7, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = shl i32 %28, 11
  %30 = getelementptr inbounds %struct.tm, %struct.tm* %7, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = shl i32 %31, 5
  %33 = add nsw i32 %32, %29
  %34 = getelementptr inbounds %struct.tm, %struct.tm* %7, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = lshr i32 %35, 1
  %37 = add i32 %33, %36
  %38 = trunc i32 %37 to i16
  br label %39

39:                                               ; preds = %15, %9
  %40 = phi i16 [ %38, %15 ], [ 0, %9 ]
  store i16 %40, i16* %1, align 2
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #9
  ret void
}

declare zeroext i16 @_zip_string_length(%struct.zip_string*) local_unnamed_addr #2

declare zeroext i16 @_zip_ef_size(%struct.zip_extra_field*, i32) local_unnamed_addr #2

declare i32 @_zip_string_write(%struct.zip*, %struct.zip_string*) local_unnamed_addr #2

declare i32 @_zip_ef_write(%struct.zip*, %struct.zip_extra_field*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i64 @mktime(%struct.tm* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %struct.zip_dirent* @_zip_get_dirent(%struct.zip*, i64, i32, %struct.zip_error*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.zip_error* %3, null
  %6 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  %7 = select i1 %5, %struct.zip_error* %6, %struct.zip_error* %3
  %8 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 9
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %1
  br i1 %10, label %12, label %11

11:                                               ; preds = %4
  tail call void @zip_error_set(%struct.zip_error* %7, i32 18, i32 0) #9
  br label %32

12:                                               ; preds = %4
  %13 = and i32 %2, 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 11
  %16 = load %struct.zip_entry*, %struct.zip_entry** %15, align 8
  br i1 %14, label %17, label %21

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %16, i64 %1, i32 1
  %19 = load %struct.zip_dirent*, %struct.zip_dirent** %18, align 8
  %20 = icmp eq %struct.zip_dirent* %19, null
  br i1 %20, label %21, label %32

21:                                               ; preds = %12, %17
  %22 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %16, i64 %1, i32 0
  %23 = load %struct.zip_dirent*, %struct.zip_dirent** %22, align 8
  %24 = icmp eq %struct.zip_dirent* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  tail call void @zip_error_set(%struct.zip_error* %7, i32 18, i32 0) #9
  br label %32

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %16, i64 %1, i32 3
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp ne i8 %28, 0
  %30 = and i1 %14, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  tail call void @zip_error_set(%struct.zip_error* %7, i32 23, i32 0) #9
  br label %32

32:                                               ; preds = %26, %17, %31, %25, %11
  %33 = phi %struct.zip_dirent* [ null, %11 ], [ null, %25 ], [ null, %31 ], [ %19, %17 ], [ %23, %26 ]
  ret %struct.zip_dirent* %33
}

; Function Attrs: nounwind
declare %struct.tm* @localtime_r(i64*, %struct.tm*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_zip_dirent_apply_attributes(%struct.zip_dirent* nocapture, %struct.zip_file_attributes* nocapture readonly, i1 zeroext, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.zip_file_attributes, %struct.zip_file_attributes* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 16
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.zip_file_attributes, %struct.zip_file_attributes* %1, i64 0, i32 7
  %11 = load i16, i16* %10, align 2
  %12 = and i16 %11, 2102
  %13 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 6
  %14 = load i16, i16* %13, align 4
  %15 = xor i16 %12, -1
  %16 = and i16 %14, %15
  %17 = getelementptr inbounds %struct.zip_file_attributes, %struct.zip_file_attributes* %1, i64 0, i32 6
  %18 = load i16, i16* %17, align 8
  %19 = and i16 %18, %12
  %20 = or i16 %19, %16
  store i16 %20, i16* %13, align 4
  %21 = load i64, i64* %5, align 8
  br label %22

22:                                               ; preds = %4, %9
  %23 = phi i64 [ %6, %4 ], [ %21, %9 ]
  %24 = and i64 %23, 2
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 16
  %28 = load i16, i16* %27, align 4
  %29 = and i16 %28, -2
  %30 = getelementptr inbounds %struct.zip_file_attributes, %struct.zip_file_attributes* %1, i64 0, i32 3
  %31 = load i8, i8* %30, align 2
  %32 = icmp ne i8 %31, 0
  %33 = zext i1 %32 to i16
  %34 = or i16 %29, %33
  store i16 %34, i16* %27, align 4
  br label %35

35:                                               ; preds = %22, %26
  %36 = and i32 %3, 16
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %46

38:                                               ; preds = %35
  %39 = load i64, i64* %5, align 8
  %40 = and i64 %39, 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.zip_file_attributes, %struct.zip_file_attributes* %1, i64 0, i32 5
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 17
  store i32 %44, i32* %45, align 8
  br label %46

46:                                               ; preds = %38, %42, %35
  %47 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 7
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 14
  br i1 %49, label %87, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 20
  %52 = load i16, i16* %51, align 2
  %53 = add i16 %52, -257
  %54 = icmp ult i16 %53, 3
  br i1 %54, label %87, label %55

55:                                               ; preds = %50
  %56 = icmp eq i32 %48, 12
  %57 = or i1 %56, %2
  %58 = select i1 %56, i16 46, i16 45
  %59 = select i1 %56, i32 46, i32 45
  br i1 %57, label %87, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 11
  %62 = load i64, i64* %61, align 8
  %63 = icmp ugt i64 %62, 4294967294
  br i1 %63, label %87, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 10
  %66 = load i64, i64* %65, align 8
  %67 = icmp ugt i64 %66, 4294967294
  br i1 %67, label %87, label %68

68:                                               ; preds = %64
  %69 = icmp eq i32 %48, 8
  %70 = icmp eq i16 %52, 1
  %71 = or i1 %69, %70
  br i1 %71, label %87, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 12
  %74 = load %struct.zip_string*, %struct.zip_string** %73, align 8
  %75 = tail call zeroext i16 @_zip_string_length(%struct.zip_string* %74) #9
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %86, label %77

77:                                               ; preds = %72
  %78 = zext i16 %75 to i64
  %79 = load %struct.zip_string*, %struct.zip_string** %73, align 8
  %80 = getelementptr inbounds %struct.zip_string, %struct.zip_string* %79, i64 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = add nsw i64 %78, -1
  %83 = getelementptr inbounds i8, i8* %81, i64 %82
  %84 = load i8, i8* %83, align 1
  %85 = icmp eq i8 %84, 47
  br i1 %85, label %87, label %86

86:                                               ; preds = %72, %77
  br label %87

87:                                               ; preds = %55, %77, %68, %64, %60, %50, %46, %86
  %88 = phi i16 [ 10, %86 ], [ 63, %46 ], [ 51, %50 ], [ %58, %55 ], [ 45, %60 ], [ 45, %64 ], [ 20, %68 ], [ 20, %77 ]
  %89 = phi i32 [ 10, %86 ], [ 63, %46 ], [ 51, %50 ], [ %59, %55 ], [ 45, %60 ], [ 45, %64 ], [ 20, %68 ], [ 20, %77 ]
  %90 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 5
  store i16 %88, i16* %90, align 2
  %91 = load i64, i64* %5, align 8
  %92 = and i64 %91, 4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %102, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 5
  %96 = getelementptr inbounds %struct.zip_file_attributes, %struct.zip_file_attributes* %1, i64 0, i32 4
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = icmp ugt i32 %89, %98
  %100 = select i1 %99, i32 %89, i32 %98
  %101 = trunc i32 %100 to i16
  store i16 %101, i16* %95, align 2
  br label %102

102:                                              ; preds = %87, %94
  %103 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %0, i64 0, i32 4
  %104 = load i16, i16* %103, align 8
  %105 = and i16 %104, -256
  %106 = or i16 %105, 63
  store i16 %106, i16* %103, align 8
  br i1 %37, label %107, label %117

107:                                              ; preds = %102
  %108 = load i64, i64* %5, align 8
  %109 = and i64 %108, 1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %117, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.zip_file_attributes, %struct.zip_file_attributes* %1, i64 0, i32 2
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i16
  %115 = shl nuw i16 %114, 8
  %116 = or i16 %115, 63
  store i16 %116, i16* %103, align 8
  br label %117

117:                                              ; preds = %107, %111, %102
  ret void
}

declare zeroext i8 @_zip_buffer_get_8(%struct.zip_buffer*) local_unnamed_addr #2

declare i32 @_zip_string_crc32(%struct.zip_string*) local_unnamed_addr #2

declare %struct.zip_string* @_zip_string_new(i8*, i16 zeroext, i32, %struct.zip_error*) local_unnamed_addr #2

declare i8* @_zip_string_get(%struct.zip_string*, i32*, i32, %struct.zip_error*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
