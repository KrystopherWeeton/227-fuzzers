; ModuleID = '../../components/password_manager/core/browser/import/csv_password.cc'
source_filename = "../../components/password_manager/core/browser/import/csv_password.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.password_manager::CSVPassword" = type { %"class.base::flat_map"*, %"class.base::BasicStringPiece" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"struct.password_manager::PasswordForm" = type { i32, %"class.std::__1::basic_string", %class.GURL, %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.autofill::FieldRendererId", i8, i8, %"class.std::__1::basic_string.9", %"class.std::__1::vector.18", %"class.std::__1::vector.18", i8, %"class.std::__1::basic_string.9", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string", %"class.std::__1::basic_string.9", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string.9", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string.9", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i32, i32, [4 x i8], %"struct.autofill::FormData", i32, %"class.std::__1::basic_string.9", %class.GURL, %"class.url::Origin", i8, i8, i8, i8, i32, i8, i8, i32, %"class.std::__1::vector.73" }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"struct.std::__1::pair.20"*, %"struct.std::__1::pair.20"*, %"class.std::__1::__compressed_pair.21" }
%"struct.std::__1::pair.20" = type opaque
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::pair.20"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.autofill::FieldRendererId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.autofill::FormData" = type <{ %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::vector.26", %class.GURL, %class.GURL, %class.GURL, i8, [7 x i8], %"class.url::Origin", i8, [7 x i8], %"class.autofill::internal::TokenType", %"class.autofill::FormRendererId", [4 x i8], %"class.std::__1::vector.38", %"class.std::__1::vector.45", i32, [4 x i8], %"class.std::__1::vector.52", %"class.std::__1::vector.66", i8, [7 x i8] }>
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"struct.std::__1::pair.28"*, %"struct.std::__1::pair.28"*, %"class.std::__1::__compressed_pair.29" }
%"struct.std::__1::pair.28" = type opaque
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::pair.28"* }
%"class.autofill::internal::TokenType" = type { %"class.base::StrongAlias.35" }
%"class.base::StrongAlias.35" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.autofill::FormRendererId" = type { %"class.util::IdType.36" }
%"class.util::IdType.36" = type { %"class.base::StrongAlias.37" }
%"class.base::StrongAlias.37" = type { i32 }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.absl::variant"*, %"class.absl::variant"*, %"class.std::__1::__compressed_pair.40" }
%"class.absl::variant" = type opaque
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.absl::variant"* }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { i32*, i32*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i32* }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"struct.autofill::FormFieldData"*, %"struct.autofill::FormFieldData"*, %"class.std::__1::__compressed_pair.61" }
%"struct.autofill::FormFieldData" = type { %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", %"class.url::Origin", i32, %"class.std::__1::basic_string", i64, i8, i32, i8, i8, i32, i32, i32, i8, i8, %"class.std::__1::basic_string.9", %"class.std::__1::vector.54", %"class.std::__1::vector.54", i32, %"class.gfx::RectF", %"class.std::__1::vector.54", %"class.std::__1::vector.54" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string.9"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::basic_string.9"* }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.autofill::FormFieldData"* }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"class.autofill::FieldRendererId"*, %"class.autofill::FieldRendererId"*, %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.autofill::FieldRendererId"* }
%"class.std::__1::basic_string.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.12 }
%union.anon.12 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.GURL* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.34 }
%union.anon.34 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.autofill::GaiaIdHash"*, %"class.autofill::GaiaIdHash"*, %"class.std::__1::__compressed_pair.75" }
%"class.autofill::GaiaIdHash" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.autofill::GaiaIdHash"* }
%"class.password_manager::CSVFieldParser" = type { i32, %"class.base::BasicStringPiece", i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.13 }
%struct.anon.13 = type { %"struct.std::__1::__padding.14", i8 }
%"struct.std::__1::__padding.14" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }

@.str = private unnamed_addr constant [3 x i8] c"\22\22\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\22\00", align 1

@_ZN16password_manager11CSVPasswordC1ERKN4base8flat_mapImNS0_5LabelENSt3__14lessIvEENS4_6vectorINS4_4pairImS3_EENS4_9allocatorIS9_EEEEEENS1_16BasicStringPieceIcNS4_11char_traitsIcEEEE = hidden unnamed_addr alias void (%"class.password_manager::CSVPassword"*, %"class.base::flat_map"*, i8*, i64), void (%"class.password_manager::CSVPassword"*, %"class.base::flat_map"*, i8*, i64)* @_ZN16password_manager11CSVPasswordC2ERKN4base8flat_mapImNS0_5LabelENSt3__14lessIvEENS4_6vectorINS4_4pairImS3_EENS4_9allocatorIS9_EEEEEENS1_16BasicStringPieceIcNS4_11char_traitsIcEEEE
@_ZN16password_manager11CSVPasswordD1Ev = hidden unnamed_addr alias void (%"class.password_manager::CSVPassword"*), void (%"class.password_manager::CSVPassword"*)* @_ZN16password_manager11CSVPasswordD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16password_manager11CSVPasswordC2ERKN4base8flat_mapImNS0_5LabelENSt3__14lessIvEENS4_6vectorINS4_4pairImS3_EENS4_9allocatorIS9_EEEEEENS1_16BasicStringPieceIcNS4_11char_traitsIcEEEE(%"class.password_manager::CSVPassword"* nocapture, %"class.base::flat_map"* dereferenceable(24), i8*, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.password_manager::CSVPassword", %"class.password_manager::CSVPassword"* %0, i64 0, i32 0
  store %"class.base::flat_map"* %1, %"class.base::flat_map"** %5, align 8
  %6 = getelementptr inbounds %"class.password_manager::CSVPassword", %"class.password_manager::CSVPassword"* %0, i64 0, i32 1, i32 0
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds %"class.password_manager::CSVPassword", %"class.password_manager::CSVPassword"* %0, i64 0, i32 1, i32 1
  store i64 %3, i64* %7, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN16password_manager11CSVPasswordD2Ev(%"class.password_manager::CSVPassword"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK16password_manager11CSVPassword5ParseEPNS_12PasswordFormE(%"class.password_manager::CSVPassword"* nocapture readonly, %"struct.password_manager::PasswordForm"*) local_unnamed_addr #3 align 2 {
  %3 = tail call i32 @_ZNK16password_manager11CSVPassword9ParseImplEPNS_12PasswordFormE(%"class.password_manager::CSVPassword"* %0, %"struct.password_manager::PasswordForm"* %1)
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK16password_manager11CSVPassword9ParseImplEPNS_12PasswordFormE(%"class.password_manager::CSVPassword"* nocapture readonly, %"struct.password_manager::PasswordForm"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.password_manager::CSVFieldParser", align 8
  %4 = alloca %class.GURL, align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %class.GURL, align 8
  %8 = alloca %"class.std::__1::basic_string.9", align 8
  %9 = alloca %"class.std::__1::basic_string.9", align 8
  %10 = bitcast %"class.password_manager::CSVPassword"* %0 to %"class.base::internal::flat_tree"**
  %11 = load %"class.base::internal::flat_tree"*, %"class.base::internal::flat_tree"** %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %11, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"struct.std::__1::pair"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::internal::flat_tree"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = icmp eq i64 %17, 48
  br i1 %18, label %19, label %238

19:                                               ; preds = %2
  %20 = bitcast %"class.password_manager::CSVFieldParser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 40, i1 false)
  %21 = getelementptr inbounds %"class.password_manager::CSVPassword", %"class.password_manager::CSVPassword"* %0, i64 0, i32 1, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.password_manager::CSVPassword", %"class.password_manager::CSVPassword"* %0, i64 0, i32 1, i32 1
  %24 = load i64, i64* %23, align 8
  call void @_ZN16password_manager14CSVFieldParserC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.password_manager::CSVFieldParser"* nonnull %3, i8* %22, i64 %24) #9
  %25 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %25) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 120, i1 false)
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %4) #9
  %26 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %3, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %121, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %3, i64 0, i32 2
  %31 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %3, i64 0, i32 1, i32 1
  %32 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  %33 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %35 = bitcast %class.GURL* %6 to i8*
  br label %36

36:                                               ; preds = %29, %113
  %37 = phi i64 [ 0, %29 ], [ %50, %113 ]
  %38 = phi i8 [ 0, %29 ], [ %118, %113 ]
  %39 = phi i8* [ null, %29 ], [ %117, %113 ]
  %40 = phi i64 [ 0, %29 ], [ %116, %113 ]
  %41 = phi i64 [ 0, %29 ], [ %115, %113 ]
  %42 = phi i8* [ null, %29 ], [ %114, %113 ]
  %43 = load i64, i64* %30, align 8
  %44 = load i64, i64* %31, align 8
  %45 = icmp ugt i64 %43, %44
  br i1 %45, label %121, label %46

46:                                               ; preds = %36
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false) #9
  %47 = call zeroext i1 @_ZN16password_manager14CSVFieldParser9NextFieldEPN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.password_manager::CSVFieldParser"* nonnull %3, %"class.base::BasicStringPiece"* nonnull %5) #9
  br i1 %47, label %48, label %112

48:                                               ; preds = %46
  %49 = load %"class.base::internal::flat_tree"*, %"class.base::internal::flat_tree"** %10, align 8
  %50 = add i64 %37, 1
  %51 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %49, i64 0, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %51, align 8
  %53 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %49, i64 0, i32 0, i32 0, i32 1
  %54 = bitcast %"struct.std::__1::pair"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = ptrtoint %"struct.std::__1::pair"* %52 to i64
  %57 = sub i64 %55, %56
  %58 = icmp eq i64 %57, 0
  %59 = inttoptr i64 %55 to %"struct.std::__1::pair"*
  br i1 %58, label %78, label %60

60:                                               ; preds = %48
  %61 = ashr exact i64 %57, 4
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi %"struct.std::__1::pair"* [ %52, %60 ], [ %74, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %73, %62 ]
  %65 = lshr i64 %64, 1
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %63, i64 %65
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = icmp ult i64 %68, %37
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 1
  %71 = xor i64 %65, -1
  %72 = add i64 %64, %71
  %73 = select i1 %69, i64 %72, i64 %65
  %74 = select i1 %69, %"struct.std::__1::pair"* %70, %"struct.std::__1::pair"* %63
  %75 = icmp eq i64 %73, 0
  br i1 %75, label %76, label %62

76:                                               ; preds = %62
  %77 = ptrtoint %"struct.std::__1::pair"* %74 to i64
  br label %78

78:                                               ; preds = %76, %48
  %79 = phi i64 [ %77, %76 ], [ %56, %48 ]
  %80 = phi %"struct.std::__1::pair"* [ %74, %76 ], [ %52, %48 ]
  %81 = icmp eq %"struct.std::__1::pair"* %80, %59
  br i1 %81, label %89, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %80, i64 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp ult i64 %37, %84
  br i1 %85, label %89, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %80, i64 1
  %88 = ptrtoint %"struct.std::__1::pair"* %87 to i64
  br label %89

89:                                               ; preds = %78, %82, %86
  %90 = phi i64 [ %88, %86 ], [ %79, %78 ], [ %79, %82 ]
  %91 = inttoptr i64 %90 to %"struct.std::__1::pair"*
  %92 = icmp eq %"struct.std::__1::pair"* %80, %91
  %93 = select i1 %92, %"struct.std::__1::pair"* %59, %"struct.std::__1::pair"* %80
  %94 = icmp eq %"struct.std::__1::pair"* %93, %59
  br i1 %94, label %113, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  switch i32 %97, label %113 [
    i32 0, label %98
    i32 1, label %106
    i32 2, label %109
  ]

98:                                               ; preds = %95
  %99 = load i8*, i8** %33, align 8
  %100 = load i64, i64* %34, align 8
  %101 = call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %99, i64 %100) #9
  br i1 %101, label %102, label %112

102:                                              ; preds = %98
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %35) #9
  %103 = load i8*, i8** %33, align 8
  %104 = load i64, i64* %34, align 8
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %6, i8* %103, i64 %104) #9
  %105 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* nonnull %4, %class.GURL* nonnull dereferenceable(120) %6) #9
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %35) #9
  br label %113

106:                                              ; preds = %95
  %107 = load i8*, i8** %33, align 8
  %108 = load i64, i64* %34, align 8
  br label %113

109:                                              ; preds = %95
  %110 = load i8*, i8** %33, align 8
  %111 = load i64, i64* %34, align 8
  br label %113

112:                                              ; preds = %46, %98
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #9
  br label %236

113:                                              ; preds = %89, %95, %109, %106, %102
  %114 = phi i8* [ %42, %89 ], [ %42, %95 ], [ %110, %109 ], [ %42, %106 ], [ %42, %102 ]
  %115 = phi i64 [ %41, %89 ], [ %41, %95 ], [ %111, %109 ], [ %41, %106 ], [ %41, %102 ]
  %116 = phi i64 [ %40, %89 ], [ %40, %95 ], [ %40, %109 ], [ %108, %106 ], [ %40, %102 ]
  %117 = phi i8* [ %39, %89 ], [ %39, %95 ], [ %39, %109 ], [ %107, %106 ], [ %39, %102 ]
  %118 = phi i8 [ %38, %89 ], [ %38, %95 ], [ %38, %109 ], [ 1, %106 ], [ %38, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #9
  %119 = load i32, i32* %26, align 8
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %36

121:                                              ; preds = %113, %36, %19
  %122 = phi i8* [ null, %19 ], [ %42, %36 ], [ %114, %113 ]
  %123 = phi i64 [ 0, %19 ], [ %41, %36 ], [ %115, %113 ]
  %124 = phi i64 [ 0, %19 ], [ %40, %36 ], [ %116, %113 ]
  %125 = phi i8* [ null, %19 ], [ %39, %36 ], [ %117, %113 ]
  %126 = phi i8 [ 0, %19 ], [ %38, %36 ], [ %118, %113 ]
  %127 = getelementptr inbounds %class.GURL, %class.GURL* %4, i64 0, i32 1
  %128 = load i8, i8* %127, align 8, !range !2
  %129 = icmp eq i8 %128, 0
  %130 = and i8 %126, 1
  %131 = icmp eq i8 %130, 0
  %132 = or i1 %131, %129
  %133 = icmp eq i64 %123, 0
  %134 = or i1 %133, %132
  br i1 %134, label %236, label %135

135:                                              ; preds = %121
  %136 = icmp eq %"struct.password_manager::PasswordForm"* %1, null
  br i1 %136, label %236, label %137

137:                                              ; preds = %135
  %138 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 0
  store i32 0, i32* %138, align 8
  %139 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %4) #9
  %140 = call zeroext i1 @_ZN16password_manager22IsValidAndroidFacetURIERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %139) #9
  br i1 %140, label %141, label %174

141:                                              ; preds = %137
  %142 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %4) #9
  %143 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 1
  %144 = icmp eq %"class.std::__1::basic_string"* %143, %142
  br i1 %144, label %209, label %145

145:                                              ; preds = %141
  %146 = bitcast %"class.std::__1::basic_string"* %143 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  %150 = bitcast %"class.std::__1::basic_string"* %142 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  br i1 %149, label %164, label %154

154:                                              ; preds = %145
  br i1 %153, label %158, label %155

155:                                              ; preds = %154
  %156 = bitcast %"class.std::__1::basic_string"* %143 to i8*
  %157 = bitcast %"class.std::__1::basic_string"* %142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %157, i64 24, i1 false) #9
  br label %209

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i8*, i8** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %143, i8* %160, i64 %162) #9
  br label %209

164:                                              ; preds = %145
  %165 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load i8*, i8** %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"class.std::__1::basic_string"* %142 to i8*
  %170 = zext i8 %152 to i64
  %171 = select i1 %153, i8* %166, i8* %169
  %172 = select i1 %153, i64 %168, i64 %170
  %173 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %143, i8* %171, i64 %172) #9
  br label %209

174:                                              ; preds = %137
  %175 = bitcast %class.GURL* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %175) #9
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %7, %class.GURL* nonnull %4) #9
  %176 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %7) #9
  %177 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 1
  %178 = icmp eq %"class.std::__1::basic_string"* %177, %176
  br i1 %178, label %208, label %179

179:                                              ; preds = %174
  %180 = bitcast %"class.std::__1::basic_string"* %177 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %180, i64 0, i32 1, i32 0
  %182 = load i8, i8* %181, align 1
  %183 = icmp slt i8 %182, 0
  %184 = bitcast %"class.std::__1::basic_string"* %176 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  br i1 %183, label %198, label %188

188:                                              ; preds = %179
  br i1 %187, label %192, label %189

189:                                              ; preds = %188
  %190 = bitcast %"class.std::__1::basic_string"* %177 to i8*
  %191 = bitcast %"class.std::__1::basic_string"* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %190, i8* align 8 %191, i64 24, i1 false) #9
  br label %208

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %196 = load i64, i64* %195, align 8
  %197 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %177, i8* %194, i64 %196) #9
  br label %208

198:                                              ; preds = %179
  %199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i8*, i8** %199, align 8
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %"class.std::__1::basic_string"* %176 to i8*
  %204 = zext i8 %186 to i64
  %205 = select i1 %187, i8* %200, i8* %203
  %206 = select i1 %187, i64 %202, i64 %204
  %207 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %177, i8* %205, i64 %206) #9
  br label %208

208:                                              ; preds = %174, %189, %192, %198
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %175) #9
  br label %209

209:                                              ; preds = %164, %158, %155, %141, %208
  %210 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 2
  %211 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %210, %class.GURL* nonnull dereferenceable(120) %4) #9
  %212 = bitcast %"class.std::__1::basic_string.9"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %212) #9
  call fastcc void @_ZN16password_manager12_GLOBAL__N_17ConvertEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.9"* nonnull sret %8, i8* %125, i64 %124)
  %213 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 12
  %214 = bitcast %"class.std::__1::basic_string.9"* %213 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %215 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %214, i64 0, i32 1, i32 1
  %216 = load i8, i8* %215, align 1
  %217 = icmp slt i8 %216, 0
  br i1 %217, label %218, label %221

218:                                              ; preds = %209
  %219 = bitcast %"class.std::__1::basic_string.9"* %213 to i8**
  %220 = load i8*, i8** %219, align 8
  call void @_ZdlPv(i8* %220) #10
  br label %221

221:                                              ; preds = %218, %209
  %222 = bitcast %"class.std::__1::basic_string.9"* %213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* nonnull align 8 %212, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %212) #9
  %223 = bitcast %"class.std::__1::basic_string.9"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %223) #9
  call fastcc void @_ZN16password_manager12_GLOBAL__N_17ConvertEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.9"* nonnull sret %9, i8* %122, i64 %123)
  %224 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 18
  %225 = bitcast %"class.std::__1::basic_string.9"* %224 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %225, i64 0, i32 1, i32 1
  %227 = load i8, i8* %226, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %229, label %232

229:                                              ; preds = %221
  %230 = bitcast %"class.std::__1::basic_string.9"* %224 to i8**
  %231 = load i8*, i8** %230, align 8
  call void @_ZdlPv(i8* %231) #10
  br label %232

232:                                              ; preds = %229, %221
  %233 = bitcast %"class.std::__1::basic_string.9"* %224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* nonnull align 8 %223, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #9
  %234 = call i64 @_ZN4base4Time3NowEv() #9
  %235 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 26, i32 0, i32 0
  store i64 %234, i64* %235, align 8
  br label %236

236:                                              ; preds = %112, %135, %121, %232
  %237 = phi i32 [ 0, %232 ], [ 2, %121 ], [ 0, %135 ], [ 1, %112 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %25) #9
  call void @_ZN16password_manager14CSVFieldParserD1Ev(%"class.password_manager::CSVFieldParser"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #9
  br label %238

238:                                              ; preds = %2, %236
  %239 = phi i32 [ %237, %236 ], [ 2, %2 ]
  ret i32 %239
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK16password_manager11CSVPassword8TryParseEv(%"class.password_manager::CSVPassword"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = tail call i32 @_ZNK16password_manager11CSVPassword9ParseImplEPNS_12PasswordFormE(%"class.password_manager::CSVPassword"* %0, %"struct.password_manager::PasswordForm"* null)
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16password_manager11CSVPassword10ParseValidEv(%"struct.password_manager::PasswordForm"* noalias sret, %"class.password_manager::CSVPassword"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = bitcast %"struct.password_manager::PasswordForm"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 1744, i1 false)
  tail call void @_ZN16password_manager12PasswordFormC1Ev(%"struct.password_manager::PasswordForm"* %0) #9
  %4 = tail call i32 @_ZNK16password_manager11CSVPassword9ParseImplEPNS_12PasswordFormE(%"class.password_manager::CSVPassword"* %1, %"struct.password_manager::PasswordForm"* %0)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN16password_manager12PasswordFormC1Ev(%"struct.password_manager::PasswordForm"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN16password_manager14CSVFieldParserC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.password_manager::CSVFieldParser"*, i8*, i64) unnamed_addr #4

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #4

declare zeroext i1 @_ZN16password_manager14CSVFieldParser9NextFieldEPN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.password_manager::CSVFieldParser"*, %"class.base::BasicStringPiece"*) local_unnamed_addr #4

declare zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #4

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #5

declare zeroext i1 @_ZN16password_manager22IsValidAndroidFacetURIERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #4

declare void @_ZNK4GURL9GetOriginEv(%class.GURL* sret, %class.GURL*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN16password_manager12_GLOBAL__N_17ConvertEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.9"* noalias sret, i8*, i64) unnamed_addr #3 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = icmp ugt i64 %2, -17
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  br i1 %9, label %11, label %13

11:                                               ; preds = %3
  %12 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %12) #11
  unreachable

13:                                               ; preds = %3
  %14 = icmp ult i64 %2, 23
  br i1 %14, label %21, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %2, 16
  %17 = and i64 %16, -16
  %18 = tail call i8* @_Znwm(i64 %17) #10
  store i8* %18, i8** %6, align 8, !alias.scope !3
  %19 = or i64 %17, -9223372036854775808
  store i64 %19, i64* %8, align 8, !alias.scope !3
  store i64 %2, i64* %7, align 8, !alias.scope !3
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

21:                                               ; preds = %13
  %22 = trunc i64 %2 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1, !alias.scope !3
  %25 = icmp eq i64 %2, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21, %15
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %20, %15 ]
  %28 = phi i8* [ %5, %21 ], [ %18, %15 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %1, i64 %2, i1 false) #9
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %27, %26 ]
  %31 = phi i8* [ %5, %21 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %2
  store i8 0, i8* %32, align 1
  call void @_ZN4base28ReplaceSubstringsAfterOffsetEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmNS_16BasicStringPieceIcS3_EES9_(%"class.std::__1::basic_string"* nonnull %4, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #9
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = load i8*, i8** %6, align 8
  %37 = select i1 %35, i8* %36, i8* %5
  %38 = load i64, i64* %7, align 8
  %39 = zext i8 %34 to i64
  %40 = select i1 %35, i64 %38, i64 %39
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.9"* sret %0, i8* %37, i64 %40) #9
  %41 = load i8, i8* %33, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %29
  %44 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %44) #10
  br label %45

45:                                               ; preds = %29, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret void
}

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN16password_manager14CSVFieldParserD1Ev(%"class.password_manager::CSVFieldParser"*) unnamed_addr #5

declare void @_ZN4base28ReplaceSubstringsAfterOffsetEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmNS_16BasicStringPieceIcS3_EES9_(%"class.std::__1::basic_string"*, i64, i8*, i64, i8*, i64) local_unnamed_addr #4

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.9"* sret, i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
