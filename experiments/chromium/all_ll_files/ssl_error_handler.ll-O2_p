; ModuleID = '../../content/browser/ssl/ssl_error_handler.cc'
source_filename = "../../content/browser/ssl/ssl_error_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::SSLErrorHandler" = type { i32 (...)**, %"class.base::WeakPtr", %class.GURL, i8, [7 x i8], %"class.net::SSLInfo", i32, i8, %"class.content::WebContents"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.GURL* }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.10, %class.scoped_refptr.10, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.28", %"class.std::__1::basic_string", %"class.std::__1::vector.36", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.10 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.11", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.17", %"class.std::__1::vector.21" }
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.std::__1::unique_ptr.17"*, %"class.std::__1::unique_ptr.17"*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::unique_ptr.17"* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.31" }
%"class.net::HashValue" = type { i32, %union.anon.30 }
%union.anon.30 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.40" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.38, i32, [4 x i8] }>
%class.scoped_refptr.38 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.39", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.39" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.content::SSLErrorHandler::Delegate" = type { i32 (...)** }

@_ZTVN7content15SSLErrorHandlerE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::SSLErrorHandler"*)* @_ZN7content15SSLErrorHandlerD2Ev to i8*), i8* bitcast (void (%"class.content::SSLErrorHandler"*)* @_ZN7content15SSLErrorHandlerD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN7content15SSLErrorHandlerC1EPNS_11WebContentsERKN4base7WeakPtrINS0_8DelegateEEEbRK4GURLiRKN3net7SSLInfoEb = hidden unnamed_addr alias void (%"class.content::SSLErrorHandler"*, %"class.content::WebContents"*, %"class.base::WeakPtr"*, i1, %class.GURL*, i32, %"class.net::SSLInfo"*, i1), void (%"class.content::SSLErrorHandler"*, %"class.content::WebContents"*, %"class.base::WeakPtr"*, i1, %class.GURL*, i32, %"class.net::SSLInfo"*, i1)* @_ZN7content15SSLErrorHandlerC2EPNS_11WebContentsERKN4base7WeakPtrINS0_8DelegateEEEbRK4GURLiRKN3net7SSLInfoEb
@_ZN7content15SSLErrorHandlerD1Ev = hidden unnamed_addr alias void (%"class.content::SSLErrorHandler"*), void (%"class.content::SSLErrorHandler"*)* @_ZN7content15SSLErrorHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content15SSLErrorHandlerC2EPNS_11WebContentsERKN4base7WeakPtrINS0_8DelegateEEEbRK4GURLiRKN3net7SSLInfoEb(%"class.content::SSLErrorHandler"*, %"class.content::WebContents"*, %"class.base::WeakPtr"* dereferenceable(16), i1 zeroext, %class.GURL* dereferenceable(120), i32, %"class.net::SSLInfo"* dereferenceable(128), i1 zeroext) unnamed_addr #0 align 2 {
  %9 = zext i1 %3 to i8
  %10 = zext i1 %7 to i8
  %11 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7content15SSLErrorHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %12, %"class.base::internal::WeakReference"* dereferenceable(8) %13) #5
  %14 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %14, align 8
  %17 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 2
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %17, %class.GURL* dereferenceable(120) %4) #5
  %18 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 3
  store i8 %9, i8* %18, align 8
  %19 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 5
  tail call void @_ZN3net7SSLInfoC1ERKS0_(%"class.net::SSLInfo"* %19, %"class.net::SSLInfo"* dereferenceable(128) %6) #5
  %20 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 6
  store i32 %5, i32* %20, align 8
  %21 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 7
  store i8 %10, i8* %21, align 4
  %22 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 8
  store %"class.content::WebContents"* %1, %"class.content::WebContents"** %22, align 8
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

declare void @_ZN3net7SSLInfoC1ERKS0_(%"class.net::SSLInfo"*, %"class.net::SSLInfo"* dereferenceable(128)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content15SSLErrorHandlerD2Ev(%"class.content::SSLErrorHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7content15SSLErrorHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 5
  tail call void @_ZN3net7SSLInfoD1Ev(%"class.net::SSLInfo"* %3) #5
  %4 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %4) #5
  %5 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net7SSLInfoD1Ev(%"class.net::SSLInfo"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content15SSLErrorHandlerD0Ev(%"class.content::SSLErrorHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7content15SSLErrorHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 5
  tail call void @_ZN3net7SSLInfoD1Ev(%"class.net::SSLInfo"* %3) #5
  %4 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %4) #5
  %5 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #5
  %6 = bitcast %"class.content::SSLErrorHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content15SSLErrorHandler13CancelRequestEv(%"class.content::SSLErrorHandler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #5
  br i1 %4, label %5, label %26

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = bitcast i64* %6 to %"class.content::SSLErrorHandler::Delegate"**
  %8 = load %"class.content::SSLErrorHandler::Delegate"*, %"class.content::SSLErrorHandler::Delegate"** %7, align 8
  %9 = icmp eq %"class.content::SSLErrorHandler::Delegate"* %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %5
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #5
  br i1 %11, label %15, label %12

12:                                               ; preds = %10
  %13 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #5
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #5
  br label %15

15:                                               ; preds = %12, %10
  %16 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #5
  br i1 %16, label %17, label %20

17:                                               ; preds = %15
  %18 = load %"class.content::SSLErrorHandler::Delegate"*, %"class.content::SSLErrorHandler::Delegate"** %7, align 8
  %19 = bitcast %"class.content::SSLErrorHandler::Delegate"* %18 to void (%"class.content::SSLErrorHandler::Delegate"*, i32, %"class.net::SSLInfo"*)***
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi void (%"class.content::SSLErrorHandler::Delegate"*, i32, %"class.net::SSLInfo"*)*** [ %19, %17 ], [ null, %15 ]
  %22 = phi %"class.content::SSLErrorHandler::Delegate"* [ %18, %17 ], [ null, %15 ]
  %23 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 5
  %24 = load void (%"class.content::SSLErrorHandler::Delegate"*, i32, %"class.net::SSLInfo"*)**, void (%"class.content::SSLErrorHandler::Delegate"*, i32, %"class.net::SSLInfo"*)*** %21, align 8
  %25 = load void (%"class.content::SSLErrorHandler::Delegate"*, i32, %"class.net::SSLInfo"*)*, void (%"class.content::SSLErrorHandler::Delegate"*, i32, %"class.net::SSLInfo"*)** %24, align 8
  call void %25(%"class.content::SSLErrorHandler::Delegate"* %22, i32 -3, %"class.net::SSLInfo"* %23) #5
  br label %26

26:                                               ; preds = %5, %1, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content15SSLErrorHandler11DenyRequestEv(%"class.content::SSLErrorHandler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #5
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = bitcast i64* %6 to %"class.content::SSLErrorHandler::Delegate"**
  %8 = load %"class.content::SSLErrorHandler::Delegate"*, %"class.content::SSLErrorHandler::Delegate"** %7, align 8
  %9 = icmp eq %"class.content::SSLErrorHandler::Delegate"* %8, null
  br i1 %9, label %28, label %10

10:                                               ; preds = %5
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #5
  br i1 %11, label %15, label %12

12:                                               ; preds = %10
  %13 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #5
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #5
  br label %15

15:                                               ; preds = %12, %10
  %16 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #5
  br i1 %16, label %17, label %20

17:                                               ; preds = %15
  %18 = load %"class.content::SSLErrorHandler::Delegate"*, %"class.content::SSLErrorHandler::Delegate"** %7, align 8
  %19 = bitcast %"class.content::SSLErrorHandler::Delegate"* %18 to void (%"class.content::SSLErrorHandler::Delegate"*, i32, %"class.net::SSLInfo"*)***
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi void (%"class.content::SSLErrorHandler::Delegate"*, i32, %"class.net::SSLInfo"*)*** [ %19, %17 ], [ null, %15 ]
  %22 = phi %"class.content::SSLErrorHandler::Delegate"* [ %18, %17 ], [ null, %15 ]
  %23 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 6
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 5
  %26 = load void (%"class.content::SSLErrorHandler::Delegate"*, i32, %"class.net::SSLInfo"*)**, void (%"class.content::SSLErrorHandler::Delegate"*, i32, %"class.net::SSLInfo"*)*** %21, align 8
  %27 = load void (%"class.content::SSLErrorHandler::Delegate"*, i32, %"class.net::SSLInfo"*)*, void (%"class.content::SSLErrorHandler::Delegate"*, i32, %"class.net::SSLInfo"*)** %26, align 8
  call void %27(%"class.content::SSLErrorHandler::Delegate"* %22, i32 %24, %"class.net::SSLInfo"* %25) #5
  br label %28

28:                                               ; preds = %5, %1, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content15SSLErrorHandler15ContinueRequestEv(%"class.content::SSLErrorHandler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #5
  br i1 %4, label %5, label %26

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.content::SSLErrorHandler", %"class.content::SSLErrorHandler"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = bitcast i64* %6 to %"class.content::SSLErrorHandler::Delegate"**
  %8 = load %"class.content::SSLErrorHandler::Delegate"*, %"class.content::SSLErrorHandler::Delegate"** %7, align 8
  %9 = icmp eq %"class.content::SSLErrorHandler::Delegate"* %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %5
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #5
  br i1 %11, label %15, label %12

12:                                               ; preds = %10
  %13 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #5
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #5
  br label %15

15:                                               ; preds = %12, %10
  %16 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #5
  br i1 %16, label %17, label %20

17:                                               ; preds = %15
  %18 = load %"class.content::SSLErrorHandler::Delegate"*, %"class.content::SSLErrorHandler::Delegate"** %7, align 8
  %19 = bitcast %"class.content::SSLErrorHandler::Delegate"* %18 to void (%"class.content::SSLErrorHandler::Delegate"*)***
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi void (%"class.content::SSLErrorHandler::Delegate"*)*** [ %19, %17 ], [ null, %15 ]
  %22 = phi %"class.content::SSLErrorHandler::Delegate"* [ %18, %17 ], [ null, %15 ]
  %23 = load void (%"class.content::SSLErrorHandler::Delegate"*)**, void (%"class.content::SSLErrorHandler::Delegate"*)*** %21, align 8
  %24 = getelementptr inbounds void (%"class.content::SSLErrorHandler::Delegate"*)*, void (%"class.content::SSLErrorHandler::Delegate"*)** %23, i64 1
  %25 = load void (%"class.content::SSLErrorHandler::Delegate"*)*, void (%"class.content::SSLErrorHandler::Delegate"*)** %24, align 8
  call void %25(%"class.content::SSLErrorHandler::Delegate"* %22) #5
  br label %26

26:                                               ; preds = %5, %1, %20
  ret void
}

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
