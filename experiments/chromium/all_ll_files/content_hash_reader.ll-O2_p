; ModuleID = '../../extensions/browser/content_hash_reader.cc'
source_filename = "../../extensions/browser/content_hash_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ContentHashReader" = type { i32, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%class.scoped_refptr = type { %"class.extensions::ContentHash"* }
%"class.extensions::ContentHash" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::basic_string", %"class.base::FilePath", i32, i32, i8, [7 x i8], %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.31", %"class.std::__1::set", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.extensions::VerifiedContents"* }
%"class.extensions::VerifiedContents" = type { %"class.base::span", i8, i32, %"class.std::__1::basic_string", %"class.base::Version", %"class.std::__1::multimap" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.base::Version" = type { %"class.std::__1::vector.13" }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { i32*, i32*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i32* }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i64 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.extensions::ComputedHashes"* }
%"class.extensions::ComputedHashes" = type { %"class.extensions::ComputedHashes::Data" }
%"class.extensions::ComputedHashes::Data" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.34" }
%"class.std::__1::__tree.34" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.45" }
%"class.std::__1::__tree.45" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.60 }
%union.anon.60 = type { %"class.std::__1::basic_string" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.66", [4 x i8] }>
%"struct.std::__1::atomic.66" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__atomic_base.68" }
%"struct.std::__1::__atomic_base.68" = type { %"struct.std::__1::__cxx_atomic_impl.69" }
%"struct.std::__1::__cxx_atomic_impl.69" = type { %"struct.std::__1::__cxx_atomic_base_impl.70" }
%"struct.std::__1::__cxx_atomic_base_impl.70" = type { i32 }

@.str = private unnamed_addr constant [39 x i8] c"ExtensionContentHashReader.InitLatency\00", align 1
@_ZZN10extensions17ContentHashReader6CreateERKN4base8FilePathERK13scoped_refptrIKNS_11ContentHashEEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN10extensions17ContentHashReaderC1ENS0_10InitStatusE = hidden unnamed_addr alias void (%"class.extensions::ContentHashReader"*, i32), void (%"class.extensions::ContentHashReader"*, i32)* @_ZN10extensions17ContentHashReaderC2ENS0_10InitStatusE
@_ZN10extensions17ContentHashReaderD1Ev = hidden unnamed_addr alias void (%"class.extensions::ContentHashReader"*), void (%"class.extensions::ContentHashReader"*)* @_ZN10extensions17ContentHashReaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17ContentHashReaderC2ENS0_10InitStatusE(%"class.extensions::ContentHashReader"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::ContentHashReader", %"class.extensions::ContentHashReader"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.extensions::ContentHashReader", %"class.extensions::ContentHashReader"* %0, i64 0, i32 1
  %5 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17ContentHashReaderD2Ev(%"class.extensions::ContentHashReader"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ContentHashReader", %"class.extensions::ContentHashReader"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"class.extensions::ContentHashReader", %"class.extensions::ContentHashReader"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #8
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #8
  br label %28

28:                                               ; preds = %1, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::ContentHashReader"* @_ZN10extensions17ContentHashReader6CreateERKN4base8FilePathERK13scoped_refptrIKNS_11ContentHashEE(%"class.base::FilePath"* dereferenceable(24), %class.scoped_refptr* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ElapsedTimer", align 8
  %4 = alloca %"class.absl::optional", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::vector", align 16
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.base::FilePath", align 8
  %9 = alloca %"class.base::TimeDelta", align 8
  %10 = bitcast %"class.base::ElapsedTimer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.base::ElapsedTimer", %"class.base::ElapsedTimer"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %11, align 8
  call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* nonnull %3) #9
  %12 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %13 = load %"class.extensions::ContentHash"*, %"class.extensions::ContentHash"** %12, align 8
  %14 = getelementptr inbounds %"class.extensions::ContentHash", %"class.extensions::ContentHash"* %13, i64 0, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = icmp ult i32 %15, 2
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = call i8* @_Znwm(i64 32) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 32, i1 false)
  br label %152

19:                                               ; preds = %2
  %20 = icmp eq i32 %15, 2
  br i1 %20, label %21, label %25

21:                                               ; preds = %19
  %22 = call i8* @_Znwm(i64 32) #8
  %23 = bitcast i8* %22 to i32*
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 28, i1 false) #9
  br label %152

25:                                               ; preds = %19
  %26 = call dereferenceable(24) %"class.extensions::ComputedHashes"* @_ZNK10extensions11ContentHash15computed_hashesEv(%"class.extensions::ContentHash"* %13) #9
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #9
  %28 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %28, align 8
  store i8 0, i8* %27, align 8
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast %union.anon.60* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #9
  %31 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #9
  store i32 -1431655766, i32* %5, align 4
  %32 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #9
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 0, i64 24, i1 false) #9
  %36 = call zeroext i1 @_ZNK10extensions14ComputedHashes9GetHashesERKN4base8FilePathEPiPNSt3__16vectorINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENSB_ISD_EEEE(%"class.extensions::ComputedHashes"* %26, %"class.base::FilePath"* dereferenceable(24) %0, i32* nonnull %5, %"class.std::__1::vector"* nonnull %6) #9
  br i1 %36, label %37, label %62

37:                                               ; preds = %25
  %38 = load i32, i32* %5, align 4
  %39 = and i32 %38, 31
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %62

41:                                               ; preds = %37
  %42 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #9
  %43 = ashr i32 %38, 5
  call void @_ZN10extensions19ComputeTreeHashRootERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEi(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::vector"* nonnull dereferenceable(24) %6, i32 %43) #9
  %44 = load i8, i8* %27, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  %46 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %45, label %59, label %47

47:                                               ; preds = %41
  %48 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #8
  br label %55

55:                                               ; preds = %52, %47
  %56 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %42, i64 24, i1 false) #9
  %57 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  store i8 0, i8* %58, align 1
  store i8 0, i8* %42, align 8
  br label %61

59:                                               ; preds = %41
  %60 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* nonnull align 8 %42, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #9
  store i8 1, i8* %27, align 8
  br label %61

61:                                               ; preds = %59, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #9
  br label %62

62:                                               ; preds = %61, %37, %25
  %63 = load %"class.extensions::ContentHash"*, %"class.extensions::ContentHash"** %12, align 8
  %64 = load i8, i8* %27, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  %66 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = select i1 %65, %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"* %66
  %68 = call i32 @_ZNK10extensions11ContentHash18VerifyTreeHashRootERKN4base8FilePathEPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.extensions::ContentHash"* %63, %"class.base::FilePath"* dereferenceable(24) %0, %"class.std::__1::basic_string"* %67) #9
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %89, label %70

70:                                               ; preds = %62
  %71 = bitcast %"class.base::FilePath"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #9
  %72 = bitcast %"class.base::FilePath"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 24, i1 false)
  %73 = load %"class.extensions::ContentHash"*, %"class.extensions::ContentHash"** %12, align 8
  %74 = getelementptr inbounds %"class.extensions::ContentHash", %"class.extensions::ContentHash"* %73, i64 0, i32 3
  call void @_ZNK4base8FilePath6AppendERKS0_(%"class.base::FilePath"* nonnull sret %8, %"class.base::FilePath"* %74, %"class.base::FilePath"* dereferenceable(24) %0) #9
  %75 = icmp eq i32 %68, 1
  br i1 %75, label %76, label %82

76:                                               ; preds = %70
  %77 = call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %8) #9
  br i1 %77, label %78, label %80

78:                                               ; preds = %76
  %79 = call zeroext i1 @_ZN4base15DirectoryExistsERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %8) #9
  br i1 %79, label %80, label %82

80:                                               ; preds = %78, %76
  %81 = call i8* @_Znwm(i64 32) #8
  br label %84

82:                                               ; preds = %78, %70
  %83 = call i8* @_Znwm(i64 32) #8
  br label %84

84:                                               ; preds = %82, %80
  %85 = phi i8* [ %83, %82 ], [ %81, %80 ]
  %86 = phi i32 [ 3, %82 ], [ 2, %80 ]
  %87 = bitcast i8* %85 to i32*
  store i32 %86, i32* %87, align 8
  %88 = getelementptr inbounds i8, i8* %85, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %88, i8 0, i64 28, i1 false) #9
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #9
  br label %114

89:                                               ; preds = %62
  %90 = call i8* @_Znwm(i64 32) #8
  %91 = bitcast i8* %90 to i32*
  store i32 4, i32* %91, align 8
  %92 = getelementptr inbounds i8, i8* %90, i64 4
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %5, align 4
  store i32 %94, i32* %93, align 4
  %95 = getelementptr inbounds i8, i8* %90, i64 8
  %96 = bitcast %"class.std::__1::vector"* %6 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 16
  %98 = bitcast %"class.std::__1::basic_string"** %35 to i64*
  %99 = load i64, i64* %98, align 16
  %100 = bitcast i8* %95 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %100, align 8
  %101 = getelementptr inbounds i8, i8* %90, i64 24
  %102 = bitcast i8* %101 to i64*
  store i64 %99, i64* %102, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 0, i64 24, i1 false) #9
  %103 = load atomic i64, i64* @_ZZN10extensions17ContentHashReader6CreateERKN4base8FilePathERK13scoped_refptrIKNS_11ContentHashEEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %104 = inttoptr i64 %103 to %"class.base::HistogramBase"*
  %105 = icmp eq i64 %103, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %89
  %107 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #9
  %108 = ptrtoint %"class.base::HistogramBase"* %107 to i64
  store atomic i64 %108, i64* @_ZZN10extensions17ContentHashReader6CreateERKN4base8FilePathERK13scoped_refptrIKNS_11ContentHashEEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %109

109:                                              ; preds = %89, %106
  %110 = phi %"class.base::HistogramBase"* [ %104, %89 ], [ %107, %106 ]
  %111 = bitcast %"class.base::TimeDelta"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #9
  %112 = call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* nonnull %3) #9
  %113 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %9, i64 0, i32 0
  store i64 %112, i64* %113, align 8
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %110, %"class.base::TimeDelta"* nonnull dereferenceable(8) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #9
  br label %114

114:                                              ; preds = %109, %84
  %115 = phi i8* [ %85, %84 ], [ %90, %109 ]
  %116 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %33, align 16
  %117 = icmp eq %"class.std::__1::basic_string"* %116, null
  br i1 %117, label %139, label %118

118:                                              ; preds = %114
  %119 = bitcast %"class.std::__1::basic_string"* %116 to i8*
  %120 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %34, align 8
  %121 = icmp eq %"class.std::__1::basic_string"* %120, %116
  br i1 %121, label %137, label %122

122:                                              ; preds = %118, %132
  %123 = phi %"class.std::__1::basic_string"* [ %124, %132 ], [ %120, %118 ]
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %123, i64 -1
  %125 = bitcast %"class.std::__1::basic_string"* %124 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %131) #8
  br label %132

132:                                              ; preds = %129, %122
  %133 = icmp eq %"class.std::__1::basic_string"* %124, %116
  br i1 %133, label %134, label %122

134:                                              ; preds = %132
  %135 = bitcast %"class.std::__1::vector"* %6 to i8**
  %136 = load i8*, i8** %135, align 16
  br label %137

137:                                              ; preds = %134, %118
  %138 = phi i8* [ %136, %134 ], [ %119, %118 ]
  store %"class.std::__1::basic_string"* %116, %"class.std::__1::basic_string"** %34, align 8
  call void @_ZdlPv(i8* %138) #8
  br label %139

139:                                              ; preds = %114, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #9
  %140 = load i8, i8* %27, align 8, !range !2
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %151, label %142

142:                                              ; preds = %139
  %143 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %149) #8
  br label %150

150:                                              ; preds = %147, %142
  store i8 0, i8* %27, align 8
  br label %151

151:                                              ; preds = %139, %150
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #9
  br label %152

152:                                              ; preds = %21, %17, %151
  %153 = phi i8* [ %115, %151 ], [ %18, %17 ], [ %22, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  %154 = bitcast i8* %153 to %"class.extensions::ContentHashReader"*
  ret %"class.extensions::ContentHashReader"* %154
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(24) %"class.extensions::ComputedHashes"* @_ZNK10extensions11ContentHash15computed_hashesEv(%"class.extensions::ContentHash"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK10extensions14ComputedHashes9GetHashesERKN4base8FilePathEPiPNSt3__16vectorINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENSB_ISD_EEEE(%"class.extensions::ComputedHashes"*, %"class.base::FilePath"* dereferenceable(24), i32*, %"class.std::__1::vector"*) local_unnamed_addr #2

declare void @_ZN10extensions19ComputeTreeHashRootERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEi(%"class.std::__1::basic_string"* sret, %"class.std::__1::vector"* dereferenceable(24), i32) local_unnamed_addr #2

declare i32 @_ZNK10extensions11ContentHash18VerifyTreeHashRootERKN4base8FilePathEPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.extensions::ContentHash"*, %"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZNK4base8FilePath6AppendERKS0_(%"class.base::FilePath"* sret, %"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN4base15DirectoryExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #4

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK10extensions17ContentHashReader11block_countEv(%"class.extensions::ContentHashReader"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ContentHashReader", %"class.extensions::ContentHashReader"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.extensions::ContentHashReader", %"class.extensions::ContentHashReader"* %0, i64 0, i32 2, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK10extensions17ContentHashReader10block_sizeEv(%"class.extensions::ContentHashReader"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ContentHashReader", %"class.extensions::ContentHashReader"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions17ContentHashReader15GetHashForBlockEiPPKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ContentHashReader"* nocapture readonly, i32, %"class.std::__1::basic_string"** nocapture) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.extensions::ContentHashReader", %"class.extensions::ContentHashReader"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %7, label %22

7:                                                ; preds = %3
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.extensions::ContentHashReader", %"class.extensions::ContentHashReader"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.extensions::ContentHashReader", %"class.extensions::ContentHashReader"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 24
  %17 = icmp ugt i64 %16, %8
  br i1 %17, label %18, label %22

18:                                               ; preds = %7
  %19 = inttoptr i64 %14 to %"class.std::__1::basic_string"*
  %20 = sext i32 %1 to i64
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 %20
  store %"class.std::__1::basic_string"* %21, %"class.std::__1::basic_string"** %2, align 8
  br label %22

22:                                               ; preds = %7, %3, %18
  %23 = phi i1 [ true, %18 ], [ false, %3 ], [ false, %7 ]
  ret i1 %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
