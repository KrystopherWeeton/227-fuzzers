; ModuleID = '../../third_party/skia/src/core/SkRecord.cpp'
source_filename = "../../third_party/skia/src/core/SkRecord.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkRecord = type { %class.SkRefCnt.base, i32, i32, %class.SkAutoTMalloc, %class.SkArenaAlloc, i64 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkRecord::Record"* }
%"struct.SkRecord::Record" = type { i32, i8* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"struct.SkRecord::Destroyer" = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.SkRecords::SaveLayer" = type <{ %"class.SkRecords::Optional", %"class.SkRecords::Optional.2", %class.sk_sp.7, i32, [4 x i8] }>
%"class.SkRecords::Optional" = type { %struct.SkRect* }
%struct.SkRect = type { float, float, float, float }
%"class.SkRecords::Optional.2" = type { %class.SkPaint* }
%class.SkPaint = type <{ %class.sk_sp, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %class.sk_sp.6, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.3 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.4 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.5 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.6 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.sk_sp.7 = type { %class.SkImageFilter* }
%"struct.SkRecords::MarkCTM" = type { %class.SkString }
%class.SkString = type { %class.sk_sp.8 }
%class.sk_sp.8 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkPath = type <{ %class.sk_sp.9, i32, %"struct.std::__1::atomic.12", %"struct.std::__1::atomic.12", i8, i8 }>
%class.sk_sp.9 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.10, %class.SkTDArray.11, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.10 = type { i8*, i32, i32 }
%class.SkTDArray.11 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.17 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.12" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.17 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.18", [3 x i8] }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i8 }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i8 }
%"struct.SkRecords::ClipRegion" = type <{ %class.SkRegion, i32, [4 x i8] }>
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"struct.SkRecords::ClipShader" = type <{ %class.sk_sp.3, i32, [4 x i8] }>
%"struct.SkRecords::DrawArc" = type { %class.SkPaint, %struct.SkRect, float, float, i32, [4 x i8] }
%"struct.SkRecords::DrawImage" = type <{ %"class.SkRecords::Optional.2", %class.sk_sp.23, float, float, %struct.SkSamplingOptions, [4 x i8] }>
%class.sk_sp.23 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.24, i32, i32 }
%class.sk_sp.24 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.25, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.25 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"struct.SkRecords::DrawImageLattice" = type <{ %"class.SkRecords::Optional.2", %class.sk_sp.23, i32, [4 x i8], %"class.SkRecords::PODArray", i32, [4 x i8], %"class.SkRecords::PODArray", i32, [4 x i8], %"class.SkRecords::PODArray.26", %"class.SkRecords::PODArray.27", %struct.SkIRect, %struct.SkRect, i32, [4 x i8] }>
%"class.SkRecords::PODArray" = type { i32* }
%"class.SkRecords::PODArray.26" = type { i8* }
%"class.SkRecords::PODArray.27" = type { i32* }
%"struct.SkRecords::DrawImageRect" = type { %"class.SkRecords::Optional.2", %class.sk_sp.23, %struct.SkRect, %struct.SkRect, %struct.SkSamplingOptions, i32 }
%"struct.SkRecords::DrawDRRect" = type { %class.SkPaint, %class.SkRRect, %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"struct.SkRecords::DrawOval" = type { %class.SkPaint, %struct.SkRect }
%"struct.SkRecords::DrawBehind" = type { %class.SkPaint }
%"struct.SkRecords::DrawPaint" = type { %class.SkPaint }
%"struct.SkRecords::DrawPath" = type { %class.SkPaint, %"struct.SkRecords::PreCachedPath" }
%"struct.SkRecords::PreCachedPath" = type { %class.SkPath.base, i8 }
%class.SkPath.base = type <{ %class.sk_sp.9, i32, %"struct.std::__1::atomic.12", %"struct.std::__1::atomic.12", i8 }>
%"struct.SkRecords::DrawPatch" = type <{ %class.SkPaint, %"class.SkRecords::PODArray.28", %"class.SkRecords::PODArray.27", %"class.SkRecords::PODArray.28", i32, [4 x i8] }>
%"class.SkRecords::PODArray.28" = type { %struct.SkPoint* }
%"struct.SkRecords::DrawPicture" = type { %"class.SkRecords::Optional.2", %class.sk_sp.29, %"struct.SkRecords::TypedMatrix" }
%class.sk_sp.29 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.18", [7 x i8] }>
%"struct.SkRecords::TypedMatrix" = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"struct.SkRecords::DrawPoints" = type { %class.SkPaint, i32, i32, %"class.SkRecords::PODArray.28" }
%"struct.SkRecords::DrawRRect" = type { %class.SkPaint, %class.SkRRect, [4 x i8] }
%"struct.SkRecords::DrawRect" = type { %class.SkPaint, %struct.SkRect }
%"struct.SkRecords::DrawRegion" = type { %class.SkPaint, %class.SkRegion }
%"struct.SkRecords::DrawTextBlob" = type { %class.SkPaint, %class.sk_sp.30, float, float }
%class.sk_sp.30 = type { %class.SkTextBlob* }
%class.SkTextBlob = type { %class.SkNVRefCnt.31, %struct.SkRect, i32, %"struct.std::__1::atomic.32" }
%class.SkNVRefCnt.31 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i32 }
%"struct.SkRecords::DrawAtlas" = type { %"class.SkRecords::Optional.2", %class.sk_sp.23, %"class.SkRecords::PODArray.37", %"class.SkRecords::PODArray.38", %"class.SkRecords::PODArray.27", i32, i32, %struct.SkSamplingOptions, %"class.SkRecords::Optional" }
%"class.SkRecords::PODArray.37" = type { %struct.SkRSXform* }
%struct.SkRSXform = type { float, float, float, float }
%"class.SkRecords::PODArray.38" = type { %struct.SkRect* }
%"struct.SkRecords::DrawVertices" = type <{ %class.SkPaint, %class.sk_sp.39, i32, [4 x i8] }>
%class.sk_sp.39 = type { %class.SkVertices* }
%class.SkVertices = type <{ %class.SkNVRefCnt.40, i32, %struct.SkPoint*, i16*, %struct.SkPoint*, i32*, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkNVRefCnt.40 = type { %"struct.std::__1::atomic" }
%"struct.SkRecords::DrawAnnotation" = type { %struct.SkRect, %class.SkString, %class.sk_sp.41 }
%class.sk_sp.41 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.42, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.42 = type { %"struct.std::__1::atomic" }
%"struct.SkRecords::DrawEdgeAAImageSet" = type { %"class.SkRecords::Optional.2", %class.SkAutoTArray, i32, %"class.SkRecords::PODArray.28", %"class.SkRecords::PODArray.47", %struct.SkSamplingOptions, i32 }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.43" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.SkCanvas::ImageSetEntry"* }
%"struct.SkCanvas::ImageSetEntry" = type <{ %class.sk_sp.23, %struct.SkRect, %struct.SkRect, i32, float, i32, i8, [3 x i8] }>
%"class.SkRecords::PODArray.47" = type { %class.SkMatrix* }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN8SkRecord6Record6mutateIRNS_9DestroyerEEEDTclfp_cvPN9SkRecords4NoOpELDnEEEOT_ = comdat any

@_ZTV8SkRecord = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRecord*)* @_ZN8SkRecordD2Ev to i8*), i8* bitcast (void (%class.SkRecord*)* @_ZN8SkRecordD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, align 8

@_ZN8SkRecordD1Ev = hidden unnamed_addr alias void (%class.SkRecord*), void (%class.SkRecord*)* @_ZN8SkRecordD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRecordD2Ev(%class.SkRecord*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkRecord::Destroyer", align 1
  %3 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8SkRecord, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.SkRecord::Destroyer", %"struct.SkRecord::Destroyer"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #6
  store i8 -86, i8* %4, align 1
  %5 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  br label %20

10:                                               ; preds = %20, %1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #6
  %11 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %0, i64 0, i32 4
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %11) #6
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %0, i64 0, i32 3
  %13 = getelementptr inbounds %class.SkAutoTMalloc, %class.SkAutoTMalloc* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %class.SkAutoTMalloc* %12 to i64*
  %15 = load i64, i64* %14, align 8
  store %"struct.SkRecord::Record"* null, %"struct.SkRecord::Record"** %13, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = inttoptr i64 %15 to i8*
  call void @_Z7sk_freePv(i8* %18) #6
  br label %19

19:                                               ; preds = %10, %17
  ret void

20:                                               ; preds = %8, %20
  %21 = phi i64 [ 0, %8 ], [ %24, %20 ]
  %22 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %9, align 8
  %23 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %22, i64 %21
  call void @_ZN8SkRecord6Record6mutateIRNS_9DestroyerEEEDTclfp_cvPN9SkRecords4NoOpELDnEEEOT_(%"struct.SkRecord::Record"* %23, %"struct.SkRecord::Destroyer"* nonnull dereferenceable(1) %2) #6
  %24 = add nuw nsw i64 %21, 1
  %25 = load i32, i32* %5, align 4
  %26 = sext i32 %25 to i64
  %27 = icmp slt i64 %24, %26
  br i1 %27, label %20, label %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRecordD0Ev(%class.SkRecord*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkRecord::Destroyer", align 1
  %3 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8SkRecord, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.SkRecord::Destroyer", %"struct.SkRecord::Destroyer"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #6
  store i8 -86, i8* %4, align 1
  %5 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  br label %19

10:                                               ; preds = %19, %1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #6
  %11 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %0, i64 0, i32 4
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %11) #6
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %0, i64 0, i32 3
  %13 = getelementptr inbounds %class.SkAutoTMalloc, %class.SkAutoTMalloc* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %class.SkAutoTMalloc* %12 to i64*
  %15 = load i64, i64* %14, align 8
  store %"struct.SkRecord::Record"* null, %"struct.SkRecord::Record"** %13, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %10
  %18 = inttoptr i64 %15 to i8*
  call void @_Z7sk_freePv(i8* %18) #6
  br label %27

19:                                               ; preds = %19, %8
  %20 = phi i64 [ 0, %8 ], [ %23, %19 ]
  %21 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %9, align 8
  %22 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %21, i64 %20
  call void @_ZN8SkRecord6Record6mutateIRNS_9DestroyerEEEDTclfp_cvPN9SkRecords4NoOpELDnEEEOT_(%"struct.SkRecord::Record"* %22, %"struct.SkRecord::Destroyer"* nonnull dereferenceable(1) %2) #6
  %23 = add nuw nsw i64 %20, 1
  %24 = load i32, i32* %5, align 4
  %25 = sext i32 %24 to i64
  %26 = icmp slt i64 %23, %25
  br i1 %26, label %19, label %10

27:                                               ; preds = %10, %17
  %28 = bitcast %class.SkRecord* %0 to i8*
  call void @_ZdlPv(i8* %28) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRecord4growEv(%class.SkRecord* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  %5 = shl nsw i32 %3, 1
  %6 = select i1 %4, i32 4, i32 %5
  store i32 %6, i32* %2, align 8
  %7 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %0, i64 0, i32 3
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %1
  %10 = sext i32 %6 to i64
  %11 = getelementptr inbounds %class.SkAutoTMalloc, %class.SkAutoTMalloc* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %class.SkAutoTMalloc* %7 to i8**
  %13 = load i8*, i8** %12, align 8
  store %"struct.SkRecord::Record"* null, %"struct.SkRecord::Record"** %11, align 8
  %14 = shl nsw i64 %10, 4
  %15 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %13, i64 %14) #6
  %16 = bitcast i8* %15 to %"struct.SkRecord::Record"*
  br label %17

17:                                               ; preds = %9, %1
  %18 = phi %"struct.SkRecord::Record"* [ %16, %9 ], [ null, %1 ]
  %19 = getelementptr inbounds %class.SkAutoTMalloc, %class.SkAutoTMalloc* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %class.SkAutoTMalloc* %7 to i64*
  %21 = load i64, i64* %20, align 8
  store %"struct.SkRecord::Record"* %18, %"struct.SkRecord::Record"** %19, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = inttoptr i64 %21 to i8*
  tail call void @_Z7sk_freePv(i8* %24) #6
  br label %25

25:                                               ; preds = %17, %23
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK8SkRecord9bytesUsedEv(%class.SkRecord* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %0, i64 0, i32 5
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 72
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRecord6defragEv(%class.SkRecord* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %2, align 8
  %4 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  %9 = ptrtoint %"struct.SkRecord::Record"* %3 to i64
  br i1 %8, label %18, label %10

10:                                               ; preds = %1, %15
  %11 = phi %"struct.SkRecord::Record"* [ %16, %15 ], [ %3, %1 ]
  %12 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %11, i64 1
  %17 = icmp eq %"struct.SkRecord::Record"* %16, %7
  br i1 %17, label %68, label %10

18:                                               ; preds = %10, %1
  %19 = phi %"struct.SkRecord::Record"* [ %3, %1 ], [ %11, %10 ]
  %20 = ptrtoint %"struct.SkRecord::Record"* %19 to i64
  %21 = icmp eq %"struct.SkRecord::Record"* %19, %7
  br i1 %21, label %68, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %19, i64 1
  %24 = icmp eq %"struct.SkRecord::Record"* %23, %7
  br i1 %24, label %68, label %25

25:                                               ; preds = %22
  %26 = add nsw i64 %6, -2
  %27 = getelementptr %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %3, i64 %26, i32 0
  %28 = ptrtoint i32* %27 to i64
  %29 = sub i64 %28, %20
  %30 = and i64 %29, 16
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %43

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %32
  %37 = bitcast %"struct.SkRecord::Record"* %19 to i8*
  %38 = bitcast %"struct.SkRecord::Record"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 16, i1 false) #6
  %39 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %19, i64 1
  br label %40

40:                                               ; preds = %36, %32
  %41 = phi %"struct.SkRecord::Record"* [ %19, %32 ], [ %39, %36 ]
  %42 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %19, i64 2
  br label %43

43:                                               ; preds = %40, %25
  %44 = phi %"struct.SkRecord::Record"* [ undef, %25 ], [ %41, %40 ]
  %45 = phi %"struct.SkRecord::Record"* [ %23, %25 ], [ %42, %40 ]
  %46 = phi %"struct.SkRecord::Record"* [ %19, %25 ], [ %41, %40 ]
  %47 = icmp ult i64 %29, 16
  br i1 %47, label %64, label %48

48:                                               ; preds = %43, %79
  %49 = phi %"struct.SkRecord::Record"* [ %81, %79 ], [ %45, %43 ]
  %50 = phi %"struct.SkRecord::Record"* [ %80, %79 ], [ %46, %43 ]
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %49, i64 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %48
  %55 = bitcast %"struct.SkRecord::Record"* %50 to i8*
  %56 = bitcast %"struct.SkRecord::Record"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 16, i1 false) #6
  %57 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %50, i64 1
  br label %58

58:                                               ; preds = %54, %48
  %59 = phi %"struct.SkRecord::Record"* [ %50, %48 ], [ %57, %54 ]
  %60 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %49, i64 1
  %61 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %79, label %75

64:                                               ; preds = %79, %43
  %65 = phi %"struct.SkRecord::Record"* [ %44, %43 ], [ %80, %79 ]
  %66 = bitcast %"struct.SkRecord::Record"** %2 to i64*
  %67 = load i64, i64* %66, align 8
  br label %68

68:                                               ; preds = %15, %64, %18, %22
  %69 = phi i64 [ %9, %18 ], [ %9, %22 ], [ %67, %64 ], [ %9, %15 ]
  %70 = phi %"struct.SkRecord::Record"* [ %7, %18 ], [ %19, %22 ], [ %65, %64 ], [ %7, %15 ]
  %71 = ptrtoint %"struct.SkRecord::Record"* %70 to i64
  %72 = sub i64 %71, %69
  %73 = lshr exact i64 %72, 4
  %74 = trunc i64 %73 to i32
  store i32 %74, i32* %4, align 4
  ret void

75:                                               ; preds = %58
  %76 = bitcast %"struct.SkRecord::Record"* %59 to i8*
  %77 = bitcast %"struct.SkRecord::Record"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 16, i1 false) #6
  %78 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %59, i64 1
  br label %79

79:                                               ; preds = %75, %58
  %80 = phi %"struct.SkRecord::Record"* [ %59, %58 ], [ %78, %75 ]
  %81 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %49, i64 2
  %82 = icmp eq %"struct.SkRecord::Record"* %81, %7
  br i1 %82, label %64, label %48
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #6
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkRecord6Record6mutateIRNS_9DestroyerEEEDTclfp_cvPN9SkRecords4NoOpELDnEEEOT_(%"struct.SkRecord::Record"*, %"struct.SkRecord::Destroyer"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %300 [
    i32 40, label %275
    i32 38, label %260
    i32 37, label %256
    i32 36, label %241
    i32 4, label %5
    i32 35, label %219
    i32 6, label %27
    i32 34, label %204
    i32 33, label %198
    i32 32, label %193
    i32 31, label %188
    i32 30, label %183
    i32 29, label %161
    i32 13, label %32
    i32 28, label %156
    i32 27, label %149
    i32 16, label %36
    i32 17, label %41
    i32 18, label %58
    i32 26, label %144
    i32 20, label %63
    i32 21, label %85
    i32 22, label %107
    i32 23, label %129
    i32 24, label %134
    i32 25, label %139
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %7 = bitcast i8** %6 to %"struct.SkRecords::SaveLayer"**
  %8 = load %"struct.SkRecords::SaveLayer"*, %"struct.SkRecords::SaveLayer"** %7, align 8
  %9 = getelementptr inbounds %"struct.SkRecords::SaveLayer", %"struct.SkRecords::SaveLayer"* %8, i64 0, i32 2, i32 0
  %10 = load %class.SkImageFilter*, %class.SkImageFilter** %9, align 8
  %11 = icmp eq %class.SkImageFilter* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = bitcast %class.SkImageFilter* %10 to %class.SkRefCntBase*
  %18 = bitcast %class.SkImageFilter* %10 to void (%class.SkRefCntBase*)***
  %19 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, i64 2
  %21 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, align 8
  tail call void %21(%class.SkRefCntBase* nonnull %17) #6
  br label %22

22:                                               ; preds = %16, %12, %5
  %23 = getelementptr inbounds %"struct.SkRecords::SaveLayer", %"struct.SkRecords::SaveLayer"* %8, i64 0, i32 1, i32 0
  %24 = load %class.SkPaint*, %class.SkPaint** %23, align 8
  %25 = icmp eq %class.SkPaint* %24, null
  br i1 %25, label %300, label %26

26:                                               ; preds = %22
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %24) #6
  br label %300

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %29 = bitcast i8** %28 to %"struct.SkRecords::MarkCTM"**
  %30 = load %"struct.SkRecords::MarkCTM"*, %"struct.SkRecords::MarkCTM"** %29, align 8
  %31 = getelementptr inbounds %"struct.SkRecords::MarkCTM", %"struct.SkRecords::MarkCTM"* %30, i64 0, i32 0
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %31) #6
  br label %300

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %34 = bitcast i8** %33 to %class.SkPath**
  %35 = load %class.SkPath*, %class.SkPath** %34, align 8
  tail call void @_ZN6SkPathD2Ev(%class.SkPath* %35) #6
  br label %300

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %38 = bitcast i8** %37 to %"struct.SkRecords::ClipRegion"**
  %39 = load %"struct.SkRecords::ClipRegion"*, %"struct.SkRecords::ClipRegion"** %38, align 8
  %40 = getelementptr inbounds %"struct.SkRecords::ClipRegion", %"struct.SkRecords::ClipRegion"* %39, i64 0, i32 0
  tail call void @_ZN8SkRegionD1Ev(%class.SkRegion* %40) #6
  br label %300

41:                                               ; preds = %2
  %42 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %43 = bitcast i8** %42 to %"struct.SkRecords::ClipShader"**
  %44 = load %"struct.SkRecords::ClipShader"*, %"struct.SkRecords::ClipShader"** %43, align 8
  %45 = getelementptr inbounds %"struct.SkRecords::ClipShader", %"struct.SkRecords::ClipShader"* %44, i64 0, i32 0, i32 0
  %46 = load %class.SkShader*, %class.SkShader** %45, align 8
  %47 = icmp eq %class.SkShader* %46, null
  br i1 %47, label %300, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %class.SkShader, %class.SkShader* %46, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %300

52:                                               ; preds = %48
  %53 = bitcast %class.SkShader* %46 to %class.SkRefCntBase*
  %54 = bitcast %class.SkShader* %46 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  tail call void %57(%class.SkRefCntBase* nonnull %53) #6
  br label %300

58:                                               ; preds = %2
  %59 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %60 = bitcast i8** %59 to %"struct.SkRecords::DrawArc"**
  %61 = load %"struct.SkRecords::DrawArc"*, %"struct.SkRecords::DrawArc"** %60, align 8
  %62 = getelementptr inbounds %"struct.SkRecords::DrawArc", %"struct.SkRecords::DrawArc"* %61, i64 0, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %62) #6
  br label %300

63:                                               ; preds = %2
  %64 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %65 = bitcast i8** %64 to %"struct.SkRecords::DrawImage"**
  %66 = load %"struct.SkRecords::DrawImage"*, %"struct.SkRecords::DrawImage"** %65, align 8
  %67 = getelementptr inbounds %"struct.SkRecords::DrawImage", %"struct.SkRecords::DrawImage"* %66, i64 0, i32 1, i32 0
  %68 = load %class.SkImage*, %class.SkImage** %67, align 8
  %69 = icmp eq %class.SkImage* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %class.SkImage, %class.SkImage* %68, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = bitcast %class.SkImage* %68 to %class.SkRefCntBase*
  %76 = bitcast %class.SkImage* %68 to void (%class.SkRefCntBase*)***
  %77 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %76, align 8
  %78 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, i64 2
  %79 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, align 8
  tail call void %79(%class.SkRefCntBase* nonnull %75) #6
  br label %80

80:                                               ; preds = %74, %70, %63
  %81 = getelementptr inbounds %"struct.SkRecords::DrawImage", %"struct.SkRecords::DrawImage"* %66, i64 0, i32 0, i32 0
  %82 = load %class.SkPaint*, %class.SkPaint** %81, align 8
  %83 = icmp eq %class.SkPaint* %82, null
  br i1 %83, label %300, label %84

84:                                               ; preds = %80
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %82) #6
  br label %300

85:                                               ; preds = %2
  %86 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %87 = bitcast i8** %86 to %"struct.SkRecords::DrawImageLattice"**
  %88 = load %"struct.SkRecords::DrawImageLattice"*, %"struct.SkRecords::DrawImageLattice"** %87, align 8
  %89 = getelementptr inbounds %"struct.SkRecords::DrawImageLattice", %"struct.SkRecords::DrawImageLattice"* %88, i64 0, i32 1, i32 0
  %90 = load %class.SkImage*, %class.SkImage** %89, align 8
  %91 = icmp eq %class.SkImage* %90, null
  br i1 %91, label %102, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %class.SkImage, %class.SkImage* %90, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 -1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %102

96:                                               ; preds = %92
  %97 = bitcast %class.SkImage* %90 to %class.SkRefCntBase*
  %98 = bitcast %class.SkImage* %90 to void (%class.SkRefCntBase*)***
  %99 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %98, align 8
  %100 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %99, i64 2
  %101 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, align 8
  tail call void %101(%class.SkRefCntBase* nonnull %97) #6
  br label %102

102:                                              ; preds = %96, %92, %85
  %103 = getelementptr inbounds %"struct.SkRecords::DrawImageLattice", %"struct.SkRecords::DrawImageLattice"* %88, i64 0, i32 0, i32 0
  %104 = load %class.SkPaint*, %class.SkPaint** %103, align 8
  %105 = icmp eq %class.SkPaint* %104, null
  br i1 %105, label %300, label %106

106:                                              ; preds = %102
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %104) #6
  br label %300

107:                                              ; preds = %2
  %108 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %109 = bitcast i8** %108 to %"struct.SkRecords::DrawImageRect"**
  %110 = load %"struct.SkRecords::DrawImageRect"*, %"struct.SkRecords::DrawImageRect"** %109, align 8
  %111 = getelementptr inbounds %"struct.SkRecords::DrawImageRect", %"struct.SkRecords::DrawImageRect"* %110, i64 0, i32 1, i32 0
  %112 = load %class.SkImage*, %class.SkImage** %111, align 8
  %113 = icmp eq %class.SkImage* %112, null
  br i1 %113, label %124, label %114

114:                                              ; preds = %107
  %115 = getelementptr inbounds %class.SkImage, %class.SkImage* %112, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = atomicrmw add i32* %115, i32 -1 acq_rel
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %124

118:                                              ; preds = %114
  %119 = bitcast %class.SkImage* %112 to %class.SkRefCntBase*
  %120 = bitcast %class.SkImage* %112 to void (%class.SkRefCntBase*)***
  %121 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %120, align 8
  %122 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %121, i64 2
  %123 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %122, align 8
  tail call void %123(%class.SkRefCntBase* nonnull %119) #6
  br label %124

124:                                              ; preds = %118, %114, %107
  %125 = getelementptr inbounds %"struct.SkRecords::DrawImageRect", %"struct.SkRecords::DrawImageRect"* %110, i64 0, i32 0, i32 0
  %126 = load %class.SkPaint*, %class.SkPaint** %125, align 8
  %127 = icmp eq %class.SkPaint* %126, null
  br i1 %127, label %300, label %128

128:                                              ; preds = %124
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %126) #6
  br label %300

129:                                              ; preds = %2
  %130 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %131 = bitcast i8** %130 to %"struct.SkRecords::DrawDRRect"**
  %132 = load %"struct.SkRecords::DrawDRRect"*, %"struct.SkRecords::DrawDRRect"** %131, align 8
  %133 = getelementptr inbounds %"struct.SkRecords::DrawDRRect", %"struct.SkRecords::DrawDRRect"* %132, i64 0, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %133) #6
  br label %300

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %136 = bitcast i8** %135 to %"struct.SkRecords::DrawOval"**
  %137 = load %"struct.SkRecords::DrawOval"*, %"struct.SkRecords::DrawOval"** %136, align 8
  %138 = getelementptr inbounds %"struct.SkRecords::DrawOval", %"struct.SkRecords::DrawOval"* %137, i64 0, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %138) #6
  br label %300

139:                                              ; preds = %2
  %140 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %141 = bitcast i8** %140 to %"struct.SkRecords::DrawBehind"**
  %142 = load %"struct.SkRecords::DrawBehind"*, %"struct.SkRecords::DrawBehind"** %141, align 8
  %143 = getelementptr inbounds %"struct.SkRecords::DrawBehind", %"struct.SkRecords::DrawBehind"* %142, i64 0, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %143) #6
  br label %300

144:                                              ; preds = %2
  %145 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %146 = bitcast i8** %145 to %"struct.SkRecords::DrawPaint"**
  %147 = load %"struct.SkRecords::DrawPaint"*, %"struct.SkRecords::DrawPaint"** %146, align 8
  %148 = getelementptr inbounds %"struct.SkRecords::DrawPaint", %"struct.SkRecords::DrawPaint"* %147, i64 0, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %148) #6
  br label %300

149:                                              ; preds = %2
  %150 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %151 = bitcast i8** %150 to %"struct.SkRecords::DrawPath"**
  %152 = load %"struct.SkRecords::DrawPath"*, %"struct.SkRecords::DrawPath"** %151, align 8
  %153 = getelementptr inbounds %"struct.SkRecords::DrawPath", %"struct.SkRecords::DrawPath"* %152, i64 0, i32 1
  %154 = bitcast %"struct.SkRecords::PreCachedPath"* %153 to %class.SkPath*
  tail call void @_ZN6SkPathD2Ev(%class.SkPath* %154) #6
  %155 = getelementptr inbounds %"struct.SkRecords::DrawPath", %"struct.SkRecords::DrawPath"* %152, i64 0, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %155) #6
  br label %300

156:                                              ; preds = %2
  %157 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %158 = bitcast i8** %157 to %"struct.SkRecords::DrawPatch"**
  %159 = load %"struct.SkRecords::DrawPatch"*, %"struct.SkRecords::DrawPatch"** %158, align 8
  %160 = getelementptr inbounds %"struct.SkRecords::DrawPatch", %"struct.SkRecords::DrawPatch"* %159, i64 0, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %160) #6
  br label %300

161:                                              ; preds = %2
  %162 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %163 = bitcast i8** %162 to %"struct.SkRecords::DrawPicture"**
  %164 = load %"struct.SkRecords::DrawPicture"*, %"struct.SkRecords::DrawPicture"** %163, align 8
  %165 = getelementptr inbounds %"struct.SkRecords::DrawPicture", %"struct.SkRecords::DrawPicture"* %164, i64 0, i32 1, i32 0
  %166 = load %class.SkPicture*, %class.SkPicture** %165, align 8
  %167 = icmp eq %class.SkPicture* %166, null
  br i1 %167, label %178, label %168

168:                                              ; preds = %161
  %169 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %166, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = atomicrmw add i32* %169, i32 -1 acq_rel
  %171 = icmp eq i32 %170, 1
  br i1 %171, label %172, label %178

172:                                              ; preds = %168
  %173 = bitcast %class.SkPicture* %166 to %class.SkRefCntBase*
  %174 = bitcast %class.SkPicture* %166 to void (%class.SkRefCntBase*)***
  %175 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %174, align 8
  %176 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %175, i64 2
  %177 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %176, align 8
  tail call void %177(%class.SkRefCntBase* nonnull %173) #6
  br label %178

178:                                              ; preds = %172, %168, %161
  %179 = getelementptr inbounds %"struct.SkRecords::DrawPicture", %"struct.SkRecords::DrawPicture"* %164, i64 0, i32 0, i32 0
  %180 = load %class.SkPaint*, %class.SkPaint** %179, align 8
  %181 = icmp eq %class.SkPaint* %180, null
  br i1 %181, label %300, label %182

182:                                              ; preds = %178
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %180) #6
  br label %300

183:                                              ; preds = %2
  %184 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %185 = bitcast i8** %184 to %"struct.SkRecords::DrawPoints"**
  %186 = load %"struct.SkRecords::DrawPoints"*, %"struct.SkRecords::DrawPoints"** %185, align 8
  %187 = getelementptr inbounds %"struct.SkRecords::DrawPoints", %"struct.SkRecords::DrawPoints"* %186, i64 0, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %187) #6
  br label %300

188:                                              ; preds = %2
  %189 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %190 = bitcast i8** %189 to %"struct.SkRecords::DrawRRect"**
  %191 = load %"struct.SkRecords::DrawRRect"*, %"struct.SkRecords::DrawRRect"** %190, align 8
  %192 = getelementptr inbounds %"struct.SkRecords::DrawRRect", %"struct.SkRecords::DrawRRect"* %191, i64 0, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %192) #6
  br label %300

193:                                              ; preds = %2
  %194 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %195 = bitcast i8** %194 to %"struct.SkRecords::DrawRect"**
  %196 = load %"struct.SkRecords::DrawRect"*, %"struct.SkRecords::DrawRect"** %195, align 8
  %197 = getelementptr inbounds %"struct.SkRecords::DrawRect", %"struct.SkRecords::DrawRect"* %196, i64 0, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %197) #6
  br label %300

198:                                              ; preds = %2
  %199 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %200 = bitcast i8** %199 to %"struct.SkRecords::DrawRegion"**
  %201 = load %"struct.SkRecords::DrawRegion"*, %"struct.SkRecords::DrawRegion"** %200, align 8
  %202 = getelementptr inbounds %"struct.SkRecords::DrawRegion", %"struct.SkRecords::DrawRegion"* %201, i64 0, i32 1
  tail call void @_ZN8SkRegionD1Ev(%class.SkRegion* %202) #6
  %203 = getelementptr inbounds %"struct.SkRecords::DrawRegion", %"struct.SkRecords::DrawRegion"* %201, i64 0, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %203) #6
  br label %300

204:                                              ; preds = %2
  %205 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %206 = bitcast i8** %205 to %"struct.SkRecords::DrawTextBlob"**
  %207 = load %"struct.SkRecords::DrawTextBlob"*, %"struct.SkRecords::DrawTextBlob"** %206, align 8
  %208 = getelementptr inbounds %"struct.SkRecords::DrawTextBlob", %"struct.SkRecords::DrawTextBlob"* %207, i64 0, i32 1, i32 0
  %209 = load %class.SkTextBlob*, %class.SkTextBlob** %208, align 8
  %210 = icmp eq %class.SkTextBlob* %209, null
  br i1 %210, label %217, label %211

211:                                              ; preds = %204
  %212 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = atomicrmw add i32* %212, i32 -1 acq_rel
  %214 = icmp eq i32 %213, 1
  br i1 %214, label %215, label %217

215:                                              ; preds = %211
  tail call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %209) #6
  %216 = bitcast %class.SkTextBlob* %209 to i8*
  tail call void @_ZN10SkTextBlobdlEPv(i8* nonnull %216) #6
  br label %217

217:                                              ; preds = %204, %211, %215
  %218 = getelementptr inbounds %"struct.SkRecords::DrawTextBlob", %"struct.SkRecords::DrawTextBlob"* %207, i64 0, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %218) #6
  br label %300

219:                                              ; preds = %2
  %220 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %221 = bitcast i8** %220 to %"struct.SkRecords::DrawAtlas"**
  %222 = load %"struct.SkRecords::DrawAtlas"*, %"struct.SkRecords::DrawAtlas"** %221, align 8
  %223 = getelementptr inbounds %"struct.SkRecords::DrawAtlas", %"struct.SkRecords::DrawAtlas"* %222, i64 0, i32 1, i32 0
  %224 = load %class.SkImage*, %class.SkImage** %223, align 8
  %225 = icmp eq %class.SkImage* %224, null
  br i1 %225, label %236, label %226

226:                                              ; preds = %219
  %227 = getelementptr inbounds %class.SkImage, %class.SkImage* %224, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = atomicrmw add i32* %227, i32 -1 acq_rel
  %229 = icmp eq i32 %228, 1
  br i1 %229, label %230, label %236

230:                                              ; preds = %226
  %231 = bitcast %class.SkImage* %224 to %class.SkRefCntBase*
  %232 = bitcast %class.SkImage* %224 to void (%class.SkRefCntBase*)***
  %233 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %232, align 8
  %234 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %233, i64 2
  %235 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %234, align 8
  tail call void %235(%class.SkRefCntBase* nonnull %231) #6
  br label %236

236:                                              ; preds = %230, %226, %219
  %237 = getelementptr inbounds %"struct.SkRecords::DrawAtlas", %"struct.SkRecords::DrawAtlas"* %222, i64 0, i32 0, i32 0
  %238 = load %class.SkPaint*, %class.SkPaint** %237, align 8
  %239 = icmp eq %class.SkPaint* %238, null
  br i1 %239, label %300, label %240

240:                                              ; preds = %236
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %238) #6
  br label %300

241:                                              ; preds = %2
  %242 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %243 = bitcast i8** %242 to %"struct.SkRecords::DrawVertices"**
  %244 = load %"struct.SkRecords::DrawVertices"*, %"struct.SkRecords::DrawVertices"** %243, align 8
  %245 = getelementptr inbounds %"struct.SkRecords::DrawVertices", %"struct.SkRecords::DrawVertices"* %244, i64 0, i32 1, i32 0
  %246 = load %class.SkVertices*, %class.SkVertices** %245, align 8
  %247 = icmp eq %class.SkVertices* %246, null
  br i1 %247, label %254, label %248

248:                                              ; preds = %241
  %249 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %246, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = atomicrmw add i32* %249, i32 -1 acq_rel
  %251 = icmp eq i32 %250, 1
  br i1 %251, label %252, label %254

252:                                              ; preds = %248
  %253 = bitcast %class.SkVertices* %246 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %253) #6
  br label %254

254:                                              ; preds = %241, %248, %252
  %255 = getelementptr inbounds %"struct.SkRecords::DrawVertices", %"struct.SkRecords::DrawVertices"* %244, i64 0, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %255) #6
  br label %300

256:                                              ; preds = %2
  %257 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %258 = bitcast i8** %257 to %class.SkPath**
  %259 = load %class.SkPath*, %class.SkPath** %258, align 8
  tail call void @_ZN6SkPathD2Ev(%class.SkPath* %259) #6
  br label %300

260:                                              ; preds = %2
  %261 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %262 = bitcast i8** %261 to %"struct.SkRecords::DrawAnnotation"**
  %263 = load %"struct.SkRecords::DrawAnnotation"*, %"struct.SkRecords::DrawAnnotation"** %262, align 8
  %264 = getelementptr inbounds %"struct.SkRecords::DrawAnnotation", %"struct.SkRecords::DrawAnnotation"* %263, i64 0, i32 2, i32 0
  %265 = load %class.SkData*, %class.SkData** %264, align 8
  %266 = icmp eq %class.SkData* %265, null
  br i1 %266, label %273, label %267

267:                                              ; preds = %260
  %268 = getelementptr inbounds %class.SkData, %class.SkData* %265, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = atomicrmw add i32* %268, i32 -1 acq_rel
  %270 = icmp eq i32 %269, 1
  br i1 %270, label %271, label %273

271:                                              ; preds = %267
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %265) #6
  %272 = bitcast %class.SkData* %265 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %272) #6
  br label %273

273:                                              ; preds = %260, %267, %271
  %274 = getelementptr inbounds %"struct.SkRecords::DrawAnnotation", %"struct.SkRecords::DrawAnnotation"* %263, i64 0, i32 1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %274) #6
  br label %300

275:                                              ; preds = %2
  %276 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %0, i64 0, i32 1
  %277 = bitcast i8** %276 to %"struct.SkRecords::DrawEdgeAAImageSet"**
  %278 = load %"struct.SkRecords::DrawEdgeAAImageSet"*, %"struct.SkRecords::DrawEdgeAAImageSet"** %277, align 8
  %279 = getelementptr inbounds %"struct.SkRecords::DrawEdgeAAImageSet", %"struct.SkRecords::DrawEdgeAAImageSet"* %278, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %280 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %279, align 8
  store %"struct.SkCanvas::ImageSetEntry"* null, %"struct.SkCanvas::ImageSetEntry"** %279, align 8
  %281 = icmp eq %"struct.SkCanvas::ImageSetEntry"* %280, null
  br i1 %281, label %295, label %282

282:                                              ; preds = %275
  %283 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %280, i64 -1, i32 5
  %284 = bitcast i32* %283 to i8*
  %285 = bitcast i32* %283 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %294, label %288

288:                                              ; preds = %282
  %289 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %280, i64 %286
  br label %290

290:                                              ; preds = %290, %288
  %291 = phi %"struct.SkCanvas::ImageSetEntry"* [ %292, %290 ], [ %289, %288 ]
  %292 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %291, i64 -1
  tail call void @_ZN8SkCanvas13ImageSetEntryD1Ev(%"struct.SkCanvas::ImageSetEntry"* %292) #6
  %293 = icmp eq %"struct.SkCanvas::ImageSetEntry"* %292, %280
  br i1 %293, label %294, label %290

294:                                              ; preds = %290, %282
  tail call void @_ZdaPv(i8* %284) #7
  br label %295

295:                                              ; preds = %294, %275
  %296 = getelementptr inbounds %"struct.SkRecords::DrawEdgeAAImageSet", %"struct.SkRecords::DrawEdgeAAImageSet"* %278, i64 0, i32 0, i32 0
  %297 = load %class.SkPaint*, %class.SkPaint** %296, align 8
  %298 = icmp eq %class.SkPaint* %297, null
  br i1 %298, label %300, label %299

299:                                              ; preds = %295
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %297) #6
  br label %300

300:                                              ; preds = %2, %299, %295, %240, %236, %182, %178, %128, %124, %106, %102, %84, %80, %52, %48, %41, %26, %22, %273, %256, %254, %217, %198, %193, %188, %183, %156, %149, %144, %139, %134, %129, %58, %36, %32, %27
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD2Ev(%class.SkPath*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobdlEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10SkVerticesdlEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkCanvas13ImageSetEntryD1Ev(%"struct.SkCanvas::ImageSetEntry"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
