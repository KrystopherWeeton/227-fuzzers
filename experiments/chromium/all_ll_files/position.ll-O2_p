; ModuleID = '../../third_party/blink/renderer/core/editing/position.cc'
source_filename = "../../third_party/blink/renderer/core/editing/position.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.42", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.51", %"class.blink::HeapVector.53" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.100", %"class.WTF::Vector.100", i8, i32, %"class.blink::Member.111", %"class.blink::Member.113", %"class.blink::Member.115", %"class.blink::Member.117", %"class.blink::Member.119", %"class.blink::Member.121", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.124", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.130", %"class.blink::Member.132", %"class.blink::Member.59", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.135", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.345", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.354", double, double, i64, i64, %"class.blink::HeapHashSet.356", %"class.blink::HeapHashSet.363", i16, i8, %"class.blink::Member.370", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::TextLinkColors", %"class.blink::Member.378", i8, [7 x i8], %"class.blink::HeapHashMap.380", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.387", %"class.blink::Member.392", %"class.blink::Member.394", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.396", %"class.blink::HeapVector.398", %"class.std::__1::unique_ptr.406", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.412", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.425", %"class.WTF::Vector.427", i8, i8, %"class.std::__1::unique_ptr.432", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.438", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.446", i8, i32, %"class.blink::Member.448", %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.454", %"class.WTF::HashMap.456", %"class.blink::Member.461", %"class.blink::Member.463", %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.469", i8, i32, %"class.blink::Member.476", %"class.blink::Member.478", i32, %"class.blink::Member.480", %"class.blink::Member.482", %"class.blink::Member.484", %"class.std::__1::unique_ptr.486", i64, %"class.std::__1::unique_ptr.492", i32, i32, %"class.blink::Member.498", %"class.blink::Member.500", %"class.blink::Member.502", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.504", %"class.WTF::Vector.506", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.511", %"class.blink::Member.518", %"class.std::__1::unique_ptr.520", %"class.blink::Member.526", i8, i8, %"class.WTF::String", %"class.blink::Member.528", i8, [7 x i8], %"class.blink::HeapHashMap.530", %"class.blink::HeapObserverSet", %"class.blink::Member.544", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.546", i32, i8, i8, %"class.blink::WeakMember.548", %"class.blink::Member.549" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.93" }
%"class.blink::HeapHashMap.93" = type { %"class.WTF::HashMap.96" }
%"class.WTF::HashMap.96" = type { %"class.WTF::HashTable.97" }
%"class.WTF::HashTable.97" = type <{ %"struct.WTF::KeyValuePair.99"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.99" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.100" = type { %"class.WTF::VectorBuffer.101" }
%"class.WTF::VectorBuffer.101" = type { %"class.WTF::VectorBufferBase.102" }
%"class.WTF::VectorBufferBase.102" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.103 }
%class.scoped_refptr.103 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.104" }
%"struct.std::__1::atomic.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__cxx_atomic_impl.107" }
%"struct.std::__1::__cxx_atomic_impl.107" = type { %"struct.std::__1::__cxx_atomic_base_impl.108" }
%"struct.std::__1::__cxx_atomic_base_impl.108" = type { i32 }
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.61", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.63, %"class.WTF::Vector.64", %"class.WTF::Vector.64", %"class.blink::Member", %"class.blink::Member.69", %"class.blink::HeapHashSet", %"class.blink::Member.8", %"class.WTF::HashSet.77", %"class.WTF::TextPosition", %"class.blink::Member.81", %"class.blink::HeapVector.83", %"class.blink::Member.90" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.63 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.71" }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.75" }
%"class.WTF::HashTable.75" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.83" = type { %"class.WTF::Vector.86" }
%"class.WTF::Vector.86" = type { %"class.WTF::VectorBuffer.87" }
%"class.WTF::VectorBuffer.87" = type { %"class.WTF::VectorBufferBase.88" }
%"class.WTF::VectorBufferBase.88" = type { %"class.blink::Member.69"*, i32, i32 }
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.134 }
%class.scoped_refptr.134 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.135" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.138 }
%class.scoped_refptr.138 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.139", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.139" = type { %"class.base::RefCounted.140" }
%"class.base::RefCounted.140" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.143" }
%"class.blink::HeapHashMap.143" = type { %"class.WTF::HashMap.146" }
%"class.WTF::HashMap.146" = type { %"class.WTF::HashTable.147" }
%"class.WTF::HashTable.147" = type <{ %"struct.WTF::KeyValuePair.149"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.149" = type { %"class.blink::WeakMember.150", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.152", i32, [4 x i8], %"class.std::__1::unique_ptr.288", %"class.std::__1::unique_ptr.288", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.304", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.329", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.268", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__atomic_base.190" }
%"struct.std::__1::__atomic_base.190" = type { %"struct.std::__1::__cxx_atomic_impl.191" }
%"struct.std::__1::__cxx_atomic_impl.191" = type { %"struct.std::__1::__cxx_atomic_base_impl.192" }
%"struct.std::__1::__cxx_atomic_base_impl.192" = type { i64 }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::Worklist.199"* }
%"class.blink::Worklist.199" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::Worklist.206"* }
%"class.blink::Worklist.206" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::Worklist.213"* }
%"class.blink::Worklist.213" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::Worklist.220"* }
%"class.blink::Worklist.220" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::Worklist.227"* }
%"class.blink::Worklist.227" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::Worklist.234"* }
%"class.blink::Worklist.234" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::Worklist.241"* }
%"class.blink::Worklist.241" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.248", %"class.std::__1::__compressed_pair.255", %"class.std::__1::__compressed_pair.260", %"class.std::__1::__compressed_pair.262", [4 x i8] }>
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250", %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { i64 }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { float }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.271", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.280" }
%"class.WTF::Vector.280" = type { %"class.WTF::VectorBuffer.281" }
%"class.WTF::VectorBuffer.281" = type { %"class.WTF::VectorBufferBase.282" }
%"class.WTF::VectorBufferBase.282" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.296" }
%"class.WTF::VectorBuffer.296" = type { %"class.WTF::VectorBufferBase.297" }
%"class.WTF::VectorBufferBase.297" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.310" }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.199"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.206"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.213"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.220"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.227"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.562" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.328 }
%class.scoped_refptr.328 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.329" = type { %"struct.std::__1::__atomic_base.330" }
%"struct.std::__1::__atomic_base.330" = type { %"struct.std::__1::__cxx_atomic_impl.331" }
%"struct.std::__1::__cxx_atomic_impl.331" = type { %"struct.std::__1::__cxx_atomic_base_impl.332" }
%"struct.std::__1::__cxx_atomic_base_impl.332" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.345" = type { %"class.blink::MemberBase.346" }
%"class.blink::MemberBase.346" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.8", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.347" }
%"class.blink::HeapHashMap.347" = type { %"class.WTF::HashMap.350" }
%"class.WTF::HashMap.350" = type { %"class.WTF::HashTable.351" }
%"class.WTF::HashTable.351" = type <{ %"struct.WTF::KeyValuePair.353"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.353" = type opaque
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.356" = type { %"class.WTF::HashSet.359" }
%"class.WTF::HashSet.359" = type { %"class.WTF::HashTable.360" }
%"class.WTF::HashTable.360" = type <{ %"class.blink::WeakMember.362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.362" = type opaque
%"class.blink::HeapHashSet.363" = type { %"class.WTF::HashSet.366" }
%"class.WTF::HashSet.366" = type { %"class.WTF::HashTable.367" }
%"class.WTF::HashTable.367" = type <{ %"class.blink::WeakMember.369"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.369" = type opaque
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.53" }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.380" = type { %"class.WTF::HashMap.383" }
%"class.WTF::HashMap.383" = type { %"class.WTF::HashTable.384" }
%"class.WTF::HashTable.384" = type <{ %"struct.WTF::KeyValuePair.386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.386" = type opaque
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.33", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.33" = type { %"class.base::RefCounted.34" }
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.398" = type { %"class.WTF::Vector.401" }
%"class.WTF::Vector.401" = type { %"class.WTF::VectorBuffer.402" }
%"class.WTF::VectorBuffer.402" = type { %"class.WTF::VectorBufferBase.403" }
%"class.WTF::VectorBufferBase.403" = type { %"class.blink::Member.404"*, i32, i32 }
%"class.blink::Member.404" = type opaque
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.412" = type { %"class.WTF::HashSet.415" }
%"class.WTF::HashSet.415" = type { %"class.WTF::HashTable.416" }
%"class.WTF::HashTable.416" = type <{ %"class.blink::WeakMember.418"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.418" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.419", i32, [4 x i8] }>
%"class.WTF::Vector.419" = type { %"class.WTF::VectorBuffer.420" }
%"class.WTF::VectorBuffer.420" = type { %"class.WTF::VectorBufferBase.421" }
%"class.WTF::VectorBufferBase.421" = type { %"struct.std::__1::pair.422"*, i32, i32 }
%"struct.std::__1::pair.422" = type opaque
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.427" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.438" = type { %"class.WTF::Vector.441" }
%"class.WTF::Vector.441" = type { %"class.WTF::VectorBuffer.442" }
%"class.WTF::VectorBuffer.442" = type { %"class.WTF::VectorBufferBase.443" }
%"class.WTF::VectorBufferBase.443" = type { %"class.blink::Member.444"*, i32, i32 }
%"class.blink::Member.444" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.456" = type { %"class.WTF::HashTable.457" }
%"class.WTF::HashTable.457" = type <{ %"struct.WTF::KeyValuePair.460"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.460" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.344", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.335, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.335 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.336" }>
%"class.base::RefCountedThreadSafe.336" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.337 }
%class.scoped_refptr.337 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.338", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.338" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.339" }
%"struct.std::__1::atomic.339" = type { %"struct.std::__1::__atomic_base.340" }
%"struct.std::__1::__atomic_base.340" = type { %"struct.std::__1::__atomic_base.341" }
%"struct.std::__1::__atomic_base.341" = type { %"struct.std::__1::__cxx_atomic_impl.342" }
%"struct.std::__1::__cxx_atomic_impl.342" = type { %"struct.std::__1::__cxx_atomic_base_impl.343" }
%"struct.std::__1::__cxx_atomic_base_impl.343" = type { i8 }
%"class.blink::WeakMember.344" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.469" = type { %"class.WTF::HashSet.472" }
%"class.WTF::HashSet.472" = type { %"class.WTF::HashTable.473" }
%"class.WTF::HashTable.473" = type <{ %"class.blink::Member.475"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.475" = type opaque
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.506" = type { %"class.WTF::VectorBuffer.507" }
%"class.WTF::VectorBuffer.507" = type { %"class.WTF::VectorBufferBase.508" }
%"class.WTF::VectorBufferBase.508" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.511" = type { %"class.WTF::HashMap.514" }
%"class.WTF::HashMap.514" = type { %"class.WTF::HashTable.515" }
%"class.WTF::HashTable.515" = type <{ %"struct.WTF::KeyValuePair.517"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.517" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.530" = type { %"class.WTF::HashMap.533" }
%"class.WTF::HashMap.533" = type { %"class.WTF::HashTable.534" }
%"class.WTF::HashTable.534" = type <{ %"struct.WTF::KeyValuePair.536"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.536" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.537" }
%"class.blink::HeapHashSet.537" = type { %"class.WTF::HashSet.540" }
%"class.WTF::HashSet.540" = type { %"class.WTF::HashTable.541" }
%"class.WTF::HashTable.541" = type <{ %"class.blink::WeakMember.543"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.543" = type opaque
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.553", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.560", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.553" = type { %"class.WTF::HashSet.556" }
%"class.WTF::HashSet.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"class.blink::Member.559"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.559" = type opaque
%"class.blink::HeapTaskRunnerTimer.560" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.561", { i64, i64 } }
%"class.blink::WeakMember.561" = type { %"class.blink::MemberBase.547" }
%"class.blink::WeakMember.548" = type { %"class.blink::MemberBase" }
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapHashMap.50"* }
%"class.blink::HeapHashMap.50" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.53" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::PositionTemplate.606" = type { %"class.blink::Member", i32, i32 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.568", %"class.WTF::String", %"class.std::__1::unique_ptr.570" }
%"class.WTF::RefCounted.568" = type { %"class.base::RefCounted.569" }
%"class.base::RefCounted.569" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.573", %"class.std::__1::unique_ptr.584", %"class.WTF::Vector.590", i8, i32 }
%"class.std::__1::unique_ptr.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.WTF::Vector.576"* }
%"class.WTF::Vector.576" = type { %"class.WTF::VectorBuffer.577" }
%"class.WTF::VectorBuffer.577" = type { %"class.WTF::VectorBufferBase.578" }
%"class.WTF::VectorBufferBase.578" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.584" = type { %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.590" = type { %"class.WTF::VectorBuffer.591" }
%"class.WTF::VectorBuffer.591" = type { %"class.WTF::VectorBufferBase.578", [32 x i8] }
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%union.anon = type { %"class.WTF::Vector.597" }
%"class.WTF::Vector.597" = type { %"class.WTF::VectorBuffer.598" }
%"class.WTF::VectorBuffer.598" = type { %"class.WTF::VectorBufferBase.578", [16 x i8] }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.610 }
%union.anon.610 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEnwEm10NotNullTagPv = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEnwEmPv = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC5Ev = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CommonAncestorTreeScopeERKS4_S6_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE33CreateWithoutValidationDeprecatedERKNS_4NodeEi = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC5EPKNS_4NodeENS_18PositionAnchorTypeE = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC5ERKNS_4NodeEi = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC5EPKNS_4NodeEi = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC5ERKS4_ = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CreateWithoutValidationERKNS_4NodeEi = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEcvbEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9IsNotNullEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10AnchorTypeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13IsAfterAnchorEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE15IsAfterChildrenEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE14IsBeforeAnchorEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16IsBeforeChildrenEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16IsOffsetInAnchorEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16LastOffsetInNodeERKNS_4NodeE = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28IsAfterAnchorOrAfterChildrenEv = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17InParentAfterNodeERKNS_4NodeE = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16ToOffsetInAnchorEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE6IsNullEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE21OffsetInContainerNodeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeEditingOffsetEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25ComputeNodeBeforePositionEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ComputeNodeAfterPositionEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20NodeAsRangeFirstNodeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19NodeAsRangeLastNodeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23NodeAsRangePastLastNodeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CommonAncestorContainerERKS4_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10AnchorNodeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11GetDocumentEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10IsValidForERKNS_8DocumentE = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE8IsOrphanEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9CompareToERKS4_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEltERKS4_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEleERKS4_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEgtERKS4_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEgeERKS4_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE12IsEquivalentERKS4_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE29AtFirstEditingPositionForNodeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28AtLastEditingPositionForNodeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13AtStartOfTreeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11AtEndOfTreeEv = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27ToAnchorTypeAndOffsetStringEv = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEnwEm10NotNullTagPv = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEnwEmPv = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC5Ev = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE23CommonAncestorTreeScopeERKS4_S6_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeContainerNodeEv = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE33CreateWithoutValidationDeprecatedERKNS_4NodeEi = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC5EPKNS_4NodeENS_18PositionAnchorTypeE = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC5ERKNS_4NodeEi = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC5EPKNS_4NodeEi = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC5ERKS4_ = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE23CreateWithoutValidationERKNS_4NodeEi = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEcvbEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9IsNotNullEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE10AnchorTypeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13IsAfterAnchorEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE15IsAfterChildrenEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE14IsBeforeAnchorEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16IsBeforeChildrenEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16IsOffsetInAnchorEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16LastOffsetInNodeERKNS_4NodeE = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE24ParentAnchoredEquivalentEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28IsAfterAnchorOrAfterChildrenEv = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE17InParentAfterNodeERKNS_4NodeE = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16ToOffsetInAnchorEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE6IsNullEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE21OffsetInContainerNodeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeEditingOffsetEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE25ComputeNodeBeforePositionEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE24ComputeNodeAfterPositionEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20NodeAsRangeFirstNodeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE19NodeAsRangeLastNodeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE23NodeAsRangePastLastNodeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE23CommonAncestorContainerERKS4_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE10AnchorNodeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11GetDocumentEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11IsConnectedEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE10IsValidForERKNS_8DocumentE = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE8IsOrphanEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9CompareToERKS4_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEltERKS4_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEleERKS4_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEgtERKS4_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEgeERKS4_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE12IsEquivalentERKS4_ = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE29AtFirstEditingPositionForNodeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28AtLastEditingPositionForNodeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13AtStartOfTreeEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11AtEndOfTreeEv = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE10BeforeNodeERKNS_4NodeE = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9AfterNodeERKNS_4NodeE = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18LastPositionInNodeERKNS_4NodeE = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE = comdat any

$_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE27ToAnchorTypeAndOffsetStringEv = comdat any

$_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE5TraceEPNS_7VisitorE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

@.str = private unnamed_addr constant [16 x i8] c"offsetInAnchor[\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"afterChildren\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"beforeAnchor\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"afterAnchor\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.5 = private unnamed_addr constant [15 x i8] c"offsetInAnchor\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"anchorType=\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.8 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"@\00", align 1

@_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.blink::PositionTemplate"*), void (%"class.blink::PositionTemplate"*)* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC2Ev
@_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeENS_18PositionAnchorTypeE = weak_odr hidden unnamed_addr alias void (%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32), void (%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32)* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC2EPKNS_4NodeENS_18PositionAnchorTypeE
@_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_4NodeEi = weak_odr hidden unnamed_addr alias void (%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32), void (%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32)* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC2ERKNS_4NodeEi
@_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi = weak_odr hidden unnamed_addr alias void (%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32), void (%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32)* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC2EPKNS_4NodeEi
@_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_ = weak_odr hidden unnamed_addr alias void (%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"*), void (%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"*)* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC2ERKS4_
@_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.blink::PositionTemplate.606"*), void (%"class.blink::PositionTemplate.606"*)* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC2Ev
@_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1EPKNS_4NodeENS_18PositionAnchorTypeE = weak_odr hidden unnamed_addr alias void (%"class.blink::PositionTemplate.606"*, %"class.blink::Node"*, i32), void (%"class.blink::PositionTemplate.606"*, %"class.blink::Node"*, i32)* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC2EPKNS_4NodeENS_18PositionAnchorTypeE
@_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKNS_4NodeEi = weak_odr hidden unnamed_addr alias void (%"class.blink::PositionTemplate.606"*, %"class.blink::Node"*, i32), void (%"class.blink::PositionTemplate.606"*, %"class.blink::Node"*, i32)* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC2ERKNS_4NodeEi
@_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1EPKNS_4NodeEi = weak_odr hidden unnamed_addr alias void (%"class.blink::PositionTemplate.606"*, %"class.blink::Node"*, i32), void (%"class.blink::PositionTemplate.606"*, %"class.blink::Node"*, i32)* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC2EPKNS_4NodeEi
@_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_ = weak_odr hidden unnamed_addr alias void (%"class.blink::PositionTemplate.606"*, %"class.blink::PositionTemplate.606"*), void (%"class.blink::PositionTemplate.606"*, %"class.blink::PositionTemplate.606"*)* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC2ERKS4_

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEnwEm10NotNullTagPv(i64, i32, i8*) local_unnamed_addr #0 comdat align 2 {
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEnwEmPv(i64, i8*) local_unnamed_addr #0 comdat align 2 {
  ret i8* %1
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC2Ev(%"class.blink::PositionTemplate"*) unnamed_addr #0 comdat($_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC5Ev) align 2 {
  %2 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::TreeScope"* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CommonAncestorTreeScopeERKS4_S6_(%"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %48, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %48 [
    i32 3, label %12
    i32 0, label %12
    i32 1, label %9
    i32 2, label %9
  ]

9:                                                ; preds = %6, %6
  %10 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %4) #9
  %11 = icmp eq %"class.blink::ContainerNode"* %10, null
  br i1 %11, label %48, label %12

12:                                               ; preds = %6, %6, %9
  %13 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %48, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %48 [
    i32 3, label %22
    i32 0, label %22
    i32 1, label %19
    i32 2, label %19
  ]

19:                                               ; preds = %16, %16
  %20 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %14) #9
  %21 = icmp eq %"class.blink::ContainerNode"* %20, null
  br i1 %21, label %48, label %22

22:                                               ; preds = %16, %16, %19
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = load i32, i32* %7, align 4
  switch i32 %26, label %31 [
    i32 3, label %27
    i32 0, label %27
    i32 1, label %28
    i32 2, label %28
  ]

27:                                               ; preds = %25, %25
  br label %31

28:                                               ; preds = %25, %25
  %29 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %23) #9
  %30 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %29, i64 0, i32 0
  br label %31

31:                                               ; preds = %22, %25, %27, %28
  %32 = phi %"class.blink::Node"* [ %30, %28 ], [ %23, %27 ], [ null, %22 ], [ null, %25 ]
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %31
  %38 = load i32, i32* %17, align 4
  switch i32 %38, label %43 [
    i32 3, label %39
    i32 0, label %39
    i32 1, label %40
    i32 2, label %40
  ]

39:                                               ; preds = %37, %37
  br label %43

40:                                               ; preds = %37, %37
  %41 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %35) #9
  %42 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %41, i64 0, i32 0
  br label %43

43:                                               ; preds = %31, %37, %39, %40
  %44 = phi %"class.blink::Node"* [ %42, %40 ], [ %35, %39 ], [ null, %31 ], [ null, %37 ]
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %45, align 8
  %47 = tail call %"class.blink::TreeScope"* @_ZN5blink9TreeScope23CommonAncestorTreeScopeERS0_(%"class.blink::TreeScope"* %34, %"class.blink::TreeScope"* dereferenceable(104) %46) #9
  br label %48

48:                                               ; preds = %16, %12, %6, %2, %9, %19, %43
  %49 = phi %"class.blink::TreeScope"* [ %47, %43 ], [ null, %19 ], [ null, %9 ], [ null, %2 ], [ null, %6 ], [ null, %12 ], [ null, %16 ]
  ret %"class.blink::TreeScope"* %49
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %12 [
    i32 3, label %8
    i32 0, label %8
    i32 1, label %9
    i32 2, label %9
  ]

8:                                                ; preds = %5, %5
  br label %12

9:                                                ; preds = %5, %5
  %10 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %3) #9
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0
  br label %12

12:                                               ; preds = %1, %5, %9, %8
  %13 = phi %"class.blink::Node"* [ %11, %9 ], [ %3, %8 ], [ null, %1 ], [ null, %5 ]
  ret %"class.blink::Node"* %13
}

declare %"class.blink::TreeScope"* @_ZN5blink9TreeScope23CommonAncestorTreeScopeERS0_(%"class.blink::TreeScope"*, %"class.blink::TreeScope"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::Node"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"class.blink::Node"* %1, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 12
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %3, %5
  %11 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 %2, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %13, align 4
  br label %27

14:                                               ; preds = %5
  %15 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %1) #9
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store %"class.blink::Node"* %1, %"class.blink::Node"** %17, align 8, !alias.scope !2
  store i32 0, i32* %19, align 4, !alias.scope !2
  store i32 %2, i32* %18, align 8, !alias.scope !2
  br label %27

20:                                               ; preds = %14
  %21 = icmp eq i32 %2, 0
  %22 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  br i1 %21, label %25, label %26

25:                                               ; preds = %20
  store i32 1, i32* %24, align 4
  br label %27

26:                                               ; preds = %20
  store i32 2, i32* %24, align 4
  br label %27

27:                                               ; preds = %26, %25, %16, %10
  ret void
}

declare zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE33CreateWithoutValidationDeprecatedERKNS_4NodeEi(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8, !alias.scope !7
  store i32 0, i32* %6, align 4, !alias.scope !7
  store i32 %2, i32* %5, align 8, !alias.scope !7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC2EPKNS_4NodeENS_18PositionAnchorTypeE(%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32) unnamed_addr #0 comdat($_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC5EPKNS_4NodeENS_18PositionAnchorTypeE) align 2 {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 %2, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC2ERKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"* dereferenceable(64), i32) unnamed_addr #0 comdat($_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC5ERKNS_4NodeEi) align 2 {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC2EPKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32) unnamed_addr #0 comdat($_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC5EPKNS_4NodeEi) align 2 {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC2ERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #0 comdat($_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC5ERKS4_) align 2 {
  %3 = bitcast %"class.blink::PositionTemplate"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.blink::PositionTemplate"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CreateWithoutValidationERKNS_4NodeEi(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8
  store i32 0, i32* %6, align 4
  store i32 %2, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEcvbEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp ne %"class.blink::Node"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9IsNotNullEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp ne %"class.blink::Node"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10AnchorTypeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13IsAfterAnchorEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE15IsAfterChildrenEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 3
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE14IsBeforeAnchorEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16IsBeforeChildrenEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %14 [
    i32 1, label %4
    i32 0, label %10
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br label %14

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br label %14

14:                                               ; preds = %1, %10, %4
  %15 = phi i1 [ %9, %4 ], [ %13, %10 ], [ false, %1 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16IsOffsetInAnchorEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %124, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %124 [
    i32 3, label %8
    i32 0, label %54
    i32 1, label %119
    i32 2, label %121
  ]

8:                                                ; preds = %5
  %9 = bitcast %"class.blink::Node"* %3 to i1 (%"class.blink::Node"*)***
  %10 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %10, i64 41
  %12 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::Node"* nonnull %3) #9
  br i1 %13, label %14, label %46

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1
  %16 = bitcast %"class.blink::Node"* %15 to i8*
  %17 = load i8, i8* %16, align 8, !range !10
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %38, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 0, i32 0, i32 1
  %21 = bitcast %"class.blink::TraceWrapperV8Reference"* %20 to %"class.blink::ParkableStringImpl"**
  %22 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %21, align 8
  %23 = icmp eq %"class.blink::ParkableStringImpl"* %22, null
  br i1 %23, label %124, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %25, align 8
  %27 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %26, null
  br i1 %27, label %28, label %35

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %22, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %124, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  br label %124

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %26, i64 0, i32 8
  %37 = load i32, i32* %36, align 4
  br label %124

38:                                               ; preds = %14
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 1
  %40 = bitcast i32* %39 to %"class.WTF::StringImpl"**
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %124, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  br label %124

46:                                               ; preds = %8
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %124, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.blink::Node"* %3 to %"class.blink::ContainerNode"*
  %53 = tail call i32 @_ZNK5blink13ContainerNode13CountChildrenEv(%"class.blink::ContainerNode"* nonnull %52) #9
  br label %124

54:                                               ; preds = %5
  %55 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = bitcast %"class.blink::Node"* %3 to i1 (%"class.blink::Node"*)***
  %58 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %58, i64 41
  %60 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::Node"* nonnull %3) #9
  br i1 %61, label %62, label %98

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1
  %64 = bitcast %"class.blink::Node"* %63 to i8*
  %65 = load i8, i8* %64, align 8, !range !10
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %86, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 0, i32 0, i32 1
  %69 = bitcast %"class.blink::TraceWrapperV8Reference"* %68 to %"class.blink::ParkableStringImpl"**
  %70 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %69, align 8
  %71 = icmp eq %"class.blink::ParkableStringImpl"* %70, null
  br i1 %71, label %94, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0
  %74 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %73, align 8
  %75 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %74, null
  br i1 %75, label %76, label %83

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %70, i64 0, i32 1, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %94, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  br label %94

83:                                               ; preds = %72
  %84 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %74, i64 0, i32 8
  %85 = load i32, i32* %84, align 4
  br label %94

86:                                               ; preds = %62
  %87 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 1
  %88 = bitcast i32* %87 to %"class.WTF::StringImpl"**
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %86, %83, %80, %76, %67
  %95 = phi i32 [ 0, %67 ], [ %85, %83 ], [ %82, %80 ], [ 0, %76 ], [ %93, %91 ], [ 0, %86 ]
  %96 = icmp slt i32 %95, %56
  %97 = select i1 %96, i32 %95, i32 %56
  br label %124

98:                                               ; preds = %54
  %99 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %124, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1
  %105 = bitcast %"class.blink::Node"* %104 to %"class.blink::Node"**
  %106 = load %"class.blink::Node"*, %"class.blink::Node"** %105, align 8
  %107 = icmp ne %"class.blink::Node"* %106, null
  %108 = icmp sgt i32 %56, 0
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %124

110:                                              ; preds = %103, %110
  %111 = phi %"class.blink::Node"* [ %115, %110 ], [ %106, %103 ]
  %112 = phi i32 [ %113, %110 ], [ 0, %103 ]
  %113 = add nuw nsw i32 %112, 1
  %114 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %111, i64 0, i32 5, i32 0, i32 0
  %115 = load %"class.blink::Node"*, %"class.blink::Node"** %114, align 8
  %116 = icmp ne %"class.blink::Node"* %115, null
  %117 = icmp slt i32 %113, %56
  %118 = and i1 %117, %116
  br i1 %118, label %110, label %124

119:                                              ; preds = %5
  %120 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %3) #9
  br label %124

121:                                              ; preds = %5
  %122 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %3) #9
  %123 = add i32 %122, 1
  br label %124

124:                                              ; preds = %110, %1, %103, %98, %94, %51, %46, %43, %38, %35, %32, %28, %19, %5, %121, %119
  %125 = phi i32 [ %123, %121 ], [ %120, %119 ], [ 0, %1 ], [ 0, %5 ], [ %53, %51 ], [ 0, %46 ], [ 0, %38 ], [ %45, %43 ], [ 0, %28 ], [ %34, %32 ], [ %37, %35 ], [ 0, %19 ], [ %97, %94 ], [ 0, %103 ], [ 0, %98 ], [ %113, %110 ]
  ret i32 %125
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16LastOffsetInNodeERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::Node"* %0 to i1 (%"class.blink::Node"*)***
  %3 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %3, i64 41
  %5 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::Node"* %0) #9
  %7 = icmp eq %"class.blink::Node"* %0, null
  %8 = xor i1 %6, true
  %9 = or i1 %7, %8
  br i1 %9, label %42, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %12 = bitcast %"class.blink::Node"* %11 to i8*
  %13 = load i8, i8* %12, align 8, !range !10
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %34, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 0, i32 0, i32 1
  %17 = bitcast %"class.blink::TraceWrapperV8Reference"* %16 to %"class.blink::ParkableStringImpl"**
  %18 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %17, align 8
  %19 = icmp eq %"class.blink::ParkableStringImpl"* %18, null
  br i1 %19, label %51, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %21, align 8
  %23 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %22, null
  br i1 %23, label %24, label %31

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %18, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %51, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  br label %51

31:                                               ; preds = %20
  %32 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %22, i64 0, i32 8
  %33 = load i32, i32* %32, align 4
  br label %51

34:                                               ; preds = %10
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 1
  %36 = bitcast i32* %35 to %"class.WTF::StringImpl"**
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %51, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  br label %51

42:                                               ; preds = %1
  br i1 %7, label %51, label %43

43:                                               ; preds = %42
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::Node"* %0 to %"class.blink::ContainerNode"*
  %50 = tail call i32 @_ZNK5blink13ContainerNode13CountChildrenEv(%"class.blink::ContainerNode"* nonnull %49) #9
  br label %51

51:                                               ; preds = %39, %34, %31, %28, %24, %15, %48, %43, %42
  %52 = phi i32 [ %50, %48 ], [ 0, %42 ], [ 0, %43 ], [ 0, %34 ], [ %41, %39 ], [ 0, %24 ], [ %30, %28 ], [ %33, %31 ], [ 0, %15 ]
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #9
  br label %108

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %40

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = or i32 %14, 1
  %16 = icmp eq i32 %15, 3
  br i1 %16, label %40, label %17

17:                                               ; preds = %12
  %18 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %4) #9
  %19 = icmp eq %"class.blink::ContainerNode"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %17
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %22 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %21) #9
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %25 = tail call zeroext i1 @_ZN5blink20IsDisplayInsideTableEPKNS_4NodeE(%"class.blink::Node"* %24) #9
  br i1 %25, label %26, label %34

26:                                               ; preds = %23, %20
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %28 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %27) #9, !noalias !11
  %29 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %28, i64 0, i32 0
  %30 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* %27) #9, !noalias !11
  %31 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %29, %"class.blink::Node"** %31, align 8, !alias.scope !11
  %32 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 %30, i32* %32, align 8, !alias.scope !11
  %33 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %33, align 4, !alias.scope !11
  br label %108

34:                                               ; preds = %17, %23
  %35 = bitcast %"class.blink::PositionTemplate"* %1 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::PositionTemplate"* %0 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %39, align 4
  br label %108

40:                                               ; preds = %12, %8
  %41 = bitcast %"class.blink::Node"* %4 to i1 (%"class.blink::Node"*)***
  %42 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %42, i64 41
  %44 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::Node"* nonnull %4) #9
  br i1 %45, label %91, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = or i32 %48, 1
  %50 = icmp eq i32 %49, 3
  br i1 %50, label %66, label %51

51:                                               ; preds = %46
  %52 = load i32, i32* %9, align 8
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %63, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %55
  %61 = bitcast %"class.blink::Node"* %53 to %"class.blink::ContainerNode"*
  %62 = tail call i32 @_ZNK5blink13ContainerNode13CountChildrenEv(%"class.blink::ContainerNode"* nonnull %61) #9
  br label %63

63:                                               ; preds = %51, %55, %60
  %64 = phi i32 [ %62, %60 ], [ 0, %51 ], [ 0, %55 ]
  %65 = icmp eq i32 %52, %64
  br i1 %65, label %66, label %91

66:                                               ; preds = %63, %46
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %68 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %67) #9
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %71 = tail call zeroext i1 @_ZN5blink20IsDisplayInsideTableEPKNS_4NodeE(%"class.blink::Node"* %70) #9
  br i1 %71, label %72, label %91

72:                                               ; preds = %69, %66
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %74 = icmp eq %"class.blink::Node"* %73, null
  br i1 %74, label %102, label %75

75:                                               ; preds = %72
  %76 = load i32, i32* %47, align 4
  switch i32 %76, label %94 [
    i32 3, label %82
    i32 0, label %82
    i32 1, label %77
    i32 2, label %77
  ]

77:                                               ; preds = %75, %75
  %78 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %73) #9
  %79 = icmp eq %"class.blink::ContainerNode"* %78, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %77
  %81 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  br label %82

82:                                               ; preds = %80, %75, %75
  %83 = phi %"class.blink::Node"* [ %81, %80 ], [ %73, %75 ], [ %73, %75 ]
  %84 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %83) #9, !noalias !14
  %85 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %84, i64 0, i32 0
  %86 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* %83) #9, !noalias !14
  %87 = add i32 %86, 1
  %88 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %85, %"class.blink::Node"** %88, align 8, !alias.scope !14
  %89 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 %87, i32* %89, align 8, !alias.scope !14
  %90 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %90, align 4, !alias.scope !14
  br label %108

91:                                               ; preds = %77, %69, %63, %40
  %92 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %93 = icmp eq %"class.blink::Node"* %92, null
  br i1 %93, label %102, label %94

94:                                               ; preds = %75, %91
  %95 = phi %"class.blink::Node"* [ %92, %91 ], [ %73, %75 ]
  %96 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %97 = load i32, i32* %96, align 4
  switch i32 %97, label %102 [
    i32 3, label %98
    i32 0, label %98
    i32 1, label %99
    i32 2, label %99
  ]

98:                                               ; preds = %94, %94
  br label %102

99:                                               ; preds = %94, %94
  %100 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %95) #9
  %101 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %100, i64 0, i32 0
  br label %102

102:                                              ; preds = %72, %91, %94, %98, %99
  %103 = phi %"class.blink::Node"* [ %101, %99 ], [ %95, %98 ], [ null, %91 ], [ null, %94 ], [ null, %72 ]
  %104 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %1)
  %105 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %103, %"class.blink::Node"** %105, align 8
  %106 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 %104, i32* %106, align 8
  %107 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %107, align 4
  br label %108

108:                                              ; preds = %102, %82, %34, %26, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28IsAfterAnchorOrAfterChildrenEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = or i32 %3, 1
  %5 = icmp eq i32 %4, 3
  ret i1 %5
}

declare zeroext i1 @_ZN5blink20IsDisplayInsideTableEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #9
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %3, i64 0, i32 0
  %5 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* %1) #9
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 %5, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17InParentAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #9
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %3, i64 0, i32 0
  %5 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* %1) #9
  %6 = add i32 %5, 1
  %7 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 %6, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16ToOffsetInAnchorEv(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #9
  br label %21

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %15 [
    i32 3, label %11
    i32 0, label %11
    i32 1, label %12
    i32 2, label %12
  ]

11:                                               ; preds = %8, %8
  br label %15

12:                                               ; preds = %8, %8
  %13 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %4) #9
  %14 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %13, i64 0, i32 0
  br label %15

15:                                               ; preds = %8, %11, %12
  %16 = phi %"class.blink::Node"* [ %14, %12 ], [ %4, %11 ], [ null, %8 ]
  %17 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %1)
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %16, %"class.blink::Node"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 %17, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %20, align 4
  br label %21

21:                                               ; preds = %15, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE6IsNullEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE21OffsetInContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = or i32 %3, 1
  %5 = icmp eq i32 %4, 3
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = tail call i32 @_ZN5blink16EditingAlgorithmINS_13NodeTraversalEE20LastOffsetForEditingEPKNS_4NodeE(%"class.blink::Node"* %8) #9
  br label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ]
  ret i32 %14
}

declare i32 @_ZN5blink16EditingAlgorithmINS_13NodeTraversalEE20LastOffsetForEditingEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25ComputeNodeBeforePositionEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %52 [
    i32 3, label %8
    i32 0, label %17
    i32 1, label %48
    i32 2, label %51
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 0, i32 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.blink::Node"**
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  br label %52

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %52, label %21

21:                                               ; preds = %17
  %22 = add nsw i32 %19, -1
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %52, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1
  %29 = bitcast %"class.blink::Node"* %28 to %"class.blink::Node"**
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  %32 = icmp ne i32 %22, 0
  %33 = xor i1 %31, true
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %52

35:                                               ; preds = %27, %35
  %36 = phi i1 [ %44, %35 ], [ %31, %27 ]
  %37 = phi %"class.blink::Node"* [ %43, %35 ], [ %30, %27 ]
  %38 = phi i32 [ %41, %35 ], [ %22, %27 ]
  %39 = xor i1 %36, true
  %40 = zext i1 %39 to i32
  %41 = sub nuw i32 %38, %40
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %37, i64 0, i32 5, i32 0, i32 0
  %43 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %44 = icmp eq %"class.blink::Node"* %43, null
  %45 = icmp ne i32 %41, 0
  %46 = xor i1 %44, true
  %47 = and i1 %45, %46
  br i1 %47, label %35, label %52

48:                                               ; preds = %5
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 4, i32 0, i32 0
  %50 = load %"class.blink::Node"*, %"class.blink::Node"** %49, align 8
  br label %52

51:                                               ; preds = %5
  br label %52

52:                                               ; preds = %35, %1, %27, %21, %13, %8, %5, %17, %51, %48
  %53 = phi %"class.blink::Node"* [ %3, %51 ], [ %50, %48 ], [ null, %1 ], [ null, %17 ], [ null, %5 ], [ %16, %13 ], [ null, %8 ], [ %30, %27 ], [ null, %21 ], [ %43, %35 ]
  ret %"class.blink::Node"* %53
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ComputeNodeAfterPositionEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %40 [
    i32 2, label %37
    i32 0, label %8
    i32 1, label %36
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %40, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1
  %17 = bitcast %"class.blink::Node"* %16 to %"class.blink::Node"**
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  %20 = icmp ne i32 %10, 0
  %21 = xor i1 %19, true
  %22 = and i1 %20, %21
  br i1 %22, label %23, label %40

23:                                               ; preds = %15, %23
  %24 = phi i1 [ %32, %23 ], [ %19, %15 ]
  %25 = phi %"class.blink::Node"* [ %31, %23 ], [ %18, %15 ]
  %26 = phi i32 [ %29, %23 ], [ %10, %15 ]
  %27 = xor i1 %24, true
  %28 = zext i1 %27 to i32
  %29 = sub nuw i32 %26, %28
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 5, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  %33 = icmp ne i32 %29, 0
  %34 = xor i1 %32, true
  %35 = and i1 %33, %34
  br i1 %35, label %23, label %40

36:                                               ; preds = %5
  br label %40

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 5, i32 0, i32 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  br label %40

40:                                               ; preds = %23, %1, %15, %8, %5, %37, %36
  %41 = phi %"class.blink::Node"* [ %39, %37 ], [ %3, %36 ], [ null, %1 ], [ null, %5 ], [ %18, %15 ], [ null, %8 ], [ %31, %23 ]
  ret %"class.blink::Node"* %41
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20NodeAsRangeFirstNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::PositionTemplate", align 8
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %71, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  switch i32 %8, label %16 [
    i32 3, label %12
    i32 2, label %13
    i32 1, label %13
  ]

12:                                               ; preds = %10
  br label %16

13:                                               ; preds = %10, %10
  %14 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %4) #9, !noalias !17
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0
  br label %16

16:                                               ; preds = %10, %12, %13
  %17 = phi %"class.blink::Node"* [ %15, %13 ], [ %4, %12 ], [ null, %10 ]
  %18 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %0) #9, !noalias !17
  %19 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %17, %"class.blink::Node"** %19, align 8, !alias.scope !17
  %20 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  store i32 %18, i32* %20, align 8, !alias.scope !17
  %21 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 2
  store i32 0, i32* %21, align 4, !alias.scope !17
  %22 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20NodeAsRangeFirstNodeEv(%"class.blink::PositionTemplate"* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  br label %71

23:                                               ; preds = %6
  %24 = bitcast %"class.blink::Node"* %4 to i1 (%"class.blink::Node"*)***
  %25 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %25, i64 41
  %27 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Node"* nonnull %4) #9
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  br i1 %28, label %71, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq %"class.blink::Node"* %29, null
  br i1 %33, label %63, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %63, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 1
  %41 = bitcast %"class.blink::Node"* %40 to %"class.blink::Node"**
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %41, align 8
  %43 = icmp eq %"class.blink::Node"* %42, null
  %44 = icmp ne i32 %32, 0
  %45 = xor i1 %43, true
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %60

47:                                               ; preds = %39, %47
  %48 = phi i1 [ %56, %47 ], [ %43, %39 ]
  %49 = phi %"class.blink::Node"* [ %55, %47 ], [ %42, %39 ]
  %50 = phi i32 [ %53, %47 ], [ %32, %39 ]
  %51 = xor i1 %48, true
  %52 = zext i1 %51 to i32
  %53 = sub nuw i32 %50, %52
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 0, i32 5, i32 0, i32 0
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %56 = icmp eq %"class.blink::Node"* %55, null
  %57 = icmp ne i32 %53, 0
  %58 = xor i1 %56, true
  %59 = and i1 %57, %58
  br i1 %59, label %47, label %60

60:                                               ; preds = %47, %39
  %61 = phi %"class.blink::Node"* [ %42, %39 ], [ %55, %47 ]
  %62 = icmp eq %"class.blink::Node"* %61, null
  br i1 %62, label %63, label %71

63:                                               ; preds = %34, %30, %60
  %64 = icmp eq i32 %32, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 0, i32 5, i32 0, i32 0
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %66, align 8
  %68 = icmp eq %"class.blink::Node"* %67, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %29) #9
  br label %71

71:                                               ; preds = %1, %23, %69, %65, %63, %60, %16
  %72 = phi %"class.blink::Node"* [ %61, %60 ], [ %22, %16 ], [ null, %1 ], [ %29, %63 ], [ %70, %69 ], [ %67, %65 ], [ %29, %23 ]
  ret %"class.blink::Node"* %72
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19NodeAsRangeLastNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23NodeAsRangePastLastNodeEv(%"class.blink::PositionTemplate"* %0)
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %6, %"class.blink::Node"* null) #9
  br label %23

10:                                               ; preds = %5
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  switch i32 %15, label %20 [
    i32 3, label %16
    i32 0, label %16
    i32 1, label %17
    i32 2, label %17
  ]

16:                                               ; preds = %13, %13
  br label %20

17:                                               ; preds = %13, %13
  %18 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %11) #9
  %19 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %18, i64 0, i32 0
  br label %20

20:                                               ; preds = %10, %13, %16, %17
  %21 = phi %"class.blink::Node"* [ %19, %17 ], [ %11, %16 ], [ null, %10 ], [ null, %13 ]
  %22 = tail call dereferenceable(64) %"class.blink::Node"* @_ZN5blink13NodeTraversal16LastWithinOrSelfERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %21) #9
  br label %23

23:                                               ; preds = %8, %1, %20
  %24 = phi %"class.blink::Node"* [ %22, %20 ], [ %9, %8 ], [ null, %1 ]
  ret %"class.blink::Node"* %24
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23NodeAsRangePastLastNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::PositionTemplate", align 8
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %75, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  switch i32 %8, label %16 [
    i32 3, label %12
    i32 2, label %13
    i32 1, label %13
  ]

12:                                               ; preds = %10
  br label %16

13:                                               ; preds = %10, %10
  %14 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %4) #9, !noalias !20
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0
  br label %16

16:                                               ; preds = %10, %12, %13
  %17 = phi %"class.blink::Node"* [ %15, %13 ], [ %4, %12 ], [ null, %10 ]
  %18 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %0) #9, !noalias !20
  %19 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %17, %"class.blink::Node"** %19, align 8, !alias.scope !20
  %20 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  store i32 %18, i32* %20, align 8, !alias.scope !20
  %21 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 2
  store i32 0, i32* %21, align 4, !alias.scope !20
  %22 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23NodeAsRangePastLastNodeEv(%"class.blink::PositionTemplate"* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  br label %75

23:                                               ; preds = %6
  %24 = bitcast %"class.blink::Node"* %4 to i1 (%"class.blink::Node"*)***
  %25 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %25, i64 41
  %27 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Node"* nonnull %4) #9
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  br i1 %28, label %30, label %36

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 0, i32 5, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %34, label %75

34:                                               ; preds = %30
  %35 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %29) #9
  br label %75

36:                                               ; preds = %23
  %37 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq %"class.blink::Node"* %29, null
  br i1 %39, label %69, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %69, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 1
  %47 = bitcast %"class.blink::Node"* %46 to %"class.blink::Node"**
  %48 = load %"class.blink::Node"*, %"class.blink::Node"** %47, align 8
  %49 = icmp eq %"class.blink::Node"* %48, null
  %50 = icmp ne i32 %38, 0
  %51 = xor i1 %49, true
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %66

53:                                               ; preds = %45, %53
  %54 = phi i1 [ %62, %53 ], [ %49, %45 ]
  %55 = phi %"class.blink::Node"* [ %61, %53 ], [ %48, %45 ]
  %56 = phi i32 [ %59, %53 ], [ %38, %45 ]
  %57 = xor i1 %54, true
  %58 = zext i1 %57 to i32
  %59 = sub nuw i32 %56, %58
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %55, i64 0, i32 5, i32 0, i32 0
  %61 = load %"class.blink::Node"*, %"class.blink::Node"** %60, align 8
  %62 = icmp eq %"class.blink::Node"* %61, null
  %63 = icmp ne i32 %59, 0
  %64 = xor i1 %62, true
  %65 = and i1 %63, %64
  br i1 %65, label %53, label %66

66:                                               ; preds = %53, %45
  %67 = phi %"class.blink::Node"* [ %48, %45 ], [ %61, %53 ]
  %68 = icmp eq %"class.blink::Node"* %67, null
  br i1 %68, label %69, label %75

69:                                               ; preds = %40, %36, %66
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 0, i32 5, i32 0, i32 0
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %29) #9
  br label %75

75:                                               ; preds = %1, %73, %69, %34, %30, %66, %16
  %76 = phi %"class.blink::Node"* [ %67, %66 ], [ %22, %16 ], [ null, %1 ], [ %35, %34 ], [ %32, %30 ], [ %74, %73 ], [ %71, %69 ]
  ret %"class.blink::Node"* %76
}

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

declare dereferenceable(64) %"class.blink::Node"* @_ZN5blink13NodeTraversal16LastWithinOrSelfERNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CommonAncestorContainerERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %13 [
    i32 3, label %9
    i32 0, label %9
    i32 1, label %10
    i32 2, label %10
  ]

9:                                                ; preds = %6, %6
  br label %13

10:                                               ; preds = %6, %6
  %11 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %4) #9
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %11, i64 0, i32 0
  br label %13

13:                                               ; preds = %2, %6, %9, %10
  %14 = phi %"class.blink::Node"* [ %12, %10 ], [ %4, %9 ], [ null, %2 ], [ null, %6 ]
  %15 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  switch i32 %20, label %25 [
    i32 3, label %21
    i32 0, label %21
    i32 1, label %22
    i32 2, label %22
  ]

21:                                               ; preds = %18, %18
  br label %25

22:                                               ; preds = %18, %18
  %23 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %16) #9
  %24 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %23, i64 0, i32 0
  br label %25

25:                                               ; preds = %13, %18, %21, %22
  %26 = phi %"class.blink::Node"* [ %24, %22 ], [ %16, %21 ], [ null, %13 ], [ null, %18 ]
  %27 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64) %14, %"class.blink::Node"* dereferenceable(64) %26) #9
  ret %"class.blink::Node"* %27
}

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10AnchorNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  ret %"class.blink::Node"* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Document"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11GetDocumentEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %"class.blink::Document"* [ %9, %5 ], [ null, %1 ]
  ret %"class.blink::Document"* %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 256
  %9 = icmp ne i32 %8, 0
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i1 [ false, %1 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10IsValidForERKNS_8DocumentE(%"class.blink::PositionTemplate"*, %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %71, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = icmp eq %"class.blink::Document"* %10, %1
  br i1 %11, label %12, label %71

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 256
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %71, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %71

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = bitcast %"class.blink::Node"* %4 to i1 (%"class.blink::Node"*)***
  %25 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %25, i64 41
  %27 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Node"* nonnull %4) #9
  br i1 %28, label %29, label %61

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1
  %31 = bitcast %"class.blink::Node"* %30 to i8*
  %32 = load i8, i8* %31, align 8, !range !10
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %53, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 0, i32 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.blink::ParkableStringImpl"**
  %37 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %36, align 8
  %38 = icmp eq %"class.blink::ParkableStringImpl"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0
  %41 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %40, align 8
  %42 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %37, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %68, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  br label %68

50:                                               ; preds = %39
  %51 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %41, i64 0, i32 8
  %52 = load i32, i32* %51, align 4
  br label %68

53:                                               ; preds = %29
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 1
  %55 = bitcast i32* %54 to %"class.WTF::StringImpl"**
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %68, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  br label %68

61:                                               ; preds = %21
  %62 = load i32, i32* %13, align 8
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %61
  %66 = bitcast %"class.blink::Node"* %4 to %"class.blink::ContainerNode"*
  %67 = tail call i32 @_ZNK5blink13ContainerNode13CountChildrenEv(%"class.blink::ContainerNode"* nonnull %66) #9
  br label %68

68:                                               ; preds = %34, %43, %47, %50, %53, %58, %61, %65
  %69 = phi i32 [ %67, %65 ], [ 0, %61 ], [ 0, %53 ], [ %60, %58 ], [ 0, %43 ], [ %49, %47 ], [ %52, %50 ], [ 0, %34 ]
  %70 = icmp sle i32 %23, %69
  br label %71

71:                                               ; preds = %12, %6, %17, %68, %2
  %72 = phi i1 [ true, %2 ], [ false, %6 ], [ false, %12 ], [ true, %17 ], [ %70, %68 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE8IsOrphanEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 256
  %9 = icmp eq i32 %8, 0
  br label %10

10:                                               ; preds = %5, %1
  %11 = phi i1 [ false, %1 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden signext i16 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9CompareToERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* dereferenceable(16) %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  ret i16 %3
}

declare signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEltERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* dereferenceable(16) %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  %4 = icmp slt i16 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEleERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* dereferenceable(16) %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  %4 = icmp slt i16 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEgtERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* dereferenceable(16) %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  %4 = icmp sgt i16 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEgeERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* dereferenceable(16) %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  %4 = icmp sgt i16 %3, -1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE12IsEquivalentERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br label %58

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %4, %18
  br i1 %19, label %20, label %58

20:                                               ; preds = %16
  %21 = icmp eq i32 %12, 0
  br i1 %21, label %22, label %58

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br label %58

28:                                               ; preds = %10
  switch i32 %12, label %33 [
    i32 3, label %29
    i32 0, label %29
    i32 1, label %30
    i32 2, label %30
  ]

29:                                               ; preds = %28, %28
  br label %33

30:                                               ; preds = %28, %28
  %31 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %4) #9, !noalias !23
  %32 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %31, i64 0, i32 0
  br label %33

33:                                               ; preds = %28, %29, %30
  %34 = phi %"class.blink::Node"* [ %32, %30 ], [ %4, %29 ], [ null, %28 ]
  %35 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %0) #9, !noalias !23
  %36 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8, !noalias !26
  %38 = icmp eq %"class.blink::Node"* %37, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %33
  %40 = load i32, i32* %13, align 4, !noalias !26
  switch i32 %40, label %45 [
    i32 3, label %41
    i32 0, label %41
    i32 1, label %42
    i32 2, label %42
  ]

41:                                               ; preds = %39, %39
  br label %45

42:                                               ; preds = %39, %39
  %43 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %37) #9, !noalias !26
  %44 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %43, i64 0, i32 0
  br label %45

45:                                               ; preds = %42, %41, %39
  %46 = phi %"class.blink::Node"* [ %44, %42 ], [ %37, %41 ], [ null, %39 ]
  %47 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9, !noalias !26
  br label %48

48:                                               ; preds = %33, %45
  %49 = phi %"class.blink::Node"* [ %46, %45 ], [ null, %33 ]
  %50 = phi i32 [ %47, %45 ], [ 0, %33 ]
  %51 = icmp eq %"class.blink::Node"* %34, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = icmp eq %"class.blink::Node"* %49, null
  br label %58

54:                                               ; preds = %48
  %55 = icmp eq %"class.blink::Node"* %34, %49
  %56 = icmp eq i32 %35, %50
  %57 = and i1 %55, %56
  ret i1 %57

58:                                               ; preds = %52, %22, %20, %16, %6
  %59 = phi i1 [ %9, %6 ], [ %27, %22 ], [ false, %16 ], [ true, %20 ], [ %53, %52 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE29AtFirstEditingPositionForNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %15 [
    i32 0, label %8
    i32 1, label %16
    i32 3, label %12
    i32 2, label %12
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br label %16

12:                                               ; preds = %5, %5
  %13 = tail call i32 @_ZN5blink16EditingAlgorithmINS_13NodeTraversalEE20LastOffsetForEditingEPKNS_4NodeE(%"class.blink::Node"* nonnull %3) #9
  %14 = icmp eq i32 %13, 0
  br label %16

15:                                               ; preds = %5
  br label %16

16:                                               ; preds = %5, %1, %15, %12, %8
  %17 = phi i1 [ false, %15 ], [ %14, %12 ], [ %11, %8 ], [ true, %1 ], [ true, %5 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28AtLastEditingPositionForNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = or i32 %7, 1
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = tail call i32 @_ZN5blink16EditingAlgorithmINS_13NodeTraversalEE20LastOffsetForEditingEPKNS_4NodeE(%"class.blink::Node"* nonnull %3) #9
  %14 = icmp sge i32 %12, %13
  br label %15

15:                                               ; preds = %5, %10, %1
  %16 = phi i1 [ true, %1 ], [ true, %5 ], [ %14, %10 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13AtStartOfTreeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %3) #9
  %7 = icmp eq %"class.blink::ContainerNode"* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br label %12

12:                                               ; preds = %8, %5, %1
  %13 = phi i1 [ true, %1 ], [ false, %5 ], [ %11, %8 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11AtEndOfTreeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %3) #9
  %7 = icmp eq %"class.blink::ContainerNode"* %6, null
  br i1 %7, label %8, label %14

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %12 = tail call i32 @_ZN5blink16EditingAlgorithmINS_13NodeTraversalEE20LastOffsetForEditingEPKNS_4NodeE(%"class.blink::Node"* %11) #9
  %13 = icmp sge i32 %10, %12
  br label %14

14:                                               ; preds = %8, %5, %1
  %15 = phi i1 [ true, %1 ], [ false, %5 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 1, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 2, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 12
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %7, label %56

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::Node"* %1 to i1 (%"class.blink::Node"*)***
  %9 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %9, i64 41
  %11 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::Node"* %1) #9
  %13 = icmp eq %"class.blink::Node"* %1, null
  %14 = xor i1 %12, true
  %15 = or i1 %13, %14
  br i1 %15, label %48, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %18 = bitcast %"class.blink::Node"* %17 to i8*
  %19 = load i8, i8* %18, align 8, !range !10
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %40, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 0, i32 0, i32 1
  %23 = bitcast %"class.blink::TraceWrapperV8Reference"* %22 to %"class.blink::ParkableStringImpl"**
  %24 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %23, align 8
  %25 = icmp eq %"class.blink::ParkableStringImpl"* %24, null
  br i1 %25, label %56, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %27, align 8
  %29 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %28, null
  br i1 %29, label %30, label %37

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %24, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %56, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  br label %56

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %28, i64 0, i32 8
  %39 = load i32, i32* %38, align 4
  br label %56

40:                                               ; preds = %16
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 1
  %42 = bitcast i32* %41 to %"class.WTF::StringImpl"**
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %56, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  br label %56

48:                                               ; preds = %7
  br i1 %13, label %56, label %49

49:                                               ; preds = %48
  %50 = load i32, i32* %3, align 8
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.blink::Node"* %1 to %"class.blink::ContainerNode"*
  %55 = tail call i32 @_ZNK5blink13ContainerNode13CountChildrenEv(%"class.blink::ContainerNode"* nonnull %54) #9
  br label %56

56:                                               ; preds = %2, %53, %49, %48, %45, %40, %37, %34, %30, %21
  %57 = phi i32 [ %55, %53 ], [ 0, %48 ], [ 0, %49 ], [ 0, %40 ], [ %47, %45 ], [ 0, %30 ], [ %36, %34 ], [ %39, %37 ], [ 0, %21 ], [ 0, %2 ]
  %58 = phi i32 [ 0, %53 ], [ 0, %48 ], [ 0, %49 ], [ 0, %40 ], [ 0, %45 ], [ 0, %30 ], [ 0, %34 ], [ 0, %37 ], [ 0, %21 ], [ 3, %2 ]
  %59 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %59, align 8
  %60 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 %57, i32* %60, align 8
  %61 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 %58, i32* %61, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1) #9
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %7 = zext i1 %3 to i32
  store i32 %7, i32* %6, align 4, !alias.scope !29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1) #9
  br i1 %3, label %58, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8, !noalias !34
  %7 = and i32 %6, 12
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %9, label %58

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::Node"* %1 to i1 (%"class.blink::Node"*)***
  %11 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %10, align 8, !noalias !34
  %12 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %11, i64 41
  %13 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %12, align 8, !noalias !34
  %14 = tail call zeroext i1 %13(%"class.blink::Node"* %1) #9, !noalias !34
  %15 = icmp eq %"class.blink::Node"* %1, null
  %16 = xor i1 %14, true
  %17 = or i1 %15, %16
  br i1 %17, label %50, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %20 = bitcast %"class.blink::Node"* %19 to i8*
  %21 = load i8, i8* %20, align 8, !range !10, !noalias !34
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 0, i32 0, i32 1
  %25 = bitcast %"class.blink::TraceWrapperV8Reference"* %24 to %"class.blink::ParkableStringImpl"**
  %26 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %25, align 8, !noalias !34
  %27 = icmp eq %"class.blink::ParkableStringImpl"* %26, null
  br i1 %27, label %58, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %29, align 8, !noalias !34
  %31 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %30, null
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8, !noalias !34
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %58, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %38 = load i32, i32* %37, align 4, !noalias !34
  br label %58

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %30, i64 0, i32 8
  %41 = load i32, i32* %40, align 4, !noalias !34
  br label %58

42:                                               ; preds = %18
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 1
  %44 = bitcast i32* %43 to %"class.WTF::StringImpl"**
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8, !noalias !34
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %58, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 1
  %49 = load i32, i32* %48, align 4, !noalias !34
  br label %58

50:                                               ; preds = %9
  br i1 %15, label %58, label %51

51:                                               ; preds = %50
  %52 = load i32, i32* %5, align 8, !noalias !34
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.blink::Node"* %1 to %"class.blink::ContainerNode"*
  %57 = tail call i32 @_ZNK5blink13ContainerNode13CountChildrenEv(%"class.blink::ContainerNode"* nonnull %56) #9, !noalias !34
  br label %58

58:                                               ; preds = %4, %23, %32, %36, %39, %42, %47, %50, %51, %55, %2
  %59 = phi i32 [ 0, %2 ], [ %57, %55 ], [ 0, %50 ], [ 0, %51 ], [ 0, %42 ], [ %49, %47 ], [ 0, %32 ], [ %38, %36 ], [ %41, %39 ], [ 0, %23 ], [ 0, %4 ]
  %60 = phi i32 [ 2, %2 ], [ 0, %55 ], [ 0, %50 ], [ 0, %51 ], [ 0, %42 ], [ 0, %47 ], [ 0, %32 ], [ 0, %36 ], [ 0, %39 ], [ 0, %23 ], [ 3, %4 ]
  %61 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %61, align 8, !alias.scope !37
  %62 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 %59, i32* %62, align 8, !alias.scope !37
  %63 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 %60, i32* %63, align 4, !alias.scope !37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27ToAnchorTypeAndOffsetStringEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %96 [
    i32 0, label %9
    i32 3, label %93
    i32 1, label %94
    i32 2, label %95
  ]

9:                                                ; preds = %1
  %10 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %13 = bitcast %union.anon* %12 to i8*
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %15, align 4
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %16, align 1
  %17 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #9
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 15, i32* %21, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #9
  %22 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 12
  %26 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 2
  %27 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 3
  %28 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 13
  %29 = icmp slt i32 %23, 0
  %30 = sub i32 0, %23
  %31 = select i1 %29, i32 %30, i32 %23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false) #9
  store i8* %25, i8** %26, align 8
  %32 = urem i32 %31, 10
  %33 = udiv i32 %31, 10
  %34 = trunc i32 %32 to i8
  %35 = or i8 %34, 48
  store i8 %35, i8* %25, align 4
  %36 = icmp ugt i32 %31, 9
  br i1 %36, label %37, label %59

37:                                               ; preds = %9
  %38 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 11
  store i8* %38, i8** %26, align 8
  %39 = urem i32 %33, 10
  %40 = trunc i32 %39 to i8
  %41 = or i8 %40, 48
  store i8 %41, i8* %38, align 1
  %42 = icmp ugt i32 %31, 99
  br i1 %42, label %43, label %59

43:                                               ; preds = %37
  %44 = udiv i32 %31, 100
  %45 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 10
  store i8* %45, i8** %26, align 8
  %46 = urem i32 %44, 10
  %47 = trunc i32 %46 to i8
  %48 = or i8 %47, 48
  store i8 %48, i8* %45, align 2
  %49 = icmp ugt i32 %31, 999
  br i1 %49, label %50, label %59

50:                                               ; preds = %43, %50
  %51 = phi i32 [ %53, %50 ], [ %44, %43 ]
  %52 = load i8*, i8** %26, align 8
  %53 = udiv i32 %51, 10
  %54 = getelementptr inbounds i8, i8* %52, i64 -1
  store i8* %54, i8** %26, align 8
  %55 = urem i32 %53, 10
  %56 = trunc i32 %55 to i8
  %57 = or i8 %56, 48
  store i8 %57, i8* %54, align 1
  %58 = icmp ugt i32 %51, 99
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %43, %37, %9
  br i1 %29, label %60, label %63

60:                                               ; preds = %59
  %61 = load i8*, i8** %26, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 -1
  store i8* %62, i8** %26, align 8
  store i8 45, i8* %62, align 1
  br label %63

63:                                               ; preds = %59, %60
  %64 = bitcast i8** %26 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = ptrtoint i8* %28 to i64
  %67 = sub i64 %66, %65
  %68 = trunc i64 %67 to i32
  store i32 %68, i32* %27, align 8
  %69 = inttoptr i64 %65 to i8*
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %4, i8* %69, i32 %68) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #9
  %70 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #9
  %71 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %72 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8** %73, align 8
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 1, i32* %74, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #9
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #9
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %76, align 8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #9
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %63
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #9
  br label %92

92:                                               ; preds = %63, %88, %91
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #9
  br label %119

93:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13) #9
  br label %119

94:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i64 12) #9
  br label %119

95:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i64 11) #9
  br label %119

96:                                               ; preds = %1
  %97 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %100, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %101, label %119, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %119

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i33
  %111 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %110, i33 1) #9
  %112 = extractvalue { i33, i1 } %111, 1
  %113 = extractvalue { i33, i1 } %111, 0
  %114 = icmp slt i33 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %117, !prof !40

116:                                              ; preds = %107
  tail call void @llvm.trap() #9
  unreachable

117:                                              ; preds = %107
  %118 = trunc i33 %113 to i32
  store i32 %118, i32* %108, align 4
  br label %119

119:                                              ; preds = %117, %102, %96, %95, %94, %93, %92
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  ret %"class.WTF::StringImpl"* %121
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !10
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #9
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !40

46:                                               ; preds = %37
  tail call void @llvm.trap() #9
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #9
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #9
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #9
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5TraceEPNS_7VisitorE(%"class.blink::PositionTemplate"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::PositionTemplate"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #9
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEnwEm10NotNullTagPv(i64, i32, i8*) local_unnamed_addr #0 comdat align 2 {
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEnwEmPv(i64, i8*) local_unnamed_addr #0 comdat align 2 {
  ret i8* %1
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC2Ev(%"class.blink::PositionTemplate.606"*) unnamed_addr #0 comdat($_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC5Ev) align 2 {
  %2 = bitcast %"class.blink::PositionTemplate.606"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::TreeScope"* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE23CommonAncestorTreeScopeERKS4_S6_(%"class.blink::PositionTemplate.606"* dereferenceable(16), %"class.blink::PositionTemplate.606"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %48, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %48 [
    i32 3, label %12
    i32 0, label %12
    i32 1, label %9
    i32 2, label %9
  ]

9:                                                ; preds = %6, %6
  %10 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %4) #9
  %11 = icmp eq %"class.blink::ContainerNode"* %10, null
  br i1 %11, label %48, label %12

12:                                               ; preds = %6, %6, %9
  %13 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %48, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %48 [
    i32 3, label %22
    i32 0, label %22
    i32 1, label %19
    i32 2, label %19
  ]

19:                                               ; preds = %16, %16
  %20 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %14) #9
  %21 = icmp eq %"class.blink::ContainerNode"* %20, null
  br i1 %21, label %48, label %22

22:                                               ; preds = %16, %16, %19
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = load i32, i32* %7, align 4
  switch i32 %26, label %31 [
    i32 3, label %27
    i32 0, label %27
    i32 1, label %28
    i32 2, label %28
  ]

27:                                               ; preds = %25, %25
  br label %31

28:                                               ; preds = %25, %25
  %29 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %23) #9
  %30 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %29, i64 0, i32 0
  br label %31

31:                                               ; preds = %22, %25, %27, %28
  %32 = phi %"class.blink::Node"* [ %30, %28 ], [ %23, %27 ], [ null, %22 ], [ null, %25 ]
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %31
  %38 = load i32, i32* %17, align 4
  switch i32 %38, label %43 [
    i32 3, label %39
    i32 0, label %39
    i32 1, label %40
    i32 2, label %40
  ]

39:                                               ; preds = %37, %37
  br label %43

40:                                               ; preds = %37, %37
  %41 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %35) #9
  %42 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %41, i64 0, i32 0
  br label %43

43:                                               ; preds = %31, %37, %39, %40
  %44 = phi %"class.blink::Node"* [ %42, %40 ], [ %35, %39 ], [ null, %31 ], [ null, %37 ]
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %45, align 8
  %47 = tail call %"class.blink::TreeScope"* @_ZN5blink9TreeScope23CommonAncestorTreeScopeERS0_(%"class.blink::TreeScope"* %34, %"class.blink::TreeScope"* dereferenceable(104) %46) #9
  br label %48

48:                                               ; preds = %16, %12, %6, %2, %9, %19, %43
  %49 = phi %"class.blink::TreeScope"* [ %47, %43 ], [ null, %19 ], [ null, %9 ], [ null, %2 ], [ null, %6 ], [ null, %12 ], [ null, %16 ]
  ret %"class.blink::TreeScope"* %49
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %12 [
    i32 3, label %8
    i32 0, label %8
    i32 1, label %9
    i32 2, label %9
  ]

8:                                                ; preds = %5, %5
  br label %12

9:                                                ; preds = %5, %5
  %10 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %3) #9
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0
  br label %12

12:                                               ; preds = %1, %5, %9, %8
  %13 = phi %"class.blink::Node"* [ %11, %9 ], [ %3, %8 ], [ null, %1 ], [ null, %5 ]
  ret %"class.blink::Node"* %13
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi(%"class.blink::PositionTemplate.606"* noalias sret, %"class.blink::Node"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"class.blink::Node"* %1, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 12
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %3, %5
  %11 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %2, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %13, align 4
  br label %27

14:                                               ; preds = %5
  %15 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %1) #9
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store %"class.blink::Node"* %1, %"class.blink::Node"** %17, align 8, !alias.scope !41
  store i32 0, i32* %19, align 4, !alias.scope !41
  store i32 %2, i32* %18, align 8, !alias.scope !41
  br label %27

20:                                               ; preds = %14
  %21 = icmp eq i32 %2, 0
  %22 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  br i1 %21, label %25, label %26

25:                                               ; preds = %20
  store i32 1, i32* %24, align 4
  br label %27

26:                                               ; preds = %20
  store i32 2, i32* %24, align 4
  br label %27

27:                                               ; preds = %26, %25, %16, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE33CreateWithoutValidationDeprecatedERKNS_4NodeEi(%"class.blink::PositionTemplate.606"* noalias sret, %"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8, !alias.scope !46
  store i32 0, i32* %6, align 4, !alias.scope !46
  store i32 %2, i32* %5, align 8, !alias.scope !46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC2EPKNS_4NodeENS_18PositionAnchorTypeE(%"class.blink::PositionTemplate.606"*, %"class.blink::Node"*, i32) unnamed_addr #0 comdat($_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC5EPKNS_4NodeENS_18PositionAnchorTypeE) align 2 {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 %2, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC2ERKNS_4NodeEi(%"class.blink::PositionTemplate.606"*, %"class.blink::Node"* dereferenceable(64), i32) unnamed_addr #0 comdat($_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC5ERKNS_4NodeEi) align 2 {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC2EPKNS_4NodeEi(%"class.blink::PositionTemplate.606"*, %"class.blink::Node"*, i32) unnamed_addr #0 comdat($_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC5EPKNS_4NodeEi) align 2 {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC2ERKS4_(%"class.blink::PositionTemplate.606"*, %"class.blink::PositionTemplate.606"* dereferenceable(16)) unnamed_addr #0 comdat($_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC5ERKS4_) align 2 {
  %3 = bitcast %"class.blink::PositionTemplate.606"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.blink::PositionTemplate.606"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE23CreateWithoutValidationERKNS_4NodeEi(%"class.blink::PositionTemplate.606"* noalias sret, %"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8
  store i32 0, i32* %6, align 4
  store i32 %2, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEcvbEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp ne %"class.blink::Node"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9IsNotNullEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp ne %"class.blink::Node"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE10AnchorTypeEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13IsAfterAnchorEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE15IsAfterChildrenEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 3
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE14IsBeforeAnchorEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16IsBeforeChildrenEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %13 [
    i32 1, label %4
    i32 0, label %9
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %6, i32 1) #9
  %8 = icmp eq %"class.blink::Node"* %7, null
  br label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br label %13

13:                                               ; preds = %1, %9, %4
  %14 = phi i1 [ %8, %4 ], [ %12, %9 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16IsOffsetInAnchorEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %110, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %110 [
    i32 3, label %8
    i32 0, label %48
    i32 1, label %105
    i32 2, label %107
  ]

8:                                                ; preds = %5
  %9 = bitcast %"class.blink::Node"* %3 to i1 (%"class.blink::Node"*)***
  %10 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %10, i64 41
  %12 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::Node"* nonnull %3) #9
  br i1 %13, label %14, label %46

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1
  %16 = bitcast %"class.blink::Node"* %15 to i8*
  %17 = load i8, i8* %16, align 8, !range !10
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %38, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 0, i32 0, i32 1
  %21 = bitcast %"class.blink::TraceWrapperV8Reference"* %20 to %"class.blink::ParkableStringImpl"**
  %22 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %21, align 8
  %23 = icmp eq %"class.blink::ParkableStringImpl"* %22, null
  br i1 %23, label %110, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %25, align 8
  %27 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %26, null
  br i1 %27, label %28, label %35

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %22, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %110, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  br label %110

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %26, i64 0, i32 8
  %37 = load i32, i32* %36, align 4
  br label %110

38:                                               ; preds = %14
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 1
  %40 = bitcast i32* %39 to %"class.WTF::StringImpl"**
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %110, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  br label %110

46:                                               ; preds = %8
  %47 = tail call i32 @_ZN5blink17FlatTreeTraversal13CountChildrenERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %3) #9
  br label %110

48:                                               ; preds = %5
  %49 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = bitcast %"class.blink::Node"* %3 to i1 (%"class.blink::Node"*)***
  %52 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %52, i64 41
  %54 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::Node"* nonnull %3) #9
  br i1 %55, label %56, label %92

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1
  %58 = bitcast %"class.blink::Node"* %57 to i8*
  %59 = load i8, i8* %58, align 8, !range !10
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %80, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 0, i32 0, i32 1
  %63 = bitcast %"class.blink::TraceWrapperV8Reference"* %62 to %"class.blink::ParkableStringImpl"**
  %64 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %63, align 8
  %65 = icmp eq %"class.blink::ParkableStringImpl"* %64, null
  br i1 %65, label %88, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0
  %68 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %67, align 8
  %69 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %68, null
  br i1 %69, label %70, label %77

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %64, i64 0, i32 1, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %88, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  br label %88

77:                                               ; preds = %66
  %78 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %68, i64 0, i32 8
  %79 = load i32, i32* %78, align 4
  br label %88

80:                                               ; preds = %56
  %81 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 1
  %82 = bitcast i32* %81 to %"class.WTF::StringImpl"**
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  br label %88

88:                                               ; preds = %85, %80, %77, %74, %70, %61
  %89 = phi i32 [ 0, %61 ], [ %79, %77 ], [ %76, %74 ], [ 0, %70 ], [ %87, %85 ], [ 0, %80 ]
  %90 = icmp slt i32 %89, %50
  %91 = select i1 %90, i32 %89, i32 %50
  br label %110

92:                                               ; preds = %48
  %93 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %3, i32 0) #9
  %94 = icmp ne %"class.blink::Node"* %93, null
  %95 = icmp sgt i32 %50, 0
  %96 = and i1 %95, %94
  br i1 %96, label %97, label %110

97:                                               ; preds = %92, %97
  %98 = phi %"class.blink::Node"* [ %101, %97 ], [ %93, %92 ]
  %99 = phi i32 [ %100, %97 ], [ 0, %92 ]
  %100 = add nuw nsw i32 %99, 1
  %101 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %98, i32 0) #9
  %102 = icmp ne %"class.blink::Node"* %101, null
  %103 = icmp slt i32 %100, %50
  %104 = and i1 %103, %102
  br i1 %104, label %97, label %110

105:                                              ; preds = %5
  %106 = tail call i32 @_ZN5blink17FlatTreeTraversal5IndexERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %3) #9
  br label %110

107:                                              ; preds = %5
  %108 = tail call i32 @_ZN5blink17FlatTreeTraversal5IndexERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %3) #9
  %109 = add i32 %108, 1
  br label %110

110:                                              ; preds = %97, %1, %92, %88, %46, %43, %38, %35, %32, %28, %19, %5, %107, %105
  %111 = phi i32 [ %109, %107 ], [ %106, %105 ], [ 0, %1 ], [ 0, %5 ], [ %47, %46 ], [ 0, %38 ], [ %45, %43 ], [ 0, %28 ], [ %34, %32 ], [ %37, %35 ], [ 0, %19 ], [ %91, %88 ], [ 0, %92 ], [ %100, %97 ]
  ret i32 %111
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16LastOffsetInNodeERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::Node"* %0 to i1 (%"class.blink::Node"*)***
  %3 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %3, i64 41
  %5 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::Node"* %0) #9
  %7 = icmp eq %"class.blink::Node"* %0, null
  %8 = xor i1 %6, true
  %9 = or i1 %7, %8
  br i1 %9, label %42, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %12 = bitcast %"class.blink::Node"* %11 to i8*
  %13 = load i8, i8* %12, align 8, !range !10
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %34, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 0, i32 0, i32 1
  %17 = bitcast %"class.blink::TraceWrapperV8Reference"* %16 to %"class.blink::ParkableStringImpl"**
  %18 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %17, align 8
  %19 = icmp eq %"class.blink::ParkableStringImpl"* %18, null
  br i1 %19, label %44, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %21, align 8
  %23 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %22, null
  br i1 %23, label %24, label %31

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %18, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %44, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  br label %44

31:                                               ; preds = %20
  %32 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %22, i64 0, i32 8
  %33 = load i32, i32* %32, align 4
  br label %44

34:                                               ; preds = %10
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 1
  %36 = bitcast i32* %35 to %"class.WTF::StringImpl"**
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  br label %44

42:                                               ; preds = %1
  %43 = tail call i32 @_ZN5blink17FlatTreeTraversal13CountChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0) #9
  br label %44

44:                                               ; preds = %39, %34, %31, %28, %24, %15, %42
  %45 = phi i32 [ %43, %42 ], [ 0, %34 ], [ %41, %39 ], [ 0, %24 ], [ %30, %28 ], [ %33, %31 ], [ 0, %15 ]
  ret i32 %45
}

declare i32 @_ZN5blink17FlatTreeTraversal5IndexERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate.606"* noalias sret, %"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::PositionTemplate.606"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #9
  br label %108

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %40

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = or i32 %14, 1
  %16 = icmp eq i32 %15, 3
  br i1 %16, label %40, label %17

17:                                               ; preds = %12
  %18 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %4) #9
  %19 = icmp eq %"class.blink::ContainerNode"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %17
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %22 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %21) #9
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %25 = tail call zeroext i1 @_ZN5blink20IsDisplayInsideTableEPKNS_4NodeE(%"class.blink::Node"* %24) #9
  br i1 %25, label %26, label %34

26:                                               ; preds = %23, %20
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %28 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %27) #9, !noalias !49
  %29 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %28, i64 0, i32 0
  %30 = tail call i32 @_ZN5blink17FlatTreeTraversal5IndexERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %27) #9, !noalias !49
  %31 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %29, %"class.blink::Node"** %31, align 8, !alias.scope !49
  %32 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %30, i32* %32, align 8, !alias.scope !49
  %33 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %33, align 4, !alias.scope !49
  br label %108

34:                                               ; preds = %17, %23
  %35 = bitcast %"class.blink::PositionTemplate.606"* %1 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::PositionTemplate.606"* %0 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %39, align 4
  br label %108

40:                                               ; preds = %12, %8
  %41 = bitcast %"class.blink::Node"* %4 to i1 (%"class.blink::Node"*)***
  %42 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %42, i64 41
  %44 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::Node"* nonnull %4) #9
  br i1 %45, label %91, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = or i32 %48, 1
  %50 = icmp eq i32 %49, 3
  br i1 %50, label %66, label %51

51:                                               ; preds = %46
  %52 = load i32, i32* %9, align 8
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %63, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %55
  %61 = bitcast %"class.blink::Node"* %53 to %"class.blink::ContainerNode"*
  %62 = tail call i32 @_ZNK5blink13ContainerNode13CountChildrenEv(%"class.blink::ContainerNode"* nonnull %61) #9
  br label %63

63:                                               ; preds = %51, %55, %60
  %64 = phi i32 [ %62, %60 ], [ 0, %51 ], [ 0, %55 ]
  %65 = icmp eq i32 %52, %64
  br i1 %65, label %66, label %91

66:                                               ; preds = %63, %46
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %68 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %67) #9
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %71 = tail call zeroext i1 @_ZN5blink20IsDisplayInsideTableEPKNS_4NodeE(%"class.blink::Node"* %70) #9
  br i1 %71, label %72, label %91

72:                                               ; preds = %69, %66
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %74 = icmp eq %"class.blink::Node"* %73, null
  br i1 %74, label %102, label %75

75:                                               ; preds = %72
  %76 = load i32, i32* %47, align 4
  switch i32 %76, label %94 [
    i32 3, label %82
    i32 0, label %82
    i32 1, label %77
    i32 2, label %77
  ]

77:                                               ; preds = %75, %75
  %78 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %73) #9
  %79 = icmp eq %"class.blink::ContainerNode"* %78, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %77
  %81 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  br label %82

82:                                               ; preds = %80, %75, %75
  %83 = phi %"class.blink::Node"* [ %81, %80 ], [ %73, %75 ], [ %73, %75 ]
  %84 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %83) #9, !noalias !52
  %85 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %84, i64 0, i32 0
  %86 = tail call i32 @_ZN5blink17FlatTreeTraversal5IndexERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %83) #9, !noalias !52
  %87 = add i32 %86, 1
  %88 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %85, %"class.blink::Node"** %88, align 8, !alias.scope !52
  %89 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %87, i32* %89, align 8, !alias.scope !52
  %90 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %90, align 4, !alias.scope !52
  br label %108

91:                                               ; preds = %77, %69, %63, %40
  %92 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %93 = icmp eq %"class.blink::Node"* %92, null
  br i1 %93, label %102, label %94

94:                                               ; preds = %75, %91
  %95 = phi %"class.blink::Node"* [ %92, %91 ], [ %73, %75 ]
  %96 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 2
  %97 = load i32, i32* %96, align 4
  switch i32 %97, label %102 [
    i32 3, label %98
    i32 0, label %98
    i32 1, label %99
    i32 2, label %99
  ]

98:                                               ; preds = %94, %94
  br label %102

99:                                               ; preds = %94, %94
  %100 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %95) #9
  %101 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %100, i64 0, i32 0
  br label %102

102:                                              ; preds = %72, %91, %94, %98, %99
  %103 = phi %"class.blink::Node"* [ %101, %99 ], [ %95, %98 ], [ null, %91 ], [ null, %94 ], [ null, %72 ]
  %104 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate.606"* %1)
  %105 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %103, %"class.blink::Node"** %105, align 8
  %106 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %104, i32* %106, align 8
  %107 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %107, align 4
  br label %108

108:                                              ; preds = %102, %82, %34, %26, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28IsAfterAnchorOrAfterChildrenEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = or i32 %3, 1
  %5 = icmp eq i32 %4, 3
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate.606"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1) #9
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %3, i64 0, i32 0
  %5 = tail call i32 @_ZN5blink17FlatTreeTraversal5IndexERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1) #9
  %6 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %5, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE17InParentAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate.606"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1) #9
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %3, i64 0, i32 0
  %5 = tail call i32 @_ZN5blink17FlatTreeTraversal5IndexERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1) #9
  %6 = add i32 %5, 1
  %7 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %6, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16ToOffsetInAnchorEv(%"class.blink::PositionTemplate.606"* noalias sret, %"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::PositionTemplate.606"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #9
  br label %21

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %15 [
    i32 3, label %11
    i32 0, label %11
    i32 1, label %12
    i32 2, label %12
  ]

11:                                               ; preds = %8, %8
  br label %15

12:                                               ; preds = %8, %8
  %13 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %4) #9
  %14 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %13, i64 0, i32 0
  br label %15

15:                                               ; preds = %8, %11, %12
  %16 = phi %"class.blink::Node"* [ %14, %12 ], [ %4, %11 ], [ null, %8 ]
  %17 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate.606"* %1)
  %18 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %16, %"class.blink::Node"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %17, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %20, align 4
  br label %21

21:                                               ; preds = %15, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE6IsNullEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE21OffsetInContainerNodeEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = or i32 %3, 1
  %5 = icmp eq i32 %4, 3
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = tail call i32 @_ZN5blink16EditingAlgorithmINS_17FlatTreeTraversalEE20LastOffsetForEditingEPKNS_4NodeE(%"class.blink::Node"* %8) #9
  br label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ]
  ret i32 %14
}

declare i32 @_ZN5blink16EditingAlgorithmINS_17FlatTreeTraversalEE20LastOffsetForEditingEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE25ComputeNodeBeforePositionEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %20 [
    i32 3, label %8
    i32 0, label %10
    i32 1, label %17
    i32 2, label %19
  ]

8:                                                ; preds = %5
  %9 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %3, i32 1) #9
  br label %20

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %10
  %15 = add nsw i32 %12, -1
  %16 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal7ChildAtERKNS_4NodeEj(%"class.blink::Node"* nonnull dereferenceable(64) %3, i32 %15) #9
  br label %20

17:                                               ; preds = %5
  %18 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %3, i32 1) #9
  br label %20

19:                                               ; preds = %5
  br label %20

20:                                               ; preds = %1, %5, %14, %10, %19, %17, %8
  %21 = phi %"class.blink::Node"* [ %3, %19 ], [ %18, %17 ], [ %9, %8 ], [ null, %1 ], [ %16, %14 ], [ null, %10 ], [ null, %5 ]
  ret %"class.blink::Node"* %21
}

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal7ChildAtERKNS_4NodeEj(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE24ComputeNodeAfterPositionEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %15 [
    i32 2, label %13
    i32 0, label %8
    i32 1, label %12
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal7ChildAtERKNS_4NodeEj(%"class.blink::Node"* nonnull dereferenceable(64) %3, i32 %10) #9
  br label %15

12:                                               ; preds = %5
  br label %15

13:                                               ; preds = %5
  %14 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %3, i32 0) #9
  br label %15

15:                                               ; preds = %1, %5, %13, %12, %8
  %16 = phi %"class.blink::Node"* [ %14, %13 ], [ %3, %12 ], [ %11, %8 ], [ null, %1 ], [ null, %5 ]
  ret %"class.blink::Node"* %16
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20NodeAsRangeFirstNodeEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::PositionTemplate.606", align 8
  %3 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %41, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::PositionTemplate.606"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  switch i32 %8, label %16 [
    i32 3, label %12
    i32 2, label %13
    i32 1, label %13
  ]

12:                                               ; preds = %10
  br label %16

13:                                               ; preds = %10, %10
  %14 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %4) #9, !noalias !55
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0
  br label %16

16:                                               ; preds = %10, %12, %13
  %17 = phi %"class.blink::Node"* [ %15, %13 ], [ %4, %12 ], [ null, %10 ]
  %18 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate.606"* %0) #9, !noalias !55
  %19 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %17, %"class.blink::Node"** %19, align 8, !alias.scope !55
  %20 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %2, i64 0, i32 1
  store i32 %18, i32* %20, align 8, !alias.scope !55
  %21 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %2, i64 0, i32 2
  store i32 0, i32* %21, align 4, !alias.scope !55
  %22 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20NodeAsRangeFirstNodeEv(%"class.blink::PositionTemplate.606"* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  br label %41

23:                                               ; preds = %6
  %24 = bitcast %"class.blink::Node"* %4 to i1 (%"class.blink::Node"*)***
  %25 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %25, i64 41
  %27 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Node"* nonnull %4) #9
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  br i1 %28, label %41, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal7ChildAtERKNS_4NodeEj(%"class.blink::Node"* dereferenceable(64) %29, i32 %32) #9
  %34 = icmp eq %"class.blink::Node"* %33, null
  br i1 %34, label %35, label %41

35:                                               ; preds = %30
  %36 = load i32, i32* %31, align 8
  %37 = icmp eq i32 %36, 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  br i1 %37, label %41, label %39

39:                                               ; preds = %35
  %40 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal20NextSkippingChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %38) #9
  br label %41

41:                                               ; preds = %1, %35, %23, %30, %39, %16
  %42 = phi %"class.blink::Node"* [ %40, %39 ], [ %33, %30 ], [ %22, %16 ], [ null, %1 ], [ %29, %23 ], [ %38, %35 ]
  ret %"class.blink::Node"* %42
}

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal20NextSkippingChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE19NodeAsRangeLastNodeEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE23NodeAsRangePastLastNodeEv(%"class.blink::PositionTemplate.606"* %0)
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %6, i32 1) #9
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %8, %11
  %12 = phi %"class.blink::Node"* [ %13, %11 ], [ %9, %8 ]
  %13 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %12, i32 1) #9
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %31, label %11

15:                                               ; preds = %8
  %16 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %6) #9
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %16, i64 0, i32 0
  br label %31

18:                                               ; preds = %5
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  switch i32 %23, label %28 [
    i32 3, label %24
    i32 0, label %24
    i32 1, label %25
    i32 2, label %25
  ]

24:                                               ; preds = %21, %21
  br label %28

25:                                               ; preds = %21, %21
  %26 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %19) #9
  %27 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %26, i64 0, i32 0
  br label %28

28:                                               ; preds = %18, %21, %24, %25
  %29 = phi %"class.blink::Node"* [ %27, %25 ], [ %19, %24 ], [ null, %18 ], [ null, %21 ]
  %30 = tail call dereferenceable(64) %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16LastWithinOrSelfERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %29) #9
  br label %31

31:                                               ; preds = %11, %15, %1, %28
  %32 = phi %"class.blink::Node"* [ %30, %28 ], [ null, %1 ], [ %17, %15 ], [ %12, %11 ]
  ret %"class.blink::Node"* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE23NodeAsRangePastLastNodeEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::PositionTemplate.606", align 8
  %3 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %40, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::PositionTemplate.606"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  switch i32 %8, label %16 [
    i32 3, label %12
    i32 2, label %13
    i32 1, label %13
  ]

12:                                               ; preds = %10
  br label %16

13:                                               ; preds = %10, %10
  %14 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %4) #9, !noalias !58
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0
  br label %16

16:                                               ; preds = %10, %12, %13
  %17 = phi %"class.blink::Node"* [ %15, %13 ], [ %4, %12 ], [ null, %10 ]
  %18 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate.606"* %0) #9, !noalias !58
  %19 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %17, %"class.blink::Node"** %19, align 8, !alias.scope !58
  %20 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %2, i64 0, i32 1
  store i32 %18, i32* %20, align 8, !alias.scope !58
  %21 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %2, i64 0, i32 2
  store i32 0, i32* %21, align 4, !alias.scope !58
  %22 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE23NodeAsRangePastLastNodeEv(%"class.blink::PositionTemplate.606"* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  br label %40

23:                                               ; preds = %6
  %24 = bitcast %"class.blink::Node"* %4 to i1 (%"class.blink::Node"*)***
  %25 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %25, i64 41
  %27 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Node"* nonnull %4) #9
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  br i1 %28, label %30, label %32

30:                                               ; preds = %23
  %31 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal20NextSkippingChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %29) #9
  br label %40

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal7ChildAtERKNS_4NodeEj(%"class.blink::Node"* dereferenceable(64) %29, i32 %34) #9
  %36 = icmp eq %"class.blink::Node"* %35, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %39 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal20NextSkippingChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %38) #9
  br label %40

40:                                               ; preds = %1, %32, %37, %30, %16
  %41 = phi %"class.blink::Node"* [ %31, %30 ], [ %39, %37 ], [ %35, %32 ], [ %22, %16 ], [ null, %1 ]
  ret %"class.blink::Node"* %41
}

declare dereferenceable(64) %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16LastWithinOrSelfERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE23CommonAncestorContainerERKS4_(%"class.blink::PositionTemplate.606"*, %"class.blink::PositionTemplate.606"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %13 [
    i32 3, label %9
    i32 0, label %9
    i32 1, label %10
    i32 2, label %10
  ]

9:                                                ; preds = %6, %6
  br label %13

10:                                               ; preds = %6, %6
  %11 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %4) #9
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %11, i64 0, i32 0
  br label %13

13:                                               ; preds = %2, %6, %9, %10
  %14 = phi %"class.blink::Node"* [ %12, %10 ], [ %4, %9 ], [ null, %2 ], [ null, %6 ]
  %15 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  switch i32 %20, label %25 [
    i32 3, label %21
    i32 0, label %21
    i32 1, label %22
    i32 2, label %22
  ]

21:                                               ; preds = %18, %18
  br label %25

22:                                               ; preds = %18, %18
  %23 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %16) #9
  %24 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %23, i64 0, i32 0
  br label %25

25:                                               ; preds = %13, %18, %21, %22
  %26 = phi %"class.blink::Node"* [ %24, %22 ], [ %16, %21 ], [ null, %13 ], [ null, %18 ]
  %27 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64) %14, %"class.blink::Node"* dereferenceable(64) %26) #9
  ret %"class.blink::Node"* %27
}

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE10AnchorNodeEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  ret %"class.blink::Node"* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::Document"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11GetDocumentEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %"class.blink::Document"* [ %9, %5 ], [ null, %1 ]
  ret %"class.blink::Document"* %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %9, i64 0, i32 0, i32 0
  %11 = icmp eq %"class.blink::Node"* %10, %3
  br i1 %11, label %14, label %12

12:                                               ; preds = %5
  %13 = tail call zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* nonnull dereferenceable(64) %3, %"class.blink::Node"* dereferenceable(64) %10) #9
  br label %14

14:                                               ; preds = %1, %5, %12
  %15 = phi i1 [ false, %1 ], [ true, %5 ], [ %13, %12 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE10IsValidForERKNS_8DocumentE(%"class.blink::PositionTemplate.606"*, %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %70, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = icmp eq %"class.blink::Document"* %10, %1
  br i1 %11, label %12, label %70

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 0, i32 0
  %14 = icmp eq %"class.blink::Node"* %13, %4
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* nonnull dereferenceable(64) %4, %"class.blink::Node"* dereferenceable(64) %13) #9
  br i1 %16, label %17, label %70

17:                                               ; preds = %12, %15
  %18 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %70

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %25 = bitcast %"class.blink::Node"* %24 to i1 (%"class.blink::Node"*)***
  %26 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %26, i64 41
  %28 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::Node"* %24) #9
  %30 = icmp eq %"class.blink::Node"* %24, null
  %31 = xor i1 %29, true
  %32 = or i1 %30, %31
  br i1 %32, label %65, label %33

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 1
  %35 = bitcast %"class.blink::Node"* %34 to i8*
  %36 = load i8, i8* %35, align 8, !range !10
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %57, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 1, i32 0, i32 0, i32 1
  %40 = bitcast %"class.blink::TraceWrapperV8Reference"* %39 to %"class.blink::ParkableStringImpl"**
  %41 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %40, align 8
  %42 = icmp eq %"class.blink::ParkableStringImpl"* %41, null
  br i1 %42, label %67, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0
  %45 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %44, align 8
  %46 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %45, null
  br i1 %46, label %47, label %54

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %41, i64 0, i32 1, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %67, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  br label %67

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %45, i64 0, i32 8
  %56 = load i32, i32* %55, align 4
  br label %67

57:                                               ; preds = %33
  %58 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 1, i32 1
  %59 = bitcast i32* %58 to %"class.WTF::StringImpl"**
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  br label %67

65:                                               ; preds = %21
  %66 = tail call i32 @_ZN5blink17FlatTreeTraversal13CountChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %24) #9
  br label %67

67:                                               ; preds = %38, %47, %51, %54, %57, %62, %65
  %68 = phi i32 [ %66, %65 ], [ 0, %57 ], [ %64, %62 ], [ 0, %47 ], [ %53, %51 ], [ %56, %54 ], [ 0, %38 ]
  %69 = icmp sle i32 %23, %68
  br label %70

70:                                               ; preds = %6, %17, %67, %15, %2
  %71 = phi i1 [ true, %2 ], [ false, %6 ], [ false, %15 ], [ true, %17 ], [ %69, %67 ]
  ret i1 %71
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE8IsOrphanEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %9, i64 0, i32 0, i32 0
  %11 = icmp eq %"class.blink::Node"* %10, %3
  br i1 %11, label %15, label %12

12:                                               ; preds = %5
  %13 = tail call zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* nonnull dereferenceable(64) %3, %"class.blink::Node"* dereferenceable(64) %10) #9
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %12, %5, %1
  %16 = phi i1 [ false, %1 ], [ false, %5 ], [ %14, %12 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden signext i16 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9CompareToERKS4_(%"class.blink::PositionTemplate.606"*, %"class.blink::PositionTemplate.606"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEES6_(%"class.blink::PositionTemplate.606"* dereferenceable(16) %0, %"class.blink::PositionTemplate.606"* dereferenceable(16) %1)
  ret i16 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEES6_(%"class.blink::PositionTemplate.606"* dereferenceable(16), %"class.blink::PositionTemplate.606"* dereferenceable(16)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %13 [
    i32 3, label %9
    i32 0, label %9
    i32 1, label %10
    i32 2, label %10
  ]

9:                                                ; preds = %6, %6
  br label %13

10:                                               ; preds = %6, %6
  %11 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %4) #9
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %11, i64 0, i32 0
  br label %13

13:                                               ; preds = %2, %6, %9, %10
  %14 = phi %"class.blink::Node"* [ %12, %10 ], [ %4, %9 ], [ null, %2 ], [ null, %6 ]
  %15 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  switch i32 %20, label %25 [
    i32 3, label %21
    i32 0, label %21
    i32 1, label %22
    i32 2, label %22
  ]

21:                                               ; preds = %18, %18
  br label %25

22:                                               ; preds = %18, %18
  %23 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %16) #9
  %24 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %23, i64 0, i32 0
  br label %25

25:                                               ; preds = %13, %18, %21, %22
  %26 = phi %"class.blink::Node"* [ %24, %22 ], [ %16, %21 ], [ null, %13 ], [ null, %18 ]
  %27 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate.606"* %0)
  %28 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate.606"* %1)
  %29 = tail call signext i16 @_ZN5blink26ComparePositionsInFlatTreeEPKNS_4NodeEiS2_iPb(%"class.blink::Node"* %14, i32 %27, %"class.blink::Node"* %26, i32 %28, i8* null) #9
  ret i16 %29
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEltERKS4_(%"class.blink::PositionTemplate.606"*, %"class.blink::PositionTemplate.606"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEES6_(%"class.blink::PositionTemplate.606"* dereferenceable(16) %0, %"class.blink::PositionTemplate.606"* dereferenceable(16) %1)
  %4 = icmp slt i16 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEleERKS4_(%"class.blink::PositionTemplate.606"*, %"class.blink::PositionTemplate.606"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEES6_(%"class.blink::PositionTemplate.606"* dereferenceable(16) %0, %"class.blink::PositionTemplate.606"* dereferenceable(16) %1)
  %4 = icmp slt i16 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEgtERKS4_(%"class.blink::PositionTemplate.606"*, %"class.blink::PositionTemplate.606"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEES6_(%"class.blink::PositionTemplate.606"* dereferenceable(16) %0, %"class.blink::PositionTemplate.606"* dereferenceable(16) %1)
  %4 = icmp sgt i16 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEgeERKS4_(%"class.blink::PositionTemplate.606"*, %"class.blink::PositionTemplate.606"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEES6_(%"class.blink::PositionTemplate.606"* dereferenceable(16) %0, %"class.blink::PositionTemplate.606"* dereferenceable(16) %1)
  %4 = icmp sgt i16 %3, -1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE12IsEquivalentERKS4_(%"class.blink::PositionTemplate.606"*, %"class.blink::PositionTemplate.606"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br label %58

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %4, %18
  br i1 %19, label %20, label %58

20:                                               ; preds = %16
  %21 = icmp eq i32 %12, 0
  br i1 %21, label %22, label %58

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br label %58

28:                                               ; preds = %10
  switch i32 %12, label %33 [
    i32 3, label %29
    i32 0, label %29
    i32 1, label %30
    i32 2, label %30
  ]

29:                                               ; preds = %28, %28
  br label %33

30:                                               ; preds = %28, %28
  %31 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %4) #9, !noalias !61
  %32 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %31, i64 0, i32 0
  br label %33

33:                                               ; preds = %28, %29, %30
  %34 = phi %"class.blink::Node"* [ %32, %30 ], [ %4, %29 ], [ null, %28 ]
  %35 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate.606"* %0) #9, !noalias !61
  %36 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8, !noalias !64
  %38 = icmp eq %"class.blink::Node"* %37, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %33
  %40 = load i32, i32* %13, align 4, !noalias !64
  switch i32 %40, label %45 [
    i32 3, label %41
    i32 0, label %41
    i32 1, label %42
    i32 2, label %42
  ]

41:                                               ; preds = %39, %39
  br label %45

42:                                               ; preds = %39, %39
  %43 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %37) #9, !noalias !64
  %44 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %43, i64 0, i32 0
  br label %45

45:                                               ; preds = %42, %41, %39
  %46 = phi %"class.blink::Node"* [ %44, %42 ], [ %37, %41 ], [ null, %39 ]
  %47 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate.606"* %1) #9, !noalias !64
  br label %48

48:                                               ; preds = %33, %45
  %49 = phi %"class.blink::Node"* [ %46, %45 ], [ null, %33 ]
  %50 = phi i32 [ %47, %45 ], [ 0, %33 ]
  %51 = icmp eq %"class.blink::Node"* %34, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = icmp eq %"class.blink::Node"* %49, null
  br label %58

54:                                               ; preds = %48
  %55 = icmp eq %"class.blink::Node"* %34, %49
  %56 = icmp eq i32 %35, %50
  %57 = and i1 %55, %56
  ret i1 %57

58:                                               ; preds = %52, %22, %20, %16, %6
  %59 = phi i1 [ %9, %6 ], [ %27, %22 ], [ false, %16 ], [ true, %20 ], [ %53, %52 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE29AtFirstEditingPositionForNodeEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %15 [
    i32 0, label %8
    i32 1, label %16
    i32 3, label %12
    i32 2, label %12
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br label %16

12:                                               ; preds = %5, %5
  %13 = tail call i32 @_ZN5blink16EditingAlgorithmINS_13NodeTraversalEE20LastOffsetForEditingEPKNS_4NodeE(%"class.blink::Node"* nonnull %3) #9
  %14 = icmp eq i32 %13, 0
  br label %16

15:                                               ; preds = %5
  br label %16

16:                                               ; preds = %5, %1, %15, %12, %8
  %17 = phi i1 [ false, %15 ], [ %14, %12 ], [ %11, %8 ], [ true, %1 ], [ true, %5 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28AtLastEditingPositionForNodeEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = or i32 %7, 1
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = tail call i32 @_ZN5blink16EditingAlgorithmINS_13NodeTraversalEE20LastOffsetForEditingEPKNS_4NodeE(%"class.blink::Node"* nonnull %3) #9
  %14 = icmp sge i32 %12, %13
  br label %15

15:                                               ; preds = %5, %10, %1
  %16 = phi i1 [ true, %1 ], [ true, %5 ], [ %14, %10 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13AtStartOfTreeEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %3) #9
  %7 = icmp eq %"class.blink::ContainerNode"* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br label %12

12:                                               ; preds = %8, %5, %1
  %13 = phi i1 [ true, %1 ], [ false, %5 ], [ %11, %8 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11AtEndOfTreeEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %3) #9
  %7 = icmp eq %"class.blink::ContainerNode"* %6, null
  br i1 %7, label %8, label %14

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %12 = tail call i32 @_ZN5blink16EditingAlgorithmINS_13NodeTraversalEE20LastOffsetForEditingEPKNS_4NodeE(%"class.blink::Node"* %11) #9
  %13 = icmp sge i32 %10, %12
  br label %14

14:                                               ; preds = %8, %5, %1
  %15 = phi i1 [ true, %1 ], [ false, %5 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate.606"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 1, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate.606"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 2, i32* %5, align 4
  ret void
}

declare i32 @_ZN5blink17FlatTreeTraversal13CountChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate.606"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate.606"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 12
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %7, label %50

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::Node"* %1 to i1 (%"class.blink::Node"*)***
  %9 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %9, i64 41
  %11 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::Node"* %1) #9
  %13 = icmp eq %"class.blink::Node"* %1, null
  %14 = xor i1 %12, true
  %15 = or i1 %13, %14
  br i1 %15, label %48, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %18 = bitcast %"class.blink::Node"* %17 to i8*
  %19 = load i8, i8* %18, align 8, !range !10
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %40, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 0, i32 0, i32 1
  %23 = bitcast %"class.blink::TraceWrapperV8Reference"* %22 to %"class.blink::ParkableStringImpl"**
  %24 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %23, align 8
  %25 = icmp eq %"class.blink::ParkableStringImpl"* %24, null
  br i1 %25, label %50, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %27, align 8
  %29 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %28, null
  br i1 %29, label %30, label %37

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %24, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %50, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  br label %50

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %28, i64 0, i32 8
  %39 = load i32, i32* %38, align 4
  br label %50

40:                                               ; preds = %16
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 1
  %42 = bitcast i32* %41 to %"class.WTF::StringImpl"**
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  br label %50

48:                                               ; preds = %7
  %49 = tail call i32 @_ZN5blink17FlatTreeTraversal13CountChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1) #9
  br label %50

50:                                               ; preds = %2, %48, %45, %40, %37, %34, %30, %21
  %51 = phi i32 [ %49, %48 ], [ 0, %40 ], [ %47, %45 ], [ 0, %30 ], [ %36, %34 ], [ %39, %37 ], [ 0, %21 ], [ 0, %2 ]
  %52 = phi i32 [ 0, %48 ], [ 0, %40 ], [ 0, %45 ], [ 0, %30 ], [ 0, %34 ], [ 0, %37 ], [ 0, %21 ], [ 3, %2 ]
  %53 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %53, align 8
  %54 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %51, i32* %54, align 8
  %55 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 %52, i32* %55, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate.606"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1) #9
  %4 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %7 = zext i1 %3 to i32
  store i32 %7, i32* %6, align 4, !alias.scope !67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate.606"* noalias sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1) #9
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8, !noalias !72
  %7 = and i32 %6, 12
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %9, label %52

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::Node"* %1 to i1 (%"class.blink::Node"*)***
  %11 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %10, align 8, !noalias !72
  %12 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %11, i64 41
  %13 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %12, align 8, !noalias !72
  %14 = tail call zeroext i1 %13(%"class.blink::Node"* %1) #9, !noalias !72
  %15 = icmp eq %"class.blink::Node"* %1, null
  %16 = xor i1 %14, true
  %17 = or i1 %15, %16
  br i1 %17, label %50, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %20 = bitcast %"class.blink::Node"* %19 to i8*
  %21 = load i8, i8* %20, align 8, !range !10, !noalias !72
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 0, i32 0, i32 1
  %25 = bitcast %"class.blink::TraceWrapperV8Reference"* %24 to %"class.blink::ParkableStringImpl"**
  %26 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %25, align 8, !noalias !72
  %27 = icmp eq %"class.blink::ParkableStringImpl"* %26, null
  br i1 %27, label %52, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %29, align 8, !noalias !72
  %31 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %30, null
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8, !noalias !72
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %52, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %38 = load i32, i32* %37, align 4, !noalias !72
  br label %52

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %30, i64 0, i32 8
  %41 = load i32, i32* %40, align 4, !noalias !72
  br label %52

42:                                               ; preds = %18
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 1
  %44 = bitcast i32* %43 to %"class.WTF::StringImpl"**
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8, !noalias !72
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 1
  %49 = load i32, i32* %48, align 4, !noalias !72
  br label %52

50:                                               ; preds = %9
  %51 = tail call i32 @_ZN5blink17FlatTreeTraversal13CountChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1) #9, !noalias !72
  br label %52

52:                                               ; preds = %4, %23, %32, %36, %39, %42, %47, %50, %2
  %53 = phi i32 [ 0, %2 ], [ %51, %50 ], [ 0, %42 ], [ %49, %47 ], [ 0, %32 ], [ %38, %36 ], [ %41, %39 ], [ 0, %23 ], [ 0, %4 ]
  %54 = phi i32 [ 2, %2 ], [ 0, %50 ], [ 0, %42 ], [ 0, %47 ], [ 0, %32 ], [ 0, %36 ], [ 0, %39 ], [ 0, %23 ], [ 3, %4 ]
  %55 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %55, align 8, !alias.scope !75
  %56 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %53, i32* %56, align 8, !alias.scope !75
  %57 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 %54, i32* %57, align 4, !alias.scope !75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE27ToAnchorTypeAndOffsetStringEv(%"class.blink::PositionTemplate.606"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %96 [
    i32 0, label %9
    i32 3, label %93
    i32 1, label %94
    i32 2, label %95
  ]

9:                                                ; preds = %1
  %10 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %13 = bitcast %union.anon* %12 to i8*
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %15, align 4
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %16, align 1
  %17 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #9
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 15, i32* %21, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #9
  %22 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 12
  %26 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 2
  %27 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 3
  %28 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 13
  %29 = icmp slt i32 %23, 0
  %30 = sub i32 0, %23
  %31 = select i1 %29, i32 %30, i32 %23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false) #9
  store i8* %25, i8** %26, align 8
  %32 = urem i32 %31, 10
  %33 = udiv i32 %31, 10
  %34 = trunc i32 %32 to i8
  %35 = or i8 %34, 48
  store i8 %35, i8* %25, align 4
  %36 = icmp ugt i32 %31, 9
  br i1 %36, label %37, label %59

37:                                               ; preds = %9
  %38 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 11
  store i8* %38, i8** %26, align 8
  %39 = urem i32 %33, 10
  %40 = trunc i32 %39 to i8
  %41 = or i8 %40, 48
  store i8 %41, i8* %38, align 1
  %42 = icmp ugt i32 %31, 99
  br i1 %42, label %43, label %59

43:                                               ; preds = %37
  %44 = udiv i32 %31, 100
  %45 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 10
  store i8* %45, i8** %26, align 8
  %46 = urem i32 %44, 10
  %47 = trunc i32 %46 to i8
  %48 = or i8 %47, 48
  store i8 %48, i8* %45, align 2
  %49 = icmp ugt i32 %31, 999
  br i1 %49, label %50, label %59

50:                                               ; preds = %43, %50
  %51 = phi i32 [ %53, %50 ], [ %44, %43 ]
  %52 = load i8*, i8** %26, align 8
  %53 = udiv i32 %51, 10
  %54 = getelementptr inbounds i8, i8* %52, i64 -1
  store i8* %54, i8** %26, align 8
  %55 = urem i32 %53, 10
  %56 = trunc i32 %55 to i8
  %57 = or i8 %56, 48
  store i8 %57, i8* %54, align 1
  %58 = icmp ugt i32 %51, 99
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %43, %37, %9
  br i1 %29, label %60, label %63

60:                                               ; preds = %59
  %61 = load i8*, i8** %26, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 -1
  store i8* %62, i8** %26, align 8
  store i8 45, i8* %62, align 1
  br label %63

63:                                               ; preds = %59, %60
  %64 = bitcast i8** %26 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = ptrtoint i8* %28 to i64
  %67 = sub i64 %66, %65
  %68 = trunc i64 %67 to i32
  store i32 %68, i32* %27, align 8
  %69 = inttoptr i64 %65 to i8*
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %4, i8* %69, i32 %68) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #9
  %70 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #9
  %71 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %72 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8** %73, align 8
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 1, i32* %74, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #9
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #9
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %76, align 8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #9
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %63
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #9
  br label %92

92:                                               ; preds = %63, %88, %91
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #9
  br label %119

93:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13) #9
  br label %119

94:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i64 12) #9
  br label %119

95:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i64 11) #9
  br label %119

96:                                               ; preds = %1
  %97 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %100, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %101, label %119, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %119

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i33
  %111 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %110, i33 1) #9
  %112 = extractvalue { i33, i1 } %111, 1
  %113 = extractvalue { i33, i1 } %111, 0
  %114 = icmp slt i33 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %117, !prof !40

116:                                              ; preds = %107
  tail call void @llvm.trap() #9
  unreachable

117:                                              ; preds = %107
  %118 = trunc i33 %113 to i32
  store i32 %118, i32* %108, align 4
  br label %119

119:                                              ; preds = %117, %102, %96, %95, %94, %93, %92
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  ret %"class.WTF::StringImpl"* %121
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE5TraceEPNS_7VisitorE(%"class.blink::PositionTemplate.606"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::PositionTemplate.606"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #9
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

declare signext i16 @_ZN5blink26ComparePositionsInFlatTreeEPKNS_4NodeEiS2_iPb(%"class.blink::Node"*, i32, %"class.blink::Node"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ToPositionInFlatTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate.606"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::PositionTemplate.606"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #9
  br label %331

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %297

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::Node"* %4 to i1 (%"class.blink::Node"*)***
  %14 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %14, i64 41
  %16 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::Node"* nonnull %4) #9
  %18 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %1)
  br i1 %17, label %19, label %23

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %18, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %22, align 4
  br label %331

23:                                               ; preds = %12
  %24 = icmp eq i32 %18, 0
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %27, label %45

27:                                               ; preds = %23
  %28 = and i32 %26, 12
  %29 = icmp eq i32 %28, 8
  br i1 %29, label %30, label %40

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %32, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %34, i64 0, i32 0
  %36 = icmp eq %"class.blink::Node"* %35, %4
  br i1 %36, label %37, label %40

37:                                               ; preds = %30
  %38 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* nonnull %4) #9
  %39 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %38, i64 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %27, %30, %37
  %41 = phi %"class.blink::Node"* [ %39, %37 ], [ %4, %30 ], [ %4, %27 ]
  %42 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %41, %"class.blink::Node"** %42, align 8, !alias.scope !78
  %43 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 0, i32* %43, align 8, !alias.scope !78
  %44 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %44, align 4, !alias.scope !78
  br label %331

45:                                               ; preds = %23
  %46 = and i32 %26, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %68, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1
  %50 = bitcast %"class.blink::Node"* %49 to %"class.blink::Node"**
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %50, align 8
  %52 = icmp eq %"class.blink::Node"* %51, null
  br i1 %52, label %68, label %53

53:                                               ; preds = %48, %53
  %54 = phi i1 [ %62, %53 ], [ false, %48 ]
  %55 = phi %"class.blink::Node"* [ %61, %53 ], [ %51, %48 ]
  %56 = phi i32 [ %59, %53 ], [ %18, %48 ]
  %57 = xor i1 %54, true
  %58 = zext i1 %57 to i32
  %59 = sub nuw i32 %56, %58
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %55, i64 0, i32 5, i32 0, i32 0
  %61 = load %"class.blink::Node"*, %"class.blink::Node"** %60, align 8
  %62 = icmp eq %"class.blink::Node"* %61, null
  %63 = icmp ne i32 %59, 0
  %64 = xor i1 %62, true
  %65 = and i1 %63, %64
  br i1 %65, label %53, label %66

66:                                               ; preds = %53
  %67 = icmp eq %"class.blink::Node"* %61, null
  br i1 %67, label %68, label %140

68:                                               ; preds = %48, %45, %66
  %69 = and i32 %26, 12
  %70 = icmp eq i32 %69, 8
  br i1 %70, label %71, label %83

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 3, i32 0, i32 0
  %73 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %73, i64 0, i32 1, i32 0, i32 0
  %75 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %75, i64 0, i32 0
  %77 = icmp eq %"class.blink::Node"* %76, %4
  br i1 %77, label %78, label %83

78:                                               ; preds = %71
  %79 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %4) #9
  %80 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %79, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %79, i64 0, i32 0, i32 0, i32 1
  %82 = load i32, i32* %81, align 8, !noalias !81
  br label %83

83:                                               ; preds = %68, %71, %78
  %84 = phi i32 [ %82, %78 ], [ %26, %71 ], [ %26, %68 ]
  %85 = phi %"class.blink::Node"* [ %80, %78 ], [ %4, %71 ], [ %4, %68 ]
  %86 = and i32 %84, 12
  %87 = icmp eq i32 %86, 4
  br i1 %87, label %88, label %136

88:                                               ; preds = %83
  %89 = bitcast %"class.blink::Node"* %85 to i1 (%"class.blink::Node"*)***
  %90 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %89, align 8, !noalias !81
  %91 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %90, i64 41
  %92 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %91, align 8, !noalias !81
  %93 = tail call zeroext i1 %92(%"class.blink::Node"* %85) #9, !noalias !81
  %94 = icmp eq %"class.blink::Node"* %85, null
  %95 = xor i1 %93, true
  %96 = or i1 %94, %95
  br i1 %96, label %129, label %97

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %85, i64 1
  %99 = bitcast %"class.blink::Node"* %98 to i8*
  %100 = load i8, i8* %99, align 8, !range !10, !noalias !81
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %121, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %85, i64 1, i32 0, i32 0, i32 1
  %104 = bitcast %"class.blink::TraceWrapperV8Reference"* %103 to %"class.blink::ParkableStringImpl"**
  %105 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %104, align 8, !noalias !81
  %106 = icmp eq %"class.blink::ParkableStringImpl"* %105, null
  br i1 %106, label %131, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0
  %109 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %108, align 8, !noalias !81
  %110 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %109, null
  br i1 %110, label %111, label %118

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %105, i64 0, i32 1, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8, !noalias !81
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %131, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 1
  %117 = load i32, i32* %116, align 4, !noalias !81
  br label %131

118:                                              ; preds = %107
  %119 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %109, i64 0, i32 8
  %120 = load i32, i32* %119, align 4, !noalias !81
  br label %131

121:                                              ; preds = %97
  %122 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %85, i64 1, i32 1
  %123 = bitcast i32* %122 to %"class.WTF::StringImpl"**
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8, !noalias !81
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 1
  %128 = load i32, i32* %127, align 4, !noalias !81
  br label %131

129:                                              ; preds = %88
  %130 = tail call i32 @_ZN5blink17FlatTreeTraversal13CountChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %85) #9, !noalias !81
  br label %131

131:                                              ; preds = %129, %126, %121, %118, %115, %111, %102
  %132 = phi i32 [ %130, %129 ], [ 0, %121 ], [ %128, %126 ], [ 0, %111 ], [ %117, %115 ], [ %120, %118 ], [ 0, %102 ]
  %133 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %85, %"class.blink::Node"** %133, align 8, !alias.scope !81
  %134 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %132, i32* %134, align 8, !alias.scope !81
  %135 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %135, align 4, !alias.scope !81
  br label %331

136:                                              ; preds = %83
  %137 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %85, %"class.blink::Node"** %137, align 8, !alias.scope !81
  %138 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 0, i32* %138, align 8, !alias.scope !81
  %139 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 3, i32* %139, align 4, !alias.scope !81
  br label %331

140:                                              ; preds = %66
  %141 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = and i32 %142, 12
  %144 = icmp eq i32 %143, 8
  br i1 %144, label %145, label %172

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 3, i32 0, i32 0
  %147 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %147, i64 0, i32 1, i32 0, i32 0
  %149 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %149, i64 0, i32 0
  %151 = icmp eq %"class.blink::Node"* %150, %61
  br i1 %151, label %152, label %172

152:                                              ; preds = %145
  %153 = and i32 %26, 12
  %154 = icmp eq i32 %153, 8
  br i1 %154, label %155, label %168

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 3, i32 0, i32 0
  %157 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %157, i64 0, i32 1, i32 0, i32 0
  %159 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %159, i64 0, i32 0
  %161 = icmp eq %"class.blink::Node"* %160, %4
  br i1 %161, label %162, label %168

162:                                              ; preds = %155
  %163 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %4) #9
  %164 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %163, i64 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %164, %"class.blink::Node"** %165, align 8
  %166 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %18, i32* %166, align 8
  %167 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %167, align 4
  br label %331

168:                                              ; preds = %152, %155
  %169 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %169, align 8
  %170 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %18, i32* %170, align 8
  %171 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %171, align 4
  br label %331

172:                                              ; preds = %140, %145
  %173 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %61) #9
  %174 = icmp eq %"class.blink::ContainerNode"* %173, null
  br i1 %174, label %181, label %175

175:                                              ; preds = %172
  %176 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %173, i64 0, i32 0
  %177 = tail call i32 @_ZN5blink17FlatTreeTraversal5IndexERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %61) #9
  %178 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %176, %"class.blink::Node"** %178, align 8
  %179 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %177, i32* %179, align 8
  %180 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %180, align 4
  br label %331

181:                                              ; preds = %172
  %182 = load i32, i32* %25, align 8
  %183 = and i32 %182, 12
  switch i32 %183, label %293 [
    i32 8, label %184
    i32 4, label %250
  ]

184:                                              ; preds = %181
  %185 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 3, i32 0, i32 0
  %186 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %186, i64 0, i32 1, i32 0, i32 0
  %188 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %188, i64 0, i32 0
  %190 = icmp eq %"class.blink::Node"* %189, %4
  br i1 %190, label %191, label %293

191:                                              ; preds = %184
  %192 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %4) #9
  %193 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %192, i64 0, i32 0, i32 0
  %194 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %192, i64 0, i32 0, i32 0, i32 1
  %195 = load i32, i32* %194, align 8, !noalias !84
  %196 = and i32 %195, 12
  %197 = icmp eq i32 %196, 4
  br i1 %197, label %198, label %246

198:                                              ; preds = %191
  %199 = bitcast %"class.blink::Element"* %192 to i1 (%"class.blink::Node"*)***
  %200 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %199, align 8, !noalias !84
  %201 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %200, i64 41
  %202 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %201, align 8, !noalias !84
  %203 = tail call zeroext i1 %202(%"class.blink::Node"* %193) #9, !noalias !84
  %204 = icmp eq %"class.blink::Element"* %192, null
  %205 = xor i1 %203, true
  %206 = or i1 %204, %205
  br i1 %206, label %239, label %207

207:                                              ; preds = %198
  %208 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %193, i64 1
  %209 = bitcast %"class.blink::Node"* %208 to i8*
  %210 = load i8, i8* %209, align 8, !range !10, !noalias !84
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %231, label %212

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %193, i64 1, i32 0, i32 0, i32 1
  %214 = bitcast %"class.blink::TraceWrapperV8Reference"* %213 to %"class.blink::ParkableStringImpl"**
  %215 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %214, align 8, !noalias !84
  %216 = icmp eq %"class.blink::ParkableStringImpl"* %215, null
  br i1 %216, label %241, label %217

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0
  %219 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %218, align 8, !noalias !84
  %220 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %219, null
  br i1 %220, label %221, label %228

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %215, i64 0, i32 1, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8, !noalias !84
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 1
  %227 = load i32, i32* %226, align 4, !noalias !84
  br label %241

228:                                              ; preds = %217
  %229 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %219, i64 0, i32 8
  %230 = load i32, i32* %229, align 4, !noalias !84
  br label %241

231:                                              ; preds = %207
  %232 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %193, i64 1, i32 1
  %233 = bitcast i32* %232 to %"class.WTF::StringImpl"**
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8, !noalias !84
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %241, label %236

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 1
  %238 = load i32, i32* %237, align 4, !noalias !84
  br label %241

239:                                              ; preds = %198
  %240 = tail call i32 @_ZN5blink17FlatTreeTraversal13CountChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %193) #9, !noalias !84
  br label %241

241:                                              ; preds = %239, %236, %231, %228, %225, %221, %212
  %242 = phi i32 [ %240, %239 ], [ 0, %231 ], [ %238, %236 ], [ 0, %221 ], [ %227, %225 ], [ %230, %228 ], [ 0, %212 ]
  %243 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %193, %"class.blink::Node"** %243, align 8, !alias.scope !84
  %244 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %242, i32* %244, align 8, !alias.scope !84
  %245 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %245, align 4, !alias.scope !84
  br label %331

246:                                              ; preds = %191
  %247 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %193, %"class.blink::Node"** %247, align 8, !alias.scope !84
  %248 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 0, i32* %248, align 8, !alias.scope !84
  %249 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 3, i32* %249, align 4, !alias.scope !84
  br label %331

250:                                              ; preds = %181
  %251 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %13, align 8, !noalias !87
  %252 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %251, i64 41
  %253 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %252, align 8, !noalias !87
  %254 = tail call zeroext i1 %253(%"class.blink::Node"* %4) #9, !noalias !87
  br i1 %254, label %255, label %286

255:                                              ; preds = %250
  %256 = bitcast %"class.blink::Node"* %49 to i8*
  %257 = load i8, i8* %256, align 8, !range !10, !noalias !87
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %278, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 0, i32 0, i32 1
  %261 = bitcast %"class.blink::TraceWrapperV8Reference"* %260 to %"class.blink::ParkableStringImpl"**
  %262 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %261, align 8, !noalias !87
  %263 = icmp eq %"class.blink::ParkableStringImpl"* %262, null
  br i1 %263, label %288, label %264

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0
  %266 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %265, align 8, !noalias !87
  %267 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %266, null
  br i1 %267, label %268, label %275

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %262, i64 0, i32 1, i32 0, i32 0
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %269, align 8, !noalias !87
  %271 = icmp eq %"class.WTF::StringImpl"* %270, null
  br i1 %271, label %288, label %272

272:                                              ; preds = %268
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 1
  %274 = load i32, i32* %273, align 4, !noalias !87
  br label %288

275:                                              ; preds = %264
  %276 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %266, i64 0, i32 8
  %277 = load i32, i32* %276, align 4, !noalias !87
  br label %288

278:                                              ; preds = %255
  %279 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 1
  %280 = bitcast i32* %279 to %"class.WTF::StringImpl"**
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8, !noalias !87
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %288, label %283

283:                                              ; preds = %278
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 1
  %285 = load i32, i32* %284, align 4, !noalias !87
  br label %288

286:                                              ; preds = %250
  %287 = tail call i32 @_ZN5blink17FlatTreeTraversal13CountChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %4) #9, !noalias !87
  br label %288

288:                                              ; preds = %286, %283, %278, %275, %272, %268, %259
  %289 = phi i32 [ %287, %286 ], [ 0, %278 ], [ %285, %283 ], [ 0, %268 ], [ %274, %272 ], [ %277, %275 ], [ 0, %259 ]
  %290 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %290, align 8, !alias.scope !87
  %291 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 %289, i32* %291, align 8, !alias.scope !87
  %292 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 0, i32* %292, align 4, !alias.scope !87
  br label %331

293:                                              ; preds = %181, %184
  %294 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %294, align 8, !alias.scope !87
  %295 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 0, i32* %295, align 8, !alias.scope !87
  %296 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 3, i32* %296, align 4, !alias.scope !87
  br label %331

297:                                              ; preds = %8
  %298 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 1
  %299 = load i32, i32* %298, align 8
  %300 = and i32 %299, 12
  %301 = icmp eq i32 %300, 8
  br i1 %301, label %302, label %316

302:                                              ; preds = %297
  %303 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 3, i32 0, i32 0
  %304 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %303, align 8
  %305 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %304, i64 0, i32 1, i32 0, i32 0
  %306 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %305, align 8
  %307 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %306, i64 0, i32 0
  %308 = icmp eq %"class.blink::Node"* %307, %4
  br i1 %308, label %309, label %316

309:                                              ; preds = %302
  %310 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* nonnull %4) #9
  %311 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %310, i64 0, i32 0, i32 0
  %312 = load i32, i32* %9, align 4
  %313 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %311, %"class.blink::Node"** %313, align 8
  %314 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 0, i32* %314, align 8
  %315 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 %312, i32* %315, align 4
  br label %331

316:                                              ; preds = %297, %302
  %317 = add i32 %10, -1
  %318 = icmp ult i32 %317, 2
  br i1 %318, label %319, label %326

319:                                              ; preds = %316
  %320 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %4) #9
  %321 = icmp eq %"class.blink::ContainerNode"* %320, null
  br i1 %321, label %324, label %322

322:                                              ; preds = %319
  %323 = load i32, i32* %9, align 4
  br label %326

324:                                              ; preds = %319
  %325 = bitcast %"class.blink::PositionTemplate.606"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %325, i8 0, i64 16, i1 false) #9
  br label %331

326:                                              ; preds = %322, %316
  %327 = phi i32 [ %323, %322 ], [ %10, %316 ]
  %328 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %328, align 8
  %329 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  store i32 0, i32* %329, align 8
  %330 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  store i32 %327, i32* %330, align 4
  br label %331

331:                                              ; preds = %293, %288, %246, %241, %136, %131, %19, %309, %324, %326, %162, %168, %175, %40, %6
  ret void
}

declare %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink20ToPositionInFlatTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.606"* noalias nocapture sret, %"class.blink::PositionTemplate.606"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 {
  %3 = bitcast %"class.blink::PositionTemplate.606"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.blink::PositionTemplate.606"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %9, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink19ToPositionInDOMTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* noalias nocapture sret, %"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 {
  %3 = bitcast %"class.blink::PositionTemplate"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.blink::PositionTemplate"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ToPositionInDOMTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate.606"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #9
  br label %166

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %164 [
    i32 3, label %11
    i32 2, label %70
    i32 1, label %74
    i32 0, label %78
  ]

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 1
  %13 = load i32, i32* %12, align 8, !noalias !90
  %14 = and i32 %13, 12
  %15 = icmp eq i32 %14, 4
  br i1 %15, label %16, label %66

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::Node"* %4 to i1 (%"class.blink::Node"*)***
  %18 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %17, align 8, !noalias !90
  %19 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %18, i64 41
  %20 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %19, align 8, !noalias !90
  %21 = tail call zeroext i1 %20(%"class.blink::Node"* nonnull %4) #9, !noalias !90
  br i1 %21, label %22, label %54

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1
  %24 = bitcast %"class.blink::Node"* %23 to i8*
  %25 = load i8, i8* %24, align 8, !range !10, !noalias !90
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %46, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 0, i32 0, i32 1
  %29 = bitcast %"class.blink::TraceWrapperV8Reference"* %28 to %"class.blink::ParkableStringImpl"**
  %30 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %29, align 8, !noalias !90
  %31 = icmp eq %"class.blink::ParkableStringImpl"* %30, null
  br i1 %31, label %61, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0
  %34 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %33, align 8, !noalias !90
  %35 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %34, null
  br i1 %35, label %36, label %43

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %30, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8, !noalias !90
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %61, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %42 = load i32, i32* %41, align 4, !noalias !90
  br label %61

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %34, i64 0, i32 8
  %45 = load i32, i32* %44, align 4, !noalias !90
  br label %61

46:                                               ; preds = %22
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 1
  %48 = bitcast i32* %47 to %"class.WTF::StringImpl"**
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8, !noalias !90
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %53 = load i32, i32* %52, align 4, !noalias !90
  br label %61

54:                                               ; preds = %16
  %55 = load i32, i32* %12, align 8, !noalias !90
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.blink::Node"* %4 to %"class.blink::ContainerNode"*
  %60 = tail call i32 @_ZNK5blink13ContainerNode13CountChildrenEv(%"class.blink::ContainerNode"* nonnull %59) #9, !noalias !90
  br label %61

61:                                               ; preds = %58, %54, %51, %46, %43, %40, %36, %27
  %62 = phi i32 [ %60, %58 ], [ 0, %54 ], [ 0, %46 ], [ %53, %51 ], [ 0, %36 ], [ %42, %40 ], [ %45, %43 ], [ 0, %27 ]
  %63 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %63, align 8, !alias.scope !90
  %64 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 %62, i32* %64, align 8, !alias.scope !90
  %65 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %65, align 4, !alias.scope !90
  br label %166

66:                                               ; preds = %11
  %67 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %67, align 8, !alias.scope !90
  %68 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 0, i32* %68, align 8, !alias.scope !90
  %69 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 3, i32* %69, align 4, !alias.scope !90
  br label %166

70:                                               ; preds = %8
  %71 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %71, align 8, !alias.scope !93
  %72 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 0, i32* %72, align 8, !alias.scope !93
  %73 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 2, i32* %73, align 4, !alias.scope !93
  br label %166

74:                                               ; preds = %8
  %75 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %75, align 8, !alias.scope !96
  %76 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 0, i32* %76, align 8, !alias.scope !96
  %77 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 1, i32* %77, align 4, !alias.scope !96
  br label %166

78:                                               ; preds = %8
  %79 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = bitcast %"class.blink::Node"* %4 to i1 (%"class.blink::Node"*)***
  %82 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %81, align 8
  %83 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %82, i64 41
  %84 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %83, align 8
  %85 = tail call zeroext i1 %84(%"class.blink::Node"* nonnull %4) #9
  br i1 %85, label %86, label %90

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %87, align 8
  %88 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 %80, i32* %88, align 8
  %89 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %89, align 4
  br label %166

90:                                               ; preds = %78
  %91 = icmp eq i32 %80, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %93, align 8, !alias.scope !99
  %94 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 0, i32* %94, align 8, !alias.scope !99
  %95 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %95, align 4, !alias.scope !99
  br label %166

96:                                               ; preds = %90
  %97 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal7ChildAtERKNS_4NodeEj(%"class.blink::Node"* nonnull dereferenceable(64) %4, i32 %80) #9
  %98 = icmp eq %"class.blink::Node"* %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %96
  %100 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %97) #9
  %101 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %100, i64 0, i32 0
  %102 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %97) #9
  %103 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %101, %"class.blink::Node"** %103, align 8
  %104 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 %102, i32* %104, align 8
  %105 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %105, align 4
  br label %166

106:                                              ; preds = %96
  %107 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 1
  %108 = load i32, i32* %107, align 8, !noalias !102
  %109 = and i32 %108, 12
  %110 = icmp eq i32 %109, 4
  br i1 %110, label %111, label %160

111:                                              ; preds = %106
  %112 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %81, align 8, !noalias !102
  %113 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %112, i64 41
  %114 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %113, align 8, !noalias !102
  %115 = tail call zeroext i1 %114(%"class.blink::Node"* nonnull %4) #9, !noalias !102
  br i1 %115, label %116, label %148

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1
  %118 = bitcast %"class.blink::Node"* %117 to i8*
  %119 = load i8, i8* %118, align 8, !range !10, !noalias !102
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %140, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 0, i32 0, i32 1
  %123 = bitcast %"class.blink::TraceWrapperV8Reference"* %122 to %"class.blink::ParkableStringImpl"**
  %124 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %123, align 8, !noalias !102
  %125 = icmp eq %"class.blink::ParkableStringImpl"* %124, null
  br i1 %125, label %155, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0
  %128 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %127, align 8, !noalias !102
  %129 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %128, null
  br i1 %129, label %130, label %137

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %124, i64 0, i32 1, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8, !noalias !102
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %155, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 1
  %136 = load i32, i32* %135, align 4, !noalias !102
  br label %155

137:                                              ; preds = %126
  %138 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %128, i64 0, i32 8
  %139 = load i32, i32* %138, align 4, !noalias !102
  br label %155

140:                                              ; preds = %116
  %141 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 1
  %142 = bitcast i32* %141 to %"class.WTF::StringImpl"**
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8, !noalias !102
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 1
  %147 = load i32, i32* %146, align 4, !noalias !102
  br label %155

148:                                              ; preds = %111
  %149 = load i32, i32* %107, align 8, !noalias !102
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %148
  %153 = bitcast %"class.blink::Node"* %4 to %"class.blink::ContainerNode"*
  %154 = tail call i32 @_ZNK5blink13ContainerNode13CountChildrenEv(%"class.blink::ContainerNode"* nonnull %153) #9, !noalias !102
  br label %155

155:                                              ; preds = %152, %148, %145, %140, %137, %134, %130, %121
  %156 = phi i32 [ %154, %152 ], [ 0, %148 ], [ 0, %140 ], [ %147, %145 ], [ 0, %130 ], [ %136, %134 ], [ %139, %137 ], [ 0, %121 ]
  %157 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %157, align 8, !alias.scope !102
  %158 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 %156, i32* %158, align 8, !alias.scope !102
  %159 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 0, i32* %159, align 4, !alias.scope !102
  br label %166

160:                                              ; preds = %106
  %161 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %161, align 8, !alias.scope !102
  %162 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  store i32 0, i32* %162, align 8, !alias.scope !102
  %163 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  store i32 3, i32* %163, align 4, !alias.scope !102
  br label %166

164:                                              ; preds = %8
  %165 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 16, i1 false) #9
  br label %166

166:                                              ; preds = %160, %155, %66, %61, %70, %74, %164, %99, %92, %86, %6
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_18PositionAnchorTypeE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #0 {
  switch i32 %1, label %11 [
    i32 2, label %3
    i32 3, label %5
    i32 1, label %7
    i32 0, label %9
  ]

3:                                                ; preds = %2
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i64 11) #9
  br label %14

5:                                                ; preds = %2
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13) #9
  br label %14

7:                                                ; preds = %2
  %8 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i64 12) #9
  br label %14

9:                                                ; preds = %2
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 14) #9
  br label %14

11:                                               ; preds = %2
  %12 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i64 11) #9
  %13 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %12, i32 %1) #9
  br label %14

14:                                               ; preds = %11, %9, %7, %5, %3
  %15 = phi %"class.std::__1::basic_ostream"* [ %13, %11 ], [ %10, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ]
  ret %"class.std::__1::basic_ostream"* %15
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i64 4) #9
  br label %50

10:                                               ; preds = %2
  %11 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEPKNS_4NodeE(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, %"class.blink::Node"* nonnull %6) #9
  %12 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #9
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #9
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = tail call %"class.WTF::StringImpl"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27ToAnchorTypeAndOffsetStringEv(%"class.blink::PositionTemplate"* %1) #9
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* nonnull %4, i32 0) #9
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %19 to i64
  %26 = select i1 %20, i8* %22, i8* %13
  %27 = select i1 %20, i64 %24, i64 %25
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* %26, i64 %27) #9
  %29 = load i8, i8* %18, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %10
  %32 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %31, %10
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #9
  br label %49

49:                                               ; preds = %48, %45, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #9
  br label %50

50:                                               ; preds = %8, %49
  %51 = phi %"class.std::__1::basic_ostream"* [ %9, %8 ], [ %28, %49 ]
  ret %"class.std::__1::basic_ostream"* %51
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::PositionTemplate.606"* dereferenceable(16)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::PositionTemplate.606", %"class.blink::PositionTemplate.606"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i64 4) #9
  br label %50

10:                                               ; preds = %2
  %11 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEPKNS_4NodeE(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, %"class.blink::Node"* nonnull %6) #9
  %12 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #9
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #9
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = tail call %"class.WTF::StringImpl"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE27ToAnchorTypeAndOffsetStringEv(%"class.blink::PositionTemplate.606"* %1) #9
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* nonnull %4, i32 0) #9
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %19 to i64
  %26 = select i1 %20, i8* %22, i8* %13
  %27 = select i1 %20, i64 %24, i64 %25
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* %26, i64 %27) #9
  %29 = load i8, i8* %18, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %10
  %32 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %31, %10
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #9
  br label %49

49:                                               ; preds = %48, %45, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #9
  br label %50

50:                                               ; preds = %8, %49
  %51 = phi %"class.std::__1::basic_ostream"* [ %9, %8 ], [ %28, %49 ]
  ret %"class.std::__1::basic_ostream"* %51
}

declare i32 @_ZNK5blink13ContainerNode13CountChildrenEv(%"class.blink::ContainerNode"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !10
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEPKNS_4NodeE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CreateWithoutValidationERKNS_4NodeEi: argument 0"}
!4 = distinct !{!4, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CreateWithoutValidationERKNS_4NodeEi"}
!5 = distinct !{!5, !6, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE33CreateWithoutValidationDeprecatedERKNS_4NodeEi: argument 0"}
!6 = distinct !{!6, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE33CreateWithoutValidationDeprecatedERKNS_4NodeEi"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CreateWithoutValidationERKNS_4NodeEi: argument 0"}
!9 = distinct !{!9, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CreateWithoutValidationERKNS_4NodeEi"}
!10 = !{i8 0, i8 2}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17InParentAfterNodeERKNS_4NodeE: argument 0"}
!16 = distinct !{!16, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17InParentAfterNodeERKNS_4NodeE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16ToOffsetInAnchorEv: argument 0"}
!19 = distinct !{!19, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16ToOffsetInAnchorEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16ToOffsetInAnchorEv: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16ToOffsetInAnchorEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16ToOffsetInAnchorEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16ToOffsetInAnchorEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16ToOffsetInAnchorEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16ToOffsetInAnchorEv"}
!29 = !{!30, !32}
!30 = distinct !{!30, !31, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE: argument 0"}
!31 = distinct !{!31, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE"}
!32 = distinct !{!32, !33, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE: argument 0"}
!33 = distinct !{!33, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE: argument 0"}
!36 = distinct !{!36, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE"}
!37 = !{!38, !35}
!38 = distinct !{!38, !39, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE: argument 0"}
!39 = distinct !{!39, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE"}
!40 = !{!"branch_weights", i32 1, i32 2000}
!41 = !{!42, !44}
!42 = distinct !{!42, !43, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE23CreateWithoutValidationERKNS_4NodeEi: argument 0"}
!43 = distinct !{!43, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE23CreateWithoutValidationERKNS_4NodeEi"}
!44 = distinct !{!44, !45, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE33CreateWithoutValidationDeprecatedERKNS_4NodeEi: argument 0"}
!45 = distinct !{!45, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE33CreateWithoutValidationDeprecatedERKNS_4NodeEi"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE23CreateWithoutValidationERKNS_4NodeEi: argument 0"}
!48 = distinct !{!48, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE23CreateWithoutValidationERKNS_4NodeEi"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE: argument 0"}
!51 = distinct !{!51, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE17InParentAfterNodeERKNS_4NodeE: argument 0"}
!54 = distinct !{!54, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE17InParentAfterNodeERKNS_4NodeE"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16ToOffsetInAnchorEv: argument 0"}
!57 = distinct !{!57, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16ToOffsetInAnchorEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16ToOffsetInAnchorEv: argument 0"}
!60 = distinct !{!60, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16ToOffsetInAnchorEv"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16ToOffsetInAnchorEv: argument 0"}
!63 = distinct !{!63, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16ToOffsetInAnchorEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16ToOffsetInAnchorEv: argument 0"}
!66 = distinct !{!66, !"_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE16ToOffsetInAnchorEv"}
!67 = !{!68, !70}
!68 = distinct !{!68, !69, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE: argument 0"}
!69 = distinct !{!69, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE"}
!70 = distinct !{!70, !71, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE10BeforeNodeERKNS_4NodeE: argument 0"}
!71 = distinct !{!71, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE10BeforeNodeERKNS_4NodeE"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18LastPositionInNodeERKNS_4NodeE: argument 0"}
!74 = distinct !{!74, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18LastPositionInNodeERKNS_4NodeE"}
!75 = !{!76, !73}
!76 = distinct !{!76, !77, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9AfterNodeERKNS_4NodeE: argument 0"}
!77 = distinct !{!77, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9AfterNodeERKNS_4NodeE"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE: argument 0"}
!80 = distinct !{!80, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18LastPositionInNodeERKNS_4NodeE: argument 0"}
!83 = distinct !{!83, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18LastPositionInNodeERKNS_4NodeE"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18LastPositionInNodeERKNS_4NodeE: argument 0"}
!86 = distinct !{!86, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18LastPositionInNodeERKNS_4NodeE"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18LastPositionInNodeERKNS_4NodeE: argument 0"}
!89 = distinct !{!89, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE18LastPositionInNodeERKNS_4NodeE"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE: argument 0"}
!92 = distinct !{!92, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE: argument 0"}
!95 = distinct !{!95, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE: argument 0"}
!98 = distinct !{!98, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE: argument 0"}
!101 = distinct !{!101, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE: argument 0"}
!104 = distinct !{!104, !"_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE"}
