; ModuleID = '../../third_party/icu/source/common/ubidi.cpp'
source_filename = "../../third_party/icu/source/common/ubidi.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ImpTabPair = type { [2 x i8*], [2 x i8*] }
%struct.UBiDi = type { %struct.UBiDi*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, %struct.Opening*, %struct.Para*, %struct.Run*, %struct.Isolate*, i8, i8, i8*, i8*, i8, i32, i32, i8, i8, i8, i16*, i32, i16*, i32, %struct.ImpTabPair*, i32, i32, i32, i32, i32, %struct.Para*, [10 x %struct.Para], i32, %struct.Run*, [1 x %struct.Run], i32, %struct.Isolate*, [5 x %struct.Isolate], %struct.InsertPoints, i32, i32 (i8*, i32)*, i8* }
%struct.Opening = type { i32, i32, i32, i16, i32, i8 }
%struct.Para = type { i32, i32 }
%struct.Run = type { i32, i32, i32 }
%struct.Isolate = type { i32, i32, i32, i16 }
%struct.InsertPoints = type { i32, i32, i32, i32, %struct.Point* }
%struct.Point = type { i32, i32 }
%union.BidiMemoryForAllocation = type { i8* }
%struct.BracketData = type { %struct.UBiDi*, [20 x %struct.Opening], %struct.Opening*, i32, i32, [127 x %struct.IsoRun], i8 }
%struct.IsoRun = type { i32, i16, i16, i8, i8, i8, i32 }
%struct.LevState = type { [0 x [8 x i8]]*, [0 x i8]*, i32, i32, i32, i32, i32, i8 }

@_ZL6flagLR = internal unnamed_addr constant [2 x i32] [i32 1, i32 2], align 4
@_ZL14impTab_DEFAULT = internal constant %struct.ImpTabPair { [2 x i8*] [i8* getelementptr inbounds ([6 x [8 x i8]], [6 x [8 x i8]]* @_ZL15impTabL_DEFAULT, i32 0, i32 0, i32 0), i8* getelementptr inbounds ([6 x [8 x i8]], [6 x [8 x i8]]* @_ZL15impTabR_DEFAULT, i32 0, i32 0, i32 0)], [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZL7impAct0, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZL7impAct0, i32 0, i32 0)] }, align 8
@_ZL22impTab_NUMBERS_SPECIAL = internal constant %struct.ImpTabPair { [2 x i8*] [i8* getelementptr inbounds ([5 x [8 x i8]], [5 x [8 x i8]]* @_ZL23impTabL_NUMBERS_SPECIAL, i32 0, i32 0, i32 0), i8* getelementptr inbounds ([6 x [8 x i8]], [6 x [8 x i8]]* @_ZL15impTabR_DEFAULT, i32 0, i32 0, i32 0)], [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZL7impAct0, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZL7impAct0, i32 0, i32 0)] }, align 8
@_ZL27impTab_GROUP_NUMBERS_WITH_R = internal constant %struct.ImpTabPair { [2 x i8*] [i8* getelementptr inbounds ([6 x [8 x i8]], [6 x [8 x i8]]* @_ZL28impTabL_GROUP_NUMBERS_WITH_R, i32 0, i32 0, i32 0), i8* getelementptr inbounds ([5 x [8 x i8]], [5 x [8 x i8]]* @_ZL28impTabR_GROUP_NUMBERS_WITH_R, i32 0, i32 0, i32 0)], [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZL7impAct0, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZL7impAct0, i32 0, i32 0)] }, align 8
@_ZL27impTab_INVERSE_NUMBERS_AS_L = internal constant %struct.ImpTabPair { [2 x i8*] [i8* getelementptr inbounds ([6 x [8 x i8]], [6 x [8 x i8]]* @_ZL28impTabL_INVERSE_NUMBERS_AS_L, i32 0, i32 0, i32 0), i8* getelementptr inbounds ([6 x [8 x i8]], [6 x [8 x i8]]* @_ZL28impTabR_INVERSE_NUMBERS_AS_L, i32 0, i32 0, i32 0)], [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZL7impAct0, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZL7impAct0, i32 0, i32 0)] }, align 8
@_ZL37impTab_INVERSE_LIKE_DIRECT_WITH_MARKS = internal constant %struct.ImpTabPair { [2 x i8*] [i8* getelementptr inbounds ([7 x [8 x i8]], [7 x [8 x i8]]* @_ZL38impTabL_INVERSE_LIKE_DIRECT_WITH_MARKS, i32 0, i32 0, i32 0), i8* getelementptr inbounds ([7 x [8 x i8]], [7 x [8 x i8]]* @_ZL38impTabR_INVERSE_LIKE_DIRECT_WITH_MARKS, i32 0, i32 0, i32 0)], [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZL7impAct2, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZL7impAct3, i32 0, i32 0)] }, align 8
@_ZL26impTab_INVERSE_LIKE_DIRECT = internal constant %struct.ImpTabPair { [2 x i8*] [i8* getelementptr inbounds ([6 x [8 x i8]], [6 x [8 x i8]]* @_ZL15impTabL_DEFAULT, i32 0, i32 0, i32 0), i8* getelementptr inbounds ([7 x [8 x i8]], [7 x [8 x i8]]* @_ZL27impTabR_INVERSE_LIKE_DIRECT, i32 0, i32 0, i32 0)], [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZL7impAct0, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZL7impAct1, i32 0, i32 0)] }, align 8
@_ZL45impTab_INVERSE_FOR_NUMBERS_SPECIAL_WITH_MARKS = internal constant %struct.ImpTabPair { [2 x i8*] [i8* getelementptr inbounds ([5 x [8 x i8]], [5 x [8 x i8]]* @_ZL46impTabL_INVERSE_FOR_NUMBERS_SPECIAL_WITH_MARKS, i32 0, i32 0, i32 0), i8* getelementptr inbounds ([7 x [8 x i8]], [7 x [8 x i8]]* @_ZL38impTabR_INVERSE_LIKE_DIRECT_WITH_MARKS, i32 0, i32 0, i32 0)], [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZL7impAct2, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZL7impAct3, i32 0, i32 0)] }, align 8
@_ZL34impTab_INVERSE_FOR_NUMBERS_SPECIAL = internal constant %struct.ImpTabPair { [2 x i8*] [i8* getelementptr inbounds ([5 x [8 x i8]], [5 x [8 x i8]]* @_ZL23impTabL_NUMBERS_SPECIAL, i32 0, i32 0, i32 0), i8* getelementptr inbounds ([7 x [8 x i8]], [7 x [8 x i8]]* @_ZL27impTabR_INVERSE_LIKE_DIRECT, i32 0, i32 0, i32 0)], [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZL7impAct0, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZL7impAct1, i32 0, i32 0)] }, align 8
@_ZL5flagO = internal unnamed_addr constant [2 x i32] [i32 4096, i32 32768], align 4
@_ZL5flagE = internal unnamed_addr constant [2 x i32] [i32 2048, i32 16384], align 4
@_ZL15impTabL_DEFAULT = internal constant [6 x [8 x i8]] [[8 x i8] c"\00\01\00\02\00\00\00\00", [8 x i8] c"\00\01\03\03\14\14\00\01", [8 x i8] c"\00\01\00\02\15\15\00\02", [8 x i8] c"\00\01\03\03\14\14\00\02", [8 x i8] c"\00!33\04\04\00\00", [8 x i8] c"\00!\002\05\05\00\00"], align 16
@_ZL15impTabR_DEFAULT = internal constant [6 x [8 x i8]] [[8 x i8] c"\01\00\02\02\00\00\00\00", [8 x i8] c"\01\00\01\03\14\14\00\01", [8 x i8] c"\01\00\02\02\00\00\00\01", [8 x i8] c"\01\00\01\03\05\05\00\01", [8 x i8] c"!\00!\03\04\04\00\00", [8 x i8] c"\01\00\01\03\05\05\00\00"], align 16
@_ZL7impAct0 = internal constant [5 x i8] c"\00\01\02\03\04", align 1
@_ZL23impTabL_NUMBERS_SPECIAL = internal constant [5 x [8 x i8]] [[8 x i8] c"\00\02\11\11\00\00\00\00", [8 x i8] c"\00B\01\01\00\00\00\00", [8 x i8] c"\00\02\04\04\13\13\00\01", [8 x i8] c"\00\2244\03\03\00\00", [8 x i8] c"\00\02\04\04\13\13\00\02"], align 16
@_ZL28impTabL_GROUP_NUMBERS_WITH_R = internal constant [6 x [8 x i8]] [[8 x i8] c"\00\03\11\11\00\00\00\00", [8 x i8] c" \03\01\01\02  \02", [8 x i8] c" \03\01\01\02  \01", [8 x i8] c"\00\03\05\05\14\00\00\01", [8 x i8] c" \03\05\05\04  \01", [8 x i8] c"\00\03\05\05\14\00\00\02"], align 16
@_ZL28impTabR_GROUP_NUMBERS_WITH_R = internal constant [5 x [8 x i8]] [[8 x i8] c"\02\00\01\01\00\00\00\00", [8 x i8] c"\02\00\01\01\00\00\00\01", [8 x i8] c"\02\00\14\14\13\00\00\01", [8 x i8] c"\22\00\04\04\03\00\00\00", [8 x i8] c"\22\00\04\04\03\00\00\01"], align 16
@_ZL28impTabL_INVERSE_NUMBERS_AS_L = internal constant [6 x [8 x i8]] [[8 x i8] c"\00\01\00\00\00\00\00\00", [8 x i8] c"\00\01\00\00\14\14\00\01", [8 x i8] c"\00\01\00\00\15\15\00\02", [8 x i8] c"\00\01\00\00\14\14\00\02", [8 x i8] c" \01  \04\04 \01", [8 x i8] c" \01  \05\05 \01"], align 16
@_ZL28impTabR_INVERSE_NUMBERS_AS_L = internal constant [6 x [8 x i8]] [[8 x i8] c"\01\00\01\01\00\00\00\00", [8 x i8] c"\01\00\01\01\14\14\00\01", [8 x i8] c"\01\00\01\01\00\00\00\01", [8 x i8] c"\01\00\01\01\05\05\00\01", [8 x i8] c"!\00!!\04\04\00\00", [8 x i8] c"\01\00\01\01\05\05\00\00"], align 16
@_ZL38impTabL_INVERSE_LIKE_DIRECT_WITH_MARKS = internal constant [7 x [8 x i8]] [[8 x i8] c"\00c\00\01\00\00\00\00", [8 x i8] c"\00c\00\01\120\00\04", [8 x i8] c" c \01\020 \03", [8 x i8] c"\00cUV\140\00\03", [8 x i8] c"0CUV\0400\03", [8 x i8] c"0C\05V\1400\04", [8 x i8] c"0CU\06\1400\04"], align 16
@_ZL38impTabR_INVERSE_LIKE_DIRECT_WITH_MARKS = internal constant [7 x [8 x i8]] [[8 x i8] c"\13\00\01\01\00\00\00\00", [8 x i8] c"#\00\01\01\02@\00\01", [8 x i8] c"#\00\01\01\02@\00\00", [8 x i8] c"\03\00\036\14@\00\01", [8 x i8] c"S@\056\04@@\00", [8 x i8] c"S@\056\04@@\01", [8 x i8] c"S@\06\06\04@@\03"], align 16
@_ZL7impAct2 = internal constant [7 x i8] c"\00\01\02\05\06\07\08", align 1
@_ZL7impAct3 = internal constant [6 x i8] c"\00\01\09\0A\0B\0C", align 1
@_ZL27impTabR_INVERSE_LIKE_DIRECT = internal constant [7 x [8 x i8]] [[8 x i8] c"\01\00\02\02\00\00\00\00", [8 x i8] c"\01\00\01\02\13\13\00\01", [8 x i8] c"\01\00\02\02\00\00\00\01", [8 x i8] c"!0\06\04\03\030\00", [8 x i8] c"!0\06\04\05\050\03", [8 x i8] c"!0\06\04\05\050\02", [8 x i8] c"!0\06\04\03\030\01"], align 16
@_ZL7impAct1 = internal constant [4 x i8] c"\00\01\0D\0E", align 1
@_ZL46impTabL_INVERSE_FOR_NUMBERS_SPECIAL_WITH_MARKS = internal constant [5 x [8 x i8]] [[8 x i8] c"\00b\01\01\00\00\00\00", [8 x i8] c"\00b\01\01\000\00\04", [8 x i8] c"\00bTT\130\00\03", [8 x i8] c"0BTT\0300\03", [8 x i8] c"0B\04\04\1300\04"], align 16
@_ZL9groupProp = internal unnamed_addr constant [25 x i8] c"\00\01\02\07\08\03\09\06\05\04\04\0A\0A\0C\0A\0A\0A\0B\0A\04\04\04\04\0D\0E", align 16
@_ZL11impTabProps = internal unnamed_addr constant [24 x [16 x i8]] [[16 x i8] c"\01\02\04\05\07\0F\11\07\09\07\00\07\03\12\15\04", [16 x i8] c"\01\22$%'/1')'\01\01#25\00", [16 x i8] c"!\02$%'/1')'\02\02#25\01", [16 x i8] c"!\22&&(01(((\03\03\0325\01", [16 x i8] c"!\22\04%'/1J\0BJ\04\04#\12\15\02", [16 x i8] c"!\22$\05'/1')L\05\05#25\03", [16 x i8] c"!\22\06\06(01((M\06\06#\12\15\03", [16 x i8] c"!\22$%\07/1\07N\07\07\07#25\04", [16 x i8] c"!\22&&\0801\08\08\08\08\08#25\04", [16 x i8] c"!\22\04%\07/1\07\09\07\09\09#\12\15\04", [16 x i8] c"ab\04e\87oq\87\8E\87\0A\87c\12\15\02", [16 x i8] c"!\22\04%'/1'\0B'\0B\0B#\12\15\02", [16 x i8] c"abd\05\87oq\87\8E\87\0C\87cru\03", [16 x i8] c"ab\06\06\88pq\88\88\88\0D\88c\12\15\03", [16 x i8] c"!\22\84%\07/1\07\0E\07\0E\0E#\92\95\04", [16 x i8] c"!\22$%'\0F1')'\0F'#25\05", [16 x i8] c"!\22&&(\101(((\10(#25\05", [16 x i8] c"!\22$%'/\11')'\11'#25\06", [16 x i8] c"!\22\12%'/1S\14S\12\12#\12\15\00", [16 x i8] c"ab\12e\87oq\87\8E\87\13\87c\12\15\00", [16 x i8] c"!\22\12%'/1'\14'\14\14#\12\15\00", [16 x i8] c"!\22\15%'/1V\17V\15\15#\12\15\03", [16 x i8] c"ab\15e\87oq\87\8E\87\16\87c\12\15\03", [16 x i8] c"!\22\15%'/1'\17'\17\17#\12\15\03"], align 16

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UBiDi* @ubidi_open_69() local_unnamed_addr #0 {
  %1 = tail call noalias i8* @uprv_malloc_69(i64 464) #10
  %2 = icmp eq i8* %1, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %0
  %4 = bitcast i8* %1 to %struct.UBiDi*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 464, i1 false) #11
  %5 = getelementptr inbounds i8, i8* %1, i64 104
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 105
  store i8 1, i8* %6, align 1
  br label %7

7:                                                ; preds = %3, %0
  %8 = phi %struct.UBiDi* [ %4, %3 ], [ null, %0 ]
  ret %struct.UBiDi* %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UBiDi* @ubidi_openSized_69(i32, i32, i32*) local_unnamed_addr #0 {
  %4 = icmp eq i32* %2, null
  br i1 %4, label %87, label %5

5:                                                ; preds = %3
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %87

8:                                                ; preds = %5
  %9 = or i32 %1, %0
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  store i32 1, i32* %2, align 4
  br label %87

12:                                               ; preds = %8
  %13 = tail call noalias i8* @uprv_malloc_69(i64 464) #10
  %14 = bitcast i8* %13 to %struct.UBiDi*
  %15 = icmp eq i8* %13, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  store i32 7, i32* %2, align 4
  br label %87

17:                                               ; preds = %12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 464, i1 false)
  %18 = icmp sgt i32 %0, 0
  br i1 %18, label %19, label %50

19:                                               ; preds = %17
  %20 = getelementptr inbounds i8, i8* %13, i64 56
  %21 = bitcast i8* %20 to i8**
  %22 = sext i32 %0 to i64
  %23 = tail call noalias i8* @uprv_malloc_69(i64 %22) #10
  store i8* %23, i8** %21, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds i8, i8* %13, i64 28
  %27 = bitcast i8* %26 to i32*
  store i32 %0, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %13, i64 64
  %29 = bitcast i8* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds i8, i8* %13, i64 64
  %32 = getelementptr inbounds i8, i8* %13, i64 32
  %33 = bitcast i8* %32 to i32*
  %34 = bitcast i8* %31 to i8**
  %35 = icmp eq i8* %30, null
  br i1 %35, label %36, label %41

36:                                               ; preds = %25
  %37 = sext i32 %0 to i64
  %38 = tail call noalias i8* @uprv_malloc_69(i64 %37) #10
  store i8* %38, i8** %34, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %49, label %40

40:                                               ; preds = %36
  store i32 %0, i32* %33, align 4
  br label %52

41:                                               ; preds = %25
  %42 = load i32, i32* %33, align 4
  %43 = icmp slt i32 %42, %0
  br i1 %43, label %44, label %52

44:                                               ; preds = %41
  %45 = sext i32 %0 to i64
  %46 = tail call i8* @uprv_realloc_69(i8* nonnull %30, i64 %45) #12
  %47 = icmp eq i8* %46, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %44
  store i8* %46, i8** %34, align 8
  store i32 %0, i32* %33, align 4
  br label %52

49:                                               ; preds = %44, %36, %19
  store i32 7, i32* %2, align 4
  br label %52

50:                                               ; preds = %17
  %51 = getelementptr inbounds i8, i8* %13, i64 104
  store i8 1, i8* %51, align 8
  br label %52

52:                                               ; preds = %48, %41, %40, %49, %50
  %53 = icmp sgt i32 %1, 0
  br i1 %53, label %54, label %81

54:                                               ; preds = %52
  %55 = icmp eq i32 %1, 1
  br i1 %55, label %56, label %59

56:                                               ; preds = %54
  %57 = getelementptr inbounds i8, i8* %13, i64 44
  %58 = bitcast i8* %57 to i32*
  store i32 12, i32* %58, align 4
  br label %83

59:                                               ; preds = %54
  %60 = getelementptr inbounds i8, i8* %13, i64 88
  %61 = getelementptr inbounds i8, i8* %13, i64 44
  %62 = bitcast i8* %61 to i32*
  %63 = mul i32 %1, 12
  %64 = bitcast i8* %60 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %67, label %72

67:                                               ; preds = %59
  %68 = sext i32 %63 to i64
  %69 = tail call noalias i8* @uprv_malloc_69(i64 %68) #10
  store i8* %69, i8** %64, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %80, label %71

71:                                               ; preds = %67
  store i32 %63, i32* %62, align 4
  br label %83

72:                                               ; preds = %59
  %73 = load i32, i32* %62, align 4
  %74 = icmp slt i32 %73, %63
  br i1 %74, label %75, label %83

75:                                               ; preds = %72
  %76 = sext i32 %63 to i64
  %77 = tail call i8* @uprv_realloc_69(i8* nonnull %65, i64 %76) #12
  %78 = icmp eq i8* %77, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %75
  store i8* %77, i8** %64, align 8
  store i32 %63, i32* %62, align 4
  br label %83

80:                                               ; preds = %67, %75
  store i32 7, i32* %2, align 4
  br label %86

81:                                               ; preds = %52
  %82 = getelementptr inbounds i8, i8* %13, i64 105
  store i8 1, i8* %82, align 1
  br label %83

83:                                               ; preds = %79, %72, %71, %56, %81
  %84 = load i32, i32* %2, align 4
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %80, %83
  tail call void @ubidi_close_69(%struct.UBiDi* nonnull %14)
  br label %87

87:                                               ; preds = %83, %3, %5, %86, %16, %11
  %88 = phi %struct.UBiDi* [ null, %11 ], [ null, %16 ], [ null, %86 ], [ null, %5 ], [ null, %3 ], [ %14, %83 ]
  ret %struct.UBiDi* %88
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ubidi_getMemory_69(%union.BidiMemoryForAllocation* nocapture, i32* nocapture, i8 signext, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %union.BidiMemoryForAllocation, %union.BidiMemoryForAllocation* %0, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %4
  %9 = icmp eq i8 %2, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %8
  %11 = sext i32 %3 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #10
  store i8* %12, i8** %5, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  store i32 %3, i32* %1, align 4
  br label %25

15:                                               ; preds = %4
  %16 = load i32, i32* %1, align 4
  %17 = icmp slt i32 %16, %3
  br i1 %17, label %18, label %25

18:                                               ; preds = %15
  %19 = icmp eq i8 %2, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %18
  %21 = sext i32 %3 to i64
  %22 = tail call i8* @uprv_realloc_69(i8* nonnull %6, i64 %21) #12
  %23 = icmp eq i8* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  store i8* %22, i8** %5, align 8
  store i32 %3, i32* %1, align 4
  br label %25

25:                                               ; preds = %24, %20, %18, %15, %8, %10, %14
  %26 = phi i8 [ 1, %14 ], [ 0, %10 ], [ 0, %8 ], [ 1, %15 ], [ 0, %18 ], [ 1, %24 ], [ 0, %20 ]
  ret i8 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ubidi_close_69(%struct.UBiDi*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.UBiDi* %0, null
  br i1 %2, label %46, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  store %struct.UBiDi* null, %struct.UBiDi** %4, align 8
  %5 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 11
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @uprv_free_69(i8* nonnull %6) #11
  br label %9

9:                                                ; preds = %3, %8
  %10 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 12
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @uprv_free_69(i8* nonnull %11) #11
  br label %14

14:                                               ; preds = %9, %13
  %15 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 13
  %16 = load %struct.Opening*, %struct.Opening** %15, align 8
  %17 = icmp eq %struct.Opening* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %struct.Opening* %16 to i8*
  tail call void @uprv_free_69(i8* nonnull %19) #11
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 14
  %22 = load %struct.Para*, %struct.Para** %21, align 8
  %23 = icmp eq %struct.Para* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = bitcast %struct.Para* %22 to i8*
  tail call void @uprv_free_69(i8* nonnull %25) #11
  br label %26

26:                                               ; preds = %20, %24
  %27 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 15
  %28 = load %struct.Run*, %struct.Run** %27, align 8
  %29 = icmp eq %struct.Run* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = bitcast %struct.Run* %28 to i8*
  tail call void @uprv_free_69(i8* nonnull %31) #11
  br label %32

32:                                               ; preds = %26, %30
  %33 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 16
  %34 = load %struct.Isolate*, %struct.Isolate** %33, align 8
  %35 = icmp eq %struct.Isolate* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = bitcast %struct.Isolate* %34 to i8*
  tail call void @uprv_free_69(i8* nonnull %37) #11
  br label %38

38:                                               ; preds = %32, %36
  %39 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %40 = load %struct.Point*, %struct.Point** %39, align 8
  %41 = icmp eq %struct.Point* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = bitcast %struct.Point* %40 to i8*
  tail call void @uprv_free_69(i8* nonnull %43) #11
  br label %44

44:                                               ; preds = %38, %42
  %45 = bitcast %struct.UBiDi* %0 to i8*
  tail call void @uprv_free_69(i8* nonnull %45) #11
  br label %46

46:                                               ; preds = %1, %44
  ret void
}

; Function Attrs: allocsize(1)
declare i8* @uprv_realloc_69(i8*, i64) local_unnamed_addr #3

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @ubidi_setInverse_69(%struct.UBiDi*, i8 signext) local_unnamed_addr #5 {
  %3 = icmp eq %struct.UBiDi* %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 21
  store i8 %1, i8* %5, align 8
  %6 = icmp eq i8 %1, 0
  %7 = select i1 %6, i32 0, i32 4
  %8 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 22
  store i32 %7, i32* %8, align 4
  br label %9

9:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @ubidi_isInverse_69(%struct.UBiDi* readonly) local_unnamed_addr #6 {
  %2 = icmp eq %struct.UBiDi* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 21
  %5 = load i8, i8* %4, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i8 [ %5, %3 ], [ 0, %1 ]
  ret i8 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @ubidi_setReorderingMode_69(%struct.UBiDi*, i32) local_unnamed_addr #5 {
  %3 = icmp ne %struct.UBiDi* %0, null
  %4 = icmp ult i32 %1, 7
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 22
  store i32 %1, i32* %7, align 4
  %8 = icmp eq i32 %1, 4
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 21
  store i8 %9, i8* %10, align 8
  br label %11

11:                                               ; preds = %6, %2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ubidi_getReorderingMode_69(%struct.UBiDi* readonly) local_unnamed_addr #6 {
  %2 = icmp eq %struct.UBiDi* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 22
  %5 = load i32, i32* %4, align 4
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 0, %1 ]
  ret i32 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @ubidi_setReorderingOptions_69(%struct.UBiDi*, i32) local_unnamed_addr #5 {
  %3 = icmp eq %struct.UBiDi* %0, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = and i32 %1, 2
  %6 = icmp eq i32 %5, 0
  %7 = and i32 %1, -2
  %8 = select i1 %6, i32 %1, i32 %7
  %9 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 23
  store i32 %8, i32* %9, align 8
  br label %10

10:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ubidi_getReorderingOptions_69(%struct.UBiDi* readonly) local_unnamed_addr #6 {
  %2 = icmp eq %struct.UBiDi* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 23
  %5 = load i32, i32* %4, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 0, %1 ]
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ubidi_getBaseDirection_69(i16*, i32) local_unnamed_addr #0 {
  %3 = icmp eq i16* %0, null
  %4 = icmp slt i32 %1, -1
  %5 = or i1 %3, %4
  br i1 %5, label %43, label %6

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, -1
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = tail call i32 @u_strlen_69(i16* nonnull %0) #11
  br label %10

10:                                               ; preds = %8, %6
  %11 = phi i32 [ %9, %8 ], [ %1, %6 ]
  br label %12

12:                                               ; preds = %37, %10
  %13 = phi i32 [ 0, %10 ], [ %38, %37 ]
  %14 = icmp slt i32 %13, %11
  br i1 %14, label %15, label %41

15:                                               ; preds = %12
  %16 = add nsw i32 %13, 1
  %17 = sext i32 %13 to i64
  %18 = getelementptr inbounds i16, i16* %0, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = and i32 %20, 64512
  %22 = icmp ne i32 %21, 55296
  %23 = icmp eq i32 %16, %11
  %24 = or i1 %23, %22
  br i1 %24, label %37, label %25

25:                                               ; preds = %15
  %26 = sext i32 %16 to i64
  %27 = getelementptr inbounds i16, i16* %0, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %29, 64512
  %31 = icmp eq i32 %30, 56320
  br i1 %31, label %32, label %37

32:                                               ; preds = %25
  %33 = add nsw i32 %13, 2
  %34 = shl nuw nsw i32 %20, 10
  %35 = add nsw i32 %34, -56613888
  %36 = add nsw i32 %35, %29
  br label %37

37:                                               ; preds = %15, %25, %32
  %38 = phi i32 [ %16, %15 ], [ %33, %32 ], [ %16, %25 ]
  %39 = phi i32 [ %20, %15 ], [ %36, %32 ], [ %20, %25 ]
  %40 = tail call i32 @u_charDirection_69(i32 %39) #11
  switch i32 %40, label %12 [
    i32 0, label %41
    i32 13, label %43
    i32 1, label %43
  ]

41:                                               ; preds = %12, %37
  %42 = phi i32 [ 3, %12 ], [ %40, %37 ]
  br label %43

43:                                               ; preds = %37, %37, %41, %2
  %44 = phi i32 [ 3, %2 ], [ %42, %41 ], [ 1, %37 ], [ 1, %37 ]
  ret i32 %44
}

declare i32 @u_strlen_69(i16*) local_unnamed_addr #4

declare i32 @u_charDirection_69(i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @ubidi_getParaLevelAtIndex_69(%struct.UBiDi* nocapture readonly, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 36
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  %6 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 37
  %7 = load %struct.Para*, %struct.Para** %6, align 8
  br i1 %5, label %8, label %18

8:                                                ; preds = %2
  %9 = sext i32 %4 to i64
  br label %10

10:                                               ; preds = %8, %15
  %11 = phi i64 [ 0, %8 ], [ %16, %15 ]
  %12 = getelementptr inbounds %struct.Para, %struct.Para* %7, i64 %11, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, %1
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = add nuw nsw i64 %11, 1
  %17 = icmp slt i64 %16, %9
  br i1 %17, label %10, label %18

18:                                               ; preds = %15, %2
  %19 = add nsw i32 %4, -1
  br label %22

20:                                               ; preds = %10
  %21 = trunc i64 %11 to i32
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi i32 [ %21, %20 ], [ %19, %18 ]
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.Para, %struct.Para* %7, i64 %24, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = trunc i32 %26 to i8
  ret i8 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ubidi_setContext_69(%struct.UBiDi*, i16*, i32, i16*, i32, i32*) local_unnamed_addr #0 {
  %7 = icmp eq i32* %5, null
  br i1 %7, label %41, label %8

8:                                                ; preds = %6
  %9 = load i32, i32* %5, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %41

11:                                               ; preds = %8
  %12 = icmp eq %struct.UBiDi* %0, null
  %13 = icmp slt i32 %2, -1
  %14 = or i1 %12, %13
  %15 = icmp slt i32 %4, -1
  %16 = or i1 %14, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %11
  %18 = icmp eq i16* %1, null
  %19 = icmp ne i32 %2, 0
  %20 = and i1 %18, %19
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = icmp eq i16* %3, null
  %23 = icmp ne i32 %4, 0
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %21, %17, %11
  store i32 1, i32* %5, align 4
  br label %41

26:                                               ; preds = %21
  %27 = icmp eq i32 %2, -1
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = tail call i32 @u_strlen_69(i16* %1) #11
  br label %30

30:                                               ; preds = %26, %28
  %31 = phi i32 [ %29, %28 ], [ %2, %26 ]
  %32 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 28
  store i32 %31, i32* %32, align 8
  %33 = icmp eq i32 %4, -1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = tail call i32 @u_strlen_69(i16* %3) #11
  br label %36

36:                                               ; preds = %30, %34
  %37 = phi i32 [ %35, %34 ], [ %4, %30 ]
  %38 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 30
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 27
  store i16* %1, i16** %39, align 8
  %40 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 29
  store i16* %3, i16** %40, align 8
  br label %41

41:                                               ; preds = %8, %6, %36, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ubidi_setPara_69(%struct.UBiDi*, i16*, i32, i8 zeroext, i8*, i32*) local_unnamed_addr #0 {
  %7 = alloca %struct.BracketData, align 8
  %8 = alloca [127 x i16], align 16
  %9 = alloca %struct.BracketData, align 8
  %10 = alloca [126 x i32], align 16
  %11 = alloca [126 x i32], align 16
  %12 = icmp eq i32* %5, null
  br i1 %12, label %2507, label %13

13:                                               ; preds = %6
  %14 = load i32, i32* %5, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %16, label %2507

16:                                               ; preds = %13
  %17 = icmp eq %struct.UBiDi* %0, null
  %18 = icmp eq i16* %1, null
  %19 = or i1 %17, %18
  %20 = icmp slt i32 %2, -1
  %21 = or i1 %19, %20
  %22 = add i8 %3, -126
  %23 = icmp sgt i8 %22, -1
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %16
  store i32 1, i32* %5, align 4
  br label %2507

26:                                               ; preds = %16
  %27 = icmp eq i32 %2, -1
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = tail call i32 @u_strlen_69(i16* nonnull %1) #11
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi i32 [ %29, %28 ], [ %2, %26 ]
  %32 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 22
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 3
  br i1 %34, label %35, label %351

35:                                               ; preds = %30
  store i32 0, i32* %32, align 4
  %36 = icmp eq i32 %31, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @ubidi_setPara_69(%struct.UBiDi* nonnull %0, i16* nonnull %1, i32 0, i8 zeroext %3, i8* null, i32* nonnull %5) #11
  br label %349

38:                                               ; preds = %35
  %39 = sext i32 %31 to i64
  %40 = mul nsw i64 %39, 7
  %41 = tail call noalias i8* @uprv_malloc_69(i64 %40) #10
  %42 = bitcast i8* %41 to i32*
  %43 = icmp eq i8* %41, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %38
  store i32 7, i32* %5, align 4
  br label %349

45:                                               ; preds = %38
  %46 = getelementptr inbounds i32, i32* %42, i64 %39
  %47 = bitcast i32* %46 to i16*
  %48 = getelementptr inbounds i16, i16* %47, i64 %39
  %49 = bitcast i16* %48 to i8*
  %50 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 23
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %45
  %55 = and i32 %51, -4
  %56 = or i32 %55, 2
  store i32 %56, i32* %50, align 8
  br label %57

57:                                               ; preds = %54, %45
  %58 = and i8 %3, 1
  tail call void @ubidi_setPara_69(%struct.UBiDi* nonnull %0, i16* nonnull %1, i32 %31, i8 zeroext %58, i8* null, i32* nonnull %5) #11
  %59 = load i32, i32* %5, align 4
  %60 = icmp slt i32 %59, 1
  br i1 %60, label %61, label %349

61:                                               ; preds = %57
  %62 = tail call i8* @ubidi_getLevels_69(%struct.UBiDi* nonnull %0, i32* nonnull %5) #11
  %63 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = sext i32 %64 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %62, i64 %65, i1 false) #11
  %66 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 35
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 32
  %69 = load i32, i32* %68, align 8
  %70 = tail call i32 @ubidi_writeReordered_69(%struct.UBiDi* nonnull %0, i16* %47, i32 %31, i16 zeroext 2, i32* nonnull %5) #11
  tail call void @ubidi_getVisualMap_69(%struct.UBiDi* nonnull %0, i32* nonnull %42, i32* nonnull %5) #11
  %71 = load i32, i32* %5, align 4
  %72 = icmp slt i32 %71, 1
  br i1 %72, label %73, label %335

73:                                               ; preds = %61
  store i32 %51, i32* %50, align 8
  store i32 5, i32* %32, align 4
  %74 = xor i8 %58, 1
  %75 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 17
  %76 = load i8, i8* %75, align 8
  store i8 0, i8* %75, align 8
  tail call void @ubidi_setPara_69(%struct.UBiDi* nonnull %0, i16* %47, i32 %70, i8 zeroext %74, i8* null, i32* nonnull %5) #11
  store i8 %76, i8* %75, align 8
  %77 = tail call signext i8 @ubidi_getRuns_69(%struct.UBiDi* nonnull %0, i32* nonnull %5) #11
  %78 = load i32, i32* %5, align 4
  %79 = icmp slt i32 %78, 1
  br i1 %79, label %80, label %331

80:                                               ; preds = %73
  %81 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 39
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 40
  %84 = load %struct.Run*, %struct.Run** %83, align 8
  %85 = icmp sgt i32 %82, 0
  br i1 %85, label %86, label %331

86:                                               ; preds = %80
  %87 = zext i32 %82 to i64
  br label %88

88:                                               ; preds = %138, %86
  %89 = phi i64 [ 0, %86 ], [ %140, %138 ]
  %90 = phi i32 [ 0, %86 ], [ %139, %138 ]
  %91 = phi i32 [ 0, %86 ], [ %93, %138 ]
  %92 = getelementptr inbounds %struct.Run, %struct.Run* %84, i64 %89, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = sub nsw i32 %93, %91
  %95 = icmp slt i32 %94, 2
  br i1 %95, label %138, label %96

96:                                               ; preds = %88
  %97 = getelementptr inbounds %struct.Run, %struct.Run* %84, i64 %89, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = and i32 %98, 2147483647
  %100 = add nuw i32 %99, 1
  %101 = add nuw nsw i32 %99, %94
  %102 = icmp slt i32 %100, %101
  br i1 %102, label %103, label %138

103:                                              ; preds = %96
  %104 = sext i32 %100 to i64
  %105 = add i32 %93, %99
  %106 = sub i32 %105, %91
  br label %107

107:                                              ; preds = %133, %103
  %108 = phi i64 [ %104, %103 ], [ %135, %133 ]
  %109 = phi i32 [ %90, %103 ], [ %134, %133 ]
  %110 = phi i32 [ %99, %103 ], [ %111, %133 ]
  %111 = trunc i64 %108 to i32
  %112 = and i64 %108, 4294967295
  %113 = getelementptr inbounds i32, i32* %42, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = sext i32 %110 to i64
  %116 = getelementptr inbounds i32, i32* %42, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = sub nsw i32 %114, %117
  %119 = icmp slt i32 %118, 0
  %120 = sub nsw i32 0, %118
  %121 = select i1 %119, i32 %120, i32 %118
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %131

123:                                              ; preds = %107
  %124 = sext i32 %114 to i64
  %125 = getelementptr inbounds i8, i8* %49, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = sext i32 %117 to i64
  %128 = getelementptr inbounds i8, i8* %49, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = icmp eq i8 %126, %129
  br i1 %130, label %133, label %131

131:                                              ; preds = %123, %107
  %132 = add nsw i32 %109, 1
  br label %133

133:                                              ; preds = %131, %123
  %134 = phi i32 [ %132, %131 ], [ %109, %123 ]
  %135 = add nsw i64 %108, 1
  %136 = trunc i64 %135 to i32
  %137 = icmp eq i32 %106, %136
  br i1 %137, label %138, label %107

138:                                              ; preds = %133, %96, %88
  %139 = phi i32 [ %90, %88 ], [ %90, %96 ], [ %134, %133 ]
  %140 = add nuw nsw i64 %89, 1
  %141 = icmp eq i64 %140, %87
  br i1 %141, label %142, label %88

142:                                              ; preds = %138
  %143 = icmp eq i32 %139, 0
  br i1 %143, label %183, label %144

144:                                              ; preds = %142
  %145 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 15
  %146 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 9
  %147 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 18
  %148 = load i8, i8* %147, align 1
  %149 = add nsw i32 %139, %82
  %150 = mul i32 %149, 12
  %151 = bitcast %struct.Run** %145 to i8**
  %152 = load i8*, i8** %151, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %154, label %160

154:                                              ; preds = %144
  %155 = icmp eq i8 %148, 0
  br i1 %155, label %331, label %156

156:                                              ; preds = %154
  %157 = sext i32 %150 to i64
  %158 = tail call noalias i8* @uprv_malloc_69(i64 %157) #10
  store i8* %158, i8** %151, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %331, label %170

160:                                              ; preds = %144
  %161 = load i32, i32* %146, align 4
  %162 = icmp slt i32 %161, %150
  br i1 %162, label %163, label %172

163:                                              ; preds = %160
  %164 = icmp eq i8 %148, 0
  br i1 %164, label %331, label %165

165:                                              ; preds = %163
  %166 = sext i32 %150 to i64
  %167 = tail call i8* @uprv_realloc_69(i8* nonnull %152, i64 %166) #12
  %168 = icmp eq i8* %167, null
  br i1 %168, label %331, label %169

169:                                              ; preds = %165
  store i8* %167, i8** %151, align 8
  br label %170

170:                                              ; preds = %156, %169
  %171 = phi i8* [ %167, %169 ], [ %158, %156 ]
  store i32 %150, i32* %146, align 4
  br label %172

172:                                              ; preds = %170, %160
  %173 = phi i8* [ %152, %160 ], [ %171, %170 ]
  %174 = bitcast i8* %173 to %struct.Run*
  %175 = icmp eq i32 %82, 1
  br i1 %175, label %176, label %179

176:                                              ; preds = %172
  %177 = bitcast %struct.Run* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %173, i8* align 4 %177, i64 12, i1 false) #11
  %178 = load %struct.Run*, %struct.Run** %145, align 8
  br label %179

179:                                              ; preds = %176, %172
  %180 = phi %struct.Run* [ %178, %176 ], [ %174, %172 ]
  store %struct.Run* %180, %struct.Run** %83, align 8
  %181 = load i32, i32* %81, align 8
  %182 = add nsw i32 %181, %139
  store i32 %182, i32* %81, align 8
  br label %183

183:                                              ; preds = %179, %142
  %184 = phi i32 [ %139, %179 ], [ 0, %142 ]
  %185 = phi %struct.Run* [ %180, %179 ], [ %84, %142 ]
  br i1 %85, label %186, label %331

186:                                              ; preds = %183
  %187 = getelementptr inbounds %struct.Run, %struct.Run* %185, i64 0, i32 1
  %188 = sext i32 %82 to i64
  br label %189

189:                                              ; preds = %186, %318
  %190 = phi i64 [ %188, %186 ], [ %192, %318 ]
  %191 = phi i32 [ %184, %186 ], [ %321, %318 ]
  %192 = add nsw i64 %190, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %189
  %195 = load i32, i32* %187, align 4
  br label %203

196:                                              ; preds = %189
  %197 = getelementptr inbounds %struct.Run, %struct.Run* %185, i64 %192, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = add nsw i64 %190, -2
  %200 = getelementptr inbounds %struct.Run, %struct.Run* %185, i64 %199, i32 1
  %201 = load i32, i32* %200, align 4
  %202 = sub nsw i32 %198, %201
  br label %203

203:                                              ; preds = %196, %194
  %204 = phi i32 [ %195, %194 ], [ %202, %196 ]
  %205 = getelementptr inbounds %struct.Run, %struct.Run* %185, i64 %192
  %206 = getelementptr inbounds %struct.Run, %struct.Run* %205, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = lshr i32 %207, 31
  %209 = and i32 %207, 2147483647
  %210 = icmp slt i32 %204, 2
  br i1 %210, label %211, label %224

211:                                              ; preds = %203
  %212 = icmp eq i32 %191, 0
  %213 = trunc i64 %192 to i32
  %214 = add nsw i32 %191, %213
  %215 = sext i32 %214 to i64
  br i1 %212, label %220, label %216

216:                                              ; preds = %211
  %217 = getelementptr inbounds %struct.Run, %struct.Run* %185, i64 %215
  %218 = bitcast %struct.Run* %217 to i8*
  %219 = bitcast %struct.Run* %205 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %218, i8* align 4 %219, i64 12, i1 false) #11
  br label %220

220:                                              ; preds = %211, %216
  %221 = zext i32 %209 to i64
  %222 = getelementptr inbounds i32, i32* %42, i64 %221
  %223 = load i32, i32* %222, align 4
  br label %318

224:                                              ; preds = %203
  %225 = icmp eq i32 %208, 0
  %226 = add nsw i32 %204, -1
  %227 = add nuw i32 %226, %209
  %228 = select i1 %225, i32 %227, i32 %209
  %229 = select i1 %225, i32 %209, i32 %227
  %230 = icmp eq i32 %228, %229
  br i1 %230, label %298, label %231

231:                                              ; preds = %224
  %232 = select i1 %225, i64 -1, i64 1
  %233 = getelementptr inbounds %struct.Run, %struct.Run* %185, i64 %192, i32 1
  %234 = getelementptr inbounds %struct.Run, %struct.Run* %185, i64 %192, i32 2
  %235 = sext i32 %228 to i64
  %236 = sext i32 %229 to i64
  %237 = trunc i64 %192 to i32
  br label %238

238:                                              ; preds = %231, %294
  %239 = phi i64 [ %235, %231 ], [ %244, %294 ]
  %240 = phi i32 [ %228, %231 ], [ %296, %294 ]
  %241 = phi i32 [ %191, %231 ], [ %295, %294 ]
  %242 = getelementptr inbounds i32, i32* %42, i64 %239
  %243 = load i32, i32* %242, align 4
  %244 = add nsw i64 %239, %232
  %245 = getelementptr inbounds i32, i32* %42, i64 %244
  %246 = load i32, i32* %245, align 4
  %247 = sub nsw i32 %243, %246
  %248 = icmp slt i32 %247, 0
  %249 = sub nsw i32 0, %247
  %250 = select i1 %248, i32 %249, i32 %247
  %251 = icmp eq i32 %250, 1
  br i1 %251, label %252, label %260

252:                                              ; preds = %238
  %253 = sext i32 %243 to i64
  %254 = getelementptr inbounds i8, i8* %49, i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = sext i32 %246 to i64
  %257 = getelementptr inbounds i8, i8* %49, i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = icmp eq i8 %255, %258
  br i1 %259, label %294, label %260

260:                                              ; preds = %252, %238
  %261 = sext i32 %240 to i64
  %262 = getelementptr inbounds i32, i32* %42, i64 %261
  %263 = load i32, i32* %262, align 4
  %264 = icmp slt i32 %263, %243
  %265 = select i1 %264, i32 %263, i32 %243
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds i8, i8* %49, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = xor i32 %208, %269
  %271 = shl i32 %270, 31
  %272 = or i32 %271, %265
  %273 = add nsw i32 %241, %237
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds %struct.Run, %struct.Run* %185, i64 %274, i32 0
  store i32 %272, i32* %275, align 4
  %276 = load i32, i32* %233, align 4
  %277 = getelementptr inbounds %struct.Run, %struct.Run* %185, i64 %274, i32 1
  store i32 %276, i32* %277, align 4
  %278 = trunc i64 %239 to i32
  %279 = sub nsw i32 %278, %240
  %280 = icmp slt i32 %279, 0
  %281 = sub nsw i32 0, %279
  %282 = select i1 %280, i32 %281, i32 %279
  %283 = load i32, i32* %233, align 4
  %284 = xor i32 %282, -1
  %285 = add i32 %283, %284
  store i32 %285, i32* %233, align 4
  %286 = load i32, i32* %234, align 4
  %287 = and i32 %286, 10
  %288 = getelementptr inbounds %struct.Run, %struct.Run* %185, i64 %274, i32 2
  store i32 %287, i32* %288, align 4
  %289 = xor i32 %287, -1
  %290 = load i32, i32* %234, align 4
  %291 = and i32 %290, %289
  store i32 %291, i32* %234, align 4
  %292 = add nsw i32 %241, -1
  %293 = trunc i64 %244 to i32
  br label %294

294:                                              ; preds = %260, %252
  %295 = phi i32 [ %292, %260 ], [ %241, %252 ]
  %296 = phi i32 [ %293, %260 ], [ %240, %252 ]
  %297 = icmp eq i64 %244, %236
  br i1 %297, label %298, label %238

298:                                              ; preds = %294, %224
  %299 = phi i32 [ %191, %224 ], [ %295, %294 ]
  %300 = phi i32 [ %228, %224 ], [ %296, %294 ]
  %301 = icmp eq i32 %299, 0
  %302 = trunc i64 %192 to i32
  %303 = add nsw i32 %299, %302
  %304 = sext i32 %303 to i64
  br i1 %301, label %309, label %305

305:                                              ; preds = %298
  %306 = getelementptr inbounds %struct.Run, %struct.Run* %185, i64 %304
  %307 = bitcast %struct.Run* %306 to i8*
  %308 = bitcast %struct.Run* %205 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %307, i8* align 4 %308, i64 12, i1 false) #11
  br label %309

309:                                              ; preds = %298, %305
  %310 = sext i32 %300 to i64
  %311 = getelementptr inbounds i32, i32* %42, i64 %310
  %312 = load i32, i32* %311, align 4
  %313 = sext i32 %229 to i64
  %314 = getelementptr inbounds i32, i32* %42, i64 %313
  %315 = load i32, i32* %314, align 4
  %316 = icmp slt i32 %312, %315
  %317 = select i1 %316, i32 %312, i32 %315
  br label %318

318:                                              ; preds = %309, %220
  %319 = phi i32 [ %317, %309 ], [ %223, %220 ]
  %320 = phi i64 [ %304, %309 ], [ %215, %220 ]
  %321 = phi i32 [ %299, %309 ], [ %191, %220 ]
  %322 = sext i32 %319 to i64
  %323 = getelementptr inbounds i8, i8* %49, i64 %322
  %324 = load i8, i8* %323, align 1
  %325 = zext i8 %324 to i32
  %326 = xor i32 %208, %325
  %327 = shl i32 %326, 31
  %328 = or i32 %327, %319
  %329 = getelementptr inbounds %struct.Run, %struct.Run* %185, i64 %320, i32 0
  store i32 %328, i32* %329, align 4
  %330 = icmp sgt i64 %192, 0
  br i1 %330, label %189, label %331

331:                                              ; preds = %318, %80, %183, %165, %163, %154, %156, %73
  %332 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 25
  %333 = load i8, i8* %332, align 1
  %334 = xor i8 %333, 1
  store i8 %334, i8* %332, align 1
  br label %335

335:                                              ; preds = %331, %61
  %336 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 1
  store i16* %1, i16** %336, align 8
  store i32 %64, i32* %63, align 4
  %337 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 2
  store i32 %31, i32* %337, align 8
  store i32 %69, i32* %68, align 8
  %338 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 6
  %339 = load i32, i32* %338, align 8
  %340 = icmp sgt i32 %64, %339
  %341 = select i1 %340, i32 %339, i32 %64
  %342 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 20
  %343 = load i8*, i8** %342, align 8
  %344 = sext i32 %341 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %343, i8* align 1 %49, i64 %344, i1 false) #11
  store i32 %67, i32* %66, align 4
  %345 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 39
  %346 = load i32, i32* %345, align 8
  %347 = icmp sgt i32 %346, 1
  br i1 %347, label %348, label %349

348:                                              ; preds = %335
  store i32 2, i32* %68, align 8
  br label %349

349:                                              ; preds = %37, %44, %57, %335, %348
  %350 = phi i8* [ null, %37 ], [ null, %44 ], [ %41, %57 ], [ %41, %348 ], [ %41, %335 ]
  tail call void @uprv_free_69(i8* %350) #11
  store i32 3, i32* %32, align 4
  br label %2507

351:                                              ; preds = %30
  %352 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  store %struct.UBiDi* null, %struct.UBiDi** %352, align 8
  %353 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 1
  store i16* %1, i16** %353, align 8
  %354 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 4
  store i32 %31, i32* %354, align 8
  %355 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 2
  store i32 %31, i32* %355, align 8
  %356 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 3
  store i32 %31, i32* %356, align 4
  %357 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 25
  store i8 %3, i8* %357, align 1
  %358 = and i8 %3, 1
  %359 = zext i8 %358 to i32
  %360 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 32
  store i32 %359, i32* %360, align 8
  %361 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 36
  store i32 1, i32* %361, align 8
  %362 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 19
  %363 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 20
  %364 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 40
  store %struct.Run* null, %struct.Run** %364, align 8
  %365 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  store i32 0, i32* %365, align 4
  %366 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 2
  store i32 0, i32* %366, align 8
  %367 = icmp ugt i8 %3, -3
  %368 = zext i1 %367 to i8
  %369 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 26
  %370 = bitcast i8** %362 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %370, i8 0, i64 16, i1 false)
  store i8 %368, i8* %369, align 2
  %371 = icmp eq i32 %31, 0
  br i1 %371, label %372, label %382

372:                                              ; preds = %351
  br i1 %367, label %373, label %374

373:                                              ; preds = %372
  store i8 %358, i8* %357, align 1
  store i8 0, i8* %369, align 2
  br label %374

374:                                              ; preds = %373, %372
  %375 = zext i8 %358 to i64
  %376 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZL6flagLR, i64 0, i64 %375
  %377 = load i32, i32* %376, align 4
  %378 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 33
  store i32 %377, i32* %378, align 4
  %379 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 39
  store i32 0, i32* %379, align 8
  store i32 0, i32* %361, align 8
  %380 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 28
  store i32 0, i32* %380, align 8
  %381 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 30
  store i32 0, i32* %381, align 8
  store %struct.UBiDi* %0, %struct.UBiDi** %352, align 8
  br label %2507

382:                                              ; preds = %351
  %383 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 39
  store i32 -1, i32* %383, align 8
  %384 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 14
  %385 = load %struct.Para*, %struct.Para** %384, align 8
  %386 = icmp eq %struct.Para* %385, null
  %387 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 38, i64 0
  %388 = select i1 %386, %struct.Para* %387, %struct.Para* %385
  %389 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 37
  store %struct.Para* %388, %struct.Para** %389, align 8
  %390 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 11
  %391 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 5
  %392 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 17
  %393 = load i8, i8* %392, align 8
  %394 = load i8*, i8** %390, align 8
  %395 = icmp eq i8* %394, null
  br i1 %395, label %396, label %402

396:                                              ; preds = %382
  %397 = icmp eq i8 %393, 0
  br i1 %397, label %891, label %398

398:                                              ; preds = %396
  %399 = sext i32 %31 to i64
  %400 = tail call noalias i8* @uprv_malloc_69(i64 %399) #10
  store i8* %400, i8** %390, align 8
  %401 = icmp eq i8* %400, null
  br i1 %401, label %891, label %412

402:                                              ; preds = %382
  %403 = load i32, i32* %391, align 4
  %404 = icmp slt i32 %403, %31
  br i1 %404, label %405, label %414

405:                                              ; preds = %402
  %406 = icmp eq i8 %393, 0
  br i1 %406, label %891, label %407

407:                                              ; preds = %405
  %408 = sext i32 %31 to i64
  %409 = tail call i8* @uprv_realloc_69(i8* nonnull %394, i64 %408) #12
  %410 = icmp eq i8* %409, null
  br i1 %410, label %891, label %411

411:                                              ; preds = %407
  store i8* %409, i8** %390, align 8
  br label %412

412:                                              ; preds = %398, %411
  %413 = phi i8* [ %409, %411 ], [ %400, %398 ]
  store i32 %31, i32* %391, align 4
  br label %414

414:                                              ; preds = %412, %402
  %415 = phi i8* [ %394, %402 ], [ %413, %412 ]
  %416 = ptrtoint i8* %415 to i64
  %417 = bitcast i8** %362 to i64*
  store i64 %416, i64* %417, align 8
  %418 = load i16*, i16** %353, align 8
  %419 = load i32, i32* %355, align 8
  %420 = load i8, i8* %357, align 1
  %421 = icmp ugt i8 %420, -3
  br i1 %421, label %422, label %426

422:                                              ; preds = %414
  %423 = load i32, i32* %32, align 4
  %424 = add i32 %423, -5
  %425 = icmp ult i32 %424, 2
  br label %426

426:                                              ; preds = %422, %414
  %427 = phi i1 [ false, %414 ], [ %425, %422 ]
  %428 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 23
  %429 = load i32, i32* %428, align 8
  %430 = bitcast [126 x i32]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 504, i8* nonnull %430) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %430, i8 -86, i64 504, i1 false) #11
  %431 = bitcast [126 x i32]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 504, i8* nonnull %431) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %431, i8 -86, i64 504, i1 false) #11
  %432 = and i32 %429, 4
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %435, label %434

434:                                              ; preds = %426
  store i32 0, i32* %356, align 4
  br label %435

435:                                              ; preds = %434, %426
  %436 = and i8 %420, 1
  br i1 %421, label %437, label %506

437:                                              ; preds = %435
  %438 = zext i8 %436 to i32
  %439 = load %struct.Para*, %struct.Para** %389, align 8
  %440 = getelementptr inbounds %struct.Para, %struct.Para* %439, i64 0, i32 1
  store i32 %438, i32* %440, align 4
  %441 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 28
  %442 = load i32, i32* %441, align 8
  %443 = icmp sgt i32 %442, 0
  br i1 %443, label %444, label %510

444:                                              ; preds = %437
  %445 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 27
  %446 = load i16*, i16** %445, align 8
  %447 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 47
  %448 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 48
  br label %449

449:                                              ; preds = %496, %444
  %450 = phi i8 [ 10, %444 ], [ %497, %496 ]
  %451 = phi i32 [ 0, %444 ], [ %474, %496 ]
  %452 = add nsw i32 %451, 1
  %453 = sext i32 %451 to i64
  %454 = getelementptr inbounds i16, i16* %446, i64 %453
  %455 = load i16, i16* %454, align 2
  %456 = zext i16 %455 to i32
  %457 = and i32 %456, 64512
  %458 = icmp ne i32 %457, 55296
  %459 = icmp eq i32 %452, %442
  %460 = or i1 %459, %458
  br i1 %460, label %473, label %461

461:                                              ; preds = %449
  %462 = sext i32 %452 to i64
  %463 = getelementptr inbounds i16, i16* %446, i64 %462
  %464 = load i16, i16* %463, align 2
  %465 = zext i16 %464 to i32
  %466 = and i32 %465, 64512
  %467 = icmp eq i32 %466, 56320
  br i1 %467, label %468, label %473

468:                                              ; preds = %461
  %469 = add nsw i32 %451, 2
  %470 = shl nuw nsw i32 %456, 10
  %471 = add nsw i32 %470, -56613888
  %472 = add nsw i32 %471, %465
  br label %473

473:                                              ; preds = %468, %461, %449
  %474 = phi i32 [ %452, %449 ], [ %469, %468 ], [ %452, %461 ]
  %475 = phi i32 [ %456, %449 ], [ %472, %468 ], [ %456, %461 ]
  %476 = load i32 (i8*, i32)*, i32 (i8*, i32)** %447, align 8
  %477 = icmp eq i32 (i8*, i32)* %476, null
  br i1 %477, label %482, label %478

478:                                              ; preds = %473
  %479 = load i8*, i8** %448, align 8
  %480 = tail call i32 %476(i8* %479, i32 %475) #11
  %481 = icmp eq i32 %480, 23
  br i1 %481, label %482, label %484

482:                                              ; preds = %478, %473
  %483 = tail call i32 @ubidi_getClass_69(i32 %475) #11
  br label %484

484:                                              ; preds = %482, %478
  %485 = phi i32 [ %483, %482 ], [ %480, %478 ]
  %486 = icmp sgt i32 %485, 22
  %487 = select i1 %486, i32 10, i32 %485
  %488 = trunc i32 %487 to i8
  %489 = icmp eq i8 %450, 10
  br i1 %489, label %490, label %492

490:                                              ; preds = %484
  switch i8 %488, label %496 [
    i8 0, label %491
    i8 1, label %491
    i8 13, label %491
  ]

491:                                              ; preds = %490, %490, %490
  br label %496

492:                                              ; preds = %484
  %493 = and i32 %487, 255
  %494 = icmp eq i32 %493, 7
  %495 = select i1 %494, i8 10, i8 %450
  br label %496

496:                                              ; preds = %492, %491, %490
  %497 = phi i8 [ %488, %491 ], [ 10, %490 ], [ %495, %492 ]
  %498 = icmp slt i32 %474, %442
  br i1 %498, label %449, label %499

499:                                              ; preds = %496
  %500 = icmp eq i8 %497, 10
  br i1 %500, label %510, label %501

501:                                              ; preds = %499
  %502 = icmp ne i8 %497, 0
  %503 = load %struct.Para*, %struct.Para** %389, align 8
  %504 = getelementptr inbounds %struct.Para, %struct.Para* %503, i64 0, i32 1
  %505 = zext i1 %502 to i32
  store i32 %505, i32* %504, align 4
  br label %510

506:                                              ; preds = %435
  %507 = zext i8 %420 to i32
  %508 = load %struct.Para*, %struct.Para** %389, align 8
  %509 = getelementptr inbounds %struct.Para, %struct.Para* %508, i64 0, i32 1
  store i32 %507, i32* %509, align 4
  br label %510

510:                                              ; preds = %506, %501, %499, %437
  %511 = phi i32 [ 0, %501 ], [ 0, %506 ], [ 1, %499 ], [ 1, %437 ]
  %512 = phi i8 [ %436, %501 ], [ 10, %506 ], [ %436, %499 ], [ %436, %437 ]
  %513 = icmp sgt i32 %419, 0
  br i1 %513, label %514, label %784

514:                                              ; preds = %510
  %515 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 47
  %516 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 48
  %517 = and i32 %429, 2
  %518 = icmp eq i32 %517, 0
  %519 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 46
  %520 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 38, i64 0
  %521 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 8
  %522 = bitcast %struct.Para** %384 to i8**
  %523 = bitcast %struct.Para** %389 to i64*
  %524 = zext i8 %436 to i32
  %525 = bitcast %struct.Para* %520 to i8*
  br label %526

526:                                              ; preds = %644, %514
  %527 = phi i32 [ -1, %514 ], [ %542, %644 ]
  %528 = phi i8 [ %512, %514 ], [ 1, %644 ]
  %529 = phi i32 [ %511, %514 ], [ %646, %644 ]
  %530 = phi i32 [ 0, %514 ], [ %616, %644 ]
  %531 = phi i32 [ -1, %514 ], [ %648, %644 ]
  %532 = phi i32 [ 0, %514 ], [ %645, %644 ]
  %533 = phi i32 [ 0, %514 ], [ %573, %644 ]
  br label %534

534:                                              ; preds = %778, %526
  %535 = phi i32 [ %527, %526 ], [ %782, %778 ]
  %536 = phi i8 [ %528, %526 ], [ %781, %778 ]
  %537 = phi i32 [ %529, %526 ], [ %780, %778 ]
  %538 = phi i32 [ %530, %526 ], [ %616, %778 ]
  %539 = phi i32 [ %532, %526 ], [ %779, %778 ]
  %540 = phi i32 [ %533, %526 ], [ %573, %778 ]
  br label %541

541:                                              ; preds = %664, %534
  %542 = phi i32 [ %535, %534 ], [ %667, %664 ]
  %543 = phi i32 [ %537, %534 ], [ %666, %664 ]
  %544 = phi i32 [ %538, %534 ], [ %616, %664 ]
  %545 = phi i32 [ %539, %534 ], [ %665, %664 ]
  %546 = phi i32 [ %540, %534 ], [ %573, %664 ]
  br label %547

547:                                              ; preds = %694, %541
  %548 = phi i32 [ %544, %541 ], [ %616, %694 ]
  %549 = phi i32 [ %545, %541 ], [ %603, %694 ]
  %550 = phi i32 [ %546, %541 ], [ %573, %694 ]
  %551 = add nsw i32 %550, 1
  %552 = sext i32 %550 to i64
  %553 = getelementptr inbounds i16, i16* %418, i64 %552
  %554 = load i16, i16* %553, align 2
  %555 = zext i16 %554 to i32
  %556 = and i32 %555, 64512
  %557 = icmp ne i32 %556, 55296
  %558 = icmp eq i32 %551, %419
  %559 = or i1 %558, %557
  br i1 %559, label %572, label %560

560:                                              ; preds = %547
  %561 = sext i32 %551 to i64
  %562 = getelementptr inbounds i16, i16* %418, i64 %561
  %563 = load i16, i16* %562, align 2
  %564 = zext i16 %563 to i32
  %565 = and i32 %564, 64512
  %566 = icmp eq i32 %565, 56320
  br i1 %566, label %567, label %572

567:                                              ; preds = %560
  %568 = add nsw i32 %550, 2
  %569 = shl nuw nsw i32 %555, 10
  %570 = add nsw i32 %569, -56613888
  %571 = add nsw i32 %570, %564
  br label %572

572:                                              ; preds = %567, %560, %547
  %573 = phi i32 [ %551, %547 ], [ %568, %567 ], [ %551, %560 ]
  %574 = phi i32 [ %555, %547 ], [ %571, %567 ], [ %555, %560 ]
  %575 = load i32 (i8*, i32)*, i32 (i8*, i32)** %515, align 8
  %576 = icmp eq i32 (i8*, i32)* %575, null
  br i1 %576, label %581, label %577

577:                                              ; preds = %572
  %578 = load i8*, i8** %516, align 8
  %579 = tail call i32 %575(i8* %578, i32 %574) #11
  %580 = icmp eq i32 %579, 23
  br i1 %580, label %581, label %583

581:                                              ; preds = %577, %572
  %582 = tail call i32 @ubidi_getClass_69(i32 %574) #11
  br label %583

583:                                              ; preds = %581, %577
  %584 = phi i32 [ %582, %581 ], [ %579, %577 ]
  %585 = icmp sgt i32 %584, 22
  %586 = select i1 %585, i32 10, i32 %584
  %587 = trunc i32 %586 to i8
  %588 = and i32 %586, 255
  %589 = zext i32 %588 to i64
  %590 = shl i64 1, %589
  %591 = trunc i64 %590 to i32
  %592 = or i32 %549, %591
  %593 = add nsw i32 %573, -1
  %594 = sext i32 %593 to i64
  %595 = getelementptr inbounds i8, i8* %415, i64 %594
  store i8 %587, i8* %595, align 1
  %596 = icmp sgt i32 %574, 65535
  br i1 %596, label %597, label %602

597:                                              ; preds = %583
  %598 = or i32 %592, 262144
  %599 = add nsw i32 %573, -2
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds i8, i8* %415, i64 %600
  store i8 18, i8* %601, align 1
  br label %602

602:                                              ; preds = %597, %583
  %603 = phi i32 [ %598, %597 ], [ %592, %583 ]
  br i1 %518, label %615, label %604

604:                                              ; preds = %602
  %605 = and i32 %574, -4
  %606 = icmp eq i32 %605, 8204
  %607 = add nsw i32 %574, -8234
  %608 = icmp ult i32 %607, 5
  %609 = or i1 %606, %608
  %610 = add nsw i32 %574, -8294
  %611 = icmp ult i32 %610, 4
  %612 = or i1 %611, %609
  %613 = zext i1 %612 to i32
  %614 = add nsw i32 %548, %613
  br label %615

615:                                              ; preds = %604, %602
  %616 = phi i32 [ %548, %602 ], [ %614, %604 ]
  switch i8 %587, label %650 [
    i8 0, label %617
    i8 1, label %628
    i8 13, label %628
  ]

617:                                              ; preds = %615
  switch i32 %543, label %778 [
    i32 1, label %618
    i32 2, label %624
  ]

618:                                              ; preds = %617
  %619 = load %struct.Para*, %struct.Para** %389, align 8
  %620 = load i32, i32* %361, align 8
  %621 = add nsw i32 %620, -1
  %622 = sext i32 %621 to i64
  %623 = getelementptr inbounds %struct.Para, %struct.Para* %619, i64 %622, i32 1
  store i32 0, i32* %623, align 4
  br label %778

624:                                              ; preds = %617
  %625 = icmp slt i32 %542, 126
  %626 = or i32 %603, 1048576
  %627 = select i1 %625, i32 %626, i32 %603
  br label %778

628:                                              ; preds = %615, %615
  switch i32 %543, label %644 [
    i32 1, label %629
    i32 2, label %635
  ]

629:                                              ; preds = %628
  %630 = load %struct.Para*, %struct.Para** %389, align 8
  %631 = load i32, i32* %361, align 8
  %632 = add nsw i32 %631, -1
  %633 = sext i32 %632 to i64
  %634 = getelementptr inbounds %struct.Para, %struct.Para* %630, i64 %633, i32 1
  store i32 1, i32* %634, align 4
  br label %644

635:                                              ; preds = %628
  %636 = icmp slt i32 %542, 126
  br i1 %636, label %637, label %644

637:                                              ; preds = %635
  %638 = sext i32 %542 to i64
  %639 = getelementptr inbounds [126 x i32], [126 x i32]* %10, i64 0, i64 %638
  %640 = load i32, i32* %639, align 4
  %641 = sext i32 %640 to i64
  %642 = getelementptr inbounds i8, i8* %415, i64 %641
  store i8 21, i8* %642, align 1
  %643 = or i32 %603, 2097152
  br label %644

644:                                              ; preds = %637, %635, %629, %628
  %645 = phi i32 [ %603, %629 ], [ %603, %628 ], [ %643, %637 ], [ %603, %635 ]
  %646 = phi i32 [ 0, %629 ], [ %543, %628 ], [ 3, %637 ], [ 3, %635 ]
  %647 = icmp eq i32 %588, 13
  %648 = select i1 %647, i32 %593, i32 %531
  %649 = icmp slt i32 %573, %419
  br i1 %649, label %526, label %784

650:                                              ; preds = %615
  %651 = add nsw i32 %588, -19
  %652 = icmp ult i32 %651, 3
  br i1 %652, label %653, label %669

653:                                              ; preds = %650
  %654 = getelementptr inbounds i8, i8* %415, i64 %594
  %655 = add nsw i32 %542, 1
  %656 = icmp slt i32 %655, 126
  br i1 %656, label %657, label %661

657:                                              ; preds = %653
  %658 = sext i32 %655 to i64
  %659 = getelementptr inbounds [126 x i32], [126 x i32]* %10, i64 0, i64 %658
  store i32 %593, i32* %659, align 4
  %660 = getelementptr inbounds [126 x i32], [126 x i32]* %11, i64 0, i64 %658
  store i32 %543, i32* %660, align 4
  br label %661

661:                                              ; preds = %657, %653
  %662 = icmp eq i32 %588, 19
  br i1 %662, label %663, label %664

663:                                              ; preds = %661
  store i8 20, i8* %654, align 1
  br label %664

664:                                              ; preds = %682, %670, %663, %661
  %665 = phi i32 [ %603, %661 ], [ %603, %663 ], [ %675, %682 ], [ %675, %670 ]
  %666 = phi i32 [ 3, %661 ], [ 2, %663 ], [ %683, %682 ], [ %543, %670 ]
  %667 = phi i32 [ %655, %661 ], [ %655, %663 ], [ %684, %682 ], [ %542, %670 ]
  %668 = icmp slt i32 %573, %419
  br i1 %668, label %541, label %784

669:                                              ; preds = %650
  switch i8 %587, label %694 [
    i8 22, label %670
    i8 7, label %685
  ]

670:                                              ; preds = %669
  %671 = icmp eq i32 %543, 2
  %672 = icmp slt i32 %542, 126
  %673 = and i1 %672, %671
  %674 = or i32 %603, 1048576
  %675 = select i1 %673, i32 %674, i32 %603
  %676 = icmp sgt i32 %542, -1
  br i1 %676, label %677, label %664

677:                                              ; preds = %670
  br i1 %672, label %678, label %682

678:                                              ; preds = %677
  %679 = sext i32 %542 to i64
  %680 = getelementptr inbounds [126 x i32], [126 x i32]* %11, i64 0, i64 %679
  %681 = load i32, i32* %680, align 4
  br label %682

682:                                              ; preds = %678, %677
  %683 = phi i32 [ %681, %678 ], [ %543, %677 ]
  %684 = add nsw i32 %542, -1
  br label %664

685:                                              ; preds = %669
  %686 = icmp slt i32 %573, %419
  %687 = icmp eq i32 %574, 13
  %688 = and i1 %686, %687
  br i1 %688, label %689, label %696

689:                                              ; preds = %685
  %690 = sext i32 %573 to i64
  %691 = getelementptr inbounds i16, i16* %418, i64 %690
  %692 = load i16, i16* %691, align 2
  %693 = icmp eq i16 %692, 10
  br i1 %693, label %694, label %696

694:                                              ; preds = %689, %669
  %695 = icmp slt i32 %573, %419
  br i1 %695, label %547, label %784

696:                                              ; preds = %689, %685
  %697 = phi i1 [ true, %689 ], [ %686, %685 ]
  %698 = load %struct.Para*, %struct.Para** %389, align 8
  %699 = load i32, i32* %361, align 8
  %700 = add nsw i32 %699, -1
  %701 = sext i32 %700 to i64
  %702 = getelementptr inbounds %struct.Para, %struct.Para* %698, i64 %701, i32 0
  store i32 %573, i32* %702, align 4
  %703 = icmp eq i8 %536, 1
  %704 = and i1 %427, %703
  br i1 %704, label %705, label %711

705:                                              ; preds = %696
  %706 = load %struct.Para*, %struct.Para** %389, align 8
  %707 = load i32, i32* %361, align 8
  %708 = add nsw i32 %707, -1
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds %struct.Para, %struct.Para* %706, i64 %709, i32 1
  store i32 1, i32* %710, align 4
  br label %711

711:                                              ; preds = %705, %696
  %712 = load i32, i32* %428, align 8
  %713 = and i32 %712, 4
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %716, label %715

715:                                              ; preds = %711
  store i32 %573, i32* %356, align 4
  store i32 %616, i32* %519, align 8
  br label %716

716:                                              ; preds = %715, %711
  br i1 %697, label %717, label %778

717:                                              ; preds = %716
  %718 = load i32, i32* %361, align 8
  %719 = add nsw i32 %718, 1
  store i32 %719, i32* %361, align 8
  %720 = load %struct.Para*, %struct.Para** %389, align 8
  %721 = icmp eq %struct.Para* %720, %520
  br i1 %721, label %722, label %742

722:                                              ; preds = %717
  %723 = icmp slt i32 %719, 11
  br i1 %723, label %763, label %724

724:                                              ; preds = %722
  %725 = load i8*, i8** %522, align 8
  %726 = icmp eq i8* %725, null
  br i1 %726, label %727, label %730

727:                                              ; preds = %724
  %728 = tail call noalias i8* @uprv_malloc_69(i64 160) #10
  store i8* %728, i8** %522, align 8
  %729 = icmp eq i8* %728, null
  br i1 %729, label %890, label %737

730:                                              ; preds = %724
  %731 = load i32, i32* %521, align 4
  %732 = icmp slt i32 %731, 160
  br i1 %732, label %733, label %739

733:                                              ; preds = %730
  %734 = tail call i8* @uprv_realloc_69(i8* nonnull %725, i64 160) #12
  %735 = icmp eq i8* %734, null
  br i1 %735, label %890, label %736

736:                                              ; preds = %733
  store i8* %734, i8** %522, align 8
  br label %737

737:                                              ; preds = %727, %736
  %738 = phi i8* [ %734, %736 ], [ %728, %727 ]
  store i32 160, i32* %521, align 4
  br label %739

739:                                              ; preds = %737, %730
  %740 = phi i8* [ %725, %730 ], [ %738, %737 ]
  %741 = ptrtoint i8* %740 to i64
  store i64 %741, i64* %523, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %740, i8* align 8 %525, i64 80, i1 false) #11
  br label %763

742:                                              ; preds = %717
  %743 = shl i32 %719, 4
  %744 = load i8*, i8** %522, align 8
  %745 = icmp eq i8* %744, null
  br i1 %745, label %746, label %750

746:                                              ; preds = %742
  %747 = sext i32 %743 to i64
  %748 = tail call noalias i8* @uprv_malloc_69(i64 %747) #10
  store i8* %748, i8** %522, align 8
  %749 = icmp eq i8* %748, null
  br i1 %749, label %890, label %758

750:                                              ; preds = %742
  %751 = load i32, i32* %521, align 4
  %752 = icmp slt i32 %751, %743
  br i1 %752, label %753, label %760

753:                                              ; preds = %750
  %754 = sext i32 %743 to i64
  %755 = tail call i8* @uprv_realloc_69(i8* nonnull %744, i64 %754) #12
  %756 = icmp eq i8* %755, null
  br i1 %756, label %890, label %757

757:                                              ; preds = %753
  store i8* %755, i8** %522, align 8
  br label %758

758:                                              ; preds = %746, %757
  %759 = phi i8* [ %755, %757 ], [ %748, %746 ]
  store i32 %743, i32* %521, align 4
  br label %760

760:                                              ; preds = %758, %750
  %761 = phi i8* [ %744, %750 ], [ %759, %758 ]
  %762 = ptrtoint i8* %761 to i64
  store i64 %762, i64* %523, align 8
  br label %763

763:                                              ; preds = %760, %739, %722
  br i1 %421, label %764, label %770

764:                                              ; preds = %763
  %765 = load %struct.Para*, %struct.Para** %389, align 8
  %766 = load i32, i32* %361, align 8
  %767 = add nsw i32 %766, -1
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds %struct.Para, %struct.Para* %765, i64 %768, i32 1
  store i32 %524, i32* %769, align 4
  br label %778

770:                                              ; preds = %763
  %771 = load i8, i8* %357, align 1
  %772 = zext i8 %771 to i32
  %773 = load %struct.Para*, %struct.Para** %389, align 8
  %774 = load i32, i32* %361, align 8
  %775 = add nsw i32 %774, -1
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds %struct.Para, %struct.Para* %773, i64 %776, i32 1
  store i32 %772, i32* %777, align 4
  br label %778

778:                                              ; preds = %770, %764, %716, %624, %618, %617
  %779 = phi i32 [ %603, %617 ], [ %627, %624 ], [ %603, %618 ], [ %603, %764 ], [ %603, %770 ], [ %603, %716 ]
  %780 = phi i32 [ %543, %617 ], [ 3, %624 ], [ 0, %618 ], [ 1, %764 ], [ 0, %770 ], [ %543, %716 ]
  %781 = phi i8 [ 0, %617 ], [ 0, %624 ], [ 0, %618 ], [ %436, %764 ], [ %536, %770 ], [ %536, %716 ]
  %782 = phi i32 [ %542, %617 ], [ %542, %624 ], [ %542, %618 ], [ -1, %764 ], [ -1, %770 ], [ %542, %716 ]
  %783 = icmp slt i32 %573, %419
  br i1 %783, label %534, label %784

784:                                              ; preds = %644, %778, %664, %694, %510
  %785 = phi i32 [ -1, %510 ], [ %531, %694 ], [ %531, %664 ], [ %531, %778 ], [ %648, %644 ]
  %786 = phi i8 [ %512, %510 ], [ %536, %694 ], [ %536, %664 ], [ %781, %778 ], [ 1, %644 ]
  %787 = phi i32 [ %511, %510 ], [ %543, %694 ], [ %666, %664 ], [ %780, %778 ], [ %646, %644 ]
  %788 = phi i32 [ -1, %510 ], [ %542, %694 ], [ %667, %664 ], [ %782, %778 ], [ %542, %644 ]
  %789 = phi i32 [ 0, %510 ], [ %603, %694 ], [ %665, %664 ], [ %779, %778 ], [ %645, %644 ]
  %790 = phi i32 [ 0, %510 ], [ %616, %694 ], [ %616, %664 ], [ %616, %778 ], [ %616, %644 ]
  %791 = icmp sgt i32 %788, 125
  %792 = select i1 %791, i32 125, i32 %788
  %793 = icmp sgt i32 %792, -1
  br i1 %793, label %794, label %808

794:                                              ; preds = %784
  %795 = sext i32 %792 to i64
  %796 = select i1 %791, i32 2, i32 %787
  br label %797

797:                                              ; preds = %794, %803
  %798 = phi i64 [ %806, %803 ], [ %795, %794 ]
  %799 = phi i32 [ %805, %803 ], [ %796, %794 ]
  %800 = icmp eq i32 %799, 2
  br i1 %800, label %801, label %803

801:                                              ; preds = %797
  %802 = or i32 %789, 1048576
  br label %808

803:                                              ; preds = %797
  %804 = getelementptr inbounds [126 x i32], [126 x i32]* %11, i64 0, i64 %798
  %805 = load i32, i32* %804, align 4
  %806 = add nsw i64 %798, -1
  %807 = icmp sgt i64 %798, 0
  br i1 %807, label %797, label %808

808:                                              ; preds = %803, %801, %784
  %809 = phi i32 [ %802, %801 ], [ %789, %784 ], [ %789, %803 ]
  %810 = load i32, i32* %428, align 8
  %811 = and i32 %810, 4
  %812 = icmp eq i32 %811, 0
  br i1 %812, label %819, label %813

813:                                              ; preds = %808
  %814 = load i32, i32* %356, align 4
  %815 = icmp slt i32 %814, %419
  br i1 %815, label %816, label %826

816:                                              ; preds = %813
  %817 = load i32, i32* %361, align 8
  %818 = add nsw i32 %817, -1
  store i32 %818, i32* %361, align 8
  br label %826

819:                                              ; preds = %808
  %820 = load %struct.Para*, %struct.Para** %389, align 8
  %821 = load i32, i32* %361, align 8
  %822 = add nsw i32 %821, -1
  %823 = sext i32 %822 to i64
  %824 = getelementptr inbounds %struct.Para, %struct.Para* %820, i64 %823, i32 0
  store i32 %419, i32* %824, align 4
  %825 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 46
  store i32 %790, i32* %825, align 8
  br label %826

826:                                              ; preds = %819, %816, %813
  %827 = icmp eq i8 %786, 1
  %828 = and i1 %427, %827
  br i1 %828, label %829, label %835

829:                                              ; preds = %826
  %830 = load %struct.Para*, %struct.Para** %389, align 8
  %831 = load i32, i32* %361, align 8
  %832 = add nsw i32 %831, -1
  %833 = sext i32 %832 to i64
  %834 = getelementptr inbounds %struct.Para, %struct.Para* %830, i64 %833, i32 1
  store i32 1, i32* %834, align 4
  br label %835

835:                                              ; preds = %829, %826
  br i1 %421, label %836, label %841

836:                                              ; preds = %835
  %837 = load %struct.Para*, %struct.Para** %389, align 8
  %838 = getelementptr inbounds %struct.Para, %struct.Para* %837, i64 0, i32 1
  %839 = load i32, i32* %838, align 4
  %840 = trunc i32 %839 to i8
  store i8 %840, i8* %357, align 1
  br label %841

841:                                              ; preds = %836, %835
  %842 = load i32, i32* %361, align 8
  %843 = icmp sgt i32 %842, 0
  br i1 %843, label %844, label %911

844:                                              ; preds = %841
  %845 = load %struct.Para*, %struct.Para** %389, align 8
  %846 = sext i32 %842 to i64
  %847 = add nsw i64 %846, -1
  %848 = and i64 %846, 3
  %849 = icmp ult i64 %847, 3
  br i1 %849, label %892, label %850

850:                                              ; preds = %844
  %851 = sub nsw i64 %846, %848
  br label %852

852:                                              ; preds = %852, %850
  %853 = phi i64 [ 0, %850 ], [ %887, %852 ]
  %854 = phi i32 [ %809, %850 ], [ %886, %852 ]
  %855 = phi i64 [ %851, %850 ], [ %888, %852 ]
  %856 = getelementptr inbounds %struct.Para, %struct.Para* %845, i64 %853, i32 1
  %857 = load i32, i32* %856, align 4
  %858 = and i32 %857, 1
  %859 = zext i32 %858 to i64
  %860 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZL6flagLR, i64 0, i64 %859
  %861 = load i32, i32* %860, align 4
  %862 = or i32 %861, %854
  %863 = or i64 %853, 1
  %864 = getelementptr inbounds %struct.Para, %struct.Para* %845, i64 %863, i32 1
  %865 = load i32, i32* %864, align 4
  %866 = and i32 %865, 1
  %867 = zext i32 %866 to i64
  %868 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZL6flagLR, i64 0, i64 %867
  %869 = load i32, i32* %868, align 4
  %870 = or i32 %869, %862
  %871 = or i64 %853, 2
  %872 = getelementptr inbounds %struct.Para, %struct.Para* %845, i64 %871, i32 1
  %873 = load i32, i32* %872, align 4
  %874 = and i32 %873, 1
  %875 = zext i32 %874 to i64
  %876 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZL6flagLR, i64 0, i64 %875
  %877 = load i32, i32* %876, align 4
  %878 = or i32 %877, %870
  %879 = or i64 %853, 3
  %880 = getelementptr inbounds %struct.Para, %struct.Para* %845, i64 %879, i32 1
  %881 = load i32, i32* %880, align 4
  %882 = and i32 %881, 1
  %883 = zext i32 %882 to i64
  %884 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZL6flagLR, i64 0, i64 %883
  %885 = load i32, i32* %884, align 4
  %886 = or i32 %885, %878
  %887 = add nuw nsw i64 %853, 4
  %888 = add i64 %855, -4
  %889 = icmp eq i64 %888, 0
  br i1 %889, label %892, label %852

890:                                              ; preds = %727, %733, %746, %753
  call void @llvm.lifetime.end.p0i8(i64 504, i8* nonnull %431) #11
  call void @llvm.lifetime.end.p0i8(i64 504, i8* nonnull %430) #11
  store i32 7, i32* %5, align 4
  br label %2507

891:                                              ; preds = %398, %396, %405, %407
  store i32 7, i32* %5, align 4
  br label %2507

892:                                              ; preds = %852, %844
  %893 = phi i32 [ undef, %844 ], [ %886, %852 ]
  %894 = phi i64 [ 0, %844 ], [ %887, %852 ]
  %895 = phi i32 [ %809, %844 ], [ %886, %852 ]
  %896 = icmp eq i64 %848, 0
  br i1 %896, label %911, label %897

897:                                              ; preds = %892, %897
  %898 = phi i64 [ %908, %897 ], [ %894, %892 ]
  %899 = phi i32 [ %907, %897 ], [ %895, %892 ]
  %900 = phi i64 [ %909, %897 ], [ %848, %892 ]
  %901 = getelementptr inbounds %struct.Para, %struct.Para* %845, i64 %898, i32 1
  %902 = load i32, i32* %901, align 4
  %903 = and i32 %902, 1
  %904 = zext i32 %903 to i64
  %905 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZL6flagLR, i64 0, i64 %904
  %906 = load i32, i32* %905, align 4
  %907 = or i32 %906, %899
  %908 = add nuw nsw i64 %898, 1
  %909 = add i64 %900, -1
  %910 = icmp eq i64 %909, 0
  br i1 %910, label %911, label %897, !llvm.loop !2

911:                                              ; preds = %892, %897, %841
  %912 = phi i32 [ %809, %841 ], [ %893, %892 ], [ %907, %897 ]
  %913 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 24
  %914 = load i8, i8* %913, align 4
  %915 = icmp ne i8 %914, 0
  %916 = trunc i32 %912 to i8
  %917 = icmp slt i8 %916, 0
  %918 = and i1 %917, %915
  %919 = zext i1 %918 to i32
  %920 = or i32 %912, %919
  %921 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 33
  store i32 %920, i32* %921, align 4
  %922 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 34
  store i32 %785, i32* %922, align 8
  call void @llvm.lifetime.end.p0i8(i64 504, i8* nonnull %431) #11
  call void @llvm.lifetime.end.p0i8(i64 504, i8* nonnull %430) #11
  %923 = load i8*, i8** %362, align 8
  %924 = load i32, i32* %356, align 4
  %925 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 35
  store i32 %924, i32* %925, align 4
  %926 = icmp eq i8* %4, null
  br i1 %926, label %927, label %1739

927:                                              ; preds = %911
  %928 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 12
  %929 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 6
  %930 = load i8, i8* %392, align 8
  %931 = load i8*, i8** %928, align 8
  %932 = icmp eq i8* %931, null
  br i1 %932, label %933, label %939

933:                                              ; preds = %927
  %934 = icmp eq i8 %930, 0
  br i1 %934, label %1738, label %935

935:                                              ; preds = %933
  %936 = sext i32 %924 to i64
  %937 = tail call noalias i8* @uprv_malloc_69(i64 %936) #10
  store i8* %937, i8** %928, align 8
  %938 = icmp eq i8* %937, null
  br i1 %938, label %1738, label %949

939:                                              ; preds = %927
  %940 = load i32, i32* %929, align 4
  %941 = icmp slt i32 %940, %924
  br i1 %941, label %942, label %951

942:                                              ; preds = %939
  %943 = icmp eq i8 %930, 0
  br i1 %943, label %1738, label %944

944:                                              ; preds = %942
  %945 = sext i32 %924 to i64
  %946 = tail call i8* @uprv_realloc_69(i8* nonnull %931, i64 %945) #12
  %947 = icmp eq i8* %946, null
  br i1 %947, label %1738, label %948

948:                                              ; preds = %944
  store i8* %946, i8** %928, align 8
  br label %949

949:                                              ; preds = %935, %948
  %950 = phi i8* [ %946, %948 ], [ %937, %935 ]
  store i32 %924, i32* %929, align 4
  br label %951

951:                                              ; preds = %949, %939
  %952 = phi i8* [ %931, %939 ], [ %950, %949 ]
  %953 = ptrtoint i8* %952 to i64
  %954 = bitcast i8** %363 to i64*
  store i64 %953, i64* %954, align 8
  %955 = load i8*, i8** %362, align 8
  %956 = load i16*, i16** %353, align 8
  %957 = load i32, i32* %356, align 4
  %958 = load i32, i32* %921, align 4
  %959 = load i8, i8* %369, align 2
  %960 = icmp eq i8 %959, 0
  br i1 %960, label %966, label %961

961:                                              ; preds = %951
  %962 = load %struct.Para*, %struct.Para** %389, align 8
  %963 = getelementptr inbounds %struct.Para, %struct.Para* %962, i64 0, i32 0
  %964 = load i32, i32* %963, align 4
  %965 = icmp sgt i32 %964, 0
  br i1 %965, label %966, label %968

966:                                              ; preds = %961, %951
  %967 = load i8, i8* %357, align 1
  br label %991

968:                                              ; preds = %961
  %969 = load i32, i32* %361, align 8
  %970 = icmp sgt i32 %969, 0
  br i1 %970, label %971, label %981

971:                                              ; preds = %968
  %972 = sext i32 %969 to i64
  br label %973

973:                                              ; preds = %971, %977
  %974 = phi i64 [ %975, %977 ], [ 0, %971 ]
  %975 = add nuw nsw i64 %974, 1
  %976 = icmp eq i64 %975, %972
  br i1 %976, label %981, label %977

977:                                              ; preds = %973
  %978 = getelementptr inbounds %struct.Para, %struct.Para* %962, i64 %975, i32 0
  %979 = load i32, i32* %978, align 4
  %980 = icmp sgt i32 %979, 0
  br i1 %980, label %983, label %973

981:                                              ; preds = %973, %968
  %982 = add nsw i32 %969, -1
  br label %985

983:                                              ; preds = %977
  %984 = trunc i64 %975 to i32
  br label %985

985:                                              ; preds = %983, %981
  %986 = phi i32 [ %984, %983 ], [ %982, %981 ]
  %987 = sext i32 %986 to i64
  %988 = getelementptr inbounds %struct.Para, %struct.Para* %962, i64 %987, i32 1
  %989 = load i32, i32* %988, align 4
  %990 = trunc i32 %989 to i8
  br label %991

991:                                              ; preds = %985, %966
  %992 = phi i8 [ %967, %966 ], [ %990, %985 ]
  %993 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 42
  store i32 0, i32* %993, align 4
  %994 = load i32, i32* %5, align 4
  %995 = icmp slt i32 %994, 1
  br i1 %995, label %996, label %2507

996:                                              ; preds = %991
  %997 = zext i32 %958 to i64
  %998 = and i64 %997, 2154498
  %999 = icmp eq i64 %998, 0
  br i1 %999, label %1000, label %1006

1000:                                             ; preds = %996
  %1001 = and i64 %997, 32
  %1002 = icmp eq i64 %1001, 0
  %1003 = and i64 %997, 8249304
  %1004 = icmp eq i64 %1003, 0
  %1005 = or i1 %1002, %1004
  br i1 %1005, label %1734, label %1006

1006:                                             ; preds = %1000, %996
  %1007 = and i64 %997, 26220581
  %1008 = icmp eq i64 %1007, 0
  br i1 %1008, label %1734, label %1009

1009:                                             ; preds = %1006
  %1010 = load i32, i32* %32, align 4
  %1011 = icmp sgt i32 %1010, 1
  br i1 %1011, label %1012, label %1045

1012:                                             ; preds = %1009
  %1013 = load i32, i32* %361, align 8
  %1014 = icmp sgt i32 %1013, 0
  br i1 %1014, label %1015, label %1734

1015:                                             ; preds = %1012, %1040
  %1016 = phi i32 [ %1041, %1040 ], [ %1013, %1012 ]
  %1017 = phi i64 [ %1042, %1040 ], [ 0, %1012 ]
  %1018 = icmp eq i64 %1017, 0
  %1019 = load %struct.Para*, %struct.Para** %389, align 8
  br i1 %1018, label %1024, label %1020

1020:                                             ; preds = %1015
  %1021 = add nsw i64 %1017, -1
  %1022 = getelementptr inbounds %struct.Para, %struct.Para* %1019, i64 %1021, i32 0
  %1023 = load i32, i32* %1022, align 4
  br label %1024

1024:                                             ; preds = %1020, %1015
  %1025 = phi i32 [ %1023, %1020 ], [ 0, %1015 ]
  %1026 = getelementptr inbounds %struct.Para, %struct.Para* %1019, i64 %1017, i32 0
  %1027 = load i32, i32* %1026, align 4
  %1028 = icmp slt i32 %1025, %1027
  br i1 %1028, label %1029, label %1040

1029:                                             ; preds = %1024
  %1030 = getelementptr inbounds %struct.Para, %struct.Para* %1019, i64 %1017, i32 1
  %1031 = load i32, i32* %1030, align 4
  %1032 = trunc i32 %1031 to i8
  %1033 = sext i32 %1025 to i64
  %1034 = getelementptr i8, i8* %952, i64 %1033
  %1035 = xor i32 %1025, -1
  %1036 = add i32 %1027, %1035
  %1037 = zext i32 %1036 to i64
  %1038 = add nuw nsw i64 %1037, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %1034, i8 %1032, i64 %1038, i1 false) #11
  %1039 = load i32, i32* %361, align 8
  br label %1040

1040:                                             ; preds = %1029, %1024
  %1041 = phi i32 [ %1039, %1029 ], [ %1016, %1024 ]
  %1042 = add nuw nsw i64 %1017, 1
  %1043 = sext i32 %1041 to i64
  %1044 = icmp slt i64 %1042, %1043
  br i1 %1044, label %1015, label %1734

1045:                                             ; preds = %1009
  %1046 = and i32 %958, 7985152
  %1047 = icmp eq i32 %1046, 0
  br i1 %1047, label %1048, label %1208

1048:                                             ; preds = %1045
  %1049 = bitcast %struct.BracketData* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2544, i8* nonnull %1049) #11
  %1050 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %7, i64 0, i32 1
  %1051 = bitcast [20 x %struct.Opening]* %1050 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1051, i8 -86, i64 2536, i1 false) #11
  %1052 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %7, i64 0, i32 0
  store %struct.UBiDi* %0, %struct.UBiDi** %1052, align 8
  %1053 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %7, i64 0, i32 4
  store i32 0, i32* %1053, align 4
  %1054 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %7, i64 0, i32 5, i64 0, i32 1
  store i16 0, i16* %1054, align 4
  %1055 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %7, i64 0, i32 5, i64 0, i32 2
  store i16 0, i16* %1055, align 2
  br i1 %960, label %1061, label %1056

1056:                                             ; preds = %1048
  %1057 = load %struct.Para*, %struct.Para** %389, align 8
  %1058 = getelementptr inbounds %struct.Para, %struct.Para* %1057, i64 0, i32 0
  %1059 = load i32, i32* %1058, align 4
  %1060 = icmp sgt i32 %1059, 0
  br i1 %1060, label %1061, label %1063

1061:                                             ; preds = %1056, %1048
  %1062 = load i8, i8* %357, align 1
  br label %1086

1063:                                             ; preds = %1056
  %1064 = load i32, i32* %361, align 8
  %1065 = icmp sgt i32 %1064, 0
  br i1 %1065, label %1066, label %1076

1066:                                             ; preds = %1063
  %1067 = sext i32 %1064 to i64
  br label %1068

1068:                                             ; preds = %1072, %1066
  %1069 = phi i64 [ %1070, %1072 ], [ 0, %1066 ]
  %1070 = add nuw nsw i64 %1069, 1
  %1071 = icmp eq i64 %1070, %1067
  br i1 %1071, label %1076, label %1072

1072:                                             ; preds = %1068
  %1073 = getelementptr inbounds %struct.Para, %struct.Para* %1057, i64 %1070, i32 0
  %1074 = load i32, i32* %1073, align 4
  %1075 = icmp sgt i32 %1074, 0
  br i1 %1075, label %1078, label %1068

1076:                                             ; preds = %1068, %1063
  %1077 = add nsw i32 %1064, -1
  br label %1080

1078:                                             ; preds = %1072
  %1079 = trunc i64 %1070 to i32
  br label %1080

1080:                                             ; preds = %1078, %1076
  %1081 = phi i32 [ %1079, %1078 ], [ %1077, %1076 ]
  %1082 = sext i32 %1081 to i64
  %1083 = getelementptr inbounds %struct.Para, %struct.Para* %1057, i64 %1082, i32 1
  %1084 = load i32, i32* %1083, align 4
  %1085 = trunc i32 %1084 to i8
  br label %1086

1086:                                             ; preds = %1080, %1061
  %1087 = phi i8 [ %1062, %1061 ], [ %1085, %1080 ]
  %1088 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %7, i64 0, i32 5, i64 0, i32 3
  store i8 %1087, i8* %1088, align 8
  br i1 %960, label %1094, label %1089

1089:                                             ; preds = %1086
  %1090 = load %struct.Para*, %struct.Para** %389, align 8
  %1091 = getelementptr inbounds %struct.Para, %struct.Para* %1090, i64 0, i32 0
  %1092 = load i32, i32* %1091, align 4
  %1093 = icmp sgt i32 %1092, 0
  br i1 %1093, label %1094, label %1096

1094:                                             ; preds = %1089, %1086
  %1095 = load i8, i8* %357, align 1
  br label %1119

1096:                                             ; preds = %1089
  %1097 = load i32, i32* %361, align 8
  %1098 = icmp sgt i32 %1097, 0
  br i1 %1098, label %1099, label %1109

1099:                                             ; preds = %1096
  %1100 = sext i32 %1097 to i64
  br label %1101

1101:                                             ; preds = %1105, %1099
  %1102 = phi i64 [ %1103, %1105 ], [ 0, %1099 ]
  %1103 = add nuw nsw i64 %1102, 1
  %1104 = icmp eq i64 %1103, %1100
  br i1 %1104, label %1109, label %1105

1105:                                             ; preds = %1101
  %1106 = getelementptr inbounds %struct.Para, %struct.Para* %1090, i64 %1103, i32 0
  %1107 = load i32, i32* %1106, align 4
  %1108 = icmp sgt i32 %1107, 0
  br i1 %1108, label %1111, label %1101

1109:                                             ; preds = %1101, %1096
  %1110 = add nsw i32 %1097, -1
  br label %1113

1111:                                             ; preds = %1105
  %1112 = trunc i64 %1103 to i32
  br label %1113

1113:                                             ; preds = %1111, %1109
  %1114 = phi i32 [ %1112, %1111 ], [ %1110, %1109 ]
  %1115 = sext i32 %1114 to i64
  %1116 = getelementptr inbounds %struct.Para, %struct.Para* %1090, i64 %1115, i32 1
  %1117 = load i32, i32* %1116, align 4
  %1118 = trunc i32 %1117 to i8
  br label %1119

1119:                                             ; preds = %1113, %1094
  %1120 = phi i8 [ %1095, %1094 ], [ %1118, %1113 ]
  %1121 = and i8 %1120, 1
  %1122 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %7, i64 0, i32 5, i64 0, i32 5
  store i8 %1121, i8* %1122, align 2
  %1123 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %7, i64 0, i32 5, i64 0, i32 4
  store i8 %1121, i8* %1123, align 1
  %1124 = zext i8 %1121 to i32
  %1125 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %7, i64 0, i32 5, i64 0, i32 6
  store i32 %1124, i32* %1125, align 4
  %1126 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %7, i64 0, i32 5, i64 0, i32 0
  store i32 0, i32* %1126, align 8
  %1127 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 13
  %1128 = load %struct.Opening*, %struct.Opening** %1127, align 8
  %1129 = icmp eq %struct.Opening* %1128, null
  br i1 %1129, label %1136, label %1130

1130:                                             ; preds = %1119
  %1131 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 7
  %1132 = load i32, i32* %1131, align 4
  %1133 = sext i32 %1132 to i64
  %1134 = udiv i64 %1133, 24
  %1135 = trunc i64 %1134 to i32
  br label %1138

1136:                                             ; preds = %1119
  %1137 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %7, i64 0, i32 1, i64 0
  br label %1138

1138:                                             ; preds = %1136, %1130
  %1139 = phi %struct.Opening* [ %1128, %1130 ], [ %1137, %1136 ]
  %1140 = phi i32 [ %1135, %1130 ], [ 20, %1136 ]
  %1141 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %7, i64 0, i32 2
  store %struct.Opening* %1139, %struct.Opening** %1141, align 8
  %1142 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %7, i64 0, i32 3
  store i32 %1140, i32* %1142, align 8
  %1143 = icmp eq i32 %1010, 1
  %1144 = icmp eq i32 %1010, 6
  %1145 = or i1 %1143, %1144
  %1146 = zext i1 %1145 to i8
  %1147 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %7, i64 0, i32 6
  store i8 %1146, i8* %1147, align 8
  %1148 = load i32, i32* %361, align 8
  %1149 = icmp sgt i32 %1148, 0
  br i1 %1149, label %1150, label %1206

1150:                                             ; preds = %1138
  %1151 = sext i32 %957 to i64
  br label %1152

1152:                                             ; preds = %1201, %1150
  %1153 = phi i32 [ %1148, %1150 ], [ %1202, %1201 ]
  %1154 = phi i64 [ 0, %1150 ], [ %1203, %1201 ]
  %1155 = icmp eq i64 %1154, 0
  %1156 = load %struct.Para*, %struct.Para** %389, align 8
  br i1 %1155, label %1161, label %1157

1157:                                             ; preds = %1152
  %1158 = add nsw i64 %1154, -1
  %1159 = getelementptr inbounds %struct.Para, %struct.Para* %1156, i64 %1158, i32 0
  %1160 = load i32, i32* %1159, align 4
  br label %1161

1161:                                             ; preds = %1157, %1152
  %1162 = phi i32 [ %1160, %1157 ], [ 0, %1152 ]
  %1163 = getelementptr inbounds %struct.Para, %struct.Para* %1156, i64 %1154, i32 0
  %1164 = load i32, i32* %1163, align 4
  %1165 = getelementptr inbounds %struct.Para, %struct.Para* %1156, i64 %1154, i32 1
  %1166 = load i32, i32* %1165, align 4
  %1167 = trunc i32 %1166 to i8
  %1168 = icmp slt i32 %1162, %1164
  br i1 %1168, label %1169, label %1201

1169:                                             ; preds = %1161
  %1170 = and i8 %1167, 1
  %1171 = zext i8 %1170 to i32
  %1172 = sext i32 %1162 to i64
  %1173 = sext i32 %1164 to i64
  br label %1174

1174:                                             ; preds = %1196, %1169
  %1175 = phi i64 [ %1172, %1169 ], [ %1197, %1196 ]
  %1176 = getelementptr inbounds i8, i8* %952, i64 %1175
  store i8 %1167, i8* %1176, align 1
  %1177 = getelementptr inbounds i8, i8* %955, i64 %1175
  %1178 = load i8, i8* %1177, align 1
  switch i8 %1178, label %1191 [
    i8 18, label %1196
    i8 7, label %1179
  ]

1179:                                             ; preds = %1174
  %1180 = add nsw i64 %1175, 1
  %1181 = icmp slt i64 %1180, %1151
  br i1 %1181, label %1182, label %1196

1182:                                             ; preds = %1179
  %1183 = getelementptr inbounds i16, i16* %956, i64 %1175
  %1184 = load i16, i16* %1183, align 2
  %1185 = icmp eq i16 %1184, 13
  br i1 %1185, label %1186, label %1190

1186:                                             ; preds = %1182
  %1187 = getelementptr inbounds i16, i16* %956, i64 %1180
  %1188 = load i16, i16* %1187, align 2
  %1189 = icmp eq i16 %1188, 10
  br i1 %1189, label %1196, label %1190

1190:                                             ; preds = %1186, %1182
  store i32 0, i32* %1053, align 4
  store i16 0, i16* %1055, align 2
  store i8 %1167, i8* %1088, align 8
  store i8 %1170, i8* %1122, align 2
  store i8 %1170, i8* %1123, align 1
  store i32 %1171, i32* %1125, align 4
  store i32 0, i32* %1126, align 8
  br label %1196

1191:                                             ; preds = %1174
  %1192 = trunc i64 %1175 to i32
  %1193 = call fastcc signext i8 @_ZL18bracketProcessCharP11BracketDatai(%struct.BracketData* nonnull %7, i32 %1192) #11
  %1194 = icmp eq i8 %1193, 0
  br i1 %1194, label %1195, label %1196

1195:                                             ; preds = %1191
  store i32 7, i32* %5, align 4
  br label %1206

1196:                                             ; preds = %1191, %1190, %1186, %1179, %1174
  %1197 = add nsw i64 %1175, 1
  %1198 = icmp eq i64 %1197, %1173
  br i1 %1198, label %1199, label %1174

1199:                                             ; preds = %1196
  %1200 = load i32, i32* %361, align 8
  br label %1201

1201:                                             ; preds = %1199, %1161
  %1202 = phi i32 [ %1200, %1199 ], [ %1153, %1161 ]
  %1203 = add nuw nsw i64 %1154, 1
  %1204 = sext i32 %1202 to i64
  %1205 = icmp slt i64 %1203, %1204
  br i1 %1205, label %1152, label %1206

1206:                                             ; preds = %1201, %1195, %1138
  %1207 = phi i32 [ 0, %1195 ], [ 2, %1138 ], [ 2, %1201 ]
  call void @llvm.lifetime.end.p0i8(i64 2544, i8* nonnull %1049) #11
  br label %1734

1208:                                             ; preds = %1045
  %1209 = bitcast [127 x i16]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 254, i8* nonnull %1209) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1209, i8 -86, i64 254, i1 false) #11
  %1210 = bitcast %struct.BracketData* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2544, i8* nonnull %1210) #11
  %1211 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 1
  %1212 = bitcast [20 x %struct.Opening]* %1211 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1212, i8 -86, i64 2536, i1 false) #11
  %1213 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 0
  store %struct.UBiDi* %0, %struct.UBiDi** %1213, align 8
  %1214 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 4
  store i32 0, i32* %1214, align 4
  %1215 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 0, i32 1
  store i16 0, i16* %1215, align 4
  %1216 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 0, i32 2
  store i16 0, i16* %1216, align 2
  br i1 %960, label %1222, label %1217

1217:                                             ; preds = %1208
  %1218 = load %struct.Para*, %struct.Para** %389, align 8
  %1219 = getelementptr inbounds %struct.Para, %struct.Para* %1218, i64 0, i32 0
  %1220 = load i32, i32* %1219, align 4
  %1221 = icmp sgt i32 %1220, 0
  br i1 %1221, label %1222, label %1224

1222:                                             ; preds = %1217, %1208
  %1223 = load i8, i8* %357, align 1
  br label %1247

1224:                                             ; preds = %1217
  %1225 = load i32, i32* %361, align 8
  %1226 = icmp sgt i32 %1225, 0
  br i1 %1226, label %1227, label %1237

1227:                                             ; preds = %1224
  %1228 = sext i32 %1225 to i64
  br label %1229

1229:                                             ; preds = %1233, %1227
  %1230 = phi i64 [ %1231, %1233 ], [ 0, %1227 ]
  %1231 = add nuw nsw i64 %1230, 1
  %1232 = icmp eq i64 %1231, %1228
  br i1 %1232, label %1237, label %1233

1233:                                             ; preds = %1229
  %1234 = getelementptr inbounds %struct.Para, %struct.Para* %1218, i64 %1231, i32 0
  %1235 = load i32, i32* %1234, align 4
  %1236 = icmp sgt i32 %1235, 0
  br i1 %1236, label %1239, label %1229

1237:                                             ; preds = %1229, %1224
  %1238 = add nsw i32 %1225, -1
  br label %1241

1239:                                             ; preds = %1233
  %1240 = trunc i64 %1231 to i32
  br label %1241

1241:                                             ; preds = %1239, %1237
  %1242 = phi i32 [ %1240, %1239 ], [ %1238, %1237 ]
  %1243 = sext i32 %1242 to i64
  %1244 = getelementptr inbounds %struct.Para, %struct.Para* %1218, i64 %1243, i32 1
  %1245 = load i32, i32* %1244, align 4
  %1246 = trunc i32 %1245 to i8
  br label %1247

1247:                                             ; preds = %1241, %1222
  %1248 = phi i8 [ %1223, %1222 ], [ %1246, %1241 ]
  %1249 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 0, i32 3
  store i8 %1248, i8* %1249, align 8
  br i1 %960, label %1255, label %1250

1250:                                             ; preds = %1247
  %1251 = load %struct.Para*, %struct.Para** %389, align 8
  %1252 = getelementptr inbounds %struct.Para, %struct.Para* %1251, i64 0, i32 0
  %1253 = load i32, i32* %1252, align 4
  %1254 = icmp sgt i32 %1253, 0
  br i1 %1254, label %1255, label %1257

1255:                                             ; preds = %1250, %1247
  %1256 = load i8, i8* %357, align 1
  br label %1280

1257:                                             ; preds = %1250
  %1258 = load i32, i32* %361, align 8
  %1259 = icmp sgt i32 %1258, 0
  br i1 %1259, label %1260, label %1270

1260:                                             ; preds = %1257
  %1261 = sext i32 %1258 to i64
  br label %1262

1262:                                             ; preds = %1266, %1260
  %1263 = phi i64 [ %1264, %1266 ], [ 0, %1260 ]
  %1264 = add nuw nsw i64 %1263, 1
  %1265 = icmp eq i64 %1264, %1261
  br i1 %1265, label %1270, label %1266

1266:                                             ; preds = %1262
  %1267 = getelementptr inbounds %struct.Para, %struct.Para* %1251, i64 %1264, i32 0
  %1268 = load i32, i32* %1267, align 4
  %1269 = icmp sgt i32 %1268, 0
  br i1 %1269, label %1272, label %1262

1270:                                             ; preds = %1262, %1257
  %1271 = add nsw i32 %1258, -1
  br label %1274

1272:                                             ; preds = %1266
  %1273 = trunc i64 %1264 to i32
  br label %1274

1274:                                             ; preds = %1272, %1270
  %1275 = phi i32 [ %1273, %1272 ], [ %1271, %1270 ]
  %1276 = sext i32 %1275 to i64
  %1277 = getelementptr inbounds %struct.Para, %struct.Para* %1251, i64 %1276, i32 1
  %1278 = load i32, i32* %1277, align 4
  %1279 = trunc i32 %1278 to i8
  br label %1280

1280:                                             ; preds = %1274, %1255
  %1281 = phi i8 [ %1256, %1255 ], [ %1279, %1274 ]
  %1282 = and i8 %1281, 1
  %1283 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 0, i32 5
  store i8 %1282, i8* %1283, align 2
  %1284 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 0, i32 4
  store i8 %1282, i8* %1284, align 1
  %1285 = zext i8 %1282 to i32
  %1286 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 0, i32 6
  store i32 %1285, i32* %1286, align 4
  %1287 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 0, i32 0
  store i32 0, i32* %1287, align 8
  %1288 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 13
  %1289 = load %struct.Opening*, %struct.Opening** %1288, align 8
  %1290 = icmp eq %struct.Opening* %1289, null
  br i1 %1290, label %1297, label %1291

1291:                                             ; preds = %1280
  %1292 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 7
  %1293 = load i32, i32* %1292, align 4
  %1294 = sext i32 %1293 to i64
  %1295 = udiv i64 %1294, 24
  %1296 = trunc i64 %1295 to i32
  br label %1299

1297:                                             ; preds = %1280
  %1298 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 1, i64 0
  br label %1299

1299:                                             ; preds = %1297, %1291
  %1300 = phi %struct.Opening* [ %1289, %1291 ], [ %1298, %1297 ]
  %1301 = phi i32 [ %1296, %1291 ], [ 20, %1297 ]
  %1302 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 2
  store %struct.Opening* %1300, %struct.Opening** %1302, align 8
  %1303 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 3
  store i32 %1301, i32* %1303, align 8
  %1304 = icmp eq i32 %1010, 1
  %1305 = icmp eq i32 %1010, 6
  %1306 = or i1 %1304, %1305
  %1307 = zext i1 %1306 to i8
  %1308 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 6
  store i8 %1307, i8* %1308, align 8
  %1309 = zext i8 %992 to i16
  %1310 = getelementptr inbounds [127 x i16], [127 x i16]* %8, i64 0, i64 0
  store i16 %1309, i16* %1310, align 16
  %1311 = icmp sgt i32 %957, 0
  br i1 %1311, label %1312, label %1709

1312:                                             ; preds = %1299
  %1313 = sext i32 %957 to i64
  %1314 = zext i32 %957 to i64
  br label %1315

1315:                                             ; preds = %1688, %1312
  %1316 = phi i64 [ 0, %1312 ], [ %1697, %1688 ]
  %1317 = phi i32 [ 0, %1312 ], [ %1696, %1688 ]
  %1318 = phi i32 [ 0, %1312 ], [ %1695, %1688 ]
  %1319 = phi i32 [ 0, %1312 ], [ %1694, %1688 ]
  %1320 = phi i32 [ 0, %1312 ], [ %1693, %1688 ]
  %1321 = phi i32 [ 0, %1312 ], [ %1692, %1688 ]
  %1322 = phi i8 [ %992, %1312 ], [ %1691, %1688 ]
  %1323 = phi i8 [ %992, %1312 ], [ %1690, %1688 ]
  %1324 = phi i32 [ 0, %1312 ], [ %1689, %1688 ]
  %1325 = getelementptr inbounds i8, i8* %955, i64 %1316
  %1326 = load i8, i8* %1325, align 1
  %1327 = trunc i64 %1316 to i32
  switch i8 %1326, label %1635 [
    i8 11, label %1328
    i8 14, label %1328
    i8 12, label %1328
    i8 15, label %1328
    i8 16, label %1359
    i8 20, label %1380
    i8 21, label %1380
    i8 22, label %1468
    i8 7, label %1543
    i8 18, label %1632
  ]

1328:                                             ; preds = %1315, %1315, %1315, %1315
  %1329 = or i32 %1324, 262144
  %1330 = getelementptr inbounds i8, i8* %952, i64 %1316
  store i8 %1322, i8* %1330, align 1
  %1331 = add nsw i8 %1326, -11
  %1332 = icmp ult i8 %1331, 2
  br i1 %1332, label %1333, label %1336

1333:                                             ; preds = %1328
  %1334 = add i8 %1323, 2
  %1335 = and i8 %1334, 126
  br label %1340

1336:                                             ; preds = %1328
  %1337 = and i8 %1323, 127
  %1338 = add nuw i8 %1337, 1
  %1339 = or i8 %1338, 1
  br label %1340

1340:                                             ; preds = %1336, %1333
  %1341 = phi i8 [ %1335, %1333 ], [ %1339, %1336 ]
  %1342 = icmp ult i8 %1341, 126
  %1343 = or i32 %1319, %1318
  %1344 = icmp eq i32 %1343, 0
  %1345 = and i1 %1344, %1342
  br i1 %1345, label %1346, label %1355

1346:                                             ; preds = %1340
  switch i8 %1326, label %1349 [
    i8 12, label %1347
    i8 15, label %1347
  ]

1347:                                             ; preds = %1346, %1346
  %1348 = or i8 %1341, -128
  br label %1349

1349:                                             ; preds = %1347, %1346
  %1350 = phi i8 [ %1348, %1347 ], [ %1341, %1346 ]
  %1351 = add i32 %1320, 1
  %1352 = zext i8 %1350 to i16
  %1353 = zext i32 %1351 to i64
  %1354 = getelementptr inbounds [127 x i16], [127 x i16]* %8, i64 0, i64 %1353
  store i16 %1352, i16* %1354, align 2
  br label %1688

1355:                                             ; preds = %1340
  %1356 = icmp eq i32 %1319, 0
  %1357 = zext i1 %1356 to i32
  %1358 = add nsw i32 %1318, %1357
  br label %1688

1359:                                             ; preds = %1315
  %1360 = or i32 %1324, 262144
  %1361 = getelementptr inbounds i8, i8* %952, i64 %1316
  store i8 %1322, i8* %1361, align 1
  %1362 = icmp eq i32 %1319, 0
  br i1 %1362, label %1363, label %1688

1363:                                             ; preds = %1359
  %1364 = icmp eq i32 %1318, 0
  br i1 %1364, label %1367, label %1365

1365:                                             ; preds = %1363
  %1366 = add nsw i32 %1318, -1
  br label %1688

1367:                                             ; preds = %1363
  %1368 = icmp eq i32 %1320, 0
  br i1 %1368, label %1688, label %1369

1369:                                             ; preds = %1367
  %1370 = zext i32 %1320 to i64
  %1371 = getelementptr inbounds [127 x i16], [127 x i16]* %8, i64 0, i64 %1370
  %1372 = load i16, i16* %1371, align 2
  %1373 = icmp ult i16 %1372, 256
  br i1 %1373, label %1374, label %1688

1374:                                             ; preds = %1369
  %1375 = add i32 %1320, -1
  %1376 = zext i32 %1375 to i64
  %1377 = getelementptr inbounds [127 x i16], [127 x i16]* %8, i64 0, i64 %1376
  %1378 = load i16, i16* %1377, align 2
  %1379 = trunc i16 %1378 to i8
  br label %1688

1380:                                             ; preds = %1315, %1315
  %1381 = zext i8 %1323 to i32
  %1382 = and i32 %1381, 1
  %1383 = zext i32 %1382 to i64
  %1384 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZL6flagLR, i64 0, i64 %1383
  %1385 = load i32, i32* %1384, align 4
  %1386 = or i32 %1385, %1324
  %1387 = or i32 %1386, 1024
  %1388 = and i32 %1381, 127
  %1389 = trunc i32 %1388 to i8
  %1390 = getelementptr inbounds i8, i8* %952, i64 %1316
  store i8 %1389, i8* %1390, align 1
  %1391 = and i8 %1322, 127
  %1392 = zext i8 %1391 to i32
  %1393 = icmp eq i32 %1388, %1392
  br i1 %1393, label %1423, label %1394

1394:                                             ; preds = %1380
  %1395 = load i32, i32* %1214, align 4
  %1396 = sext i32 %1395 to i64
  %1397 = load %struct.UBiDi*, %struct.UBiDi** %1213, align 8
  %1398 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %1397, i64 0, i32 19
  %1399 = load i8*, i8** %1398, align 8
  %1400 = sext i32 %1321 to i64
  %1401 = getelementptr inbounds i8, i8* %1399, i64 %1400
  %1402 = load i8, i8* %1401, align 1
  %1403 = zext i8 %1402 to i64
  %1404 = shl i64 1, %1403
  %1405 = and i64 %1404, 7864320
  %1406 = icmp eq i64 %1405, 0
  br i1 %1406, label %1407, label %1421

1407:                                             ; preds = %1394
  %1408 = and i8 %1323, 127
  %1409 = icmp ugt i8 %1408, %1391
  %1410 = select i1 %1409, i8 %1323, i8 %1322
  %1411 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1396, i32 1
  %1412 = load i16, i16* %1411, align 4
  %1413 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1396, i32 2
  store i16 %1412, i16* %1413, align 2
  %1414 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1396, i32 3
  store i8 %1323, i8* %1414, align 8
  %1415 = and i8 %1410, 1
  %1416 = zext i8 %1415 to i32
  %1417 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1396, i32 5
  store i8 %1415, i8* %1417, align 2
  %1418 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1396, i32 4
  store i8 %1415, i8* %1418, align 1
  %1419 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1396, i32 6
  store i32 %1416, i32* %1419, align 4
  %1420 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1396, i32 0
  store i32 %1321, i32* %1420, align 8
  br label %1421

1421:                                             ; preds = %1407, %1394
  %1422 = or i32 %1386, -2147482624
  br label %1423

1423:                                             ; preds = %1421, %1380
  %1424 = phi i32 [ %1422, %1421 ], [ %1387, %1380 ]
  %1425 = icmp eq i8 %1326, 20
  %1426 = add i8 %1323, 2
  %1427 = and i8 %1426, 126
  %1428 = add nuw i8 %1389, 1
  %1429 = or i8 %1428, 1
  %1430 = select i1 %1425, i8 %1427, i8 %1429
  %1431 = zext i8 %1430 to i16
  %1432 = icmp ult i8 %1430, 126
  %1433 = or i32 %1319, %1318
  %1434 = icmp eq i32 %1433, 0
  %1435 = and i1 %1434, %1432
  br i1 %1435, label %1436, label %1466

1436:                                             ; preds = %1423
  %1437 = zext i8 %1326 to i64
  %1438 = shl i64 1, %1437
  %1439 = trunc i64 %1438 to i32
  %1440 = or i32 %1424, %1439
  %1441 = add nsw i32 %1317, 1
  %1442 = load i32, i32* %993, align 4
  %1443 = icmp slt i32 %1317, %1442
  br i1 %1443, label %1445, label %1444

1444:                                             ; preds = %1436
  store i32 %1441, i32* %993, align 4
  br label %1445

1445:                                             ; preds = %1444, %1436
  %1446 = add i32 %1320, 1
  %1447 = or i16 %1431, 256
  %1448 = zext i32 %1446 to i64
  %1449 = getelementptr inbounds [127 x i16], [127 x i16]* %8, i64 0, i64 %1448
  store i16 %1447, i16* %1449, align 2
  %1450 = load i32, i32* %1214, align 4
  %1451 = sext i32 %1450 to i64
  %1452 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1451
  %1453 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1451, i32 5
  store i8 10, i8* %1453, align 2
  %1454 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1451, i32 2
  %1455 = load i16, i16* %1454, align 2
  %1456 = add nsw i32 %1450, 1
  store i32 %1456, i32* %1214, align 4
  %1457 = getelementptr inbounds %struct.IsoRun, %struct.IsoRun* %1452, i64 1, i32 2
  store i16 %1455, i16* %1457, align 2
  %1458 = getelementptr inbounds %struct.IsoRun, %struct.IsoRun* %1452, i64 1, i32 1
  store i16 %1455, i16* %1458, align 4
  %1459 = getelementptr inbounds %struct.IsoRun, %struct.IsoRun* %1452, i64 1, i32 3
  store i8 %1430, i8* %1459, align 8
  %1460 = and i8 %1430, 1
  %1461 = zext i8 %1460 to i32
  %1462 = getelementptr inbounds %struct.IsoRun, %struct.IsoRun* %1452, i64 1, i32 5
  store i8 %1460, i8* %1462, align 2
  %1463 = getelementptr inbounds %struct.IsoRun, %struct.IsoRun* %1452, i64 1, i32 4
  store i8 %1460, i8* %1463, align 1
  %1464 = getelementptr inbounds %struct.IsoRun, %struct.IsoRun* %1452, i64 1, i32 6
  store i32 %1461, i32* %1464, align 4
  %1465 = getelementptr inbounds %struct.IsoRun, %struct.IsoRun* %1452, i64 1, i32 0
  store i32 0, i32* %1465, align 8
  br label %1688

1466:                                             ; preds = %1423
  store i8 9, i8* %1325, align 1
  %1467 = add nsw i32 %1319, 1
  br label %1688

1468:                                             ; preds = %1315
  %1469 = xor i8 %1323, %1322
  %1470 = and i8 %1469, 127
  %1471 = icmp eq i8 %1470, 0
  br i1 %1471, label %1502, label %1472

1472:                                             ; preds = %1468
  %1473 = load i32, i32* %1214, align 4
  %1474 = sext i32 %1473 to i64
  %1475 = load %struct.UBiDi*, %struct.UBiDi** %1213, align 8
  %1476 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %1475, i64 0, i32 19
  %1477 = load i8*, i8** %1476, align 8
  %1478 = sext i32 %1321 to i64
  %1479 = getelementptr inbounds i8, i8* %1477, i64 %1478
  %1480 = load i8, i8* %1479, align 1
  %1481 = zext i8 %1480 to i64
  %1482 = shl i64 1, %1481
  %1483 = and i64 %1482, 7864320
  %1484 = icmp eq i64 %1483, 0
  br i1 %1484, label %1485, label %1500

1485:                                             ; preds = %1472
  %1486 = and i8 %1323, 127
  %1487 = and i8 %1322, 127
  %1488 = icmp ugt i8 %1486, %1487
  %1489 = select i1 %1488, i8 %1323, i8 %1322
  %1490 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1474, i32 1
  %1491 = load i16, i16* %1490, align 4
  %1492 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1474, i32 2
  store i16 %1491, i16* %1492, align 2
  %1493 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1474, i32 3
  store i8 %1323, i8* %1493, align 8
  %1494 = and i8 %1489, 1
  %1495 = zext i8 %1494 to i32
  %1496 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1474, i32 5
  store i8 %1494, i8* %1496, align 2
  %1497 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1474, i32 4
  store i8 %1494, i8* %1497, align 1
  %1498 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1474, i32 6
  store i32 %1495, i32* %1498, align 4
  %1499 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1474, i32 0
  store i32 %1321, i32* %1499, align 8
  br label %1500

1500:                                             ; preds = %1485, %1472
  %1501 = or i32 %1324, -2147483648
  br label %1502

1502:                                             ; preds = %1500, %1468
  %1503 = phi i32 [ %1501, %1500 ], [ %1324, %1468 ]
  %1504 = icmp eq i32 %1319, 0
  br i1 %1504, label %1507, label %1505

1505:                                             ; preds = %1502
  %1506 = add nsw i32 %1319, -1
  store i8 9, i8* %1325, align 1
  br label %1524

1507:                                             ; preds = %1502
  %1508 = icmp eq i32 %1317, 0
  br i1 %1508, label %1523, label %1509

1509:                                             ; preds = %1507, %1509
  %1510 = phi i32 [ %1515, %1509 ], [ %1320, %1507 ]
  %1511 = zext i32 %1510 to i64
  %1512 = getelementptr inbounds [127 x i16], [127 x i16]* %8, i64 0, i64 %1511
  %1513 = load i16, i16* %1512, align 2
  %1514 = icmp ult i16 %1513, 256
  %1515 = add i32 %1510, -1
  br i1 %1514, label %1509, label %1516

1516:                                             ; preds = %1509
  %1517 = or i32 %1503, 4194304
  %1518 = add nsw i32 %1317, -1
  %1519 = load i32, i32* %1214, align 4
  %1520 = add nsw i32 %1519, -1
  store i32 %1520, i32* %1214, align 4
  %1521 = sext i32 %1520 to i64
  %1522 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1521, i32 5
  store i8 10, i8* %1522, align 2
  br label %1524

1523:                                             ; preds = %1507
  store i8 9, i8* %1325, align 1
  br label %1524

1524:                                             ; preds = %1523, %1516, %1505
  %1525 = phi i32 [ %1503, %1505 ], [ %1517, %1516 ], [ %1503, %1523 ]
  %1526 = phi i32 [ %1321, %1505 ], [ %1327, %1516 ], [ %1321, %1523 ]
  %1527 = phi i32 [ %1320, %1505 ], [ %1515, %1516 ], [ %1320, %1523 ]
  %1528 = phi i32 [ %1506, %1505 ], [ 0, %1516 ], [ 0, %1523 ]
  %1529 = phi i32 [ %1318, %1505 ], [ 0, %1516 ], [ %1318, %1523 ]
  %1530 = phi i32 [ %1317, %1505 ], [ %1518, %1516 ], [ 0, %1523 ]
  %1531 = zext i32 %1527 to i64
  %1532 = getelementptr inbounds [127 x i16], [127 x i16]* %8, i64 0, i64 %1531
  %1533 = load i16, i16* %1532, align 2
  %1534 = trunc i16 %1533 to i8
  %1535 = and i16 %1533, 1
  %1536 = zext i16 %1535 to i64
  %1537 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZL6flagLR, i64 0, i64 %1536
  %1538 = load i32, i32* %1537, align 4
  %1539 = or i32 %1525, %1538
  %1540 = or i32 %1539, 1024
  %1541 = and i8 %1534, 127
  %1542 = getelementptr inbounds i8, i8* %952, i64 %1316
  store i8 %1541, i8* %1542, align 1
  br label %1688

1543:                                             ; preds = %1315
  %1544 = or i32 %1324, 128
  %1545 = load i8, i8* %369, align 2
  %1546 = icmp eq i8 %1545, 0
  br i1 %1546, label %1553, label %1547

1547:                                             ; preds = %1543
  %1548 = load %struct.Para*, %struct.Para** %389, align 8
  %1549 = getelementptr inbounds %struct.Para, %struct.Para* %1548, i64 0, i32 0
  %1550 = load i32, i32* %1549, align 4
  %1551 = sext i32 %1550 to i64
  %1552 = icmp slt i64 %1316, %1551
  br i1 %1552, label %1553, label %1555

1553:                                             ; preds = %1547, %1543
  %1554 = load i8, i8* %357, align 1
  br label %1579

1555:                                             ; preds = %1547
  %1556 = load i32, i32* %361, align 8
  %1557 = icmp sgt i32 %1556, 0
  br i1 %1557, label %1558, label %1569

1558:                                             ; preds = %1555
  %1559 = sext i32 %1556 to i64
  br label %1560

1560:                                             ; preds = %1558, %1564
  %1561 = phi i64 [ %1562, %1564 ], [ 0, %1558 ]
  %1562 = add nuw nsw i64 %1561, 1
  %1563 = icmp eq i64 %1562, %1559
  br i1 %1563, label %1569, label %1564

1564:                                             ; preds = %1560
  %1565 = getelementptr inbounds %struct.Para, %struct.Para* %1548, i64 %1562, i32 0
  %1566 = load i32, i32* %1565, align 4
  %1567 = sext i32 %1566 to i64
  %1568 = icmp slt i64 %1316, %1567
  br i1 %1568, label %1571, label %1560

1569:                                             ; preds = %1560, %1555
  %1570 = add nsw i32 %1556, -1
  br label %1573

1571:                                             ; preds = %1564
  %1572 = trunc i64 %1562 to i32
  br label %1573

1573:                                             ; preds = %1571, %1569
  %1574 = phi i32 [ %1572, %1571 ], [ %1570, %1569 ]
  %1575 = sext i32 %1574 to i64
  %1576 = getelementptr inbounds %struct.Para, %struct.Para* %1548, i64 %1575, i32 1
  %1577 = load i32, i32* %1576, align 4
  %1578 = trunc i32 %1577 to i8
  br label %1579

1579:                                             ; preds = %1573, %1553
  %1580 = phi i8 [ %1554, %1553 ], [ %1578, %1573 ]
  %1581 = getelementptr inbounds i8, i8* %952, i64 %1316
  store i8 %1580, i8* %1581, align 1
  %1582 = add nuw nsw i64 %1316, 1
  %1583 = icmp slt i64 %1582, %1313
  br i1 %1583, label %1584, label %1688

1584:                                             ; preds = %1579
  %1585 = getelementptr inbounds i16, i16* %956, i64 %1316
  %1586 = load i16, i16* %1585, align 2
  %1587 = icmp eq i16 %1586, 13
  br i1 %1587, label %1588, label %1592

1588:                                             ; preds = %1584
  %1589 = getelementptr inbounds i16, i16* %956, i64 %1582
  %1590 = load i16, i16* %1589, align 2
  %1591 = icmp eq i16 %1590, 10
  br i1 %1591, label %1688, label %1592

1592:                                             ; preds = %1588, %1584
  %1593 = load i8, i8* %369, align 2
  %1594 = icmp eq i8 %1593, 0
  br i1 %1594, label %1601, label %1595

1595:                                             ; preds = %1592
  %1596 = load %struct.Para*, %struct.Para** %389, align 8
  %1597 = getelementptr inbounds %struct.Para, %struct.Para* %1596, i64 0, i32 0
  %1598 = load i32, i32* %1597, align 4
  %1599 = sext i32 %1598 to i64
  %1600 = icmp slt i64 %1582, %1599
  br i1 %1600, label %1601, label %1603

1601:                                             ; preds = %1595, %1592
  %1602 = load i8, i8* %357, align 1
  br label %1627

1603:                                             ; preds = %1595
  %1604 = load i32, i32* %361, align 8
  %1605 = icmp sgt i32 %1604, 0
  br i1 %1605, label %1606, label %1617

1606:                                             ; preds = %1603
  %1607 = sext i32 %1604 to i64
  br label %1608

1608:                                             ; preds = %1606, %1612
  %1609 = phi i64 [ %1610, %1612 ], [ 0, %1606 ]
  %1610 = add nuw nsw i64 %1609, 1
  %1611 = icmp eq i64 %1610, %1607
  br i1 %1611, label %1617, label %1612

1612:                                             ; preds = %1608
  %1613 = getelementptr inbounds %struct.Para, %struct.Para* %1596, i64 %1610, i32 0
  %1614 = load i32, i32* %1613, align 4
  %1615 = sext i32 %1614 to i64
  %1616 = icmp slt i64 %1582, %1615
  br i1 %1616, label %1619, label %1608

1617:                                             ; preds = %1608, %1603
  %1618 = add nsw i32 %1604, -1
  br label %1621

1619:                                             ; preds = %1612
  %1620 = trunc i64 %1610 to i32
  br label %1621

1621:                                             ; preds = %1619, %1617
  %1622 = phi i32 [ %1620, %1619 ], [ %1618, %1617 ]
  %1623 = sext i32 %1622 to i64
  %1624 = getelementptr inbounds %struct.Para, %struct.Para* %1596, i64 %1623, i32 1
  %1625 = load i32, i32* %1624, align 4
  %1626 = trunc i32 %1625 to i8
  br label %1627

1627:                                             ; preds = %1621, %1601
  %1628 = phi i8 [ %1602, %1601 ], [ %1626, %1621 ]
  %1629 = zext i8 %1628 to i16
  store i16 %1629, i16* %1310, align 16
  store i32 0, i32* %1214, align 4
  store i16 0, i16* %1216, align 2
  store i8 %1628, i8* %1249, align 8
  %1630 = and i8 %1628, 1
  %1631 = zext i8 %1630 to i32
  store i8 %1630, i8* %1283, align 2
  store i8 %1630, i8* %1284, align 1
  store i32 %1631, i32* %1286, align 4
  store i32 0, i32* %1287, align 8
  br label %1688

1632:                                             ; preds = %1315
  %1633 = getelementptr inbounds i8, i8* %952, i64 %1316
  store i8 %1322, i8* %1633, align 1
  %1634 = or i32 %1324, 262144
  br label %1688

1635:                                             ; preds = %1315
  %1636 = zext i8 %1323 to i32
  %1637 = and i32 %1636, 127
  %1638 = and i8 %1322, 127
  %1639 = zext i8 %1638 to i32
  %1640 = icmp eq i32 %1637, %1639
  br i1 %1640, label %1677, label %1641

1641:                                             ; preds = %1635
  %1642 = load i32, i32* %1214, align 4
  %1643 = sext i32 %1642 to i64
  %1644 = load %struct.UBiDi*, %struct.UBiDi** %1213, align 8
  %1645 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %1644, i64 0, i32 19
  %1646 = load i8*, i8** %1645, align 8
  %1647 = sext i32 %1321 to i64
  %1648 = getelementptr inbounds i8, i8* %1646, i64 %1647
  %1649 = load i8, i8* %1648, align 1
  %1650 = zext i8 %1649 to i64
  %1651 = shl i64 1, %1650
  %1652 = and i64 %1651, 7864320
  %1653 = icmp eq i64 %1652, 0
  br i1 %1653, label %1654, label %1668

1654:                                             ; preds = %1641
  %1655 = and i8 %1323, 127
  %1656 = icmp ugt i8 %1655, %1638
  %1657 = select i1 %1656, i8 %1323, i8 %1322
  %1658 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1643, i32 1
  %1659 = load i16, i16* %1658, align 4
  %1660 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1643, i32 2
  store i16 %1659, i16* %1660, align 2
  %1661 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1643, i32 3
  store i8 %1323, i8* %1661, align 8
  %1662 = and i8 %1657, 1
  %1663 = zext i8 %1662 to i32
  %1664 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1643, i32 5
  store i8 %1662, i8* %1664, align 2
  %1665 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1643, i32 4
  store i8 %1662, i8* %1665, align 1
  %1666 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1643, i32 6
  store i32 %1663, i32* %1666, align 4
  %1667 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %9, i64 0, i32 5, i64 %1643, i32 0
  store i32 %1321, i32* %1667, align 8
  br label %1668

1668:                                             ; preds = %1654, %1641
  %1669 = or i32 %1324, -2147483648
  %1670 = icmp slt i8 %1323, 0
  %1671 = and i32 %1636, 1
  %1672 = zext i32 %1671 to i64
  %1673 = select i1 %1670, [2 x i32]* @_ZL5flagO, [2 x i32]* @_ZL5flagE
  %1674 = getelementptr inbounds [2 x i32], [2 x i32]* %1673, i64 0, i64 %1672
  %1675 = load i32, i32* %1674, align 4
  %1676 = or i32 %1675, %1669
  br label %1677

1677:                                             ; preds = %1668, %1635
  %1678 = phi i32 [ %1324, %1635 ], [ %1676, %1668 ]
  %1679 = getelementptr inbounds i8, i8* %952, i64 %1316
  store i8 %1323, i8* %1679, align 1
  %1680 = call fastcc signext i8 @_ZL18bracketProcessCharP11BracketDatai(%struct.BracketData* nonnull %9, i32 %1327) #11
  %1681 = icmp eq i8 %1680, 0
  br i1 %1681, label %1731, label %1682

1682:                                             ; preds = %1677
  %1683 = load i8, i8* %1325, align 1
  %1684 = zext i8 %1683 to i64
  %1685 = shl i64 1, %1684
  %1686 = trunc i64 %1685 to i32
  %1687 = or i32 %1678, %1686
  br label %1688

1688:                                             ; preds = %1682, %1632, %1627, %1588, %1579, %1524, %1466, %1445, %1374, %1369, %1367, %1365, %1359, %1355, %1349
  %1689 = phi i32 [ %1687, %1682 ], [ %1634, %1632 ], [ %1544, %1588 ], [ %1544, %1627 ], [ %1544, %1579 ], [ %1540, %1524 ], [ %1440, %1445 ], [ %1424, %1466 ], [ %1360, %1359 ], [ %1360, %1365 ], [ %1360, %1374 ], [ %1360, %1369 ], [ %1360, %1367 ], [ %1329, %1349 ], [ %1329, %1355 ]
  %1690 = phi i8 [ %1323, %1682 ], [ %1323, %1632 ], [ %1323, %1588 ], [ %1628, %1627 ], [ %1323, %1579 ], [ %1534, %1524 ], [ %1430, %1445 ], [ %1323, %1466 ], [ %1323, %1359 ], [ %1323, %1365 ], [ %1379, %1374 ], [ %1323, %1369 ], [ %1323, %1367 ], [ %1350, %1349 ], [ %1323, %1355 ]
  %1691 = phi i8 [ %1323, %1682 ], [ %1322, %1632 ], [ %1322, %1588 ], [ %1628, %1627 ], [ %1322, %1579 ], [ %1534, %1524 ], [ %1323, %1445 ], [ %1323, %1466 ], [ %1322, %1359 ], [ %1322, %1365 ], [ %1322, %1374 ], [ %1322, %1369 ], [ %1322, %1367 ], [ %1322, %1349 ], [ %1322, %1355 ]
  %1692 = phi i32 [ %1321, %1682 ], [ %1321, %1632 ], [ %1321, %1588 ], [ %1321, %1627 ], [ %1321, %1579 ], [ %1526, %1524 ], [ %1327, %1445 ], [ %1321, %1466 ], [ %1321, %1359 ], [ %1321, %1365 ], [ %1327, %1374 ], [ %1321, %1369 ], [ %1321, %1367 ], [ %1327, %1349 ], [ %1321, %1355 ]
  %1693 = phi i32 [ %1320, %1682 ], [ %1320, %1632 ], [ %1320, %1588 ], [ 0, %1627 ], [ %1320, %1579 ], [ %1527, %1524 ], [ %1446, %1445 ], [ %1320, %1466 ], [ %1320, %1359 ], [ %1320, %1365 ], [ %1375, %1374 ], [ %1320, %1369 ], [ 0, %1367 ], [ %1351, %1349 ], [ %1320, %1355 ]
  %1694 = phi i32 [ %1319, %1682 ], [ %1319, %1632 ], [ %1319, %1588 ], [ 0, %1627 ], [ %1319, %1579 ], [ %1528, %1524 ], [ %1319, %1445 ], [ %1467, %1466 ], [ %1319, %1359 ], [ 0, %1365 ], [ 0, %1374 ], [ 0, %1369 ], [ 0, %1367 ], [ %1319, %1349 ], [ %1319, %1355 ]
  %1695 = phi i32 [ %1318, %1682 ], [ %1318, %1632 ], [ %1318, %1588 ], [ 0, %1627 ], [ %1318, %1579 ], [ %1529, %1524 ], [ %1318, %1445 ], [ %1318, %1466 ], [ %1318, %1359 ], [ %1366, %1365 ], [ 0, %1374 ], [ 0, %1369 ], [ 0, %1367 ], [ %1318, %1349 ], [ %1358, %1355 ]
  %1696 = phi i32 [ %1317, %1682 ], [ %1317, %1632 ], [ %1317, %1588 ], [ 0, %1627 ], [ %1317, %1579 ], [ %1530, %1524 ], [ %1441, %1445 ], [ %1317, %1466 ], [ %1317, %1359 ], [ %1317, %1365 ], [ %1317, %1374 ], [ %1317, %1369 ], [ %1317, %1367 ], [ %1317, %1349 ], [ %1317, %1355 ]
  %1697 = add nuw nsw i64 %1316, 1
  %1698 = icmp eq i64 %1697, %1314
  br i1 %1698, label %1699, label %1315

1699:                                             ; preds = %1688
  %1700 = and i32 %1689, 8380376
  %1701 = icmp eq i32 %1700, 0
  br i1 %1701, label %1709, label %1702

1702:                                             ; preds = %1699
  %1703 = load i8, i8* %357, align 1
  %1704 = and i8 %1703, 1
  %1705 = zext i8 %1704 to i64
  %1706 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZL6flagLR, i64 0, i64 %1705
  %1707 = load i32, i32* %1706, align 4
  %1708 = or i32 %1707, %1689
  br label %1709

1709:                                             ; preds = %1702, %1699, %1299
  %1710 = phi i32 [ %1708, %1702 ], [ %1689, %1699 ], [ 0, %1299 ]
  %1711 = load i8, i8* %913, align 4
  %1712 = icmp ne i8 %1711, 0
  %1713 = trunc i32 %1710 to i8
  %1714 = icmp slt i8 %1713, 0
  %1715 = and i1 %1712, %1714
  %1716 = zext i1 %1715 to i32
  %1717 = or i32 %1710, %1716
  store i32 %1717, i32* %921, align 4
  %1718 = zext i32 %1717 to i64
  %1719 = and i64 %1718, 2154498
  %1720 = icmp eq i64 %1719, 0
  br i1 %1720, label %1721, label %1727

1721:                                             ; preds = %1709
  %1722 = and i64 %1718, 32
  %1723 = icmp eq i64 %1722, 0
  %1724 = and i64 %1718, 8249304
  %1725 = icmp eq i64 %1724, 0
  %1726 = or i1 %1723, %1725
  br i1 %1726, label %1732, label %1727

1727:                                             ; preds = %1721, %1709
  %1728 = and i64 %1718, 26220581
  %1729 = icmp eq i64 %1728, 0
  %1730 = select i1 %1729, i32 1, i32 2
  br label %1732

1731:                                             ; preds = %1677
  call void @llvm.lifetime.end.p0i8(i64 2544, i8* nonnull %1210) #11
  call void @llvm.lifetime.end.p0i8(i64 254, i8* nonnull %1209) #11
  br label %1734

1732:                                             ; preds = %1727, %1721
  %1733 = phi i32 [ %1730, %1727 ], [ 0, %1721 ]
  call void @llvm.lifetime.end.p0i8(i64 2544, i8* nonnull %1210) #11
  call void @llvm.lifetime.end.p0i8(i64 254, i8* nonnull %1209) #11
  br label %1734

1734:                                             ; preds = %1040, %1000, %1006, %1012, %1206, %1731, %1732
  %1735 = phi i32 [ 2, %1012 ], [ 1, %1006 ], [ 0, %1000 ], [ %1207, %1206 ], [ -1, %1731 ], [ %1733, %1732 ], [ 2, %1040 ]
  %1736 = load i32, i32* %5, align 4
  %1737 = icmp slt i32 %1736, 1
  br i1 %1737, label %1854, label %2507

1738:                                             ; preds = %935, %933, %942, %944
  store i32 7, i32* %5, align 4
  br label %2507

1739:                                             ; preds = %911
  store i8* %4, i8** %363, align 8
  %1740 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 42
  store i32 0, i32* %1740, align 4
  %1741 = icmp sgt i32 %924, 0
  br i1 %1741, label %1743, label %1742

1742:                                             ; preds = %1739
  store i32 0, i32* %921, align 4
  br label %1850

1743:                                             ; preds = %1739
  %1744 = load i8, i8* %357, align 1
  %1745 = zext i8 %1744 to i32
  %1746 = load %struct.Para*, %struct.Para** %389, align 8
  %1747 = getelementptr inbounds %struct.Para, %struct.Para* %1746, i64 0, i32 0
  %1748 = load i32, i32* %1747, align 4
  %1749 = zext i32 %924 to i64
  br label %1750

1750:                                             ; preds = %1819, %1743
  %1751 = phi i64 [ 0, %1743 ], [ %1822, %1819 ]
  %1752 = phi i32 [ %1745, %1743 ], [ %1790, %1819 ]
  %1753 = phi i32 [ %1748, %1743 ], [ %1789, %1819 ]
  %1754 = phi i32 [ 0, %1743 ], [ %1788, %1819 ]
  %1755 = phi i32 [ 0, %1743 ], [ %1821, %1819 ]
  %1756 = phi i32 [ 0, %1743 ], [ %1770, %1819 ]
  %1757 = getelementptr inbounds i8, i8* %4, i64 %1751
  %1758 = load i8, i8* %1757, align 1
  %1759 = getelementptr inbounds i8, i8* %923, i64 %1751
  %1760 = load i8, i8* %1759, align 1
  switch i8 %1760, label %1769 [
    i8 20, label %1761
    i8 21, label %1761
    i8 22, label %1766
    i8 7, label %1768
  ]

1761:                                             ; preds = %1750, %1750
  %1762 = add nsw i32 %1756, 1
  %1763 = load i32, i32* %1740, align 4
  %1764 = icmp slt i32 %1756, %1763
  br i1 %1764, label %1769, label %1765

1765:                                             ; preds = %1761
  store i32 %1762, i32* %1740, align 4
  br label %1769

1766:                                             ; preds = %1750
  %1767 = add nsw i32 %1756, -1
  br label %1769

1768:                                             ; preds = %1750
  br label %1769

1769:                                             ; preds = %1768, %1766, %1765, %1761, %1750
  %1770 = phi i32 [ %1762, %1765 ], [ %1762, %1761 ], [ %1767, %1766 ], [ 0, %1768 ], [ %1756, %1750 ]
  %1771 = load i8, i8* %369, align 2
  %1772 = icmp ne i8 %1771, 0
  %1773 = zext i32 %1753 to i64
  %1774 = icmp eq i64 %1751, %1773
  %1775 = and i1 %1774, %1772
  br i1 %1775, label %1776, label %1787

1776:                                             ; preds = %1769
  %1777 = add nsw i32 %1754, 1
  %1778 = load i32, i32* %361, align 8
  %1779 = icmp slt i32 %1777, %1778
  br i1 %1779, label %1780, label %1787

1780:                                             ; preds = %1776
  %1781 = load %struct.Para*, %struct.Para** %389, align 8
  %1782 = sext i32 %1777 to i64
  %1783 = getelementptr inbounds %struct.Para, %struct.Para* %1781, i64 %1782, i32 1
  %1784 = load i32, i32* %1783, align 4
  %1785 = getelementptr inbounds %struct.Para, %struct.Para* %1781, i64 %1782, i32 0
  %1786 = load i32, i32* %1785, align 4
  br label %1787

1787:                                             ; preds = %1780, %1776, %1769
  %1788 = phi i32 [ %1777, %1780 ], [ %1754, %1776 ], [ %1754, %1769 ]
  %1789 = phi i32 [ %1786, %1780 ], [ %1753, %1776 ], [ %1753, %1769 ]
  %1790 = phi i32 [ %1784, %1780 ], [ %1752, %1776 ], [ %1752, %1769 ]
  %1791 = and i8 %1758, -128
  %1792 = and i8 %1758, 127
  %1793 = zext i8 %1792 to i32
  %1794 = icmp sgt i32 %1790, %1793
  %1795 = icmp ugt i8 %1792, 125
  %1796 = or i1 %1795, %1794
  br i1 %1796, label %1797, label %1804

1797:                                             ; preds = %1787
  %1798 = icmp eq i8 %1792, 0
  br i1 %1798, label %1799, label %1824

1799:                                             ; preds = %1797
  %1800 = icmp eq i8 %1760, 7
  br i1 %1800, label %1804, label %1801

1801:                                             ; preds = %1799
  %1802 = trunc i32 %1790 to i8
  %1803 = or i8 %1791, %1802
  store i8 %1803, i8* %1757, align 1
  br label %1804

1804:                                             ; preds = %1801, %1799, %1787
  %1805 = phi i8 [ 0, %1799 ], [ %1802, %1801 ], [ %1792, %1787 ]
  %1806 = icmp eq i8 %1791, 0
  %1807 = and i8 %1805, 1
  %1808 = zext i8 %1807 to i64
  br i1 %1806, label %1812, label %1809

1809:                                             ; preds = %1804
  %1810 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZL5flagO, i64 0, i64 %1808
  %1811 = load i32, i32* %1810, align 4
  br label %1819

1812:                                             ; preds = %1804
  %1813 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZL5flagE, i64 0, i64 %1808
  %1814 = load i32, i32* %1813, align 4
  %1815 = zext i8 %1760 to i64
  %1816 = shl i64 1, %1815
  %1817 = trunc i64 %1816 to i32
  %1818 = or i32 %1814, %1817
  br label %1819

1819:                                             ; preds = %1812, %1809
  %1820 = phi i32 [ %1811, %1809 ], [ %1818, %1812 ]
  %1821 = or i32 %1820, %1755
  %1822 = add nuw nsw i64 %1751, 1
  %1823 = icmp eq i64 %1822, %1749
  br i1 %1823, label %1825, label %1750

1824:                                             ; preds = %1797
  store i32 1, i32* %5, align 4
  br label %2507

1825:                                             ; preds = %1819
  %1826 = and i32 %1821, 8380376
  %1827 = icmp eq i32 %1826, 0
  br i1 %1827, label %1835, label %1828

1828:                                             ; preds = %1825
  %1829 = load i8, i8* %357, align 1
  %1830 = and i8 %1829, 1
  %1831 = zext i8 %1830 to i64
  %1832 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZL6flagLR, i64 0, i64 %1831
  %1833 = load i32, i32* %1832, align 4
  %1834 = or i32 %1833, %1821
  br label %1835

1835:                                             ; preds = %1828, %1825
  %1836 = phi i32 [ %1834, %1828 ], [ %1821, %1825 ]
  store i32 %1836, i32* %921, align 4
  %1837 = zext i32 %1836 to i64
  %1838 = and i64 %1837, 2154498
  %1839 = icmp eq i64 %1838, 0
  br i1 %1839, label %1840, label %1846

1840:                                             ; preds = %1835
  %1841 = and i64 %1837, 32
  %1842 = icmp eq i64 %1841, 0
  %1843 = and i64 %1837, 8249304
  %1844 = icmp eq i64 %1843, 0
  %1845 = or i1 %1842, %1844
  br i1 %1845, label %1850, label %1846

1846:                                             ; preds = %1840, %1835
  %1847 = and i64 %1837, 26220581
  %1848 = icmp eq i64 %1847, 0
  %1849 = select i1 %1848, i32 1, i32 2
  br label %1850

1850:                                             ; preds = %1742, %1840, %1846
  %1851 = phi i32 [ 0, %1742 ], [ %1849, %1846 ], [ 0, %1840 ]
  %1852 = load i32, i32* %5, align 4
  %1853 = icmp slt i32 %1852, 1
  br i1 %1853, label %1854, label %2507

1854:                                             ; preds = %1734, %1850
  %1855 = phi i32 [ %1735, %1734 ], [ %1851, %1850 ]
  %1856 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 42
  %1857 = load i32, i32* %1856, align 4
  %1858 = icmp slt i32 %1857, 6
  br i1 %1858, label %1859, label %1862

1859:                                             ; preds = %1854
  %1860 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 44, i64 0
  %1861 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 43
  store %struct.Isolate* %1860, %struct.Isolate** %1861, align 8
  br label %1891

1862:                                             ; preds = %1854
  %1863 = shl i32 %1857, 4
  %1864 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 10
  %1865 = load i32, i32* %1864, align 8
  %1866 = icmp sgt i32 %1863, %1865
  %1867 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 16
  br i1 %1866, label %1873, label %1868

1868:                                             ; preds = %1862
  %1869 = bitcast %struct.Isolate** %1867 to i64*
  %1870 = load i64, i64* %1869, align 8
  %1871 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 43
  %1872 = bitcast %struct.Isolate** %1871 to i64*
  store i64 %1870, i64* %1872, align 8
  br label %1891

1873:                                             ; preds = %1862
  %1874 = bitcast %struct.Isolate** %1867 to i8**
  %1875 = load i8*, i8** %1874, align 8
  %1876 = icmp eq i8* %1875, null
  %1877 = sext i32 %1863 to i64
  br i1 %1876, label %1878, label %1881

1878:                                             ; preds = %1873
  %1879 = call noalias i8* @uprv_malloc_69(i64 %1877) #10
  store i8* %1879, i8** %1874, align 8
  %1880 = icmp eq i8* %1879, null
  br i1 %1880, label %1890, label %1885

1881:                                             ; preds = %1873
  %1882 = call i8* @uprv_realloc_69(i8* nonnull %1875, i64 %1877) #12
  %1883 = icmp eq i8* %1882, null
  br i1 %1883, label %1890, label %1884

1884:                                             ; preds = %1881
  store i8* %1882, i8** %1874, align 8
  br label %1885

1885:                                             ; preds = %1878, %1884
  %1886 = phi i8* [ %1879, %1878 ], [ %1882, %1884 ]
  %1887 = ptrtoint i8* %1886 to i64
  store i32 %1863, i32* %1864, align 4
  %1888 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 43
  %1889 = bitcast %struct.Isolate** %1888 to i64*
  store i64 %1887, i64* %1889, align 8
  br label %1891

1890:                                             ; preds = %1878, %1881
  store i32 7, i32* %5, align 4
  br label %2507

1891:                                             ; preds = %1868, %1885, %1859
  store i32 -1, i32* %1856, align 4
  store i32 %1855, i32* %360, align 8
  switch i32 %1855, label %1894 [
    i32 0, label %1892
    i32 1, label %1893
  ]

1892:                                             ; preds = %1891
  store i32 0, i32* %925, align 4
  br label %2379

1893:                                             ; preds = %1891
  store i32 0, i32* %925, align 4
  br label %2379

1894:                                             ; preds = %1891
  %1895 = load i32, i32* %32, align 4
  switch i32 %1895, label %1918 [
    i32 0, label %1896
    i32 1, label %1898
    i32 2, label %1900
    i32 4, label %1902
    i32 5, label %1904
    i32 6, label %1911
  ]

1896:                                             ; preds = %1894
  %1897 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 31
  store %struct.ImpTabPair* @_ZL14impTab_DEFAULT, %struct.ImpTabPair** %1897, align 8
  br label %1919

1898:                                             ; preds = %1894
  %1899 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 31
  store %struct.ImpTabPair* @_ZL22impTab_NUMBERS_SPECIAL, %struct.ImpTabPair** %1899, align 8
  br label %1919

1900:                                             ; preds = %1894
  %1901 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 31
  store %struct.ImpTabPair* @_ZL27impTab_GROUP_NUMBERS_WITH_R, %struct.ImpTabPair** %1901, align 8
  br label %1919

1902:                                             ; preds = %1894
  %1903 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 31
  store %struct.ImpTabPair* @_ZL27impTab_INVERSE_NUMBERS_AS_L, %struct.ImpTabPair** %1903, align 8
  br label %1919

1904:                                             ; preds = %1894
  %1905 = load i32, i32* %428, align 8
  %1906 = and i32 %1905, 1
  %1907 = icmp eq i32 %1906, 0
  %1908 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 31
  br i1 %1907, label %1910, label %1909

1909:                                             ; preds = %1904
  store %struct.ImpTabPair* @_ZL37impTab_INVERSE_LIKE_DIRECT_WITH_MARKS, %struct.ImpTabPair** %1908, align 8
  br label %1919

1910:                                             ; preds = %1904
  store %struct.ImpTabPair* @_ZL26impTab_INVERSE_LIKE_DIRECT, %struct.ImpTabPair** %1908, align 8
  br label %1919

1911:                                             ; preds = %1894
  %1912 = load i32, i32* %428, align 8
  %1913 = and i32 %1912, 1
  %1914 = icmp eq i32 %1913, 0
  %1915 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 31
  br i1 %1914, label %1917, label %1916

1916:                                             ; preds = %1911
  store %struct.ImpTabPair* @_ZL45impTab_INVERSE_FOR_NUMBERS_SPECIAL_WITH_MARKS, %struct.ImpTabPair** %1915, align 8
  br label %1919

1917:                                             ; preds = %1911
  store %struct.ImpTabPair* @_ZL34impTab_INVERSE_FOR_NUMBERS_SPECIAL, %struct.ImpTabPair** %1915, align 8
  br label %1919

1918:                                             ; preds = %1894
  call void @abort() #13
  unreachable

1919:                                             ; preds = %1916, %1917, %1909, %1910, %1902, %1900, %1898, %1896
  br i1 %926, label %1920, label %1996

1920:                                             ; preds = %1919
  %1921 = load i32, i32* %361, align 8
  %1922 = icmp slt i32 %1921, 2
  br i1 %1922, label %1923, label %1996

1923:                                             ; preds = %1920
  %1924 = load i32, i32* %921, align 4
  %1925 = icmp slt i32 %1924, 0
  br i1 %1925, label %1996, label %1926

1926:                                             ; preds = %1923
  %1927 = load i8, i8* %369, align 2
  %1928 = icmp eq i8 %1927, 0
  br i1 %1928, label %1934, label %1929

1929:                                             ; preds = %1926
  %1930 = load %struct.Para*, %struct.Para** %389, align 8
  %1931 = getelementptr inbounds %struct.Para, %struct.Para* %1930, i64 0, i32 0
  %1932 = load i32, i32* %1931, align 4
  %1933 = icmp sgt i32 %1932, 0
  br i1 %1933, label %1934, label %1936

1934:                                             ; preds = %1926, %1929
  %1935 = load i8, i8* %357, align 1
  br label %1960

1936:                                             ; preds = %1929
  %1937 = icmp sgt i32 %1921, 0
  br i1 %1937, label %1938, label %1949

1938:                                             ; preds = %1936
  %1939 = sext i32 %1921 to i64
  %1940 = icmp sgt i32 %1932, 0
  br i1 %1940, label %1951, label %1941

1941:                                             ; preds = %1938, %1945
  %1942 = phi i64 [ %1943, %1945 ], [ 0, %1938 ]
  %1943 = add nuw nsw i64 %1942, 1
  %1944 = icmp eq i64 %1943, %1939
  br i1 %1944, label %1949, label %1945

1945:                                             ; preds = %1941
  %1946 = getelementptr inbounds %struct.Para, %struct.Para* %1930, i64 %1943, i32 0
  %1947 = load i32, i32* %1946, align 4
  %1948 = icmp sgt i32 %1947, 0
  br i1 %1948, label %1951, label %1941

1949:                                             ; preds = %1941, %1936
  %1950 = add nsw i32 %1921, -1
  br label %1954

1951:                                             ; preds = %1945, %1938
  %1952 = phi i64 [ 0, %1938 ], [ %1943, %1945 ]
  %1953 = trunc i64 %1952 to i32
  br label %1954

1954:                                             ; preds = %1949, %1951
  %1955 = phi i32 [ %1953, %1951 ], [ %1950, %1949 ]
  %1956 = sext i32 %1955 to i64
  %1957 = getelementptr inbounds %struct.Para, %struct.Para* %1930, i64 %1956, i32 1
  %1958 = load i32, i32* %1957, align 4
  %1959 = trunc i32 %1958 to i8
  br label %1960

1960:                                             ; preds = %1954, %1934
  %1961 = phi i8 [ %1935, %1934 ], [ %1959, %1954 ]
  %1962 = and i8 %1961, 1
  br i1 %1928, label %1968, label %1963

1963:                                             ; preds = %1960
  %1964 = load %struct.Para*, %struct.Para** %389, align 8
  %1965 = getelementptr inbounds %struct.Para, %struct.Para* %1964, i64 0, i32 0
  %1966 = load i32, i32* %1965, align 4
  %1967 = icmp sgt i32 %924, %1966
  br i1 %1967, label %1970, label %1968

1968:                                             ; preds = %1963, %1960
  %1969 = load i8, i8* %357, align 1
  br label %1993

1970:                                             ; preds = %1963
  %1971 = icmp sgt i32 %1921, 0
  br i1 %1971, label %1972, label %1983

1972:                                             ; preds = %1970
  %1973 = sext i32 %1921 to i64
  %1974 = icmp slt i32 %1966, %924
  br i1 %1974, label %1975, label %1987

1975:                                             ; preds = %1972, %1979
  %1976 = phi i64 [ %1977, %1979 ], [ 0, %1972 ]
  %1977 = add nuw nsw i64 %1976, 1
  %1978 = icmp eq i64 %1977, %1973
  br i1 %1978, label %1983, label %1979

1979:                                             ; preds = %1975
  %1980 = getelementptr inbounds %struct.Para, %struct.Para* %1964, i64 %1977, i32 0
  %1981 = load i32, i32* %1980, align 4
  %1982 = icmp slt i32 %1981, %924
  br i1 %1982, label %1975, label %1985

1983:                                             ; preds = %1975, %1970
  %1984 = add nsw i32 %1921, -1
  br label %1987

1985:                                             ; preds = %1979
  %1986 = trunc i64 %1977 to i32
  br label %1987

1987:                                             ; preds = %1972, %1985, %1983
  %1988 = phi i32 [ %1984, %1983 ], [ %1986, %1985 ], [ 0, %1972 ]
  %1989 = sext i32 %1988 to i64
  %1990 = getelementptr inbounds %struct.Para, %struct.Para* %1964, i64 %1989, i32 1
  %1991 = load i32, i32* %1990, align 4
  %1992 = trunc i32 %1991 to i8
  br label %1993

1993:                                             ; preds = %1987, %1968
  %1994 = phi i8 [ %1969, %1968 ], [ %1992, %1987 ]
  %1995 = and i8 %1994, 1
  call fastcc void @_ZL21resolveImplicitLevelsP5UBiDiiihh(%struct.UBiDi* %0, i32 0, i32 %924, i8 zeroext %1962, i8 zeroext %1995)
  br label %2241

1996:                                             ; preds = %1923, %1920, %1919
  %1997 = load i8*, i8** %363, align 8
  %1998 = load i8, i8* %369, align 2
  %1999 = icmp eq i8 %1998, 0
  br i1 %1999, label %2005, label %2000

2000:                                             ; preds = %1996
  %2001 = load %struct.Para*, %struct.Para** %389, align 8
  %2002 = getelementptr inbounds %struct.Para, %struct.Para* %2001, i64 0, i32 0
  %2003 = load i32, i32* %2002, align 4
  %2004 = icmp sgt i32 %2003, 0
  br i1 %2004, label %2005, label %2007

2005:                                             ; preds = %1996, %2000
  %2006 = load i8, i8* %357, align 1
  br label %2031

2007:                                             ; preds = %2000
  %2008 = load i32, i32* %361, align 8
  %2009 = icmp sgt i32 %2008, 0
  br i1 %2009, label %2010, label %2021

2010:                                             ; preds = %2007
  %2011 = sext i32 %2008 to i64
  %2012 = icmp sgt i32 %2003, 0
  br i1 %2012, label %2025, label %2013

2013:                                             ; preds = %2010, %2017
  %2014 = phi i64 [ %2015, %2017 ], [ 0, %2010 ]
  %2015 = add nuw nsw i64 %2014, 1
  %2016 = icmp eq i64 %2015, %2011
  br i1 %2016, label %2021, label %2017

2017:                                             ; preds = %2013
  %2018 = getelementptr inbounds %struct.Para, %struct.Para* %2001, i64 %2015, i32 0
  %2019 = load i32, i32* %2018, align 4
  %2020 = icmp sgt i32 %2019, 0
  br i1 %2020, label %2023, label %2013

2021:                                             ; preds = %2013, %2007
  %2022 = add nsw i32 %2008, -1
  br label %2025

2023:                                             ; preds = %2017
  %2024 = trunc i64 %2015 to i32
  br label %2025

2025:                                             ; preds = %2010, %2023, %2021
  %2026 = phi i32 [ %2022, %2021 ], [ %2024, %2023 ], [ 0, %2010 ]
  %2027 = sext i32 %2026 to i64
  %2028 = getelementptr inbounds %struct.Para, %struct.Para* %2001, i64 %2027, i32 1
  %2029 = load i32, i32* %2028, align 4
  %2030 = trunc i32 %2029 to i8
  br label %2031

2031:                                             ; preds = %2025, %2005
  %2032 = phi i8 [ %2006, %2005 ], [ %2030, %2025 ]
  %2033 = load i8, i8* %1997, align 1
  %2034 = icmp ult i8 %2032, %2033
  %2035 = select i1 %2034, i8 %2033, i8 %2032
  %2036 = and i8 %2035, 1
  %2037 = sext i32 %924 to i64
  br label %2038

2038:                                             ; preds = %2240, %2031
  %2039 = phi i32 [ 0, %2031 ], [ %2157, %2240 ]
  %2040 = phi i8 [ %2033, %2031 ], [ %2159, %2240 ]
  %2041 = phi i8 [ %2036, %2031 ], [ %2164, %2240 ]
  %2042 = icmp sgt i32 %2039, 0
  br i1 %2042, label %2043, label %2087

2043:                                             ; preds = %2038
  %2044 = add nsw i32 %2039, -1
  %2045 = sext i32 %2044 to i64
  %2046 = getelementptr inbounds i8, i8* %923, i64 %2045
  %2047 = load i8, i8* %2046, align 1
  %2048 = icmp eq i8 %2047, 7
  br i1 %2048, label %2049, label %2087

2049:                                             ; preds = %2043
  %2050 = load i8, i8* %369, align 2
  %2051 = icmp eq i8 %2050, 0
  br i1 %2051, label %2057, label %2052

2052:                                             ; preds = %2049
  %2053 = load %struct.Para*, %struct.Para** %389, align 8
  %2054 = getelementptr inbounds %struct.Para, %struct.Para* %2053, i64 0, i32 0
  %2055 = load i32, i32* %2054, align 4
  %2056 = icmp slt i32 %2039, %2055
  br i1 %2056, label %2057, label %2059

2057:                                             ; preds = %2049, %2052
  %2058 = load i8, i8* %357, align 1
  br label %2084

2059:                                             ; preds = %2052
  %2060 = load i32, i32* %361, align 8
  %2061 = icmp sgt i32 %2060, 0
  br i1 %2061, label %2062, label %2073

2062:                                             ; preds = %2059
  %2063 = sext i32 %2060 to i64
  %2064 = icmp sgt i32 %2055, %2039
  br i1 %2064, label %2075, label %2065

2065:                                             ; preds = %2062, %2069
  %2066 = phi i64 [ %2067, %2069 ], [ 0, %2062 ]
  %2067 = add nuw nsw i64 %2066, 1
  %2068 = icmp eq i64 %2067, %2063
  br i1 %2068, label %2073, label %2069

2069:                                             ; preds = %2065
  %2070 = getelementptr inbounds %struct.Para, %struct.Para* %2053, i64 %2067, i32 0
  %2071 = load i32, i32* %2070, align 4
  %2072 = icmp sgt i32 %2071, %2039
  br i1 %2072, label %2075, label %2065

2073:                                             ; preds = %2065, %2059
  %2074 = add nsw i32 %2060, -1
  br label %2078

2075:                                             ; preds = %2069, %2062
  %2076 = phi i64 [ 0, %2062 ], [ %2067, %2069 ]
  %2077 = trunc i64 %2076 to i32
  br label %2078

2078:                                             ; preds = %2073, %2075
  %2079 = phi i32 [ %2077, %2075 ], [ %2074, %2073 ]
  %2080 = sext i32 %2079 to i64
  %2081 = getelementptr inbounds %struct.Para, %struct.Para* %2053, i64 %2080, i32 1
  %2082 = load i32, i32* %2081, align 4
  %2083 = trunc i32 %2082 to i8
  br label %2084

2084:                                             ; preds = %2078, %2057
  %2085 = phi i8 [ %2058, %2057 ], [ %2083, %2078 ]
  %2086 = and i8 %2085, 1
  br label %2087

2087:                                             ; preds = %2038, %2043, %2084
  %2088 = phi i8 [ %2086, %2084 ], [ %2041, %2043 ], [ %2041, %2038 ]
  %2089 = add i32 %2039, 1
  %2090 = icmp slt i32 %2089, %924
  br i1 %2090, label %2091, label %2115

2091:                                             ; preds = %2087
  %2092 = sext i32 %2089 to i64
  br label %2093

2093:                                             ; preds = %2107, %2091
  %2094 = phi i64 [ %2092, %2091 ], [ %2108, %2107 ]
  %2095 = phi i1 [ true, %2091 ], [ %2109, %2107 ]
  %2096 = phi i32 [ %2039, %2091 ], [ %2110, %2107 ]
  %2097 = getelementptr inbounds i8, i8* %1997, i64 %2094
  %2098 = load i8, i8* %2097, align 1
  %2099 = icmp eq i8 %2098, %2040
  br i1 %2099, label %2107, label %2100

2100:                                             ; preds = %2093
  %2101 = getelementptr inbounds i8, i8* %923, i64 %2094
  %2102 = load i8, i8* %2101, align 1
  %2103 = zext i8 %2102 to i64
  %2104 = shl i64 1, %2103
  %2105 = and i64 %2104, 382976
  %2106 = icmp eq i64 %2105, 0
  br i1 %2106, label %2153, label %2107

2107:                                             ; preds = %2100, %2093
  %2108 = add nsw i64 %2094, 1
  %2109 = icmp slt i64 %2108, %2037
  %2110 = trunc i64 %2094 to i32
  %2111 = trunc i64 %2108 to i32
  %2112 = icmp eq i32 %924, %2111
  br i1 %2112, label %2113, label %2093

2113:                                             ; preds = %2107
  %2114 = trunc i64 %2094 to i32
  br label %2115

2115:                                             ; preds = %2113, %2087
  %2116 = phi i32 [ %2039, %2087 ], [ %2114, %2113 ]
  %2117 = phi i32 [ %2089, %2087 ], [ %924, %2113 ]
  %2118 = phi i1 [ false, %2087 ], [ %2109, %2113 ]
  %2119 = load i8, i8* %369, align 2
  %2120 = icmp eq i8 %2119, 0
  br i1 %2120, label %2126, label %2121

2121:                                             ; preds = %2115
  %2122 = load %struct.Para*, %struct.Para** %389, align 8
  %2123 = getelementptr inbounds %struct.Para, %struct.Para* %2122, i64 0, i32 0
  %2124 = load i32, i32* %2123, align 4
  %2125 = icmp sgt i32 %924, %2124
  br i1 %2125, label %2128, label %2126

2126:                                             ; preds = %2121, %2115
  %2127 = load i8, i8* %357, align 1
  br label %2155

2128:                                             ; preds = %2121
  %2129 = load i32, i32* %361, align 8
  %2130 = icmp sgt i32 %2129, 0
  br i1 %2130, label %2131, label %2142

2131:                                             ; preds = %2128
  %2132 = sext i32 %2129 to i64
  %2133 = icmp slt i32 %2124, %924
  br i1 %2133, label %2134, label %2144

2134:                                             ; preds = %2131, %2138
  %2135 = phi i64 [ %2136, %2138 ], [ 0, %2131 ]
  %2136 = add nuw nsw i64 %2135, 1
  %2137 = icmp eq i64 %2136, %2132
  br i1 %2137, label %2142, label %2138

2138:                                             ; preds = %2134
  %2139 = getelementptr inbounds %struct.Para, %struct.Para* %2122, i64 %2136, i32 0
  %2140 = load i32, i32* %2139, align 4
  %2141 = icmp slt i32 %2140, %924
  br i1 %2141, label %2134, label %2144

2142:                                             ; preds = %2134, %2128
  %2143 = add nsw i32 %2129, -1
  br label %2147

2144:                                             ; preds = %2138, %2131
  %2145 = phi i64 [ 0, %2131 ], [ %2136, %2138 ]
  %2146 = trunc i64 %2145 to i32
  br label %2147

2147:                                             ; preds = %2142, %2144
  %2148 = phi i32 [ %2146, %2144 ], [ %2143, %2142 ]
  %2149 = sext i32 %2148 to i64
  %2150 = getelementptr inbounds %struct.Para, %struct.Para* %2122, i64 %2149, i32 1
  %2151 = load i32, i32* %2150, align 4
  %2152 = trunc i32 %2151 to i8
  br label %2155

2153:                                             ; preds = %2100
  %2154 = trunc i64 %2094 to i32
  br label %2155

2155:                                             ; preds = %2153, %2126, %2147
  %2156 = phi i32 [ %2116, %2126 ], [ %2116, %2147 ], [ %2096, %2153 ]
  %2157 = phi i32 [ %2117, %2126 ], [ %2117, %2147 ], [ %2154, %2153 ]
  %2158 = phi i1 [ %2118, %2126 ], [ %2118, %2147 ], [ %2095, %2153 ]
  %2159 = phi i8 [ %2127, %2126 ], [ %2152, %2147 ], [ %2098, %2153 ]
  %2160 = and i8 %2040, 127
  %2161 = and i8 %2159, 127
  %2162 = icmp ult i8 %2160, %2161
  %2163 = select i1 %2162, i8 %2159, i8 %2040
  %2164 = and i8 %2163, 1
  %2165 = icmp slt i8 %2040, 0
  br i1 %2165, label %2166, label %2232

2166:                                             ; preds = %2155
  %2167 = sext i32 %2039 to i64
  %2168 = sext i32 %2156 to i64
  %2169 = icmp sgt i64 %2168, %2167
  %2170 = select i1 %2169, i64 %2168, i64 %2167
  %2171 = add nsw i64 %2170, 1
  %2172 = sub nsw i64 %2171, %2167
  %2173 = icmp ult i64 %2172, 32
  br i1 %2173, label %2174, label %2176

2174:                                             ; preds = %2230, %2166
  %2175 = phi i64 [ %2167, %2166 ], [ %2178, %2230 ]
  br label %2233

2176:                                             ; preds = %2166
  %2177 = and i64 %2172, -32
  %2178 = add nsw i64 %2177, %2167
  %2179 = add nsw i64 %2177, -32
  %2180 = lshr exact i64 %2179, 5
  %2181 = add nuw nsw i64 %2180, 1
  %2182 = and i64 %2181, 1
  %2183 = icmp eq i64 %2179, 0
  br i1 %2183, label %2215, label %2184

2184:                                             ; preds = %2176
  %2185 = sub nuw nsw i64 %2181, %2182
  br label %2186

2186:                                             ; preds = %2186, %2184
  %2187 = phi i64 [ 0, %2184 ], [ %2212, %2186 ]
  %2188 = phi i64 [ %2185, %2184 ], [ %2213, %2186 ]
  %2189 = add i64 %2187, %2167
  %2190 = getelementptr inbounds i8, i8* %1997, i64 %2189
  %2191 = bitcast i8* %2190 to <16 x i8>*
  %2192 = load <16 x i8>, <16 x i8>* %2191, align 1
  %2193 = getelementptr inbounds i8, i8* %2190, i64 16
  %2194 = bitcast i8* %2193 to <16 x i8>*
  %2195 = load <16 x i8>, <16 x i8>* %2194, align 1
  %2196 = and <16 x i8> %2192, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %2197 = and <16 x i8> %2195, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %2198 = bitcast i8* %2190 to <16 x i8>*
  store <16 x i8> %2196, <16 x i8>* %2198, align 1
  %2199 = bitcast i8* %2193 to <16 x i8>*
  store <16 x i8> %2197, <16 x i8>* %2199, align 1
  %2200 = or i64 %2187, 32
  %2201 = add i64 %2200, %2167
  %2202 = getelementptr inbounds i8, i8* %1997, i64 %2201
  %2203 = bitcast i8* %2202 to <16 x i8>*
  %2204 = load <16 x i8>, <16 x i8>* %2203, align 1
  %2205 = getelementptr inbounds i8, i8* %2202, i64 16
  %2206 = bitcast i8* %2205 to <16 x i8>*
  %2207 = load <16 x i8>, <16 x i8>* %2206, align 1
  %2208 = and <16 x i8> %2204, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %2209 = and <16 x i8> %2207, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %2210 = bitcast i8* %2202 to <16 x i8>*
  store <16 x i8> %2208, <16 x i8>* %2210, align 1
  %2211 = bitcast i8* %2205 to <16 x i8>*
  store <16 x i8> %2209, <16 x i8>* %2211, align 1
  %2212 = add i64 %2187, 64
  %2213 = add i64 %2188, -2
  %2214 = icmp eq i64 %2213, 0
  br i1 %2214, label %2215, label %2186, !llvm.loop !4

2215:                                             ; preds = %2186, %2176
  %2216 = phi i64 [ 0, %2176 ], [ %2212, %2186 ]
  %2217 = icmp eq i64 %2182, 0
  br i1 %2217, label %2230, label %2218

2218:                                             ; preds = %2215
  %2219 = add i64 %2216, %2167
  %2220 = getelementptr inbounds i8, i8* %1997, i64 %2219
  %2221 = bitcast i8* %2220 to <16 x i8>*
  %2222 = load <16 x i8>, <16 x i8>* %2221, align 1
  %2223 = getelementptr inbounds i8, i8* %2220, i64 16
  %2224 = bitcast i8* %2223 to <16 x i8>*
  %2225 = load <16 x i8>, <16 x i8>* %2224, align 1
  %2226 = and <16 x i8> %2222, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %2227 = and <16 x i8> %2225, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %2228 = bitcast i8* %2220 to <16 x i8>*
  store <16 x i8> %2226, <16 x i8>* %2228, align 1
  %2229 = bitcast i8* %2223 to <16 x i8>*
  store <16 x i8> %2227, <16 x i8>* %2229, align 1
  br label %2230

2230:                                             ; preds = %2215, %2218
  %2231 = icmp eq i64 %2172, %2177
  br i1 %2231, label %2240, label %2174

2232:                                             ; preds = %2155
  call fastcc void @_ZL21resolveImplicitLevelsP5UBiDiiihh(%struct.UBiDi* %0, i32 %2039, i32 %2157, i8 zeroext %2088, i8 zeroext %2164)
  br label %2240

2233:                                             ; preds = %2174, %2233
  %2234 = phi i64 [ %2235, %2233 ], [ %2175, %2174 ]
  %2235 = add nsw i64 %2234, 1
  %2236 = getelementptr inbounds i8, i8* %1997, i64 %2234
  %2237 = load i8, i8* %2236, align 1
  %2238 = and i8 %2237, 127
  store i8 %2238, i8* %2236, align 1
  %2239 = icmp slt i64 %2234, %2168
  br i1 %2239, label %2233, label %2240, !llvm.loop !6

2240:                                             ; preds = %2233, %2230, %2232
  br i1 %2158, label %2038, label %2241

2241:                                             ; preds = %2240, %1993
  %2242 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  %2243 = load i32, i32* %2242, align 4
  %2244 = icmp slt i32 %2243, 1
  br i1 %2244, label %2246, label %2245

2245:                                             ; preds = %2241
  store i32 %2243, i32* %5, align 4
  br label %2507

2246:                                             ; preds = %2241
  %2247 = load i8*, i8** %362, align 8
  %2248 = load i8*, i8** %363, align 8
  %2249 = load i32, i32* %921, align 4
  %2250 = and i32 %2249, 8248192
  %2251 = icmp eq i32 %2250, 0
  br i1 %2251, label %2379, label %2252

2252:                                             ; preds = %2246
  %2253 = load i32, i32* %925, align 4
  %2254 = icmp sgt i32 %2253, 0
  br i1 %2254, label %2255, label %2379

2255:                                             ; preds = %2252
  %2256 = load i8, i8* %913, align 4
  %2257 = icmp ne i8 %2256, 0
  br label %2258

2258:                                             ; preds = %2376, %2255
  %2259 = phi i32 [ %2253, %2255 ], [ %2377, %2376 ]
  %2260 = sext i32 %2259 to i64
  br label %2261

2261:                                             ; preds = %2308, %2258
  %2262 = phi i64 [ %2260, %2258 ], [ %2263, %2308 ]
  %2263 = add nsw i64 %2262, -1
  %2264 = getelementptr inbounds i8, i8* %2247, i64 %2263
  %2265 = load i8, i8* %2264, align 1
  %2266 = zext i8 %2265 to i64
  %2267 = shl i64 1, %2266
  %2268 = and i64 %2267, 8248192
  %2269 = icmp eq i64 %2268, 0
  br i1 %2269, label %2312, label %2270

2270:                                             ; preds = %2261
  %2271 = icmp eq i8 %2265, 7
  %2272 = and i1 %2257, %2271
  br i1 %2272, label %2308, label %2273

2273:                                             ; preds = %2270
  %2274 = load i8, i8* %369, align 2
  %2275 = icmp eq i8 %2274, 0
  br i1 %2275, label %2282, label %2276

2276:                                             ; preds = %2273
  %2277 = load %struct.Para*, %struct.Para** %389, align 8
  %2278 = getelementptr inbounds %struct.Para, %struct.Para* %2277, i64 0, i32 0
  %2279 = load i32, i32* %2278, align 4
  %2280 = sext i32 %2279 to i64
  %2281 = icmp sgt i64 %2262, %2280
  br i1 %2281, label %2284, label %2282

2282:                                             ; preds = %2276, %2273
  %2283 = load i8, i8* %357, align 1
  br label %2308

2284:                                             ; preds = %2276
  %2285 = load i32, i32* %361, align 8
  %2286 = icmp sgt i32 %2285, 0
  br i1 %2286, label %2287, label %2298

2287:                                             ; preds = %2284
  %2288 = sext i32 %2285 to i64
  br label %2289

2289:                                             ; preds = %2287, %2293
  %2290 = phi i64 [ %2291, %2293 ], [ 0, %2287 ]
  %2291 = add nuw nsw i64 %2290, 1
  %2292 = icmp eq i64 %2291, %2288
  br i1 %2292, label %2298, label %2293

2293:                                             ; preds = %2289
  %2294 = getelementptr inbounds %struct.Para, %struct.Para* %2277, i64 %2291, i32 0
  %2295 = load i32, i32* %2294, align 4
  %2296 = sext i32 %2295 to i64
  %2297 = icmp sgt i64 %2262, %2296
  br i1 %2297, label %2289, label %2300

2298:                                             ; preds = %2289, %2284
  %2299 = add nsw i32 %2285, -1
  br label %2302

2300:                                             ; preds = %2293
  %2301 = trunc i64 %2291 to i32
  br label %2302

2302:                                             ; preds = %2300, %2298
  %2303 = phi i32 [ %2301, %2300 ], [ %2299, %2298 ]
  %2304 = sext i32 %2303 to i64
  %2305 = getelementptr inbounds %struct.Para, %struct.Para* %2277, i64 %2304, i32 1
  %2306 = load i32, i32* %2305, align 4
  %2307 = trunc i32 %2306 to i8
  br label %2308

2308:                                             ; preds = %2282, %2302, %2270
  %2309 = phi i8 [ 0, %2270 ], [ %2283, %2282 ], [ %2307, %2302 ]
  %2310 = getelementptr inbounds i8, i8* %2248, i64 %2263
  store i8 %2309, i8* %2310, align 1
  %2311 = icmp sgt i64 %2263, 0
  br i1 %2311, label %2261, label %2312

2312:                                             ; preds = %2308, %2261
  %2313 = trunc i64 %2263 to i32
  %2314 = icmp sgt i32 %2313, 0
  br i1 %2314, label %2315, label %2379

2315:                                             ; preds = %2312
  %2316 = shl i64 %2263, 32
  %2317 = ashr exact i64 %2316, 32
  br label %2318

2318:                                             ; preds = %2371, %2315
  %2319 = phi i64 [ %2317, %2315 ], [ %2320, %2371 ]
  %2320 = add nsw i64 %2319, -1
  %2321 = getelementptr inbounds i8, i8* %2247, i64 %2320
  %2322 = load i8, i8* %2321, align 1
  %2323 = zext i8 %2322 to i64
  %2324 = shl i64 1, %2323
  %2325 = and i64 %2324, 382976
  %2326 = icmp eq i64 %2325, 0
  br i1 %2326, label %2331, label %2327

2327:                                             ; preds = %2318
  %2328 = getelementptr inbounds i8, i8* %2248, i64 %2319
  %2329 = load i8, i8* %2328, align 1
  %2330 = getelementptr inbounds i8, i8* %2248, i64 %2320
  store i8 %2329, i8* %2330, align 1
  br label %2371

2331:                                             ; preds = %2318
  %2332 = icmp eq i8 %2322, 7
  %2333 = and i1 %2257, %2332
  br i1 %2333, label %2373, label %2334

2334:                                             ; preds = %2331
  %2335 = and i64 %2324, 384
  %2336 = icmp eq i64 %2335, 0
  br i1 %2336, label %2371, label %2337

2337:                                             ; preds = %2334
  %2338 = trunc i64 %2319 to i32
  %2339 = load i8, i8* %369, align 2
  %2340 = icmp eq i8 %2339, 0
  br i1 %2340, label %2346, label %2341

2341:                                             ; preds = %2337
  %2342 = load %struct.Para*, %struct.Para** %389, align 8
  %2343 = getelementptr inbounds %struct.Para, %struct.Para* %2342, i64 0, i32 0
  %2344 = load i32, i32* %2343, align 4
  %2345 = icmp slt i32 %2344, %2338
  br i1 %2345, label %2348, label %2346

2346:                                             ; preds = %2341, %2337
  %2347 = load i8, i8* %357, align 1
  br label %2373

2348:                                             ; preds = %2341
  %2349 = load i32, i32* %361, align 8
  %2350 = icmp sgt i32 %2349, 0
  br i1 %2350, label %2351, label %2361

2351:                                             ; preds = %2348
  %2352 = sext i32 %2349 to i64
  br label %2353

2353:                                             ; preds = %2351, %2357
  %2354 = phi i64 [ %2355, %2357 ], [ 0, %2351 ]
  %2355 = add nuw nsw i64 %2354, 1
  %2356 = icmp eq i64 %2355, %2352
  br i1 %2356, label %2361, label %2357

2357:                                             ; preds = %2353
  %2358 = getelementptr inbounds %struct.Para, %struct.Para* %2342, i64 %2355, i32 0
  %2359 = load i32, i32* %2358, align 4
  %2360 = icmp slt i32 %2359, %2338
  br i1 %2360, label %2353, label %2363

2361:                                             ; preds = %2353, %2348
  %2362 = add nsw i32 %2349, -1
  br label %2365

2363:                                             ; preds = %2357
  %2364 = trunc i64 %2355 to i32
  br label %2365

2365:                                             ; preds = %2363, %2361
  %2366 = phi i32 [ %2364, %2363 ], [ %2362, %2361 ]
  %2367 = sext i32 %2366 to i64
  %2368 = getelementptr inbounds %struct.Para, %struct.Para* %2342, i64 %2367, i32 1
  %2369 = load i32, i32* %2368, align 4
  %2370 = trunc i32 %2369 to i8
  br label %2373

2371:                                             ; preds = %2334, %2327
  %2372 = icmp sgt i64 %2320, 0
  br i1 %2372, label %2318, label %2376

2373:                                             ; preds = %2331, %2346, %2365
  %2374 = phi i8 [ %2347, %2346 ], [ %2370, %2365 ], [ 0, %2331 ]
  %2375 = getelementptr inbounds i8, i8* %2248, i64 %2320
  store i8 %2374, i8* %2375, align 1
  br label %2376

2376:                                             ; preds = %2371, %2373
  %2377 = trunc i64 %2320 to i32
  %2378 = icmp sgt i32 %2377, 0
  br i1 %2378, label %2258, label %2379

2379:                                             ; preds = %2376, %2312, %2252, %2246, %1893, %1892
  %2380 = load i8, i8* %369, align 2
  %2381 = icmp eq i8 %2380, 0
  br i1 %2381, label %2490, label %2382

2382:                                             ; preds = %2379
  %2383 = load i32, i32* %428, align 8
  %2384 = and i32 %2383, 1
  %2385 = icmp eq i32 %2384, 0
  br i1 %2385, label %2490, label %2386

2386:                                             ; preds = %2382
  %2387 = load i32, i32* %32, align 4
  %2388 = add i32 %2387, -5
  %2389 = icmp ult i32 %2388, 2
  br i1 %2389, label %2390, label %2490

2390:                                             ; preds = %2386
  %2391 = load i32, i32* %361, align 8
  %2392 = icmp sgt i32 %2391, 0
  br i1 %2392, label %2393, label %2490

2393:                                             ; preds = %2390
  %2394 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 0
  %2395 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %2396 = bitcast %struct.Point** %2395 to i8**
  %2397 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  %2398 = bitcast %struct.Point** %2395 to i8**
  br label %2399

2399:                                             ; preds = %2393, %2485
  %2400 = phi i64 [ 0, %2393 ], [ %2486, %2485 ]
  %2401 = load %struct.Para*, %struct.Para** %389, align 8
  %2402 = getelementptr inbounds %struct.Para, %struct.Para* %2401, i64 %2400, i32 0
  %2403 = load i32, i32* %2402, align 4
  %2404 = add nsw i32 %2403, -1
  %2405 = getelementptr inbounds %struct.Para, %struct.Para* %2401, i64 %2400, i32 1
  %2406 = load i32, i32* %2405, align 4
  %2407 = and i32 %2406, 255
  %2408 = icmp eq i32 %2407, 0
  br i1 %2408, label %2485, label %2409

2409:                                             ; preds = %2399
  %2410 = icmp eq i64 %2400, 0
  br i1 %2410, label %2415, label %2411

2411:                                             ; preds = %2409
  %2412 = add nsw i64 %2400, -1
  %2413 = getelementptr inbounds %struct.Para, %struct.Para* %2401, i64 %2412, i32 0
  %2414 = load i32, i32* %2413, align 4
  br label %2415

2415:                                             ; preds = %2409, %2411
  %2416 = phi i32 [ %2414, %2411 ], [ 0, %2409 ]
  %2417 = icmp sgt i32 %2403, %2416
  br i1 %2417, label %2418, label %2485

2418:                                             ; preds = %2415
  %2419 = sext i32 %2403 to i64
  %2420 = add nsw i64 %2419, -1
  %2421 = sext i32 %2416 to i64
  br label %2422

2422:                                             ; preds = %2418, %2482
  %2423 = phi i64 [ %2420, %2418 ], [ %2483, %2482 ]
  %2424 = getelementptr inbounds i8, i8* %923, i64 %2423
  %2425 = load i8, i8* %2424, align 1
  %2426 = icmp eq i8 %2425, 0
  br i1 %2426, label %2427, label %2477

2427:                                             ; preds = %2422
  %2428 = trunc i64 %2423 to i32
  %2429 = icmp sgt i32 %2404, %2428
  br i1 %2429, label %2430, label %2438

2430:                                             ; preds = %2427, %2430
  %2431 = phi i64 [ %2435, %2430 ], [ %2420, %2427 ]
  %2432 = getelementptr inbounds i8, i8* %923, i64 %2431
  %2433 = load i8, i8* %2432, align 1
  %2434 = icmp eq i8 %2433, 7
  %2435 = add i64 %2431, -1
  br i1 %2434, label %2430, label %2436

2436:                                             ; preds = %2430
  %2437 = trunc i64 %2431 to i32
  br label %2438

2438:                                             ; preds = %2436, %2427
  %2439 = phi i32 [ %2404, %2427 ], [ %2437, %2436 ]
  %2440 = load i32, i32* %2394, align 8
  %2441 = icmp eq i32 %2440, 0
  br i1 %2441, label %2445, label %2442

2442:                                             ; preds = %2438
  %2443 = load %struct.Point*, %struct.Point** %2395, align 8
  %2444 = bitcast %struct.Point* %2443 to i8*
  br label %2451

2445:                                             ; preds = %2438
  %2446 = call noalias i8* @uprv_malloc_69(i64 80) #10
  store i8* %2446, i8** %2396, align 8
  %2447 = icmp eq i8* %2446, null
  br i1 %2447, label %2448, label %2449

2448:                                             ; preds = %2445
  store i32 7, i32* %2397, align 4
  br label %2485

2449:                                             ; preds = %2445
  %2450 = bitcast i8* %2446 to %struct.Point*
  store i32 10, i32* %2394, align 8
  br label %2451

2451:                                             ; preds = %2442, %2449
  %2452 = phi i8* [ %2446, %2449 ], [ %2444, %2442 ]
  %2453 = phi %struct.Point* [ %2450, %2449 ], [ %2443, %2442 ]
  %2454 = phi i32 [ 10, %2449 ], [ %2440, %2442 ]
  %2455 = load i32, i32* %365, align 4
  %2456 = icmp slt i32 %2455, %2454
  br i1 %2456, label %2469, label %2457

2457:                                             ; preds = %2451
  %2458 = shl nsw i32 %2454, 1
  %2459 = sext i32 %2458 to i64
  %2460 = shl nsw i64 %2459, 3
  %2461 = call i8* @uprv_realloc_69(i8* %2452, i64 %2460) #12
  store i8* %2461, i8** %2396, align 8
  %2462 = icmp eq i8* %2461, null
  br i1 %2462, label %2463, label %2464

2463:                                             ; preds = %2457
  store i8* %2452, i8** %2398, align 8
  store i32 7, i32* %2397, align 4
  br label %2485

2464:                                             ; preds = %2457
  %2465 = bitcast i8* %2461 to %struct.Point*
  %2466 = load i32, i32* %2394, align 8
  %2467 = shl nsw i32 %2466, 1
  store i32 %2467, i32* %2394, align 8
  %2468 = load i32, i32* %365, align 4
  br label %2469

2469:                                             ; preds = %2464, %2451
  %2470 = phi i32 [ %2468, %2464 ], [ %2455, %2451 ]
  %2471 = phi %struct.Point* [ %2465, %2464 ], [ %2453, %2451 ]
  %2472 = sext i32 %2470 to i64
  %2473 = getelementptr inbounds %struct.Point, %struct.Point* %2471, i64 %2472, i32 0
  store i32 %2439, i32* %2473, align 4
  %2474 = getelementptr inbounds %struct.Point, %struct.Point* %2471, i64 %2472, i32 1
  store i32 4, i32* %2474, align 4
  %2475 = load i32, i32* %365, align 4
  %2476 = add nsw i32 %2475, 1
  store i32 %2476, i32* %365, align 4
  br label %2485

2477:                                             ; preds = %2422
  %2478 = zext i8 %2425 to i64
  %2479 = shl i64 1, %2478
  %2480 = and i64 %2479, 8194
  %2481 = icmp eq i64 %2480, 0
  br i1 %2481, label %2482, label %2485

2482:                                             ; preds = %2477
  %2483 = add i64 %2423, -1
  %2484 = icmp sgt i64 %2423, %2421
  br i1 %2484, label %2422, label %2485

2485:                                             ; preds = %2482, %2477, %2415, %2469, %2463, %2448, %2399
  %2486 = add nuw nsw i64 %2400, 1
  %2487 = load i32, i32* %361, align 8
  %2488 = sext i32 %2487 to i64
  %2489 = icmp slt i64 %2486, %2488
  br i1 %2489, label %2399, label %2490

2490:                                             ; preds = %2485, %2390, %2386, %2382, %2379
  %2491 = load i32, i32* %428, align 8
  %2492 = and i32 %2491, 2
  %2493 = icmp eq i32 %2492, 0
  br i1 %2493, label %2499, label %2494

2494:                                             ; preds = %2490
  %2495 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 46
  %2496 = load i32, i32* %2495, align 8
  %2497 = load i32, i32* %354, align 8
  %2498 = sub nsw i32 %2497, %2496
  br label %2503

2499:                                             ; preds = %2490
  %2500 = load i32, i32* %365, align 4
  %2501 = load i32, i32* %354, align 8
  %2502 = add nsw i32 %2501, %2500
  br label %2503

2503:                                             ; preds = %2499, %2494
  %2504 = phi i32 [ %2502, %2499 ], [ %2498, %2494 ]
  store i32 %2504, i32* %354, align 8
  %2505 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 28
  store i32 0, i32* %2505, align 8
  %2506 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 30
  store i32 0, i32* %2506, align 8
  store %struct.UBiDi* %0, %struct.UBiDi** %352, align 8
  br label %2507

2507:                                             ; preds = %991, %1824, %1850, %1734, %6, %13, %2503, %2245, %1890, %1738, %891, %890, %374, %349, %25
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL21resolveImplicitLevelsP5UBiDiiihh(%struct.UBiDi*, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #0 {
  %6 = alloca %struct.LevState, align 8
  %7 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 19
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %struct.LevState* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 40, i1 false)
  %10 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 34
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, %1
  br i1 %12, label %13, label %61

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 26
  %15 = load i8, i8* %14, align 2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 37
  %19 = load %struct.Para*, %struct.Para** %18, align 8
  %20 = getelementptr inbounds %struct.Para, %struct.Para* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, %1
  br i1 %22, label %23, label %26

23:                                               ; preds = %13, %17
  %24 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 25
  %25 = load i8, i8* %24, align 1
  br label %52

26:                                               ; preds = %17
  %27 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 36
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %41

30:                                               ; preds = %26
  %31 = sext i32 %28 to i64
  %32 = icmp sgt i32 %21, %1
  br i1 %32, label %43, label %33

33:                                               ; preds = %30, %37
  %34 = phi i64 [ %35, %37 ], [ 0, %30 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = icmp eq i64 %35, %31
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.Para, %struct.Para* %19, i64 %35, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, %1
  br i1 %40, label %43, label %33

41:                                               ; preds = %33, %26
  %42 = add nsw i32 %28, -1
  br label %46

43:                                               ; preds = %37, %30
  %44 = phi i64 [ 0, %30 ], [ %35, %37 ]
  %45 = trunc i64 %44 to i32
  br label %46

46:                                               ; preds = %41, %43
  %47 = phi i32 [ %45, %43 ], [ %42, %41 ]
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %struct.Para, %struct.Para* %19, i64 %48, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = trunc i32 %50 to i8
  br label %52

52:                                               ; preds = %46, %23
  %53 = phi i8 [ %25, %23 ], [ %51, %46 ]
  %54 = and i8 %53, 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 22
  %58 = load i32, i32* %57, align 4
  %59 = add i32 %58, -5
  %60 = icmp ult i32 %59, 2
  br label %61

61:                                               ; preds = %56, %52, %5
  %62 = phi i1 [ false, %52 ], [ false, %5 ], [ %60, %56 ]
  %63 = getelementptr inbounds %struct.LevState, %struct.LevState* %6, i64 0, i32 3
  store i32 -1, i32* %63, align 4
  %64 = getelementptr inbounds %struct.LevState, %struct.LevState* %6, i64 0, i32 4
  store i32 -1, i32* %64, align 8
  %65 = getelementptr inbounds %struct.LevState, %struct.LevState* %6, i64 0, i32 6
  store i32 %1, i32* %65, align 8
  %66 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 20
  %67 = load i8*, i8** %66, align 8
  %68 = sext i32 %1 to i64
  %69 = getelementptr inbounds i8, i8* %67, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = getelementptr inbounds %struct.LevState, %struct.LevState* %6, i64 0, i32 7
  store i8 %70, i8* %71, align 4
  %72 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 31
  %73 = load %struct.ImpTabPair*, %struct.ImpTabPair** %72, align 8
  %74 = and i8 %70, 1
  %75 = zext i8 %74 to i64
  %76 = getelementptr inbounds %struct.ImpTabPair, %struct.ImpTabPair* %73, i64 0, i32 0, i64 %75
  %77 = bitcast i8** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %struct.LevState* %6 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %struct.ImpTabPair, %struct.ImpTabPair* %73, i64 0, i32 1, i64 %75
  %81 = bitcast i8** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %struct.LevState, %struct.LevState* %6, i64 0, i32 1
  %84 = bitcast [0 x i8]** %83 to i64*
  store i64 %82, i64* %84, align 8
  %85 = icmp eq i32 %1, 0
  br i1 %85, label %86, label %139

86:                                               ; preds = %61
  %87 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 28
  %88 = load i32, i32* %87, align 8
  %89 = icmp sgt i32 %88, 0
  br i1 %89, label %90, label %139

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 27
  %92 = load i16*, i16** %91, align 8
  %93 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 47
  %94 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 48
  br label %95

95:                                               ; preds = %131, %90
  %96 = phi i32 [ %88, %90 ], [ %121, %131 ]
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %98, label %139

98:                                               ; preds = %95
  %99 = add nsw i32 %96, -1
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i16, i16* %92, i64 %100
  %102 = load i16, i16* %101, align 2
  %103 = zext i16 %102 to i32
  %104 = and i32 %103, 64512
  %105 = icmp eq i32 %104, 56320
  %106 = icmp sgt i32 %99, 0
  %107 = and i1 %106, %105
  br i1 %107, label %108, label %120

108:                                              ; preds = %98
  %109 = add nsw i32 %96, -2
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %92, i64 %110
  %112 = load i16, i16* %111, align 2
  %113 = zext i16 %112 to i32
  %114 = and i32 %113, 64512
  %115 = icmp eq i32 %114, 55296
  br i1 %115, label %116, label %120

116:                                              ; preds = %108
  %117 = shl nuw nsw i32 %113, 10
  %118 = add nuw nsw i32 %103, -56613888
  %119 = add nsw i32 %118, %117
  br label %120

120:                                              ; preds = %116, %108, %98
  %121 = phi i32 [ %99, %98 ], [ %109, %116 ], [ %99, %108 ]
  %122 = phi i32 [ %103, %98 ], [ %119, %116 ], [ %103, %108 ]
  %123 = load i32 (i8*, i32)*, i32 (i8*, i32)** %93, align 8
  %124 = icmp eq i32 (i8*, i32)* %123, null
  br i1 %124, label %129, label %125

125:                                              ; preds = %120
  %126 = load i8*, i8** %94, align 8
  %127 = tail call i32 %123(i8* %126, i32 %122) #11
  %128 = icmp eq i32 %127, 23
  br i1 %128, label %129, label %131

129:                                              ; preds = %125, %120
  %130 = tail call i32 @ubidi_getClass_69(i32 %122) #11
  br label %131

131:                                              ; preds = %129, %125
  %132 = phi i32 [ %130, %129 ], [ %127, %125 ]
  %133 = icmp sgt i32 %132, 22
  %134 = select i1 %133, i32 10, i32 %132
  %135 = trunc i32 %134 to i8
  switch i8 %135, label %95 [
    i8 0, label %136
    i8 1, label %138
    i8 13, label %138
    i8 7, label %139
  ]

136:                                              ; preds = %131
  %137 = trunc i32 %134 to i8
  br label %139

138:                                              ; preds = %131, %131
  br label %139

139:                                              ; preds = %136, %95, %131, %138, %86, %61
  %140 = phi i8 [ %3, %86 ], [ %3, %61 ], [ 1, %138 ], [ %3, %131 ], [ %137, %136 ], [ %3, %95 ]
  %141 = getelementptr inbounds i8, i8* %8, i64 %68
  %142 = load i8, i8* %141, align 1
  %143 = icmp eq i8 %142, 22
  br i1 %143, label %144, label %163

144:                                              ; preds = %139
  %145 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 42
  %146 = load i32, i32* %145, align 4
  %147 = icmp sgt i32 %146, -1
  br i1 %147, label %148, label %163

148:                                              ; preds = %144
  %149 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 43
  %150 = load %struct.Isolate*, %struct.Isolate** %149, align 8
  %151 = sext i32 %146 to i64
  %152 = getelementptr inbounds %struct.Isolate, %struct.Isolate* %150, i64 %151, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = getelementptr inbounds %struct.LevState, %struct.LevState* %6, i64 0, i32 2
  store i32 %153, i32* %154, align 8
  %155 = getelementptr inbounds %struct.Isolate, %struct.Isolate* %150, i64 %151, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %struct.Isolate, %struct.Isolate* %150, i64 %151, i32 3
  %158 = load i16, i16* %157, align 4
  %159 = getelementptr inbounds %struct.Isolate, %struct.Isolate* %150, i64 %151, i32 2
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %struct.LevState, %struct.LevState* %6, i64 0, i32 5
  store i32 %160, i32* %161, align 4
  %162 = add nsw i32 %146, -1
  store i32 %162, i32* %145, align 4
  br label %171

163:                                              ; preds = %144, %139
  %164 = getelementptr inbounds %struct.LevState, %struct.LevState* %6, i64 0, i32 2
  store i32 -1, i32* %164, align 8
  %165 = load i8, i8* %141, align 1
  %166 = icmp eq i8 %165, 17
  %167 = zext i8 %140 to i16
  %168 = add nuw nsw i16 %167, 1
  %169 = select i1 %166, i16 %168, i16 0
  %170 = getelementptr inbounds %struct.LevState, %struct.LevState* %6, i64 0, i32 5
  store i32 0, i32* %170, align 4
  call fastcc void @_ZL18processPropertySeqP5UBiDiP8LevStatehii(%struct.UBiDi* %0, %struct.LevState* nonnull %6, i8 zeroext %140, i32 %1, i32 %1)
  br label %171

171:                                              ; preds = %163, %148
  %172 = phi i32 [ %156, %148 ], [ %1, %163 ]
  %173 = phi i16 [ %158, %148 ], [ %169, %163 ]
  %174 = icmp sgt i32 %1, %2
  br i1 %174, label %266, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 42
  %177 = sext i32 %2 to i64
  br label %178

178:                                              ; preds = %262, %175
  %179 = phi i64 [ %265, %262 ], [ %68, %175 ]
  %180 = phi i32 [ %239, %262 ], [ -1, %175 ]
  %181 = phi i8 [ %238, %262 ], [ 1, %175 ]
  %182 = phi i16 [ %245, %262 ], [ %173, %175 ]
  %183 = phi i32 [ %264, %262 ], [ %1, %175 ]
  %184 = phi i32 [ %263, %262 ], [ %172, %175 ]
  %185 = icmp slt i64 %179, %177
  br i1 %185, label %204, label %186

186:                                              ; preds = %178, %190
  %187 = phi i64 [ %188, %190 ], [ %177, %178 ]
  %188 = add nsw i64 %187, -1
  %189 = icmp sgt i64 %188, %68
  br i1 %189, label %190, label %197

190:                                              ; preds = %186
  %191 = getelementptr inbounds i8, i8* %8, i64 %188
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i64
  %194 = shl i64 1, %193
  %195 = and i64 %194, 382976
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %186

197:                                              ; preds = %190, %186
  %198 = shl i64 %188, 32
  %199 = ashr exact i64 %198, 32
  %200 = getelementptr inbounds i8, i8* %8, i64 %199
  %201 = load i8, i8* %200, align 1
  %202 = and i8 %201, -2
  %203 = icmp eq i8 %202, 20
  br i1 %203, label %266, label %236

204:                                              ; preds = %178
  %205 = getelementptr inbounds i8, i8* %8, i64 %179
  %206 = load i8, i8* %205, align 1
  %207 = icmp eq i8 %206, 7
  br i1 %207, label %208, label %209

208:                                              ; preds = %204
  store i32 -1, i32* %176, align 4
  br label %209

209:                                              ; preds = %208, %204
  br i1 %62, label %210, label %229

210:                                              ; preds = %209
  switch i8 %206, label %228 [
    i8 13, label %229
    i8 2, label %211
  ]

211:                                              ; preds = %210
  %212 = sext i32 %180 to i64
  %213 = icmp slt i64 %179, %212
  br i1 %213, label %223, label %214

214:                                              ; preds = %211, %218
  %215 = phi i64 [ %216, %218 ], [ %179, %211 ]
  %216 = add nsw i64 %215, 1
  %217 = icmp slt i64 %216, %177
  br i1 %217, label %218, label %229

218:                                              ; preds = %214
  %219 = getelementptr inbounds i8, i8* %8, i64 %216
  %220 = load i8, i8* %219, align 1
  switch i8 %220, label %214 [
    i8 0, label %221
    i8 1, label %221
    i8 13, label %221
  ]

221:                                              ; preds = %218, %218, %218
  %222 = trunc i64 %216 to i32
  br label %223

223:                                              ; preds = %221, %211
  %224 = phi i8 [ %181, %211 ], [ %220, %221 ]
  %225 = phi i32 [ %180, %211 ], [ %222, %221 ]
  %226 = icmp eq i8 %224, 13
  %227 = select i1 %226, i8 5, i8 2
  br label %229

228:                                              ; preds = %210
  br label %229

229:                                              ; preds = %214, %223, %210, %228, %209
  %230 = phi i8 [ %181, %209 ], [ %181, %210 ], [ %181, %228 ], [ %224, %223 ], [ 1, %214 ]
  %231 = phi i32 [ %180, %209 ], [ %180, %210 ], [ %180, %228 ], [ %225, %223 ], [ %2, %214 ]
  %232 = phi i8 [ %206, %209 ], [ 1, %210 ], [ %206, %228 ], [ %227, %223 ], [ 2, %214 ]
  %233 = zext i8 %232 to i64
  %234 = getelementptr inbounds [25 x i8], [25 x i8]* @_ZL9groupProp, i64 0, i64 %233
  %235 = load i8, i8* %234, align 1
  br label %236

236:                                              ; preds = %197, %229
  %237 = phi i8 [ %4, %197 ], [ %235, %229 ]
  %238 = phi i8 [ %181, %197 ], [ %230, %229 ]
  %239 = phi i32 [ %180, %197 ], [ %231, %229 ]
  %240 = zext i16 %182 to i64
  %241 = zext i8 %237 to i64
  %242 = getelementptr inbounds [24 x [16 x i8]], [24 x [16 x i8]]* @_ZL11impTabProps, i64 0, i64 %240, i64 %241
  %243 = load i8, i8* %242, align 1
  %244 = and i8 %243, 31
  %245 = zext i8 %244 to i16
  %246 = lshr i8 %243, 5
  %247 = zext i8 %246 to i16
  %248 = icmp eq i64 %179, %177
  %249 = icmp eq i8 %246, 0
  %250 = and i1 %248, %249
  %251 = select i1 %250, i16 1, i16 %247
  %252 = icmp eq i16 %251, 0
  br i1 %252, label %262, label %253

253:                                              ; preds = %236
  %254 = getelementptr inbounds [24 x [16 x i8]], [24 x [16 x i8]]* @_ZL11impTabProps, i64 0, i64 %240, i64 15
  %255 = load i8, i8* %254, align 1
  %256 = trunc i16 %251 to i8
  %257 = trunc i64 %179 to i32
  switch i8 %256, label %261 [
    i8 1, label %258
    i8 2, label %262
    i8 3, label %259
    i8 4, label %260
  ]

258:                                              ; preds = %253
  call fastcc void @_ZL18processPropertySeqP5UBiDiP8LevStatehii(%struct.UBiDi* %0, %struct.LevState* nonnull %6, i8 zeroext %255, i32 %184, i32 %257)
  br label %262

259:                                              ; preds = %253
  call fastcc void @_ZL18processPropertySeqP5UBiDiP8LevStatehii(%struct.UBiDi* %0, %struct.LevState* nonnull %6, i8 zeroext %255, i32 %184, i32 %183)
  call fastcc void @_ZL18processPropertySeqP5UBiDiP8LevStatehii(%struct.UBiDi* %0, %struct.LevState* nonnull %6, i8 zeroext 4, i32 %183, i32 %257)
  br label %262

260:                                              ; preds = %253
  call fastcc void @_ZL18processPropertySeqP5UBiDiP8LevStatehii(%struct.UBiDi* %0, %struct.LevState* nonnull %6, i8 zeroext %255, i32 %184, i32 %183)
  br label %262

261:                                              ; preds = %253
  call void @abort() #13
  unreachable

262:                                              ; preds = %253, %236, %260, %259, %258
  %263 = phi i32 [ %183, %260 ], [ %257, %259 ], [ %257, %258 ], [ %184, %236 ], [ %184, %253 ]
  %264 = phi i32 [ %257, %260 ], [ %183, %259 ], [ %183, %258 ], [ %183, %236 ], [ %257, %253 ]
  %265 = add nsw i64 %179, 1
  br i1 %185, label %178, label %266

266:                                              ; preds = %262, %197, %171
  %267 = phi i32 [ %172, %171 ], [ %184, %197 ], [ %263, %262 ]
  %268 = phi i16 [ %173, %171 ], [ %182, %197 ], [ %245, %262 ]
  %269 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 3
  %270 = load i32, i32* %269, align 4
  %271 = icmp eq i32 %270, %2
  br i1 %271, label %272, label %326

272:                                              ; preds = %266
  %273 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 30
  %274 = load i32, i32* %273, align 8
  %275 = icmp sgt i32 %274, 0
  br i1 %275, label %276, label %326

276:                                              ; preds = %272
  %277 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 29
  %278 = load i16*, i16** %277, align 8
  %279 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 47
  %280 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 48
  br label %281

281:                                              ; preds = %317, %276
  %282 = phi i32 [ 0, %276 ], [ %307, %317 ]
  %283 = icmp slt i32 %282, %274
  br i1 %283, label %284, label %326

284:                                              ; preds = %281
  %285 = add nsw i32 %282, 1
  %286 = sext i32 %282 to i64
  %287 = getelementptr inbounds i16, i16* %278, i64 %286
  %288 = load i16, i16* %287, align 2
  %289 = zext i16 %288 to i32
  %290 = and i32 %289, 64512
  %291 = icmp ne i32 %290, 55296
  %292 = icmp eq i32 %285, %274
  %293 = or i1 %292, %291
  br i1 %293, label %306, label %294

294:                                              ; preds = %284
  %295 = sext i32 %285 to i64
  %296 = getelementptr inbounds i16, i16* %278, i64 %295
  %297 = load i16, i16* %296, align 2
  %298 = zext i16 %297 to i32
  %299 = and i32 %298, 64512
  %300 = icmp eq i32 %299, 56320
  br i1 %300, label %301, label %306

301:                                              ; preds = %294
  %302 = add nsw i32 %282, 2
  %303 = shl nuw nsw i32 %289, 10
  %304 = add nsw i32 %303, -56613888
  %305 = add nsw i32 %304, %298
  br label %306

306:                                              ; preds = %301, %294, %284
  %307 = phi i32 [ %285, %284 ], [ %302, %301 ], [ %285, %294 ]
  %308 = phi i32 [ %289, %284 ], [ %305, %301 ], [ %289, %294 ]
  %309 = load i32 (i8*, i32)*, i32 (i8*, i32)** %279, align 8
  %310 = icmp eq i32 (i8*, i32)* %309, null
  br i1 %310, label %315, label %311

311:                                              ; preds = %306
  %312 = load i8*, i8** %280, align 8
  %313 = call i32 %309(i8* %312, i32 %308) #11
  %314 = icmp eq i32 %313, 23
  br i1 %314, label %315, label %317

315:                                              ; preds = %311, %306
  %316 = call i32 @ubidi_getClass_69(i32 %308) #11
  br label %317

317:                                              ; preds = %315, %311
  %318 = phi i32 [ %316, %315 ], [ %313, %311 ]
  %319 = icmp sgt i32 %318, 22
  %320 = select i1 %319, i32 10, i32 %318
  %321 = trunc i32 %320 to i8
  switch i8 %321, label %281 [
    i8 0, label %324
    i8 1, label %326
    i8 13, label %326
    i8 2, label %322
    i8 5, label %323
  ]

322:                                              ; preds = %317
  br label %326

323:                                              ; preds = %317
  br label %326

324:                                              ; preds = %317
  %325 = trunc i32 %320 to i8
  br label %326

326:                                              ; preds = %324, %281, %317, %317, %323, %322, %272, %266
  %327 = phi i8 [ %4, %272 ], [ %4, %266 ], [ 2, %322 ], [ 3, %323 ], [ 1, %317 ], [ 1, %317 ], [ %325, %324 ], [ %4, %281 ]
  %328 = sext i32 %2 to i64
  br label %329

329:                                              ; preds = %333, %326
  %330 = phi i64 [ %331, %333 ], [ %328, %326 ]
  %331 = add nsw i64 %330, -1
  %332 = icmp sgt i64 %331, %68
  br i1 %332, label %333, label %340

333:                                              ; preds = %329
  %334 = getelementptr inbounds i8, i8* %8, i64 %331
  %335 = load i8, i8* %334, align 1
  %336 = zext i8 %335 to i64
  %337 = shl i64 1, %336
  %338 = and i64 %337, 382976
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %329

340:                                              ; preds = %333, %329
  %341 = shl i64 %331, 32
  %342 = ashr exact i64 %341, 32
  %343 = getelementptr inbounds i8, i8* %8, i64 %342
  %344 = load i8, i8* %343, align 1
  %345 = and i8 %344, -2
  %346 = icmp eq i8 %345, 20
  br i1 %346, label %347, label %374

347:                                              ; preds = %340
  %348 = load i32, i32* %269, align 4
  %349 = icmp sgt i32 %348, %2
  br i1 %349, label %350, label %374

350:                                              ; preds = %347
  %351 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 42
  %352 = load i32, i32* %351, align 4
  %353 = add nsw i32 %352, 1
  store i32 %353, i32* %351, align 4
  %354 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 43
  %355 = load %struct.Isolate*, %struct.Isolate** %354, align 8
  %356 = sext i32 %353 to i64
  %357 = getelementptr inbounds %struct.Isolate, %struct.Isolate* %355, i64 %356, i32 3
  store i16 %268, i16* %357, align 4
  %358 = getelementptr inbounds %struct.LevState, %struct.LevState* %6, i64 0, i32 5
  %359 = load i32, i32* %358, align 4
  %360 = load %struct.Isolate*, %struct.Isolate** %354, align 8
  %361 = load i32, i32* %351, align 4
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds %struct.Isolate, %struct.Isolate* %360, i64 %362, i32 2
  store i32 %359, i32* %363, align 4
  %364 = load %struct.Isolate*, %struct.Isolate** %354, align 8
  %365 = load i32, i32* %351, align 4
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds %struct.Isolate, %struct.Isolate* %364, i64 %366, i32 1
  store i32 %267, i32* %367, align 4
  %368 = getelementptr inbounds %struct.LevState, %struct.LevState* %6, i64 0, i32 2
  %369 = load i32, i32* %368, align 8
  %370 = load %struct.Isolate*, %struct.Isolate** %354, align 8
  %371 = load i32, i32* %351, align 4
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds %struct.Isolate, %struct.Isolate* %370, i64 %372, i32 0
  store i32 %369, i32* %373, align 4
  br label %375

374:                                              ; preds = %340, %347
  call fastcc void @_ZL18processPropertySeqP5UBiDiP8LevStatehii(%struct.UBiDi* %0, %struct.LevState* nonnull %6, i8 zeroext %327, i32 %2, i32 %2)
  br label %375

375:                                              ; preds = %374, %350
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @ubidi_orderParagraphsLTR_69(%struct.UBiDi*, i8 signext) local_unnamed_addr #5 {
  %3 = icmp eq %struct.UBiDi* %0, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 24
  store i8 %1, i8* %5, align 4
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @ubidi_isOrderParagraphsLTR_69(%struct.UBiDi* readonly) local_unnamed_addr #6 {
  %2 = icmp eq %struct.UBiDi* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 24
  %5 = load i8, i8* %4, align 4
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i8 [ %5, %3 ], [ 0, %1 ]
  ret i8 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ubidi_getDirection_69(%struct.UBiDi* readonly) local_unnamed_addr #6 {
  %2 = icmp eq %struct.UBiDi* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %5 = load %struct.UBiDi*, %struct.UBiDi** %4, align 8
  %6 = icmp eq %struct.UBiDi* %5, %0
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = icmp eq %struct.UBiDi* %5, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %5, i64 0, i32 0
  %11 = load %struct.UBiDi*, %struct.UBiDi** %10, align 8
  %12 = icmp eq %struct.UBiDi* %11, %5
  br i1 %12, label %13, label %16

13:                                               ; preds = %9, %3
  %14 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 32
  %15 = load i32, i32* %14, align 8
  br label %16

16:                                               ; preds = %9, %1, %7, %13
  %17 = phi i32 [ %15, %13 ], [ 0, %7 ], [ 0, %1 ], [ 0, %9 ]
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16* @ubidi_getText_69(%struct.UBiDi* readonly) local_unnamed_addr #6 {
  %2 = icmp eq %struct.UBiDi* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %5 = load %struct.UBiDi*, %struct.UBiDi** %4, align 8
  %6 = icmp eq %struct.UBiDi* %5, %0
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = icmp eq %struct.UBiDi* %5, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %5, i64 0, i32 0
  %11 = load %struct.UBiDi*, %struct.UBiDi** %10, align 8
  %12 = icmp eq %struct.UBiDi* %11, %5
  br i1 %12, label %13, label %16

13:                                               ; preds = %9, %3
  %14 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 1
  %15 = load i16*, i16** %14, align 8
  br label %16

16:                                               ; preds = %9, %1, %7, %13
  %17 = phi i16* [ %15, %13 ], [ null, %7 ], [ null, %1 ], [ null, %9 ]
  ret i16* %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ubidi_getLength_69(%struct.UBiDi* readonly) local_unnamed_addr #6 {
  %2 = icmp eq %struct.UBiDi* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %5 = load %struct.UBiDi*, %struct.UBiDi** %4, align 8
  %6 = icmp eq %struct.UBiDi* %5, %0
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = icmp eq %struct.UBiDi* %5, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %5, i64 0, i32 0
  %11 = load %struct.UBiDi*, %struct.UBiDi** %10, align 8
  %12 = icmp eq %struct.UBiDi* %11, %5
  br i1 %12, label %13, label %16

13:                                               ; preds = %9, %3
  %14 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  br label %16

16:                                               ; preds = %9, %1, %7, %13
  %17 = phi i32 [ %15, %13 ], [ 0, %7 ], [ 0, %1 ], [ 0, %9 ]
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ubidi_getProcessedLength_69(%struct.UBiDi* readonly) local_unnamed_addr #6 {
  %2 = icmp eq %struct.UBiDi* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %5 = load %struct.UBiDi*, %struct.UBiDi** %4, align 8
  %6 = icmp eq %struct.UBiDi* %5, %0
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = icmp eq %struct.UBiDi* %5, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %5, i64 0, i32 0
  %11 = load %struct.UBiDi*, %struct.UBiDi** %10, align 8
  %12 = icmp eq %struct.UBiDi* %11, %5
  br i1 %12, label %13, label %16

13:                                               ; preds = %9, %3
  %14 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  br label %16

16:                                               ; preds = %9, %1, %7, %13
  %17 = phi i32 [ %15, %13 ], [ 0, %7 ], [ 0, %1 ], [ 0, %9 ]
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ubidi_getResultLength_69(%struct.UBiDi* readonly) local_unnamed_addr #6 {
  %2 = icmp eq %struct.UBiDi* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %5 = load %struct.UBiDi*, %struct.UBiDi** %4, align 8
  %6 = icmp eq %struct.UBiDi* %5, %0
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = icmp eq %struct.UBiDi* %5, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %5, i64 0, i32 0
  %11 = load %struct.UBiDi*, %struct.UBiDi** %10, align 8
  %12 = icmp eq %struct.UBiDi* %11, %5
  br i1 %12, label %13, label %16

13:                                               ; preds = %9, %3
  %14 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  br label %16

16:                                               ; preds = %9, %1, %7, %13
  %17 = phi i32 [ %15, %13 ], [ 0, %7 ], [ 0, %1 ], [ 0, %9 ]
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @ubidi_getParaLevel_69(%struct.UBiDi* readonly) local_unnamed_addr #6 {
  %2 = icmp eq %struct.UBiDi* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %5 = load %struct.UBiDi*, %struct.UBiDi** %4, align 8
  %6 = icmp eq %struct.UBiDi* %5, %0
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = icmp eq %struct.UBiDi* %5, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %5, i64 0, i32 0
  %11 = load %struct.UBiDi*, %struct.UBiDi** %10, align 8
  %12 = icmp eq %struct.UBiDi* %11, %5
  br i1 %12, label %13, label %16

13:                                               ; preds = %9, %3
  %14 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 25
  %15 = load i8, i8* %14, align 1
  br label %16

16:                                               ; preds = %9, %1, %7, %13
  %17 = phi i8 [ %15, %13 ], [ 0, %7 ], [ 0, %1 ], [ 0, %9 ]
  ret i8 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ubidi_countParagraphs_69(%struct.UBiDi* readonly) local_unnamed_addr #6 {
  %2 = icmp eq %struct.UBiDi* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %5 = load %struct.UBiDi*, %struct.UBiDi** %4, align 8
  %6 = icmp eq %struct.UBiDi* %5, %0
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = icmp eq %struct.UBiDi* %5, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %5, i64 0, i32 0
  %11 = load %struct.UBiDi*, %struct.UBiDi** %10, align 8
  %12 = icmp eq %struct.UBiDi* %11, %5
  br i1 %12, label %13, label %16

13:                                               ; preds = %9, %3
  %14 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 36
  %15 = load i32, i32* %14, align 8
  br label %16

16:                                               ; preds = %9, %1, %7, %13
  %17 = phi i32 [ %15, %13 ], [ 0, %7 ], [ 0, %1 ], [ 0, %9 ]
  ret i32 %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ubidi_getParagraphByIndex_69(%struct.UBiDi* readonly, i32, i32*, i32*, i8*, i32*) local_unnamed_addr #8 {
  %7 = icmp eq i32* %5, null
  br i1 %7, label %94, label %8

8:                                                ; preds = %6
  %9 = load i32, i32* %5, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %94

11:                                               ; preds = %8
  %12 = icmp eq %struct.UBiDi* %0, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %15 = load %struct.UBiDi*, %struct.UBiDi** %14, align 8
  %16 = icmp eq %struct.UBiDi* %15, %0
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = icmp eq %struct.UBiDi* %15, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %15, i64 0, i32 0
  %21 = load %struct.UBiDi*, %struct.UBiDi** %20, align 8
  %22 = icmp eq %struct.UBiDi* %21, %15
  br i1 %22, label %24, label %23

23:                                               ; preds = %17, %11, %19
  store i32 27, i32* %5, align 4
  br label %94

24:                                               ; preds = %13, %19
  %25 = icmp slt i32 %1, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 36
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, %1
  br i1 %29, label %31, label %30

30:                                               ; preds = %26, %24
  store i32 1, i32* %5, align 4
  br label %94

31:                                               ; preds = %26
  %32 = icmp eq i32 %1, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %15, i64 0, i32 37
  %35 = load %struct.Para*, %struct.Para** %34, align 8
  %36 = add nsw i32 %1, -1
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %struct.Para, %struct.Para* %35, i64 %37, i32 0
  %39 = load i32, i32* %38, align 4
  br label %40

40:                                               ; preds = %31, %33
  %41 = phi i32 [ %39, %33 ], [ 0, %31 ]
  %42 = icmp eq i32* %2, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  store i32 %41, i32* %2, align 4
  br label %44

44:                                               ; preds = %40, %43
  %45 = icmp eq i32* %3, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %15, i64 0, i32 37
  %48 = load %struct.Para*, %struct.Para** %47, align 8
  %49 = sext i32 %1 to i64
  %50 = getelementptr inbounds %struct.Para, %struct.Para* %48, i64 %49, i32 0
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %3, align 4
  br label %52

52:                                               ; preds = %44, %46
  %53 = icmp eq i8* %4, null
  br i1 %53, label %94, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %15, i64 0, i32 26
  %56 = load i8, i8* %55, align 2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %64, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %15, i64 0, i32 37
  %60 = load %struct.Para*, %struct.Para** %59, align 8
  %61 = getelementptr inbounds %struct.Para, %struct.Para* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp slt i32 %41, %62
  br i1 %63, label %64, label %67

64:                                               ; preds = %54, %58
  %65 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %15, i64 0, i32 25
  %66 = load i8, i8* %65, align 1
  br label %92

67:                                               ; preds = %58
  %68 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %15, i64 0, i32 36
  %69 = load i32, i32* %68, align 8
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %82

71:                                               ; preds = %67
  %72 = sext i32 %69 to i64
  %73 = icmp sgt i32 %62, %41
  br i1 %73, label %86, label %74

74:                                               ; preds = %71, %78
  %75 = phi i64 [ %76, %78 ], [ 0, %71 ]
  %76 = add nuw nsw i64 %75, 1
  %77 = icmp eq i64 %76, %72
  br i1 %77, label %82, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.Para, %struct.Para* %60, i64 %76, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp sgt i32 %80, %41
  br i1 %81, label %84, label %74

82:                                               ; preds = %74, %67
  %83 = add nsw i32 %69, -1
  br label %86

84:                                               ; preds = %78
  %85 = trunc i64 %76 to i32
  br label %86

86:                                               ; preds = %71, %84, %82
  %87 = phi i32 [ %83, %82 ], [ %85, %84 ], [ 0, %71 ]
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.Para, %struct.Para* %60, i64 %88, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = trunc i32 %90 to i8
  br label %92

92:                                               ; preds = %86, %64
  %93 = phi i8 [ %66, %64 ], [ %91, %86 ]
  store i8 %93, i8* %4, align 1
  br label %94

94:                                               ; preds = %92, %52, %6, %8, %30, %23
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @ubidi_getParagraph_69(%struct.UBiDi* readonly, i32, i32*, i32*, i8*, i32*) local_unnamed_addr #8 {
  %7 = icmp eq i32* %5, null
  br i1 %7, label %42, label %8

8:                                                ; preds = %6
  %9 = load i32, i32* %5, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %42

11:                                               ; preds = %8
  %12 = icmp eq %struct.UBiDi* %0, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 0
  %15 = load %struct.UBiDi*, %struct.UBiDi** %14, align 8
  %16 = icmp eq %struct.UBiDi* %15, %0
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = icmp eq %struct.UBiDi* %15, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %15, i64 0, i32 0
  %21 = load %struct.UBiDi*, %struct.UBiDi** %20, align 8
  %22 = icmp eq %struct.UBiDi* %21, %15
  br i1 %22, label %24, label %23

23:                                               ; preds = %17, %11, %19
  store i32 27, i32* %5, align 4
  br label %42

24:                                               ; preds = %19, %13
  %25 = icmp slt i32 %1, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %15, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, %1
  br i1 %29, label %30, label %33

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %15, i64 0, i32 37
  %32 = load %struct.Para*, %struct.Para** %31, align 8
  br label %34

33:                                               ; preds = %26, %24
  store i32 1, i32* %5, align 4
  br label %42

34:                                               ; preds = %34, %30
  %35 = phi i64 [ %39, %34 ], [ 0, %30 ]
  %36 = getelementptr inbounds %struct.Para, %struct.Para* %32, i64 %35, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, %1
  %39 = add nuw i64 %35, 1
  br i1 %38, label %40, label %34

40:                                               ; preds = %34
  %41 = trunc i64 %35 to i32
  tail call void @ubidi_getParagraphByIndex_69(%struct.UBiDi* %15, i32 %41, i32* %2, i32* %3, i8* %4, i32* nonnull %5)
  br label %42

42:                                               ; preds = %6, %8, %40, %33, %23
  %43 = phi i32 [ -1, %33 ], [ %41, %40 ], [ -1, %23 ], [ -1, %8 ], [ -1, %6 ]
  ret i32 %43
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ubidi_setClassCallback_69(%struct.UBiDi*, i32 (i8*, i32)*, i8*, i32 (i8*, i32)**, i8**, i32*) local_unnamed_addr #8 {
  %7 = icmp eq i32* %5, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %6
  %9 = load i32, i32* %5, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %31

11:                                               ; preds = %8
  %12 = icmp eq %struct.UBiDi* %0, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  store i32 1, i32* %5, align 4
  br label %31

14:                                               ; preds = %11
  %15 = icmp eq i32 (i8*, i32)** %3, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 47
  %18 = bitcast i32 (i8*, i32)** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast i32 (i8*, i32)** %3 to i64*
  store i64 %19, i64* %20, align 8
  br label %21

21:                                               ; preds = %14, %16
  %22 = icmp eq i8** %4, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 48
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast i8** %4 to i64*
  store i64 %26, i64* %27, align 8
  br label %28

28:                                               ; preds = %21, %23
  %29 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 47
  store i32 (i8*, i32)* %1, i32 (i8*, i32)** %29, align 8
  %30 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 48
  store i8* %2, i8** %30, align 8
  br label %31

31:                                               ; preds = %8, %6, %28, %13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ubidi_getClassCallback_69(%struct.UBiDi* readonly, i32 (i8*, i32)**, i8**) local_unnamed_addr #8 {
  %4 = icmp eq %struct.UBiDi* %0, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %3
  %6 = icmp eq i32 (i8*, i32)** %1, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 47
  %9 = bitcast i32 (i8*, i32)** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i32 (i8*, i32)** %1 to i64*
  store i64 %10, i64* %11, align 8
  br label %12

12:                                               ; preds = %5, %7
  %13 = icmp eq i8** %2, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 48
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8** %2 to i64*
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %12, %3, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ubidi_getCustomizedClass_69(%struct.UBiDi* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 47
  %4 = load i32 (i8*, i32)*, i32 (i8*, i32)** %3, align 8
  %5 = icmp eq i32 (i8*, i32)* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 48
  %8 = load i8*, i8** %7, align 8
  %9 = tail call i32 %4(i8* %8, i32 %1) #11
  %10 = icmp eq i32 %9, 23
  br i1 %10, label %11, label %13

11:                                               ; preds = %6, %2
  %12 = tail call i32 @ubidi_getClass_69(i32 %1) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i32 [ %12, %11 ], [ %9, %6 ]
  %15 = icmp sgt i32 %14, 22
  %16 = select i1 %15, i32 10, i32 %14
  ret i32 %16
}

declare i32 @ubidi_getClass_69(i32) local_unnamed_addr #4

declare i8* @ubidi_getLevels_69(%struct.UBiDi*, i32*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @ubidi_writeReordered_69(%struct.UBiDi*, i16*, i32, i16 zeroext, i32*) local_unnamed_addr #4

declare void @ubidi_getVisualMap_69(%struct.UBiDi*, i32*, i32*) local_unnamed_addr #4

declare signext i8 @ubidi_getRuns_69(%struct.UBiDi*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc signext i8 @_ZL18bracketProcessCharP11BracketDatai(%struct.BracketData*, i32) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5
  %7 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 0
  %8 = load %struct.UBiDi*, %struct.UBiDi** %7, align 8
  %9 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %8, i64 0, i32 19
  %10 = load i8*, i8** %9, align 8
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds i8, i8* %10, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 10
  br i1 %14, label %15, label %424

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %8, i64 0, i32 1
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds i16, i16* %17, i64 %11
  %19 = load i16, i16* %18, align 2
  %20 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 2
  %21 = load i16, i16* %20, align 2
  %22 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 1
  %23 = load i16, i16* %22, align 4
  %24 = zext i16 %23 to i32
  %25 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 2
  %26 = zext i16 %19 to i32
  %27 = zext i16 %21 to i64
  %28 = zext i16 %23 to i64
  br label %29

29:                                               ; preds = %33, %15
  %30 = phi i64 [ %31, %33 ], [ %27, %15 ]
  %31 = add nsw i64 %30, -1
  %32 = icmp sgt i64 %30, %28
  br i1 %32, label %33, label %207

33:                                               ; preds = %29
  %34 = load %struct.Opening*, %struct.Opening** %25, align 8
  %35 = getelementptr inbounds %struct.Opening, %struct.Opening* %34, i64 %31, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, %26
  br i1 %37, label %38, label %29

38:                                               ; preds = %33
  %39 = trunc i64 %30 to i32
  %40 = trunc i64 %31 to i32
  %41 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 3
  %42 = load i8, i8* %41, align 4
  %43 = and i8 %42, 1
  %44 = zext i8 %43 to i32
  %45 = icmp eq i8 %43, 0
  %46 = getelementptr inbounds %struct.Opening, %struct.Opening* %34, i64 %31, i32 3
  %47 = load i16, i16* %46, align 4
  br i1 %45, label %48, label %51

48:                                               ; preds = %38
  %49 = and i16 %47, 1
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %54, label %66

51:                                               ; preds = %38
  %52 = and i16 %47, 2
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %51, %48
  %55 = and i16 %47, 3
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %64, label %57

57:                                               ; preds = %54
  %58 = icmp ne i32 %40, %24
  %59 = getelementptr inbounds %struct.Opening, %struct.Opening* %34, i64 %31, i32 4
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %44
  %62 = trunc i32 %60 to i8
  %63 = select i1 %61, i8 %43, i8 %62
  br label %66

64:                                               ; preds = %54
  %65 = trunc i64 %31 to i16
  store i16 %65, i16* %20, align 2
  br label %424

66:                                               ; preds = %57, %51, %48
  %67 = phi i1 [ false, %48 ], [ false, %51 ], [ %58, %57 ]
  %68 = phi i8 [ 0, %48 ], [ 1, %51 ], [ %63, %57 ]
  %69 = getelementptr inbounds %struct.Opening, %struct.Opening* %34, i64 %31, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %10, i64 %71
  store i8 %68, i8* %72, align 1
  %73 = load %struct.UBiDi*, %struct.UBiDi** %7, align 8
  %74 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %73, i64 0, i32 19
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 %11
  store i8 %68, i8* %76, align 1
  %77 = load i32, i32* %69, align 4
  tail call fastcc void @_ZL6fixN0cP11BracketDataiih(%struct.BracketData* %0, i32 %40, i32 %77, i8 zeroext %68) #11
  br i1 %67, label %94, label %78

78:                                               ; preds = %66
  %79 = trunc i64 %31 to i16
  store i16 %79, i16* %20, align 2
  %80 = load i16, i16* %22, align 4
  %81 = icmp ult i16 %80, %79
  br i1 %81, label %84, label %137

82:                                               ; preds = %84
  store i16 %93, i16* %20, align 2
  %83 = icmp ugt i16 %93, %80
  br i1 %83, label %84, label %137

84:                                               ; preds = %78, %82
  %85 = phi i16 [ %93, %82 ], [ %79, %78 ]
  %86 = zext i16 %85 to i64
  %87 = load %struct.Opening*, %struct.Opening** %25, align 8
  %88 = add nsw i64 %86, -1
  %89 = getelementptr inbounds %struct.Opening, %struct.Opening* %87, i64 %88, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = load i32, i32* %69, align 4
  %92 = icmp eq i32 %90, %91
  %93 = add i16 %85, -1
  br i1 %92, label %82, label %137

94:                                               ; preds = %66
  %95 = sub nsw i32 0, %1
  store i32 %95, i32* %35, align 4
  %96 = load i16, i16* %22, align 4
  %97 = zext i16 %96 to i32
  %98 = icmp sgt i32 %40, %97
  br i1 %98, label %99, label %112

99:                                               ; preds = %94, %107
  %100 = phi i64 [ %101, %107 ], [ %31, %94 ]
  %101 = add nsw i64 %100, -1
  %102 = load %struct.Opening*, %struct.Opening** %25, align 8
  %103 = getelementptr inbounds %struct.Opening, %struct.Opening* %102, i64 %101, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = load i32, i32* %69, align 4
  %106 = icmp eq i32 %104, %105
  br i1 %106, label %107, label %112

107:                                              ; preds = %99
  %108 = getelementptr inbounds %struct.Opening, %struct.Opening* %102, i64 %101, i32 1
  store i32 0, i32* %108, align 4
  %109 = load i16, i16* %22, align 4
  %110 = zext i16 %109 to i64
  %111 = icmp sgt i64 %101, %110
  br i1 %111, label %99, label %112

112:                                              ; preds = %107, %99, %94
  %113 = load i16, i16* %20, align 2
  %114 = zext i16 %113 to i32
  %115 = icmp slt i32 %39, %114
  br i1 %115, label %116, label %137

116:                                              ; preds = %112
  %117 = shl i64 %30, 32
  %118 = ashr exact i64 %117, 32
  br label %119

119:                                              ; preds = %132, %116
  %120 = phi i16 [ %113, %116 ], [ %133, %132 ]
  %121 = phi i64 [ %118, %116 ], [ %134, %132 ]
  %122 = load %struct.Opening*, %struct.Opening** %25, align 8
  %123 = getelementptr inbounds %struct.Opening, %struct.Opening* %122, i64 %121, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp slt i32 %124, %1
  br i1 %125, label %126, label %137

126:                                              ; preds = %119
  %127 = getelementptr inbounds %struct.Opening, %struct.Opening* %122, i64 %121, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp sgt i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %126
  store i32 0, i32* %127, align 4
  %131 = load i16, i16* %20, align 2
  br label %132

132:                                              ; preds = %130, %126
  %133 = phi i16 [ %120, %126 ], [ %131, %130 ]
  %134 = add nsw i64 %121, 1
  %135 = zext i16 %133 to i64
  %136 = icmp slt i64 %134, %135
  br i1 %136, label %119, label %137

137:                                              ; preds = %82, %84, %119, %132, %78, %112
  %138 = icmp eq i8 %68, 10
  br i1 %138, label %424, label %139

139:                                              ; preds = %137
  %140 = zext i8 %68 to i32
  %141 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 5
  store i8 10, i8* %141, align 2
  %142 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 6
  store i32 %140, i32* %142, align 4
  %143 = getelementptr inbounds %struct.IsoRun, %struct.IsoRun* %6, i64 0, i32 0
  store i32 %1, i32* %143, align 4
  %144 = load %struct.UBiDi*, %struct.UBiDi** %7, align 8
  %145 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %144, i64 0, i32 20
  %146 = load i8*, i8** %145, align 8
  %147 = getelementptr inbounds i8, i8* %146, i64 %11
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %198

150:                                              ; preds = %139
  %151 = and i8 %148, 1
  %152 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 4
  store i8 %151, i8* %152, align 1
  %153 = zext i8 %151 to i64
  %154 = shl i64 1, %153
  %155 = trunc i64 %154 to i16
  %156 = load i16, i16* %22, align 4
  %157 = zext i16 %156 to i32
  %158 = icmp sgt i32 %40, %157
  br i1 %158, label %159, label %188

159:                                              ; preds = %150
  %160 = zext i16 %156 to i64
  %161 = and i64 %31, 4294967295
  %162 = sub i64 %31, %160
  %163 = and i64 %162, 1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %171, label %165

165:                                              ; preds = %159
  %166 = load %struct.Opening*, %struct.Opening** %25, align 8
  %167 = getelementptr inbounds %struct.Opening, %struct.Opening* %166, i64 %160, i32 3
  %168 = load i16, i16* %167, align 4
  %169 = or i16 %168, %155
  store i16 %169, i16* %167, align 4
  %170 = add nuw nsw i64 %160, 1
  br label %171

171:                                              ; preds = %159, %165
  %172 = phi i64 [ %160, %159 ], [ %170, %165 ]
  %173 = add nuw nsw i64 %160, 1
  %174 = icmp eq i64 %161, %173
  br i1 %174, label %188, label %175

175:                                              ; preds = %171, %175
  %176 = phi i64 [ %186, %175 ], [ %172, %171 ]
  %177 = load %struct.Opening*, %struct.Opening** %25, align 8
  %178 = getelementptr inbounds %struct.Opening, %struct.Opening* %177, i64 %176, i32 3
  %179 = load i16, i16* %178, align 4
  %180 = or i16 %179, %155
  store i16 %180, i16* %178, align 4
  %181 = add nuw nsw i64 %176, 1
  %182 = load %struct.Opening*, %struct.Opening** %25, align 8
  %183 = getelementptr inbounds %struct.Opening, %struct.Opening* %182, i64 %181, i32 3
  %184 = load i16, i16* %183, align 4
  %185 = or i16 %184, %155
  store i16 %185, i16* %183, align 4
  %186 = add nuw nsw i64 %176, 2
  %187 = icmp eq i64 %186, %161
  br i1 %187, label %188, label %175

188:                                              ; preds = %171, %175, %150
  %189 = load %struct.UBiDi*, %struct.UBiDi** %7, align 8
  %190 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %189, i64 0, i32 20
  %191 = load i8*, i8** %190, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 %11
  %193 = load i8, i8* %192, align 1
  %194 = and i8 %193, 127
  store i8 %194, i8* %192, align 1
  %195 = load %struct.UBiDi*, %struct.UBiDi** %7, align 8
  %196 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %195, i64 0, i32 20
  %197 = load i8*, i8** %196, align 8
  br label %198

198:                                              ; preds = %188, %139
  %199 = phi i8* [ %197, %188 ], [ %146, %139 ]
  %200 = load %struct.Opening*, %struct.Opening** %25, align 8
  %201 = getelementptr inbounds %struct.Opening, %struct.Opening* %200, i64 %31, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, i8* %199, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = and i8 %205, 127
  store i8 %206, i8* %204, align 1
  br label %512

207:                                              ; preds = %29
  %208 = icmp eq i16 %19, 0
  br i1 %208, label %424, label %209

209:                                              ; preds = %207
  %210 = tail call i32 @u_getBidiPairedBracket_69(i32 %26) #11
  %211 = trunc i32 %210 to i16
  %212 = icmp eq i16 %19, %211
  br i1 %212, label %424, label %213

213:                                              ; preds = %209
  %214 = zext i16 %19 to i32
  %215 = tail call i32 @ubidi_getPairedBracketType_69(i32 %214) #11
  %216 = icmp eq i32 %215, 1
  br i1 %216, label %217, label %424

217:                                              ; preds = %213
  switch i16 %211, label %355 [
    i16 9002, label %218
    i16 12297, label %284
  ]

218:                                              ; preds = %217
  %219 = load i32, i32* %3, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %220, i32 2
  %222 = load i16, i16* %221, align 2
  %223 = zext i16 %222 to i32
  %224 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 3
  %225 = load i32, i32* %224, align 8
  %226 = icmp sgt i32 %225, %223
  br i1 %226, label %227, label %229

227:                                              ; preds = %218
  %228 = load %struct.Opening*, %struct.Opening** %25, align 8
  br label %271

229:                                              ; preds = %218
  %230 = load %struct.UBiDi*, %struct.UBiDi** %7, align 8
  %231 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %230, i64 0, i32 13
  %232 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %230, i64 0, i32 7
  %233 = mul nuw nsw i32 %223, 48
  %234 = bitcast %struct.Opening** %231 to i8**
  %235 = load i8*, i8** %234, align 8
  %236 = icmp eq i8* %235, null
  br i1 %236, label %237, label %241

237:                                              ; preds = %229
  %238 = zext i32 %233 to i64
  %239 = tail call noalias i8* @uprv_malloc_69(i64 %238) #10
  store i8* %239, i8** %234, align 8
  %240 = icmp eq i8* %239, null
  br i1 %240, label %512, label %249

241:                                              ; preds = %229
  %242 = load i32, i32* %232, align 4
  %243 = icmp slt i32 %242, %233
  br i1 %243, label %244, label %251

244:                                              ; preds = %241
  %245 = zext i32 %233 to i64
  %246 = tail call i8* @uprv_realloc_69(i8* nonnull %235, i64 %245) #12
  %247 = icmp eq i8* %246, null
  br i1 %247, label %512, label %248

248:                                              ; preds = %244
  store i8* %246, i8** %234, align 8
  br label %249

249:                                              ; preds = %237, %248
  %250 = phi i8* [ %246, %248 ], [ %239, %237 ]
  store i32 %233, i32* %232, align 4
  br label %251

251:                                              ; preds = %249, %241
  %252 = phi i8* [ %235, %241 ], [ %250, %249 ]
  %253 = load %struct.Opening*, %struct.Opening** %25, align 8
  %254 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 1, i64 0
  %255 = icmp eq %struct.Opening* %253, %254
  br i1 %255, label %258, label %256

256:                                              ; preds = %251
  %257 = ptrtoint i8* %252 to i64
  br label %262

258:                                              ; preds = %251
  %259 = bitcast %struct.Opening* %254 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %252, i8* align 8 %259, i64 480, i1 false) #11
  %260 = bitcast %struct.Opening** %231 to i64*
  %261 = load i64, i64* %260, align 8
  br label %262

262:                                              ; preds = %256, %258
  %263 = phi i64 [ %261, %258 ], [ %257, %256 ]
  %264 = bitcast %struct.Opening** %25 to i64*
  store i64 %263, i64* %264, align 8
  %265 = load i32, i32* %232, align 4
  %266 = sext i32 %265 to i64
  %267 = udiv i64 %266, 24
  %268 = trunc i64 %267 to i32
  store i32 %268, i32* %224, align 8
  %269 = inttoptr i64 %263 to %struct.Opening*
  %270 = load i16, i16* %221, align 2
  br label %271

271:                                              ; preds = %227, %262
  %272 = phi i16 [ %222, %227 ], [ %270, %262 ]
  %273 = phi %struct.Opening* [ %228, %227 ], [ %269, %262 ]
  %274 = zext i16 %272 to i64
  %275 = getelementptr inbounds %struct.Opening, %struct.Opening* %273, i64 %274, i32 0
  store i32 %1, i32* %275, align 4
  %276 = getelementptr inbounds %struct.Opening, %struct.Opening* %273, i64 %274, i32 1
  store i32 12297, i32* %276, align 4
  %277 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %220, i32 6
  %278 = load i32, i32* %277, align 4
  %279 = getelementptr inbounds %struct.Opening, %struct.Opening* %273, i64 %274, i32 4
  store i32 %278, i32* %279, align 4
  %280 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %220, i32 0
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds %struct.Opening, %struct.Opening* %273, i64 %274, i32 2
  store i32 %281, i32* %282, align 4
  %283 = getelementptr inbounds %struct.Opening, %struct.Opening* %273, i64 %274, i32 3
  br label %350

284:                                              ; preds = %217
  %285 = load i32, i32* %3, align 4
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %286, i32 2
  %288 = load i16, i16* %287, align 2
  %289 = zext i16 %288 to i32
  %290 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 3
  %291 = load i32, i32* %290, align 8
  %292 = icmp sgt i32 %291, %289
  br i1 %292, label %293, label %295

293:                                              ; preds = %284
  %294 = load %struct.Opening*, %struct.Opening** %25, align 8
  br label %337

295:                                              ; preds = %284
  %296 = load %struct.UBiDi*, %struct.UBiDi** %7, align 8
  %297 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %296, i64 0, i32 13
  %298 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %296, i64 0, i32 7
  %299 = mul nuw nsw i32 %289, 48
  %300 = bitcast %struct.Opening** %297 to i8**
  %301 = load i8*, i8** %300, align 8
  %302 = icmp eq i8* %301, null
  br i1 %302, label %303, label %307

303:                                              ; preds = %295
  %304 = zext i32 %299 to i64
  %305 = tail call noalias i8* @uprv_malloc_69(i64 %304) #10
  store i8* %305, i8** %300, align 8
  %306 = icmp eq i8* %305, null
  br i1 %306, label %512, label %315

307:                                              ; preds = %295
  %308 = load i32, i32* %298, align 4
  %309 = icmp slt i32 %308, %299
  br i1 %309, label %310, label %317

310:                                              ; preds = %307
  %311 = zext i32 %299 to i64
  %312 = tail call i8* @uprv_realloc_69(i8* nonnull %301, i64 %311) #12
  %313 = icmp eq i8* %312, null
  br i1 %313, label %512, label %314

314:                                              ; preds = %310
  store i8* %312, i8** %300, align 8
  br label %315

315:                                              ; preds = %303, %314
  %316 = phi i8* [ %312, %314 ], [ %305, %303 ]
  store i32 %299, i32* %298, align 4
  br label %317

317:                                              ; preds = %315, %307
  %318 = phi i8* [ %301, %307 ], [ %316, %315 ]
  %319 = load %struct.Opening*, %struct.Opening** %25, align 8
  %320 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 1, i64 0
  %321 = icmp eq %struct.Opening* %319, %320
  br i1 %321, label %324, label %322

322:                                              ; preds = %317
  %323 = ptrtoint i8* %318 to i64
  br label %328

324:                                              ; preds = %317
  %325 = bitcast %struct.Opening* %319 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %318, i8* align 8 %325, i64 480, i1 false) #11
  %326 = bitcast %struct.Opening** %297 to i64*
  %327 = load i64, i64* %326, align 8
  br label %328

328:                                              ; preds = %322, %324
  %329 = phi i64 [ %327, %324 ], [ %323, %322 ]
  %330 = bitcast %struct.Opening** %25 to i64*
  store i64 %329, i64* %330, align 8
  %331 = load i32, i32* %298, align 4
  %332 = sext i32 %331 to i64
  %333 = udiv i64 %332, 24
  %334 = trunc i64 %333 to i32
  store i32 %334, i32* %290, align 8
  %335 = inttoptr i64 %329 to %struct.Opening*
  %336 = load i16, i16* %287, align 2
  br label %337

337:                                              ; preds = %293, %328
  %338 = phi i16 [ %288, %293 ], [ %336, %328 ]
  %339 = phi %struct.Opening* [ %294, %293 ], [ %335, %328 ]
  %340 = zext i16 %338 to i64
  %341 = getelementptr inbounds %struct.Opening, %struct.Opening* %339, i64 %340, i32 0
  store i32 %1, i32* %341, align 4
  %342 = getelementptr inbounds %struct.Opening, %struct.Opening* %339, i64 %340, i32 1
  store i32 9002, i32* %342, align 4
  %343 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %286, i32 6
  %344 = load i32, i32* %343, align 4
  %345 = getelementptr inbounds %struct.Opening, %struct.Opening* %339, i64 %340, i32 4
  store i32 %344, i32* %345, align 4
  %346 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %286, i32 0
  %347 = load i32, i32* %346, align 4
  %348 = getelementptr inbounds %struct.Opening, %struct.Opening* %339, i64 %340, i32 2
  store i32 %347, i32* %348, align 4
  %349 = getelementptr inbounds %struct.Opening, %struct.Opening* %339, i64 %340, i32 3
  br label %350

350:                                              ; preds = %271, %337
  %351 = phi i16* [ %349, %337 ], [ %283, %271 ]
  %352 = phi i16* [ %287, %337 ], [ %221, %271 ]
  store i16 0, i16* %351, align 4
  %353 = load i16, i16* %352, align 2
  %354 = add i16 %353, 1
  store i16 %354, i16* %352, align 2
  br label %355

355:                                              ; preds = %350, %217
  %356 = load i32, i32* %3, align 4
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %357, i32 2
  %359 = load i16, i16* %358, align 2
  %360 = zext i16 %359 to i32
  %361 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 3
  %362 = load i32, i32* %361, align 8
  %363 = icmp sgt i32 %362, %360
  br i1 %363, label %364, label %366

364:                                              ; preds = %355
  %365 = load %struct.Opening*, %struct.Opening** %25, align 8
  br label %408

366:                                              ; preds = %355
  %367 = load %struct.UBiDi*, %struct.UBiDi** %7, align 8
  %368 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %367, i64 0, i32 13
  %369 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %367, i64 0, i32 7
  %370 = mul nuw nsw i32 %360, 48
  %371 = bitcast %struct.Opening** %368 to i8**
  %372 = load i8*, i8** %371, align 8
  %373 = icmp eq i8* %372, null
  br i1 %373, label %374, label %378

374:                                              ; preds = %366
  %375 = zext i32 %370 to i64
  %376 = tail call noalias i8* @uprv_malloc_69(i64 %375) #10
  store i8* %376, i8** %371, align 8
  %377 = icmp eq i8* %376, null
  br i1 %377, label %512, label %386

378:                                              ; preds = %366
  %379 = load i32, i32* %369, align 4
  %380 = icmp slt i32 %379, %370
  br i1 %380, label %381, label %388

381:                                              ; preds = %378
  %382 = zext i32 %370 to i64
  %383 = tail call i8* @uprv_realloc_69(i8* nonnull %372, i64 %382) #12
  %384 = icmp eq i8* %383, null
  br i1 %384, label %512, label %385

385:                                              ; preds = %381
  store i8* %383, i8** %371, align 8
  br label %386

386:                                              ; preds = %374, %385
  %387 = phi i8* [ %383, %385 ], [ %376, %374 ]
  store i32 %370, i32* %369, align 4
  br label %388

388:                                              ; preds = %386, %378
  %389 = phi i8* [ %372, %378 ], [ %387, %386 ]
  %390 = load %struct.Opening*, %struct.Opening** %25, align 8
  %391 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 1, i64 0
  %392 = icmp eq %struct.Opening* %390, %391
  br i1 %392, label %395, label %393

393:                                              ; preds = %388
  %394 = ptrtoint i8* %389 to i64
  br label %399

395:                                              ; preds = %388
  %396 = bitcast %struct.Opening* %391 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %389, i8* align 8 %396, i64 480, i1 false) #11
  %397 = bitcast %struct.Opening** %368 to i64*
  %398 = load i64, i64* %397, align 8
  br label %399

399:                                              ; preds = %393, %395
  %400 = phi i64 [ %398, %395 ], [ %394, %393 ]
  %401 = bitcast %struct.Opening** %25 to i64*
  store i64 %400, i64* %401, align 8
  %402 = load i32, i32* %369, align 4
  %403 = sext i32 %402 to i64
  %404 = udiv i64 %403, 24
  %405 = trunc i64 %404 to i32
  store i32 %405, i32* %361, align 8
  %406 = inttoptr i64 %400 to %struct.Opening*
  %407 = load i16, i16* %358, align 2
  br label %408

408:                                              ; preds = %364, %399
  %409 = phi i16 [ %359, %364 ], [ %407, %399 ]
  %410 = phi %struct.Opening* [ %365, %364 ], [ %406, %399 ]
  %411 = zext i16 %409 to i64
  %412 = getelementptr inbounds %struct.Opening, %struct.Opening* %410, i64 %411, i32 0
  store i32 %1, i32* %412, align 4
  %413 = and i32 %210, 65535
  %414 = getelementptr inbounds %struct.Opening, %struct.Opening* %410, i64 %411, i32 1
  store i32 %413, i32* %414, align 4
  %415 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %357, i32 6
  %416 = load i32, i32* %415, align 4
  %417 = getelementptr inbounds %struct.Opening, %struct.Opening* %410, i64 %411, i32 4
  store i32 %416, i32* %417, align 4
  %418 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %357, i32 0
  %419 = load i32, i32* %418, align 4
  %420 = getelementptr inbounds %struct.Opening, %struct.Opening* %410, i64 %411, i32 2
  store i32 %419, i32* %420, align 4
  %421 = getelementptr inbounds %struct.Opening, %struct.Opening* %410, i64 %411, i32 3
  store i16 0, i16* %421, align 4
  %422 = load i16, i16* %358, align 2
  %423 = add i16 %422, 1
  store i16 %423, i16* %358, align 2
  br label %424

424:                                              ; preds = %207, %137, %64, %213, %209, %408, %2
  %425 = load %struct.UBiDi*, %struct.UBiDi** %7, align 8
  %426 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %425, i64 0, i32 20
  %427 = load i8*, i8** %426, align 8
  %428 = getelementptr inbounds i8, i8* %427, i64 %11
  %429 = load i8, i8* %428, align 1
  %430 = icmp slt i8 %429, 0
  br i1 %430, label %431, label %442

431:                                              ; preds = %424
  %432 = and i8 %429, 1
  %433 = add i8 %13, -8
  %434 = icmp ult i8 %433, 3
  br i1 %434, label %436, label %435

435:                                              ; preds = %431
  store i8 %432, i8* %12, align 1
  br label %436

436:                                              ; preds = %431, %435
  %437 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 5
  store i8 %432, i8* %437, align 2
  %438 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 4
  store i8 %432, i8* %438, align 1
  %439 = zext i8 %432 to i32
  %440 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 6
  store i32 %439, i32* %440, align 4
  %441 = getelementptr inbounds %struct.IsoRun, %struct.IsoRun* %6, i64 0, i32 0
  store i32 %1, i32* %441, align 4
  br label %479

442:                                              ; preds = %424
  switch i8 %13, label %477 [
    i8 13, label %443
    i8 1, label %443
    i8 0, label %443
    i8 2, label %451
    i8 5, label %468
    i8 17, label %472
  ]

443:                                              ; preds = %442, %442, %442
  %444 = icmp ne i8 %13, 0
  %445 = zext i1 %444 to i8
  %446 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 5
  store i8 %13, i8* %446, align 2
  %447 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 4
  store i8 %13, i8* %447, align 1
  %448 = zext i1 %444 to i32
  %449 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 6
  store i32 %448, i32* %449, align 4
  %450 = getelementptr inbounds %struct.IsoRun, %struct.IsoRun* %6, i64 0, i32 0
  store i32 %1, i32* %450, align 4
  br label %479

451:                                              ; preds = %442
  %452 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 5
  store i8 2, i8* %452, align 2
  %453 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 4
  %454 = load i8, i8* %453, align 1
  switch i8 %454, label %463 [
    i8 0, label %455
    i8 13, label %464
  ]

455:                                              ; preds = %451
  %456 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 6
  %457 = load i8, i8* %456, align 8
  %458 = icmp eq i8 %457, 0
  br i1 %458, label %459, label %460

459:                                              ; preds = %455
  store i8 23, i8* %12, align 1
  br label %460

460:                                              ; preds = %455, %459
  %461 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 6
  store i32 0, i32* %461, align 4
  %462 = getelementptr inbounds %struct.IsoRun, %struct.IsoRun* %6, i64 0, i32 0
  store i32 %1, i32* %462, align 4
  br label %481

463:                                              ; preds = %451
  br label %464

464:                                              ; preds = %451, %463
  %465 = phi i8 [ 24, %463 ], [ 5, %451 ]
  store i8 %465, i8* %12, align 1
  %466 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 6
  store i32 1, i32* %466, align 4
  %467 = getelementptr inbounds %struct.IsoRun, %struct.IsoRun* %6, i64 0, i32 0
  store i32 %1, i32* %467, align 4
  br label %481

468:                                              ; preds = %442
  %469 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 5
  store i8 5, i8* %469, align 2
  %470 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 6
  store i32 1, i32* %470, align 4
  %471 = getelementptr inbounds %struct.IsoRun, %struct.IsoRun* %6, i64 0, i32 0
  store i32 %1, i32* %471, align 4
  br label %481

472:                                              ; preds = %442
  %473 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 5
  %474 = load i8, i8* %473, align 2
  %475 = icmp eq i8 %474, 10
  br i1 %475, label %476, label %479

476:                                              ; preds = %472
  store i8 10, i8* %12, align 1
  br label %512

477:                                              ; preds = %442
  %478 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 5
  store i8 %13, i8* %478, align 2
  br label %479

479:                                              ; preds = %443, %472, %477, %436
  %480 = phi i8 [ %432, %436 ], [ %445, %443 ], [ %474, %472 ], [ %13, %477 ]
  switch i8 %480, label %512 [
    i8 13, label %481
    i8 1, label %481
    i8 0, label %481
  ]

481:                                              ; preds = %468, %464, %460, %479, %479, %479
  %482 = phi i8 [ %480, %479 ], [ %480, %479 ], [ %480, %479 ], [ 1, %468 ], [ 1, %464 ], [ 0, %460 ]
  %483 = icmp ne i8 %482, 0
  %484 = zext i1 %483 to i64
  %485 = shl i64 1, %484
  %486 = trunc i64 %485 to i16
  %487 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 1
  %488 = load i16, i16* %487, align 4
  %489 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %5, i32 2
  %490 = load i16, i16* %489, align 2
  %491 = icmp ult i16 %488, %490
  br i1 %491, label %492, label %512

492:                                              ; preds = %481
  %493 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 2
  %494 = zext i16 %488 to i64
  br label %495

495:                                              ; preds = %492, %507
  %496 = phi i16 [ %490, %492 ], [ %508, %507 ]
  %497 = phi i64 [ %494, %492 ], [ %509, %507 ]
  %498 = load %struct.Opening*, %struct.Opening** %493, align 8
  %499 = getelementptr inbounds %struct.Opening, %struct.Opening* %498, i64 %497, i32 0
  %500 = load i32, i32* %499, align 4
  %501 = icmp slt i32 %500, %1
  br i1 %501, label %502, label %507

502:                                              ; preds = %495
  %503 = getelementptr inbounds %struct.Opening, %struct.Opening* %498, i64 %497, i32 3
  %504 = load i16, i16* %503, align 4
  %505 = or i16 %504, %486
  store i16 %505, i16* %503, align 4
  %506 = load i16, i16* %489, align 2
  br label %507

507:                                              ; preds = %495, %502
  %508 = phi i16 [ %496, %495 ], [ %506, %502 ]
  %509 = add nuw nsw i64 %497, 1
  %510 = zext i16 %508 to i64
  %511 = icmp ult i64 %509, %510
  br i1 %511, label %495, label %512

512:                                              ; preds = %507, %481, %381, %374, %310, %303, %244, %237, %476, %198, %479
  %513 = phi i8 [ 1, %479 ], [ 1, %198 ], [ 1, %476 ], [ 0, %237 ], [ 0, %244 ], [ 0, %303 ], [ 0, %310 ], [ 0, %374 ], [ 0, %381 ], [ 1, %481 ], [ 1, %507 ]
  ret i8 %513
}

declare i32 @u_getBidiPairedBracket_69(i32) local_unnamed_addr #4

declare i32 @ubidi_getPairedBracketType_69(i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc void @_ZL6fixN0cP11BracketDataiih(%struct.BracketData* readonly, i32, i32, i8 zeroext) unnamed_addr #9 {
  %5 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 0
  %9 = load %struct.UBiDi*, %struct.UBiDi** %8, align 8
  %10 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %9, i64 0, i32 19
  %11 = load i8*, i8** %10, align 8
  %12 = add nsw i32 %1, 1
  %13 = zext i8 %3 to i32
  %14 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 5, i64 %7, i32 2
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = icmp slt i32 %12, %16
  br i1 %17, label %18, label %56

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.BracketData, %struct.BracketData* %0, i64 0, i32 2
  %20 = load %struct.Opening*, %struct.Opening** %19, align 8
  %21 = sext i32 %12 to i64
  %22 = getelementptr inbounds %struct.Opening, %struct.Opening* %20, i64 %21
  br label %23

23:                                               ; preds = %18, %50
  %24 = phi i16 [ %51, %50 ], [ %15, %18 ]
  %25 = phi i32 [ %52, %50 ], [ %12, %18 ]
  %26 = phi %struct.Opening* [ %53, %50 ], [ %22, %18 ]
  %27 = getelementptr inbounds %struct.Opening, %struct.Opening* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %50, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %struct.Opening, %struct.Opening* %26, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, %2
  br i1 %33, label %56, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.Opening, %struct.Opening* %26, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, %2
  br i1 %37, label %38, label %50

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.Opening, %struct.Opening* %26, i64 0, i32 4
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, %13
  br i1 %41, label %56, label %42

42:                                               ; preds = %38
  %43 = sext i32 %36 to i64
  %44 = getelementptr inbounds i8, i8* %11, i64 %43
  store i8 %3, i8* %44, align 1
  %45 = load i32, i32* %27, align 4
  %46 = sub nsw i32 0, %45
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %11, i64 %47
  store i8 %3, i8* %48, align 1
  store i32 0, i32* %27, align 4
  tail call fastcc void @_ZL6fixN0cP11BracketDataiih(%struct.BracketData* %0, i32 %25, i32 %36, i8 zeroext %3)
  tail call fastcc void @_ZL6fixN0cP11BracketDataiih(%struct.BracketData* %0, i32 %25, i32 %46, i8 zeroext %3)
  %49 = load i16, i16* %14, align 2
  br label %50

50:                                               ; preds = %34, %23, %42
  %51 = phi i16 [ %24, %34 ], [ %24, %23 ], [ %49, %42 ]
  %52 = add nsw i32 %25, 1
  %53 = getelementptr inbounds %struct.Opening, %struct.Opening* %26, i64 1
  %54 = zext i16 %51 to i32
  %55 = icmp slt i32 %52, %54
  br i1 %55, label %23, label %56

56:                                               ; preds = %50, %30, %38, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL18processPropertySeqP5UBiDiP8LevStatehii(%struct.UBiDi*, %struct.LevState*, i8 zeroext, i32, i32) unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 0
  %7 = load [0 x [8 x i8]]*, [0 x [8 x i8]]** %6, align 8
  %8 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 1
  %9 = load [0 x i8]*, [0 x i8]** %8, align 8
  %10 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 20
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 5
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 255
  %15 = zext i32 %14 to i64
  %16 = zext i8 %2 to i64
  %17 = getelementptr inbounds [0 x [8 x i8]], [0 x [8 x i8]]* %7, i64 0, i64 %15, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = and i32 %19, 15
  store i32 %20, i32* %12, align 4
  %21 = lshr i32 %19, 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [0 x i8], [0 x i8]* %9, i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i32 %20 to i64
  %26 = getelementptr inbounds [0 x [8 x i8]], [0 x [8 x i8]]* %7, i64 0, i64 %25, i64 7
  %27 = load i8, i8* %26, align 1
  switch i8 %24, label %915 [
    i8 0, label %916
    i8 1, label %30
    i8 2, label %32
    i8 3, label %35
    i8 4, label %66
    i8 5, label %97
    i8 6, label %362
    i8 7, label %375
    i8 8, label %499
    i8 9, label %28
    i8 10, label %567
    i8 11, label %662
    i8 12, label %717
    i8 13, label %838
    i8 14, label %892
  ]

28:                                               ; preds = %5
  %29 = sext i32 %3 to i64
  br label %503

30:                                               ; preds = %5
  %31 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 2
  store i32 %3, i32* %31, align 8
  br label %916

32:                                               ; preds = %5
  %33 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  br label %916

35:                                               ; preds = %5
  %36 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 7
  %37 = load i8, i8* %36, align 4
  %38 = add i8 %37, 1
  %39 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 19
  %42 = load i8*, i8** %41, align 8
  %43 = load i8*, i8** %10, align 8
  %44 = icmp slt i32 %40, %3
  br i1 %44, label %45, label %916

45:                                               ; preds = %35
  %46 = sext i32 %40 to i64
  %47 = sext i32 %3 to i64
  br label %48

48:                                               ; preds = %59, %45
  %49 = phi i64 [ %46, %45 ], [ %64, %59 ]
  %50 = phi i32 [ 0, %45 ], [ %63, %59 ]
  %51 = getelementptr inbounds i8, i8* %42, i64 %49
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 22
  %54 = zext i1 %53 to i32
  %55 = sub i32 %50, %54
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %48
  %58 = getelementptr inbounds i8, i8* %43, i64 %49
  store i8 %38, i8* %58, align 1
  br label %59

59:                                               ; preds = %57, %48
  %60 = and i8 %52, -2
  %61 = icmp eq i8 %60, 20
  %62 = zext i1 %61 to i32
  %63 = add nsw i32 %55, %62
  %64 = add nsw i64 %49, 1
  %65 = icmp eq i64 %64, %47
  br i1 %65, label %916, label %48

66:                                               ; preds = %5
  %67 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 7
  %68 = load i8, i8* %67, align 4
  %69 = add i8 %68, 2
  %70 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 2
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 19
  %73 = load i8*, i8** %72, align 8
  %74 = load i8*, i8** %10, align 8
  %75 = icmp slt i32 %71, %3
  br i1 %75, label %76, label %916

76:                                               ; preds = %66
  %77 = sext i32 %71 to i64
  %78 = sext i32 %3 to i64
  br label %79

79:                                               ; preds = %90, %76
  %80 = phi i64 [ %77, %76 ], [ %95, %90 ]
  %81 = phi i32 [ 0, %76 ], [ %94, %90 ]
  %82 = getelementptr inbounds i8, i8* %73, i64 %80
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 22
  %85 = zext i1 %84 to i32
  %86 = sub i32 %81, %85
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %79
  %89 = getelementptr inbounds i8, i8* %74, i64 %80
  store i8 %69, i8* %89, align 1
  br label %90

90:                                               ; preds = %88, %79
  %91 = and i8 %83, -2
  %92 = icmp eq i8 %91, 20
  %93 = zext i1 %92 to i32
  %94 = add nsw i32 %86, %93
  %95 = add nsw i64 %80, 1
  %96 = icmp eq i64 %95, %78
  br i1 %96, label %916, label %79

97:                                               ; preds = %5
  %98 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 3
  %99 = load i32, i32* %98, align 4
  %100 = icmp sgt i32 %99, -1
  br i1 %100, label %101, label %149

101:                                              ; preds = %97
  %102 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 0
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %109, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %107 = load %struct.Point*, %struct.Point** %106, align 8
  %108 = bitcast %struct.Point* %107 to i8*
  br label %118

109:                                              ; preds = %101
  %110 = tail call noalias i8* @uprv_malloc_69(i64 80) #10
  %111 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %112 = bitcast %struct.Point** %111 to i8**
  store i8* %110, i8** %112, align 8
  %113 = icmp eq i8* %110, null
  br i1 %113, label %114, label %116

114:                                              ; preds = %109
  %115 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %115, align 4
  br label %149

116:                                              ; preds = %109
  %117 = bitcast i8* %110 to %struct.Point*
  store i32 10, i32* %102, align 8
  br label %118

118:                                              ; preds = %105, %116
  %119 = phi i8* [ %110, %116 ], [ %108, %105 ]
  %120 = phi %struct.Point* [ %117, %116 ], [ %107, %105 ]
  %121 = phi i32 [ 10, %116 ], [ %103, %105 ]
  %122 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = icmp slt i32 %123, %121
  %125 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  br i1 %124, label %141, label %126

126:                                              ; preds = %118
  %127 = shl nsw i32 %121, 1
  %128 = sext i32 %127 to i64
  %129 = shl nsw i64 %128, 3
  %130 = tail call i8* @uprv_realloc_69(i8* %119, i64 %129) #12
  %131 = bitcast %struct.Point** %125 to i8**
  store i8* %130, i8** %131, align 8
  %132 = icmp eq i8* %130, null
  br i1 %132, label %133, label %136

133:                                              ; preds = %126
  %134 = bitcast %struct.Point** %125 to i8**
  store i8* %119, i8** %134, align 8
  %135 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %135, align 4
  br label %149

136:                                              ; preds = %126
  %137 = bitcast i8* %130 to %struct.Point*
  %138 = load i32, i32* %102, align 8
  %139 = shl nsw i32 %138, 1
  store i32 %139, i32* %102, align 8
  %140 = load i32, i32* %122, align 4
  br label %141

141:                                              ; preds = %136, %118
  %142 = phi i32 [ %140, %136 ], [ %123, %118 ]
  %143 = phi %struct.Point* [ %137, %136 ], [ %120, %118 ]
  %144 = sext i32 %142 to i64
  %145 = getelementptr inbounds %struct.Point, %struct.Point* %143, i64 %144, i32 0
  store i32 %99, i32* %145, align 4
  %146 = getelementptr inbounds %struct.Point, %struct.Point* %143, i64 %144, i32 1
  store i32 1, i32* %146, align 4
  %147 = load i32, i32* %122, align 4
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %122, align 4
  br label %149

149:                                              ; preds = %141, %133, %114, %97
  store i32 -1, i32* %98, align 4
  %150 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %159, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 2
  %157 = load i32, i32* %156, align 8
  %158 = icmp sgt i32 %155, %157
  br i1 %158, label %224, label %159

159:                                              ; preds = %153, %149
  %160 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 4
  store i32 -1, i32* %160, align 8
  %161 = getelementptr inbounds [0 x [8 x i8]], [0 x [8 x i8]]* %7, i64 0, i64 %15, i64 7
  %162 = load i8, i8* %161, align 1
  %163 = and i8 %162, 1
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %170, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 2
  %167 = load i32, i32* %166, align 8
  %168 = icmp sgt i32 %167, 0
  %169 = select i1 %168, i32 %167, i32 %3
  br label %170

170:                                              ; preds = %165, %159
  %171 = phi i32 [ %3, %159 ], [ %169, %165 ]
  %172 = icmp eq i8 %2, 5
  br i1 %172, label %173, label %916

173:                                              ; preds = %170
  %174 = load i32, i32* %150, align 8
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %180, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %178 = load %struct.Point*, %struct.Point** %177, align 8
  %179 = bitcast %struct.Point* %178 to i8*
  br label %189

180:                                              ; preds = %173
  %181 = tail call noalias i8* @uprv_malloc_69(i64 80) #10
  %182 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %183 = bitcast %struct.Point** %182 to i8**
  store i8* %181, i8** %183, align 8
  %184 = icmp eq i8* %181, null
  br i1 %184, label %185, label %187

185:                                              ; preds = %180
  %186 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %186, align 4
  br label %220

187:                                              ; preds = %180
  %188 = bitcast i8* %181 to %struct.Point*
  store i32 10, i32* %150, align 8
  br label %189

189:                                              ; preds = %176, %187
  %190 = phi i8* [ %181, %187 ], [ %179, %176 ]
  %191 = phi %struct.Point* [ %188, %187 ], [ %178, %176 ]
  %192 = phi i32 [ 10, %187 ], [ %174, %176 ]
  %193 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = icmp slt i32 %194, %192
  %196 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  br i1 %195, label %212, label %197

197:                                              ; preds = %189
  %198 = shl nsw i32 %192, 1
  %199 = sext i32 %198 to i64
  %200 = shl nsw i64 %199, 3
  %201 = tail call i8* @uprv_realloc_69(i8* %190, i64 %200) #12
  %202 = bitcast %struct.Point** %196 to i8**
  store i8* %201, i8** %202, align 8
  %203 = icmp eq i8* %201, null
  br i1 %203, label %204, label %207

204:                                              ; preds = %197
  %205 = bitcast %struct.Point** %196 to i8**
  store i8* %190, i8** %205, align 8
  %206 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %206, align 4
  br label %220

207:                                              ; preds = %197
  %208 = bitcast i8* %201 to %struct.Point*
  %209 = load i32, i32* %150, align 8
  %210 = shl nsw i32 %209, 1
  store i32 %210, i32* %150, align 8
  %211 = load i32, i32* %193, align 4
  br label %212

212:                                              ; preds = %207, %189
  %213 = phi i32 [ %211, %207 ], [ %194, %189 ]
  %214 = phi %struct.Point* [ %208, %207 ], [ %191, %189 ]
  %215 = sext i32 %213 to i64
  %216 = getelementptr inbounds %struct.Point, %struct.Point* %214, i64 %215, i32 0
  store i32 %3, i32* %216, align 4
  %217 = getelementptr inbounds %struct.Point, %struct.Point* %214, i64 %215, i32 1
  store i32 1, i32* %217, align 4
  %218 = load i32, i32* %193, align 4
  %219 = add nsw i32 %218, 1
  store i32 %219, i32* %193, align 4
  br label %220

220:                                              ; preds = %185, %204, %212
  %221 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %222 = load i32, i32* %221, align 4
  %223 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 2
  store i32 %222, i32* %223, align 8
  br label %916

224:                                              ; preds = %153
  %225 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 4
  %226 = load i32, i32* %225, align 8
  %227 = add i32 %226, 1
  %228 = icmp slt i32 %227, %3
  br i1 %228, label %229, label %311

229:                                              ; preds = %224
  %230 = sext i32 %227 to i64
  %231 = add i32 %3, -2
  %232 = sub i32 %231, %226
  %233 = zext i32 %232 to i64
  %234 = add nuw nsw i64 %233, 1
  %235 = icmp ult i64 %234, 32
  br i1 %235, label %298, label %236

236:                                              ; preds = %229
  %237 = and i64 %234, 8589934560
  %238 = add nsw i64 %237, %230
  %239 = add nsw i64 %237, -32
  %240 = lshr exact i64 %239, 5
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 1
  %243 = icmp eq i64 %239, 0
  br i1 %243, label %279, label %244

244:                                              ; preds = %236
  %245 = sub nuw nsw i64 %241, %242
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ 0, %244 ], [ %276, %246 ]
  %248 = phi i64 [ %245, %244 ], [ %277, %246 ]
  %249 = add i64 %247, %230
  %250 = getelementptr inbounds i8, i8* %11, i64 %249
  %251 = bitcast i8* %250 to <16 x i8>*
  %252 = load <16 x i8>, <16 x i8>* %251, align 1
  %253 = getelementptr inbounds i8, i8* %250, i64 16
  %254 = bitcast i8* %253 to <16 x i8>*
  %255 = load <16 x i8>, <16 x i8>* %254, align 1
  %256 = add <16 x i8> %252, <i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2>
  %257 = add <16 x i8> %255, <i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2>
  %258 = and <16 x i8> %256, <i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2>
  %259 = and <16 x i8> %257, <i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2>
  %260 = bitcast i8* %250 to <16 x i8>*
  store <16 x i8> %258, <16 x i8>* %260, align 1
  %261 = bitcast i8* %253 to <16 x i8>*
  store <16 x i8> %259, <16 x i8>* %261, align 1
  %262 = or i64 %247, 32
  %263 = add i64 %262, %230
  %264 = getelementptr inbounds i8, i8* %11, i64 %263
  %265 = bitcast i8* %264 to <16 x i8>*
  %266 = load <16 x i8>, <16 x i8>* %265, align 1
  %267 = getelementptr inbounds i8, i8* %264, i64 16
  %268 = bitcast i8* %267 to <16 x i8>*
  %269 = load <16 x i8>, <16 x i8>* %268, align 1
  %270 = add <16 x i8> %266, <i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2>
  %271 = add <16 x i8> %269, <i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2>
  %272 = and <16 x i8> %270, <i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2>
  %273 = and <16 x i8> %271, <i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2>
  %274 = bitcast i8* %264 to <16 x i8>*
  store <16 x i8> %272, <16 x i8>* %274, align 1
  %275 = bitcast i8* %267 to <16 x i8>*
  store <16 x i8> %273, <16 x i8>* %275, align 1
  %276 = add i64 %247, 64
  %277 = add i64 %248, -2
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %279, label %246, !llvm.loop !8

279:                                              ; preds = %246, %236
  %280 = phi i64 [ 0, %236 ], [ %276, %246 ]
  %281 = icmp eq i64 %242, 0
  br i1 %281, label %296, label %282

282:                                              ; preds = %279
  %283 = add i64 %280, %230
  %284 = getelementptr inbounds i8, i8* %11, i64 %283
  %285 = bitcast i8* %284 to <16 x i8>*
  %286 = load <16 x i8>, <16 x i8>* %285, align 1
  %287 = getelementptr inbounds i8, i8* %284, i64 16
  %288 = bitcast i8* %287 to <16 x i8>*
  %289 = load <16 x i8>, <16 x i8>* %288, align 1
  %290 = add <16 x i8> %286, <i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2>
  %291 = add <16 x i8> %289, <i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2>
  %292 = and <16 x i8> %290, <i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2>
  %293 = and <16 x i8> %291, <i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2, i8 -2>
  %294 = bitcast i8* %284 to <16 x i8>*
  store <16 x i8> %292, <16 x i8>* %294, align 1
  %295 = bitcast i8* %287 to <16 x i8>*
  store <16 x i8> %293, <16 x i8>* %295, align 1
  br label %296

296:                                              ; preds = %279, %282
  %297 = icmp eq i64 %234, %237
  br i1 %297, label %309, label %298

298:                                              ; preds = %296, %229
  %299 = phi i64 [ %230, %229 ], [ %238, %296 ]
  br label %300

300:                                              ; preds = %298, %300
  %301 = phi i64 [ %306, %300 ], [ %299, %298 ]
  %302 = getelementptr inbounds i8, i8* %11, i64 %301
  %303 = load i8, i8* %302, align 1
  %304 = add i8 %303, -2
  %305 = and i8 %304, -2
  store i8 %305, i8* %302, align 1
  %306 = add nsw i64 %301, 1
  %307 = trunc i64 %306 to i32
  %308 = icmp eq i32 %307, %3
  br i1 %308, label %309, label %300, !llvm.loop !9

309:                                              ; preds = %300, %296
  %310 = load i32, i32* %154, align 4
  br label %311

311:                                              ; preds = %309, %224
  %312 = phi i32 [ %310, %309 ], [ %155, %224 ]
  store i32 %312, i32* %156, align 8
  store i32 -1, i32* %225, align 8
  %313 = icmp eq i8 %2, 5
  br i1 %313, label %314, label %916

314:                                              ; preds = %311
  %315 = load i32, i32* %150, align 8
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %321, label %317

317:                                              ; preds = %314
  %318 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %319 = load %struct.Point*, %struct.Point** %318, align 8
  %320 = bitcast %struct.Point* %319 to i8*
  br label %330

321:                                              ; preds = %314
  %322 = tail call noalias i8* @uprv_malloc_69(i64 80) #10
  %323 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %324 = bitcast %struct.Point** %323 to i8**
  store i8* %322, i8** %324, align 8
  %325 = icmp eq i8* %322, null
  br i1 %325, label %326, label %328

326:                                              ; preds = %321
  %327 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %327, align 4
  br label %360

328:                                              ; preds = %321
  %329 = bitcast i8* %322 to %struct.Point*
  store i32 10, i32* %150, align 8
  br label %330

330:                                              ; preds = %317, %328
  %331 = phi i8* [ %322, %328 ], [ %320, %317 ]
  %332 = phi %struct.Point* [ %329, %328 ], [ %319, %317 ]
  %333 = phi i32 [ 10, %328 ], [ %315, %317 ]
  %334 = load i32, i32* %154, align 4
  %335 = icmp slt i32 %334, %333
  %336 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  br i1 %335, label %352, label %337

337:                                              ; preds = %330
  %338 = shl nsw i32 %333, 1
  %339 = sext i32 %338 to i64
  %340 = shl nsw i64 %339, 3
  %341 = tail call i8* @uprv_realloc_69(i8* %331, i64 %340) #12
  %342 = bitcast %struct.Point** %336 to i8**
  store i8* %341, i8** %342, align 8
  %343 = icmp eq i8* %341, null
  br i1 %343, label %344, label %347

344:                                              ; preds = %337
  %345 = bitcast %struct.Point** %336 to i8**
  store i8* %331, i8** %345, align 8
  %346 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %346, align 4
  br label %360

347:                                              ; preds = %337
  %348 = bitcast i8* %341 to %struct.Point*
  %349 = load i32, i32* %150, align 8
  %350 = shl nsw i32 %349, 1
  store i32 %350, i32* %150, align 8
  %351 = load i32, i32* %154, align 4
  br label %352

352:                                              ; preds = %347, %330
  %353 = phi i32 [ %351, %347 ], [ %334, %330 ]
  %354 = phi %struct.Point* [ %348, %347 ], [ %332, %330 ]
  %355 = sext i32 %353 to i64
  %356 = getelementptr inbounds %struct.Point, %struct.Point* %354, i64 %355, i32 0
  store i32 %3, i32* %356, align 4
  %357 = getelementptr inbounds %struct.Point, %struct.Point* %354, i64 %355, i32 1
  store i32 1, i32* %357, align 4
  %358 = load i32, i32* %154, align 4
  %359 = add nsw i32 %358, 1
  store i32 %359, i32* %154, align 4
  br label %360

360:                                              ; preds = %326, %344, %352
  %361 = load i32, i32* %154, align 4
  store i32 %361, i32* %156, align 8
  br label %916

362:                                              ; preds = %5
  %363 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 0
  %364 = load i32, i32* %363, align 8
  %365 = icmp sgt i32 %364, 0
  br i1 %365, label %366, label %370

366:                                              ; preds = %362
  %367 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 2
  %368 = load i32, i32* %367, align 8
  %369 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  store i32 %368, i32* %369, align 4
  br label %370

370:                                              ; preds = %366, %362
  %371 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 2
  store i32 -1, i32* %371, align 8
  %372 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 3
  store i32 -1, i32* %372, align 4
  %373 = add nsw i32 %4, -1
  %374 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 4
  store i32 %373, i32* %374, align 8
  br label %916

375:                                              ; preds = %5
  %376 = icmp eq i8 %2, 3
  br i1 %376, label %377, label %494

377:                                              ; preds = %375
  %378 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 19
  %379 = load i8*, i8** %378, align 8
  %380 = sext i32 %3 to i64
  %381 = getelementptr inbounds i8, i8* %379, i64 %380
  %382 = load i8, i8* %381, align 1
  %383 = icmp eq i8 %382, 5
  br i1 %383, label %384, label %494

384:                                              ; preds = %377
  %385 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 22
  %386 = load i32, i32* %385, align 4
  %387 = icmp eq i32 %386, 6
  br i1 %387, label %494, label %388

388:                                              ; preds = %384
  %389 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 3
  %390 = load i32, i32* %389, align 4
  %391 = icmp eq i32 %390, -1
  br i1 %391, label %392, label %395

392:                                              ; preds = %388
  %393 = add nsw i32 %4, -1
  %394 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 4
  store i32 %393, i32* %394, align 8
  br label %916

395:                                              ; preds = %388
  %396 = icmp sgt i32 %390, -1
  br i1 %396, label %397, label %446

397:                                              ; preds = %395
  %398 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 0
  %399 = load i32, i32* %398, align 8
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %405, label %401

401:                                              ; preds = %397
  %402 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %403 = load %struct.Point*, %struct.Point** %402, align 8
  %404 = bitcast %struct.Point* %403 to i8*
  br label %414

405:                                              ; preds = %397
  %406 = tail call noalias i8* @uprv_malloc_69(i64 80) #10
  %407 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %408 = bitcast %struct.Point** %407 to i8**
  store i8* %406, i8** %408, align 8
  %409 = icmp eq i8* %406, null
  br i1 %409, label %410, label %412

410:                                              ; preds = %405
  %411 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %411, align 4
  br label %445

412:                                              ; preds = %405
  %413 = bitcast i8* %406 to %struct.Point*
  store i32 10, i32* %398, align 8
  br label %414

414:                                              ; preds = %401, %412
  %415 = phi i8* [ %406, %412 ], [ %404, %401 ]
  %416 = phi %struct.Point* [ %413, %412 ], [ %403, %401 ]
  %417 = phi i32 [ 10, %412 ], [ %399, %401 ]
  %418 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %419 = load i32, i32* %418, align 4
  %420 = icmp slt i32 %419, %417
  %421 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  br i1 %420, label %437, label %422

422:                                              ; preds = %414
  %423 = shl nsw i32 %417, 1
  %424 = sext i32 %423 to i64
  %425 = shl nsw i64 %424, 3
  %426 = tail call i8* @uprv_realloc_69(i8* %415, i64 %425) #12
  %427 = bitcast %struct.Point** %421 to i8**
  store i8* %426, i8** %427, align 8
  %428 = icmp eq i8* %426, null
  br i1 %428, label %429, label %432

429:                                              ; preds = %422
  %430 = bitcast %struct.Point** %421 to i8**
  store i8* %415, i8** %430, align 8
  %431 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %431, align 4
  br label %445

432:                                              ; preds = %422
  %433 = bitcast i8* %426 to %struct.Point*
  %434 = load i32, i32* %398, align 8
  %435 = shl nsw i32 %434, 1
  store i32 %435, i32* %398, align 8
  %436 = load i32, i32* %418, align 4
  br label %437

437:                                              ; preds = %432, %414
  %438 = phi i32 [ %436, %432 ], [ %419, %414 ]
  %439 = phi %struct.Point* [ %433, %432 ], [ %416, %414 ]
  %440 = sext i32 %438 to i64
  %441 = getelementptr inbounds %struct.Point, %struct.Point* %439, i64 %440, i32 0
  store i32 %390, i32* %441, align 4
  %442 = getelementptr inbounds %struct.Point, %struct.Point* %439, i64 %440, i32 1
  store i32 1, i32* %442, align 4
  %443 = load i32, i32* %418, align 4
  %444 = add nsw i32 %443, 1
  store i32 %444, i32* %418, align 4
  br label %445

445:                                              ; preds = %410, %429, %437
  store i32 -2, i32* %389, align 4
  br label %446

446:                                              ; preds = %445, %395
  %447 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 0
  %448 = load i32, i32* %447, align 8
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %454, label %450

450:                                              ; preds = %446
  %451 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %452 = load %struct.Point*, %struct.Point** %451, align 8
  %453 = bitcast %struct.Point* %452 to i8*
  br label %463

454:                                              ; preds = %446
  %455 = tail call noalias i8* @uprv_malloc_69(i64 80) #10
  %456 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %457 = bitcast %struct.Point** %456 to i8**
  store i8* %455, i8** %457, align 8
  %458 = icmp eq i8* %455, null
  br i1 %458, label %459, label %461

459:                                              ; preds = %454
  %460 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %460, align 4
  br label %916

461:                                              ; preds = %454
  %462 = bitcast i8* %455 to %struct.Point*
  store i32 10, i32* %447, align 8
  br label %463

463:                                              ; preds = %450, %461
  %464 = phi i8* [ %455, %461 ], [ %453, %450 ]
  %465 = phi %struct.Point* [ %462, %461 ], [ %452, %450 ]
  %466 = phi i32 [ 10, %461 ], [ %448, %450 ]
  %467 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %468 = load i32, i32* %467, align 4
  %469 = icmp slt i32 %468, %466
  %470 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  br i1 %469, label %486, label %471

471:                                              ; preds = %463
  %472 = shl nsw i32 %466, 1
  %473 = sext i32 %472 to i64
  %474 = shl nsw i64 %473, 3
  %475 = tail call i8* @uprv_realloc_69(i8* %464, i64 %474) #12
  %476 = bitcast %struct.Point** %470 to i8**
  store i8* %475, i8** %476, align 8
  %477 = icmp eq i8* %475, null
  br i1 %477, label %478, label %481

478:                                              ; preds = %471
  %479 = bitcast %struct.Point** %470 to i8**
  store i8* %464, i8** %479, align 8
  %480 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %480, align 4
  br label %916

481:                                              ; preds = %471
  %482 = bitcast i8* %475 to %struct.Point*
  %483 = load i32, i32* %447, align 8
  %484 = shl nsw i32 %483, 1
  store i32 %484, i32* %447, align 8
  %485 = load i32, i32* %467, align 4
  br label %486

486:                                              ; preds = %481, %463
  %487 = phi i32 [ %485, %481 ], [ %468, %463 ]
  %488 = phi %struct.Point* [ %482, %481 ], [ %465, %463 ]
  %489 = sext i32 %487 to i64
  %490 = getelementptr inbounds %struct.Point, %struct.Point* %488, i64 %489, i32 0
  store i32 %3, i32* %490, align 4
  %491 = getelementptr inbounds %struct.Point, %struct.Point* %488, i64 %489, i32 1
  store i32 1, i32* %491, align 4
  %492 = load i32, i32* %467, align 4
  %493 = add nsw i32 %492, 1
  store i32 %493, i32* %467, align 4
  br label %916

494:                                              ; preds = %384, %377, %375
  %495 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 3
  %496 = load i32, i32* %495, align 4
  %497 = icmp eq i32 %496, -1
  br i1 %497, label %498, label %916

498:                                              ; preds = %494
  store i32 %3, i32* %495, align 4
  br label %916

499:                                              ; preds = %5
  %500 = add nsw i32 %4, -1
  %501 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 4
  store i32 %500, i32* %501, align 8
  %502 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 2
  store i32 -1, i32* %502, align 8
  br label %916

503:                                              ; preds = %28, %507
  %504 = phi i64 [ %29, %28 ], [ %505, %507 ]
  %505 = add nsw i64 %504, -1
  %506 = icmp sgt i64 %504, 0
  br i1 %506, label %507, label %565

507:                                              ; preds = %503
  %508 = getelementptr inbounds i8, i8* %11, i64 %505
  %509 = load i8, i8* %508, align 1
  %510 = and i8 %509, 1
  %511 = icmp eq i8 %510, 0
  br i1 %511, label %503, label %512

512:                                              ; preds = %507
  %513 = trunc i64 %505 to i32
  %514 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 0
  %515 = load i32, i32* %514, align 8
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %521, label %517

517:                                              ; preds = %512
  %518 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %519 = load %struct.Point*, %struct.Point** %518, align 8
  %520 = bitcast %struct.Point* %519 to i8*
  br label %530

521:                                              ; preds = %512
  %522 = tail call noalias i8* @uprv_malloc_69(i64 80) #10
  %523 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %524 = bitcast %struct.Point** %523 to i8**
  store i8* %522, i8** %524, align 8
  %525 = icmp eq i8* %522, null
  br i1 %525, label %526, label %528

526:                                              ; preds = %521
  %527 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %527, align 4
  br label %561

528:                                              ; preds = %521
  %529 = bitcast i8* %522 to %struct.Point*
  store i32 10, i32* %514, align 8
  br label %530

530:                                              ; preds = %517, %528
  %531 = phi i8* [ %522, %528 ], [ %520, %517 ]
  %532 = phi %struct.Point* [ %529, %528 ], [ %519, %517 ]
  %533 = phi i32 [ 10, %528 ], [ %515, %517 ]
  %534 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %535 = load i32, i32* %534, align 4
  %536 = icmp slt i32 %535, %533
  %537 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  br i1 %536, label %553, label %538

538:                                              ; preds = %530
  %539 = shl nsw i32 %533, 1
  %540 = sext i32 %539 to i64
  %541 = shl nsw i64 %540, 3
  %542 = tail call i8* @uprv_realloc_69(i8* %531, i64 %541) #12
  %543 = bitcast %struct.Point** %537 to i8**
  store i8* %542, i8** %543, align 8
  %544 = icmp eq i8* %542, null
  br i1 %544, label %545, label %548

545:                                              ; preds = %538
  %546 = bitcast %struct.Point** %537 to i8**
  store i8* %531, i8** %546, align 8
  %547 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %547, align 4
  br label %561

548:                                              ; preds = %538
  %549 = bitcast i8* %542 to %struct.Point*
  %550 = load i32, i32* %514, align 8
  %551 = shl nsw i32 %550, 1
  store i32 %551, i32* %514, align 8
  %552 = load i32, i32* %534, align 4
  br label %553

553:                                              ; preds = %548, %530
  %554 = phi i32 [ %552, %548 ], [ %535, %530 ]
  %555 = phi %struct.Point* [ %549, %548 ], [ %532, %530 ]
  %556 = sext i32 %554 to i64
  %557 = getelementptr inbounds %struct.Point, %struct.Point* %555, i64 %556, i32 0
  store i32 %513, i32* %557, align 4
  %558 = getelementptr inbounds %struct.Point, %struct.Point* %555, i64 %556, i32 1
  store i32 4, i32* %558, align 4
  %559 = load i32, i32* %534, align 4
  %560 = add nsw i32 %559, 1
  store i32 %560, i32* %534, align 4
  br label %561

561:                                              ; preds = %526, %545, %553
  %562 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %563 = load i32, i32* %562, align 4
  %564 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 2
  store i32 %563, i32* %564, align 8
  br label %565

565:                                              ; preds = %503, %561
  %566 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 2
  store i32 %3, i32* %566, align 8
  br label %916

567:                                              ; preds = %5
  %568 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 0
  %569 = load i32, i32* %568, align 8
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %575, label %571

571:                                              ; preds = %567
  %572 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %573 = load %struct.Point*, %struct.Point** %572, align 8
  %574 = bitcast %struct.Point* %573 to i8*
  br label %584

575:                                              ; preds = %567
  %576 = tail call noalias i8* @uprv_malloc_69(i64 80) #10
  %577 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %578 = bitcast %struct.Point** %577 to i8**
  store i8* %576, i8** %578, align 8
  %579 = icmp eq i8* %576, null
  br i1 %579, label %580, label %582

580:                                              ; preds = %575
  %581 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %581, align 4
  br label %615

582:                                              ; preds = %575
  %583 = bitcast i8* %576 to %struct.Point*
  store i32 10, i32* %568, align 8
  br label %584

584:                                              ; preds = %571, %582
  %585 = phi i8* [ %576, %582 ], [ %574, %571 ]
  %586 = phi %struct.Point* [ %583, %582 ], [ %573, %571 ]
  %587 = phi i32 [ 10, %582 ], [ %569, %571 ]
  %588 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %589 = load i32, i32* %588, align 4
  %590 = icmp slt i32 %589, %587
  %591 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  br i1 %590, label %607, label %592

592:                                              ; preds = %584
  %593 = shl nsw i32 %587, 1
  %594 = sext i32 %593 to i64
  %595 = shl nsw i64 %594, 3
  %596 = tail call i8* @uprv_realloc_69(i8* %585, i64 %595) #12
  %597 = bitcast %struct.Point** %591 to i8**
  store i8* %596, i8** %597, align 8
  %598 = icmp eq i8* %596, null
  br i1 %598, label %599, label %602

599:                                              ; preds = %592
  %600 = bitcast %struct.Point** %591 to i8**
  store i8* %585, i8** %600, align 8
  %601 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %601, align 4
  br label %615

602:                                              ; preds = %592
  %603 = bitcast i8* %596 to %struct.Point*
  %604 = load i32, i32* %568, align 8
  %605 = shl nsw i32 %604, 1
  store i32 %605, i32* %568, align 8
  %606 = load i32, i32* %588, align 4
  br label %607

607:                                              ; preds = %602, %584
  %608 = phi i32 [ %606, %602 ], [ %589, %584 ]
  %609 = phi %struct.Point* [ %603, %602 ], [ %586, %584 ]
  %610 = sext i32 %608 to i64
  %611 = getelementptr inbounds %struct.Point, %struct.Point* %609, i64 %610, i32 0
  store i32 %3, i32* %611, align 4
  %612 = getelementptr inbounds %struct.Point, %struct.Point* %609, i64 %610, i32 1
  store i32 1, i32* %612, align 4
  %613 = load i32, i32* %588, align 4
  %614 = add nsw i32 %613, 1
  store i32 %614, i32* %588, align 4
  br label %615

615:                                              ; preds = %580, %599, %607
  %616 = load i32, i32* %568, align 8
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %622, label %618

618:                                              ; preds = %615
  %619 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %620 = load %struct.Point*, %struct.Point** %619, align 8
  %621 = bitcast %struct.Point* %620 to i8*
  br label %631

622:                                              ; preds = %615
  %623 = tail call noalias i8* @uprv_malloc_69(i64 80) #10
  %624 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %625 = bitcast %struct.Point** %624 to i8**
  store i8* %623, i8** %625, align 8
  %626 = icmp eq i8* %623, null
  br i1 %626, label %627, label %629

627:                                              ; preds = %622
  %628 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %628, align 4
  br label %916

629:                                              ; preds = %622
  %630 = bitcast i8* %623 to %struct.Point*
  store i32 10, i32* %568, align 8
  br label %631

631:                                              ; preds = %618, %629
  %632 = phi i8* [ %623, %629 ], [ %621, %618 ]
  %633 = phi %struct.Point* [ %630, %629 ], [ %620, %618 ]
  %634 = phi i32 [ 10, %629 ], [ %616, %618 ]
  %635 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %636 = load i32, i32* %635, align 4
  %637 = icmp slt i32 %636, %634
  %638 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  br i1 %637, label %654, label %639

639:                                              ; preds = %631
  %640 = shl nsw i32 %634, 1
  %641 = sext i32 %640 to i64
  %642 = shl nsw i64 %641, 3
  %643 = tail call i8* @uprv_realloc_69(i8* %632, i64 %642) #12
  %644 = bitcast %struct.Point** %638 to i8**
  store i8* %643, i8** %644, align 8
  %645 = icmp eq i8* %643, null
  br i1 %645, label %646, label %649

646:                                              ; preds = %639
  %647 = bitcast %struct.Point** %638 to i8**
  store i8* %632, i8** %647, align 8
  %648 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %648, align 4
  br label %916

649:                                              ; preds = %639
  %650 = bitcast i8* %643 to %struct.Point*
  %651 = load i32, i32* %568, align 8
  %652 = shl nsw i32 %651, 1
  store i32 %652, i32* %568, align 8
  %653 = load i32, i32* %635, align 4
  br label %654

654:                                              ; preds = %649, %631
  %655 = phi i32 [ %653, %649 ], [ %636, %631 ]
  %656 = phi %struct.Point* [ %650, %649 ], [ %633, %631 ]
  %657 = sext i32 %655 to i64
  %658 = getelementptr inbounds %struct.Point, %struct.Point* %656, i64 %657, i32 0
  store i32 %3, i32* %658, align 4
  %659 = getelementptr inbounds %struct.Point, %struct.Point* %656, i64 %657, i32 1
  store i32 2, i32* %659, align 4
  %660 = load i32, i32* %635, align 4
  %661 = add nsw i32 %660, 1
  store i32 %661, i32* %635, align 4
  br label %916

662:                                              ; preds = %5
  %663 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 2
  %664 = load i32, i32* %663, align 8
  %665 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  store i32 %664, i32* %665, align 4
  %666 = icmp eq i8 %2, 5
  br i1 %666, label %667, label %916

667:                                              ; preds = %662
  %668 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 0
  %669 = load i32, i32* %668, align 8
  %670 = icmp eq i32 %669, 0
  br i1 %670, label %675, label %671

671:                                              ; preds = %667
  %672 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %673 = load %struct.Point*, %struct.Point** %672, align 8
  %674 = bitcast %struct.Point* %673 to i8*
  br label %685

675:                                              ; preds = %667
  %676 = tail call noalias i8* @uprv_malloc_69(i64 80) #10
  %677 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  %678 = bitcast %struct.Point** %677 to i8**
  store i8* %676, i8** %678, align 8
  %679 = icmp eq i8* %676, null
  br i1 %679, label %680, label %682

680:                                              ; preds = %675
  %681 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %681, align 4
  br label %715

682:                                              ; preds = %675
  %683 = bitcast i8* %676 to %struct.Point*
  store i32 10, i32* %668, align 8
  %684 = load i32, i32* %665, align 4
  br label %685

685:                                              ; preds = %671, %682
  %686 = phi i8* [ %676, %682 ], [ %674, %671 ]
  %687 = phi %struct.Point* [ %683, %682 ], [ %673, %671 ]
  %688 = phi i32 [ %684, %682 ], [ %664, %671 ]
  %689 = phi i32 [ 10, %682 ], [ %669, %671 ]
  %690 = icmp slt i32 %688, %689
  %691 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 4
  br i1 %690, label %707, label %692

692:                                              ; preds = %685
  %693 = shl nsw i32 %689, 1
  %694 = sext i32 %693 to i64
  %695 = shl nsw i64 %694, 3
  %696 = tail call i8* @uprv_realloc_69(i8* %686, i64 %695) #12
  %697 = bitcast %struct.Point** %691 to i8**
  store i8* %696, i8** %697, align 8
  %698 = icmp eq i8* %696, null
  br i1 %698, label %699, label %702

699:                                              ; preds = %692
  %700 = bitcast %struct.Point** %691 to i8**
  store i8* %686, i8** %700, align 8
  %701 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 3
  store i32 7, i32* %701, align 4
  br label %715

702:                                              ; preds = %692
  %703 = bitcast i8* %696 to %struct.Point*
  %704 = load i32, i32* %668, align 8
  %705 = shl nsw i32 %704, 1
  store i32 %705, i32* %668, align 8
  %706 = load i32, i32* %665, align 4
  br label %707

707:                                              ; preds = %702, %685
  %708 = phi i32 [ %706, %702 ], [ %688, %685 ]
  %709 = phi %struct.Point* [ %703, %702 ], [ %687, %685 ]
  %710 = sext i32 %708 to i64
  %711 = getelementptr inbounds %struct.Point, %struct.Point* %709, i64 %710, i32 0
  store i32 %3, i32* %711, align 4
  %712 = getelementptr inbounds %struct.Point, %struct.Point* %709, i64 %710, i32 1
  store i32 4, i32* %712, align 4
  %713 = load i32, i32* %665, align 4
  %714 = add nsw i32 %713, 1
  store i32 %714, i32* %665, align 4
  br label %715

715:                                              ; preds = %680, %699, %707
  %716 = load i32, i32* %665, align 4
  store i32 %716, i32* %663, align 8
  br label %916

717:                                              ; preds = %5
  %718 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 7
  %719 = load i8, i8* %718, align 4
  %720 = add i8 %719, %27
  %721 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 2
  %722 = load i32, i32* %721, align 8
  %723 = icmp slt i32 %722, %3
  br i1 %723, label %724, label %834

724:                                              ; preds = %717
  %725 = sext i32 %722 to i64
  %726 = sext i32 %3 to i64
  %727 = sub nsw i64 %726, %725
  %728 = icmp ult i64 %727, 16
  br i1 %728, label %823, label %729

729:                                              ; preds = %724
  %730 = and i64 %727, -16
  %731 = add nsw i64 %730, %725
  %732 = insertelement <16 x i8> undef, i8 %720, i32 0
  %733 = shufflevector <16 x i8> %732, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %734

734:                                              ; preds = %818, %729
  %735 = phi i64 [ 0, %729 ], [ %819, %818 ]
  %736 = add i64 %735, %725
  %737 = getelementptr inbounds i8, i8* %11, i64 %736
  %738 = bitcast i8* %737 to <16 x i8>*
  %739 = load <16 x i8>, <16 x i8>* %738, align 1
  %740 = icmp ult <16 x i8> %739, %733
  %741 = extractelement <16 x i1> %740, i32 0
  br i1 %741, label %742, label %743

742:                                              ; preds = %734
  store i8 %720, i8* %737, align 1
  br label %743

743:                                              ; preds = %742, %734
  %744 = extractelement <16 x i1> %740, i32 1
  br i1 %744, label %745, label %748

745:                                              ; preds = %743
  %746 = add i64 %736, 1
  %747 = getelementptr inbounds i8, i8* %11, i64 %746
  store i8 %720, i8* %747, align 1
  br label %748

748:                                              ; preds = %745, %743
  %749 = extractelement <16 x i1> %740, i32 2
  br i1 %749, label %750, label %753

750:                                              ; preds = %748
  %751 = add i64 %736, 2
  %752 = getelementptr inbounds i8, i8* %11, i64 %751
  store i8 %720, i8* %752, align 1
  br label %753

753:                                              ; preds = %750, %748
  %754 = extractelement <16 x i1> %740, i32 3
  br i1 %754, label %755, label %758

755:                                              ; preds = %753
  %756 = add i64 %736, 3
  %757 = getelementptr inbounds i8, i8* %11, i64 %756
  store i8 %720, i8* %757, align 1
  br label %758

758:                                              ; preds = %755, %753
  %759 = extractelement <16 x i1> %740, i32 4
  br i1 %759, label %760, label %763

760:                                              ; preds = %758
  %761 = add i64 %736, 4
  %762 = getelementptr inbounds i8, i8* %11, i64 %761
  store i8 %720, i8* %762, align 1
  br label %763

763:                                              ; preds = %760, %758
  %764 = extractelement <16 x i1> %740, i32 5
  br i1 %764, label %765, label %768

765:                                              ; preds = %763
  %766 = add i64 %736, 5
  %767 = getelementptr inbounds i8, i8* %11, i64 %766
  store i8 %720, i8* %767, align 1
  br label %768

768:                                              ; preds = %765, %763
  %769 = extractelement <16 x i1> %740, i32 6
  br i1 %769, label %770, label %773

770:                                              ; preds = %768
  %771 = add i64 %736, 6
  %772 = getelementptr inbounds i8, i8* %11, i64 %771
  store i8 %720, i8* %772, align 1
  br label %773

773:                                              ; preds = %770, %768
  %774 = extractelement <16 x i1> %740, i32 7
  br i1 %774, label %775, label %778

775:                                              ; preds = %773
  %776 = add i64 %736, 7
  %777 = getelementptr inbounds i8, i8* %11, i64 %776
  store i8 %720, i8* %777, align 1
  br label %778

778:                                              ; preds = %775, %773
  %779 = extractelement <16 x i1> %740, i32 8
  br i1 %779, label %780, label %783

780:                                              ; preds = %778
  %781 = add i64 %736, 8
  %782 = getelementptr inbounds i8, i8* %11, i64 %781
  store i8 %720, i8* %782, align 1
  br label %783

783:                                              ; preds = %780, %778
  %784 = extractelement <16 x i1> %740, i32 9
  br i1 %784, label %785, label %788

785:                                              ; preds = %783
  %786 = add i64 %736, 9
  %787 = getelementptr inbounds i8, i8* %11, i64 %786
  store i8 %720, i8* %787, align 1
  br label %788

788:                                              ; preds = %785, %783
  %789 = extractelement <16 x i1> %740, i32 10
  br i1 %789, label %790, label %793

790:                                              ; preds = %788
  %791 = add i64 %736, 10
  %792 = getelementptr inbounds i8, i8* %11, i64 %791
  store i8 %720, i8* %792, align 1
  br label %793

793:                                              ; preds = %790, %788
  %794 = extractelement <16 x i1> %740, i32 11
  br i1 %794, label %795, label %798

795:                                              ; preds = %793
  %796 = add i64 %736, 11
  %797 = getelementptr inbounds i8, i8* %11, i64 %796
  store i8 %720, i8* %797, align 1
  br label %798

798:                                              ; preds = %795, %793
  %799 = extractelement <16 x i1> %740, i32 12
  br i1 %799, label %800, label %803

800:                                              ; preds = %798
  %801 = add i64 %736, 12
  %802 = getelementptr inbounds i8, i8* %11, i64 %801
  store i8 %720, i8* %802, align 1
  br label %803

803:                                              ; preds = %800, %798
  %804 = extractelement <16 x i1> %740, i32 13
  br i1 %804, label %805, label %808

805:                                              ; preds = %803
  %806 = add i64 %736, 13
  %807 = getelementptr inbounds i8, i8* %11, i64 %806
  store i8 %720, i8* %807, align 1
  br label %808

808:                                              ; preds = %805, %803
  %809 = extractelement <16 x i1> %740, i32 14
  br i1 %809, label %810, label %813

810:                                              ; preds = %808
  %811 = add i64 %736, 14
  %812 = getelementptr inbounds i8, i8* %11, i64 %811
  store i8 %720, i8* %812, align 1
  br label %813

813:                                              ; preds = %810, %808
  %814 = extractelement <16 x i1> %740, i32 15
  br i1 %814, label %815, label %818

815:                                              ; preds = %813
  %816 = add i64 %736, 15
  %817 = getelementptr inbounds i8, i8* %11, i64 %816
  store i8 %720, i8* %817, align 1
  br label %818

818:                                              ; preds = %815, %813
  %819 = add i64 %735, 16
  %820 = icmp eq i64 %819, %730
  br i1 %820, label %821, label %734, !llvm.loop !10

821:                                              ; preds = %818
  %822 = icmp eq i64 %727, %730
  br i1 %822, label %834, label %823

823:                                              ; preds = %821, %724
  %824 = phi i64 [ %725, %724 ], [ %731, %821 ]
  br label %825

825:                                              ; preds = %823, %831
  %826 = phi i64 [ %832, %831 ], [ %824, %823 ]
  %827 = getelementptr inbounds i8, i8* %11, i64 %826
  %828 = load i8, i8* %827, align 1
  %829 = icmp ult i8 %828, %720
  br i1 %829, label %830, label %831

830:                                              ; preds = %825
  store i8 %720, i8* %827, align 1
  br label %831

831:                                              ; preds = %825, %830
  %832 = add nsw i64 %826, 1
  %833 = icmp eq i64 %832, %726
  br i1 %833, label %834, label %825, !llvm.loop !11

834:                                              ; preds = %831, %821, %717
  %835 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 1
  %836 = load i32, i32* %835, align 4
  %837 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 45, i32 2
  store i32 %836, i32* %837, align 8
  store i32 %3, i32* %721, align 8
  br label %916

838:                                              ; preds = %5
  %839 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 7
  %840 = load i8, i8* %839, align 4
  %841 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 2
  %842 = load i32, i32* %841, align 8
  %843 = icmp slt i32 %842, %3
  br i1 %843, label %844, label %916

844:                                              ; preds = %838
  %845 = zext i8 %840 to i32
  %846 = add nuw nsw i32 %845, 3
  %847 = add nuw nsw i32 %845, 2
  br label %848

848:                                              ; preds = %844, %882
  %849 = phi i32 [ %3, %844 ], [ %885, %882 ]
  %850 = add nsw i32 %849, -1
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds i8, i8* %11, i64 %851
  %853 = load i8, i8* %852, align 1
  %854 = zext i8 %853 to i32
  %855 = icmp eq i32 %846, %854
  br i1 %855, label %859, label %882

856:                                              ; preds = %859
  %857 = shl i64 %863, 32
  %858 = ashr exact i64 %857, 32
  br label %869

859:                                              ; preds = %848, %859
  %860 = phi i64 [ %863, %859 ], [ %851, %848 ]
  %861 = phi i8 [ %866, %859 ], [ %853, %848 ]
  %862 = phi i8* [ %865, %859 ], [ %852, %848 ]
  %863 = add i64 %860, -1
  %864 = add i8 %861, -2
  store i8 %864, i8* %862, align 1
  %865 = getelementptr inbounds i8, i8* %11, i64 %863
  %866 = load i8, i8* %865, align 1
  %867 = zext i8 %866 to i32
  %868 = icmp eq i32 %846, %867
  br i1 %868, label %859, label %856

869:                                              ; preds = %869, %856
  %870 = phi i64 [ %874, %869 ], [ %858, %856 ]
  %871 = getelementptr inbounds i8, i8* %11, i64 %870
  %872 = load i8, i8* %871, align 1
  %873 = icmp eq i8 %872, %840
  %874 = add i64 %870, -1
  br i1 %873, label %869, label %875

875:                                              ; preds = %869
  %876 = trunc i64 %870 to i32
  %877 = shl i64 %870, 32
  %878 = ashr exact i64 %877, 32
  %879 = getelementptr inbounds i8, i8* %11, i64 %878
  %880 = load i8, i8* %879, align 1
  %881 = zext i8 %880 to i32
  br label %882

882:                                              ; preds = %875, %848
  %883 = phi i32 [ %881, %875 ], [ %854, %848 ]
  %884 = phi i64 [ %878, %875 ], [ %851, %848 ]
  %885 = phi i32 [ %876, %875 ], [ %850, %848 ]
  %886 = getelementptr inbounds i8, i8* %11, i64 %884
  %887 = icmp ne i32 %847, %883
  %888 = zext i1 %887 to i8
  %889 = add i8 %840, %888
  store i8 %889, i8* %886, align 1
  %890 = load i32, i32* %841, align 8
  %891 = icmp sgt i32 %885, %890
  br i1 %891, label %848, label %916

892:                                              ; preds = %5
  %893 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 7
  %894 = load i8, i8* %893, align 4
  %895 = add i8 %894, 1
  %896 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 2
  %897 = load i32, i32* %896, align 8
  %898 = icmp slt i32 %897, %3
  br i1 %898, label %899, label %916

899:                                              ; preds = %892
  %900 = sext i32 %3 to i64
  br label %901

901:                                              ; preds = %899, %911
  %902 = phi i32 [ %897, %899 ], [ %912, %911 ]
  %903 = phi i64 [ %900, %899 ], [ %904, %911 ]
  %904 = add nsw i64 %903, -1
  %905 = getelementptr inbounds i8, i8* %11, i64 %904
  %906 = load i8, i8* %905, align 1
  %907 = icmp ugt i8 %906, %895
  br i1 %907, label %908, label %911

908:                                              ; preds = %901
  %909 = add i8 %906, -2
  store i8 %909, i8* %905, align 1
  %910 = load i32, i32* %896, align 8
  br label %911

911:                                              ; preds = %901, %908
  %912 = phi i32 [ %902, %901 ], [ %910, %908 ]
  %913 = sext i32 %912 to i64
  %914 = icmp sgt i64 %904, %913
  br i1 %914, label %901, label %916

915:                                              ; preds = %5
  tail call void @abort() #13
  unreachable

916:                                              ; preds = %911, %882, %90, %59, %892, %838, %654, %646, %627, %486, %478, %459, %66, %35, %5, %30, %32, %370, %392, %499, %565, %834, %220, %170, %360, %311, %498, %494, %715, %662
  %917 = phi i32 [ %3, %834 ], [ %3, %715 ], [ %3, %662 ], [ %3, %565 ], [ %3, %499 ], [ %3, %392 ], [ %3, %498 ], [ %3, %494 ], [ %3, %370 ], [ %171, %220 ], [ %171, %170 ], [ %3, %360 ], [ %3, %311 ], [ %34, %32 ], [ %3, %30 ], [ %3, %5 ], [ %3, %35 ], [ %3, %66 ], [ %3, %459 ], [ %3, %478 ], [ %3, %486 ], [ %3, %627 ], [ %3, %646 ], [ %3, %654 ], [ %3, %838 ], [ %3, %892 ], [ %3, %59 ], [ %3, %90 ], [ %3, %882 ], [ %3, %911 ]
  %918 = icmp ne i8 %27, 0
  %919 = icmp slt i32 %917, %3
  %920 = or i1 %918, %919
  br i1 %920, label %921, label %963

921:                                              ; preds = %916
  %922 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 7
  %923 = load i8, i8* %922, align 4
  %924 = add i8 %923, %27
  %925 = getelementptr inbounds %struct.LevState, %struct.LevState* %1, i64 0, i32 6
  %926 = load i32, i32* %925, align 8
  %927 = icmp slt i32 %917, %926
  br i1 %927, label %937, label %928

928:                                              ; preds = %921
  %929 = icmp slt i32 %917, %4
  br i1 %929, label %930, label %963

930:                                              ; preds = %928
  %931 = sext i32 %917 to i64
  %932 = getelementptr i8, i8* %11, i64 %931
  %933 = xor i32 %917, -1
  %934 = add i32 %933, %4
  %935 = zext i32 %934 to i64
  %936 = add nuw nsw i64 %935, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %932, i8 %924, i64 %936, i1 false)
  br label %963

937:                                              ; preds = %921
  %938 = getelementptr inbounds %struct.UBiDi, %struct.UBiDi* %0, i64 0, i32 19
  %939 = load i8*, i8** %938, align 8
  %940 = load i8*, i8** %10, align 8
  %941 = icmp slt i32 %917, %4
  br i1 %941, label %942, label %963

942:                                              ; preds = %937
  %943 = sext i32 %917 to i64
  %944 = sext i32 %4 to i64
  br label %945

945:                                              ; preds = %956, %942
  %946 = phi i64 [ %943, %942 ], [ %961, %956 ]
  %947 = phi i32 [ 0, %942 ], [ %960, %956 ]
  %948 = getelementptr inbounds i8, i8* %939, i64 %946
  %949 = load i8, i8* %948, align 1
  %950 = icmp eq i8 %949, 22
  %951 = zext i1 %950 to i32
  %952 = sub i32 %947, %951
  %953 = icmp eq i32 %952, 0
  br i1 %953, label %954, label %956

954:                                              ; preds = %945
  %955 = getelementptr inbounds i8, i8* %940, i64 %946
  store i8 %924, i8* %955, align 1
  br label %956

956:                                              ; preds = %954, %945
  %957 = and i8 %949, -2
  %958 = icmp eq i8 %957, 20
  %959 = zext i1 %958 to i32
  %960 = add nsw i32 %952, %959
  %961 = add nsw i64 %946, 1
  %962 = icmp eq i64 %961, %944
  br i1 %962, label %963, label %945

963:                                              ; preds = %956, %930, %928, %937, %916
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind allocsize(0) }
attributes #11 = { nounwind }
attributes #12 = { nounwind allocsize(1) }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.isvectorized", i32 1}
!6 = distinct !{!6, !7, !5}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
!8 = distinct !{!8, !5}
!9 = distinct !{!9, !7, !5}
!10 = distinct !{!10, !5}
!11 = distinct !{!11, !7, !5}
