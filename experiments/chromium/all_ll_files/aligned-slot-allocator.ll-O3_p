; ModuleID = '../../v8/src/codegen/aligned-slot-allocator.cc'
source_filename = "../../v8/src/codegen/aligned-slot-allocator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.v8::internal::AlignedSlotAllocator" = type { i32, i32, i32, i32 }

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal20AlignedSlotAllocator8NextSlotEi(%"class.v8::internal::AlignedSlotAllocator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 2
  br i1 %3, label %4, label %8

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, -1
  br i1 %7, label %17, label %10

8:                                                ; preds = %2
  %9 = icmp eq i32 %1, 2
  br i1 %9, label %10, label %14

10:                                               ; preds = %4, %8
  %11 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %17, label %14

14:                                               ; preds = %10, %8
  %15 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  br label %17

17:                                               ; preds = %10, %4, %14
  %18 = phi i32 [ %16, %14 ], [ %6, %4 ], [ %12, %10 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal20AlignedSlotAllocator8AllocateEi(%"class.v8::internal::AlignedSlotAllocator"* nocapture, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %34 [
    i32 1, label %3
    i32 2, label %20
    i32 4, label %30
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  store i32 -1, i32* %4, align 4
  br label %35

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, -1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = add nuw nsw i32 %10, 1
  store i32 %13, i32* %4, align 4
  store i32 -1, i32* %9, align 4
  br label %35

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %4, align 4
  %18 = add nsw i32 %16, 2
  store i32 %18, i32* %9, align 4
  %19 = add nsw i32 %16, 4
  store i32 %19, i32* %15, align 4
  br label %35

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, -1
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  store i32 -1, i32* %21, align 4
  br label %35

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 2
  store i32 %28, i32* %21, align 4
  %29 = add nsw i32 %27, 4
  store i32 %29, i32* %26, align 4
  br label %35

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %32, 4
  store i32 %33, i32* %31, align 4
  br label %35

34:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #4
  unreachable

35:                                               ; preds = %24, %25, %7, %14, %12, %30
  %36 = phi i32 [ %32, %30 ], [ %22, %24 ], [ %27, %25 ], [ %5, %7 ], [ %10, %12 ], [ %16, %14 ]
  %37 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 3
  %38 = add nsw i32 %36, %1
  %39 = load i32, i32* %37, align 4
  %40 = icmp slt i32 %39, %38
  %41 = select i1 %40, i32 %38, i32 %39
  store i32 %41, i32* %37, align 4
  ret i32 %36
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2v88internal20AlignedSlotAllocator17AllocateUnalignedEi(%"class.v8::internal::AlignedSlotAllocator"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, %1
  store i32 %5, i32* %3, align 4
  %6 = and i32 %5, 3
  switch i32 %6, label %23 [
    i32 0, label %7
    i32 1, label %10
    i32 2, label %15
    i32 3, label %19
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 1
  store i32 -1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 0
  store i32 -1, i32* %9, align 4
  br label %24

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 0
  store i32 %5, i32* %11, align 4
  %12 = add nsw i32 %5, 1
  %13 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 1
  store i32 %12, i32* %13, align 4
  %14 = add nsw i32 %5, 3
  br label %24

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 0
  store i32 -1, i32* %16, align 4
  %17 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 1
  store i32 %5, i32* %17, align 4
  %18 = add nsw i32 %5, 2
  br label %24

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 0
  store i32 %5, i32* %20, align 4
  %21 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 1
  store i32 -1, i32* %21, align 4
  %22 = add nsw i32 %5, 1
  br label %24

23:                                               ; preds = %2
  unreachable

24:                                               ; preds = %19, %15, %10, %7
  %25 = phi i32 [ %22, %19 ], [ %18, %15 ], [ %14, %10 ], [ %5, %7 ]
  %26 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 2
  store i32 %25, i32* %26, align 4
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2v88internal20AlignedSlotAllocator5AlignEi(%"class.v8::internal::AlignedSlotAllocator"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = add nsw i32 %1, -1
  %4 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, %3
  %7 = sub nsw i32 %1, %6
  %8 = and i32 %7, %3
  %9 = add nsw i32 %8, %5
  store i32 %9, i32* %4, align 4
  %10 = and i32 %9, 3
  switch i32 %10, label %27 [
    i32 0, label %11
    i32 1, label %14
    i32 2, label %19
    i32 3, label %23
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 1
  store i32 -1, i32* %12, align 4
  %13 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 0
  store i32 -1, i32* %13, align 4
  br label %28

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 0
  store i32 %9, i32* %15, align 4
  %16 = add nsw i32 %9, 1
  %17 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 1
  store i32 %16, i32* %17, align 4
  %18 = add nsw i32 %9, 3
  br label %28

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 0
  store i32 -1, i32* %20, align 4
  %21 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 1
  store i32 %9, i32* %21, align 4
  %22 = add nsw i32 %9, 2
  br label %28

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 0
  store i32 %9, i32* %24, align 4
  %25 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 1
  store i32 -1, i32* %25, align 4
  %26 = add nsw i32 %9, 1
  br label %28

27:                                               ; preds = %2
  unreachable

28:                                               ; preds = %11, %14, %19, %23
  %29 = phi i32 [ %9, %11 ], [ %18, %14 ], [ %22, %19 ], [ %26, %23 ]
  %30 = getelementptr inbounds %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::AlignedSlotAllocator"* %0, i64 0, i32 2
  store i32 %29, i32* %30, align 4
  ret i32 %8
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
