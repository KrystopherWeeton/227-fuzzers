; ModuleID = '../../ui/aura/window_event_dispatcher.cc'
source_filename = "../../ui/aura/window_event_dispatcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.1", %"class.std::__1::vector.8", %"class.ui::EventHandler"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.3" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.8" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.base::flat_map.17"* }
%"class.base::flat_map.17" = type opaque
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.ui::PointerDetails" = type { i32, float, float, float, float, float, float, float, i32, %"class.gfx::Vector2d" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"struct.ui::ClassProperty" = type opaque
%"class.aura::WindowEventDispatcher::ObserverNotifier" = type { %"class.aura::WindowEventDispatcher"* }
%"class.aura::WindowEventDispatcher" = type { %"class.ui::EventProcessor", %"class.ui::GestureEventHelper", %"class.aura::client::CaptureDelegate", %"class.aura::WindowObserver", %"class.aura::EnvObserver", %"class.aura::WindowTreeHost"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.ui::FractionOfTimeWithoutUserInputRecorder", i8, i8, i32, %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.ui::LocatedEvent"*, %"class.base::ScopedMultiSourceObservation", %"class.std::__1::unique_ptr.73", i8, %"class.base::OnceCallback", %"class.std::__1::queue", i8, %"class.base::WeakPtrFactory.154", %"class.base::WeakPtrFactory.154" }
%"class.ui::EventProcessor" = type { %"class.ui::EventDispatcherDelegate", %"class.ui::EventSink", %"class.base::WeakPtrFactory" }
%"class.ui::EventSink" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i8 }
%"class.ui::GestureEventHelper" = type { i32 (...)** }
%"class.aura::client::CaptureDelegate" = type { i32 (...)** }
%"class.aura::WindowObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.25" }
%"class.base::WeakPtrFactory.25" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.aura::EnvObserver" = type { i32 (...)** }
%"class.aura::WindowTreeHost" = type { %"class.ui::internal::InputMethodDelegate", %"class.ui::EventSource", %"class.display::DisplayObserver", %"class.ui::CompositorObserver", %"class.aura::Window"*, i32, [4 x i8], %"class.base::ObserverList.105", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", float, %"class.ui::Cursor", %"class.gfx::Point", %"class.std::__1::unique_ptr.124", %"class.ui::InputMethod"*, i8, i8, i8, %"class.base::WeakPtrFactory.130" }
%"class.ui::internal::InputMethodDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.26" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.display::DisplayObserver" = type { %"class.base::CheckedObserver" }
%"class.ui::CompositorObserver" = type { i32 (...)** }
%"class.base::ObserverList.105" = type <{ %"class.std::__1::vector.37", %"class.base::LinkedList.106", i64, i32, [4 x i8] }>
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.39" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.106" = type { %"class.base::LinkNode.107" }
%"class.base::LinkNode.107" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.aura::WindowEventDispatcher"* }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.ui::Compositor"* }
%"class.ui::Compositor" = type opaque
%"class.ui::Cursor" = type { i32, %class.scoped_refptr.121, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr.121 = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.123 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.122, i32, i32 }
%class.sk_sp.122 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.20" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.123 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.ui::ViewProp"* }
%"class.ui::ViewProp" = type opaque
%"class.ui::InputMethod" = type { i32 (...)** }
%"class.base::WeakPtrFactory.130" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.60", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::vector.79", i32, i32, i32, [4 x i8], %"class.base::ObserverList.86", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.98", %"class.base::WeakPtr.104" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.31", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.37", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.51" }
%"class.std::__1::map.51" = type { %"class.std::__1::__tree.52" }
%"class.std::__1::__tree.52" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.aura::WindowDelegate" = type { %"class.ui::EventHandler" }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.86" = type <{ %"class.std::__1::vector.87", %"class.base::LinkedList.95", i64, i32, [4 x i8] }>
%"class.std::__1::vector.87" = type { %"class.std::__1::__vector_base.88" }
%"class.std::__1::__vector_base.88" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.90" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.89 }
%class.scoped_refptr.89 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.95" = type { %"class.base::LinkNode.96" }
%"class.base::LinkNode.96" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.104" = type { %"class.base::internal::WeakPtrBase" }
%"class.ui::FractionOfTimeWithoutUserInputRecorder" = type { i32 (...)**, %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.ui::LocatedEvent"* }
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.base::ScopedMultiSourceObservation" = type { %"class.aura::WindowObserver"*, %"class.std::__1::vector.60" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type { %"class.ui::EventTargeter", %"class.aura::Window"*, %"class.gfx::Insets", %"class.gfx::Insets" }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.137 }
%class.scoped_refptr.137 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.138", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.138" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.150" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"**, %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.aura::WindowEventDispatcher::ObserverNotifier"* }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.std::__1::unique_ptr.139"** }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::WeakPtrFactory.154" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode.157", %"class.base::ObserverList.155"* }
%"class.base::LinkNode.157" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.155" = type <{ %"class.std::__1::vector.37", %"class.base::LinkedList.156", i64, i32, [4 x i8] }>
%"class.base::LinkedList.156" = type { %"class.base::LinkNode.157" }
%"class.aura::Env" = type { %"class.ui::EventTarget", %"class.base::SupportsUserData.base", [7 x i8], %"class.base::ObserverList.168", %"class.base::ObserverList.155", %"class.base::ObserverList.172", %"class.std::__1::set", %"class.std::__1::unique_ptr.185", i32, %"class.gfx::Point", i8, %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.209", %"class.ui::ContextFactory"*, i8, %"class.std::__1::unique_ptr.223", %"class.std::__1::vector.229" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.159", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.159" = type { %"class.std::__1::__tree.160" }
%"class.std::__1::__tree.160" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.161", %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::ObserverList.168" = type <{ %"class.std::__1::vector.37", %"class.base::LinkedList.169", i64, i32, [4 x i8] }>
%"class.base::LinkedList.169" = type { %"class.base::LinkNode.170" }
%"class.base::LinkNode.170" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.172" = type <{ %"class.std::__1::vector.87", %"class.base::LinkedList.173", i64, i32, [4 x i8] }>
%"class.base::LinkedList.173" = type { %"class.base::LinkNode.174" }
%"class.base::LinkNode.174" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.176" }
%"class.std::__1::__tree.176" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.aura::EnvInputStateController"* }
%"class.aura::EnvInputStateController" = type <{ %"class.aura::Env"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.ui::GestureRecognizer"* }
%"class.ui::GestureRecognizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.ui::CursorFactory"* }
%"class.ui::CursorFactory" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.aura::InputStateLookup"* }
%"class.aura::InputStateLookup" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList.212", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.216" }
%"class.base::ObserverList.212" = type <{ %"class.std::__1::vector.37", %"class.base::LinkedList.213", i64, i32, [4 x i8] }>
%"class.base::LinkedList.213" = type { %"class.base::LinkNode.214" }
%"class.base::LinkNode.214" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.216" = type <{ %"class.std::__1::vector.37", %"class.base::LinkedList.217", i64, i32, [4 x i8] }>
%"class.base::LinkedList.217" = type { %"class.base::LinkNode.218" }
%"class.base::LinkNode.218" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::ContextFactory" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.aura::WindowOcclusionTracker"* }
%"class.aura::WindowOcclusionTracker" = type opaque
%"class.std::__1::vector.229" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { %"class.aura::WindowTreeHost"**, %"class.aura::WindowTreeHost"**, %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.aura::WindowTreeHost"** }
%"class.aura::WindowEventDispatcherObserver" = type { i32 (...)** }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtr.250" = type { %"class.base::internal::WeakPtrBase" }
%"class.ui::MouseEvent" = type { %"class.ui::LocatedEvent", i32, %"class.gfx::Vector2dF", %"struct.ui::PointerDetails" }
%"class.ui::TouchEvent" = type <{ %"class.ui::LocatedEvent", i32, i8, i8, [2 x i8], %"struct.ui::PointerDetails", [4 x i8] }>
%class.scoped_refptr.248 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.249" }>
%"class.base::RefCountedThreadSafe.249" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.ui::CancelModeEvent" = type { %"class.ui::Event" }
%"class.aura::client::FocusClient" = type { i32 (...)** }
%"class.ui::GestureEvent" = type <{ %"class.ui::LocatedEvent", %"struct.ui::GestureEventDetails", i32, [4 x i8] }>
%"struct.ui::GestureEventDetails" = type { i32, %"union.ui::GestureEventDetails::Details", i32, i8, i32, i32, %"class.gfx::RectF" }
%"union.ui::GestureEventDetails::Details" = type { %struct.anon }
%struct.anon = type { float, float, i8 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.255" = type { %"class.std::__1::__vector_base.256" }
%"class.std::__1::__vector_base.256" = type { %"class.std::__1::unique_ptr.257"*, %"class.std::__1::unique_ptr.257"*, %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.ui::GestureEvent"* }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::unique_ptr.257"* }
%"class.aura::client::ScreenPositionClient" = type { i32 (...)** }
%"class.aura::client::CaptureClient" = type { i32 (...)** }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.aura::client::CursorClient" = type { i32 (...)** }
%"class.display::Screen" = type { i32 (...)**, i64, i64 }
%"class.aura::WindowTracker" = type { %"class.aura::WindowObserver", %"class.std::__1::vector.60" }
%"class.ui::ScrollEvent" = type <{ %"class.ui::MouseEvent", float, float, float, float, i32, i32, i32, [4 x i8] }>
%"class.ui::KeyEvent" = type <{ %"class.ui::Event", i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>
%"class.ui::DomKey" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.270 }
%struct.anon.270 = type { i8 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.274", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.274" = type { %"class.std::__1::__vector_base.275" }
%"class.std::__1::__vector_base.275" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.276", i64, i64 }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.287" }
%"class.std::__1::list.287" = type { %"class.std::__1::__list_imp.288" }
%"class.std::__1::__list_imp.288" = type { %"struct.std::__1::__list_node_base.289", %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::__list_node_base.289" = type { %"struct.std::__1::__list_node_base.289"*, %"struct.std::__1::__list_node_base.289"* }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.aura::WindowObserver::HierarchyChangeParams" = type { %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, i32, %"class.aura::Window"* }
%"struct.std::__1::__split_buffer.300" = type { %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"**, %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.146", %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.std::__1::allocator.148"* }
%"class.std::__1::allocator.148" = type { i8 }

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_ = comdat any

$_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE = comdat any

$_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE = comdat any

$_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ = comdat any

$_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl = comdat any

$_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE = comdat any

$_ZN4aura11EnvObserver17OnHostInitializedEPNS_14WindowTreeHostE = comdat any

$_ZN4aura11EnvObserver15OnHostDestroyedEPNS_14WindowTreeHostE = comdat any

$_ZN4aura11EnvObserver16OnWillDestroyEnvEv = comdat any

$_ZN2ui18GestureEventHelperD2Ev = comdat any

$_ZN2ui18GestureEventHelperD0Ev = comdat any

$_ZN4aura6client15CaptureDelegateD2Ev = comdat any

$_ZN4aura6client15CaptureDelegateD0Ev = comdat any

$_ZNSt3__112__deque_baseINS_10unique_ptrIN4aura21WindowEventDispatcher16ObserverNotifierENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE5clearEv = comdat any

$_ZN2ui12LocatedEventC2IN4aura6WindowEEERKS0_PT_S7_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE = comdat any

$_ZNSt3__15dequeINS_10unique_ptrIN4aura21WindowEventDispatcher16ObserverNotifierENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPNS_10unique_ptrIN4aura21WindowEventDispatcher16ObserverNotifierENS_14default_deleteIS4_EEEENS_9allocatorIS8_EEE9push_backEOS8_ = comdat any

$_ZNSt3__114__split_bufferIPNS_10unique_ptrIN4aura21WindowEventDispatcher16ObserverNotifierENS_14default_deleteIS4_EEEENS_9allocatorIS8_EEE10push_frontEOS8_ = comdat any

$_ZNSt3__114__split_bufferIPNS_10unique_ptrIN4aura21WindowEventDispatcher16ObserverNotifierENS_14default_deleteIS4_EEEERNS_9allocatorIS8_EEE10push_frontERKS8_ = comdat any

$_ZTVN2ui18GestureEventHelperE = comdat any

$_ZTVN4aura6client15CaptureDelegateE = comdat any

@_ZTVN4aura21WindowEventDispatcherE = hidden unnamed_addr constant { [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZN4aura21WindowEventDispatcherD2Ev to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZN4aura21WindowEventDispatcherD0Ev to i8*), i8* bitcast (i1 (%"class.aura::WindowEventDispatcher"*, %"class.ui::EventTarget"*)* @_ZN4aura21WindowEventDispatcher19CanDispatchToTargetEPN2ui11EventTargetE to i8*), i8* bitcast (i24 (%"class.aura::WindowEventDispatcher"*, %"class.ui::EventTarget"*, %"class.ui::Event"*)* @_ZN4aura21WindowEventDispatcher16PreDispatchEventEPN2ui11EventTargetEPNS1_5EventE to i8*), i8* bitcast (i24 (%"class.aura::WindowEventDispatcher"*, %"class.ui::EventTarget"*, %"class.ui::Event"*)* @_ZN4aura21WindowEventDispatcher17PostDispatchEventEPN2ui11EventTargetERKNS1_5EventE to i8*), i8* bitcast (i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)* @_ZN2ui14EventProcessor17OnEventFromSourceEPNS_5EventE to i8*), i8* bitcast (%"class.ui::EventTarget"* (%"class.aura::WindowEventDispatcher"*, %"class.ui::Event"*)* @_ZN4aura21WindowEventDispatcher15GetRootForEventEPN2ui5EventE to i8*), i8* bitcast (%"class.ui::EventTargeter"* (%"class.aura::WindowEventDispatcher"*)* @_ZN4aura21WindowEventDispatcher23GetDefaultEventTargeterEv to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.ui::Event"*)* @_ZN4aura21WindowEventDispatcher24OnEventProcessingStartedEPN2ui5EventE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.ui::Event"*)* @_ZN4aura21WindowEventDispatcher25OnEventProcessingFinishedEPN2ui5EventE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, i32, %"class.aura::Window"*, i32, i1)* @_ZN4aura21WindowEventDispatcher19ProcessedTouchEventEjPNS_6WindowEN2ui11EventResultEb to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura21WindowEventDispatcher13UpdateCaptureEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZN4aura21WindowEventDispatcher21OnOtherRootGotCaptureEv to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZN4aura21WindowEventDispatcher16SetNativeCaptureEv to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZN4aura21WindowEventDispatcher20ReleaseNativeCaptureEv to i8*), i8* bitcast (i1 (%"class.aura::WindowEventDispatcher"*, %"class.ui::GestureConsumer"*)* @_ZN4aura21WindowEventDispatcher21CanDispatchToConsumerEPN2ui15GestureConsumerE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.ui::GestureConsumer"*, %"class.ui::GestureEvent"*)* @_ZN4aura21WindowEventDispatcher20DispatchGestureEventEPN2ui15GestureConsumerEPNS1_12GestureEventE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.ui::TouchEvent"*)* @_ZN4aura21WindowEventDispatcher27DispatchSyntheticTouchEventEPN2ui10TouchEventE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*)* @_ZN4aura21WindowEventDispatcher18OnWindowDestroyingEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*)* @_ZN4aura21WindowEventDispatcher17OnWindowDestroyedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*)* @_ZN4aura21WindowEventDispatcher25OnWindowAddedToRootWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura21WindowEventDispatcher30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, i1)* @_ZN4aura21WindowEventDispatcher26OnWindowVisibilityChangingEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, i1)* @_ZN4aura21WindowEventDispatcher25OnWindowVisibilityChangedEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, i32)* @_ZN4aura21WindowEventDispatcher21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.gfx::Transform"*)* @_ZN4aura21WindowEventDispatcher31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, i32)* @_ZN4aura21WindowEventDispatcher19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*)* @_ZN4aura21WindowEventDispatcher19OnWindowInitializedEPNS_6WindowE to i8*)], [5 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZThn16_N4aura21WindowEventDispatcherD1Ev to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZThn16_N4aura21WindowEventDispatcherD0Ev to i8*), i8* bitcast (i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)* @_ZThn16_N2ui14EventProcessor17OnEventFromSourceEPNS_5EventE to i8*)], [7 x i8*] [i8* inttoptr (i64 -40 to i8*), i8* null, i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZThn40_N4aura21WindowEventDispatcherD1Ev to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZThn40_N4aura21WindowEventDispatcherD0Ev to i8*), i8* bitcast (i1 (%"class.aura::WindowEventDispatcher"*, %"class.ui::GestureConsumer"*)* @_ZThn40_N4aura21WindowEventDispatcher21CanDispatchToConsumerEPN2ui15GestureConsumerE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.ui::GestureConsumer"*, %"class.ui::GestureEvent"*)* @_ZThn40_N4aura21WindowEventDispatcher20DispatchGestureEventEPN2ui15GestureConsumerEPNS1_12GestureEventE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.ui::TouchEvent"*)* @_ZThn40_N4aura21WindowEventDispatcher27DispatchSyntheticTouchEventEPN2ui10TouchEventE to i8*)], [8 x i8*] [i8* inttoptr (i64 -48 to i8*), i8* null, i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZThn48_N4aura21WindowEventDispatcher13UpdateCaptureEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZThn48_N4aura21WindowEventDispatcher21OnOtherRootGotCaptureEv to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZThn48_N4aura21WindowEventDispatcher16SetNativeCaptureEv to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZThn48_N4aura21WindowEventDispatcher20ReleaseNativeCaptureEv to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZThn48_N4aura21WindowEventDispatcherD1Ev to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZThn48_N4aura21WindowEventDispatcherD0Ev to i8*)], [30 x i8*] [i8* inttoptr (i64 -56 to i8*), i8* null, i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZThn56_N4aura21WindowEventDispatcherD1Ev to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZThn56_N4aura21WindowEventDispatcherD0Ev to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64)* @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, i1)* @_ZThn56_N4aura21WindowEventDispatcher26OnWindowVisibilityChangingEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, i1)* @_ZThn56_N4aura21WindowEventDispatcher25OnWindowVisibilityChangedEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, i32)* @_ZThn56_N4aura21WindowEventDispatcher21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.gfx::Transform"*)* @_ZThn56_N4aura21WindowEventDispatcher31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, i32)* @_ZThn56_N4aura21WindowEventDispatcher19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*)* @_ZThn56_N4aura21WindowEventDispatcher18OnWindowDestroyingEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*)* @_ZThn56_N4aura21WindowEventDispatcher17OnWindowDestroyedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*)* @_ZThn56_N4aura21WindowEventDispatcher25OnWindowAddedToRootWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZThn56_N4aura21WindowEventDispatcher30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE to i8*)], [8 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*)* @_ZThn80_N4aura21WindowEventDispatcher19OnWindowInitializedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)* @_ZN4aura11EnvObserver17OnHostInitializedEPNS_14WindowTreeHostE to i8*), i8* bitcast (void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)* @_ZN4aura11EnvObserver15OnHostDestroyedEPNS_14WindowTreeHostE to i8*), i8* bitcast (void (%"class.aura::EnvObserver"*)* @_ZN4aura11EnvObserver16OnWillDestroyEnvEv to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZThn80_N4aura21WindowEventDispatcherD1Ev to i8*), i8* bitcast (void (%"class.aura::WindowEventDispatcher"*)* @_ZThn80_N4aura21WindowEventDispatcherD0Ev to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [34 x i8] c"WindowEventDispatcher::Destructor\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"RepostEvent\00", align 1
@.str.2 = private unnamed_addr constant [41 x i8] c"../../ui/aura/window_event_dispatcher.cc\00", align 1
@__const._ZN4aura21WindowEventDispatcher23DispatchCancelModeEventEv.event = private unnamed_addr constant { { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" } } { { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 } { %"class.base::flat_map" { %"class.base::internal::flat_tree" { %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*) } } } } } }, i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i64 -6148914691236517206 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.ui::Event"* inttoptr (i64 -6148914691236517206 to %"class.ui::Event"*), i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.ui::EventTarget"* inttoptr (i64 -6148914691236517206 to %"class.ui::EventTarget"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { %"class.base::flat_map.17"* inttoptr (i64 -6148914691236517206 to %"class.base::flat_map.17"*) } } } } }, align 8
@.str.3 = private unnamed_addr constant [40 x i8] c"WindowEventDispatcher::HoldPointerMoves\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"ReleasePointerMoves\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"window()->Contains(target_window)\00", align 1
@.str.6 = private unnamed_addr constant [51 x i8] c"WindowEventDispatcher::OnWindowBoundsChanged(root)\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"!dispatching_held_event_\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"PostSynthesizeMouseMove\00", align 1
@__const._ZN4aura21WindowEventDispatcher24SynthesizeMouseMoveEventEv.event = private unnamed_addr constant { { { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" }, %"class.gfx::PointF", %"class.gfx::PointF" }, i32, %"class.gfx::Vector2dF", %"struct.ui::PointerDetails" } { { { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" }, %"class.gfx::PointF", %"class.gfx::PointF" } { { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 } { %"class.base::flat_map" { %"class.base::internal::flat_tree" { %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*) } } } } } }, i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i64 -6148914691236517206 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.ui::Event"* inttoptr (i64 -6148914691236517206 to %"class.ui::Event"*), i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.ui::EventTarget"* inttoptr (i64 -6148914691236517206 to %"class.ui::EventTarget"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { %"class.base::flat_map.17"* inttoptr (i64 -6148914691236517206 to %"class.base::flat_map.17"*) } } } }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, %"class.gfx::Vector2dF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.ui::PointerDetails" { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %"class.gfx::Vector2d" { i32 -1431655766, i32 -1431655766 } } }, align 8
@__const._ZN4aura21WindowEventDispatcher21PreDispatchTouchEventEPNS_6WindowEPN2ui10TouchEventE.root_relative_event = private unnamed_addr constant <{ { { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" }, %"class.gfx::PointF", %"class.gfx::PointF" }, i32, i8, i8, [2 x i8], %"struct.ui::PointerDetails", [4 x i8] }> <{ { { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" }, %"class.gfx::PointF", %"class.gfx::PointF" } { { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 } { %"class.base::flat_map" { %"class.base::internal::flat_tree" { %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*) } } } } } }, i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i64 -6148914691236517206 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.ui::Event"* inttoptr (i64 -6148914691236517206 to %"class.ui::Event"*), i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.ui::EventTarget"* inttoptr (i64 -6148914691236517206 to %"class.ui::EventTarget"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { %"class.base::flat_map.17"* inttoptr (i64 -6148914691236517206 to %"class.base::flat_map.17"*) } } } }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"struct.ui::PointerDetails" { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %"class.gfx::Vector2d" { i32 -1431655766, i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZN4aura6client18kSkipImeProcessingE = external local_unnamed_addr constant %"struct.ui::ClassProperty"*, align 8
@_ZTVN2ui18GestureEventHelperE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::GestureEventHelper"*)* @_ZN2ui18GestureEventHelperD2Ev to i8*), i8* bitcast (void (%"class.ui::GestureEventHelper"*)* @_ZN2ui18GestureEventHelperD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN4aura6client15CaptureDelegateE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.aura::client::CaptureDelegate"*)* @_ZN4aura6client15CaptureDelegateD2Ev to i8*), i8* bitcast (void (%"class.aura::client::CaptureDelegate"*)* @_ZN4aura6client15CaptureDelegateD0Ev to i8*)] }, comdat, align 8
@_ZTVN2ui10MouseEventE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN2ui12LocatedEventE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.10 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZTVN2ui10TouchEventE = external unnamed_addr constant { [6 x i8*] }, align 8

@_ZN4aura21WindowEventDispatcher16ObserverNotifierC1EPS0_RKN2ui5EventE = hidden unnamed_addr alias void (%"class.aura::WindowEventDispatcher::ObserverNotifier"*, %"class.aura::WindowEventDispatcher"*, %"class.ui::Event"*), void (%"class.aura::WindowEventDispatcher::ObserverNotifier"*, %"class.aura::WindowEventDispatcher"*, %"class.ui::Event"*)* @_ZN4aura21WindowEventDispatcher16ObserverNotifierC2EPS0_RKN2ui5EventE
@_ZN4aura21WindowEventDispatcher16ObserverNotifierD1Ev = hidden unnamed_addr alias void (%"class.aura::WindowEventDispatcher::ObserverNotifier"*), void (%"class.aura::WindowEventDispatcher::ObserverNotifier"*)* @_ZN4aura21WindowEventDispatcher16ObserverNotifierD2Ev
@_ZN4aura21WindowEventDispatcherC1EPNS_14WindowTreeHostE = hidden unnamed_addr alias void (%"class.aura::WindowEventDispatcher"*, %"class.aura::WindowTreeHost"*), void (%"class.aura::WindowEventDispatcher"*, %"class.aura::WindowTreeHost"*)* @_ZN4aura21WindowEventDispatcherC2EPNS_14WindowTreeHostE
@_ZN4aura21WindowEventDispatcherD1Ev = hidden unnamed_addr alias void (%"class.aura::WindowEventDispatcher"*), void (%"class.aura::WindowEventDispatcher"*)* @_ZN4aura21WindowEventDispatcherD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher16ObserverNotifierC2EPS0_RKN2ui5EventE(%"class.aura::WindowEventDispatcher::ObserverNotifier"* nocapture, %"class.aura::WindowEventDispatcher"*, %"class.ui::Event"* dereferenceable(144)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = getelementptr inbounds %"class.aura::WindowEventDispatcher::ObserverNotifier", %"class.aura::WindowEventDispatcher::ObserverNotifier"* %0, i64 0, i32 0
  store %"class.aura::WindowEventDispatcher"* %1, %"class.aura::WindowEventDispatcher"** %6, align 8
  %7 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %8 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %7, i64 0, i32 4
  %9 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %13 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %8, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 40, i1 false)
  %15 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !2
  %16 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %17 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %16, align 8, !noalias !2
  %18 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %15, %17
  %19 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %19) #14
  br i1 %18, label %20, label %22

20:                                               ; preds = %3
  %21 = bitcast %"class.base::ObserverList.155"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #14, !alias.scope !2
  br label %62

22:                                               ; preds = %3
  store %"class.base::ObserverList.155"* %8, %"class.base::ObserverList.155"** %10, align 8, !alias.scope !2
  %23 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %7, i64 0, i32 4, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %19, %"class.base::internal::LinkNodeBase"* %23) #14
  store i64 0, i64* %11, align 8, !alias.scope !2
  %24 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %7, i64 0, i32 4, i32 3
  %25 = load i32, i32* %24, align 8, !noalias !2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %16 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !2
  %30 = bitcast %"class.base::ObserverList.155"* %8 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !2
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 3
  br label %34

34:                                               ; preds = %27, %22
  %35 = phi i64 [ %33, %27 ], [ -1, %22 ]
  store i64 %35, i64* %12, align 8, !alias.scope !2
  %36 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %10, align 8, !alias.scope !2
  %37 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %36, i64 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::ObserverList.155"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 3
  %44 = icmp ult i64 %43, %35
  %45 = select i1 %44, i64 %43, i64 %35
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %62, label %47

47:                                               ; preds = %34
  %48 = inttoptr i64 %41 to %"class.base::internal::UncheckedObserverAdapter"*
  %49 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %36, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %48, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %62

53:                                               ; preds = %47, %57
  %54 = phi i64 [ %55, %57 ], [ 0, %47 ]
  %55 = add nuw i64 %54, 1
  store i64 %55, i64* %11, align 8, !alias.scope !2
  %56 = icmp ult i64 %55, %45
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %49, align 8
  %59 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %58, i64 %55, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %53, label %62

62:                                               ; preds = %53, %57, %20, %34, %47
  %63 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #14
  %64 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %66 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %67 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %67) #14
  %69 = bitcast %"class.base::ObserverList.155"** %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #14, !alias.scope !5
  %70 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %10, align 8
  br label %71

71:                                               ; preds = %310, %62
  %72 = phi %"class.base::ObserverList.155"* [ %70, %62 ], [ %308, %310 ]
  %73 = icmp eq %"class.base::ObserverList.155"* %72, null
  br i1 %73, label %89, label %74

74:                                               ; preds = %71
  %75 = load i64, i64* %11, align 8
  %76 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %72, i64 0, i32 0, i32 0, i32 1
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.base::ObserverList.155"* %72 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %78, %80
  %82 = ashr exact i64 %81, 3
  %83 = load i64, i64* %12, align 8
  %84 = icmp ult i64 %82, %83
  %85 = select i1 %84, i64 %82, i64 %83
  %86 = icmp eq i64 %75, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %74
  %88 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %64, align 8
  br label %105

89:                                               ; preds = %74, %71
  %90 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %64, align 8
  %91 = icmp eq %"class.base::ObserverList.155"* %90, null
  br i1 %91, label %205, label %92

92:                                               ; preds = %89
  %93 = load i64, i64* %65, align 8
  %94 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %90, i64 0, i32 0, i32 0, i32 1
  %95 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.base::ObserverList.155"* %90 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %96, %98
  %100 = ashr exact i64 %99, 3
  %101 = load i64, i64* %66, align 8
  %102 = icmp ult i64 %100, %101
  %103 = select i1 %102, i64 %100, i64 %101
  %104 = icmp eq i64 %93, %103
  br i1 %104, label %114, label %105

105:                                              ; preds = %92, %87
  %106 = phi %"class.base::ObserverList.155"* [ %88, %87 ], [ %90, %92 ]
  %107 = icmp eq %"class.base::ObserverList.155"* %72, %106
  %108 = load i64, i64* %11, align 8
  %109 = load i64, i64* %65, align 8
  %110 = icmp eq i64 %108, %109
  %111 = and i1 %107, %110
  br i1 %111, label %112, label %299

112:                                              ; preds = %105
  %113 = icmp eq %"class.base::ObserverList.155"* %72, null
  br i1 %113, label %205, label %114

114:                                              ; preds = %92, %112
  %115 = phi %"class.base::ObserverList.155"* [ %72, %112 ], [ %90, %92 ]
  %116 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %115, i64 0, i32 1
  %117 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %115, i64 0, i32 1, i32 0, i32 0, i32 1
  %118 = bitcast %"class.base::internal::LinkNodeBase"** %117 to %"class.base::LinkNode.157"**
  %119 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %118, align 8
  %120 = bitcast %"class.base::LinkedList.156"* %116 to %"class.base::LinkNode.157"**
  %121 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %120, align 8
  %122 = icmp eq %"class.base::LinkNode.157"* %119, %121
  br i1 %122, label %123, label %201

123:                                              ; preds = %114
  %124 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %115, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  %126 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %115, i64 0, i32 0, i32 0, i32 1
  %127 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  %128 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %125, %127
  br i1 %128, label %137, label %129

129:                                              ; preds = %123, %134
  %130 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %134 ], [ %125, %123 ]
  %131 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %130, i64 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = icmp eq i8* %132, null
  br i1 %133, label %137, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %130, i64 1
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %127
  br i1 %136, label %201, label %129

137:                                              ; preds = %129, %123
  %138 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %125, %123 ], [ %130, %129 ]
  %139 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %138 to i64
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %127
  br i1 %140, label %201, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %138, i64 1
  %143 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %142, %127
  br i1 %143, label %196, label %144

144:                                              ; preds = %141
  %145 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 -2, i32 0
  %146 = ptrtoint i8** %145 to i64
  %147 = sub i64 %146, %139
  %148 = lshr i64 %147, 3
  %149 = add nuw nsw i64 %148, 1
  %150 = and i64 %149, 3
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %170, label %152

152:                                              ; preds = %144, %165
  %153 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %167, %165 ], [ %142, %144 ]
  %154 = phi i64 [ %166, %165 ], [ %139, %144 ]
  %155 = phi i64 [ %168, %165 ], [ %150, %144 ]
  %156 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = icmp eq i8* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %152
  %160 = ptrtoint i8* %157 to i64
  %161 = inttoptr i64 %154 to %"class.base::internal::UncheckedObserverAdapter"*
  %162 = inttoptr i64 %154 to i64*
  store i64 %160, i64* %162, align 8
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %161, i64 1
  %164 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %163 to i64
  br label %165

165:                                              ; preds = %159, %152
  %166 = phi i64 [ %154, %152 ], [ %164, %159 ]
  %167 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 1
  %168 = add i64 %155, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %152, !llvm.loop !8

170:                                              ; preds = %165, %144
  %171 = phi i64 [ undef, %144 ], [ %166, %165 ]
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %142, %144 ], [ %167, %165 ]
  %173 = phi i64 [ %139, %144 ], [ %166, %165 ]
  %174 = icmp ult i64 %147, 24
  br i1 %174, label %192, label %175

175:                                              ; preds = %170, %400
  %176 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %402, %400 ], [ %172, %170 ]
  %177 = phi i64 [ %401, %400 ], [ %173, %170 ]
  %178 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 0, i32 0
  %179 = load i8*, i8** %178, align 8
  %180 = icmp eq i8* %179, null
  br i1 %180, label %187, label %181

181:                                              ; preds = %175
  %182 = ptrtoint i8* %179 to i64
  %183 = inttoptr i64 %177 to %"class.base::internal::UncheckedObserverAdapter"*
  %184 = inttoptr i64 %177 to i64*
  store i64 %182, i64* %184, align 8
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1
  %186 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %185 to i64
  br label %187

187:                                              ; preds = %181, %175
  %188 = phi i64 [ %177, %175 ], [ %186, %181 ]
  %189 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 1, i32 0
  %190 = load i8*, i8** %189, align 8
  %191 = icmp eq i8* %190, null
  br i1 %191, label %378, label %372

192:                                              ; preds = %400, %170
  %193 = phi i64 [ %171, %170 ], [ %401, %400 ]
  %194 = inttoptr i64 %193 to %"class.base::internal::UncheckedObserverAdapter"*
  %195 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  br label %196

196:                                              ; preds = %192, %141
  %197 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %127, %141 ], [ %195, %192 ]
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %141 ], [ %194, %192 ]
  %199 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %198, %197
  br i1 %199, label %201, label %200

200:                                              ; preds = %196
  store %"class.base::internal::UncheckedObserverAdapter"* %198, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  br label %201

201:                                              ; preds = %134, %200, %196, %137, %114
  %202 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %64, align 8
  %203 = icmp eq %"class.base::ObserverList.155"* %202, null
  br i1 %203, label %205, label %204

204:                                              ; preds = %201
  store %"class.base::ObserverList.155"* null, %"class.base::ObserverList.155"** %64, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %67) #14
  br label %205

205:                                              ; preds = %89, %112, %201, %204
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #14
  %206 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %10, align 8
  %207 = icmp eq %"class.base::ObserverList.155"* %206, null
  br i1 %207, label %298, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %206, i64 0, i32 1
  %210 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %206, i64 0, i32 1, i32 0, i32 0, i32 1
  %211 = bitcast %"class.base::internal::LinkNodeBase"** %210 to %"class.base::LinkNode.157"**
  %212 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %211, align 8
  %213 = bitcast %"class.base::LinkedList.156"* %209 to %"class.base::LinkNode.157"**
  %214 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %213, align 8
  %215 = icmp eq %"class.base::LinkNode.157"* %212, %214
  br i1 %215, label %216, label %294

216:                                              ; preds = %208
  %217 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %206, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  %219 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %206, i64 0, i32 0, i32 0, i32 1
  %220 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  %221 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %218, %220
  br i1 %221, label %230, label %222

222:                                              ; preds = %216, %227
  %223 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %227 ], [ %218, %216 ]
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %223, i64 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = icmp eq i8* %225, null
  br i1 %226, label %230, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %223, i64 1
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %220
  br i1 %229, label %294, label %222

230:                                              ; preds = %222, %216
  %231 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %218, %216 ], [ %223, %222 ]
  %232 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %231 to i64
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %220
  br i1 %233, label %294, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 1
  %236 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %235, %220
  br i1 %236, label %289, label %237

237:                                              ; preds = %234
  %238 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 -2, i32 0
  %239 = ptrtoint i8** %238 to i64
  %240 = sub i64 %239, %232
  %241 = lshr i64 %240, 3
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %263, label %245

245:                                              ; preds = %237, %258
  %246 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %260, %258 ], [ %235, %237 ]
  %247 = phi i64 [ %259, %258 ], [ %232, %237 ]
  %248 = phi i64 [ %261, %258 ], [ %243, %237 ]
  %249 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 0, i32 0
  %250 = load i8*, i8** %249, align 8
  %251 = icmp eq i8* %250, null
  br i1 %251, label %258, label %252

252:                                              ; preds = %245
  %253 = ptrtoint i8* %250 to i64
  %254 = inttoptr i64 %247 to %"class.base::internal::UncheckedObserverAdapter"*
  %255 = inttoptr i64 %247 to i64*
  store i64 %253, i64* %255, align 8
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %254, i64 1
  %257 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %256 to i64
  br label %258

258:                                              ; preds = %252, %245
  %259 = phi i64 [ %247, %245 ], [ %257, %252 ]
  %260 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 1
  %261 = add i64 %248, -1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %245, !llvm.loop !10

263:                                              ; preds = %258, %237
  %264 = phi i64 [ undef, %237 ], [ %259, %258 ]
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %237 ], [ %260, %258 ]
  %266 = phi i64 [ %232, %237 ], [ %259, %258 ]
  %267 = icmp ult i64 %240, 24
  br i1 %267, label %285, label %268

268:                                              ; preds = %263, %368
  %269 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %370, %368 ], [ %265, %263 ]
  %270 = phi i64 [ %369, %368 ], [ %266, %263 ]
  %271 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = icmp eq i8* %272, null
  br i1 %273, label %280, label %274

274:                                              ; preds = %268
  %275 = ptrtoint i8* %272 to i64
  %276 = inttoptr i64 %270 to %"class.base::internal::UncheckedObserverAdapter"*
  %277 = inttoptr i64 %270 to i64*
  store i64 %275, i64* %277, align 8
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1
  %279 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %278 to i64
  br label %280

280:                                              ; preds = %274, %268
  %281 = phi i64 [ %270, %268 ], [ %279, %274 ]
  %282 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 1, i32 0
  %283 = load i8*, i8** %282, align 8
  %284 = icmp eq i8* %283, null
  br i1 %284, label %346, label %340

285:                                              ; preds = %368, %263
  %286 = phi i64 [ %264, %263 ], [ %369, %368 ]
  %287 = inttoptr i64 %286 to %"class.base::internal::UncheckedObserverAdapter"*
  %288 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  br label %289

289:                                              ; preds = %285, %234
  %290 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %220, %234 ], [ %288, %285 ]
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %234 ], [ %287, %285 ]
  %292 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %291, %290
  br i1 %292, label %294, label %293

293:                                              ; preds = %289
  store %"class.base::internal::UncheckedObserverAdapter"* %291, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  br label %294

294:                                              ; preds = %227, %293, %289, %230, %208
  %295 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %10, align 8
  %296 = icmp eq %"class.base::ObserverList.155"* %295, null
  br i1 %296, label %298, label %297

297:                                              ; preds = %294
  store %"class.base::ObserverList.155"* null, %"class.base::ObserverList.155"** %10, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %19) #14
  br label %298

298:                                              ; preds = %205, %294, %297
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #14
  ret void

299:                                              ; preds = %105
  %300 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %72, i64 0, i32 0, i32 0, i32 0
  %301 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %300, align 8
  %302 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %301, i64 %108
  %303 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %302 to %"class.aura::WindowEventDispatcherObserver"**
  %304 = load %"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcherObserver"** %303, align 8
  %305 = bitcast %"class.aura::WindowEventDispatcherObserver"* %304 to void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*, %"class.ui::Event"*)***
  %306 = load void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*, %"class.ui::Event"*)**, void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*, %"class.ui::Event"*)*** %305, align 8
  %307 = load void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*, %"class.ui::Event"*)*, void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*, %"class.ui::Event"*)** %306, align 8
  call void %307(%"class.aura::WindowEventDispatcherObserver"* %304, %"class.aura::WindowEventDispatcher"* %1, %"class.ui::Event"* dereferenceable(144) %2) #14
  %308 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %10, align 8
  %309 = icmp eq %"class.base::ObserverList.155"* %308, null
  br i1 %309, label %310, label %311

310:                                              ; preds = %335, %331, %299, %311, %325
  br label %71

311:                                              ; preds = %299
  %312 = load i64, i64* %11, align 8
  %313 = add i64 %312, 1
  store i64 %313, i64* %11, align 8
  %314 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %308, i64 0, i32 0, i32 0, i32 1
  %315 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %314 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = bitcast %"class.base::ObserverList.155"* %308 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = sub i64 %316, %318
  %320 = ashr exact i64 %319, 3
  %321 = load i64, i64* %12, align 8
  %322 = icmp ult i64 %320, %321
  %323 = select i1 %322, i64 %320, i64 %321
  %324 = icmp ult i64 %313, %323
  br i1 %324, label %325, label %310

325:                                              ; preds = %311
  %326 = inttoptr i64 %318 to %"class.base::internal::UncheckedObserverAdapter"*
  %327 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %308, i64 0, i32 0, i32 0, i32 0
  %328 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %326, i64 %313, i32 0
  %329 = load i8*, i8** %328, align 8
  %330 = icmp eq i8* %329, null
  br i1 %330, label %331, label %310

331:                                              ; preds = %325, %335
  %332 = phi i64 [ %333, %335 ], [ %313, %325 ]
  %333 = add nuw i64 %332, 1
  store i64 %333, i64* %11, align 8
  %334 = icmp ult i64 %333, %323
  br i1 %334, label %335, label %310

335:                                              ; preds = %331
  %336 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %327, align 8
  %337 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %336, i64 %333, i32 0
  %338 = load i8*, i8** %337, align 8
  %339 = icmp eq i8* %338, null
  br i1 %339, label %331, label %310

340:                                              ; preds = %280
  %341 = ptrtoint i8* %283 to i64
  %342 = inttoptr i64 %281 to %"class.base::internal::UncheckedObserverAdapter"*
  %343 = inttoptr i64 %281 to i64*
  store i64 %341, i64* %343, align 8
  %344 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %342, i64 1
  %345 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %344 to i64
  br label %346

346:                                              ; preds = %340, %280
  %347 = phi i64 [ %281, %280 ], [ %345, %340 ]
  %348 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 2, i32 0
  %349 = load i8*, i8** %348, align 8
  %350 = icmp eq i8* %349, null
  br i1 %350, label %357, label %351

351:                                              ; preds = %346
  %352 = ptrtoint i8* %349 to i64
  %353 = inttoptr i64 %347 to %"class.base::internal::UncheckedObserverAdapter"*
  %354 = inttoptr i64 %347 to i64*
  store i64 %352, i64* %354, align 8
  %355 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %353, i64 1
  %356 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %355 to i64
  br label %357

357:                                              ; preds = %351, %346
  %358 = phi i64 [ %347, %346 ], [ %356, %351 ]
  %359 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 3, i32 0
  %360 = load i8*, i8** %359, align 8
  %361 = icmp eq i8* %360, null
  br i1 %361, label %368, label %362

362:                                              ; preds = %357
  %363 = ptrtoint i8* %360 to i64
  %364 = inttoptr i64 %358 to %"class.base::internal::UncheckedObserverAdapter"*
  %365 = inttoptr i64 %358 to i64*
  store i64 %363, i64* %365, align 8
  %366 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 1
  %367 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %366 to i64
  br label %368

368:                                              ; preds = %362, %357
  %369 = phi i64 [ %358, %357 ], [ %367, %362 ]
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 4
  %371 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %370, %220
  br i1 %371, label %285, label %268

372:                                              ; preds = %187
  %373 = ptrtoint i8* %190 to i64
  %374 = inttoptr i64 %188 to %"class.base::internal::UncheckedObserverAdapter"*
  %375 = inttoptr i64 %188 to i64*
  store i64 %373, i64* %375, align 8
  %376 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %374, i64 1
  %377 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %376 to i64
  br label %378

378:                                              ; preds = %372, %187
  %379 = phi i64 [ %188, %187 ], [ %377, %372 ]
  %380 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 2, i32 0
  %381 = load i8*, i8** %380, align 8
  %382 = icmp eq i8* %381, null
  br i1 %382, label %389, label %383

383:                                              ; preds = %378
  %384 = ptrtoint i8* %381 to i64
  %385 = inttoptr i64 %379 to %"class.base::internal::UncheckedObserverAdapter"*
  %386 = inttoptr i64 %379 to i64*
  store i64 %384, i64* %386, align 8
  %387 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %385, i64 1
  %388 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %387 to i64
  br label %389

389:                                              ; preds = %383, %378
  %390 = phi i64 [ %379, %378 ], [ %388, %383 ]
  %391 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 3, i32 0
  %392 = load i8*, i8** %391, align 8
  %393 = icmp eq i8* %392, null
  br i1 %393, label %400, label %394

394:                                              ; preds = %389
  %395 = ptrtoint i8* %392 to i64
  %396 = inttoptr i64 %390 to %"class.base::internal::UncheckedObserverAdapter"*
  %397 = inttoptr i64 %390 to i64*
  store i64 %395, i64* %397, align 8
  %398 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %396, i64 1
  %399 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %398 to i64
  br label %400

400:                                              ; preds = %394, %389
  %401 = phi i64 [ %390, %389 ], [ %399, %394 ]
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 4
  %403 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %402, %127
  br i1 %403, label %192, label %175
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher16ObserverNotifierD2Ev(%"class.aura::WindowEventDispatcher::ObserverNotifier"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %5 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %4, i64 0, i32 4
  %6 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !11
  %13 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %4, i64 0, i32 4, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !11
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #14
  br i1 %15, label %17, label %19

17:                                               ; preds = %1
  %18 = bitcast %"class.base::ObserverList.155"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #14, !alias.scope !11
  br label %59

19:                                               ; preds = %1
  store %"class.base::ObserverList.155"* %5, %"class.base::ObserverList.155"** %7, align 8, !alias.scope !11
  %20 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %4, i64 0, i32 4, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #14
  store i64 0, i64* %8, align 8, !alias.scope !11
  %21 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %4, i64 0, i32 4, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !11
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !11
  %27 = bitcast %"class.base::ObserverList.155"* %5 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !11
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8, !alias.scope !11
  %33 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %7, align 8, !alias.scope !11
  %34 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList.155"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8, !alias.scope !11
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %54, %17, %31, %44
  %60 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #14
  %61 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #14
  %66 = bitcast %"class.base::ObserverList.155"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #14, !alias.scope !14
  %67 = getelementptr inbounds %"class.aura::WindowEventDispatcher::ObserverNotifier", %"class.aura::WindowEventDispatcher::ObserverNotifier"* %0, i64 0, i32 0
  %68 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %7, align 8
  br label %69

69:                                               ; preds = %310, %59
  %70 = phi %"class.base::ObserverList.155"* [ %68, %59 ], [ %308, %310 ]
  %71 = icmp eq %"class.base::ObserverList.155"* %70, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %69
  %73 = load i64, i64* %8, align 8
  %74 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %70, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.base::ObserverList.155"* %70 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = ashr exact i64 %79, 3
  %81 = load i64, i64* %9, align 8
  %82 = icmp ult i64 %80, %81
  %83 = select i1 %82, i64 %80, i64 %81
  %84 = icmp eq i64 %73, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %72
  %86 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %61, align 8
  br label %103

87:                                               ; preds = %72, %69
  %88 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %61, align 8
  %89 = icmp eq %"class.base::ObserverList.155"* %88, null
  br i1 %89, label %203, label %90

90:                                               ; preds = %87
  %91 = load i64, i64* %62, align 8
  %92 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %88, i64 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.base::ObserverList.155"* %88 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 3
  %99 = load i64, i64* %63, align 8
  %100 = icmp ult i64 %98, %99
  %101 = select i1 %100, i64 %98, i64 %99
  %102 = icmp eq i64 %91, %101
  br i1 %102, label %112, label %103

103:                                              ; preds = %90, %85
  %104 = phi %"class.base::ObserverList.155"* [ %86, %85 ], [ %88, %90 ]
  %105 = icmp eq %"class.base::ObserverList.155"* %70, %104
  %106 = load i64, i64* %8, align 8
  %107 = load i64, i64* %62, align 8
  %108 = icmp eq i64 %106, %107
  %109 = and i1 %105, %108
  br i1 %109, label %110, label %297

110:                                              ; preds = %103
  %111 = icmp eq %"class.base::ObserverList.155"* %70, null
  br i1 %111, label %203, label %112

112:                                              ; preds = %90, %110
  %113 = phi %"class.base::ObserverList.155"* [ %70, %110 ], [ %88, %90 ]
  %114 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %113, i64 0, i32 1
  %115 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %113, i64 0, i32 1, i32 0, i32 0, i32 1
  %116 = bitcast %"class.base::internal::LinkNodeBase"** %115 to %"class.base::LinkNode.157"**
  %117 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %116, align 8
  %118 = bitcast %"class.base::LinkedList.156"* %114 to %"class.base::LinkNode.157"**
  %119 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %118, align 8
  %120 = icmp eq %"class.base::LinkNode.157"* %117, %119
  br i1 %120, label %121, label %199

121:                                              ; preds = %112
  %122 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %113, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  %124 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %113, i64 0, i32 0, i32 0, i32 1
  %125 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  %126 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %123, %125
  br i1 %126, label %135, label %127

127:                                              ; preds = %121, %132
  %128 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %133, %132 ], [ %123, %121 ]
  %129 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = icmp eq i8* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 1
  %134 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %133, %125
  br i1 %134, label %199, label %127

135:                                              ; preds = %127, %121
  %136 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %123, %121 ], [ %128, %127 ]
  %137 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %136 to i64
  %138 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %136, %125
  br i1 %138, label %199, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %136, i64 1
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %140, %125
  br i1 %141, label %194, label %142

142:                                              ; preds = %139
  %143 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %125, i64 -2, i32 0
  %144 = ptrtoint i8** %143 to i64
  %145 = sub i64 %144, %137
  %146 = lshr i64 %145, 3
  %147 = add nuw nsw i64 %146, 1
  %148 = and i64 %147, 3
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %168, label %150

150:                                              ; preds = %142, %163
  %151 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %165, %163 ], [ %140, %142 ]
  %152 = phi i64 [ %164, %163 ], [ %137, %142 ]
  %153 = phi i64 [ %166, %163 ], [ %148, %142 ]
  %154 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %151, i64 0, i32 0
  %155 = load i8*, i8** %154, align 8
  %156 = icmp eq i8* %155, null
  br i1 %156, label %163, label %157

157:                                              ; preds = %150
  %158 = ptrtoint i8* %155 to i64
  %159 = inttoptr i64 %152 to %"class.base::internal::UncheckedObserverAdapter"*
  %160 = inttoptr i64 %152 to i64*
  store i64 %158, i64* %160, align 8
  %161 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %159, i64 1
  %162 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %161 to i64
  br label %163

163:                                              ; preds = %157, %150
  %164 = phi i64 [ %152, %150 ], [ %162, %157 ]
  %165 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %151, i64 1
  %166 = add i64 %153, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %150, !llvm.loop !17

168:                                              ; preds = %163, %142
  %169 = phi i64 [ undef, %142 ], [ %164, %163 ]
  %170 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %140, %142 ], [ %165, %163 ]
  %171 = phi i64 [ %137, %142 ], [ %164, %163 ]
  %172 = icmp ult i64 %145, 24
  br i1 %172, label %190, label %173

173:                                              ; preds = %168, %400
  %174 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %402, %400 ], [ %170, %168 ]
  %175 = phi i64 [ %401, %400 ], [ %171, %168 ]
  %176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %185, label %179

179:                                              ; preds = %173
  %180 = ptrtoint i8* %177 to i64
  %181 = inttoptr i64 %175 to %"class.base::internal::UncheckedObserverAdapter"*
  %182 = inttoptr i64 %175 to i64*
  store i64 %180, i64* %182, align 8
  %183 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %181, i64 1
  %184 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %183 to i64
  br label %185

185:                                              ; preds = %179, %173
  %186 = phi i64 [ %175, %173 ], [ %184, %179 ]
  %187 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 1, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = icmp eq i8* %188, null
  br i1 %189, label %378, label %372

190:                                              ; preds = %400, %168
  %191 = phi i64 [ %169, %168 ], [ %401, %400 ]
  %192 = inttoptr i64 %191 to %"class.base::internal::UncheckedObserverAdapter"*
  %193 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  br label %194

194:                                              ; preds = %190, %139
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %125, %139 ], [ %193, %190 ]
  %196 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %139 ], [ %192, %190 ]
  %197 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %196, %195
  br i1 %197, label %199, label %198

198:                                              ; preds = %194
  store %"class.base::internal::UncheckedObserverAdapter"* %196, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  br label %199

199:                                              ; preds = %132, %198, %194, %135, %112
  %200 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %61, align 8
  %201 = icmp eq %"class.base::ObserverList.155"* %200, null
  br i1 %201, label %203, label %202

202:                                              ; preds = %199
  store %"class.base::ObserverList.155"* null, %"class.base::ObserverList.155"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #14
  br label %203

203:                                              ; preds = %87, %110, %199, %202
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #14
  %204 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %7, align 8
  %205 = icmp eq %"class.base::ObserverList.155"* %204, null
  br i1 %205, label %296, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %204, i64 0, i32 1
  %208 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %204, i64 0, i32 1, i32 0, i32 0, i32 1
  %209 = bitcast %"class.base::internal::LinkNodeBase"** %208 to %"class.base::LinkNode.157"**
  %210 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %209, align 8
  %211 = bitcast %"class.base::LinkedList.156"* %207 to %"class.base::LinkNode.157"**
  %212 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %211, align 8
  %213 = icmp eq %"class.base::LinkNode.157"* %210, %212
  br i1 %213, label %214, label %292

214:                                              ; preds = %206
  %215 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %204, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  %217 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %204, i64 0, i32 0, i32 0, i32 1
  %218 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  %219 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %216, %218
  br i1 %219, label %228, label %220

220:                                              ; preds = %214, %225
  %221 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %226, %225 ], [ %216, %214 ]
  %222 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 0, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = icmp eq i8* %223, null
  br i1 %224, label %228, label %225

225:                                              ; preds = %220
  %226 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 1
  %227 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %226, %218
  br i1 %227, label %292, label %220

228:                                              ; preds = %220, %214
  %229 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %216, %214 ], [ %221, %220 ]
  %230 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %229 to i64
  %231 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %229, %218
  br i1 %231, label %292, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %229, i64 1
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %233, %218
  br i1 %234, label %287, label %235

235:                                              ; preds = %232
  %236 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %218, i64 -2, i32 0
  %237 = ptrtoint i8** %236 to i64
  %238 = sub i64 %237, %230
  %239 = lshr i64 %238, 3
  %240 = add nuw nsw i64 %239, 1
  %241 = and i64 %240, 3
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %261, label %243

243:                                              ; preds = %235, %256
  %244 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %258, %256 ], [ %233, %235 ]
  %245 = phi i64 [ %257, %256 ], [ %230, %235 ]
  %246 = phi i64 [ %259, %256 ], [ %241, %235 ]
  %247 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 0, i32 0
  %248 = load i8*, i8** %247, align 8
  %249 = icmp eq i8* %248, null
  br i1 %249, label %256, label %250

250:                                              ; preds = %243
  %251 = ptrtoint i8* %248 to i64
  %252 = inttoptr i64 %245 to %"class.base::internal::UncheckedObserverAdapter"*
  %253 = inttoptr i64 %245 to i64*
  store i64 %251, i64* %253, align 8
  %254 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %252, i64 1
  %255 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %254 to i64
  br label %256

256:                                              ; preds = %250, %243
  %257 = phi i64 [ %245, %243 ], [ %255, %250 ]
  %258 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 1
  %259 = add i64 %246, -1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %243, !llvm.loop !18

261:                                              ; preds = %256, %235
  %262 = phi i64 [ undef, %235 ], [ %257, %256 ]
  %263 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %233, %235 ], [ %258, %256 ]
  %264 = phi i64 [ %230, %235 ], [ %257, %256 ]
  %265 = icmp ult i64 %238, 24
  br i1 %265, label %283, label %266

266:                                              ; preds = %261, %368
  %267 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %370, %368 ], [ %263, %261 ]
  %268 = phi i64 [ %369, %368 ], [ %264, %261 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %278, label %272

272:                                              ; preds = %266
  %273 = ptrtoint i8* %270 to i64
  %274 = inttoptr i64 %268 to %"class.base::internal::UncheckedObserverAdapter"*
  %275 = inttoptr i64 %268 to i64*
  store i64 %273, i64* %275, align 8
  %276 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 1
  %277 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %276 to i64
  br label %278

278:                                              ; preds = %272, %266
  %279 = phi i64 [ %268, %266 ], [ %277, %272 ]
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 1, i32 0
  %281 = load i8*, i8** %280, align 8
  %282 = icmp eq i8* %281, null
  br i1 %282, label %346, label %340

283:                                              ; preds = %368, %261
  %284 = phi i64 [ %262, %261 ], [ %369, %368 ]
  %285 = inttoptr i64 %284 to %"class.base::internal::UncheckedObserverAdapter"*
  %286 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  br label %287

287:                                              ; preds = %283, %232
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %218, %232 ], [ %286, %283 ]
  %289 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %232 ], [ %285, %283 ]
  %290 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %289, %288
  br i1 %290, label %292, label %291

291:                                              ; preds = %287
  store %"class.base::internal::UncheckedObserverAdapter"* %289, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  br label %292

292:                                              ; preds = %225, %291, %287, %228, %206
  %293 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %7, align 8
  %294 = icmp eq %"class.base::ObserverList.155"* %293, null
  br i1 %294, label %296, label %295

295:                                              ; preds = %292
  store %"class.base::ObserverList.155"* null, %"class.base::ObserverList.155"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #14
  br label %296

296:                                              ; preds = %203, %292, %295
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #14
  ret void

297:                                              ; preds = %103
  %298 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %70, i64 0, i32 0, i32 0, i32 0
  %299 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %298, align 8
  %300 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %299, i64 %106
  %301 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %300 to %"class.aura::WindowEventDispatcherObserver"**
  %302 = load %"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcherObserver"** %301, align 8
  %303 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %67, align 8
  %304 = bitcast %"class.aura::WindowEventDispatcherObserver"* %302 to void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)***
  %305 = load void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)**, void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)*** %304, align 8
  %306 = getelementptr inbounds void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)*, void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)** %305, i64 1
  %307 = load void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)*, void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)** %306, align 8
  call void %307(%"class.aura::WindowEventDispatcherObserver"* %302, %"class.aura::WindowEventDispatcher"* %303) #14
  %308 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %7, align 8
  %309 = icmp eq %"class.base::ObserverList.155"* %308, null
  br i1 %309, label %310, label %311

310:                                              ; preds = %335, %331, %297, %311, %325
  br label %69

311:                                              ; preds = %297
  %312 = load i64, i64* %8, align 8
  %313 = add i64 %312, 1
  store i64 %313, i64* %8, align 8
  %314 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %308, i64 0, i32 0, i32 0, i32 1
  %315 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %314 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = bitcast %"class.base::ObserverList.155"* %308 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = sub i64 %316, %318
  %320 = ashr exact i64 %319, 3
  %321 = load i64, i64* %9, align 8
  %322 = icmp ult i64 %320, %321
  %323 = select i1 %322, i64 %320, i64 %321
  %324 = icmp ult i64 %313, %323
  br i1 %324, label %325, label %310

325:                                              ; preds = %311
  %326 = inttoptr i64 %318 to %"class.base::internal::UncheckedObserverAdapter"*
  %327 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %308, i64 0, i32 0, i32 0, i32 0
  %328 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %326, i64 %313, i32 0
  %329 = load i8*, i8** %328, align 8
  %330 = icmp eq i8* %329, null
  br i1 %330, label %331, label %310

331:                                              ; preds = %325, %335
  %332 = phi i64 [ %333, %335 ], [ %313, %325 ]
  %333 = add nuw i64 %332, 1
  store i64 %333, i64* %8, align 8
  %334 = icmp ult i64 %333, %323
  br i1 %334, label %335, label %310

335:                                              ; preds = %331
  %336 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %327, align 8
  %337 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %336, i64 %333, i32 0
  %338 = load i8*, i8** %337, align 8
  %339 = icmp eq i8* %338, null
  br i1 %339, label %331, label %310

340:                                              ; preds = %278
  %341 = ptrtoint i8* %281 to i64
  %342 = inttoptr i64 %279 to %"class.base::internal::UncheckedObserverAdapter"*
  %343 = inttoptr i64 %279 to i64*
  store i64 %341, i64* %343, align 8
  %344 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %342, i64 1
  %345 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %344 to i64
  br label %346

346:                                              ; preds = %340, %278
  %347 = phi i64 [ %279, %278 ], [ %345, %340 ]
  %348 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 2, i32 0
  %349 = load i8*, i8** %348, align 8
  %350 = icmp eq i8* %349, null
  br i1 %350, label %357, label %351

351:                                              ; preds = %346
  %352 = ptrtoint i8* %349 to i64
  %353 = inttoptr i64 %347 to %"class.base::internal::UncheckedObserverAdapter"*
  %354 = inttoptr i64 %347 to i64*
  store i64 %352, i64* %354, align 8
  %355 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %353, i64 1
  %356 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %355 to i64
  br label %357

357:                                              ; preds = %351, %346
  %358 = phi i64 [ %347, %346 ], [ %356, %351 ]
  %359 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 3, i32 0
  %360 = load i8*, i8** %359, align 8
  %361 = icmp eq i8* %360, null
  br i1 %361, label %368, label %362

362:                                              ; preds = %357
  %363 = ptrtoint i8* %360 to i64
  %364 = inttoptr i64 %358 to %"class.base::internal::UncheckedObserverAdapter"*
  %365 = inttoptr i64 %358 to i64*
  store i64 %363, i64* %365, align 8
  %366 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 1
  %367 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %366 to i64
  br label %368

368:                                              ; preds = %362, %357
  %369 = phi i64 [ %358, %357 ], [ %367, %362 ]
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 4
  %371 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %370, %218
  br i1 %371, label %283, label %266

372:                                              ; preds = %185
  %373 = ptrtoint i8* %188 to i64
  %374 = inttoptr i64 %186 to %"class.base::internal::UncheckedObserverAdapter"*
  %375 = inttoptr i64 %186 to i64*
  store i64 %373, i64* %375, align 8
  %376 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %374, i64 1
  %377 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %376 to i64
  br label %378

378:                                              ; preds = %372, %185
  %379 = phi i64 [ %186, %185 ], [ %377, %372 ]
  %380 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 2, i32 0
  %381 = load i8*, i8** %380, align 8
  %382 = icmp eq i8* %381, null
  br i1 %382, label %389, label %383

383:                                              ; preds = %378
  %384 = ptrtoint i8* %381 to i64
  %385 = inttoptr i64 %379 to %"class.base::internal::UncheckedObserverAdapter"*
  %386 = inttoptr i64 %379 to i64*
  store i64 %384, i64* %386, align 8
  %387 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %385, i64 1
  %388 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %387 to i64
  br label %389

389:                                              ; preds = %383, %378
  %390 = phi i64 [ %379, %378 ], [ %388, %383 ]
  %391 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 3, i32 0
  %392 = load i8*, i8** %391, align 8
  %393 = icmp eq i8* %392, null
  br i1 %393, label %400, label %394

394:                                              ; preds = %389
  %395 = ptrtoint i8* %392 to i64
  %396 = inttoptr i64 %390 to %"class.base::internal::UncheckedObserverAdapter"*
  %397 = inttoptr i64 %390 to i64*
  store i64 %395, i64* %397, align 8
  %398 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %396, i64 1
  %399 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %398 to i64
  br label %400

400:                                              ; preds = %394, %389
  %401 = phi i64 [ %390, %389 ], [ %399, %394 ]
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 4
  %403 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %402, %125
  br i1 %403, label %190, label %173
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcherC2EPNS_14WindowTreeHostE(%"class.aura::WindowEventDispatcher"*, %"class.aura::WindowTreeHost"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 0
  tail call void @_ZN2ui14EventProcessorC2Ev(%"class.ui::EventProcessor"* %3) #14
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 1
  %5 = bitcast %"class.ui::GestureEventHelper"* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2ui18GestureEventHelperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4aura6client15CaptureDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 3
  tail call void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"* %6) #14
  %7 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.aura::EnvObserver", %"class.aura::EnvObserver"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }, { [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }* @_ZTVN4aura21WindowEventDispatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }, { [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }* @_ZTVN4aura21WindowEventDispatcherE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = bitcast %"class.ui::GestureEventHelper"* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }, { [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }* @_ZTVN4aura21WindowEventDispatcherE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }, { [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }* @_ZTVN4aura21WindowEventDispatcherE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %11, align 8
  %12 = getelementptr inbounds %"class.aura::WindowObserver", %"class.aura::WindowObserver"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }, { [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }* @_ZTVN4aura21WindowEventDispatcherE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }, { [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }* @_ZTVN4aura21WindowEventDispatcherE, i64 0, inrange i32 5, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %13 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  store %"class.aura::WindowTreeHost"* %1, %"class.aura::WindowTreeHost"** %13, align 8
  %14 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 11
  %16 = bitcast %"class.aura::Window"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 40, i1 false)
  tail call void @_ZN2ui38FractionOfTimeWithoutUserInputRecorderC1Ev(%"class.ui::FractionOfTimeWithoutUserInputRecorder"* %15) #14
  %17 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 12
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 13
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 14
  %20 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 0
  %21 = bitcast i32* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 28, i1 false)
  store %"class.aura::WindowObserver"* %6, %"class.aura::WindowObserver"** %20, align 8
  %22 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 1
  %23 = bitcast %"class.std::__1::vector.60"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #14
  %24 = tail call i8* @_Znwm(i64 48) #15
  %25 = bitcast i8* %24 to %"class.aura::WindowTargeter"*
  tail call void @_ZN4aura14WindowTargeterC1Ev(%"class.aura::WindowTargeter"* nonnull %25) #14
  %26 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %27 = bitcast %"class.aura::WindowTargeter"** %26 to i8**
  store i8* %24, i8** %27, align 8
  %28 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 20
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 24, i32 0
  %31 = ptrtoint %"class.aura::WindowEventDispatcher"* %0 to i64
  %32 = bitcast %"class.base::internal::BindStateBase"** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 57, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %30, i64 %31) #14
  %33 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 25, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %33, i64 %31) #14
  %34 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %35 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %34, i64 0, i32 11, i32 0, i32 0, i32 0
  %36 = load %"class.ui::GestureRecognizer"*, %"class.ui::GestureRecognizer"** %35, align 8
  %37 = bitcast %"class.ui::GestureRecognizer"* %36 to void (%"class.ui::GestureRecognizer"*, %"class.ui::GestureEventHelper"*)***
  %38 = load void (%"class.ui::GestureRecognizer"*, %"class.ui::GestureEventHelper"*)**, void (%"class.ui::GestureRecognizer"*, %"class.ui::GestureEventHelper"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.ui::GestureRecognizer"*, %"class.ui::GestureEventHelper"*)*, void (%"class.ui::GestureRecognizer"*, %"class.ui::GestureEventHelper"*)** %38, i64 14
  %40 = load void (%"class.ui::GestureRecognizer"*, %"class.ui::GestureEventHelper"*)*, void (%"class.ui::GestureRecognizer"*, %"class.ui::GestureEventHelper"*)** %39, align 8
  tail call void %40(%"class.ui::GestureRecognizer"* %36, %"class.ui::GestureEventHelper"* %4) #14
  %41 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  tail call void @_ZN4aura3Env11AddObserverEPNS_11EnvObserverE(%"class.aura::Env"* %41, %"class.aura::EnvObserver"* %7) #14
  ret void
}

declare void @_ZN2ui14EventProcessorC2Ev(%"class.ui::EventProcessor"*) unnamed_addr #2

declare void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"*) unnamed_addr #2

declare void @_ZN2ui38FractionOfTimeWithoutUserInputRecorderC1Ev(%"class.ui::FractionOfTimeWithoutUserInputRecorder"*) unnamed_addr #2

declare void @_ZN4aura3Env11AddObserverEPNS_11EnvObserverE(%"class.aura::Env"*, %"class.aura::EnvObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcherD2Ev(%"class.aura::WindowEventDispatcher"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }, { [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }* @_ZTVN4aura21WindowEventDispatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }, { [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }* @_ZTVN4aura21WindowEventDispatcherE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 1
  %6 = bitcast %"class.ui::GestureEventHelper"* %5 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }, { [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }* @_ZTVN4aura21WindowEventDispatcherE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }, { [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }* @_ZTVN4aura21WindowEventDispatcherE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.aura::WindowObserver", %"class.aura::WindowObserver"* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }, { [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }* @_ZTVN4aura21WindowEventDispatcherE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.aura::EnvObserver", %"class.aura::EnvObserver"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }, { [30 x i8*], [5 x i8*], [7 x i8*], [8 x i8*], [30 x i8*], [8 x i8*] }* @_ZTVN4aura21WindowEventDispatcherE, i64 0, inrange i32 5, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 117, i32 0), align 16
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %20, label %14, !prof !19

14:                                               ; preds = %1
  %15 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #14
  %16 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %18 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  store i64 %18, i64* %17, align 8
  %19 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 117, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %15, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  br label %20

20:                                               ; preds = %1, %14
  %21 = phi i64 [ -6148914691236517206, %1 ], [ %19, %14 ]
  %22 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), %14 ]
  %23 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 117, i32 0), %14 ]
  %24 = call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %25 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %24, i64 0, i32 11, i32 0, i32 0, i32 0
  %26 = load %"class.ui::GestureRecognizer"*, %"class.ui::GestureRecognizer"** %25, align 8
  %27 = bitcast %"class.ui::GestureRecognizer"* %26 to void (%"class.ui::GestureRecognizer"*, %"class.ui::GestureEventHelper"*)***
  %28 = load void (%"class.ui::GestureRecognizer"*, %"class.ui::GestureEventHelper"*)**, void (%"class.ui::GestureRecognizer"*, %"class.ui::GestureEventHelper"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.ui::GestureRecognizer"*, %"class.ui::GestureEventHelper"*)*, void (%"class.ui::GestureRecognizer"*, %"class.ui::GestureEventHelper"*)** %28, i64 15
  %30 = load void (%"class.ui::GestureRecognizer"*, %"class.ui::GestureEventHelper"*)*, void (%"class.ui::GestureRecognizer"*, %"class.ui::GestureEventHelper"*)** %29, align 8
  call void %30(%"class.ui::GestureRecognizer"* %26, %"class.ui::GestureEventHelper"* %5) #14
  %31 = call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  call void @_ZN4aura3Env14RemoveObserverEPNS_11EnvObserverE(%"class.aura::Env"* %31, %"class.aura::EnvObserver"* %9) #14
  %32 = icmp eq i8* %23, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %20
  %34 = load i8, i8* %23, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %23, i8* %22, i64 %21) #14
  br label %37

37:                                               ; preds = %20, %33, %36
  %38 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 25, i32 0
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %38) #14
  %39 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 24, i32 0
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %39) #14
  %40 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 22
  %41 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %40, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseINS_10unique_ptrIN4aura21WindowEventDispatcher16ObserverNotifierENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE5clearEv(%"class.std::__1::__deque_base"* %41) #14
  %42 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1
  %43 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %42, align 8
  %44 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 2
  %45 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %44, align 8
  %46 = icmp eq %"class.std::__1::unique_ptr.139"** %43, %45
  br i1 %46, label %65, label %47

47:                                               ; preds = %37, %47
  %48 = phi %"class.std::__1::unique_ptr.139"** [ %51, %47 ], [ %43, %37 ]
  %49 = bitcast %"class.std::__1::unique_ptr.139"** %48 to i8**
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #15
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %48, i64 1
  %52 = icmp eq %"class.std::__1::unique_ptr.139"** %51, %45
  br i1 %52, label %53, label %47

53:                                               ; preds = %47
  %54 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %42, align 8
  %55 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %44, align 8
  %56 = icmp eq %"class.std::__1::unique_ptr.139"** %55, %54
  br i1 %56, label %65, label %57

57:                                               ; preds = %53
  %58 = ptrtoint %"class.std::__1::unique_ptr.139"** %54 to i64
  %59 = getelementptr %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %55, i64 -1
  %60 = ptrtoint %"class.std::__1::unique_ptr.139"** %59 to i64
  %61 = sub i64 %60, %58
  %62 = lshr i64 %61, 3
  %63 = xor i64 %62, -1
  %64 = getelementptr %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %55, i64 %63
  store %"class.std::__1::unique_ptr.139"** %64, %"class.std::__1::unique_ptr.139"*** %44, align 8
  br label %65

65:                                               ; preds = %57, %53, %37
  %66 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %66, align 8
  %68 = icmp eq %"class.std::__1::unique_ptr.139"** %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = bitcast %"class.std::__1::unique_ptr.139"** %67 to i8*
  call void @_ZdlPv(i8* %70) #15
  br label %71

71:                                               ; preds = %65, %69
  %72 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 21, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %72) #14
  %73 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %74 = load %"class.aura::WindowTargeter"*, %"class.aura::WindowTargeter"** %73, align 8
  store %"class.aura::WindowTargeter"* null, %"class.aura::WindowTargeter"** %73, align 8
  %75 = icmp eq %"class.aura::WindowTargeter"* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %71
  %77 = bitcast %"class.aura::WindowTargeter"* %74 to void (%"class.aura::WindowTargeter"*)***
  %78 = load void (%"class.aura::WindowTargeter"*)**, void (%"class.aura::WindowTargeter"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.aura::WindowTargeter"*)*, void (%"class.aura::WindowTargeter"*)** %78, i64 1
  %80 = load void (%"class.aura::WindowTargeter"*)*, void (%"class.aura::WindowTargeter"*)** %79, align 8
  call void %80(%"class.aura::WindowTargeter"* nonnull %74) #14
  br label %81

81:                                               ; preds = %71, %76
  %82 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 1
  %83 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.aura::Window"**, %"class.aura::Window"*** %83, align 8
  %85 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 1, i32 0, i32 1
  %86 = load %"class.aura::Window"**, %"class.aura::Window"*** %85, align 8
  %87 = icmp eq %"class.aura::Window"** %84, %86
  br i1 %87, label %88, label %90

88:                                               ; preds = %81
  %89 = ptrtoint %"class.aura::Window"** %84 to i64
  br label %102

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 0
  br label %96

92:                                               ; preds = %96
  %93 = bitcast %"class.std::__1::vector.60"* %82 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %94 to %"class.aura::Window"**
  br label %102

96:                                               ; preds = %96, %90
  %97 = phi %"class.aura::Window"** [ %84, %90 ], [ %100, %96 ]
  %98 = load %"class.aura::Window"*, %"class.aura::Window"** %97, align 8
  %99 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %91, align 8
  call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %98, %"class.aura::WindowObserver"* %99) #14
  %100 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %97, i64 1
  %101 = icmp eq %"class.aura::Window"** %100, %86
  br i1 %101, label %92, label %96

102:                                              ; preds = %92, %88
  %103 = phi %"class.aura::Window"** [ %84, %88 ], [ %95, %92 ]
  %104 = phi i64 [ %89, %88 ], [ %94, %92 ]
  %105 = bitcast %"class.aura::Window"*** %85 to i64*
  store i64 %104, i64* %105, align 8
  %106 = icmp eq %"class.aura::Window"** %103, null
  br i1 %106, label %110, label %107

107:                                              ; preds = %102
  %108 = ptrtoint %"class.aura::Window"** %103 to i64
  store i64 %108, i64* %105, align 8
  %109 = bitcast %"class.aura::Window"** %103 to i8*
  call void @_ZdlPv(i8* %109) #15
  br label %110

110:                                              ; preds = %102, %107
  %111 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %112 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %111, align 8
  store %"class.ui::LocatedEvent"* null, %"class.ui::LocatedEvent"** %111, align 8
  %113 = icmp eq %"class.ui::LocatedEvent"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %110
  %115 = bitcast %"class.ui::LocatedEvent"* %112 to void (%"class.ui::LocatedEvent"*)***
  %116 = load void (%"class.ui::LocatedEvent"*)**, void (%"class.ui::LocatedEvent"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %116, i64 1
  %118 = load void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %117, align 8
  call void %118(%"class.ui::LocatedEvent"* nonnull %112) #14
  br label %119

119:                                              ; preds = %110, %114
  %120 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %121 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %120, align 8
  store %"class.ui::LocatedEvent"* null, %"class.ui::LocatedEvent"** %120, align 8
  %122 = icmp eq %"class.ui::LocatedEvent"* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %119
  %124 = bitcast %"class.ui::LocatedEvent"* %121 to void (%"class.ui::LocatedEvent"*)***
  %125 = load void (%"class.ui::LocatedEvent"*)**, void (%"class.ui::LocatedEvent"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %125, i64 1
  %127 = load void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %126, align 8
  call void %127(%"class.ui::LocatedEvent"* nonnull %121) #14
  br label %128

128:                                              ; preds = %119, %123
  call void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"* %7) #14
  %129 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 0
  call void @_ZN2ui14EventProcessorD2Ev(%"class.ui::EventProcessor"* %129) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4aura3Env14RemoveObserverEPNS_11EnvObserverE(%"class.aura::Env"*, %"class.aura::EnvObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2ui14EventProcessorD2Ev(%"class.ui::EventProcessor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N4aura21WindowEventDispatcherD1Ev(%"class.aura::WindowEventDispatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 25
  %3 = bitcast %"class.base::WeakPtrFactory.154"* %2 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcherD2Ev(%"class.aura::WindowEventDispatcher"* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N4aura21WindowEventDispatcherD1Ev(%"class.aura::WindowEventDispatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 23
  %3 = bitcast i8* %2 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcherD2Ev(%"class.aura::WindowEventDispatcher"* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N4aura21WindowEventDispatcherD1Ev(%"class.aura::WindowEventDispatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.150"* %2 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcherD2Ev(%"class.aura::WindowEventDispatcher"* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N4aura21WindowEventDispatcherD1Ev(%"class.aura::WindowEventDispatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcherD2Ev(%"class.aura::WindowEventDispatcher"* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N4aura21WindowEventDispatcherD1Ev(%"class.aura::WindowEventDispatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.std::__1::unique_ptr.139"*** %2 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcherD2Ev(%"class.aura::WindowEventDispatcher"* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcherD0Ev(%"class.aura::WindowEventDispatcher"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4aura21WindowEventDispatcherD2Ev(%"class.aura::WindowEventDispatcher"* %0) #14
  %2 = bitcast %"class.aura::WindowEventDispatcher"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N4aura21WindowEventDispatcherD0Ev(%"class.aura::WindowEventDispatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 25
  %3 = bitcast %"class.base::WeakPtrFactory.154"* %2 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcherD2Ev(%"class.aura::WindowEventDispatcher"* %3) #14
  %4 = bitcast %"class.base::WeakPtrFactory.154"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N4aura21WindowEventDispatcherD0Ev(%"class.aura::WindowEventDispatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 23
  %3 = bitcast i8* %2 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcherD2Ev(%"class.aura::WindowEventDispatcher"* %3) #14
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N4aura21WindowEventDispatcherD0Ev(%"class.aura::WindowEventDispatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.150"* %2 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcherD2Ev(%"class.aura::WindowEventDispatcher"* %3) #14
  %4 = bitcast %"class.std::__1::__compressed_pair.150"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N4aura21WindowEventDispatcherD0Ev(%"class.aura::WindowEventDispatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcherD2Ev(%"class.aura::WindowEventDispatcher"* %3) #14
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N4aura21WindowEventDispatcherD0Ev(%"class.aura::WindowEventDispatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.std::__1::unique_ptr.139"*** %2 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcherD2Ev(%"class.aura::WindowEventDispatcher"* %3) #14
  %4 = bitcast %"class.std::__1::unique_ptr.139"*** %2 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4aura21WindowEventDispatcher8ShutdownEv(%"class.aura::WindowEventDispatcher"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 23
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.ui::EventTargeter"* @_ZN4aura21WindowEventDispatcher23GetDefaultEventTargeterEv(%"class.aura::WindowEventDispatcher"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %3 = load %"class.aura::WindowTargeter"*, %"class.aura::WindowTargeter"** %2, align 8
  %4 = getelementptr inbounds %"class.aura::WindowTargeter", %"class.aura::WindowTargeter"* %3, i64 0, i32 0
  ret %"class.ui::EventTargeter"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher11RepostEventEPKN2ui12LocatedEventE(%"class.aura::WindowEventDispatcher"*, %"class.ui::LocatedEvent"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::WeakPtr.250", align 8
  %7 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %1, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %60 [
    i32 1, label %10
    i32 12, label %47
  ]

10:                                               ; preds = %2
  %11 = tail call %"class.ui::MouseEvent"* @_ZNK2ui5Event12AsMouseEventEv(%"class.ui::Event"* %7) #14
  %12 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %1, i64 0, i32 0, i32 8
  %13 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %12, align 8
  %14 = icmp eq %"class.ui::EventTarget"* %13, null
  %15 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %13, i64 -2, i32 2, i32 0, i32 1
  %16 = bitcast %"class.ui::EventHandler"*** %15 to %"class.aura::Window"*
  %17 = select i1 %14, %"class.aura::Window"* null, %"class.aura::Window"* %16
  %18 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %19 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %18, align 8
  %20 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %19, i64 0, i32 4
  %21 = load %"class.aura::Window"*, %"class.aura::Window"** %20, align 8
  %22 = tail call i8* @_Znwm(i64 216) #15
  %23 = bitcast i8* %22 to %"class.ui::LocatedEvent"*
  %24 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %11, i64 0, i32 0
  tail call void @_ZN2ui12LocatedEventC2IN4aura6WindowEEERKS0_PT_S7_(%"class.ui::LocatedEvent"* nonnull %23, %"class.ui::LocatedEvent"* dereferenceable(160) %24, %"class.aura::Window"* %17, %"class.aura::Window"* %21) #14
  %25 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui10MouseEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 160
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %11, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %27, align 8
  %30 = getelementptr inbounds i8, i8* %22, i64 164
  %31 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %11, i64 0, i32 2
  %32 = bitcast %"class.gfx::Vector2dF"* %31 to i64*
  %33 = bitcast i8* %30 to i64*
  %34 = load i64, i64* %32, align 4
  store i64 %34, i64* %33, align 4
  %35 = getelementptr inbounds i8, i8* %22, i64 172
  %36 = bitcast i8* %35 to %"struct.ui::PointerDetails"*
  %37 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %11, i64 0, i32 3
  tail call void @_ZN2ui14PointerDetailsC1ERKS0_(%"struct.ui::PointerDetails"* %36, %"struct.ui::PointerDetails"* dereferenceable(44) %37) #14
  %38 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %39 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %38, align 8
  %40 = bitcast %"class.ui::LocatedEvent"** %38 to i8**
  store i8* %22, i8** %40, align 8
  %41 = icmp eq %"class.ui::LocatedEvent"* %39, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %10
  %43 = bitcast %"class.ui::LocatedEvent"* %39 to void (%"class.ui::LocatedEvent"*)***
  %44 = load void (%"class.ui::LocatedEvent"*)**, void (%"class.ui::LocatedEvent"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %44, i64 1
  %46 = load void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %45, align 8
  tail call void %46(%"class.ui::LocatedEvent"* nonnull %39) #14
  br label %69

47:                                               ; preds = %2
  %48 = tail call %"class.ui::TouchEvent"* @_ZNK2ui5Event12AsTouchEventEv(%"class.ui::Event"* %7) #14
  %49 = tail call i8* @_Znwm(i64 216) #15
  %50 = bitcast i8* %49 to %"class.ui::TouchEvent"*
  tail call void @_ZN2ui10TouchEventC1ERKS0_(%"class.ui::TouchEvent"* nonnull %50, %"class.ui::TouchEvent"* dereferenceable(216) %48) #14
  %51 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %52 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %51, align 8
  %53 = bitcast %"class.ui::LocatedEvent"** %51 to i8**
  store i8* %49, i8** %53, align 8
  %54 = icmp eq %"class.ui::LocatedEvent"* %52, null
  br i1 %54, label %69, label %55

55:                                               ; preds = %47
  %56 = bitcast %"class.ui::LocatedEvent"* %52 to void (%"class.ui::LocatedEvent"*)***
  %57 = load void (%"class.ui::LocatedEvent"*)**, void (%"class.ui::LocatedEvent"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %57, i64 1
  %59 = load void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %58, align 8
  tail call void %59(%"class.ui::LocatedEvent"* nonnull %52) #14
  br label %69

60:                                               ; preds = %2
  %61 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %62 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %61, align 8
  store %"class.ui::LocatedEvent"* null, %"class.ui::LocatedEvent"** %61, align 8
  %63 = icmp eq %"class.ui::LocatedEvent"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.ui::LocatedEvent"* %62 to void (%"class.ui::LocatedEvent"*)***
  %66 = load void (%"class.ui::LocatedEvent"*)**, void (%"class.ui::LocatedEvent"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %66, i64 1
  %68 = load void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %67, align 8
  tail call void %68(%"class.ui::LocatedEvent"* nonnull %62) #14
  br label %69

69:                                               ; preds = %64, %60, %47, %55, %10, %42
  %70 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %71 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %70, align 8
  %72 = icmp eq %"class.ui::LocatedEvent"* %71, null
  br i1 %72, label %98, label %73

73:                                               ; preds = %69
  %74 = tail call dereferenceable(8) %class.scoped_refptr.248* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #14
  %75 = bitcast %class.scoped_refptr.248* %74 to %"class.base::SequencedTaskRunner"**
  %76 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %75, align 8
  %77 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %77) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i32 135) #14
  %78 = bitcast %"class.base::WeakPtr.250"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #14
  %79 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #14, !noalias !20
  %80 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 24, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %80) #14, !noalias !20
  %81 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 24, i32 0, i32 1
  %82 = load i64, i64* %81, align 8, !noalias !20
  %83 = getelementptr inbounds %"class.base::WeakPtr.250", %"class.base::WeakPtr.250"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %83, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %82) #14
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #14, !noalias !20
  %84 = call i8* @_Znwm(i64 64) #15, !noalias !23
  %85 = bitcast i8* %84 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %85, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE) #14, !noalias !23
  %86 = getelementptr inbounds i8, i8* %84, i64 32
  %87 = bitcast i8* %86 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i24 (%"class.aura::WindowEventDispatcher"*)* @_ZN4aura21WindowEventDispatcher18DispatchHeldEventsEv to i64), i64 0>, <2 x i64>* %87, align 8, !noalias !23
  %88 = getelementptr inbounds i8, i8* %84, i64 48
  %89 = bitcast i8* %88 to %"class.base::internal::WeakReference"*
  %90 = getelementptr inbounds %"class.base::WeakPtr.250", %"class.base::WeakPtr.250"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %89, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %90) #14, !noalias !23
  %91 = getelementptr inbounds i8, i8* %84, i64 56
  %92 = bitcast i8* %91 to i64*
  %93 = getelementptr inbounds %"class.base::WeakPtr.250", %"class.base::WeakPtr.250"* %6, i64 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8, !noalias !23
  store i64 %94, i64* %92, align 8, !noalias !23
  %95 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %84, i8** %95, align 8, !alias.scope !23
  %96 = call zeroext i1 @_ZN4base19SequencedTaskRunner19PostNonNestableTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::SequencedTaskRunner"* %76, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #14
  %97 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %97) #14
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %83) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %77) #14
  br label %98

98:                                               ; preds = %69, %73
  ret void
}

declare %"class.ui::MouseEvent"* @_ZNK2ui5Event12AsMouseEventEv(%"class.ui::Event"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.aura::Window"* @_ZN4aura21WindowEventDispatcher6windowEv(%"class.aura::WindowEventDispatcher"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %3 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %2, align 8
  %4 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %3, i64 0, i32 4
  %5 = load %"class.aura::Window"*, %"class.aura::Window"** %4, align 8
  ret %"class.aura::Window"* %5
}

declare %"class.ui::TouchEvent"* @_ZNK2ui5Event12AsTouchEventEv(%"class.ui::Event"*) local_unnamed_addr #2

declare dereferenceable(8) %class.scoped_refptr.248* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #2

declare zeroext i1 @_ZN4base19SequencedTaskRunner19PostNonNestableTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::SequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN4aura21WindowEventDispatcher18DispatchHeldEventsEv(%"class.aura::WindowEventDispatcher"*) #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = alloca %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %8 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %7, align 8
  %9 = icmp eq %"class.ui::LocatedEvent"* %8, null
  br i1 %9, label %10, label %26

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %12 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %11, align 8
  %13 = icmp eq %"class.ui::LocatedEvent"* %12, null
  br i1 %13, label %14, label %26

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %16 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %15, align 8
  %17 = icmp eq %"class.base::internal::BindStateBase"* %16, null
  br i1 %17, label %444, label %18

18:                                               ; preds = %14
  %19 = ptrtoint %"class.base::internal::BindStateBase"* %16 to i64
  %20 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  %21 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %19, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %16, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %24, align 8
  tail call void %25(%"class.base::internal::BindStateBase"* nonnull %16) #14
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %444

26:                                               ; preds = %10, %1
  %27 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 17
  %28 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %27, align 8
  %29 = icmp eq %"class.ui::LocatedEvent"* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i32 763, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0)) #14
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  %33 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %7, align 8
  br label %34

34:                                               ; preds = %26, %30
  %35 = phi %"class.ui::LocatedEvent"* [ %8, %26 ], [ %33, %30 ]
  %36 = icmp eq %"class.ui::LocatedEvent"* %35, null
  br i1 %36, label %58, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %35, i64 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  switch i32 %39, label %58 [
    i32 1, label %40
    i32 12, label %40
  ]

40:                                               ; preds = %37, %37
  store %"class.ui::LocatedEvent"* null, %"class.ui::LocatedEvent"** %7, align 8
  store %"class.ui::LocatedEvent"* %35, %"class.ui::LocatedEvent"** %27, align 8
  %41 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 0
  %42 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %35, i64 0, i32 0
  %43 = bitcast %"class.aura::WindowEventDispatcher"* %0 to i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)***
  %44 = load i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)**, i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)*** %43, align 8
  %45 = getelementptr inbounds i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)*, i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)** %44, i64 5
  %46 = load i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)*, i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)** %45, align 8
  %47 = call i24 %46(%"class.ui::EventProcessor"* %41, %"class.ui::Event"* %42) #14
  %48 = trunc i24 %47 to i8
  %49 = lshr i24 %47, 8
  %50 = trunc i24 %49 to i8
  %51 = lshr i24 %47, 16
  %52 = trunc i24 %51 to i8
  %53 = bitcast %"class.ui::LocatedEvent"* %35 to void (%"class.ui::LocatedEvent"*)***
  %54 = load void (%"class.ui::LocatedEvent"*)**, void (%"class.ui::LocatedEvent"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %54, i64 1
  %56 = load void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %55, align 8
  call void %56(%"class.ui::LocatedEvent"* nonnull %35) #14
  %57 = icmp eq i8 %48, 0
  br i1 %57, label %58, label %444

58:                                               ; preds = %34, %37, %40
  %59 = phi i8 [ %52, %40 ], [ 0, %34 ], [ 0, %37 ]
  %60 = phi i8 [ %50, %40 ], [ 0, %34 ], [ 0, %37 ]
  %61 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %62 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %61, align 8
  %63 = icmp eq %"class.ui::LocatedEvent"* %62, null
  br i1 %63, label %96, label %64

64:                                               ; preds = %58
  store %"class.ui::LocatedEvent"* null, %"class.ui::LocatedEvent"** %61, align 8
  %65 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %62, i64 0, i32 0
  %66 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %62, i64 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, -11
  %69 = icmp ult i32 %68, 4
  br i1 %69, label %75, label %70

70:                                               ; preds = %64
  switch i32 %67, label %87 [
    i32 1, label %71
    i32 2, label %71
    i32 3, label %71
    i32 4, label %71
    i32 5, label %71
    i32 6, label %71
    i32 9, label %71
    i32 10, label %71
  ]

71:                                               ; preds = %70, %70, %70, %70, %70, %70, %70, %70
  %72 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 12
  %73 = load i8, i8* %72, align 8, !range !28
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %87

75:                                               ; preds = %71, %64
  store %"class.ui::LocatedEvent"* %62, %"class.ui::LocatedEvent"** %27, align 8
  %76 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 0
  %77 = bitcast %"class.aura::WindowEventDispatcher"* %0 to i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)***
  %78 = load i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)**, i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)*** %77, align 8
  %79 = getelementptr inbounds i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)*, i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)** %78, i64 5
  %80 = load i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)*, i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)** %79, align 8
  %81 = call i24 %80(%"class.ui::EventProcessor"* %76, %"class.ui::Event"* %65) #14
  %82 = trunc i24 %81 to i8
  %83 = lshr i24 %81, 8
  %84 = trunc i24 %83 to i8
  %85 = lshr i24 %81, 16
  %86 = trunc i24 %85 to i8
  br label %87

87:                                               ; preds = %70, %71, %75
  %88 = phi i8 [ %86, %75 ], [ %59, %71 ], [ %59, %70 ]
  %89 = phi i8 [ %84, %75 ], [ %60, %71 ], [ %60, %70 ]
  %90 = phi i8 [ %82, %75 ], [ 0, %71 ], [ 0, %70 ]
  %91 = bitcast %"class.ui::LocatedEvent"* %62 to void (%"class.ui::LocatedEvent"*)***
  %92 = load void (%"class.ui::LocatedEvent"*)**, void (%"class.ui::LocatedEvent"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %92, i64 1
  %94 = load void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %93, align 8
  call void %94(%"class.ui::LocatedEvent"* nonnull %62) #14
  %95 = icmp eq i8 %90, 0
  br i1 %95, label %96, label %444

96:                                               ; preds = %58, %87
  %97 = phi i8 [ %89, %87 ], [ %60, %58 ]
  %98 = phi i8 [ %88, %87 ], [ %59, %58 ]
  store %"class.ui::LocatedEvent"* null, %"class.ui::LocatedEvent"** %27, align 8
  %99 = call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %100 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %99, i64 0, i32 4
  %101 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %101) #14
  %102 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %103 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %104 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %105 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %100, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 40, i1 false)
  %107 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %105, align 8, !noalias !29
  %108 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %99, i64 0, i32 4, i32 0, i32 0, i32 1
  %109 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %108, align 8, !noalias !29
  %110 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %107, %109
  %111 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %111) #14
  br i1 %110, label %112, label %114

112:                                              ; preds = %96
  %113 = bitcast %"class.base::ObserverList.155"** %102 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 24, i1 false) #14, !alias.scope !29
  br label %154

114:                                              ; preds = %96
  store %"class.base::ObserverList.155"* %100, %"class.base::ObserverList.155"** %102, align 8, !alias.scope !29
  %115 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %99, i64 0, i32 4, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %111, %"class.base::internal::LinkNodeBase"* %115) #14
  store i64 0, i64* %103, align 8, !alias.scope !29
  %116 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %99, i64 0, i32 4, i32 3
  %117 = load i32, i32* %116, align 8, !noalias !29
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %126, label %119

119:                                              ; preds = %114
  %120 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %108 to i64*
  %121 = load i64, i64* %120, align 8, !noalias !29
  %122 = bitcast %"class.base::ObserverList.155"* %100 to i64*
  %123 = load i64, i64* %122, align 8, !noalias !29
  %124 = sub i64 %121, %123
  %125 = ashr exact i64 %124, 3
  br label %126

126:                                              ; preds = %119, %114
  %127 = phi i64 [ %125, %119 ], [ -1, %114 ]
  store i64 %127, i64* %104, align 8, !alias.scope !29
  %128 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %102, align 8, !alias.scope !29
  %129 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %128, i64 0, i32 0, i32 0, i32 1
  %130 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.base::ObserverList.155"* %128 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %131, %133
  %135 = ashr exact i64 %134, 3
  %136 = icmp ult i64 %135, %127
  %137 = select i1 %136, i64 %135, i64 %127
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %154, label %139

139:                                              ; preds = %126
  %140 = inttoptr i64 %133 to %"class.base::internal::UncheckedObserverAdapter"*
  %141 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %128, i64 0, i32 0, i32 0, i32 0
  %142 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %140, i64 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = icmp eq i8* %143, null
  br i1 %144, label %145, label %154

145:                                              ; preds = %139, %149
  %146 = phi i64 [ %147, %149 ], [ 0, %139 ]
  %147 = add nuw i64 %146, 1
  store i64 %147, i64* %103, align 8, !alias.scope !29
  %148 = icmp ult i64 %147, %137
  br i1 %148, label %149, label %154

149:                                              ; preds = %145
  %150 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %141, align 8
  %151 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 %147, i32 0
  %152 = load i8*, i8** %151, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %145, label %154

154:                                              ; preds = %145, %149, %112, %126, %139
  %155 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %155) #14
  %156 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %157 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %158 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %159 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  %160 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %159) #14
  %161 = bitcast %"class.base::ObserverList.155"** %156 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 24, i1 false) #14, !alias.scope !32
  %162 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %102, align 8
  br label %163

163:                                              ; preds = %406, %154
  %164 = phi %"class.base::ObserverList.155"* [ %162, %154 ], [ %404, %406 ]
  %165 = icmp eq %"class.base::ObserverList.155"* %164, null
  br i1 %165, label %181, label %166

166:                                              ; preds = %163
  %167 = load i64, i64* %103, align 8
  %168 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %164, i64 0, i32 0, i32 0, i32 1
  %169 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = bitcast %"class.base::ObserverList.155"* %164 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = sub i64 %170, %172
  %174 = ashr exact i64 %173, 3
  %175 = load i64, i64* %104, align 8
  %176 = icmp ult i64 %174, %175
  %177 = select i1 %176, i64 %174, i64 %175
  %178 = icmp eq i64 %167, %177
  br i1 %178, label %181, label %179

179:                                              ; preds = %166
  %180 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %156, align 8
  br label %197

181:                                              ; preds = %166, %163
  %182 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %156, align 8
  %183 = icmp eq %"class.base::ObserverList.155"* %182, null
  br i1 %183, label %297, label %184

184:                                              ; preds = %181
  %185 = load i64, i64* %157, align 8
  %186 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %182, i64 0, i32 0, i32 0, i32 1
  %187 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"class.base::ObserverList.155"* %182 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = sub i64 %188, %190
  %192 = ashr exact i64 %191, 3
  %193 = load i64, i64* %158, align 8
  %194 = icmp ult i64 %192, %193
  %195 = select i1 %194, i64 %192, i64 %193
  %196 = icmp eq i64 %185, %195
  br i1 %196, label %206, label %197

197:                                              ; preds = %184, %179
  %198 = phi %"class.base::ObserverList.155"* [ %180, %179 ], [ %182, %184 ]
  %199 = icmp eq %"class.base::ObserverList.155"* %164, %198
  %200 = load i64, i64* %103, align 8
  %201 = load i64, i64* %157, align 8
  %202 = icmp eq i64 %200, %201
  %203 = and i1 %199, %202
  br i1 %203, label %204, label %394

204:                                              ; preds = %197
  %205 = icmp eq %"class.base::ObserverList.155"* %164, null
  br i1 %205, label %297, label %206

206:                                              ; preds = %184, %204
  %207 = phi %"class.base::ObserverList.155"* [ %164, %204 ], [ %182, %184 ]
  %208 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %207, i64 0, i32 1
  %209 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %207, i64 0, i32 1, i32 0, i32 0, i32 1
  %210 = bitcast %"class.base::internal::LinkNodeBase"** %209 to %"class.base::LinkNode.157"**
  %211 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %210, align 8
  %212 = bitcast %"class.base::LinkedList.156"* %208 to %"class.base::LinkNode.157"**
  %213 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %212, align 8
  %214 = icmp eq %"class.base::LinkNode.157"* %211, %213
  br i1 %214, label %215, label %293

215:                                              ; preds = %206
  %216 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %207, i64 0, i32 0, i32 0, i32 0
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  %218 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %207, i64 0, i32 0, i32 0, i32 1
  %219 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  %220 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %217, %219
  br i1 %220, label %229, label %221

221:                                              ; preds = %215, %226
  %222 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %226 ], [ %217, %215 ]
  %223 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %222, i64 0, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = icmp eq i8* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %222, i64 1
  %228 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %227, %219
  br i1 %228, label %293, label %221

229:                                              ; preds = %221, %215
  %230 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %215 ], [ %222, %221 ]
  %231 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %230 to i64
  %232 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %230, %219
  br i1 %232, label %293, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %230, i64 1
  %235 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %234, %219
  br i1 %235, label %288, label %236

236:                                              ; preds = %233
  %237 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 -2, i32 0
  %238 = ptrtoint i8** %237 to i64
  %239 = sub i64 %238, %231
  %240 = lshr i64 %239, 3
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 3
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %262, label %244

244:                                              ; preds = %236, %257
  %245 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %259, %257 ], [ %234, %236 ]
  %246 = phi i64 [ %258, %257 ], [ %231, %236 ]
  %247 = phi i64 [ %260, %257 ], [ %242, %236 ]
  %248 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %245, i64 0, i32 0
  %249 = load i8*, i8** %248, align 8
  %250 = icmp eq i8* %249, null
  br i1 %250, label %257, label %251

251:                                              ; preds = %244
  %252 = ptrtoint i8* %249 to i64
  %253 = inttoptr i64 %246 to %"class.base::internal::UncheckedObserverAdapter"*
  %254 = inttoptr i64 %246 to i64*
  store i64 %252, i64* %254, align 8
  %255 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %253, i64 1
  %256 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %255 to i64
  br label %257

257:                                              ; preds = %251, %244
  %258 = phi i64 [ %246, %244 ], [ %256, %251 ]
  %259 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %245, i64 1
  %260 = add i64 %247, -1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %244, !llvm.loop !35

262:                                              ; preds = %257, %236
  %263 = phi i64 [ undef, %236 ], [ %258, %257 ]
  %264 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %234, %236 ], [ %259, %257 ]
  %265 = phi i64 [ %231, %236 ], [ %258, %257 ]
  %266 = icmp ult i64 %239, 24
  br i1 %266, label %284, label %267

267:                                              ; preds = %262, %515
  %268 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %517, %515 ], [ %264, %262 ]
  %269 = phi i64 [ %516, %515 ], [ %265, %262 ]
  %270 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 0, i32 0
  %271 = load i8*, i8** %270, align 8
  %272 = icmp eq i8* %271, null
  br i1 %272, label %279, label %273

273:                                              ; preds = %267
  %274 = ptrtoint i8* %271 to i64
  %275 = inttoptr i64 %269 to %"class.base::internal::UncheckedObserverAdapter"*
  %276 = inttoptr i64 %269 to i64*
  store i64 %274, i64* %276, align 8
  %277 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %275, i64 1
  %278 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %277 to i64
  br label %279

279:                                              ; preds = %273, %267
  %280 = phi i64 [ %269, %267 ], [ %278, %273 ]
  %281 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 1, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = icmp eq i8* %282, null
  br i1 %283, label %493, label %487

284:                                              ; preds = %515, %262
  %285 = phi i64 [ %263, %262 ], [ %516, %515 ]
  %286 = inttoptr i64 %285 to %"class.base::internal::UncheckedObserverAdapter"*
  %287 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  br label %288

288:                                              ; preds = %284, %233
  %289 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %219, %233 ], [ %287, %284 ]
  %290 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %230, %233 ], [ %286, %284 ]
  %291 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %290, %289
  br i1 %291, label %293, label %292

292:                                              ; preds = %288
  store %"class.base::internal::UncheckedObserverAdapter"* %290, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  br label %293

293:                                              ; preds = %226, %292, %288, %229, %206
  %294 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %156, align 8
  %295 = icmp eq %"class.base::ObserverList.155"* %294, null
  br i1 %295, label %297, label %296

296:                                              ; preds = %293
  store %"class.base::ObserverList.155"* null, %"class.base::ObserverList.155"** %156, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %159) #14
  br label %297

297:                                              ; preds = %181, %204, %293, %296
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %155) #14
  %298 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %102, align 8
  %299 = icmp eq %"class.base::ObserverList.155"* %298, null
  br i1 %299, label %390, label %300

300:                                              ; preds = %297
  %301 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %298, i64 0, i32 1
  %302 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %298, i64 0, i32 1, i32 0, i32 0, i32 1
  %303 = bitcast %"class.base::internal::LinkNodeBase"** %302 to %"class.base::LinkNode.157"**
  %304 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %303, align 8
  %305 = bitcast %"class.base::LinkedList.156"* %301 to %"class.base::LinkNode.157"**
  %306 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %305, align 8
  %307 = icmp eq %"class.base::LinkNode.157"* %304, %306
  br i1 %307, label %308, label %386

308:                                              ; preds = %300
  %309 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %298, i64 0, i32 0, i32 0, i32 0
  %310 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %309, align 8
  %311 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %298, i64 0, i32 0, i32 0, i32 1
  %312 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %311, align 8
  %313 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %310, %312
  br i1 %313, label %322, label %314

314:                                              ; preds = %308, %319
  %315 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %320, %319 ], [ %310, %308 ]
  %316 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %315, i64 0, i32 0
  %317 = load i8*, i8** %316, align 8
  %318 = icmp eq i8* %317, null
  br i1 %318, label %322, label %319

319:                                              ; preds = %314
  %320 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %315, i64 1
  %321 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %320, %312
  br i1 %321, label %386, label %314

322:                                              ; preds = %314, %308
  %323 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %310, %308 ], [ %315, %314 ]
  %324 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %323 to i64
  %325 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %323, %312
  br i1 %325, label %386, label %326

326:                                              ; preds = %322
  %327 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 1
  %328 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %327, %312
  br i1 %328, label %381, label %329

329:                                              ; preds = %326
  %330 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %312, i64 -2, i32 0
  %331 = ptrtoint i8** %330 to i64
  %332 = sub i64 %331, %324
  %333 = lshr i64 %332, 3
  %334 = add nuw nsw i64 %333, 1
  %335 = and i64 %334, 3
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %355, label %337

337:                                              ; preds = %329, %350
  %338 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %352, %350 ], [ %327, %329 ]
  %339 = phi i64 [ %351, %350 ], [ %324, %329 ]
  %340 = phi i64 [ %353, %350 ], [ %335, %329 ]
  %341 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %338, i64 0, i32 0
  %342 = load i8*, i8** %341, align 8
  %343 = icmp eq i8* %342, null
  br i1 %343, label %350, label %344

344:                                              ; preds = %337
  %345 = ptrtoint i8* %342 to i64
  %346 = inttoptr i64 %339 to %"class.base::internal::UncheckedObserverAdapter"*
  %347 = inttoptr i64 %339 to i64*
  store i64 %345, i64* %347, align 8
  %348 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %346, i64 1
  %349 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %348 to i64
  br label %350

350:                                              ; preds = %344, %337
  %351 = phi i64 [ %339, %337 ], [ %349, %344 ]
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %338, i64 1
  %353 = add i64 %340, -1
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %355, label %337, !llvm.loop !36

355:                                              ; preds = %350, %329
  %356 = phi i64 [ undef, %329 ], [ %351, %350 ]
  %357 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %327, %329 ], [ %352, %350 ]
  %358 = phi i64 [ %324, %329 ], [ %351, %350 ]
  %359 = icmp ult i64 %332, 24
  br i1 %359, label %377, label %360

360:                                              ; preds = %355, %483
  %361 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %485, %483 ], [ %357, %355 ]
  %362 = phi i64 [ %484, %483 ], [ %358, %355 ]
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 0, i32 0
  %364 = load i8*, i8** %363, align 8
  %365 = icmp eq i8* %364, null
  br i1 %365, label %372, label %366

366:                                              ; preds = %360
  %367 = ptrtoint i8* %364 to i64
  %368 = inttoptr i64 %362 to %"class.base::internal::UncheckedObserverAdapter"*
  %369 = inttoptr i64 %362 to i64*
  store i64 %367, i64* %369, align 8
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %368, i64 1
  %371 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %370 to i64
  br label %372

372:                                              ; preds = %366, %360
  %373 = phi i64 [ %362, %360 ], [ %371, %366 ]
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 1, i32 0
  %375 = load i8*, i8** %374, align 8
  %376 = icmp eq i8* %375, null
  br i1 %376, label %461, label %455

377:                                              ; preds = %483, %355
  %378 = phi i64 [ %356, %355 ], [ %484, %483 ]
  %379 = inttoptr i64 %378 to %"class.base::internal::UncheckedObserverAdapter"*
  %380 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %311, align 8
  br label %381

381:                                              ; preds = %377, %326
  %382 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %312, %326 ], [ %380, %377 ]
  %383 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %323, %326 ], [ %379, %377 ]
  %384 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %383, %382
  br i1 %384, label %386, label %385

385:                                              ; preds = %381
  store %"class.base::internal::UncheckedObserverAdapter"* %383, %"class.base::internal::UncheckedObserverAdapter"** %311, align 8
  br label %386

386:                                              ; preds = %319, %385, %381, %322, %300
  %387 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %102, align 8
  %388 = icmp eq %"class.base::ObserverList.155"* %387, null
  br i1 %388, label %390, label %389

389:                                              ; preds = %386
  store %"class.base::ObserverList.155"* null, %"class.base::ObserverList.155"** %102, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %111) #14
  br label %390

390:                                              ; preds = %297, %386, %389
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %101) #14
  %391 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %392 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %391, align 8
  %393 = icmp eq %"class.base::internal::BindStateBase"* %392, null
  br i1 %393, label %444, label %436

394:                                              ; preds = %197
  %395 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %164, i64 0, i32 0, i32 0, i32 0
  %396 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %395, align 8
  %397 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %396, i64 %200
  %398 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %397 to %"class.aura::WindowEventDispatcherObserver"**
  %399 = load %"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcherObserver"** %398, align 8
  %400 = bitcast %"class.aura::WindowEventDispatcherObserver"* %399 to void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)***
  %401 = load void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)**, void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)*** %400, align 8
  %402 = getelementptr inbounds void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)*, void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)** %401, i64 2
  %403 = load void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)*, void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)** %402, align 8
  call void %403(%"class.aura::WindowEventDispatcherObserver"* %399, %"class.aura::WindowEventDispatcher"* %0) #14
  %404 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %102, align 8
  %405 = icmp eq %"class.base::ObserverList.155"* %404, null
  br i1 %405, label %406, label %407

406:                                              ; preds = %431, %427, %394, %407, %421
  br label %163

407:                                              ; preds = %394
  %408 = load i64, i64* %103, align 8
  %409 = add i64 %408, 1
  store i64 %409, i64* %103, align 8
  %410 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %404, i64 0, i32 0, i32 0, i32 1
  %411 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %410 to i64*
  %412 = load i64, i64* %411, align 8
  %413 = bitcast %"class.base::ObserverList.155"* %404 to i64*
  %414 = load i64, i64* %413, align 8
  %415 = sub i64 %412, %414
  %416 = ashr exact i64 %415, 3
  %417 = load i64, i64* %104, align 8
  %418 = icmp ult i64 %416, %417
  %419 = select i1 %418, i64 %416, i64 %417
  %420 = icmp ult i64 %409, %419
  br i1 %420, label %421, label %406

421:                                              ; preds = %407
  %422 = inttoptr i64 %414 to %"class.base::internal::UncheckedObserverAdapter"*
  %423 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %404, i64 0, i32 0, i32 0, i32 0
  %424 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %422, i64 %409, i32 0
  %425 = load i8*, i8** %424, align 8
  %426 = icmp eq i8* %425, null
  br i1 %426, label %427, label %406

427:                                              ; preds = %421, %431
  %428 = phi i64 [ %429, %431 ], [ %409, %421 ]
  %429 = add nuw i64 %428, 1
  store i64 %429, i64* %103, align 8
  %430 = icmp ult i64 %429, %419
  br i1 %430, label %431, label %406

431:                                              ; preds = %427
  %432 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %423, align 8
  %433 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %432, i64 %429, i32 0
  %434 = load i8*, i8** %433, align 8
  %435 = icmp eq i8* %434, null
  br i1 %435, label %427, label %406

436:                                              ; preds = %390
  %437 = ptrtoint %"class.base::internal::BindStateBase"* %392 to i64
  %438 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %438) #14
  %439 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %437, i64* %439, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %391, align 8
  %440 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %441 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %392, i64 0, i32 1
  %442 = bitcast void ()** %441 to void (%"class.base::internal::BindStateBase"*)**
  %443 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %442, align 8
  call void %443(%"class.base::internal::BindStateBase"* nonnull %392) #14
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %440) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %438) #14
  br label %444

444:                                              ; preds = %390, %14, %40, %87, %436, %18
  %445 = phi i8 [ 0, %18 ], [ 0, %14 ], [ %52, %40 ], [ %88, %87 ], [ %98, %390 ], [ %98, %436 ]
  %446 = phi i8 [ 0, %18 ], [ 0, %14 ], [ %50, %40 ], [ %89, %87 ], [ %97, %390 ], [ %97, %436 ]
  %447 = phi i8 [ 0, %18 ], [ 0, %14 ], [ %48, %40 ], [ %90, %87 ], [ 0, %390 ], [ 0, %436 ]
  %448 = zext i8 %445 to i24
  %449 = shl nuw i24 %448, 16
  %450 = zext i8 %446 to i24
  %451 = shl nuw nsw i24 %450, 8
  %452 = or i24 %451, %449
  %453 = zext i8 %447 to i24
  %454 = or i24 %452, %453
  ret i24 %454

455:                                              ; preds = %372
  %456 = ptrtoint i8* %375 to i64
  %457 = inttoptr i64 %373 to %"class.base::internal::UncheckedObserverAdapter"*
  %458 = inttoptr i64 %373 to i64*
  store i64 %456, i64* %458, align 8
  %459 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %457, i64 1
  %460 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %459 to i64
  br label %461

461:                                              ; preds = %455, %372
  %462 = phi i64 [ %373, %372 ], [ %460, %455 ]
  %463 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 2, i32 0
  %464 = load i8*, i8** %463, align 8
  %465 = icmp eq i8* %464, null
  br i1 %465, label %472, label %466

466:                                              ; preds = %461
  %467 = ptrtoint i8* %464 to i64
  %468 = inttoptr i64 %462 to %"class.base::internal::UncheckedObserverAdapter"*
  %469 = inttoptr i64 %462 to i64*
  store i64 %467, i64* %469, align 8
  %470 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %468, i64 1
  %471 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %470 to i64
  br label %472

472:                                              ; preds = %466, %461
  %473 = phi i64 [ %462, %461 ], [ %471, %466 ]
  %474 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 3, i32 0
  %475 = load i8*, i8** %474, align 8
  %476 = icmp eq i8* %475, null
  br i1 %476, label %483, label %477

477:                                              ; preds = %472
  %478 = ptrtoint i8* %475 to i64
  %479 = inttoptr i64 %473 to %"class.base::internal::UncheckedObserverAdapter"*
  %480 = inttoptr i64 %473 to i64*
  store i64 %478, i64* %480, align 8
  %481 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %479, i64 1
  %482 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %481 to i64
  br label %483

483:                                              ; preds = %477, %472
  %484 = phi i64 [ %473, %472 ], [ %482, %477 ]
  %485 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 4
  %486 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %485, %312
  br i1 %486, label %377, label %360

487:                                              ; preds = %279
  %488 = ptrtoint i8* %282 to i64
  %489 = inttoptr i64 %280 to %"class.base::internal::UncheckedObserverAdapter"*
  %490 = inttoptr i64 %280 to i64*
  store i64 %488, i64* %490, align 8
  %491 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %489, i64 1
  %492 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %491 to i64
  br label %493

493:                                              ; preds = %487, %279
  %494 = phi i64 [ %280, %279 ], [ %492, %487 ]
  %495 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 2, i32 0
  %496 = load i8*, i8** %495, align 8
  %497 = icmp eq i8* %496, null
  br i1 %497, label %504, label %498

498:                                              ; preds = %493
  %499 = ptrtoint i8* %496 to i64
  %500 = inttoptr i64 %494 to %"class.base::internal::UncheckedObserverAdapter"*
  %501 = inttoptr i64 %494 to i64*
  store i64 %499, i64* %501, align 8
  %502 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %500, i64 1
  %503 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %502 to i64
  br label %504

504:                                              ; preds = %498, %493
  %505 = phi i64 [ %494, %493 ], [ %503, %498 ]
  %506 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 3, i32 0
  %507 = load i8*, i8** %506, align 8
  %508 = icmp eq i8* %507, null
  br i1 %508, label %515, label %509

509:                                              ; preds = %504
  %510 = ptrtoint i8* %507 to i64
  %511 = inttoptr i64 %505 to %"class.base::internal::UncheckedObserverAdapter"*
  %512 = inttoptr i64 %505 to i64*
  store i64 %510, i64* %512, align 8
  %513 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %511, i64 1
  %514 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %513 to i64
  br label %515

515:                                              ; preds = %509, %504
  %516 = phi i64 [ %505, %504 ], [ %514, %509 ]
  %517 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 4
  %518 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %517, %219
  br i1 %518, label %284, label %267
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher31OnMouseEventsEnableStateChangedEb(%"class.aura::WindowEventDispatcher"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4aura21WindowEventDispatcher23PostSynthesizeMouseMoveEv(%"class.aura::WindowEventDispatcher"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher23PostSynthesizeMouseMoveEv(%"class.aura::WindowEventDispatcher"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::WeakPtr.250", align 8
  %6 = tail call zeroext i1 @_ZN2ui19PlatformEventSource32ShouldIgnoreNativePlatformEventsEv() #14
  br i1 %6, label %40, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 12
  %9 = load i8, i8* %8, align 8, !range !28
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %40

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 23
  %13 = load i8, i8* %12, align 8, !range !28
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %40

15:                                               ; preds = %11
  store i8 1, i8* %8, align 8
  %16 = tail call dereferenceable(8) %class.scoped_refptr.248* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #14
  %17 = bitcast %class.scoped_refptr.248* %16 to %"class.base::SequencedTaskRunner"**
  %18 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %17, align 8
  %19 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i32 820) #14
  %20 = bitcast %"class.base::WeakPtr.250"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #14
  %21 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14, !noalias !37
  %22 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 25, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %22) #14, !noalias !37
  %23 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 25, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !37
  %25 = getelementptr inbounds %"class.base::WeakPtr.250", %"class.base::WeakPtr.250"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %25, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %24) #14
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14, !noalias !37
  %26 = call i8* @_Znwm(i64 64) #15, !noalias !40
  %27 = bitcast i8* %26 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %27, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE) #14, !noalias !40
  %28 = getelementptr inbounds i8, i8* %26, i64 32
  %29 = bitcast i8* %28 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i24 (%"class.aura::WindowEventDispatcher"*)* @_ZN4aura21WindowEventDispatcher24SynthesizeMouseMoveEventEv to i64), i64 0>, <2 x i64>* %29, align 8, !noalias !40
  %30 = getelementptr inbounds i8, i8* %26, i64 48
  %31 = bitcast i8* %30 to %"class.base::internal::WeakReference"*
  %32 = getelementptr inbounds %"class.base::WeakPtr.250", %"class.base::WeakPtr.250"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %31, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %32) #14, !noalias !40
  %33 = getelementptr inbounds i8, i8* %26, i64 56
  %34 = bitcast i8* %33 to i64*
  %35 = getelementptr inbounds %"class.base::WeakPtr.250", %"class.base::WeakPtr.250"* %5, i64 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8, !noalias !40
  store i64 %36, i64* %34, align 8, !noalias !40
  %37 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %26, i8** %37, align 8, !alias.scope !40
  %38 = call zeroext i1 @_ZN4base19SequencedTaskRunner19PostNonNestableTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::SequencedTaskRunner"* %18, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #14
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #14
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #14
  br label %40

40:                                               ; preds = %11, %7, %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher23DispatchCancelModeEventEv(%"class.aura::WindowEventDispatcher"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.ui::CancelModeEvent", align 8
  %3 = bitcast %"class.ui::CancelModeEvent"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %3) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 8 bitcast ({ { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" } }* @__const._ZN4aura21WindowEventDispatcher23DispatchCancelModeEventEv.event to i8*), i64 144, i1 false)
  call void @_ZN2ui15CancelModeEventC1Ev(%"class.ui::CancelModeEvent"* nonnull %2) #14
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %5 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %4, align 8
  %6 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %5, i64 0, i32 4
  %7 = load %"class.aura::Window"*, %"class.aura::Window"** %6, align 8
  %8 = call %"class.aura::client::FocusClient"* @_ZN4aura6client14GetFocusClientEPNS_6WindowE(%"class.aura::Window"* %7) #14
  %9 = bitcast %"class.aura::client::FocusClient"* %8 to %"class.aura::Window"* (%"class.aura::client::FocusClient"*)***
  %10 = load %"class.aura::Window"* (%"class.aura::client::FocusClient"*)**, %"class.aura::Window"* (%"class.aura::client::FocusClient"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.aura::Window"* (%"class.aura::client::FocusClient"*)*, %"class.aura::Window"* (%"class.aura::client::FocusClient"*)** %10, i64 6
  %12 = load %"class.aura::Window"* (%"class.aura::client::FocusClient"*)*, %"class.aura::Window"* (%"class.aura::client::FocusClient"*)** %11, align 8
  %13 = call %"class.aura::Window"* %12(%"class.aura::client::FocusClient"* %8) #14
  %14 = icmp eq %"class.aura::Window"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %4, align 8
  %17 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %16, i64 0, i32 4
  %18 = load %"class.aura::Window"*, %"class.aura::Window"** %17, align 8
  %19 = call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %18, %"class.aura::Window"* nonnull %13) #14
  br i1 %19, label %24, label %20

20:                                               ; preds = %1, %15
  %21 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %4, align 8
  %22 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %21, i64 0, i32 4
  %23 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  br label %24

24:                                               ; preds = %15, %20
  %25 = phi %"class.aura::Window"* [ %23, %20 ], [ %13, %15 ]
  %26 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 0, i32 0
  %27 = icmp eq %"class.aura::Window"* %25, null
  %28 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %25, i64 0, i32 2
  %29 = select i1 %27, %"class.ui::EventTarget"* null, %"class.ui::EventTarget"* %28
  %30 = getelementptr inbounds %"class.ui::CancelModeEvent", %"class.ui::CancelModeEvent"* %2, i64 0, i32 0
  %31 = call i24 @_ZN2ui23EventDispatcherDelegate13DispatchEventEPNS_11EventTargetEPNS_5EventE(%"class.ui::EventDispatcherDelegate"* %26, %"class.ui::EventTarget"* %29, %"class.ui::Event"* nonnull %30) #14
  call void @_ZN2ui15CancelModeEventD1Ev(%"class.ui::CancelModeEvent"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %3) #14
  ret void
}

declare void @_ZN2ui15CancelModeEventC1Ev(%"class.ui::CancelModeEvent"*) unnamed_addr #2

declare %"class.aura::client::FocusClient"* @_ZN4aura6client14GetFocusClientEPNS_6WindowE(%"class.aura::Window"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"*, %"class.aura::Window"*) local_unnamed_addr #2

declare i24 @_ZN2ui23EventDispatcherDelegate13DispatchEventEPNS_11EventTargetEPNS_5EventE(%"class.ui::EventDispatcherDelegate"*, %"class.ui::EventTarget"*, %"class.ui::Event"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui15CancelModeEventD1Ev(%"class.ui::CancelModeEvent"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher20DispatchGestureEventEPN2ui15GestureConsumerEPNS1_12GestureEventE(%"class.aura::WindowEventDispatcher"*, %"class.ui::GestureConsumer"*, %"class.ui::GestureEvent"*) unnamed_addr #7 align 2 {
  %4 = alloca i64, align 8
  %5 = tail call i24 @_ZN4aura21WindowEventDispatcher18DispatchHeldEventsEv(%"class.aura::WindowEventDispatcher"* %0)
  %6 = and i24 %5, 1
  %7 = icmp eq i24 %6, 0
  br i1 %7, label %8, label %61

8:                                                ; preds = %3
  %9 = icmp eq %"class.ui::GestureConsumer"* %1, null
  %10 = getelementptr inbounds %"class.ui::GestureConsumer", %"class.ui::GestureConsumer"* %1, i64 -19
  %11 = bitcast %"class.ui::GestureConsumer"* %10 to %"class.aura::Window"*
  %12 = icmp eq %"class.ui::GestureConsumer"* %10, null
  %13 = or i1 %9, %12
  br i1 %13, label %61, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %16 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %15, align 8
  %17 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %16, i64 0, i32 4
  %18 = load %"class.aura::Window"*, %"class.aura::Window"** %17, align 8
  %19 = bitcast i64* %4 to %"class.gfx::Point"*
  %20 = icmp eq %"class.aura::Window"* %18, %11
  br i1 %20, label %55, label %21

21:                                               ; preds = %14
  %22 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #14
  %23 = bitcast i64* %4 to i32*
  %24 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %19, i64 0, i32 1
  %25 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %2, i64 0, i32 0, i32 1
  %26 = tail call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %25) #14
  store i64 %26, i64* %4, align 8
  call void @_ZN4aura6Window20ConvertPointToTargetEPKS0_S2_PN3gfx5PointE(%"class.aura::Window"* %18, %"class.aura::Window"* nonnull %11, %"class.gfx::Point"* nonnull %19) #14
  %27 = call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %25) #14
  %28 = trunc i64 %27 to i32
  %29 = lshr i64 %27, 32
  %30 = trunc i64 %29 to i32
  %31 = load i32, i32* %23, align 8
  %32 = icmp sgt i32 %31, -1
  %33 = select i1 %32, i32 -2147483648, i32 2147483647
  %34 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %28, i32 %31) #14
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = select i1 %35, i32 %33, i32 %36, !prof !45
  %38 = load i32, i32* %24, align 4
  %39 = icmp sgt i32 %38, -1
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %30, i32 %38) #14
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !45
  %45 = sitofp i32 %37 to float
  %46 = sitofp i32 %44 to float
  %47 = bitcast %"class.gfx::PointF"* %25 to <2 x float>*
  %48 = load <2 x float>, <2 x float>* %47, align 4
  %49 = extractelement <2 x float> %48, i32 0
  %50 = fsub float %49, %45
  %51 = insertelement <2 x float> undef, float %50, i32 0
  %52 = extractelement <2 x float> %48, i32 1
  %53 = fsub float %52, %46
  %54 = insertelement <2 x float> %51, float %53, i32 1
  store <2 x float> %54, <2 x float>* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #14
  br label %55

55:                                               ; preds = %14, %21
  %56 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.ui::GestureConsumer", %"class.ui::GestureConsumer"* %1, i64 -8
  %58 = bitcast %"class.ui::GestureConsumer"* %57 to %"class.ui::EventTarget"*
  %59 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %2, i64 0, i32 0, i32 0
  %60 = call i24 @_ZN2ui23EventDispatcherDelegate13DispatchEventEPNS_11EventTargetEPNS_5EventE(%"class.ui::EventDispatcherDelegate"* %56, %"class.ui::EventTarget"* %58, %"class.ui::Event"* %59) #14
  ret void

61:                                               ; preds = %8, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N4aura21WindowEventDispatcher20DispatchGestureEventEPN2ui15GestureConsumerEPNS1_12GestureEventE(%"class.aura::WindowEventDispatcher"*, %"class.ui::GestureConsumer"*, %"class.ui::GestureEvent"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 23
  %5 = bitcast i8* %4 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcher20DispatchGestureEventEPN2ui15GestureConsumerEPNS1_12GestureEventE(%"class.aura::WindowEventDispatcher"* %5, %"class.ui::GestureConsumer"* %1, %"class.ui::GestureEvent"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN4aura21WindowEventDispatcher24DispatchMouseExitAtPointEPNS_6WindowERKN3gfx5PointEi(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.gfx::Point"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.ui::MouseEvent", align 8
  %6 = alloca %"struct.ui::PointerDetails", align 4
  %7 = bitcast %"class.ui::MouseEvent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %7) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast ({ { { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" }, %"class.gfx::PointF", %"class.gfx::PointF" }, i32, %"class.gfx::Vector2dF", %"struct.ui::PointerDetails" }* @__const._ZN4aura21WindowEventDispatcher24SynthesizeMouseMoveEventEv.event to i8*), i64 216, i1 false)
  %8 = tail call i64 @_ZN2ui15EventTimeForNowEv() #14
  %9 = bitcast %"struct.ui::PointerDetails"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %9) #14
  call void @_ZN2ui14PointerDetailsC1ENS_16EventPointerTypeEi(%"struct.ui::PointerDetails"* nonnull %6, i32 1, i32 2147483647) #14
  call void @_ZN2ui10MouseEventC1ENS_9EventTypeERKN3gfx5PointES5_N4base9TimeTicksEiiRKNS_14PointerDetailsE(%"class.ui::MouseEvent"* nonnull %5, i32 6, %"class.gfx::Point"* dereferenceable(8) %2, %"class.gfx::Point"* dereferenceable(8) %2, i64 %8, i32 %3, i32 0, %"struct.ui::PointerDetails"* nonnull dereferenceable(44) %6) #14
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %9) #14
  %10 = call i24 @_ZN4aura21WindowEventDispatcher24DispatchMouseEnterOrExitEPNS_6WindowERKN2ui10MouseEventENS3_9EventTypeE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %1, %"class.ui::MouseEvent"* nonnull dereferenceable(216) %5, i32 6)
  call void @_ZN2ui10MouseEventD1Ev(%"class.ui::MouseEvent"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %7) #14
  ret i24 %10
}

declare i64 @_ZN2ui15EventTimeForNowEv() local_unnamed_addr #2

declare void @_ZN2ui14PointerDetailsC1ENS_16EventPointerTypeEi(%"struct.ui::PointerDetails"*, i32, i32) unnamed_addr #2

declare void @_ZN2ui10MouseEventC1ENS_9EventTypeERKN3gfx5PointES5_N4base9TimeTicksEiiRKNS_14PointerDetailsE(%"class.ui::MouseEvent"*, i32, %"class.gfx::Point"* dereferenceable(8), %"class.gfx::Point"* dereferenceable(8), i64, i32, i32, %"struct.ui::PointerDetails"* dereferenceable(44)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN4aura21WindowEventDispatcher24DispatchMouseEnterOrExitEPNS_6WindowERKN2ui10MouseEventENS3_9EventTypeE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.ui::MouseEvent"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.ui::MouseEvent", align 8
  %6 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %7 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %6, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %"class.aura::EnvInputStateController"*, %"class.aura::EnvInputStateController"** %7, align 8
  %9 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %10 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %9, align 8
  %11 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %10, i64 0, i32 4
  %12 = load %"class.aura::Window"*, %"class.aura::Window"** %11, align 8
  tail call void @_ZN4aura23EnvInputStateController24UpdateStateForMouseEventEPKNS_6WindowERKN2ui10MouseEventE(%"class.aura::EnvInputStateController"* %8, %"class.aura::Window"* %12, %"class.ui::MouseEvent"* dereferenceable(216) %2) #14
  %13 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 7
  %14 = load %"class.aura::Window"*, %"class.aura::Window"** %13, align 8
  %15 = icmp eq %"class.aura::Window"* %14, null
  br i1 %15, label %62, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %14, i64 0, i32 2, i32 3
  %18 = load %"class.ui::EventHandler"*, %"class.ui::EventHandler"** %17, align 8
  %19 = icmp eq %"class.ui::EventHandler"* %18, null
  br i1 %19, label %62, label %20

20:                                               ; preds = %16
  %21 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %9, align 8
  %22 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %21, i64 0, i32 4
  %23 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  %24 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %23, %"class.aura::Window"* nonnull %14) #14
  br i1 %24, label %25, label %62

25:                                               ; preds = %20
  %26 = icmp eq %"class.aura::Window"* %1, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %25
  %28 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %9, align 8
  %29 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %28, i64 0, i32 4
  %30 = load %"class.aura::Window"*, %"class.aura::Window"** %29, align 8
  br label %31

31:                                               ; preds = %25, %27
  %32 = phi %"class.aura::Window"* [ %1, %25 ], [ %30, %27 ]
  %33 = bitcast %"class.ui::MouseEvent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %33) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 bitcast ({ { { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" }, %"class.gfx::PointF", %"class.gfx::PointF" }, i32, %"class.gfx::Vector2dF", %"struct.ui::PointerDetails" }* @__const._ZN4aura21WindowEventDispatcher24SynthesizeMouseMoveEventEv.event to i8*), i64 216, i1 false)
  %34 = load %"class.aura::Window"*, %"class.aura::Window"** %13, align 8
  %35 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 0, i32 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = or i32 %36, 1
  %38 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %5, i64 0, i32 0
  %39 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 0
  call void @_ZN2ui12LocatedEventC2IN4aura6WindowEEERKS0_PT_S7_(%"class.ui::LocatedEvent"* nonnull %38, %"class.ui::LocatedEvent"* dereferenceable(160) %39, %"class.aura::Window"* %32, %"class.aura::Window"* %34) #14
  %40 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui10MouseEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %5, i64 0, i32 1
  %42 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  store i32 %43, i32* %41, align 8
  %44 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %5, i64 0, i32 2
  %45 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 2
  %46 = bitcast %"class.gfx::Vector2dF"* %45 to i64*
  %47 = bitcast %"class.gfx::Vector2dF"* %44 to i64*
  %48 = load i64, i64* %46, align 4
  store i64 %48, i64* %47, align 4
  %49 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %5, i64 0, i32 3
  %50 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 3
  call void @_ZN2ui14PointerDetailsC1ERKS0_(%"struct.ui::PointerDetails"* %49, %"struct.ui::PointerDetails"* dereferenceable(44) %50) #14
  %51 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %5, i64 0, i32 0, i32 0
  call void @_ZN2ui5Event7SetTypeENS_9EventTypeE(%"class.ui::Event"* nonnull %51, i32 %3) #14
  %52 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %5, i64 0, i32 0, i32 0, i32 4
  store i32 %37, i32* %52, align 8
  %53 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 0, i32 0
  %54 = load %"class.aura::Window"*, %"class.aura::Window"** %13, align 8
  %55 = icmp eq %"class.aura::Window"* %54, null
  %56 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %54, i64 0, i32 2
  %57 = select i1 %55, %"class.ui::EventTarget"* null, %"class.ui::EventTarget"* %56
  %58 = call i24 @_ZN2ui23EventDispatcherDelegate13DispatchEventEPNS_11EventTargetEPNS_5EventE(%"class.ui::EventDispatcherDelegate"* %53, %"class.ui::EventTarget"* %57, %"class.ui::Event"* nonnull %51) #14
  call void @_ZN2ui10MouseEventD1Ev(%"class.ui::MouseEvent"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %33) #14
  %59 = and i24 %58, -65536
  %60 = and i24 %58, 65280
  %61 = and i24 %58, 255
  br label %62

62:                                               ; preds = %16, %20, %4, %31
  %63 = phi i24 [ %61, %31 ], [ 0, %4 ], [ 0, %20 ], [ 0, %16 ]
  %64 = phi i24 [ %60, %31 ], [ 0, %4 ], [ 0, %20 ], [ 0, %16 ]
  %65 = phi i24 [ %59, %31 ], [ 0, %4 ], [ 0, %20 ], [ 0, %16 ]
  %66 = or i24 %64, %63
  %67 = or i24 %66, %65
  ret i24 %67
}

; Function Attrs: nounwind
declare void @_ZN2ui10MouseEventD1Ev(%"class.ui::MouseEvent"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher19ProcessedTouchEventEjPNS_6WindowEN2ui11EventResultEb(%"class.aura::WindowEventDispatcher"*, i32, %"class.aura::Window"*, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector.255", align 8
  %7 = alloca %"class.std::__1::vector.255", align 8
  %8 = bitcast %"class.std::__1::vector.255"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %6, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %6, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::vector.255"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %13 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %12, i64 0, i32 11, i32 0, i32 0, i32 0
  %14 = load %"class.ui::GestureRecognizer"*, %"class.ui::GestureRecognizer"** %13, align 8
  %15 = icmp eq %"class.aura::Window"* %2, null
  %16 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %2, i64 0, i32 3
  %17 = select i1 %15, %"class.ui::GestureConsumer"* null, %"class.ui::GestureConsumer"* %16
  %18 = bitcast %"class.ui::GestureRecognizer"* %14 to void (%"class.std::__1::vector.255"*, %"class.ui::GestureRecognizer"*, i32, i32, i1, %"class.ui::GestureConsumer"*)***
  %19 = load void (%"class.std::__1::vector.255"*, %"class.ui::GestureRecognizer"*, i32, i32, i1, %"class.ui::GestureConsumer"*)**, void (%"class.std::__1::vector.255"*, %"class.ui::GestureRecognizer"*, i32, i32, i1, %"class.ui::GestureConsumer"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.std::__1::vector.255"*, %"class.ui::GestureRecognizer"*, i32, i32, i1, %"class.ui::GestureConsumer"*)*, void (%"class.std::__1::vector.255"*, %"class.ui::GestureRecognizer"*, i32, i32, i1, %"class.ui::GestureConsumer"*)** %19, i64 3
  %21 = load void (%"class.std::__1::vector.255"*, %"class.ui::GestureRecognizer"*, i32, i32, i1, %"class.ui::GestureConsumer"*)*, void (%"class.std::__1::vector.255"*, %"class.ui::GestureRecognizer"*, i32, i32, i1, %"class.ui::GestureConsumer"*)** %20, align 8
  call void %21(%"class.std::__1::vector.255"* nonnull sret %6, %"class.ui::GestureRecognizer"* %14, i32 %1, i32 %3, i1 zeroext %4, %"class.ui::GestureConsumer"* %17) #14
  %22 = bitcast %"class.std::__1::vector.255"* %6 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.255"* %7 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %7, i64 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::unique_ptr.257"** %10 to <2 x i64>*
  %27 = load <2 x i64>, <2 x i64>* %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.257"** %25 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %28, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #14
  %29 = call i24 @_ZN4aura21WindowEventDispatcher15ProcessGesturesEPNS_6WindowENSt3__16vectorINS3_10unique_ptrIN2ui12GestureEventENS3_14default_deleteIS7_EEEENS3_9allocatorISA_EEEE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %2, %"class.std::__1::vector.255"* nonnull %7)
  %30 = inttoptr i64 %23 to %"class.std::__1::unique_ptr.257"*
  %31 = icmp eq i64 %23, 0
  %32 = extractelement <2 x i64> %27, i32 0
  %33 = inttoptr i64 %32 to %"class.std::__1::unique_ptr.257"*
  br i1 %31, label %55, label %34

34:                                               ; preds = %5
  %35 = inttoptr i64 %23 to i8*
  %36 = icmp eq %"class.std::__1::unique_ptr.257"* %33, %30
  br i1 %36, label %53, label %37

37:                                               ; preds = %34, %48
  %38 = phi %"class.std::__1::unique_ptr.257"* [ %39, %48 ], [ %33, %34 ]
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %38, i64 -1
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.ui::GestureEvent"*, %"class.ui::GestureEvent"** %40, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %40, align 8
  %42 = icmp eq %"class.ui::GestureEvent"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.ui::GestureEvent"* %41 to void (%"class.ui::GestureEvent"*)***
  %45 = load void (%"class.ui::GestureEvent"*)**, void (%"class.ui::GestureEvent"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %45, i64 1
  %47 = load void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %46, align 8
  call void %47(%"class.ui::GestureEvent"* nonnull %41) #14
  br label %48

48:                                               ; preds = %43, %37
  %49 = icmp eq %"class.std::__1::unique_ptr.257"* %39, %30
  br i1 %49, label %50, label %37

50:                                               ; preds = %48
  %51 = bitcast %"class.std::__1::vector.255"* %7 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %50, %34
  %54 = phi i8* [ %52, %50 ], [ %35, %34 ]
  store %"class.std::__1::unique_ptr.257"* %30, %"class.std::__1::unique_ptr.257"** %25, align 8
  call void @_ZdlPv(i8* %54) #15
  br label %55

55:                                               ; preds = %5, %53
  %56 = load %"class.std::__1::unique_ptr.257"*, %"class.std::__1::unique_ptr.257"** %9, align 8
  %57 = icmp eq %"class.std::__1::unique_ptr.257"* %56, null
  br i1 %57, label %80, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.std::__1::unique_ptr.257"* %56 to i8*
  %60 = load %"class.std::__1::unique_ptr.257"*, %"class.std::__1::unique_ptr.257"** %10, align 8
  %61 = icmp eq %"class.std::__1::unique_ptr.257"* %60, %56
  br i1 %61, label %78, label %62

62:                                               ; preds = %58, %73
  %63 = phi %"class.std::__1::unique_ptr.257"* [ %64, %73 ], [ %60, %58 ]
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %63, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.ui::GestureEvent"*, %"class.ui::GestureEvent"** %65, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %65, align 8
  %67 = icmp eq %"class.ui::GestureEvent"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %62
  %69 = bitcast %"class.ui::GestureEvent"* %66 to void (%"class.ui::GestureEvent"*)***
  %70 = load void (%"class.ui::GestureEvent"*)**, void (%"class.ui::GestureEvent"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %70, i64 1
  %72 = load void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %71, align 8
  call void %72(%"class.ui::GestureEvent"* nonnull %66) #14
  br label %73

73:                                               ; preds = %68, %62
  %74 = icmp eq %"class.std::__1::unique_ptr.257"* %64, %56
  br i1 %74, label %75, label %62

75:                                               ; preds = %73
  %76 = bitcast %"class.std::__1::vector.255"* %6 to i8**
  %77 = load i8*, i8** %76, align 8
  br label %78

78:                                               ; preds = %75, %58
  %79 = phi i8* [ %77, %75 ], [ %59, %58 ]
  store %"class.std::__1::unique_ptr.257"* %56, %"class.std::__1::unique_ptr.257"** %10, align 8
  call void @_ZdlPv(i8* %79) #15
  br label %80

80:                                               ; preds = %55, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN4aura21WindowEventDispatcher15ProcessGesturesEPNS_6WindowENSt3__16vectorINS3_10unique_ptrIN2ui12GestureEventENS3_14default_deleteIS7_EEEENS3_9allocatorISA_EEEE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.std::__1::vector.255"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.257"*, %"class.std::__1::unique_ptr.257"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %2, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.257"*, %"class.std::__1::unique_ptr.257"** %7, align 8
  %9 = icmp ne %"class.std::__1::unique_ptr.257"* %6, %8
  %10 = icmp ne %"class.aura::Window"* %1, null
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %78

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %14 = bitcast i64* %4 to %"class.gfx::Point"*
  %15 = bitcast i64* %4 to i8*
  %16 = bitcast i64* %4 to i32*
  %17 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %14, i64 0, i32 1
  %18 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 2
  br label %22

20:                                               ; preds = %61
  %21 = icmp eq %"class.std::__1::unique_ptr.257"* %69, %8
  br i1 %21, label %75, label %22

22:                                               ; preds = %12, %20
  %23 = phi %"class.std::__1::unique_ptr.257"* [ %6, %12 ], [ %69, %20 ]
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %13, align 8
  %26 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %25, i64 0, i32 4
  %27 = load %"class.aura::Window"*, %"class.aura::Window"** %26, align 8
  %28 = icmp eq %"class.aura::Window"* %27, %1
  br i1 %28, label %61, label %29

29:                                               ; preds = %22
  %30 = load %"class.ui::GestureEvent"*, %"class.ui::GestureEvent"** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #14
  %31 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %30, i64 0, i32 0, i32 1
  %32 = call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %31) #14
  store i64 %32, i64* %4, align 8
  call void @_ZN4aura6Window20ConvertPointToTargetEPKS0_S2_PN3gfx5PointE(%"class.aura::Window"* %27, %"class.aura::Window"* nonnull %1, %"class.gfx::Point"* nonnull %14) #14
  %33 = call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %31) #14
  %34 = trunc i64 %33 to i32
  %35 = lshr i64 %33, 32
  %36 = trunc i64 %35 to i32
  %37 = load i32, i32* %16, align 8
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %34, i32 %37) #14
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !45
  %44 = load i32, i32* %17, align 4
  %45 = icmp sgt i32 %44, -1
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %36, i32 %44) #14
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !45
  %51 = sitofp i32 %43 to float
  %52 = sitofp i32 %50 to float
  %53 = bitcast %"class.gfx::PointF"* %31 to <2 x float>*
  %54 = load <2 x float>, <2 x float>* %53, align 4
  %55 = extractelement <2 x float> %54, i32 0
  %56 = fsub float %55, %51
  %57 = insertelement <2 x float> undef, float %56, i32 0
  %58 = extractelement <2 x float> %54, i32 1
  %59 = fsub float %58, %52
  %60 = insertelement <2 x float> %57, float %59, i32 1
  store <2 x float> %60, <2 x float>* %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #14
  br label %61

61:                                               ; preds = %22, %29
  %62 = load %"class.ui::GestureEvent"*, %"class.ui::GestureEvent"** %24, align 8
  %63 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %62, i64 0, i32 0, i32 0
  %64 = call i24 @_ZN2ui23EventDispatcherDelegate13DispatchEventEPNS_11EventTargetEPNS_5EventE(%"class.ui::EventDispatcherDelegate"* %18, %"class.ui::EventTarget"* %19, %"class.ui::Event"* %63) #14
  %65 = lshr i24 %64, 8
  %66 = or i24 %65, %64
  %67 = trunc i24 %66 to i8
  %68 = icmp eq i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %23, i64 1
  br i1 %68, label %20, label %70

70:                                               ; preds = %61
  %71 = lshr i24 %64, 16
  %72 = trunc i24 %71 to i8
  %73 = and i24 %64, 65280
  %74 = and i24 %64, 255
  br label %78

75:                                               ; preds = %20
  %76 = lshr i24 %64, 16
  %77 = trunc i24 %76 to i8
  br label %78

78:                                               ; preds = %75, %70, %3
  %79 = phi i8 [ 0, %3 ], [ %72, %70 ], [ %77, %75 ]
  %80 = phi i24 [ 0, %3 ], [ %73, %70 ], [ 0, %75 ]
  %81 = phi i24 [ 0, %3 ], [ %74, %70 ], [ 0, %75 ]
  %82 = zext i8 %79 to i24
  %83 = shl nuw i24 %82, 16
  %84 = or i24 %80, %83
  %85 = or i24 %84, %81
  ret i24 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher16HoldPointerMovesEv(%"class.aura::WindowEventDispatcher"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 25, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %7) #14
  %8 = load i32, i32* %3, align 4
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %4, %1 ], [ %8, %6 ]
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %3, align 4
  %12 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 129, i32 0), align 16
  %13 = and i8 %12, 25
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %22, label %15, !prof !19

15:                                               ; preds = %9
  %16 = ptrtoint %"class.aura::WindowEventDispatcher"* %0 to i64
  %17 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #14
  %18 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %20 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  store i64 %20, i64* %19, align 8
  %21 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 83, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 129, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 %16, i64 0, i32 %17, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 2048) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  br label %22

22:                                               ; preds = %9, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher19ReleasePointerMovesEv(%"class.aura::WindowEventDispatcher"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::WeakPtr.250", align 8
  %8 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, -1
  store i32 %10, i32* %8, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %58

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 12
  %14 = load i8, i8* %13, align 8, !range !28
  %15 = icmp eq i8 %14, 0
  store i8 0, i8* %13, align 8
  %16 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %17 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %16, align 8
  %18 = icmp eq %"class.ui::LocatedEvent"* %17, null
  br i1 %18, label %44, label %19

19:                                               ; preds = %12
  %20 = tail call dereferenceable(8) %class.scoped_refptr.248* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #14
  %21 = bitcast %class.scoped_refptr.248* %20 to %"class.base::SequencedTaskRunner"**
  %22 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %21, align 8
  %23 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i32 224) #14
  %24 = bitcast %"class.base::WeakPtr.250"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #14
  %25 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #14, !noalias !46
  %26 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 25, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %26) #14, !noalias !46
  %27 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 25, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !46
  %29 = getelementptr inbounds %"class.base::WeakPtr.250", %"class.base::WeakPtr.250"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %29, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %28) #14
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #14, !noalias !46
  %30 = call i8* @_Znwm(i64 64) #15, !noalias !49
  %31 = bitcast i8* %30 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %31, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE) #14, !noalias !49
  %32 = getelementptr inbounds i8, i8* %30, i64 32
  %33 = bitcast i8* %32 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i24 (%"class.aura::WindowEventDispatcher"*)* @_ZN4aura21WindowEventDispatcher18DispatchHeldEventsEv to i64), i64 0>, <2 x i64>* %33, align 8, !noalias !49
  %34 = getelementptr inbounds i8, i8* %30, i64 48
  %35 = bitcast i8* %34 to %"class.base::internal::WeakReference"*
  %36 = getelementptr inbounds %"class.base::WeakPtr.250", %"class.base::WeakPtr.250"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %35, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %36) #14, !noalias !49
  %37 = getelementptr inbounds i8, i8* %30, i64 56
  %38 = bitcast i8* %37 to i64*
  %39 = getelementptr inbounds %"class.base::WeakPtr.250", %"class.base::WeakPtr.250"* %7, i64 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8, !noalias !49
  store i64 %40, i64* %38, align 8, !noalias !49
  %41 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %30, i8** %41, align 8, !alias.scope !49
  %42 = call zeroext i1 @_ZN4base19SequencedTaskRunner19PostNonNestableTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::SequencedTaskRunner"* %22, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback"* nonnull %6) #14
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %43) #14
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #14
  br label %58

44:                                               ; preds = %12
  %45 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %46 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %45, align 8
  %47 = icmp eq %"class.base::internal::BindStateBase"* %46, null
  br i1 %47, label %56, label %48

48:                                               ; preds = %44
  %49 = ptrtoint %"class.base::internal::BindStateBase"* %46 to i64
  %50 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #14
  %51 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %49, i64* %51, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %45, align 8
  %52 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %53 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %46, i64 0, i32 1
  %54 = bitcast void ()** %53 to void (%"class.base::internal::BindStateBase"*)**
  %55 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %54, align 8
  tail call void %55(%"class.base::internal::BindStateBase"* nonnull %46) #14
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #14
  br label %56

56:                                               ; preds = %44, %48
  br i1 %15, label %58, label %57

57:                                               ; preds = %56
  call void @_ZN4aura21WindowEventDispatcher23PostSynthesizeMouseMoveEv(%"class.aura::WindowEventDispatcher"* %0)
  br label %58

58:                                               ; preds = %19, %57, %56, %1
  %59 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 129, i32 0), align 16
  %60 = and i8 %59, 25
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %69, label %62, !prof !19

62:                                               ; preds = %58
  %63 = ptrtoint %"class.aura::WindowEventDispatcher"* %0 to i64
  %64 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #14
  %65 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #14
  %66 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %67 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  store i64 %67, i64* %66, align 8
  %68 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 70, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 129, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 %63, i64 0, i32 %64, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 2048) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #14
  br label %69

69:                                               ; preds = %58, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4aura21WindowEventDispatcher26GetLastMouseLocationInRootEv(%"class.aura::WindowEventDispatcher"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %4 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %3, i64 0, i32 9
  %5 = bitcast %"class.gfx::Point"* %4 to i64*
  %6 = load i64, i64* %5, align 4
  store i64 %6, i64* %2, align 8
  %7 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %8 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %7, align 8
  %9 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %8, i64 0, i32 4
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = tail call %"class.aura::client::ScreenPositionClient"* @_ZN4aura6client23GetScreenPositionClientEPKNS_6WindowE(%"class.aura::Window"* %10) #14
  %12 = icmp eq %"class.aura::client::ScreenPositionClient"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %1
  %14 = bitcast i64* %2 to %"class.gfx::Point"*
  %15 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %7, align 8
  %16 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %15, i64 0, i32 4
  %17 = load %"class.aura::Window"*, %"class.aura::Window"** %16, align 8
  call void @_ZN4aura6client20ScreenPositionClient22ConvertPointFromScreenEPKNS_6WindowEPN3gfx5PointE(%"class.aura::client::ScreenPositionClient"* nonnull %11, %"class.aura::Window"* %17, %"class.gfx::Point"* nonnull %14) #14
  %18 = load i64, i64* %2, align 8
  br label %19

19:                                               ; preds = %1, %13
  %20 = phi i64 [ %6, %1 ], [ %18, %13 ]
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4aura21WindowEventDispatcher22ConvertPointFromScreenEPN3gfx5PointE(%"class.aura::WindowEventDispatcher"* nocapture readonly, %"class.gfx::Point"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %4 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %4, i64 0, i32 4
  %6 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %7 = tail call %"class.aura::client::ScreenPositionClient"* @_ZN4aura6client23GetScreenPositionClientEPKNS_6WindowE(%"class.aura::Window"* %6) #14
  %8 = icmp eq %"class.aura::client::ScreenPositionClient"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %3, align 8
  %11 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %10, i64 0, i32 4
  %12 = load %"class.aura::Window"*, %"class.aura::Window"** %11, align 8
  tail call void @_ZN4aura6client20ScreenPositionClient22ConvertPointFromScreenEPKNS_6WindowEPN3gfx5PointE(%"class.aura::client::ScreenPositionClient"* nonnull %7, %"class.aura::Window"* %12, %"class.gfx::Point"* %1) #14
  br label %13

13:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4aura21WindowEventDispatcher19OnHostLostMouseGrabEv(%"class.aura::WindowEventDispatcher"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 6
  %3 = bitcast %"class.aura::Window"** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher27OnCursorMovedToRootLocationERKN3gfx5PointE(%"class.aura::WindowEventDispatcher"*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %4 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %"class.aura::EnvInputStateController"*, %"class.aura::EnvInputStateController"** %4, align 8
  %6 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %7 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %6, align 8
  %8 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %7, i64 0, i32 4
  %9 = load %"class.aura::Window"*, %"class.aura::Window"** %8, align 8
  tail call void @_ZNK4aura23EnvInputStateController20SetLastMouseLocationEPKNS_6WindowERKN3gfx5PointE(%"class.aura::EnvInputStateController"* %5, %"class.aura::Window"* %9, %"class.gfx::Point"* dereferenceable(8) %1) #14
  tail call void @_ZN4aura21WindowEventDispatcher23PostSynthesizeMouseMoveEv(%"class.aura::WindowEventDispatcher"* %0)
  ret void
}

declare void @_ZNK4aura23EnvInputStateController20SetLastMouseLocationEPKNS_6WindowERKN3gfx5PointE(%"class.aura::EnvInputStateController"*, %"class.aura::Window"*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher30OnPostNotifiedWindowDestroyingEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* nocapture, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4aura21WindowEventDispatcher14OnWindowHiddenEPNS_6WindowENS0_18WindowHiddenReasonE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %1, i32 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher14OnWindowHiddenEPNS_6WindowENS0_18WindowHiddenReasonE(%"class.aura::WindowEventDispatcher"* nocapture, %"class.aura::Window"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 6
  %5 = load %"class.aura::Window"*, %"class.aura::Window"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %1, %"class.aura::Window"* %5) #14
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  store %"class.aura::Window"* null, %"class.aura::Window"** %4, align 8
  br label %8

8:                                                ; preds = %7, %3
  %9 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 7
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %1, %"class.aura::Window"* %10) #14
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  store %"class.aura::Window"* null, %"class.aura::Window"** %9, align 8
  br label %13

13:                                               ; preds = %12, %8
  %14 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 8
  %15 = load %"class.aura::Window"*, %"class.aura::Window"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %1, %"class.aura::Window"* %15) #14
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  store %"class.aura::Window"* null, %"class.aura::Window"** %14, align 8
  br label %18

18:                                               ; preds = %17, %13
  %19 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 10
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %21 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %1, %"class.aura::Window"* %20) #14
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  store %"class.aura::Window"* null, %"class.aura::Window"** %19, align 8
  br label %23

23:                                               ; preds = %22, %18
  %24 = tail call zeroext i1 @_ZN4aura6Window19CleanupGestureStateEv(%"class.aura::Window"* %1) #14
  %25 = icmp eq i32 %2, 2
  br i1 %25, label %53, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %28 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %27, align 8
  %29 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %28, i64 0, i32 4
  %30 = load %"class.aura::Window"*, %"class.aura::Window"** %29, align 8
  %31 = tail call %"class.aura::client::CaptureClient"* @_ZN4aura6client16GetCaptureClientEPNS_6WindowE(%"class.aura::Window"* %30) #14
  %32 = icmp eq %"class.aura::client::CaptureClient"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %26
  %34 = bitcast %"class.aura::client::CaptureClient"* %31 to %"class.aura::Window"* (%"class.aura::client::CaptureClient"*)***
  %35 = load %"class.aura::Window"* (%"class.aura::client::CaptureClient"*)**, %"class.aura::Window"* (%"class.aura::client::CaptureClient"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.aura::Window"* (%"class.aura::client::CaptureClient"*)*, %"class.aura::Window"* (%"class.aura::client::CaptureClient"*)** %35, i64 2
  %37 = load %"class.aura::Window"* (%"class.aura::client::CaptureClient"*)*, %"class.aura::Window"* (%"class.aura::client::CaptureClient"*)** %36, align 8
  %38 = tail call %"class.aura::Window"* %37(%"class.aura::client::CaptureClient"* nonnull %31) #14
  br label %39

39:                                               ; preds = %26, %33
  %40 = phi %"class.aura::Window"* [ %38, %33 ], [ null, %26 ]
  %41 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 9
  %42 = load %"class.aura::Window"*, %"class.aura::Window"** %41, align 8
  %43 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %1, %"class.aura::Window"* %42) #14
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  store %"class.aura::Window"* null, %"class.aura::Window"** %41, align 8
  br label %45

45:                                               ; preds = %44, %39
  %46 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %1, %"class.aura::Window"* %40) #14
  br i1 %46, label %47, label %53

47:                                               ; preds = %45
  %48 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %27, align 8
  %49 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %48, i64 0, i32 4
  %50 = load %"class.aura::Window"*, %"class.aura::Window"** %49, align 8
  %51 = icmp eq %"class.aura::Window"* %50, %1
  br i1 %51, label %53, label %52

52:                                               ; preds = %47
  tail call void @_ZN4aura6Window14ReleaseCaptureEv(%"class.aura::Window"* %40) #14
  br label %53

53:                                               ; preds = %45, %52, %47, %23
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.aura::Window"* @_ZNK4aura21WindowEventDispatcher6windowEv(%"class.aura::WindowEventDispatcher"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %3 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %2, align 8
  %4 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %3, i64 0, i32 4
  %5 = load %"class.aura::Window"*, %"class.aura::Window"** %4, align 8
  ret %"class.aura::Window"* %5
}

declare %"class.aura::client::ScreenPositionClient"* @_ZN4aura6client23GetScreenPositionClientEPKNS_6WindowE(%"class.aura::Window"*) local_unnamed_addr #2

declare void @_ZN4aura6client20ScreenPositionClient22ConvertPointFromScreenEPKNS_6WindowEPN3gfx5PointE(%"class.aura::client::ScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::Point"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher34TransformEventForDeviceScaleFactorEPN2ui12LocatedEventE(%"class.aura::WindowEventDispatcher"* nocapture readonly, %"class.ui::LocatedEvent"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %7 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %6, align 8
  %8 = bitcast %"class.aura::WindowTreeHost"* %7 to void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)***
  %9 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %9, i64 5
  %11 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %10, align 8
  call void %11(%"class.gfx::Transform"* nonnull sret %3, %"class.aura::WindowTreeHost"* %7) #14
  %12 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %12) #14
  %13 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %6, align 8
  %14 = bitcast %"class.aura::WindowTreeHost"* %13 to void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)***
  %15 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %15, i64 7
  %17 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %16, align 8
  call void %17(%"class.gfx::Transform"* nonnull sret %4, %"class.aura::WindowTreeHost"* %13) #14
  %18 = bitcast %"class.ui::LocatedEvent"* %1 to void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)***
  %19 = load void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)**, void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)*, void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)** %19, i64 3
  %21 = load void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)*, void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)** %20, align 8
  call void %21(%"class.ui::LocatedEvent"* %1, %"class.gfx::Transform"* nonnull dereferenceable(68) %3, %"class.gfx::Transform"* nonnull dereferenceable(68) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher31DispatchMouseExitToHidingWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.ui::MouseEvent", align 8
  %4 = alloca %"struct.ui::PointerDetails", align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.gfx::Point"*
  %8 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 23
  %9 = load i8, i8* %8, align 8, !range !28
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %48

11:                                               ; preds = %2
  %12 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #14
  %13 = bitcast i64* %6 to i32*
  store i32 -1431655766, i32* %13, align 8
  %14 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %7, i64 0, i32 1
  store i32 -1431655766, i32* %14, align 4
  %15 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %17 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %16, i64 0, i32 9
  %18 = bitcast %"class.gfx::Point"* %17 to i64*
  %19 = load i64, i64* %18, align 4
  store i64 %19, i64* %5, align 8
  %20 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %21 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %20, align 8
  %22 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %21, i64 0, i32 4
  %23 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  %24 = tail call %"class.aura::client::ScreenPositionClient"* @_ZN4aura6client23GetScreenPositionClientEPKNS_6WindowE(%"class.aura::Window"* %23) #14
  %25 = icmp eq %"class.aura::client::ScreenPositionClient"* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %11
  %27 = bitcast i64* %5 to %"class.gfx::Point"*
  %28 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %20, align 8
  %29 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %28, i64 0, i32 4
  %30 = load %"class.aura::Window"*, %"class.aura::Window"** %29, align 8
  call void @_ZN4aura6client20ScreenPositionClient22ConvertPointFromScreenEPKNS_6WindowEPN3gfx5PointE(%"class.aura::client::ScreenPositionClient"* nonnull %24, %"class.aura::Window"* %30, %"class.gfx::Point"* nonnull %27) #14
  %31 = load i64, i64* %5, align 8
  br label %32

32:                                               ; preds = %11, %26
  %33 = phi i64 [ %19, %11 ], [ %31, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i64 %33, i64* %6, align 8
  %34 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 7
  %35 = load %"class.aura::Window"*, %"class.aura::Window"** %34, align 8
  %36 = call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %1, %"class.aura::Window"* %35) #14
  br i1 %36, label %37, label %47

37:                                               ; preds = %32
  %38 = call zeroext i1 @_ZNK4aura6Window19ContainsPointInRootERKN3gfx5PointE(%"class.aura::Window"* %1, %"class.gfx::Point"* nonnull dereferenceable(8) %7) #14
  br i1 %38, label %39, label %47

39:                                               ; preds = %37
  %40 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %20, align 8
  %41 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %40, i64 0, i32 4
  %42 = load %"class.aura::Window"*, %"class.aura::Window"** %41, align 8
  %43 = bitcast %"class.ui::MouseEvent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %43) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 bitcast ({ { { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" }, %"class.gfx::PointF", %"class.gfx::PointF" }, i32, %"class.gfx::Vector2dF", %"struct.ui::PointerDetails" }* @__const._ZN4aura21WindowEventDispatcher24SynthesizeMouseMoveEventEv.event to i8*), i64 216, i1 false) #14
  %44 = call i64 @_ZN2ui15EventTimeForNowEv() #14
  %45 = bitcast %"struct.ui::PointerDetails"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %45) #14
  call void @_ZN2ui14PointerDetailsC1ENS_16EventPointerTypeEi(%"struct.ui::PointerDetails"* nonnull %4, i32 1, i32 2147483647) #14
  call void @_ZN2ui10MouseEventC1ENS_9EventTypeERKN3gfx5PointES5_N4base9TimeTicksEiiRKNS_14PointerDetailsE(%"class.ui::MouseEvent"* nonnull %3, i32 6, %"class.gfx::Point"* nonnull dereferenceable(8) %7, %"class.gfx::Point"* nonnull dereferenceable(8) %7, i64 %44, i32 0, i32 0, %"struct.ui::PointerDetails"* nonnull dereferenceable(44) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %45) #14
  %46 = call i24 @_ZN4aura21WindowEventDispatcher24DispatchMouseEnterOrExitEPNS_6WindowERKN2ui10MouseEventENS3_9EventTypeE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %42, %"class.ui::MouseEvent"* nonnull dereferenceable(216) %3, i32 6) #14
  call void @_ZN2ui10MouseEventD1Ev(%"class.ui::MouseEvent"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %43) #14
  br label %47

47:                                               ; preds = %39, %32, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #14
  br label %48

48:                                               ; preds = %2, %47
  ret void
}

declare zeroext i1 @_ZNK4aura6Window19ContainsPointInRootERKN3gfx5PointE(%"class.aura::Window"*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4aura23EnvInputStateController24UpdateStateForMouseEventEPKNS_6WindowERKN2ui10MouseEventE(%"class.aura::EnvInputStateController"*, %"class.aura::Window"*, %"class.ui::MouseEvent"* dereferenceable(216)) local_unnamed_addr #2

declare zeroext i1 @_ZN4aura6Window19CleanupGestureStateEv(%"class.aura::Window"*) local_unnamed_addr #2

declare %"class.aura::client::CaptureClient"* @_ZN4aura6client16GetCaptureClientEPNS_6WindowE(%"class.aura::Window"*) local_unnamed_addr #2

declare void @_ZN4aura6Window14ReleaseCaptureEv(%"class.aura::Window"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4aura21WindowEventDispatcher24is_dispatched_held_eventERKN2ui5EventE(%"class.aura::WindowEventDispatcher"* nocapture readonly, %"class.ui::Event"* readnone dereferenceable(144)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 17
  %4 = bitcast %"class.ui::LocatedEvent"** %3 to %"class.ui::Event"**
  %5 = load %"class.ui::Event"*, %"class.ui::Event"** %4, align 8
  %6 = icmp eq %"class.ui::Event"* %5, %1
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher13UpdateCaptureEPNS_6WindowES2_(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.gfx::Point"*
  %6 = alloca %"class.ui::MouseEvent", align 8
  %7 = alloca %"struct.ui::PointerDetails", align 4
  %8 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 7
  %9 = load %"class.aura::Window"*, %"class.aura::Window"** %8, align 8
  %10 = icmp eq %"class.aura::Window"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %13 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %12, align 8
  %14 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %13, i64 0, i32 4
  %15 = load %"class.aura::Window"*, %"class.aura::Window"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %15, %"class.aura::Window"* nonnull %9) #14
  br i1 %16, label %18, label %17

17:                                               ; preds = %11
  store %"class.aura::Window"* null, %"class.aura::Window"** %8, align 8
  br label %18

18:                                               ; preds = %3, %17, %11
  %19 = icmp eq %"class.aura::Window"* %1, null
  br i1 %19, label %56, label %20

20:                                               ; preds = %18
  %21 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* nonnull %1) #14
  %22 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %23 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %22, align 8
  %24 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %23, i64 0, i32 4
  %25 = load %"class.aura::Window"*, %"class.aura::Window"** %24, align 8
  %26 = icmp eq %"class.aura::Window"* %21, %25
  br i1 %26, label %27, label %56

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 12
  %29 = load %"class.aura::WindowDelegate"*, %"class.aura::WindowDelegate"** %28, align 8
  %30 = icmp eq %"class.aura::WindowDelegate"* %29, null
  br i1 %30, label %56, label %31

31:                                               ; preds = %27
  %32 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #14
  %33 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %34 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %33, i64 0, i32 9
  %35 = bitcast %"class.gfx::Point"* %34 to i64*
  %36 = load i64, i64* %35, align 4
  store i64 %36, i64* %4, align 8
  %37 = bitcast %"class.ui::MouseEvent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %37) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 bitcast ({ { { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" }, %"class.gfx::PointF", %"class.gfx::PointF" }, i32, %"class.gfx::Vector2dF", %"struct.ui::PointerDetails" }* @__const._ZN4aura21WindowEventDispatcher24SynthesizeMouseMoveEventEv.event to i8*), i64 216, i1 false)
  %38 = tail call i64 @_ZN2ui15EventTimeForNowEv() #14
  %39 = bitcast %"struct.ui::PointerDetails"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %39) #14
  call void @_ZN2ui14PointerDetailsC1ENS_16EventPointerTypeEi(%"struct.ui::PointerDetails"* nonnull %7, i32 1, i32 2147483647) #14
  call void @_ZN2ui10MouseEventC1ENS_9EventTypeERKN3gfx5PointES5_N4base9TimeTicksEiiRKNS_14PointerDetailsE(%"class.ui::MouseEvent"* nonnull %6, i32 10, %"class.gfx::Point"* nonnull dereferenceable(8) %5, %"class.gfx::Point"* nonnull dereferenceable(8) %5, i64 %38, i32 0, i32 0, %"struct.ui::PointerDetails"* nonnull dereferenceable(44) %7) #14
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %39) #14
  %40 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 2
  %42 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %6, i64 0, i32 0, i32 0
  %43 = call i24 @_ZN2ui23EventDispatcherDelegate13DispatchEventEPNS_11EventTargetEPNS_5EventE(%"class.ui::EventDispatcherDelegate"* %40, %"class.ui::EventTarget"* %41, %"class.ui::Event"* nonnull %42) #14
  %44 = and i24 %43, 1
  %45 = icmp eq i24 %44, 0
  br i1 %45, label %46, label %71

46:                                               ; preds = %31
  %47 = and i24 %43, 256
  %48 = icmp eq i24 %47, 0
  br i1 %48, label %49, label %55

49:                                               ; preds = %46
  %50 = load %"class.aura::WindowDelegate"*, %"class.aura::WindowDelegate"** %28, align 8
  %51 = bitcast %"class.aura::WindowDelegate"* %50 to void (%"class.aura::WindowDelegate"*)***
  %52 = load void (%"class.aura::WindowDelegate"*)**, void (%"class.aura::WindowDelegate"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.aura::WindowDelegate"*)*, void (%"class.aura::WindowDelegate"*)** %52, i64 17
  %54 = load void (%"class.aura::WindowDelegate"*)*, void (%"class.aura::WindowDelegate"*)** %53, align 8
  call void %54(%"class.aura::WindowDelegate"* %50) #14
  br label %55

55:                                               ; preds = %49, %46
  call void @_ZN2ui10MouseEventD1Ev(%"class.ui::MouseEvent"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %37) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #14
  br label %56

56:                                               ; preds = %55, %27, %18, %20
  %57 = icmp eq %"class.aura::Window"* %2, null
  br i1 %57, label %65, label %58

58:                                               ; preds = %56
  %59 = load %"class.aura::Window"*, %"class.aura::Window"** %8, align 8
  %60 = icmp eq %"class.aura::Window"* %59, null
  br i1 %60, label %61, label %64

61:                                               ; preds = %58
  %62 = call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %63 = call zeroext i1 @_ZNK4aura3Env17IsMouseButtonDownEv(%"class.aura::Env"* %62) #14
  br i1 %63, label %64, label %69

64:                                               ; preds = %58, %61
  store %"class.aura::Window"* %2, %"class.aura::Window"** %8, align 8
  br label %69

65:                                               ; preds = %56
  %66 = call i24 @_ZN4aura21WindowEventDispatcher24SynthesizeMouseMoveEventEv(%"class.aura::WindowEventDispatcher"* %0)
  %67 = and i24 %66, 1
  %68 = icmp eq i24 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %65, %61, %64
  %70 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 6
  store %"class.aura::Window"* null, %"class.aura::Window"** %70, align 8
  br label %72

71:                                               ; preds = %31
  call void @_ZN2ui10MouseEventD1Ev(%"class.ui::MouseEvent"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %37) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #14
  br label %72

72:                                               ; preds = %71, %65, %69
  ret void
}

declare %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4aura3Env17IsMouseButtonDownEv(%"class.aura::Env"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN4aura21WindowEventDispatcher24SynthesizeMouseMoveEventEv(%"class.aura::WindowEventDispatcher"*) #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"class.gfx::Point"*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.gfx::Point"*
  %6 = alloca %"class.ui::MouseEvent", align 8
  %7 = alloca %"struct.ui::PointerDetails", align 4
  %8 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 12
  %9 = load i8, i8* %8, align 8, !range !28
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %95, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 23
  %13 = load i8, i8* %12, align 8, !range !28
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %95

15:                                               ; preds = %11
  store i8 0, i8* %8, align 8
  %16 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %17 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %16, align 8
  %18 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %17, i64 0, i32 4
  %19 = load %"class.aura::Window"*, %"class.aura::Window"** %18, align 8
  %20 = tail call %"class.aura::client::CursorClient"* @_ZN4aura6client15GetCursorClientEPNS_6WindowE(%"class.aura::Window"* %19) #14
  %21 = icmp eq %"class.aura::client::CursorClient"* %20, null
  br i1 %21, label %38, label %22

22:                                               ; preds = %15
  %23 = bitcast %"class.aura::client::CursorClient"* %20 to i1 (%"class.aura::client::CursorClient"*)***
  %24 = load i1 (%"class.aura::client::CursorClient"*)**, i1 (%"class.aura::client::CursorClient"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.aura::client::CursorClient"*)*, i1 (%"class.aura::client::CursorClient"*)** %24, i64 10
  %26 = load i1 (%"class.aura::client::CursorClient"*)*, i1 (%"class.aura::client::CursorClient"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.aura::client::CursorClient"* nonnull %20) #14
  br i1 %27, label %28, label %95

28:                                               ; preds = %22
  %29 = load i1 (%"class.aura::client::CursorClient"*)**, i1 (%"class.aura::client::CursorClient"*)*** %23, align 8
  %30 = getelementptr inbounds i1 (%"class.aura::client::CursorClient"*)*, i1 (%"class.aura::client::CursorClient"*)** %29, i64 7
  %31 = load i1 (%"class.aura::client::CursorClient"*)*, i1 (%"class.aura::client::CursorClient"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.aura::client::CursorClient"* nonnull %20) #14
  br i1 %32, label %38, label %33

33:                                               ; preds = %28
  %34 = load i1 (%"class.aura::client::CursorClient"*)**, i1 (%"class.aura::client::CursorClient"*)*** %23, align 8
  %35 = getelementptr inbounds i1 (%"class.aura::client::CursorClient"*)*, i1 (%"class.aura::client::CursorClient"*)** %34, i64 15
  %36 = load i1 (%"class.aura::client::CursorClient"*)*, i1 (%"class.aura::client::CursorClient"*)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.aura::client::CursorClient"* nonnull %20) #14
  br i1 %37, label %38, label %95

38:                                               ; preds = %15, %33, %28
  %39 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %40 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %39, i64 0, i32 8
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %95

43:                                               ; preds = %38
  %44 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #14
  %45 = bitcast i64* %2 to i32*
  store i32 -1431655766, i32* %45, align 8
  %46 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %3, i64 0, i32 1
  store i32 -1431655766, i32* %46, align 4
  %47 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #14
  %48 = bitcast %"class.display::Screen"* %47 to i64 (%"class.display::Screen"*)***
  %49 = load i64 (%"class.display::Screen"*)**, i64 (%"class.display::Screen"*)*** %48, align 8
  %50 = getelementptr inbounds i64 (%"class.display::Screen"*)*, i64 (%"class.display::Screen"*)** %49, i64 2
  %51 = load i64 (%"class.display::Screen"*)*, i64 (%"class.display::Screen"*)** %50, align 8
  %52 = tail call i64 %51(%"class.display::Screen"* %47) #14
  store i64 %52, i64* %2, align 8
  %53 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %16, align 8
  %54 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %53, i64 0, i32 4
  %55 = load %"class.aura::Window"*, %"class.aura::Window"** %54, align 8
  %56 = tail call %"class.aura::client::ScreenPositionClient"* @_ZN4aura6client23GetScreenPositionClientEPKNS_6WindowE(%"class.aura::Window"* %55) #14
  %57 = icmp eq %"class.aura::client::ScreenPositionClient"* %56, null
  %58 = trunc i64 %52 to i32
  %59 = lshr i64 %52, 32
  %60 = trunc i64 %59 to i32
  br i1 %57, label %67, label %61

61:                                               ; preds = %43
  %62 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %16, align 8
  %63 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %62, i64 0, i32 4
  %64 = load %"class.aura::Window"*, %"class.aura::Window"** %63, align 8
  call void @_ZN4aura6client20ScreenPositionClient22ConvertPointFromScreenEPKNS_6WindowEPN3gfx5PointE(%"class.aura::client::ScreenPositionClient"* nonnull %56, %"class.aura::Window"* %64, %"class.gfx::Point"* nonnull %3) #14
  %65 = load i32, i32* %45, align 8
  %66 = load i32, i32* %46, align 4
  br label %67

67:                                               ; preds = %43, %61
  %68 = phi i32 [ %60, %43 ], [ %66, %61 ]
  %69 = phi i32 [ %58, %43 ], [ %65, %61 ]
  %70 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %16, align 8
  %71 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %70, i64 0, i32 4
  %72 = load %"class.aura::Window"*, %"class.aura::Window"** %71, align 8
  %73 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %72, i64 0, i32 7
  %74 = call zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"* %73, i32 %69, i32 %68) #14
  br i1 %74, label %75, label %93

75:                                               ; preds = %67
  %76 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #14
  %77 = load i64, i64* %2, align 8
  store i64 %77, i64* %4, align 8
  %78 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %16, align 8
  %79 = bitcast %"class.aura::WindowTreeHost"* %78 to void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)***
  %80 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)**, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %80, i64 8
  %82 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %81, align 8
  call void %82(%"class.aura::WindowTreeHost"* %78, %"class.gfx::Point"* nonnull %5) #14
  %83 = bitcast %"class.ui::MouseEvent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %83) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* align 8 bitcast ({ { { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" }, %"class.gfx::PointF", %"class.gfx::PointF" }, i32, %"class.gfx::Vector2dF", %"struct.ui::PointerDetails" }* @__const._ZN4aura21WindowEventDispatcher24SynthesizeMouseMoveEventEv.event to i8*), i64 216, i1 false)
  %84 = call i64 @_ZN2ui15EventTimeForNowEv() #14
  %85 = bitcast %"struct.ui::PointerDetails"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %85) #14
  call void @_ZN2ui14PointerDetailsC1ENS_16EventPointerTypeEi(%"struct.ui::PointerDetails"* nonnull %7, i32 1, i32 2147483647) #14
  call void @_ZN2ui10MouseEventC1ENS_9EventTypeERKN3gfx5PointES5_N4base9TimeTicksEiiRKNS_14PointerDetailsE(%"class.ui::MouseEvent"* nonnull %6, i32 4, %"class.gfx::Point"* nonnull dereferenceable(8) %5, %"class.gfx::Point"* nonnull dereferenceable(8) %5, i64 %84, i32 1, i32 0, %"struct.ui::PointerDetails"* nonnull dereferenceable(44) %7) #14
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %85) #14
  %86 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 0
  %87 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %6, i64 0, i32 0, i32 0
  %88 = bitcast %"class.aura::WindowEventDispatcher"* %0 to i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)***
  %89 = load i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)**, i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)*** %88, align 8
  %90 = getelementptr inbounds i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)*, i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)** %89, i64 5
  %91 = load i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)*, i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)** %90, align 8
  %92 = call i24 %91(%"class.ui::EventProcessor"* %86, %"class.ui::Event"* nonnull %87) #14
  call void @_ZN2ui10MouseEventD1Ev(%"class.ui::MouseEvent"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %83) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #14
  br label %93

93:                                               ; preds = %67, %75
  %94 = phi i24 [ %92, %75 ], [ 0, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #14
  br label %95

95:                                               ; preds = %38, %22, %33, %1, %11, %93
  %96 = phi i24 [ %94, %93 ], [ 0, %11 ], [ 0, %1 ], [ 0, %33 ], [ 0, %22 ], [ 0, %38 ]
  ret i24 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N4aura21WindowEventDispatcher13UpdateCaptureEPNS_6WindowES2_(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 2
  %5 = bitcast %"class.std::__1::__compressed_pair.150"* %4 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcher13UpdateCaptureEPNS_6WindowES2_(%"class.aura::WindowEventDispatcher"* %5, %"class.aura::Window"* %1, %"class.aura::Window"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher21OnOtherRootGotCaptureEv(%"class.aura::WindowEventDispatcher"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.ui::MouseEvent", align 8
  %3 = alloca %"struct.ui::PointerDetails", align 4
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 7
  %7 = load %"class.aura::Window"*, %"class.aura::Window"** %6, align 8
  %8 = icmp eq %"class.aura::Window"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %1
  %10 = bitcast i64* %5 to %"class.gfx::Point"*
  %11 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  %12 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %14 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %13, i64 0, i32 9
  %15 = bitcast %"class.gfx::Point"* %14 to i64*
  %16 = load i64, i64* %15, align 4
  store i64 %16, i64* %4, align 8
  %17 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %18 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %17, align 8
  %19 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %18, i64 0, i32 4
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %21 = tail call %"class.aura::client::ScreenPositionClient"* @_ZN4aura6client23GetScreenPositionClientEPKNS_6WindowE(%"class.aura::Window"* %20) #14
  %22 = icmp eq %"class.aura::client::ScreenPositionClient"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %9
  %24 = bitcast i64* %4 to %"class.gfx::Point"*
  %25 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %17, align 8
  %26 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %25, i64 0, i32 4
  %27 = load %"class.aura::Window"*, %"class.aura::Window"** %26, align 8
  call void @_ZN4aura6client20ScreenPositionClient22ConvertPointFromScreenEPKNS_6WindowEPN3gfx5PointE(%"class.aura::client::ScreenPositionClient"* nonnull %21, %"class.aura::Window"* %27, %"class.gfx::Point"* nonnull %24) #14
  %28 = load i64, i64* %4, align 8
  br label %29

29:                                               ; preds = %9, %23
  %30 = phi i64 [ %16, %9 ], [ %28, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store i64 %30, i64* %5, align 8
  %31 = bitcast %"class.ui::MouseEvent"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %31) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 bitcast ({ { { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" }, %"class.gfx::PointF", %"class.gfx::PointF" }, i32, %"class.gfx::Vector2dF", %"struct.ui::PointerDetails" }* @__const._ZN4aura21WindowEventDispatcher24SynthesizeMouseMoveEventEv.event to i8*), i64 216, i1 false) #14
  %32 = call i64 @_ZN2ui15EventTimeForNowEv() #14
  %33 = bitcast %"struct.ui::PointerDetails"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %33) #14
  call void @_ZN2ui14PointerDetailsC1ENS_16EventPointerTypeEi(%"struct.ui::PointerDetails"* nonnull %3, i32 1, i32 2147483647) #14
  call void @_ZN2ui10MouseEventC1ENS_9EventTypeERKN3gfx5PointES5_N4base9TimeTicksEiiRKNS_14PointerDetailsE(%"class.ui::MouseEvent"* nonnull %2, i32 6, %"class.gfx::Point"* nonnull dereferenceable(8) %10, %"class.gfx::Point"* nonnull dereferenceable(8) %10, i64 %32, i32 0, i32 0, %"struct.ui::PointerDetails"* nonnull dereferenceable(44) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %33) #14
  %34 = call i24 @_ZN4aura21WindowEventDispatcher24DispatchMouseEnterOrExitEPNS_6WindowERKN2ui10MouseEventENS3_9EventTypeE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* null, %"class.ui::MouseEvent"* nonnull dereferenceable(216) %2, i32 6) #14
  call void @_ZN2ui10MouseEventD1Ev(%"class.ui::MouseEvent"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %31) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  %35 = and i24 %34, 1
  %36 = icmp eq i24 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %1, %29
  %38 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 6
  %39 = bitcast %"class.aura::Window"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false)
  br label %40

40:                                               ; preds = %29, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N4aura21WindowEventDispatcher21OnOtherRootGotCaptureEv(%"class.aura::WindowEventDispatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.150"* %2 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcher21OnOtherRootGotCaptureEv(%"class.aura::WindowEventDispatcher"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher16SetNativeCaptureEv(%"class.aura::WindowEventDispatcher"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %3 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %2, align 8
  %4 = bitcast %"class.aura::WindowTreeHost"* %3 to void (%"class.aura::WindowTreeHost"*)***
  %5 = load void (%"class.aura::WindowTreeHost"*)**, void (%"class.aura::WindowTreeHost"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHost"*)** %5, i64 16
  %7 = load void (%"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHost"*)** %6, align 8
  tail call void %7(%"class.aura::WindowTreeHost"* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N4aura21WindowEventDispatcher16SetNativeCaptureEv(%"class.aura::WindowEventDispatcher"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.150"* %2, i64 11
  %4 = bitcast %"class.std::__1::__compressed_pair.150"* %3 to %"class.aura::WindowTreeHost"**
  %5 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %4, align 8
  %6 = bitcast %"class.aura::WindowTreeHost"* %5 to void (%"class.aura::WindowTreeHost"*)***
  %7 = load void (%"class.aura::WindowTreeHost"*)**, void (%"class.aura::WindowTreeHost"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHost"*)** %7, i64 16
  %9 = load void (%"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHost"*)** %8, align 8
  tail call void %9(%"class.aura::WindowTreeHost"* %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher20ReleaseNativeCaptureEv(%"class.aura::WindowEventDispatcher"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %3 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %2, align 8
  %4 = bitcast %"class.aura::WindowTreeHost"* %3 to void (%"class.aura::WindowTreeHost"*)***
  %5 = load void (%"class.aura::WindowTreeHost"*)**, void (%"class.aura::WindowTreeHost"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHost"*)** %5, i64 17
  %7 = load void (%"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHost"*)** %6, align 8
  tail call void %7(%"class.aura::WindowTreeHost"* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N4aura21WindowEventDispatcher20ReleaseNativeCaptureEv(%"class.aura::WindowEventDispatcher"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.150"* %2, i64 11
  %4 = bitcast %"class.std::__1::__compressed_pair.150"* %3 to %"class.aura::WindowTreeHost"**
  %5 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %4, align 8
  %6 = bitcast %"class.aura::WindowTreeHost"* %5 to void (%"class.aura::WindowTreeHost"*)***
  %7 = load void (%"class.aura::WindowTreeHost"*)**, void (%"class.aura::WindowTreeHost"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHost"*)** %7, i64 17
  %9 = load void (%"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHost"*)** %8, align 8
  tail call void %9(%"class.aura::WindowTreeHost"* %5) #14
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.ui::EventTarget"* @_ZN4aura21WindowEventDispatcher15GetRootForEventEPN2ui5EventE(%"class.aura::WindowEventDispatcher"* nocapture readonly, %"class.ui::Event"* nocapture readnone) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %4 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %4, i64 0, i32 4
  %6 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %7 = icmp eq %"class.aura::Window"* %6, null
  %8 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %6, i64 0, i32 2
  %9 = select i1 %7, %"class.ui::EventTarget"* null, %"class.ui::EventTarget"* %8
  ret %"class.ui::EventTarget"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher24OnEventProcessingStartedEPN2ui5EventE(%"class.aura::WindowEventDispatcher"*, %"class.ui::Event"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 23
  %6 = load i8, i8* %5, align 8, !range !28
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @_ZN2ui5Event10SetHandledEv(%"class.ui::Event"* %1) #14
  br label %96

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %17 [
    i32 1, label %26
    i32 2, label %26
    i32 3, label %26
    i32 4, label %26
    i32 5, label %26
    i32 6, label %26
    i32 9, label %26
    i32 10, label %26
    i32 34, label %26
    i32 35, label %12
    i32 36, label %12
  ]

12:                                               ; preds = %9, %9
  %13 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %1, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 262144
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %26, label %20

17:                                               ; preds = %9
  %18 = add i32 %11, -11
  %19 = icmp ult i32 %18, 4
  br i1 %19, label %26, label %20

20:                                               ; preds = %17, %12
  switch i32 %11, label %50 [
    i32 16, label %26
    i32 17, label %26
    i32 18, label %26
    i32 19, label %26
    i32 23, label %26
    i32 21, label %26
    i32 20, label %26
    i32 22, label %26
    i32 24, label %26
    i32 25, label %26
    i32 26, label %26
    i32 27, label %26
    i32 28, label %26
    i32 29, label %26
    i32 30, label %26
    i32 31, label %26
    i32 32, label %26
    i32 33, label %26
    i32 36, label %21
    i32 35, label %21
  ]

21:                                               ; preds = %20, %20
  %22 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %1, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 262144
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %50, label %26

26:                                               ; preds = %21, %9, %9, %9, %9, %9, %9, %9, %9, %9, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %12, %17
  %27 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 17
  %28 = bitcast %"class.ui::LocatedEvent"** %27 to %"class.ui::Event"**
  %29 = load %"class.ui::Event"*, %"class.ui::Event"** %28, align 8
  %30 = icmp eq %"class.ui::Event"* %29, %1
  br i1 %30, label %50, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.ui::Event"* %1 to %"class.ui::LocatedEvent"*
  %33 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %33) #14
  %34 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %35 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %34, align 8
  %36 = bitcast %"class.aura::WindowTreeHost"* %35 to void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)***
  %37 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %37, i64 5
  %39 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %38, align 8
  call void %39(%"class.gfx::Transform"* nonnull sret %3, %"class.aura::WindowTreeHost"* %35) #14
  %40 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %40) #14
  %41 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %34, align 8
  %42 = bitcast %"class.aura::WindowTreeHost"* %41 to void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)***
  %43 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %43, i64 7
  %45 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %44, align 8
  call void %45(%"class.gfx::Transform"* nonnull sret %4, %"class.aura::WindowTreeHost"* %41) #14
  %46 = bitcast %"class.ui::Event"* %1 to void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)***
  %47 = load void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)**, void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)*, void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)** %47, i64 3
  %49 = load void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)*, void (%"class.ui::LocatedEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)** %48, align 8
  call void %49(%"class.ui::LocatedEvent"* %32, %"class.gfx::Transform"* nonnull dereferenceable(68) %3, %"class.gfx::Transform"* nonnull dereferenceable(68) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %40) #14
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %33) #14
  br label %50

50:                                               ; preds = %21, %20, %31, %26
  %51 = call i8* @_Znwm(i64 8) #15
  %52 = bitcast i8* %51 to %"class.aura::WindowEventDispatcher::ObserverNotifier"*
  call void @_ZN4aura21WindowEventDispatcher16ObserverNotifierC2EPS0_RKN2ui5EventE(%"class.aura::WindowEventDispatcher::ObserverNotifier"* nonnull %52, %"class.aura::WindowEventDispatcher"* %0, %"class.ui::Event"* dereferenceable(144) %1) #14
  %53 = ptrtoint i8* %51 to i64
  %54 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 2
  %55 = bitcast %"class.std::__1::unique_ptr.139"*** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::unique_ptr.139"*** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %56, %59
  %61 = icmp eq i64 %60, 0
  %62 = shl i64 %60, 6
  %63 = add i64 %62, -1
  %64 = select i1 %61, i64 0, i64 %63
  %65 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 22, i32 0, i32 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, %66
  %70 = icmp eq i64 %64, %69
  %71 = inttoptr i64 %59 to %"class.std::__1::unique_ptr.139"**
  %72 = inttoptr i64 %56 to %"class.std::__1::unique_ptr.139"**
  br i1 %70, label %73, label %80

73:                                               ; preds = %50
  %74 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 22, i32 0
  call void @_ZNSt3__15dequeINS_10unique_ptrIN4aura21WindowEventDispatcher16ObserverNotifierENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %74) #14
  %75 = load i64, i64* %67, align 8
  %76 = load i64, i64* %65, align 8
  %77 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %57, align 8
  %78 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %54, align 8
  %79 = add i64 %76, %75
  br label %80

80:                                               ; preds = %73, %50
  %81 = phi i64 [ %79, %73 ], [ %69, %50 ]
  %82 = phi %"class.std::__1::unique_ptr.139"** [ %78, %73 ], [ %72, %50 ]
  %83 = phi %"class.std::__1::unique_ptr.139"** [ %77, %73 ], [ %71, %50 ]
  %84 = icmp eq %"class.std::__1::unique_ptr.139"** %82, %83
  br i1 %84, label %92, label %85

85:                                               ; preds = %80
  %86 = lshr i64 %81, 9
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %83, i64 %86
  %88 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %87, align 8
  %89 = and i64 %81, 511
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %88, i64 %89
  %91 = bitcast %"class.std::__1::unique_ptr.139"* %90 to i64*
  br label %92

92:                                               ; preds = %85, %80
  %93 = phi i64* [ %91, %85 ], [ null, %80 ]
  store i64 %53, i64* %93, align 8
  %94 = load i64, i64* %67, align 8
  %95 = add i64 %94, 1
  store i64 %95, i64* %67, align 8
  br label %96

96:                                               ; preds = %92, %8
  ret void
}

declare void @_ZN2ui5Event10SetHandledEv(%"class.ui::Event"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher25OnEventProcessingFinishedEPN2ui5EventE(%"class.aura::WindowEventDispatcher"* nocapture, %"class.ui::Event"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 23
  %4 = load i8, i8* %3, align 8, !range !28
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %35

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %7, align 8
  %9 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = lshr i64 %10, 9
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %8, i64 %11
  %13 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %12, align 8
  %14 = and i64 %10, 511
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %13, i64 %14, i32 0, i32 0, i32 0
  %16 = load %"class.aura::WindowEventDispatcher::ObserverNotifier"*, %"class.aura::WindowEventDispatcher::ObserverNotifier"** %15, align 8
  store %"class.aura::WindowEventDispatcher::ObserverNotifier"* null, %"class.aura::WindowEventDispatcher::ObserverNotifier"** %15, align 8
  %17 = icmp eq %"class.aura::WindowEventDispatcher::ObserverNotifier"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %6
  tail call void @_ZN4aura21WindowEventDispatcher16ObserverNotifierD2Ev(%"class.aura::WindowEventDispatcher::ObserverNotifier"* nonnull %16) #14
  %19 = bitcast %"class.aura::WindowEventDispatcher::ObserverNotifier"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %18, %6
  %21 = bitcast i64* %9 to <2 x i64>*
  %22 = load <2 x i64>, <2 x i64>* %21, align 8
  %23 = add <2 x i64> %22, <i64 1, i64 -1>
  %24 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> %23, <2 x i64>* %24, align 8
  %25 = extractelement <2 x i64> %23, i32 0
  %26 = icmp ult i64 %25, 1024
  br i1 %26, label %35, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.std::__1::unique_ptr.139"*** %7 to i8***
  %29 = load i8**, i8*** %28, align 8
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #15
  %31 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %7, align 8
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %31, i64 1
  store %"class.std::__1::unique_ptr.139"** %32, %"class.std::__1::unique_ptr.139"*** %7, align 8
  %33 = load i64, i64* %9, align 8
  %34 = add i64 %33, -512
  store i64 %34, i64* %9, align 8
  br label %35

35:                                               ; preds = %27, %20, %2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4aura21WindowEventDispatcher19CanDispatchToTargetEPN2ui11EventTargetE(%"class.aura::WindowEventDispatcher"* nocapture readonly, %"class.ui::EventTarget"* readnone) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 9
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = icmp eq %"class.aura::Window"* %4, null
  %6 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %4, i64 0, i32 2
  %7 = select i1 %5, %"class.ui::EventTarget"* null, %"class.ui::EventTarget"* %6
  %8 = icmp eq %"class.ui::EventTarget"* %7, %1
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN4aura21WindowEventDispatcher16PreDispatchEventEPN2ui11EventTargetEPNS1_5EventE(%"class.aura::WindowEventDispatcher"*, %"class.ui::EventTarget"*, %"class.ui::Event"*) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.aura::WindowTracker", align 8
  %7 = icmp eq %"class.ui::EventTarget"* %1, null
  %8 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %1, i64 -2, i32 2, i32 0, i32 1
  %9 = bitcast %"class.ui::EventHandler"*** %8 to %"class.aura::Window"*
  %10 = select i1 %7, %"class.aura::Window"* null, %"class.aura::Window"* %9
  %11 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %12 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %11, align 8
  %13 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %12, i64 0, i32 4
  %14 = load %"class.aura::Window"*, %"class.aura::Window"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %14, %"class.aura::Window"* %10) #14
  br i1 %15, label %19, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i32 516, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0)) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %3, %16
  %20 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %2, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 11
  %26 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %2, i64 0, i32 2, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  call void @_ZN2ui38FractionOfTimeWithoutUserInputRecorder17RecordEventAtTimeEN4base9TimeTicksE(%"class.ui::FractionOfTimeWithoutUserInputRecorder"* %25, i64 %27) #14
  br label %28

28:                                               ; preds = %19, %24
  %29 = bitcast %"class.aura::WindowTracker"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %29) #14
  %30 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %6, i64 0, i32 1, i32 0, i32 0
  %31 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %6, i64 0, i32 1, i32 0, i32 1
  %32 = bitcast %"class.aura::WindowTracker"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 48, i1 false)
  call void @_ZN4aura13WindowTrackerC1Ev(%"class.aura::WindowTracker"* nonnull %6) #14
  call void @_ZN4aura13WindowTracker3AddEPNS_6WindowE(%"class.aura::WindowTracker"* nonnull %6, %"class.aura::Window"* %10) #14
  %33 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 17
  %34 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %33, align 8
  %35 = icmp eq %"class.ui::LocatedEvent"* %34, null
  br i1 %35, label %36, label %66

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %2, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  switch i32 %38, label %56 [
    i32 13, label %43
    i32 2, label %43
    i32 10, label %39
    i32 1, label %39
    i32 9, label %39
    i32 3, label %39
    i32 4, label %39
    i32 5, label %39
  ]

39:                                               ; preds = %36, %36, %36, %36, %36, %36
  %40 = load i32, i32* %20, align 8
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %56, label %43

43:                                               ; preds = %36, %36, %39
  %44 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 14
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %66

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %49 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %48, align 8
  store %"class.ui::LocatedEvent"* null, %"class.ui::LocatedEvent"** %48, align 8
  %50 = icmp eq %"class.ui::LocatedEvent"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.ui::LocatedEvent"* %49 to void (%"class.ui::LocatedEvent"*)***
  %53 = load void (%"class.ui::LocatedEvent"*)**, void (%"class.ui::LocatedEvent"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %53, i64 1
  %55 = load void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %54, align 8
  call void %55(%"class.ui::LocatedEvent"* nonnull %49) #14
  br label %56

56:                                               ; preds = %36, %39, %51, %47
  %57 = call i24 @_ZN4aura21WindowEventDispatcher18DispatchHeldEventsEv(%"class.aura::WindowEventDispatcher"* %0)
  %58 = trunc i24 %57 to i8
  %59 = lshr i24 %57, 8
  %60 = trunc i24 %59 to i8
  %61 = lshr i24 %57, 16
  %62 = trunc i24 %61 to i8
  %63 = or i24 %59, %57
  %64 = trunc i24 %63 to i8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %167

66:                                               ; preds = %56, %43, %28
  %67 = load %"class.aura::Window"**, %"class.aura::Window"*** %30, align 8
  %68 = load %"class.aura::Window"**, %"class.aura::Window"*** %31, align 8
  %69 = icmp eq %"class.aura::Window"** %67, %68
  br i1 %69, label %167, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %2, i64 0, i32 1
  %72 = load i32, i32* %71, align 8
  switch i32 %72, label %122 [
    i32 1, label %73
    i32 2, label %73
    i32 3, label %73
    i32 4, label %73
    i32 5, label %73
    i32 6, label %73
    i32 9, label %73
    i32 10, label %73
    i32 34, label %85
    i32 35, label %81
    i32 36, label %81
  ]

73:                                               ; preds = %70, %70, %70, %70, %70, %70, %70, %70
  %74 = call %"class.ui::MouseEvent"* @_ZN2ui5Event12AsMouseEventEv(%"class.ui::Event"* %2) #14
  %75 = call i24 @_ZN4aura21WindowEventDispatcher21PreDispatchMouseEventEPNS_6WindowEPN2ui10MouseEventE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %10, %"class.ui::MouseEvent"* %74)
  %76 = trunc i24 %75 to i8
  %77 = lshr i24 %75, 8
  %78 = trunc i24 %77 to i8
  %79 = lshr i24 %75, 16
  %80 = trunc i24 %79 to i8
  br label %155

81:                                               ; preds = %70, %70
  %82 = load i32, i32* %20, align 8
  %83 = and i32 %82, 262144
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %155

85:                                               ; preds = %70, %81
  %86 = call %"class.ui::ScrollEvent"* @_ZN2ui5Event13AsScrollEventEv(%"class.ui::Event"* %2) #14
  %87 = getelementptr inbounds %"class.ui::ScrollEvent", %"class.ui::ScrollEvent"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.ui::ScrollEvent", %"class.ui::ScrollEvent"* %86, i64 0, i32 0, i32 0, i32 0, i32 4
  %89 = load i32, i32* %88, align 8
  %90 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #14
  %91 = getelementptr inbounds %"class.ui::ScrollEvent", %"class.ui::ScrollEvent"* %86, i64 0, i32 0, i32 0, i32 1
  %92 = call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %91) #14
  store i64 %92, i64* %4, align 8
  %93 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %10, i64 0, i32 12
  %94 = load %"class.aura::WindowDelegate"*, %"class.aura::WindowDelegate"** %93, align 8
  %95 = icmp eq %"class.aura::WindowDelegate"* %94, null
  br i1 %95, label %96, label %97

96:                                               ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #14
  br label %106

97:                                               ; preds = %85
  %98 = bitcast i64* %4 to %"class.gfx::Point"*
  %99 = bitcast %"class.aura::WindowDelegate"* %94 to i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)***
  %100 = load i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)**, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*** %99, align 8
  %101 = getelementptr inbounds i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)** %100, i64 14
  %102 = load i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)** %101, align 8
  %103 = call i32 %102(%"class.aura::WindowDelegate"* nonnull %94, %"class.gfx::Point"* nonnull dereferenceable(8) %98) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #14
  switch i32 %103, label %104 [
    i32 6, label %106
    i32 0, label %106
  ]

104:                                              ; preds = %97
  %105 = or i32 %89, 131072
  br label %106

106:                                              ; preds = %104, %97, %97, %96
  %107 = phi i32 [ %105, %104 ], [ %89, %97 ], [ %89, %96 ], [ %89, %97 ]
  store i32 %107, i32* %88, align 8
  %108 = bitcast %"class.ui::LocatedEvent"** %33 to %"class.ui::Event"**
  %109 = load %"class.ui::Event"*, %"class.ui::Event"** %108, align 8
  %110 = icmp eq %"class.ui::Event"* %109, %87
  br i1 %110, label %155, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.ui::ScrollEvent", %"class.ui::ScrollEvent"* %86, i64 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i32, i32* %112, align 8
  switch i32 %113, label %155 [
    i32 1, label %117
    i32 2, label %117
    i32 3, label %117
    i32 4, label %117
    i32 5, label %117
    i32 6, label %117
    i32 9, label %117
    i32 10, label %117
    i32 34, label %117
    i32 35, label %114
    i32 36, label %114
  ]

114:                                              ; preds = %111, %111
  %115 = and i32 %107, 262144
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %155

117:                                              ; preds = %114, %111, %111, %111, %111, %111, %111, %111, %111, %111
  %118 = and i32 %107, 1
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %155

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 12
  store i8 0, i8* %121, align 8
  br label %155

122:                                              ; preds = %70
  %123 = add i32 %72, -11
  %124 = icmp ult i32 %123, 4
  br i1 %124, label %125, label %133

125:                                              ; preds = %122
  %126 = call %"class.ui::TouchEvent"* @_ZN2ui5Event12AsTouchEventEv(%"class.ui::Event"* %2) #14
  %127 = call i24 @_ZN4aura21WindowEventDispatcher21PreDispatchTouchEventEPNS_6WindowEPN2ui10TouchEventE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %10, %"class.ui::TouchEvent"* %126)
  %128 = trunc i24 %127 to i8
  %129 = lshr i24 %127, 8
  %130 = trunc i24 %129 to i8
  %131 = lshr i24 %127, 16
  %132 = trunc i24 %131 to i8
  br label %155

133:                                              ; preds = %122
  %134 = add i32 %72, -7
  %135 = icmp ult i32 %134, 2
  br i1 %135, label %136, label %144

136:                                              ; preds = %133
  %137 = call %"class.ui::KeyEvent"* @_ZN2ui5Event10AsKeyEventEv(%"class.ui::Event"* %2) #14
  %138 = call i24 @_ZN4aura21WindowEventDispatcher19PreDispatchKeyEventEPNS_6WindowEPN2ui8KeyEventE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %10, %"class.ui::KeyEvent"* %137)
  %139 = trunc i24 %138 to i8
  %140 = lshr i24 %138, 8
  %141 = trunc i24 %140 to i8
  %142 = lshr i24 %138, 16
  %143 = trunc i24 %142 to i8
  br label %155

144:                                              ; preds = %133
  %145 = add i32 %72, -27
  %146 = icmp ult i32 %145, 3
  br i1 %146, label %147, label %155

147:                                              ; preds = %144
  %148 = call %"class.ui::GestureEvent"* @_ZN2ui5Event14AsGestureEventEv(%"class.ui::Event"* %2) #14
  %149 = call i24 @_ZN4aura21WindowEventDispatcher21PreDispatchPinchEventEPNS_6WindowEPN2ui12GestureEventE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %10, %"class.ui::GestureEvent"* %148)
  %150 = trunc i24 %149 to i8
  %151 = lshr i24 %149, 8
  %152 = trunc i24 %151 to i8
  %153 = lshr i24 %149, 16
  %154 = trunc i24 %153 to i8
  br label %155

155:                                              ; preds = %81, %120, %117, %114, %111, %106, %136, %147, %144, %125, %73
  %156 = phi i8 [ %80, %73 ], [ %132, %125 ], [ %143, %136 ], [ %154, %147 ], [ 0, %144 ], [ 0, %106 ], [ 0, %111 ], [ 0, %114 ], [ 0, %117 ], [ 0, %120 ], [ 0, %81 ]
  %157 = phi i8 [ %78, %73 ], [ %130, %125 ], [ %141, %136 ], [ %152, %147 ], [ 0, %144 ], [ 0, %106 ], [ 0, %111 ], [ 0, %114 ], [ 0, %117 ], [ 0, %120 ], [ 0, %81 ]
  %158 = phi i8 [ %76, %73 ], [ %128, %125 ], [ %139, %136 ], [ %150, %147 ], [ 0, %144 ], [ 0, %106 ], [ 0, %111 ], [ 0, %114 ], [ 0, %117 ], [ 0, %120 ], [ 0, %81 ]
  %159 = or i8 %158, %157
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %167

161:                                              ; preds = %155
  %162 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 9
  %163 = bitcast %"class.aura::Window"** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 10
  %166 = bitcast %"class.aura::Window"** %165 to i64*
  store i64 %164, i64* %166, align 8
  store %"class.aura::Window"* %10, %"class.aura::Window"** %162, align 8
  br label %167

167:                                              ; preds = %161, %155, %66, %56
  %168 = phi i8 [ %60, %56 ], [ 1, %66 ], [ 0, %161 ], [ %157, %155 ]
  %169 = phi i8 [ %62, %56 ], [ 0, %66 ], [ 0, %161 ], [ %156, %155 ]
  %170 = phi i8 [ %58, %56 ], [ 0, %66 ], [ 0, %161 ], [ %158, %155 ]
  call void @_ZN4aura13WindowTrackerD1Ev(%"class.aura::WindowTracker"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #14
  %171 = zext i8 %169 to i24
  %172 = shl nuw i24 %171, 16
  %173 = zext i8 %168 to i24
  %174 = shl nuw nsw i24 %173, 8
  %175 = or i24 %172, %174
  %176 = zext i8 %170 to i24
  %177 = or i24 %175, %176
  ret i24 %177
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN2ui38FractionOfTimeWithoutUserInputRecorder17RecordEventAtTimeEN4base9TimeTicksE(%"class.ui::FractionOfTimeWithoutUserInputRecorder"*, i64) local_unnamed_addr #2

declare void @_ZN4aura13WindowTrackerC1Ev(%"class.aura::WindowTracker"*) unnamed_addr #2

declare void @_ZN4aura13WindowTracker3AddEPNS_6WindowE(%"class.aura::WindowTracker"*, %"class.aura::Window"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN4aura21WindowEventDispatcher21PreDispatchMouseEventEPNS_6WindowEPN2ui10MouseEventE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.ui::MouseEvent"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.aura::WindowTracker", align 8
  %6 = ptrtoint %"class.aura::Window"* %1 to i64
  %7 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %8 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %7, align 8
  %9 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %8, i64 0, i32 4
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = tail call %"class.aura::client::CursorClient"* @_ZN4aura6client15GetCursorClientEPNS_6WindowE(%"class.aura::Window"* %10) #14
  %12 = icmp eq %"class.aura::client::CursorClient"* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.aura::client::CursorClient"* %11 to i1 (%"class.aura::client::CursorClient"*)***
  %15 = load i1 (%"class.aura::client::CursorClient"*)**, i1 (%"class.aura::client::CursorClient"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.aura::client::CursorClient"*)*, i1 (%"class.aura::client::CursorClient"*)** %15, i64 10
  %17 = load i1 (%"class.aura::client::CursorClient"*)*, i1 (%"class.aura::client::CursorClient"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.aura::client::CursorClient"* nonnull %11) #14
  br i1 %18, label %30, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 0, i32 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 6
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @_ZN2ui5Event10SetHandledEv(%"class.ui::Event"* %20) #14
  br label %200

30:                                               ; preds = %25, %19, %3, %13
  %31 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %32 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %31, i64 0, i32 7, i32 0, i32 0, i32 0
  %33 = load %"class.aura::EnvInputStateController"*, %"class.aura::EnvInputStateController"** %32, align 8
  %34 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %7, align 8
  %35 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %34, i64 0, i32 4
  %36 = load %"class.aura::Window"*, %"class.aura::Window"** %35, align 8
  tail call void @_ZN4aura23EnvInputStateController24UpdateStateForMouseEventEPKNS_6WindowERKN2ui10MouseEventE(%"class.aura::EnvInputStateController"* %33, %"class.aura::Window"* %36, %"class.ui::MouseEvent"* dereferenceable(216) %2) #14
  %37 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  switch i32 %39, label %94 [
    i32 13, label %45
    i32 2, label %45
    i32 6, label %96
    i32 1, label %40
    i32 9, label %40
    i32 3, label %40
    i32 4, label %40
    i32 5, label %40
    i32 10, label %40
  ]

40:                                               ; preds = %30, %30, %30, %30, %30, %30
  %41 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 0, i32 0, i32 4
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %92, label %45

45:                                               ; preds = %30, %30, %40
  %46 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 17
  %47 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %46, align 8
  %48 = icmp eq %"class.ui::LocatedEvent"* %47, null
  br i1 %48, label %49, label %92

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 14
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %83, label %53

53:                                               ; preds = %49
  %54 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %7, align 8
  %55 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %54, i64 0, i32 4
  %56 = load %"class.aura::Window"*, %"class.aura::Window"** %55, align 8
  %57 = tail call i8* @_Znwm(i64 216) #15
  %58 = bitcast i8* %57 to %"class.ui::LocatedEvent"*
  %59 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 0
  tail call void @_ZN2ui12LocatedEventC2IN4aura6WindowEEERKS0_PT_S7_(%"class.ui::LocatedEvent"* nonnull %58, %"class.ui::LocatedEvent"* dereferenceable(160) %59, %"class.aura::Window"* %1, %"class.aura::Window"* %56) #14
  %60 = bitcast i8* %57 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui10MouseEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds i8, i8* %57, i64 160
  %62 = bitcast i8* %61 to i32*
  %63 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 1
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds i8, i8* %57, i64 164
  %66 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 2
  %67 = bitcast %"class.gfx::Vector2dF"* %66 to i64*
  %68 = bitcast i8* %65 to i64*
  %69 = load i64, i64* %67, align 4
  store i64 %69, i64* %68, align 4
  %70 = getelementptr inbounds i8, i8* %57, i64 172
  %71 = bitcast i8* %70 to %"struct.ui::PointerDetails"*
  %72 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 3
  tail call void @_ZN2ui14PointerDetailsC1ERKS0_(%"struct.ui::PointerDetails"* %71, %"struct.ui::PointerDetails"* dereferenceable(44) %72) #14
  %73 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %74 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %73, align 8
  %75 = bitcast %"class.ui::LocatedEvent"** %73 to i8**
  store i8* %57, i8** %75, align 8
  %76 = icmp eq %"class.ui::LocatedEvent"* %74, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %53
  %78 = bitcast %"class.ui::LocatedEvent"* %74 to void (%"class.ui::LocatedEvent"*)***
  %79 = load void (%"class.ui::LocatedEvent"*)**, void (%"class.ui::LocatedEvent"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %79, i64 1
  %81 = load void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %80, align 8
  tail call void %81(%"class.ui::LocatedEvent"* nonnull %74) #14
  br label %82

82:                                               ; preds = %77, %53
  tail call void @_ZN2ui5Event10SetHandledEv(%"class.ui::Event"* %37) #14
  br label %200

83:                                               ; preds = %49
  %84 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %85 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %84, align 8
  store %"class.ui::LocatedEvent"* null, %"class.ui::LocatedEvent"** %84, align 8
  %86 = icmp eq %"class.ui::LocatedEvent"* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = bitcast %"class.ui::LocatedEvent"* %85 to void (%"class.ui::LocatedEvent"*)***
  %89 = load void (%"class.ui::LocatedEvent"*)**, void (%"class.ui::LocatedEvent"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %89, i64 1
  %91 = load void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %90, align 8
  tail call void %91(%"class.ui::LocatedEvent"* nonnull %85) #14
  br label %92

92:                                               ; preds = %45, %83, %87, %40
  %93 = load i32, i32* %38, align 8
  br label %94

94:                                               ; preds = %92, %30
  %95 = phi i32 [ %93, %92 ], [ %39, %30 ]
  switch i32 %95, label %165 [
    i32 6, label %96
    i32 4, label %114
    i32 1, label %152
    i32 3, label %163
  ]

96:                                               ; preds = %30, %94
  %97 = icmp eq %"class.aura::Window"* %1, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %96
  %99 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %7, align 8
  %100 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %99, i64 0, i32 4
  %101 = load %"class.aura::Window"*, %"class.aura::Window"** %100, align 8
  %102 = icmp eq %"class.aura::Window"* %101, %1
  br i1 %102, label %103, label %165

103:                                              ; preds = %96, %98
  %104 = tail call i24 @_ZN4aura21WindowEventDispatcher24DispatchMouseEnterOrExitEPNS_6WindowERKN2ui10MouseEventENS3_9EventTypeE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %1, %"class.ui::MouseEvent"* dereferenceable(216) %2, i32 6)
  %105 = trunc i24 %104 to i8
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %112, label %107

107:                                              ; preds = %103
  %108 = lshr i24 %104, 16
  %109 = trunc i24 %108 to i8
  %110 = lshr i24 %104, 8
  %111 = trunc i24 %110 to i8
  tail call void @_ZN2ui5Event10SetHandledEv(%"class.ui::Event"* %37) #14
  br label %200

112:                                              ; preds = %103
  %113 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 7
  store %"class.aura::Window"* null, %"class.aura::Window"** %113, align 8
  br label %165

114:                                              ; preds = %94
  %115 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 7
  %116 = load %"class.aura::Window"*, %"class.aura::Window"** %115, align 8
  %117 = icmp eq %"class.aura::Window"* %116, %1
  br i1 %117, label %165, label %118

118:                                              ; preds = %114
  %119 = bitcast %"class.aura::WindowTracker"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %119) #14
  %120 = bitcast %"class.aura::WindowTracker"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 -86, i64 48, i1 false)
  call void @_ZN4aura13WindowTrackerC1Ev(%"class.aura::WindowTracker"* nonnull %5) #14
  call void @_ZN4aura13WindowTracker3AddEPNS_6WindowE(%"class.aura::WindowTracker"* nonnull %5, %"class.aura::Window"* %1) #14
  %121 = call i24 @_ZN4aura21WindowEventDispatcher24DispatchMouseEnterOrExitEPNS_6WindowERKN2ui10MouseEventENS3_9EventTypeE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %1, %"class.ui::MouseEvent"* dereferenceable(216) %2, i32 6)
  %122 = trunc i24 %121 to i8
  %123 = lshr i24 %121, 16
  %124 = trunc i24 %123 to i8
  %125 = call zeroext i1 @_ZNK4aura13WindowTracker8ContainsEPNS_6WindowE(%"class.aura::WindowTracker"* nonnull %5, %"class.aura::Window"* %1) #14
  %126 = xor i1 %125, true
  %127 = zext i1 %126 to i8
  %128 = and i24 %121, 1
  %129 = icmp eq i24 %128, 0
  br i1 %129, label %131, label %130

130:                                              ; preds = %118
  call void @_ZN2ui5Event10SetHandledEv(%"class.ui::Event"* %37) #14
  call void @_ZN4aura13WindowTrackerD1Ev(%"class.aura::WindowTracker"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %119) #14
  br label %200

131:                                              ; preds = %118
  %132 = load %"class.aura::Window"*, %"class.aura::Window"** %115, align 8
  %133 = icmp eq %"class.aura::Window"* %132, %116
  br i1 %133, label %135, label %134

134:                                              ; preds = %131
  call void @_ZN2ui5Event10SetHandledEv(%"class.ui::Event"* %37) #14
  call void @_ZN4aura13WindowTrackerD1Ev(%"class.aura::WindowTracker"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %119) #14
  br label %200

135:                                              ; preds = %131
  %136 = and i24 %121, 256
  %137 = icmp ne i24 %136, 0
  %138 = or i1 %137, %126
  br i1 %138, label %139, label %140

139:                                              ; preds = %135
  store %"class.aura::Window"* null, %"class.aura::Window"** %115, align 8
  call void @_ZN2ui5Event10SetHandledEv(%"class.ui::Event"* %37) #14
  call void @_ZN4aura13WindowTrackerD1Ev(%"class.aura::WindowTracker"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %119) #14
  br label %200

140:                                              ; preds = %135
  call void @_ZN4aura13WindowTracker6RemoveEPNS_6WindowE(%"class.aura::WindowTracker"* nonnull %5, %"class.aura::Window"* %1) #14
  %141 = bitcast %"class.aura::Window"** %115 to i64*
  store i64 %6, i64* %141, align 8
  %142 = call i24 @_ZN4aura21WindowEventDispatcher24DispatchMouseEnterOrExitEPNS_6WindowERKN2ui10MouseEventENS3_9EventTypeE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %1, %"class.ui::MouseEvent"* dereferenceable(216) %2, i32 5)
  %143 = and i24 %142, 257
  %144 = icmp eq i24 %143, 0
  br i1 %144, label %151, label %145

145:                                              ; preds = %140
  %146 = lshr i24 %142, 16
  %147 = trunc i24 %146 to i8
  %148 = lshr i24 %142, 8
  %149 = trunc i24 %148 to i8
  %150 = trunc i24 %142 to i8
  call void @_ZN2ui5Event10SetHandledEv(%"class.ui::Event"* %37) #14
  call void @_ZN4aura13WindowTrackerD1Ev(%"class.aura::WindowTracker"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %119) #14
  br label %200

151:                                              ; preds = %140
  call void @_ZN4aura13WindowTrackerD1Ev(%"class.aura::WindowTracker"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %119) #14
  br label %165

152:                                              ; preds = %94
  %153 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 0, i32 0, i32 4
  %154 = load i32, i32* %153, align 8
  %155 = and i32 %154, 131072
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %165

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 6
  %159 = load %"class.aura::Window"*, %"class.aura::Window"** %158, align 8
  %160 = icmp eq %"class.aura::Window"* %159, null
  br i1 %160, label %161, label %165

161:                                              ; preds = %157
  %162 = bitcast %"class.aura::Window"** %158 to i64*
  store i64 %6, i64* %162, align 8
  br label %165

163:                                              ; preds = %94
  %164 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 6
  store %"class.aura::Window"* null, %"class.aura::Window"** %164, align 8
  br label %165

165:                                              ; preds = %151, %114, %157, %152, %94, %161, %98, %112, %163
  %166 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 0, i32 0, i32 4
  %167 = load i32, i32* %166, align 8
  %168 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #14
  %169 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 0, i32 1
  %170 = call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %169) #14
  store i64 %170, i64* %4, align 8
  %171 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 12
  %172 = load %"class.aura::WindowDelegate"*, %"class.aura::WindowDelegate"** %171, align 8
  %173 = icmp eq %"class.aura::WindowDelegate"* %172, null
  br i1 %173, label %174, label %175

174:                                              ; preds = %165
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #14
  br label %184

175:                                              ; preds = %165
  %176 = bitcast i64* %4 to %"class.gfx::Point"*
  %177 = bitcast %"class.aura::WindowDelegate"* %172 to i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)***
  %178 = load i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)**, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*** %177, align 8
  %179 = getelementptr inbounds i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)** %178, i64 14
  %180 = load i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)** %179, align 8
  %181 = call i32 %180(%"class.aura::WindowDelegate"* nonnull %172, %"class.gfx::Point"* nonnull dereferenceable(8) %176) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #14
  switch i32 %181, label %182 [
    i32 6, label %184
    i32 0, label %184
  ]

182:                                              ; preds = %175
  %183 = or i32 %167, 131072
  br label %184

184:                                              ; preds = %182, %175, %175, %174
  %185 = phi i32 [ %183, %182 ], [ %167, %175 ], [ %167, %174 ], [ %167, %175 ]
  store i32 %185, i32* %166, align 8
  %186 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 17
  %187 = bitcast %"class.ui::LocatedEvent"** %186 to %"class.ui::Event"**
  %188 = load %"class.ui::Event"*, %"class.ui::Event"** %187, align 8
  %189 = icmp eq %"class.ui::Event"* %188, %37
  br i1 %189, label %200, label %190

190:                                              ; preds = %184
  %191 = load i32, i32* %38, align 8
  switch i32 %191, label %200 [
    i32 1, label %195
    i32 2, label %195
    i32 3, label %195
    i32 4, label %195
    i32 5, label %195
    i32 6, label %195
    i32 9, label %195
    i32 10, label %195
    i32 34, label %195
    i32 35, label %192
    i32 36, label %192
  ]

192:                                              ; preds = %190, %190
  %193 = and i32 %185, 262144
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %200

195:                                              ; preds = %192, %190, %190, %190, %190, %190, %190, %190, %190, %190
  %196 = and i32 %185, 1
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %195
  %199 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 12
  store i8 0, i8* %199, align 8
  br label %200

200:                                              ; preds = %198, %195, %192, %190, %184, %145, %139, %134, %130, %107, %82, %29
  %201 = phi i8 [ %124, %139 ], [ %147, %145 ], [ %124, %134 ], [ %124, %130 ], [ %109, %107 ], [ 0, %82 ], [ 0, %29 ], [ 0, %184 ], [ 0, %190 ], [ 0, %192 ], [ 0, %195 ], [ 0, %198 ]
  %202 = phi i8 [ %127, %139 ], [ %149, %145 ], [ %127, %134 ], [ %127, %130 ], [ %111, %107 ], [ 0, %82 ], [ 0, %29 ], [ 0, %184 ], [ 0, %190 ], [ 0, %192 ], [ 0, %195 ], [ 0, %198 ]
  %203 = phi i8 [ %122, %139 ], [ %150, %145 ], [ %122, %134 ], [ %122, %130 ], [ %105, %107 ], [ 0, %82 ], [ 0, %29 ], [ 0, %184 ], [ 0, %190 ], [ 0, %192 ], [ 0, %195 ], [ 0, %198 ]
  %204 = zext i8 %201 to i24
  %205 = shl nuw i24 %204, 16
  %206 = zext i8 %202 to i24
  %207 = shl nuw nsw i24 %206, 8
  %208 = or i24 %207, %205
  %209 = zext i8 %203 to i24
  %210 = or i24 %208, %209
  ret i24 %210
}

declare %"class.ui::MouseEvent"* @_ZN2ui5Event12AsMouseEventEv(%"class.ui::Event"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN4aura21WindowEventDispatcher23PreDispatchLocatedEventEPNS_6WindowEPN2ui12LocatedEventE(%"class.aura::WindowEventDispatcher"* nocapture, %"class.aura::Window"* nocapture readonly, %"class.ui::LocatedEvent"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 0
  %6 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 1
  %10 = tail call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %9) #14
  store i64 %10, i64* %4, align 8
  %11 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 12
  %12 = load %"class.aura::WindowDelegate"*, %"class.aura::WindowDelegate"** %11, align 8
  %13 = icmp eq %"class.aura::WindowDelegate"* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  br label %24

15:                                               ; preds = %3
  %16 = bitcast i64* %4 to %"class.gfx::Point"*
  %17 = bitcast %"class.aura::WindowDelegate"* %12 to i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)***
  %18 = load i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)**, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)** %18, i64 14
  %20 = load i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)** %19, align 8
  %21 = call i32 %20(%"class.aura::WindowDelegate"* nonnull %12, %"class.gfx::Point"* nonnull dereferenceable(8) %16) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  switch i32 %21, label %22 [
    i32 6, label %24
    i32 0, label %24
  ]

22:                                               ; preds = %15
  %23 = or i32 %7, 131072
  br label %24

24:                                               ; preds = %15, %15, %14, %22
  %25 = phi i32 [ %23, %22 ], [ %7, %15 ], [ %7, %14 ], [ %7, %15 ]
  store i32 %25, i32* %6, align 8
  %26 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 17
  %27 = bitcast %"class.ui::LocatedEvent"** %26 to %"class.ui::Event"**
  %28 = load %"class.ui::Event"*, %"class.ui::Event"** %27, align 8
  %29 = icmp eq %"class.ui::Event"* %28, %5
  br i1 %29, label %41, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  switch i32 %32, label %41 [
    i32 1, label %36
    i32 2, label %36
    i32 3, label %36
    i32 4, label %36
    i32 5, label %36
    i32 6, label %36
    i32 9, label %36
    i32 10, label %36
    i32 34, label %36
    i32 35, label %33
    i32 36, label %33
  ]

33:                                               ; preds = %30, %30
  %34 = and i32 %25, 262144
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %30, %30, %30, %30, %30, %30, %30, %30, %30, %33
  %37 = and i32 %25, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 12
  store i8 0, i8* %40, align 8
  br label %41

41:                                               ; preds = %30, %36, %39, %33, %24
  ret i24 0
}

declare %"class.ui::ScrollEvent"* @_ZN2ui5Event13AsScrollEventEv(%"class.ui::Event"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN4aura21WindowEventDispatcher21PreDispatchTouchEventEPNS_6WindowEPN2ui10TouchEventE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.ui::TouchEvent"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.ui::TouchEvent", align 8
  %6 = alloca %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = alloca %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %8 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %2, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %2, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 13
  br i1 %11, label %12, label %50

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 14
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %50, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 17
  %18 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %17, align 8
  %19 = icmp eq %"class.ui::LocatedEvent"* %18, null
  br i1 %19, label %20, label %50

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %22 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %21, align 8
  %23 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %22, i64 0, i32 4
  %24 = load %"class.aura::Window"*, %"class.aura::Window"** %23, align 8
  %25 = tail call i8* @_Znwm(i64 216) #15
  %26 = bitcast i8* %25 to %"class.ui::LocatedEvent"*
  %27 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %2, i64 0, i32 0
  tail call void @_ZN2ui12LocatedEventC2IN4aura6WindowEEERKS0_PT_S7_(%"class.ui::LocatedEvent"* nonnull %26, %"class.ui::LocatedEvent"* dereferenceable(160) %27, %"class.aura::Window"* %1, %"class.aura::Window"* %24) #14
  %28 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui10TouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %25, i64 160
  %30 = bitcast i8* %29 to i32*
  %31 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %2, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %30, align 8
  %33 = getelementptr inbounds i8, i8* %25, i64 164
  %34 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %2, i64 0, i32 2
  %35 = load i8, i8* %34, align 4, !range !28
  store i8 %35, i8* %33, align 4
  %36 = getelementptr inbounds i8, i8* %25, i64 165
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds i8, i8* %25, i64 168
  %38 = bitcast i8* %37 to %"struct.ui::PointerDetails"*
  %39 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %2, i64 0, i32 5
  tail call void @_ZN2ui14PointerDetailsC1ERKS0_(%"struct.ui::PointerDetails"* %38, %"struct.ui::PointerDetails"* dereferenceable(44) %39) #14
  %40 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %41 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %40, align 8
  %42 = bitcast %"class.ui::LocatedEvent"** %40 to i8**
  store i8* %25, i8** %42, align 8
  %43 = icmp eq %"class.ui::LocatedEvent"* %41, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %20
  %45 = bitcast %"class.ui::LocatedEvent"* %41 to void (%"class.ui::LocatedEvent"*)***
  %46 = load void (%"class.ui::LocatedEvent"*)**, void (%"class.ui::LocatedEvent"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %46, i64 1
  %48 = load void (%"class.ui::LocatedEvent"*)*, void (%"class.ui::LocatedEvent"*)** %47, align 8
  tail call void %48(%"class.ui::LocatedEvent"* nonnull %41) #14
  br label %49

49:                                               ; preds = %44, %20
  tail call void @_ZN2ui5Event10SetHandledEv(%"class.ui::Event"* %8) #14
  br label %444

50:                                               ; preds = %16, %12, %3
  %51 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %52 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %51, i64 0, i32 7, i32 0, i32 0, i32 0
  %53 = load %"class.aura::EnvInputStateController"*, %"class.aura::EnvInputStateController"** %52, align 8
  tail call void @_ZN4aura23EnvInputStateController24UpdateStateForTouchEventERKN2ui10TouchEventE(%"class.aura::EnvInputStateController"* %53, %"class.ui::TouchEvent"* dereferenceable(216) %2) #14
  %54 = bitcast %"class.ui::TouchEvent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %54) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* align 8 bitcast (<{ { { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr" }, %"class.gfx::PointF", %"class.gfx::PointF" }, i32, i8, i8, [2 x i8], %"struct.ui::PointerDetails", [4 x i8] }>* @__const._ZN4aura21WindowEventDispatcher21PreDispatchTouchEventEPNS_6WindowEPN2ui10TouchEventE.root_relative_event to i8*), i64 216, i1 false)
  call void @_ZN2ui10TouchEventC1ERKS0_(%"class.ui::TouchEvent"* nonnull %5, %"class.ui::TouchEvent"* dereferenceable(216) %2) #14
  %55 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %2, i64 0, i32 0, i32 2
  %56 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %5, i64 0, i32 0, i32 1
  %57 = bitcast %"class.gfx::PointF"* %55 to i64*
  %58 = bitcast %"class.gfx::PointF"* %56 to i64*
  %59 = load i64, i64* %57, align 4
  store i64 %59, i64* %58, align 8
  %60 = call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %61 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %60, i64 0, i32 11, i32 0, i32 0, i32 0
  %62 = load %"class.ui::GestureRecognizer"*, %"class.ui::GestureRecognizer"** %61, align 8
  %63 = icmp eq %"class.aura::Window"* %1, null
  %64 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 3
  %65 = select i1 %63, %"class.ui::GestureConsumer"* null, %"class.ui::GestureConsumer"* %64
  %66 = bitcast %"class.ui::GestureRecognizer"* %62 to i1 (%"class.ui::GestureRecognizer"*, %"class.ui::TouchEvent"*, %"class.ui::GestureConsumer"*)***
  %67 = load i1 (%"class.ui::GestureRecognizer"*, %"class.ui::TouchEvent"*, %"class.ui::GestureConsumer"*)**, i1 (%"class.ui::GestureRecognizer"*, %"class.ui::TouchEvent"*, %"class.ui::GestureConsumer"*)*** %66, align 8
  %68 = getelementptr inbounds i1 (%"class.ui::GestureRecognizer"*, %"class.ui::TouchEvent"*, %"class.ui::GestureConsumer"*)*, i1 (%"class.ui::GestureRecognizer"*, %"class.ui::TouchEvent"*, %"class.ui::GestureConsumer"*)** %67, i64 2
  %69 = load i1 (%"class.ui::GestureRecognizer"*, %"class.ui::TouchEvent"*, %"class.ui::GestureConsumer"*)*, i1 (%"class.ui::GestureRecognizer"*, %"class.ui::TouchEvent"*, %"class.ui::GestureConsumer"*)** %68, align 8
  %70 = call zeroext i1 %69(%"class.ui::GestureRecognizer"* %62, %"class.ui::TouchEvent"* nonnull %5, %"class.ui::GestureConsumer"* %65) #14
  br i1 %70, label %405, label %71

71:                                               ; preds = %50
  call void @_ZN2ui5Event15StopPropagationEv(%"class.ui::Event"* %8) #14
  call void @_ZN2ui10TouchEvent26DisableSynchronousHandlingEv(%"class.ui::TouchEvent"* %2) #14
  %72 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %60, i64 0, i32 4
  %73 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %73) #14
  %74 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %76 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %77 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %72, i64 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 40, i1 false)
  %79 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %77, align 8, !noalias !54
  %80 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %60, i64 0, i32 4, i32 0, i32 0, i32 1
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8, !noalias !54
  %82 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %79, %81
  %83 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %83) #14
  br i1 %82, label %84, label %86

84:                                               ; preds = %71
  %85 = bitcast %"class.base::ObserverList.155"** %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #14, !alias.scope !54
  br label %126

86:                                               ; preds = %71
  store %"class.base::ObserverList.155"* %72, %"class.base::ObserverList.155"** %74, align 8, !alias.scope !54
  %87 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %60, i64 0, i32 4, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %83, %"class.base::internal::LinkNodeBase"* %87) #14
  store i64 0, i64* %75, align 8, !alias.scope !54
  %88 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %60, i64 0, i32 4, i32 3
  %89 = load i32, i32* %88, align 8, !noalias !54
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %86
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %80 to i64*
  %93 = load i64, i64* %92, align 8, !noalias !54
  %94 = bitcast %"class.base::ObserverList.155"* %72 to i64*
  %95 = load i64, i64* %94, align 8, !noalias !54
  %96 = sub i64 %93, %95
  %97 = ashr exact i64 %96, 3
  br label %98

98:                                               ; preds = %91, %86
  %99 = phi i64 [ %97, %91 ], [ -1, %86 ]
  store i64 %99, i64* %76, align 8, !alias.scope !54
  %100 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %74, align 8, !alias.scope !54
  %101 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %100, i64 0, i32 0, i32 0, i32 1
  %102 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.base::ObserverList.155"* %100 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = sub i64 %103, %105
  %107 = ashr exact i64 %106, 3
  %108 = icmp ult i64 %107, %99
  %109 = select i1 %108, i64 %107, i64 %99
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %126, label %111

111:                                              ; preds = %98
  %112 = inttoptr i64 %105 to %"class.base::internal::UncheckedObserverAdapter"*
  %113 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %100, i64 0, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %112, i64 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %126

117:                                              ; preds = %111, %121
  %118 = phi i64 [ %119, %121 ], [ 0, %111 ]
  %119 = add nuw i64 %118, 1
  store i64 %119, i64* %75, align 8, !alias.scope !54
  %120 = icmp ult i64 %119, %109
  br i1 %120, label %121, label %126

121:                                              ; preds = %117
  %122 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %113, align 8
  %123 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %122, i64 %119, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = icmp eq i8* %124, null
  br i1 %125, label %117, label %126

126:                                              ; preds = %117, %121, %84, %98, %111
  %127 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %127) #14
  %128 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 0, i32 1
  %129 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 1
  %130 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 2
  %131 = getelementptr inbounds %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 0, i32 0, i32 0
  %132 = bitcast %"class.base::ObserverList<aura::WindowEventDispatcherObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %131) #14
  %133 = bitcast %"class.base::ObserverList.155"** %128 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #14, !alias.scope !57
  %134 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %74, align 8
  br label %135

135:                                              ; preds = %375, %126
  %136 = phi %"class.base::ObserverList.155"* [ %134, %126 ], [ %373, %375 ]
  %137 = icmp eq %"class.base::ObserverList.155"* %136, null
  br i1 %137, label %153, label %138

138:                                              ; preds = %135
  %139 = load i64, i64* %75, align 8
  %140 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %136, i64 0, i32 0, i32 0, i32 1
  %141 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.base::ObserverList.155"* %136 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = sub i64 %142, %144
  %146 = ashr exact i64 %145, 3
  %147 = load i64, i64* %76, align 8
  %148 = icmp ult i64 %146, %147
  %149 = select i1 %148, i64 %146, i64 %147
  %150 = icmp eq i64 %139, %149
  br i1 %150, label %153, label %151

151:                                              ; preds = %138
  %152 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %128, align 8
  br label %169

153:                                              ; preds = %138, %135
  %154 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %128, align 8
  %155 = icmp eq %"class.base::ObserverList.155"* %154, null
  br i1 %155, label %269, label %156

156:                                              ; preds = %153
  %157 = load i64, i64* %129, align 8
  %158 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %154, i64 0, i32 0, i32 0, i32 1
  %159 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.base::ObserverList.155"* %154 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = sub i64 %160, %162
  %164 = ashr exact i64 %163, 3
  %165 = load i64, i64* %130, align 8
  %166 = icmp ult i64 %164, %165
  %167 = select i1 %166, i64 %164, i64 %165
  %168 = icmp eq i64 %157, %167
  br i1 %168, label %178, label %169

169:                                              ; preds = %156, %151
  %170 = phi %"class.base::ObserverList.155"* [ %152, %151 ], [ %154, %156 ]
  %171 = icmp eq %"class.base::ObserverList.155"* %136, %170
  %172 = load i64, i64* %75, align 8
  %173 = load i64, i64* %129, align 8
  %174 = icmp eq i64 %172, %173
  %175 = and i1 %171, %174
  br i1 %175, label %176, label %363

176:                                              ; preds = %169
  %177 = icmp eq %"class.base::ObserverList.155"* %136, null
  br i1 %177, label %269, label %178

178:                                              ; preds = %156, %176
  %179 = phi %"class.base::ObserverList.155"* [ %136, %176 ], [ %154, %156 ]
  %180 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %179, i64 0, i32 1
  %181 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %179, i64 0, i32 1, i32 0, i32 0, i32 1
  %182 = bitcast %"class.base::internal::LinkNodeBase"** %181 to %"class.base::LinkNode.157"**
  %183 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %182, align 8
  %184 = bitcast %"class.base::LinkedList.156"* %180 to %"class.base::LinkNode.157"**
  %185 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %184, align 8
  %186 = icmp eq %"class.base::LinkNode.157"* %183, %185
  br i1 %186, label %187, label %265

187:                                              ; preds = %178
  %188 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %179, i64 0, i32 0, i32 0, i32 0
  %189 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %188, align 8
  %190 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %179, i64 0, i32 0, i32 0, i32 1
  %191 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %190, align 8
  %192 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %189, %191
  br i1 %192, label %201, label %193

193:                                              ; preds = %187, %198
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %199, %198 ], [ %189, %187 ]
  %195 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %194, i64 0, i32 0
  %196 = load i8*, i8** %195, align 8
  %197 = icmp eq i8* %196, null
  br i1 %197, label %201, label %198

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %194, i64 1
  %200 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %199, %191
  br i1 %200, label %265, label %193

201:                                              ; preds = %193, %187
  %202 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %189, %187 ], [ %194, %193 ]
  %203 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %202 to i64
  %204 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %202, %191
  br i1 %204, label %265, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %202, i64 1
  %207 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %206, %191
  br i1 %207, label %260, label %208

208:                                              ; preds = %205
  %209 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %191, i64 -2, i32 0
  %210 = ptrtoint i8** %209 to i64
  %211 = sub i64 %210, %203
  %212 = lshr i64 %211, 3
  %213 = add nuw nsw i64 %212, 1
  %214 = and i64 %213, 3
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %234, label %216

216:                                              ; preds = %208, %229
  %217 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %229 ], [ %206, %208 ]
  %218 = phi i64 [ %230, %229 ], [ %203, %208 ]
  %219 = phi i64 [ %232, %229 ], [ %214, %208 ]
  %220 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %217, i64 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = icmp eq i8* %221, null
  br i1 %222, label %229, label %223

223:                                              ; preds = %216
  %224 = ptrtoint i8* %221 to i64
  %225 = inttoptr i64 %218 to %"class.base::internal::UncheckedObserverAdapter"*
  %226 = inttoptr i64 %218 to i64*
  store i64 %224, i64* %226, align 8
  %227 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %225, i64 1
  %228 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %227 to i64
  br label %229

229:                                              ; preds = %223, %216
  %230 = phi i64 [ %218, %216 ], [ %228, %223 ]
  %231 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %217, i64 1
  %232 = add i64 %219, -1
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %216, !llvm.loop !60

234:                                              ; preds = %229, %208
  %235 = phi i64 [ undef, %208 ], [ %230, %229 ]
  %236 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %206, %208 ], [ %231, %229 ]
  %237 = phi i64 [ %203, %208 ], [ %230, %229 ]
  %238 = icmp ult i64 %211, 24
  br i1 %238, label %256, label %239

239:                                              ; preds = %234, %505
  %240 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %507, %505 ], [ %236, %234 ]
  %241 = phi i64 [ %506, %505 ], [ %237, %234 ]
  %242 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %240, i64 0, i32 0
  %243 = load i8*, i8** %242, align 8
  %244 = icmp eq i8* %243, null
  br i1 %244, label %251, label %245

245:                                              ; preds = %239
  %246 = ptrtoint i8* %243 to i64
  %247 = inttoptr i64 %241 to %"class.base::internal::UncheckedObserverAdapter"*
  %248 = inttoptr i64 %241 to i64*
  store i64 %246, i64* %248, align 8
  %249 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 1
  %250 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %249 to i64
  br label %251

251:                                              ; preds = %245, %239
  %252 = phi i64 [ %241, %239 ], [ %250, %245 ]
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %240, i64 1, i32 0
  %254 = load i8*, i8** %253, align 8
  %255 = icmp eq i8* %254, null
  br i1 %255, label %483, label %477

256:                                              ; preds = %505, %234
  %257 = phi i64 [ %235, %234 ], [ %506, %505 ]
  %258 = inttoptr i64 %257 to %"class.base::internal::UncheckedObserverAdapter"*
  %259 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %190, align 8
  br label %260

260:                                              ; preds = %256, %205
  %261 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %191, %205 ], [ %259, %256 ]
  %262 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %202, %205 ], [ %258, %256 ]
  %263 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %262, %261
  br i1 %263, label %265, label %264

264:                                              ; preds = %260
  store %"class.base::internal::UncheckedObserverAdapter"* %262, %"class.base::internal::UncheckedObserverAdapter"** %190, align 8
  br label %265

265:                                              ; preds = %198, %264, %260, %201, %178
  %266 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %128, align 8
  %267 = icmp eq %"class.base::ObserverList.155"* %266, null
  br i1 %267, label %269, label %268

268:                                              ; preds = %265
  store %"class.base::ObserverList.155"* null, %"class.base::ObserverList.155"** %128, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %131) #14
  br label %269

269:                                              ; preds = %153, %176, %265, %268
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %127) #14
  %270 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %74, align 8
  %271 = icmp eq %"class.base::ObserverList.155"* %270, null
  br i1 %271, label %362, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %270, i64 0, i32 1
  %274 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %270, i64 0, i32 1, i32 0, i32 0, i32 1
  %275 = bitcast %"class.base::internal::LinkNodeBase"** %274 to %"class.base::LinkNode.157"**
  %276 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %275, align 8
  %277 = bitcast %"class.base::LinkedList.156"* %273 to %"class.base::LinkNode.157"**
  %278 = load %"class.base::LinkNode.157"*, %"class.base::LinkNode.157"** %277, align 8
  %279 = icmp eq %"class.base::LinkNode.157"* %276, %278
  br i1 %279, label %280, label %358

280:                                              ; preds = %272
  %281 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %270, i64 0, i32 0, i32 0, i32 0
  %282 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %281, align 8
  %283 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %270, i64 0, i32 0, i32 0, i32 1
  %284 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %283, align 8
  %285 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %282, %284
  br i1 %285, label %294, label %286

286:                                              ; preds = %280, %291
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %292, %291 ], [ %282, %280 ]
  %288 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %287, i64 0, i32 0
  %289 = load i8*, i8** %288, align 8
  %290 = icmp eq i8* %289, null
  br i1 %290, label %294, label %291

291:                                              ; preds = %286
  %292 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %287, i64 1
  %293 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %292, %284
  br i1 %293, label %358, label %286

294:                                              ; preds = %286, %280
  %295 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %282, %280 ], [ %287, %286 ]
  %296 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %295 to i64
  %297 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %295, %284
  br i1 %297, label %358, label %298

298:                                              ; preds = %294
  %299 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %295, i64 1
  %300 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %299, %284
  br i1 %300, label %353, label %301

301:                                              ; preds = %298
  %302 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %284, i64 -2, i32 0
  %303 = ptrtoint i8** %302 to i64
  %304 = sub i64 %303, %296
  %305 = lshr i64 %304, 3
  %306 = add nuw nsw i64 %305, 1
  %307 = and i64 %306, 3
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %327, label %309

309:                                              ; preds = %301, %322
  %310 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %324, %322 ], [ %299, %301 ]
  %311 = phi i64 [ %323, %322 ], [ %296, %301 ]
  %312 = phi i64 [ %325, %322 ], [ %307, %301 ]
  %313 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %310, i64 0, i32 0
  %314 = load i8*, i8** %313, align 8
  %315 = icmp eq i8* %314, null
  br i1 %315, label %322, label %316

316:                                              ; preds = %309
  %317 = ptrtoint i8* %314 to i64
  %318 = inttoptr i64 %311 to %"class.base::internal::UncheckedObserverAdapter"*
  %319 = inttoptr i64 %311 to i64*
  store i64 %317, i64* %319, align 8
  %320 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %318, i64 1
  %321 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %320 to i64
  br label %322

322:                                              ; preds = %316, %309
  %323 = phi i64 [ %311, %309 ], [ %321, %316 ]
  %324 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %310, i64 1
  %325 = add i64 %312, -1
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %327, label %309, !llvm.loop !61

327:                                              ; preds = %322, %301
  %328 = phi i64 [ undef, %301 ], [ %323, %322 ]
  %329 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %299, %301 ], [ %324, %322 ]
  %330 = phi i64 [ %296, %301 ], [ %323, %322 ]
  %331 = icmp ult i64 %304, 24
  br i1 %331, label %349, label %332

332:                                              ; preds = %327, %473
  %333 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %475, %473 ], [ %329, %327 ]
  %334 = phi i64 [ %474, %473 ], [ %330, %327 ]
  %335 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 0, i32 0
  %336 = load i8*, i8** %335, align 8
  %337 = icmp eq i8* %336, null
  br i1 %337, label %344, label %338

338:                                              ; preds = %332
  %339 = ptrtoint i8* %336 to i64
  %340 = inttoptr i64 %334 to %"class.base::internal::UncheckedObserverAdapter"*
  %341 = inttoptr i64 %334 to i64*
  store i64 %339, i64* %341, align 8
  %342 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %340, i64 1
  %343 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %342 to i64
  br label %344

344:                                              ; preds = %338, %332
  %345 = phi i64 [ %334, %332 ], [ %343, %338 ]
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 1, i32 0
  %347 = load i8*, i8** %346, align 8
  %348 = icmp eq i8* %347, null
  br i1 %348, label %451, label %445

349:                                              ; preds = %473, %327
  %350 = phi i64 [ %328, %327 ], [ %474, %473 ]
  %351 = inttoptr i64 %350 to %"class.base::internal::UncheckedObserverAdapter"*
  %352 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %283, align 8
  br label %353

353:                                              ; preds = %349, %298
  %354 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %284, %298 ], [ %352, %349 ]
  %355 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %295, %298 ], [ %351, %349 ]
  %356 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %355, %354
  br i1 %356, label %358, label %357

357:                                              ; preds = %353
  store %"class.base::internal::UncheckedObserverAdapter"* %355, %"class.base::internal::UncheckedObserverAdapter"** %283, align 8
  br label %358

358:                                              ; preds = %291, %357, %353, %294, %272
  %359 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %74, align 8
  %360 = icmp eq %"class.base::ObserverList.155"* %359, null
  br i1 %360, label %362, label %361

361:                                              ; preds = %358
  store %"class.base::ObserverList.155"* null, %"class.base::ObserverList.155"** %74, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %83) #14
  br label %362

362:                                              ; preds = %269, %358, %361
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %73) #14
  br label %443

363:                                              ; preds = %169
  %364 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %136, i64 0, i32 0, i32 0, i32 0
  %365 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %364, align 8
  %366 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %365, i64 %172
  %367 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %366 to %"class.aura::WindowEventDispatcherObserver"**
  %368 = load %"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcherObserver"** %367, align 8
  %369 = bitcast %"class.aura::WindowEventDispatcherObserver"* %368 to void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)***
  %370 = load void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)**, void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)*** %369, align 8
  %371 = getelementptr inbounds void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)*, void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)** %370, i64 3
  %372 = load void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)*, void (%"class.aura::WindowEventDispatcherObserver"*, %"class.aura::WindowEventDispatcher"*)** %371, align 8
  call void %372(%"class.aura::WindowEventDispatcherObserver"* %368, %"class.aura::WindowEventDispatcher"* %0) #14
  %373 = load %"class.base::ObserverList.155"*, %"class.base::ObserverList.155"** %74, align 8
  %374 = icmp eq %"class.base::ObserverList.155"* %373, null
  br i1 %374, label %375, label %376

375:                                              ; preds = %400, %396, %363, %376, %390
  br label %135

376:                                              ; preds = %363
  %377 = load i64, i64* %75, align 8
  %378 = add i64 %377, 1
  store i64 %378, i64* %75, align 8
  %379 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %373, i64 0, i32 0, i32 0, i32 1
  %380 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %379 to i64*
  %381 = load i64, i64* %380, align 8
  %382 = bitcast %"class.base::ObserverList.155"* %373 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = sub i64 %381, %383
  %385 = ashr exact i64 %384, 3
  %386 = load i64, i64* %76, align 8
  %387 = icmp ult i64 %385, %386
  %388 = select i1 %387, i64 %385, i64 %386
  %389 = icmp ult i64 %378, %388
  br i1 %389, label %390, label %375

390:                                              ; preds = %376
  %391 = inttoptr i64 %383 to %"class.base::internal::UncheckedObserverAdapter"*
  %392 = getelementptr inbounds %"class.base::ObserverList.155", %"class.base::ObserverList.155"* %373, i64 0, i32 0, i32 0, i32 0
  %393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %391, i64 %378, i32 0
  %394 = load i8*, i8** %393, align 8
  %395 = icmp eq i8* %394, null
  br i1 %395, label %396, label %375

396:                                              ; preds = %390, %400
  %397 = phi i64 [ %398, %400 ], [ %378, %390 ]
  %398 = add nuw i64 %397, 1
  store i64 %398, i64* %75, align 8
  %399 = icmp ult i64 %398, %388
  br i1 %399, label %400, label %375

400:                                              ; preds = %396
  %401 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %392, align 8
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %401, i64 %398, i32 0
  %403 = load i8*, i8** %402, align 8
  %404 = icmp eq i8* %403, null
  br i1 %404, label %396, label %375

405:                                              ; preds = %50
  %406 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %5, i64 0, i32 2
  %407 = load i8, i8* %406, align 4, !range !28
  %408 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %2, i64 0, i32 2
  store i8 %407, i8* %408, align 4
  %409 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %2, i64 0, i32 0, i32 0, i32 4
  %410 = load i32, i32* %409, align 8
  %411 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %411) #14
  %412 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %2, i64 0, i32 0, i32 1
  %413 = call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %412) #14
  store i64 %413, i64* %4, align 8
  %414 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 12
  %415 = load %"class.aura::WindowDelegate"*, %"class.aura::WindowDelegate"** %414, align 8
  %416 = icmp eq %"class.aura::WindowDelegate"* %415, null
  br i1 %416, label %417, label %418

417:                                              ; preds = %405
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %411) #14
  br label %427

418:                                              ; preds = %405
  %419 = bitcast i64* %4 to %"class.gfx::Point"*
  %420 = bitcast %"class.aura::WindowDelegate"* %415 to i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)***
  %421 = load i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)**, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*** %420, align 8
  %422 = getelementptr inbounds i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)** %421, i64 14
  %423 = load i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)** %422, align 8
  %424 = call i32 %423(%"class.aura::WindowDelegate"* nonnull %415, %"class.gfx::Point"* nonnull dereferenceable(8) %419) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %411) #14
  switch i32 %424, label %425 [
    i32 6, label %427
    i32 0, label %427
  ]

425:                                              ; preds = %418
  %426 = or i32 %410, 131072
  br label %427

427:                                              ; preds = %425, %418, %418, %417
  %428 = phi i32 [ %426, %425 ], [ %410, %418 ], [ %410, %417 ], [ %410, %418 ]
  store i32 %428, i32* %409, align 8
  %429 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 17
  %430 = bitcast %"class.ui::LocatedEvent"** %429 to %"class.ui::Event"**
  %431 = load %"class.ui::Event"*, %"class.ui::Event"** %430, align 8
  %432 = icmp eq %"class.ui::Event"* %431, %8
  br i1 %432, label %443, label %433

433:                                              ; preds = %427
  %434 = load i32, i32* %9, align 8
  switch i32 %434, label %443 [
    i32 1, label %438
    i32 2, label %438
    i32 3, label %438
    i32 4, label %438
    i32 5, label %438
    i32 6, label %438
    i32 9, label %438
    i32 10, label %438
    i32 34, label %438
    i32 35, label %435
    i32 36, label %435
  ]

435:                                              ; preds = %433, %433
  %436 = and i32 %428, 262144
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %443

438:                                              ; preds = %435, %433, %433, %433, %433, %433, %433, %433, %433, %433
  %439 = and i32 %428, 1
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %441, label %443

441:                                              ; preds = %438
  %442 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 12
  store i8 0, i8* %442, align 8
  br label %443

443:                                              ; preds = %441, %438, %435, %433, %427, %362
  call void @_ZN2ui10TouchEventD1Ev(%"class.ui::TouchEvent"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %54) #14
  br label %444

444:                                              ; preds = %443, %49
  ret i24 0

445:                                              ; preds = %344
  %446 = ptrtoint i8* %347 to i64
  %447 = inttoptr i64 %345 to %"class.base::internal::UncheckedObserverAdapter"*
  %448 = inttoptr i64 %345 to i64*
  store i64 %446, i64* %448, align 8
  %449 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %447, i64 1
  %450 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %449 to i64
  br label %451

451:                                              ; preds = %445, %344
  %452 = phi i64 [ %345, %344 ], [ %450, %445 ]
  %453 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 2, i32 0
  %454 = load i8*, i8** %453, align 8
  %455 = icmp eq i8* %454, null
  br i1 %455, label %462, label %456

456:                                              ; preds = %451
  %457 = ptrtoint i8* %454 to i64
  %458 = inttoptr i64 %452 to %"class.base::internal::UncheckedObserverAdapter"*
  %459 = inttoptr i64 %452 to i64*
  store i64 %457, i64* %459, align 8
  %460 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %458, i64 1
  %461 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %460 to i64
  br label %462

462:                                              ; preds = %456, %451
  %463 = phi i64 [ %452, %451 ], [ %461, %456 ]
  %464 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 3, i32 0
  %465 = load i8*, i8** %464, align 8
  %466 = icmp eq i8* %465, null
  br i1 %466, label %473, label %467

467:                                              ; preds = %462
  %468 = ptrtoint i8* %465 to i64
  %469 = inttoptr i64 %463 to %"class.base::internal::UncheckedObserverAdapter"*
  %470 = inttoptr i64 %463 to i64*
  store i64 %468, i64* %470, align 8
  %471 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %469, i64 1
  %472 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %471 to i64
  br label %473

473:                                              ; preds = %467, %462
  %474 = phi i64 [ %463, %462 ], [ %472, %467 ]
  %475 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 4
  %476 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %475, %284
  br i1 %476, label %349, label %332

477:                                              ; preds = %251
  %478 = ptrtoint i8* %254 to i64
  %479 = inttoptr i64 %252 to %"class.base::internal::UncheckedObserverAdapter"*
  %480 = inttoptr i64 %252 to i64*
  store i64 %478, i64* %480, align 8
  %481 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %479, i64 1
  %482 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %481 to i64
  br label %483

483:                                              ; preds = %477, %251
  %484 = phi i64 [ %252, %251 ], [ %482, %477 ]
  %485 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %240, i64 2, i32 0
  %486 = load i8*, i8** %485, align 8
  %487 = icmp eq i8* %486, null
  br i1 %487, label %494, label %488

488:                                              ; preds = %483
  %489 = ptrtoint i8* %486 to i64
  %490 = inttoptr i64 %484 to %"class.base::internal::UncheckedObserverAdapter"*
  %491 = inttoptr i64 %484 to i64*
  store i64 %489, i64* %491, align 8
  %492 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %490, i64 1
  %493 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %492 to i64
  br label %494

494:                                              ; preds = %488, %483
  %495 = phi i64 [ %484, %483 ], [ %493, %488 ]
  %496 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %240, i64 3, i32 0
  %497 = load i8*, i8** %496, align 8
  %498 = icmp eq i8* %497, null
  br i1 %498, label %505, label %499

499:                                              ; preds = %494
  %500 = ptrtoint i8* %497 to i64
  %501 = inttoptr i64 %495 to %"class.base::internal::UncheckedObserverAdapter"*
  %502 = inttoptr i64 %495 to i64*
  store i64 %500, i64* %502, align 8
  %503 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %501, i64 1
  %504 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %503 to i64
  br label %505

505:                                              ; preds = %499, %494
  %506 = phi i64 [ %495, %494 ], [ %504, %499 ]
  %507 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %240, i64 4
  %508 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %507, %191
  br i1 %508, label %256, label %239
}

declare %"class.ui::TouchEvent"* @_ZN2ui5Event12AsTouchEventEv(%"class.ui::Event"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN4aura21WindowEventDispatcher19PreDispatchKeyEventEPNS_6WindowEPN2ui8KeyEventE(%"class.aura::WindowEventDispatcher"* nocapture readonly, %"class.aura::Window"*, %"class.ui::KeyEvent"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 20
  %5 = load i8, i8* %4, align 8, !range !28
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %47

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %9 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %8, align 8
  %10 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %9, i64 0, i32 14
  %11 = load %"class.ui::InputMethod"*, %"class.ui::InputMethod"** %10, align 8
  %12 = icmp eq %"class.ui::InputMethod"* %11, null
  br i1 %12, label %47, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %2, i64 0, i32 0
  %15 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %2, i64 0, i32 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %47

19:                                               ; preds = %13
  %20 = bitcast %"class.aura::WindowTreeHost"* %9 to i1 (%"class.aura::WindowTreeHost"*)***
  %21 = load i1 (%"class.aura::WindowTreeHost"*)**, i1 (%"class.aura::WindowTreeHost"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.aura::WindowTreeHost"*)*, i1 (%"class.aura::WindowTreeHost"*)** %21, i64 19
  %23 = load i1 (%"class.aura::WindowTreeHost"*)*, i1 (%"class.aura::WindowTreeHost"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.aura::WindowTreeHost"* %9) #14
  br i1 %24, label %25, label %47

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 4
  %27 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN4aura6client18kSkipImeProcessingE, align 8
  %28 = tail call zeroext i1 @_ZNK2ui15PropertyHandler11GetPropertyIbEET_PKNS_13ClassPropertyIS2_EE(%"class.ui::PropertyHandler"* %26, %"struct.ui::ClassProperty"* %27) #14
  br i1 %28, label %47, label %29

29:                                               ; preds = %25
  %30 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %8, align 8
  %31 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %30, i64 0, i32 4
  %32 = load %"class.aura::Window"*, %"class.aura::Window"** %31, align 8
  %33 = icmp eq %"class.aura::Window"* %32, null
  %34 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %32, i64 0, i32 2
  %35 = select i1 %33, %"class.ui::EventTarget"* null, %"class.ui::EventTarget"* %34
  %36 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %2, i64 0, i32 0, i32 8
  store %"class.ui::EventTarget"* %35, %"class.ui::EventTarget"** %36, align 8
  %37 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %8, align 8
  %38 = tail call %"class.ui::InputMethod"* @_ZN4aura14WindowTreeHost14GetInputMethodEv(%"class.aura::WindowTreeHost"* %37) #14
  %39 = bitcast %"class.ui::InputMethod"* %38 to i24 (%"class.ui::InputMethod"*, %"class.ui::KeyEvent"*)***
  %40 = load i24 (%"class.ui::InputMethod"*, %"class.ui::KeyEvent"*)**, i24 (%"class.ui::InputMethod"*, %"class.ui::KeyEvent"*)*** %39, align 8
  %41 = getelementptr inbounds i24 (%"class.ui::InputMethod"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethod"*, %"class.ui::KeyEvent"*)** %40, i64 8
  %42 = load i24 (%"class.ui::InputMethod"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethod"*, %"class.ui::KeyEvent"*)** %41, align 8
  %43 = tail call i24 %42(%"class.ui::InputMethod"* %38, %"class.ui::KeyEvent"* %2) #14
  tail call void @_ZN2ui5Event15StopPropagationEv(%"class.ui::Event"* %14) #14
  %44 = and i24 %43, -65536
  %45 = and i24 %43, 65280
  %46 = and i24 %43, 255
  br label %47

47:                                               ; preds = %7, %19, %25, %3, %13, %29
  %48 = phi i24 [ %45, %29 ], [ 0, %13 ], [ 0, %3 ], [ 0, %25 ], [ 0, %19 ], [ 0, %7 ]
  %49 = phi i24 [ %44, %29 ], [ 0, %13 ], [ 0, %3 ], [ 0, %25 ], [ 0, %19 ], [ 0, %7 ]
  %50 = phi i24 [ %46, %29 ], [ 0, %13 ], [ 0, %3 ], [ 0, %25 ], [ 0, %19 ], [ 0, %7 ]
  %51 = or i24 %49, %48
  %52 = or i24 %51, %50
  ret i24 %52
}

declare %"class.ui::KeyEvent"* @_ZN2ui5Event10AsKeyEventEv(%"class.ui::Event"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN4aura21WindowEventDispatcher21PreDispatchPinchEventEPNS_6WindowEPN2ui12GestureEventE(%"class.aura::WindowEventDispatcher"* nocapture, %"class.aura::Window"*, %"class.ui::GestureEvent"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %2, i64 0, i32 1, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %46, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %2, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %2, i64 0, i32 0, i32 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %2, i64 0, i32 0, i32 1
  %15 = tail call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %14) #14
  store i64 %15, i64* %4, align 8
  %16 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 12
  %17 = load %"class.aura::WindowDelegate"*, %"class.aura::WindowDelegate"** %16, align 8
  %18 = icmp eq %"class.aura::WindowDelegate"* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  br label %29

20:                                               ; preds = %9
  %21 = bitcast i64* %4 to %"class.gfx::Point"*
  %22 = bitcast %"class.aura::WindowDelegate"* %17 to i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)***
  %23 = load i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)**, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)** %23, i64 14
  %25 = load i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)** %24, align 8
  %26 = call i32 %25(%"class.aura::WindowDelegate"* nonnull %17, %"class.gfx::Point"* nonnull dereferenceable(8) %21) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  switch i32 %26, label %27 [
    i32 6, label %29
    i32 0, label %29
  ]

27:                                               ; preds = %20
  %28 = or i32 %12, 131072
  br label %29

29:                                               ; preds = %27, %20, %20, %19
  %30 = phi i32 [ %28, %27 ], [ %12, %20 ], [ %12, %19 ], [ %12, %20 ]
  store i32 %30, i32* %11, align 8
  %31 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 17
  %32 = bitcast %"class.ui::LocatedEvent"** %31 to %"class.ui::Event"**
  %33 = load %"class.ui::Event"*, %"class.ui::Event"** %32, align 8
  %34 = icmp eq %"class.ui::Event"* %33, %10
  br i1 %34, label %89, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %2, i64 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  switch i32 %37, label %89 [
    i32 1, label %41
    i32 2, label %41
    i32 3, label %41
    i32 4, label %41
    i32 5, label %41
    i32 6, label %41
    i32 9, label %41
    i32 10, label %41
    i32 34, label %41
    i32 35, label %38
    i32 36, label %38
  ]

38:                                               ; preds = %35, %35
  %39 = and i32 %30, 262144
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %89

41:                                               ; preds = %38, %35, %35, %35, %35, %35, %35, %35, %35, %35
  %42 = and i32 %30, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %89

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 12
  store i8 0, i8* %45, align 8
  br label %89

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %2, i64 0, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  switch i32 %48, label %53 [
    i32 27, label %50
    i32 28, label %49
  ]

49:                                               ; preds = %46
  br label %50

50:                                               ; preds = %46, %49
  %51 = phi %"class.aura::Window"* [ null, %49 ], [ %1, %46 ]
  %52 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 8
  store %"class.aura::Window"* %51, %"class.aura::Window"** %52, align 8
  br label %53

53:                                               ; preds = %50, %46
  %54 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %2, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %2, i64 0, i32 0, i32 0, i32 4
  %56 = load i32, i32* %55, align 8
  %57 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #14
  %58 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %2, i64 0, i32 0, i32 1
  %59 = tail call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %58) #14
  store i64 %59, i64* %5, align 8
  %60 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 12
  %61 = load %"class.aura::WindowDelegate"*, %"class.aura::WindowDelegate"** %60, align 8
  %62 = icmp eq %"class.aura::WindowDelegate"* %61, null
  br i1 %62, label %63, label %64

63:                                               ; preds = %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #14
  br label %73

64:                                               ; preds = %53
  %65 = bitcast i64* %5 to %"class.gfx::Point"*
  %66 = bitcast %"class.aura::WindowDelegate"* %61 to i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)***
  %67 = load i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)**, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*** %66, align 8
  %68 = getelementptr inbounds i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)** %67, i64 14
  %69 = load i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)** %68, align 8
  %70 = call i32 %69(%"class.aura::WindowDelegate"* nonnull %61, %"class.gfx::Point"* nonnull dereferenceable(8) %65) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #14
  switch i32 %70, label %71 [
    i32 6, label %73
    i32 0, label %73
  ]

71:                                               ; preds = %64
  %72 = or i32 %56, 131072
  br label %73

73:                                               ; preds = %71, %64, %64, %63
  %74 = phi i32 [ %72, %71 ], [ %56, %64 ], [ %56, %63 ], [ %56, %64 ]
  store i32 %74, i32* %55, align 8
  %75 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 17
  %76 = bitcast %"class.ui::LocatedEvent"** %75 to %"class.ui::Event"**
  %77 = load %"class.ui::Event"*, %"class.ui::Event"** %76, align 8
  %78 = icmp eq %"class.ui::Event"* %77, %54
  br i1 %78, label %89, label %79

79:                                               ; preds = %73
  %80 = load i32, i32* %47, align 8
  switch i32 %80, label %89 [
    i32 1, label %84
    i32 2, label %84
    i32 3, label %84
    i32 4, label %84
    i32 5, label %84
    i32 6, label %84
    i32 9, label %84
    i32 10, label %84
    i32 34, label %84
    i32 35, label %81
    i32 36, label %81
  ]

81:                                               ; preds = %79, %79
  %82 = and i32 %74, 262144
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %89

84:                                               ; preds = %81, %79, %79, %79, %79, %79, %79, %79, %79, %79
  %85 = and i32 %74, 1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 12
  store i8 0, i8* %88, align 8
  br label %89

89:                                               ; preds = %87, %84, %81, %79, %73, %44, %41, %38, %35, %29
  ret i24 0
}

declare %"class.ui::GestureEvent"* @_ZN2ui5Event14AsGestureEventEv(%"class.ui::Event"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4aura13WindowTrackerD1Ev(%"class.aura::WindowTracker"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN4aura21WindowEventDispatcher17PostDispatchEventEPN2ui11EventTargetERKNS1_5EventE(%"class.aura::WindowEventDispatcher"*, %"class.ui::EventTarget"*, %"class.ui::Event"* dereferenceable(144)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.255", align 8
  %5 = alloca %"class.std::__1::vector.255", align 8
  %6 = icmp eq %"class.ui::EventTarget"* %1, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 9
  %9 = load %"class.aura::Window"*, %"class.aura::Window"** %8, align 8
  %10 = icmp eq %"class.aura::Window"* %9, null
  %11 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %9, i64 0, i32 2
  %12 = select i1 %10, %"class.ui::EventTarget"* null, %"class.ui::EventTarget"* %11
  %13 = icmp eq %"class.ui::EventTarget"* %12, %1
  br i1 %13, label %15, label %14

14:                                               ; preds = %7, %3
  br label %15

15:                                               ; preds = %7, %14
  %16 = phi i8 [ 1, %14 ], [ 0, %7 ]
  %17 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 10
  %18 = bitcast %"class.aura::Window"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 9
  %21 = bitcast %"class.aura::Window"** %20 to i64*
  store i64 %19, i64* %21, align 8
  store %"class.aura::Window"* null, %"class.aura::Window"** %17, align 8
  %22 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %2, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %23, -11
  %25 = icmp ult i32 %24, 4
  %26 = icmp eq i8 %16, 0
  %27 = and i1 %26, %25
  br i1 %27, label %28, label %129

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 17
  %30 = bitcast %"class.ui::LocatedEvent"** %29 to %"class.ui::Event"**
  %31 = load %"class.ui::Event"*, %"class.ui::Event"** %30, align 8
  %32 = icmp eq %"class.ui::Event"* %31, %2
  br i1 %32, label %42, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %35 = load %"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"** %34, align 8
  %36 = icmp eq %"class.ui::LocatedEvent"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %35, i64 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, -11
  %41 = icmp ult i32 %40, 4
  br i1 %41, label %129, label %42

42:                                               ; preds = %33, %37, %28
  %43 = tail call %"class.ui::TouchEvent"* @_ZNK2ui5Event12AsTouchEventEv(%"class.ui::Event"* %2) #14
  %44 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %43, i64 0, i32 0, i32 0, i32 10
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %129

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %1, i64 -2, i32 2, i32 0, i32 1
  %50 = bitcast %"class.ui::EventHandler"*** %49 to %"class.aura::Window"*
  %51 = select i1 %6, %"class.aura::Window"* null, %"class.aura::Window"* %50
  %52 = bitcast %"class.std::__1::vector.255"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #14
  %53 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %4, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %4, i64 0, i32 0, i32 1
  %55 = bitcast %"class.std::__1::vector.255"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  %56 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %57 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %56, i64 0, i32 11, i32 0, i32 0, i32 0
  %58 = load %"class.ui::GestureRecognizer"*, %"class.ui::GestureRecognizer"** %57, align 8
  %59 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %43, i64 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %2, i64 0, i32 10
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq %"class.aura::Window"* %51, null
  %64 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %51, i64 0, i32 3
  %65 = select i1 %63, %"class.ui::GestureConsumer"* null, %"class.ui::GestureConsumer"* %64
  %66 = bitcast %"class.ui::GestureRecognizer"* %58 to void (%"class.std::__1::vector.255"*, %"class.ui::GestureRecognizer"*, i32, i32, i1, %"class.ui::GestureConsumer"*)***
  %67 = load void (%"class.std::__1::vector.255"*, %"class.ui::GestureRecognizer"*, i32, i32, i1, %"class.ui::GestureConsumer"*)**, void (%"class.std::__1::vector.255"*, %"class.ui::GestureRecognizer"*, i32, i32, i1, %"class.ui::GestureConsumer"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.std::__1::vector.255"*, %"class.ui::GestureRecognizer"*, i32, i32, i1, %"class.ui::GestureConsumer"*)*, void (%"class.std::__1::vector.255"*, %"class.ui::GestureRecognizer"*, i32, i32, i1, %"class.ui::GestureConsumer"*)** %67, i64 3
  %69 = load void (%"class.std::__1::vector.255"*, %"class.ui::GestureRecognizer"*, i32, i32, i1, %"class.ui::GestureConsumer"*)*, void (%"class.std::__1::vector.255"*, %"class.ui::GestureRecognizer"*, i32, i32, i1, %"class.ui::GestureConsumer"*)** %68, align 8
  call void %69(%"class.std::__1::vector.255"* nonnull sret %4, %"class.ui::GestureRecognizer"* %58, i32 %60, i32 %62, i1 zeroext false, %"class.ui::GestureConsumer"* %65) #14
  %70 = bitcast %"class.std::__1::vector.255"* %4 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::vector.255"* %5 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %5, i64 0, i32 0, i32 1
  %74 = bitcast %"class.std::__1::unique_ptr.257"** %54 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.257"** %73 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %76, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 24, i1 false) #14
  %77 = call i24 @_ZN4aura21WindowEventDispatcher15ProcessGesturesEPNS_6WindowENSt3__16vectorINS3_10unique_ptrIN2ui12GestureEventENS3_14default_deleteIS7_EEEENS3_9allocatorISA_EEEE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %51, %"class.std::__1::vector.255"* nonnull %5)
  %78 = inttoptr i64 %71 to %"class.std::__1::unique_ptr.257"*
  %79 = icmp eq i64 %71, 0
  %80 = extractelement <2 x i64> %75, i32 0
  %81 = inttoptr i64 %80 to %"class.std::__1::unique_ptr.257"*
  br i1 %79, label %103, label %82

82:                                               ; preds = %48
  %83 = inttoptr i64 %71 to i8*
  %84 = icmp eq %"class.std::__1::unique_ptr.257"* %81, %78
  br i1 %84, label %101, label %85

85:                                               ; preds = %82, %96
  %86 = phi %"class.std::__1::unique_ptr.257"* [ %87, %96 ], [ %81, %82 ]
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %86, i64 -1
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.ui::GestureEvent"*, %"class.ui::GestureEvent"** %88, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %88, align 8
  %90 = icmp eq %"class.ui::GestureEvent"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %85
  %92 = bitcast %"class.ui::GestureEvent"* %89 to void (%"class.ui::GestureEvent"*)***
  %93 = load void (%"class.ui::GestureEvent"*)**, void (%"class.ui::GestureEvent"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %93, i64 1
  %95 = load void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %94, align 8
  call void %95(%"class.ui::GestureEvent"* nonnull %89) #14
  br label %96

96:                                               ; preds = %91, %85
  %97 = icmp eq %"class.std::__1::unique_ptr.257"* %87, %78
  br i1 %97, label %98, label %85

98:                                               ; preds = %96
  %99 = bitcast %"class.std::__1::vector.255"* %5 to i8**
  %100 = load i8*, i8** %99, align 8
  br label %101

101:                                              ; preds = %98, %82
  %102 = phi i8* [ %100, %98 ], [ %83, %82 ]
  store %"class.std::__1::unique_ptr.257"* %78, %"class.std::__1::unique_ptr.257"** %73, align 8
  call void @_ZdlPv(i8* %102) #15
  br label %103

103:                                              ; preds = %48, %101
  %104 = load %"class.std::__1::unique_ptr.257"*, %"class.std::__1::unique_ptr.257"** %53, align 8
  %105 = icmp eq %"class.std::__1::unique_ptr.257"* %104, null
  br i1 %105, label %128, label %106

106:                                              ; preds = %103
  %107 = bitcast %"class.std::__1::unique_ptr.257"* %104 to i8*
  %108 = load %"class.std::__1::unique_ptr.257"*, %"class.std::__1::unique_ptr.257"** %54, align 8
  %109 = icmp eq %"class.std::__1::unique_ptr.257"* %108, %104
  br i1 %109, label %126, label %110

110:                                              ; preds = %106, %121
  %111 = phi %"class.std::__1::unique_ptr.257"* [ %112, %121 ], [ %108, %106 ]
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %111, i64 -1
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %112, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.ui::GestureEvent"*, %"class.ui::GestureEvent"** %113, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %113, align 8
  %115 = icmp eq %"class.ui::GestureEvent"* %114, null
  br i1 %115, label %121, label %116

116:                                              ; preds = %110
  %117 = bitcast %"class.ui::GestureEvent"* %114 to void (%"class.ui::GestureEvent"*)***
  %118 = load void (%"class.ui::GestureEvent"*)**, void (%"class.ui::GestureEvent"*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %118, i64 1
  %120 = load void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %119, align 8
  call void %120(%"class.ui::GestureEvent"* nonnull %114) #14
  br label %121

121:                                              ; preds = %116, %110
  %122 = icmp eq %"class.std::__1::unique_ptr.257"* %112, %104
  br i1 %122, label %123, label %110

123:                                              ; preds = %121
  %124 = bitcast %"class.std::__1::vector.255"* %4 to i8**
  %125 = load i8*, i8** %124, align 8
  br label %126

126:                                              ; preds = %123, %106
  %127 = phi i8* [ %125, %123 ], [ %107, %106 ]
  store %"class.std::__1::unique_ptr.257"* %104, %"class.std::__1::unique_ptr.257"** %54, align 8
  call void @_ZdlPv(i8* %127) #15
  br label %128

128:                                              ; preds = %126, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #14
  br label %132

129:                                              ; preds = %42, %37, %15
  %130 = zext i8 %16 to i24
  %131 = shl nuw nsw i24 %130, 8
  br label %132

132:                                              ; preds = %128, %129
  %133 = phi i24 [ %131, %129 ], [ %77, %128 ]
  ret i24 %133
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4aura21WindowEventDispatcher21CanDispatchToConsumerEPN2ui15GestureConsumerE(%"class.aura::WindowEventDispatcher"* nocapture readonly, %"class.ui::GestureConsumer"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.ui::GestureConsumer"* %1, null
  %4 = getelementptr inbounds %"class.ui::GestureConsumer", %"class.ui::GestureConsumer"* %1, i64 -19
  %5 = icmp eq %"class.ui::GestureConsumer"* %4, null
  %6 = or i1 %3, %5
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.ui::GestureConsumer"* %4 to %"class.aura::Window"*
  %9 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* nonnull %8) #14
  %10 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %11 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %10, align 8
  %12 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %11, i64 0, i32 4
  %13 = load %"class.aura::Window"*, %"class.aura::Window"** %12, align 8
  %14 = icmp eq %"class.aura::Window"* %9, %13
  br label %15

15:                                               ; preds = %2, %7
  %16 = phi i1 [ false, %2 ], [ %14, %7 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn40_N4aura21WindowEventDispatcher21CanDispatchToConsumerEPN2ui15GestureConsumerE(%"class.aura::WindowEventDispatcher"* nocapture readonly, %"class.ui::GestureConsumer"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.ui::GestureConsumer"* %1, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.ui::GestureConsumer", %"class.ui::GestureConsumer"* %1, i64 -19
  %6 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 23
  %7 = bitcast %"class.ui::GestureConsumer"* %5 to %"class.aura::Window"*
  %8 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* nonnull %7) #14
  %9 = getelementptr inbounds i8, i8* %6, i64 88
  %10 = bitcast i8* %9 to %"class.aura::WindowTreeHost"**
  %11 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %10, align 8
  %12 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %11, i64 0, i32 4
  %13 = load %"class.aura::Window"*, %"class.aura::Window"** %12, align 8
  %14 = icmp eq %"class.aura::Window"* %8, %13
  br label %15

15:                                               ; preds = %2, %4
  %16 = phi i1 [ false, %2 ], [ %14, %4 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher27DispatchSyntheticTouchEventEPN2ui10TouchEventE(%"class.aura::WindowEventDispatcher"*, %"class.ui::TouchEvent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %7 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %6, align 8
  %8 = bitcast %"class.aura::WindowTreeHost"* %7 to void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)***
  %9 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %9, i64 3
  %11 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %10, align 8
  call void %11(%"class.gfx::Transform"* nonnull sret %3, %"class.aura::WindowTreeHost"* %7) #14
  %12 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %12) #14
  %13 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %6, align 8
  %14 = bitcast %"class.aura::WindowTreeHost"* %13 to void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)***
  %15 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %15, i64 6
  %17 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %16, align 8
  call void %17(%"class.gfx::Transform"* nonnull sret %4, %"class.aura::WindowTreeHost"* %13) #14
  %18 = bitcast %"class.ui::TouchEvent"* %1 to void (%"class.ui::TouchEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)***
  %19 = load void (%"class.ui::TouchEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)**, void (%"class.ui::TouchEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.ui::TouchEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)*, void (%"class.ui::TouchEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)** %19, i64 3
  %21 = load void (%"class.ui::TouchEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)*, void (%"class.ui::TouchEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)** %20, align 8
  call void %21(%"class.ui::TouchEvent"* %1, %"class.gfx::Transform"* nonnull dereferenceable(68) %3, %"class.gfx::Transform"* nonnull dereferenceable(68) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %5) #14
  %22 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 0
  %23 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 0
  %24 = bitcast %"class.aura::WindowEventDispatcher"* %0 to i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)***
  %25 = load i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)**, i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)*** %24, align 8
  %26 = getelementptr inbounds i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)*, i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)** %25, i64 5
  %27 = load i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)*, i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)** %26, align 8
  %28 = call i24 %27(%"class.ui::EventProcessor"* %22, %"class.ui::Event"* %23) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N4aura21WindowEventDispatcher27DispatchSyntheticTouchEventEPN2ui10TouchEventE(%"class.aura::WindowEventDispatcher"*, %"class.ui::TouchEvent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 23
  %6 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %6) #14
  %7 = getelementptr inbounds i8, i8* %5, i64 88
  %8 = bitcast i8* %7 to %"class.aura::WindowTreeHost"**
  %9 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %8, align 8
  %10 = bitcast %"class.aura::WindowTreeHost"* %9 to void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)***
  %11 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %11, i64 3
  %13 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %12, align 8
  call void %13(%"class.gfx::Transform"* nonnull sret %3, %"class.aura::WindowTreeHost"* %9) #14
  %14 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %14) #14
  %15 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %8, align 8
  %16 = bitcast %"class.aura::WindowTreeHost"* %15 to void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)***
  %17 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %17, i64 6
  %19 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %18, align 8
  call void %19(%"class.gfx::Transform"* nonnull sret %4, %"class.aura::WindowTreeHost"* %15) #14
  %20 = bitcast %"class.ui::TouchEvent"* %1 to void (%"class.ui::TouchEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)***
  %21 = load void (%"class.ui::TouchEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)**, void (%"class.ui::TouchEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.ui::TouchEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)*, void (%"class.ui::TouchEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)** %21, i64 3
  %23 = load void (%"class.ui::TouchEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)*, void (%"class.ui::TouchEvent"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)** %22, align 8
  call void %23(%"class.ui::TouchEvent"* %1, %"class.gfx::Transform"* nonnull dereferenceable(68) %3, %"class.gfx::Transform"* nonnull dereferenceable(68) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %6) #14
  %24 = bitcast i8* %5 to %"class.ui::EventProcessor"*
  %25 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 0
  %26 = bitcast i8* %5 to i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)***
  %27 = load i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)**, i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)*** %26, align 8
  %28 = getelementptr inbounds i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)*, i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)** %27, i64 5
  %29 = load i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)*, i24 (%"class.ui::EventProcessor"*, %"class.ui::Event"*)** %28, align 8
  %30 = call i24 %29(%"class.ui::EventProcessor"* %24, %"class.ui::Event"* %25) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher18OnWindowDestroyingEPNS_6WindowE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %4 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %4, i64 0, i32 4
  %6 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %6, %"class.aura::Window"* %1) #14
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN4aura21WindowEventDispatcher38SynthesizeMouseMoveAfterChangeToWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %1)
  br label %9

9:                                                ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher38SynthesizeMouseMoveAfterChangeToWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.gfx::Point"*
  %6 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 23
  %7 = load i8, i8* %6, align 8, !range !28
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %35

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZNK4aura6Window9IsVisibleEv(%"class.aura::Window"* %1) #14
  %11 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  br i1 %10, label %12, label %34

12:                                               ; preds = %9
  %13 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %15 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %14, i64 0, i32 9
  %16 = bitcast %"class.gfx::Point"* %15 to i64*
  %17 = load i64, i64* %16, align 4
  store i64 %17, i64* %3, align 8
  %18 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %19 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %18, align 8
  %20 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %19, i64 0, i32 4
  %21 = load %"class.aura::Window"*, %"class.aura::Window"** %20, align 8
  %22 = tail call %"class.aura::client::ScreenPositionClient"* @_ZN4aura6client23GetScreenPositionClientEPKNS_6WindowE(%"class.aura::Window"* %21) #14
  %23 = icmp eq %"class.aura::client::ScreenPositionClient"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %12
  %25 = bitcast i64* %3 to %"class.gfx::Point"*
  %26 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %18, align 8
  %27 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %26, i64 0, i32 4
  %28 = load %"class.aura::Window"*, %"class.aura::Window"** %27, align 8
  call void @_ZN4aura6client20ScreenPositionClient22ConvertPointFromScreenEPKNS_6WindowEPN3gfx5PointE(%"class.aura::client::ScreenPositionClient"* nonnull %22, %"class.aura::Window"* %28, %"class.gfx::Point"* nonnull %25) #14
  %29 = load i64, i64* %3, align 8
  br label %30

30:                                               ; preds = %12, %24
  %31 = phi i64 [ %17, %12 ], [ %29, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i64 %31, i64* %4, align 8
  %32 = call zeroext i1 @_ZNK4aura6Window19ContainsPointInRootERKN3gfx5PointE(%"class.aura::Window"* %1, %"class.gfx::Point"* nonnull dereferenceable(8) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  call void @_ZN4aura21WindowEventDispatcher23PostSynthesizeMouseMoveEv(%"class.aura::WindowEventDispatcher"* %0)
  br label %35

34:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  br label %35

35:                                               ; preds = %2, %34, %33, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N4aura21WindowEventDispatcher18OnWindowDestroyingEPNS_6WindowE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds i64, i64* %3, i64 11
  %5 = bitcast i64* %4 to %"class.aura::WindowTreeHost"**
  %6 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %5, align 8
  %7 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %6, i64 0, i32 4
  %8 = load %"class.aura::Window"*, %"class.aura::Window"** %7, align 8
  %9 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %8, %"class.aura::Window"* %1) #14
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = bitcast i64* %3 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcher38SynthesizeMouseMoveAfterChangeToWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* %11, %"class.aura::Window"* %1) #14
  br label %12

12:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher17OnWindowDestroyedEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* nocapture, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 1, i32 0, i32 0
  %4 = load %"class.aura::Window"**, %"class.aura::Window"*** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 1, i32 0, i32 1
  %6 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %7 = icmp eq %"class.aura::Window"** %4, %6
  %8 = ptrtoint %"class.aura::Window"** %6 to i64
  br i1 %7, label %16, label %9

9:                                                ; preds = %2, %13
  %10 = phi %"class.aura::Window"** [ %14, %13 ], [ %4, %2 ]
  %11 = load %"class.aura::Window"*, %"class.aura::Window"** %10, align 8
  %12 = icmp eq %"class.aura::Window"* %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %10, i64 1
  %15 = icmp eq %"class.aura::Window"** %14, %6
  br i1 %15, label %16, label %9

16:                                               ; preds = %13, %9, %2
  %17 = phi %"class.aura::Window"** [ %4, %2 ], [ %10, %9 ], [ %6, %13 ]
  %18 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %17, i64 1
  %19 = ptrtoint %"class.aura::Window"** %18 to i64
  %20 = sub i64 %8, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.aura::Window"** %17 to i8*
  %25 = bitcast %"class.aura::Window"** %18 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 %20, i1 false) #14
  br label %26

26:                                               ; preds = %16, %23
  %27 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %17, i64 %21
  store %"class.aura::Window"** %27, %"class.aura::Window"*** %5, align 8
  %28 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 0
  %29 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %28, align 8
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %29) #14
  %30 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 7
  %31 = load %"class.aura::Window"*, %"class.aura::Window"** %30, align 8
  %32 = icmp eq %"class.aura::Window"* %31, %1
  br i1 %32, label %33, label %34

33:                                               ; preds = %26
  store %"class.aura::Window"* null, %"class.aura::Window"** %30, align 8
  br label %34

34:                                               ; preds = %33, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N4aura21WindowEventDispatcher17OnWindowDestroyedEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* nocapture, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds i64, i64* %3, i64 29
  %5 = bitcast i64* %4 to %"class.aura::Window"***
  %6 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %7 = getelementptr inbounds i64, i64* %3, i64 30
  %8 = bitcast i64* %7 to %"class.aura::Window"***
  %9 = load %"class.aura::Window"**, %"class.aura::Window"*** %8, align 8
  %10 = icmp eq %"class.aura::Window"** %6, %9
  %11 = ptrtoint %"class.aura::Window"** %9 to i64
  br i1 %10, label %19, label %12

12:                                               ; preds = %2, %16
  %13 = phi %"class.aura::Window"** [ %17, %16 ], [ %6, %2 ]
  %14 = load %"class.aura::Window"*, %"class.aura::Window"** %13, align 8
  %15 = icmp eq %"class.aura::Window"* %14, %1
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %13, i64 1
  %18 = icmp eq %"class.aura::Window"** %17, %9
  br i1 %18, label %19, label %12

19:                                               ; preds = %16, %12, %2
  %20 = phi %"class.aura::Window"** [ %6, %2 ], [ %9, %16 ], [ %13, %12 ]
  %21 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %20, i64 1
  %22 = ptrtoint %"class.aura::Window"** %21 to i64
  %23 = sub i64 %11, %22
  %24 = ashr exact i64 %23, 3
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.aura::Window"** %20 to i8*
  %28 = bitcast %"class.aura::Window"** %21 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 %23, i1 false) #14
  br label %29

29:                                               ; preds = %26, %19
  %30 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %20, i64 %24
  store %"class.aura::Window"** %30, %"class.aura::Window"*** %8, align 8
  %31 = getelementptr inbounds i64, i64* %3, i64 28
  %32 = bitcast i64* %31 to %"class.aura::WindowObserver"**
  %33 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %32, align 8
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %33) #14
  %34 = getelementptr inbounds i64, i64* %3, i64 13
  %35 = bitcast i64* %34 to %"class.aura::Window"**
  %36 = load %"class.aura::Window"*, %"class.aura::Window"** %35, align 8
  %37 = icmp eq %"class.aura::Window"* %36, %1
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  store %"class.aura::Window"* null, %"class.aura::Window"** %35, align 8
  br label %39

39:                                               ; preds = %29, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher25OnWindowAddedToRootWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 1, i32 0, i32 0
  %4 = load %"class.aura::Window"**, %"class.aura::Window"*** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 1, i32 0, i32 1
  %6 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %7 = icmp eq %"class.aura::Window"** %4, %6
  %8 = ptrtoint %"class.aura::Window"** %4 to i64
  br i1 %7, label %16, label %9

9:                                                ; preds = %2, %13
  %10 = phi %"class.aura::Window"** [ %14, %13 ], [ %4, %2 ]
  %11 = load %"class.aura::Window"*, %"class.aura::Window"** %10, align 8
  %12 = icmp eq %"class.aura::Window"* %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %10, i64 1
  %15 = icmp eq %"class.aura::Window"** %14, %6
  br i1 %15, label %19, label %9

16:                                               ; preds = %9, %2
  %17 = phi %"class.aura::Window"** [ %4, %2 ], [ %10, %9 ]
  %18 = icmp eq %"class.aura::Window"** %17, %6
  br i1 %18, label %19, label %90

19:                                               ; preds = %13, %16
  %20 = ptrtoint %"class.aura::Window"* %1 to i64
  %21 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 1
  %22 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 1, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.aura::Window"**, %"class.aura::Window"*** %22, align 8
  %24 = icmp eq %"class.aura::Window"** %6, %23
  %25 = ptrtoint %"class.aura::Window"** %23 to i64
  br i1 %24, label %31, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.aura::Window"** %6 to i64*
  store i64 %20, i64* %27, align 8
  %28 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %6, i64 1
  %29 = ptrtoint %"class.aura::Window"** %28 to i64
  %30 = bitcast %"class.aura::Window"*** %5 to i64*
  store i64 %29, i64* %30, align 8
  br label %87

31:                                               ; preds = %19
  %32 = ptrtoint %"class.aura::Window"** %6 to i64
  %33 = bitcast %"class.aura::Window"*** %5 to i64*
  %34 = bitcast %"class.std::__1::vector.60"* %21 to i64*
  %35 = sub i64 %32, %8
  %36 = ashr exact i64 %35, 3
  %37 = add nsw i64 %36, 1
  %38 = icmp ugt i64 %37, 2305843009213693951
  br i1 %38, label %39, label %41

39:                                               ; preds = %31
  %40 = bitcast %"class.std::__1::vector.60"* %21 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #16
  unreachable

41:                                               ; preds = %31
  %42 = bitcast %"class.aura::Window"*** %22 to i64*
  %43 = sub i64 %25, %8
  %44 = ashr exact i64 %43, 3
  %45 = icmp ult i64 %44, 1152921504606846975
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = ashr exact i64 %43, 2
  %48 = icmp ult i64 %47, %37
  %49 = select i1 %48, i64 %37, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = icmp ugt i64 %49, 2305843009213693951
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void @abort() #16
  unreachable

54:                                               ; preds = %51, %41
  %55 = phi i64 [ %49, %51 ], [ 2305843009213693951, %41 ]
  %56 = shl i64 %55, 3
  %57 = tail call i8* @_Znwm(i64 %56) #15
  %58 = bitcast i8* %57 to %"class.aura::Window"**
  br label %59

59:                                               ; preds = %54, %46
  %60 = phi i64 [ %55, %54 ], [ 0, %46 ]
  %61 = phi %"class.aura::Window"** [ %58, %54 ], [ null, %46 ]
  %62 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %61, i64 %36
  %63 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %61, i64 %60
  %64 = ptrtoint %"class.aura::Window"** %63 to i64
  %65 = bitcast %"class.aura::Window"** %62 to i64*
  store i64 %20, i64* %65, align 8
  %66 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %62, i64 1
  %67 = ptrtoint %"class.aura::Window"** %66 to i64
  %68 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %21, i64 0, i32 0, i32 0
  %69 = load %"class.aura::Window"**, %"class.aura::Window"*** %68, align 8
  %70 = load i64, i64* %33, align 8
  %71 = ptrtoint %"class.aura::Window"** %69 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = sub nsw i64 0, %73
  %75 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %62, i64 %74
  %76 = ptrtoint %"class.aura::Window"** %75 to i64
  %77 = icmp sgt i64 %72, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %59
  %79 = bitcast %"class.aura::Window"** %75 to i8*
  %80 = bitcast %"class.aura::Window"** %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 %72, i1 false) #14
  %81 = load %"class.aura::Window"**, %"class.aura::Window"*** %68, align 8
  br label %82

82:                                               ; preds = %78, %59
  %83 = phi %"class.aura::Window"** [ %69, %59 ], [ %81, %78 ]
  store i64 %76, i64* %34, align 8
  store i64 %67, i64* %33, align 8
  store i64 %64, i64* %42, align 8
  %84 = icmp eq %"class.aura::Window"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.aura::Window"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #15
  br label %87

87:                                               ; preds = %26, %82, %85
  %88 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 0
  %89 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %88, align 8
  tail call void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %89) #14
  br label %90

90:                                               ; preds = %16, %87
  %91 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %92 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %91, align 8
  %93 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %92, i64 0, i32 4
  %94 = load %"class.aura::Window"*, %"class.aura::Window"** %93, align 8
  %95 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %94, %"class.aura::Window"* %1) #14
  br i1 %95, label %96, label %97

96:                                               ; preds = %90
  tail call void @_ZN4aura21WindowEventDispatcher38SynthesizeMouseMoveAfterChangeToWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %1)
  br label %97

97:                                               ; preds = %90, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N4aura21WindowEventDispatcher25OnWindowAddedToRootWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 1
  %4 = bitcast i64* %3 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcher25OnWindowAddedToRootWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* %4, %"class.aura::Window"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher30OnWindowRemovingFromRootWindowEPNS_6WindowES2_(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.aura::Window"* readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %5 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %4, align 8
  %6 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %5, i64 0, i32 4
  %7 = load %"class.aura::Window"*, %"class.aura::Window"** %6, align 8
  %8 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %7, %"class.aura::Window"* %1) #14
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  tail call void @_ZN4aura21WindowEventDispatcher31DispatchMouseExitToHidingWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %1)
  tail call void @_ZN4aura21WindowEventDispatcher38SynthesizeMouseMoveAfterChangeToWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %1)
  %10 = icmp eq %"class.aura::Window"* %2, null
  %11 = select i1 %10, i32 1, i32 2
  tail call void @_ZN4aura21WindowEventDispatcher14OnWindowHiddenEPNS_6WindowENS0_18WindowHiddenReasonE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %1, i32 %11)
  br label %12

12:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N4aura21WindowEventDispatcher30OnWindowRemovingFromRootWindowEPNS_6WindowES2_(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.aura::Window"* readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 1
  %5 = bitcast i64* %4 to %"class.aura::WindowEventDispatcher"*
  %6 = getelementptr inbounds i64, i64* %4, i64 11
  %7 = bitcast i64* %6 to %"class.aura::WindowTreeHost"**
  %8 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %7, align 8
  %9 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %8, i64 0, i32 4
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %10, %"class.aura::Window"* %1) #14
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  tail call void @_ZN4aura21WindowEventDispatcher31DispatchMouseExitToHidingWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* %5, %"class.aura::Window"* %1) #14
  tail call void @_ZN4aura21WindowEventDispatcher38SynthesizeMouseMoveAfterChangeToWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* %5, %"class.aura::Window"* %1) #14
  %13 = icmp eq %"class.aura::Window"* %2, null
  %14 = select i1 %13, i32 1, i32 2
  tail call void @_ZN4aura21WindowEventDispatcher14OnWindowHiddenEPNS_6WindowENS0_18WindowHiddenReasonE(%"class.aura::WindowEventDispatcher"* %5, %"class.aura::Window"* %1, i32 %14) #14
  br label %15

15:                                               ; preds = %3, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher26OnWindowVisibilityChangingEPNS_6WindowEb(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %5 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %4, align 8
  %6 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %5, i64 0, i32 4
  %7 = load %"class.aura::Window"*, %"class.aura::Window"** %6, align 8
  %8 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %7, %"class.aura::Window"* %1) #14
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @_ZN4aura21WindowEventDispatcher31DispatchMouseExitToHidingWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %1)
  br label %10

10:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N4aura21WindowEventDispatcher26OnWindowVisibilityChangingEPNS_6WindowEb(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds i64, i64* %4, i64 11
  %6 = bitcast i64* %5 to %"class.aura::WindowTreeHost"**
  %7 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %6, align 8
  %8 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %7, i64 0, i32 4
  %9 = load %"class.aura::Window"*, %"class.aura::Window"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %9, %"class.aura::Window"* %1) #14
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = bitcast i64* %4 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcher31DispatchMouseExitToHidingWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* %12, %"class.aura::Window"* %1) #14
  br label %13

13:                                               ; preds = %3, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher25OnWindowVisibilityChangedEPNS_6WindowEb(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %7 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %6, align 8
  %8 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %7, i64 0, i32 4
  %9 = load %"class.aura::Window"*, %"class.aura::Window"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %9, %"class.aura::Window"* %1) #14
  br i1 %10, label %11, label %36

11:                                               ; preds = %3
  %12 = bitcast i64* %5 to %"class.gfx::Point"*
  %13 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %16 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %15, i64 0, i32 9
  %17 = bitcast %"class.gfx::Point"* %16 to i64*
  %18 = load i64, i64* %17, align 4
  store i64 %18, i64* %4, align 8
  %19 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %6, align 8
  %20 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %19, i64 0, i32 4
  %21 = load %"class.aura::Window"*, %"class.aura::Window"** %20, align 8
  %22 = tail call %"class.aura::client::ScreenPositionClient"* @_ZN4aura6client23GetScreenPositionClientEPKNS_6WindowE(%"class.aura::Window"* %21) #14
  %23 = icmp eq %"class.aura::client::ScreenPositionClient"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %11
  %25 = bitcast i64* %4 to %"class.gfx::Point"*
  %26 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %6, align 8
  %27 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %26, i64 0, i32 4
  %28 = load %"class.aura::Window"*, %"class.aura::Window"** %27, align 8
  call void @_ZN4aura6client20ScreenPositionClient22ConvertPointFromScreenEPKNS_6WindowEPN3gfx5PointE(%"class.aura::client::ScreenPositionClient"* nonnull %22, %"class.aura::Window"* %28, %"class.gfx::Point"* nonnull %25) #14
  %29 = load i64, i64* %4, align 8
  br label %30

30:                                               ; preds = %11, %24
  %31 = phi i64 [ %18, %11 ], [ %29, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i64 %31, i64* %5, align 8
  %32 = call zeroext i1 @_ZNK4aura6Window19ContainsPointInRootERKN3gfx5PointE(%"class.aura::Window"* %1, %"class.gfx::Point"* nonnull dereferenceable(8) %12) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZN4aura21WindowEventDispatcher23PostSynthesizeMouseMoveEv(%"class.aura::WindowEventDispatcher"* %0)
  br label %34

34:                                               ; preds = %33, %30
  br i1 %2, label %36, label %35

35:                                               ; preds = %34
  call void @_ZN4aura21WindowEventDispatcher14OnWindowHiddenEPNS_6WindowENS0_18WindowHiddenReasonE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %1, i32 1)
  br label %36

36:                                               ; preds = %3, %35, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N4aura21WindowEventDispatcher25OnWindowVisibilityChangedEPNS_6WindowEb(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 1
  %5 = bitcast i64* %4 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcher25OnWindowVisibilityChangedEPNS_6WindowEb(%"class.aura::WindowEventDispatcher"* %5, %"class.aura::Window"* %1, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.gfx::Rect", align 4
  %9 = alloca %"class.gfx::Rect", align 4
  %10 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %11 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %10, align 8
  %12 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %11, i64 0, i32 4
  %13 = load %"class.aura::Window"*, %"class.aura::Window"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %13, %"class.aura::Window"* %1) #14
  br i1 %14, label %15, label %116

15:                                               ; preds = %5
  %16 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %10, align 8
  %17 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %16, i64 0, i32 4
  %18 = load %"class.aura::Window"*, %"class.aura::Window"** %17, align 8
  %19 = icmp eq %"class.aura::Window"* %18, %1
  br i1 %19, label %20, label %56

20:                                               ; preds = %15
  %21 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 129, i32 0), align 16
  %22 = and i8 %21, 25
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %36, label %24, !prof !19

24:                                               ; preds = %20
  %25 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1
  call void @_ZNK3gfx4Size8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.gfx::Size"* %26) #14
  %27 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 129, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7)
  %28 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #15
  br label %35

35:                                               ; preds = %24, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  br label %36

36:                                               ; preds = %20, %35
  %37 = phi i64 [ -6148914691236517206, %20 ], [ %27, %35 ]
  %38 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %20 ], [ getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6, i64 0, i64 0), %35 ]
  %39 = phi i8* [ null, %20 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 129, i32 0), %35 ]
  %40 = call i24 @_ZN4aura21WindowEventDispatcher18DispatchHeldEventsEv(%"class.aura::WindowEventDispatcher"* %0)
  %41 = and i24 %40, 1
  %42 = icmp eq i24 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 12
  store i8 0, i8* %44, align 8
  %45 = icmp eq i8* %39, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %43
  %47 = load i8, i8* %39, align 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %46
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %39, i8* %38, i64 %37) #14
  br label %56

50:                                               ; preds = %36
  %51 = icmp eq i8* %39, null
  br i1 %51, label %116, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %39, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %116, label %55

55:                                               ; preds = %52
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %39, i8* %38, i64 %37) #14
  br label %116

56:                                               ; preds = %49, %46, %43, %15
  %57 = call zeroext i1 @_ZNK4aura6Window9IsVisibleEv(%"class.aura::Window"* %1) #14
  br i1 %57, label %58, label %116

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 24
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 3
  br i1 %61, label %116, label %62

62:                                               ; preds = %58
  %63 = bitcast %"class.gfx::Rect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #14
  %64 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 1
  %66 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %63, i8* align 4 %66, i64 16, i1 false)
  %67 = bitcast %"class.gfx::Rect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #14
  %68 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 0, i32 1
  %70 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %67, i8* align 4 %70, i64 16, i1 false)
  %71 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 13
  %72 = load %"class.aura::Window"*, %"class.aura::Window"** %71, align 8
  %73 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %10, align 8
  %74 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %73, i64 0, i32 4
  %75 = load %"class.aura::Window"*, %"class.aura::Window"** %74, align 8
  call void @_ZN4aura6Window19ConvertRectToTargetEPKS0_S2_PN3gfx4RectE(%"class.aura::Window"* %72, %"class.aura::Window"* %75, %"class.gfx::Rect"* nonnull %8) #14
  %76 = load %"class.aura::Window"*, %"class.aura::Window"** %71, align 8
  %77 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %10, align 8
  %78 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %77, i64 0, i32 4
  %79 = load %"class.aura::Window"*, %"class.aura::Window"** %78, align 8
  call void @_ZN4aura6Window19ConvertRectToTargetEPKS0_S2_PN3gfx4RectE(%"class.aura::Window"* %76, %"class.aura::Window"* %79, %"class.gfx::Rect"* nonnull %9) #14
  %80 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80)
  %81 = call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #14
  %82 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %81, i64 0, i32 9
  %83 = bitcast %"class.gfx::Point"* %82 to i64*
  %84 = load i64, i64* %83, align 4
  store i64 %84, i64* %6, align 8
  %85 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %10, align 8
  %86 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %85, i64 0, i32 4
  %87 = load %"class.aura::Window"*, %"class.aura::Window"** %86, align 8
  %88 = call %"class.aura::client::ScreenPositionClient"* @_ZN4aura6client23GetScreenPositionClientEPKNS_6WindowE(%"class.aura::Window"* %87) #14
  %89 = icmp eq %"class.aura::client::ScreenPositionClient"* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %62
  %91 = bitcast i64* %6 to %"class.gfx::Point"*
  %92 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %10, align 8
  %93 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %92, i64 0, i32 4
  %94 = load %"class.aura::Window"*, %"class.aura::Window"** %93, align 8
  call void @_ZN4aura6client20ScreenPositionClient22ConvertPointFromScreenEPKNS_6WindowEPN3gfx5PointE(%"class.aura::client::ScreenPositionClient"* nonnull %88, %"class.aura::Window"* %94, %"class.gfx::Point"* nonnull %91) #14
  %95 = load i64, i64* %6, align 8
  br label %96

96:                                               ; preds = %62, %90
  %97 = phi i64 [ %84, %62 ], [ %95, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80)
  %98 = trunc i64 %97 to i32
  %99 = lshr i64 %97, 32
  %100 = trunc i64 %99 to i32
  %101 = call zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"* nonnull %8, i32 %98, i32 %100) #14
  %102 = call zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"* nonnull %9, i32 %98, i32 %100) #14
  %103 = xor i1 %101, %102
  br i1 %103, label %114, label %104

104:                                              ; preds = %96
  %105 = call zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"* nonnull %9, i32 %98, i32 %100) #14
  br i1 %105, label %106, label %115

106:                                              ; preds = %104
  %107 = load i32, i32* %68, align 4
  %108 = load i32, i32* %64, align 4
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %110, label %114

110:                                              ; preds = %106
  %111 = load i32, i32* %69, align 4
  %112 = load i32, i32* %65, align 4
  %113 = icmp eq i32 %111, %112
  br i1 %113, label %115, label %114

114:                                              ; preds = %110, %106, %96
  call void @_ZN4aura21WindowEventDispatcher23PostSynthesizeMouseMoveEv(%"class.aura::WindowEventDispatcher"* %0)
  br label %115

115:                                              ; preds = %110, %114, %104
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #14
  br label %116

116:                                              ; preds = %55, %52, %50, %58, %5, %115, %56
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #14
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #14
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 7, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %27, i8** %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #14
  %30 = load i8, i8* %16, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %9, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %9 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #14
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #14
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #14
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #14
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #15
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %16, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  ret i64 %29
}

declare void @_ZNK3gfx4Size8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::Size"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4aura6Window9IsVisibleEv(%"class.aura::Window"*) local_unnamed_addr #2

declare void @_ZN4aura6Window19ConvertRectToTargetEPKS0_S2_PN3gfx4RectE(%"class.aura::Window"*, %"class.aura::Window"*, %"class.gfx::Rect"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N4aura21WindowEventDispatcher21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcher21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE(%"class.aura::WindowEventDispatcher"* %7, %"class.aura::Window"* %1, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.gfx::Rect"* dereferenceable(16) %3, i32 undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.gfx::Transform"* nocapture readnone dereferenceable(68)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 13
  store i8 1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 12
  %6 = load i8, i8* %5, align 8, !range !28
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %10 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %9, align 8
  %11 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %10, i64 0, i32 4
  %12 = load %"class.aura::Window"*, %"class.aura::Window"** %11, align 8
  %13 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %12, %"class.aura::Window"* %1) #14
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN4aura21WindowEventDispatcher38SynthesizeMouseMoveAfterChangeToWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %1)
  br label %15

15:                                               ; preds = %3, %14, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N4aura21WindowEventDispatcher31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.gfx::Transform"* nocapture readnone dereferenceable(68)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 1
  %5 = bitcast i64* %4 to %"class.aura::WindowEventDispatcher"*
  %6 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %5, i64 0, i32 13
  store i8 1, i8* %6, align 1
  %7 = getelementptr inbounds i64, i64* %4, i64 24
  %8 = bitcast i64* %7 to i8*
  %9 = load i8, i8* %8, align 8, !range !28
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %3
  %12 = getelementptr inbounds i64, i64* %4, i64 11
  %13 = bitcast i64* %12 to %"class.aura::WindowTreeHost"**
  %14 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %13, align 8
  %15 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %14, i64 0, i32 4
  %16 = load %"class.aura::Window"*, %"class.aura::Window"** %15, align 8
  %17 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %16, %"class.aura::Window"* %1) #14
  br i1 %17, label %18, label %19

18:                                               ; preds = %11
  tail call void @_ZN4aura21WindowEventDispatcher38SynthesizeMouseMoveAfterChangeToWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* %5, %"class.aura::Window"* %1) #14
  br label %19

19:                                               ; preds = %3, %11, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 13
  %5 = load i8, i8* %4, align 1, !range !28
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 12
  %9 = load i8, i8* %8, align 8, !range !28
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 5
  %13 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %12, align 8
  %14 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %13, i64 0, i32 4
  %15 = load %"class.aura::Window"*, %"class.aura::Window"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %15, %"class.aura::Window"* %1) #14
  br i1 %16, label %17, label %18

17:                                               ; preds = %11
  tail call void @_ZN4aura21WindowEventDispatcher38SynthesizeMouseMoveAfterChangeToWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* %0, %"class.aura::Window"* %1)
  br label %18

18:                                               ; preds = %7, %3, %17, %11
  store i8 0, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N4aura21WindowEventDispatcher19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 1
  %5 = bitcast i64* %4 to %"class.aura::WindowEventDispatcher"*
  %6 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %5, i64 0, i32 13
  %7 = load i8, i8* %6, align 1, !range !28
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds i64, i64* %4, i64 24
  %11 = bitcast i64* %10 to i8*
  %12 = load i8, i8* %11, align 8, !range !28
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %22

14:                                               ; preds = %9
  %15 = getelementptr inbounds i64, i64* %4, i64 11
  %16 = bitcast i64* %15 to %"class.aura::WindowTreeHost"**
  %17 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %16, align 8
  %18 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %17, i64 0, i32 4
  %19 = load %"class.aura::Window"*, %"class.aura::Window"** %18, align 8
  %20 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* %19, %"class.aura::Window"* %1) #14
  br i1 %20, label %21, label %22

21:                                               ; preds = %14
  tail call void @_ZN4aura21WindowEventDispatcher38SynthesizeMouseMoveAfterChangeToWindowEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* %5, %"class.aura::Window"* %1) #14
  br label %22

22:                                               ; preds = %3, %9, %14, %21
  store i8 0, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura21WindowEventDispatcher19OnWindowInitializedEPNS_6WindowE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.aura::Window"* %1 to i64
  %4 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 1
  %5 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 1, i32 0, i32 1
  %6 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %7 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.aura::Window"**, %"class.aura::Window"*** %7, align 8
  %9 = icmp eq %"class.aura::Window"** %6, %8
  %10 = ptrtoint %"class.aura::Window"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.aura::Window"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %6, i64 1
  %14 = ptrtoint %"class.aura::Window"** %13 to i64
  %15 = bitcast %"class.aura::Window"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %73

16:                                               ; preds = %2
  %17 = ptrtoint %"class.aura::Window"** %6 to i64
  %18 = bitcast %"class.aura::Window"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.60"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.60"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #16
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.aura::Window"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #16
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #15
  %44 = bitcast i8* %43 to %"class.aura::Window"**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"class.aura::Window"** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %47, i64 %22
  %49 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %47, i64 %46
  %50 = ptrtoint %"class.aura::Window"** %49 to i64
  %51 = bitcast %"class.aura::Window"** %48 to i64*
  store i64 %3, i64* %51, align 8
  %52 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %48, i64 1
  %53 = ptrtoint %"class.aura::Window"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %4, i64 0, i32 0, i32 0
  %55 = load %"class.aura::Window"**, %"class.aura::Window"*** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint %"class.aura::Window"** %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %48, i64 %60
  %62 = ptrtoint %"class.aura::Window"** %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %"class.aura::Window"** %61 to i8*
  %66 = bitcast %"class.aura::Window"** %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %58, i1 false) #14
  %67 = load %"class.aura::Window"**, %"class.aura::Window"*** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"class.aura::Window"** [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq %"class.aura::Window"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.aura::Window"** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #15
  br label %73

73:                                               ; preds = %11, %68, %71
  %74 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 0, i32 18, i32 0
  %75 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %74, align 8
  tail call void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %75) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N4aura21WindowEventDispatcher19OnWindowInitializedEPNS_6WindowE(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %0, i64 -1, i32 22, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.139"*** %3 to %"class.aura::WindowEventDispatcher"*
  tail call void @_ZN4aura21WindowEventDispatcher19OnWindowInitializedEPNS_6WindowE(%"class.aura::WindowEventDispatcher"* %4, %"class.aura::Window"* %1)
  ret void
}

declare zeroext i1 @_ZN2ui19PlatformEventSource32ShouldIgnoreNativePlatformEventsEv() local_unnamed_addr #2

declare %"class.aura::client::CursorClient"* @_ZN4aura6client15GetCursorClientEPNS_6WindowE(%"class.aura::Window"*) local_unnamed_addr #2

declare %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK4aura13WindowTracker8ContainsEPNS_6WindowE(%"class.aura::WindowTracker"*, %"class.aura::Window"*) local_unnamed_addr #2

declare void @_ZN4aura13WindowTracker6RemoveEPNS_6WindowE(%"class.aura::WindowTracker"*, %"class.aura::Window"*) local_unnamed_addr #2

declare void @_ZN4aura23EnvInputStateController24UpdateStateForTouchEventERKN2ui10TouchEventE(%"class.aura::EnvInputStateController"*, %"class.ui::TouchEvent"* dereferenceable(216)) local_unnamed_addr #2

declare void @_ZN2ui10TouchEventC1ERKS0_(%"class.ui::TouchEvent"*, %"class.ui::TouchEvent"* dereferenceable(216)) unnamed_addr #2

declare void @_ZN2ui5Event15StopPropagationEv(%"class.ui::Event"*) local_unnamed_addr #2

declare void @_ZN2ui10TouchEvent26DisableSynchronousHandlingEv(%"class.ui::TouchEvent"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui10TouchEventD1Ev(%"class.ui::TouchEvent"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui15PropertyHandler11GetPropertyIbEET_PKNS_13ClassPropertyIS2_EE(%"class.ui::PropertyHandler"*, %"struct.ui::ClassProperty"*) local_unnamed_addr #2

declare %"class.ui::InputMethod"* @_ZN4aura14WindowTreeHost14GetInputMethodEv(%"class.aura::WindowTreeHost"*) local_unnamed_addr #2

declare i24 @_ZN2ui14EventProcessor17OnEventFromSourceEPNS_5EventE(%"class.ui::EventProcessor"*, %"class.ui::Event"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare i24 @_ZThn16_N2ui14EventProcessor17OnEventFromSourceEPNS_5EventE(%"class.ui::EventProcessor"*, %"class.ui::Event"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE(%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE(%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura11EnvObserver17OnHostInitializedEPNS_14WindowTreeHostE(%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura11EnvObserver15OnHostDestroyedEPNS_14WindowTreeHostE(%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura11EnvObserver16OnWillDestroyEnvEv(%"class.aura::EnvObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui18GestureEventHelperD2Ev(%"class.ui::GestureEventHelper"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui18GestureEventHelperD0Ev(%"class.ui::GestureEventHelper"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura6client15CaptureDelegateD2Ev(%"class.aura::client::CaptureDelegate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura6client15CaptureDelegateD0Ev(%"class.aura::client::CaptureDelegate"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseINS_10unique_ptrIN4aura21WindowEventDispatcher16ObserverNotifierENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE5clearEv(%"class.std::__1::__deque_base"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 9
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.139"** %9, %3
  %11 = ptrtoint %"class.std::__1::unique_ptr.139"** %9 to i64
  %12 = ptrtoint %"class.std::__1::unique_ptr.139"** %3 to i64
  %13 = bitcast %"class.std::__1::unique_ptr.139"** %3 to i8**
  br i1 %10, label %14, label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %29

16:                                               ; preds = %1
  %17 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %7, align 8
  %18 = and i64 %5, 511
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %17, i64 %18
  %20 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %5
  %23 = lshr i64 %22, 9
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %3, i64 %23
  %25 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %24, align 8
  %26 = and i64 %22, 511
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %25, i64 %26
  %28 = icmp eq %"class.std::__1::unique_ptr.139"* %27, %19
  br i1 %28, label %29, label %47

29:                                               ; preds = %14, %16
  %30 = phi i64* [ %15, %14 ], [ %20, %16 ]
  %31 = bitcast %"class.std::__1::unique_ptr.139"*** %8 to i64*
  br label %38

32:                                               ; preds = %66
  %33 = bitcast %"class.std::__1::unique_ptr.139"*** %8 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.139"*** %2 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = inttoptr i64 %36 to i8**
  br label %38

38:                                               ; preds = %29, %32
  %39 = phi i64* [ %30, %29 ], [ %20, %32 ]
  %40 = phi i64* [ %31, %29 ], [ %33, %32 ]
  %41 = phi i8** [ %13, %29 ], [ %37, %32 ]
  %42 = phi i64 [ %12, %29 ], [ %36, %32 ]
  %43 = phi i64 [ %11, %29 ], [ %34, %32 ]
  store i64 0, i64* %39, align 8
  %44 = sub i64 %43, %42
  %45 = ashr exact i64 %44, 3
  %46 = icmp ugt i64 %45, 2
  br i1 %46, label %71, label %82

47:                                               ; preds = %16, %66
  %48 = phi %"class.std::__1::unique_ptr.139"* [ %69, %66 ], [ %19, %16 ]
  %49 = phi %"class.std::__1::unique_ptr.139"** [ %68, %66 ], [ %7, %16 ]
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %48, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.aura::WindowEventDispatcher::ObserverNotifier"*, %"class.aura::WindowEventDispatcher::ObserverNotifier"** %50, align 8
  store %"class.aura::WindowEventDispatcher::ObserverNotifier"* null, %"class.aura::WindowEventDispatcher::ObserverNotifier"** %50, align 8
  %52 = icmp eq %"class.aura::WindowEventDispatcher::ObserverNotifier"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %47
  tail call void @_ZN4aura21WindowEventDispatcher16ObserverNotifierD2Ev(%"class.aura::WindowEventDispatcher::ObserverNotifier"* nonnull %51) #14
  %54 = bitcast %"class.aura::WindowEventDispatcher::ObserverNotifier"* %51 to i8*
  tail call void @_ZdlPv(i8* %54) #15
  br label %55

55:                                               ; preds = %47, %53
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %48, i64 1
  %57 = ptrtoint %"class.std::__1::unique_ptr.139"* %56 to i64
  %58 = bitcast %"class.std::__1::unique_ptr.139"** %49 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = icmp eq i64 %60, 4096
  br i1 %61, label %62, label %66

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %49, i64 1
  %64 = bitcast %"class.std::__1::unique_ptr.139"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  br label %66

66:                                               ; preds = %55, %62
  %67 = phi i64 [ %65, %62 ], [ %57, %55 ]
  %68 = phi %"class.std::__1::unique_ptr.139"** [ %63, %62 ], [ %49, %55 ]
  %69 = inttoptr i64 %67 to %"class.std::__1::unique_ptr.139"*
  %70 = icmp eq %"class.std::__1::unique_ptr.139"* %27, %69
  br i1 %70, label %32, label %47

71:                                               ; preds = %38, %71
  %72 = phi i8** [ %81, %71 ], [ %41, %38 ]
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #15
  %74 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %2, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %74, i64 1
  store %"class.std::__1::unique_ptr.139"** %75, %"class.std::__1::unique_ptr.139"*** %2, align 8
  %76 = load i64, i64* %40, align 8
  %77 = ptrtoint %"class.std::__1::unique_ptr.139"** %75 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 3
  %80 = icmp ugt i64 %79, 2
  %81 = bitcast %"class.std::__1::unique_ptr.139"** %75 to i8**
  br i1 %80, label %71, label %82

82:                                               ; preds = %71, %38
  %83 = phi i64 [ %45, %38 ], [ %79, %71 ]
  switch i64 %83, label %87 [
    i64 1, label %85
    i64 2, label %84
  ]

84:                                               ; preds = %82
  br label %85

85:                                               ; preds = %82, %84
  %86 = phi i64 [ 512, %84 ], [ 256, %82 ]
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %85, %82
  ret void
}

declare zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"*, i32, i32) local_unnamed_addr #2

declare i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN4aura14WindowTargeterC1Ev(%"class.aura::WindowTargeter"*) unnamed_addr #2

declare void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"*, %"class.aura::WindowObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui12LocatedEventC2IN4aura6WindowEEERKS0_PT_S7_(%"class.ui::LocatedEvent"*, %"class.ui::LocatedEvent"* dereferenceable(160), %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #7 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %1, i64 0, i32 0
  tail call void @_ZN2ui5EventC2ERKS0_(%"class.ui::Event"* %6, %"class.ui::Event"* dereferenceable(144) %7) #14
  %8 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui12LocatedEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %1, i64 0, i32 1
  %11 = bitcast %"class.gfx::PointF"* %10 to i64*
  %12 = bitcast %"class.gfx::PointF"* %9 to i64*
  %13 = load i64, i64* %11, align 8
  store i64 %13, i64* %12, align 8
  %14 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %1, i64 0, i32 2
  %16 = bitcast %"class.gfx::PointF"* %15 to i64*
  %17 = bitcast %"class.gfx::PointF"* %14 to i64*
  %18 = load i64, i64* %16, align 8
  store i64 %18, i64* %17, align 8
  %19 = bitcast i64* %5 to %"class.gfx::Point"*
  %20 = icmp eq %"class.aura::Window"* %3, null
  %21 = icmp eq %"class.aura::Window"* %3, %2
  %22 = or i1 %20, %21
  br i1 %22, label %56, label %23

23:                                               ; preds = %4
  %24 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  %25 = bitcast i64* %5 to i32*
  %26 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %19, i64 0, i32 1
  %27 = tail call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %9) #14
  store i64 %27, i64* %5, align 8
  call void @_ZN4aura6Window20ConvertPointToTargetEPKS0_S2_PN3gfx5PointE(%"class.aura::Window"* %2, %"class.aura::Window"* nonnull %3, %"class.gfx::Point"* nonnull %19) #14
  %28 = call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %9) #14
  %29 = trunc i64 %28 to i32
  %30 = lshr i64 %28, 32
  %31 = trunc i64 %30 to i32
  %32 = load i32, i32* %25, align 8
  %33 = icmp sgt i32 %32, -1
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %29, i32 %32) #14
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !45
  %39 = load i32, i32* %26, align 4
  %40 = icmp sgt i32 %39, -1
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %39) #14
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !45
  %46 = sitofp i32 %38 to float
  %47 = sitofp i32 %45 to float
  %48 = bitcast %"class.gfx::PointF"* %9 to <2 x float>*
  %49 = load <2 x float>, <2 x float>* %48, align 4
  %50 = extractelement <2 x float> %49, i32 0
  %51 = fsub float %50, %46
  %52 = insertelement <2 x float> undef, float %51, i32 0
  %53 = extractelement <2 x float> %49, i32 1
  %54 = fsub float %53, %47
  %55 = insertelement <2 x float> %52, float %54, i32 1
  store <2 x float> %55, <2 x float>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  br label %56

56:                                               ; preds = %4, %23
  ret void
}

declare void @_ZN2ui14PointerDetailsC1ERKS0_(%"struct.ui::PointerDetails"*, %"struct.ui::PointerDetails"* dereferenceable(44)) unnamed_addr #2

declare void @_ZN2ui5EventC2ERKS0_(%"class.ui::Event"*, %"class.ui::Event"* dereferenceable(144)) unnamed_addr #2

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #14
  br i1 %6, label %7, label %43

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.aura::WindowEventDispatcher"**
  %10 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %9, align 8
  %11 = icmp eq %"class.aura::WindowEventDispatcher"* %10, null
  br i1 %11, label %43, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #14
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0)) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #14
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.aura::WindowEventDispatcher"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i24 (%"class.aura::WindowEventDispatcher"*)**
  %37 = load i24 (%"class.aura::WindowEventDispatcher"*)*, i24 (%"class.aura::WindowEventDispatcher"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to i24 (%"class.aura::WindowEventDispatcher"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i24 (%"class.aura::WindowEventDispatcher"*)* [ %37, %31 ], [ %39, %38 ]
  %42 = call i24 %41(%"class.aura::WindowEventDispatcher"* %28) #14
  br label %43

43:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #14
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #15
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #14
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.aura::WindowEventDispatcher"**
  %9 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %8, align 8
  %10 = icmp ne %"class.aura::WindowEventDispatcher"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #14
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN4aura6Window20ConvertPointToTargetEPKS0_S2_PN3gfx5PointE(%"class.aura::Window"*, %"class.aura::Window"*, %"class.gfx::Point"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #11

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

declare void @_ZN2ui5Event7SetTypeENS_9EventTypeE(%"class.ui::Event"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_10unique_ptrIN4aura21WindowEventDispatcher16ObserverNotifierENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.139"*, align 8
  %3 = alloca %"class.std::__1::unique_ptr.139"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.300", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 511
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -512
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.139"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %11, i64 1
  store %"class.std::__1::unique_ptr.139"** %14, %"class.std::__1::unique_ptr.139"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %17, align 8
  %19 = icmp eq %"class.std::__1::unique_ptr.139"** %16, %18
  %20 = ptrtoint %"class.std::__1::unique_ptr.139"** %18 to i64
  %21 = bitcast %"class.std::__1::unique_ptr.139"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %23, align 8
  %25 = icmp ugt %"class.std::__1::unique_ptr.139"** %14, %24
  %26 = ptrtoint %"class.std::__1::unique_ptr.139"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.std::__1::unique_ptr.139"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %14, i64 %32
  %34 = ptrtoint %"class.std::__1::unique_ptr.139"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.std::__1::unique_ptr.139"** %33 to i8*
  %40 = bitcast %"class.std::__1::unique_ptr.139"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #14
  %41 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.std::__1::unique_ptr.139"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %33, i64 %36
  store %"class.std::__1::unique_ptr.139"** %44, %"class.std::__1::unique_ptr.139"*** %15, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %43, i64 %32
  store %"class.std::__1::unique_ptr.139"** %45, %"class.std::__1::unique_ptr.139"*** %10, align 8
  %46 = bitcast %"class.std::__1::unique_ptr.139"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.std::__1::unique_ptr.139"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #15
  %60 = bitcast i8* %59 to %"class.std::__1::unique_ptr.139"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %60, i64 %57
  %63 = ptrtoint %"class.std::__1::unique_ptr.139"** %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %60, i64 %53
  %65 = ptrtoint %"class.std::__1::unique_ptr.139"** %64 to i64
  %66 = ptrtoint %"class.std::__1::unique_ptr.139"** %14 to i64
  %67 = ptrtoint %"class.std::__1::unique_ptr.139"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.std::__1::unique_ptr.139"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.std::__1::unique_ptr.139"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.std::__1::unique_ptr.139"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %79, i64 1
  %87 = ptrtoint %"class.std::__1::unique_ptr.139"** %86 to i64
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !62

91:                                               ; preds = %78
  %92 = ptrtoint %"class.std::__1::unique_ptr.139"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.std::__1::unique_ptr.139"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.std::__1::unique_ptr.139"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.std::__1::unique_ptr.139"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.std::__1::unique_ptr.139"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.std::__1::unique_ptr.139"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %99, i64 1
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %101, i64 1
  %107 = bitcast %"class.std::__1::unique_ptr.139"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::unique_ptr.139"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %99, i64 2
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %101, i64 2
  %112 = bitcast %"class.std::__1::unique_ptr.139"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.139"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %99, i64 3
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %101, i64 3
  %117 = bitcast %"class.std::__1::unique_ptr.139"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::__1::unique_ptr.139"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %99, i64 4
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %101, i64 4
  %122 = bitcast %"class.std::__1::unique_ptr.139"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.139"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %99, i64 5
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %101, i64 5
  %127 = bitcast %"class.std::__1::unique_ptr.139"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.139"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %99, i64 6
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %101, i64 6
  %132 = bitcast %"class.std::__1::unique_ptr.139"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.std::__1::unique_ptr.139"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %99, i64 7
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %101, i64 7
  %137 = bitcast %"class.std::__1::unique_ptr.139"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.std::__1::unique_ptr.139"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %99, i64 8
  %141 = ptrtoint %"class.std::__1::unique_ptr.139"** %140 to i64
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %101, i64 8
  %143 = icmp eq %"class.std::__1::unique_ptr.139"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.std::__1::unique_ptr.139"** %70 to i64
  %146 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.std::__1::unique_ptr.139"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.std::__1::unique_ptr.139"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.std::__1::unique_ptr.139"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.std::__1::unique_ptr.139"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.std::__1::unique_ptr.139"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  %156 = bitcast %"class.std::__1::unique_ptr.139"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %15, align 8
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %160, i64 1
  store %"class.std::__1::unique_ptr.139"** %161, %"class.std::__1::unique_ptr.139"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.std::__1::unique_ptr.139"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.std::__1::unique_ptr.139"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.std::__1::unique_ptr.139"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.std::__1::unique_ptr.139"**
  %181 = inttoptr i64 %169 to %"class.std::__1::unique_ptr.139"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.std::__1::unique_ptr.139"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #14
  %186 = tail call i8* @_Znwm(i64 4096) #15
  %187 = bitcast %"class.std::__1::unique_ptr.139"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN4aura21WindowEventDispatcher16ObserverNotifierENS_14default_deleteIS4_EEEENS_9allocatorIS8_EEE9push_backEOS8_(%"struct.std::__1::__split_buffer"* %163, %"class.std::__1::unique_ptr.139"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #14
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.std::__1::unique_ptr.139"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #14
  %190 = tail call i8* @_Znwm(i64 4096) #15
  %191 = bitcast %"class.std::__1::unique_ptr.139"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN4aura21WindowEventDispatcher16ObserverNotifierENS_14default_deleteIS4_EEEENS_9allocatorIS8_EEE10push_frontEOS8_(%"struct.std::__1::__split_buffer"* %163, %"class.std::__1::unique_ptr.139"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #14
  %192 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %167, align 8
  %193 = bitcast %"class.std::__1::unique_ptr.139"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %192, i64 1
  store %"class.std::__1::unique_ptr.139"** %195, %"class.std::__1::unique_ptr.139"*** %167, align 8
  %196 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %164, align 8
  %197 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %172, align 8
  %198 = icmp eq %"class.std::__1::unique_ptr.139"** %196, %197
  %199 = ptrtoint %"class.std::__1::unique_ptr.139"** %197 to i64
  %200 = bitcast %"class.std::__1::unique_ptr.139"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %202, align 8
  %204 = icmp ugt %"class.std::__1::unique_ptr.139"** %195, %203
  %205 = ptrtoint %"class.std::__1::unique_ptr.139"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.std::__1::unique_ptr.139"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %195, i64 %211
  %213 = ptrtoint %"class.std::__1::unique_ptr.139"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.std::__1::unique_ptr.139"** %212 to i8*
  %219 = bitcast %"class.std::__1::unique_ptr.139"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #14
  %220 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.std::__1::unique_ptr.139"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %212, i64 %215
  store %"class.std::__1::unique_ptr.139"** %223, %"class.std::__1::unique_ptr.139"*** %164, align 8
  %224 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %222, i64 %211
  store %"class.std::__1::unique_ptr.139"** %224, %"class.std::__1::unique_ptr.139"*** %167, align 8
  %225 = bitcast %"class.std::__1::unique_ptr.139"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #16
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #15
  %237 = bitcast i8* %236 to %"class.std::__1::unique_ptr.139"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %237, i64 %234
  %240 = ptrtoint %"class.std::__1::unique_ptr.139"** %239 to i64
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %237, i64 %230
  %242 = ptrtoint %"class.std::__1::unique_ptr.139"** %241 to i64
  %243 = ptrtoint %"class.std::__1::unique_ptr.139"** %195 to i64
  %244 = ptrtoint %"class.std::__1::unique_ptr.139"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.std::__1::unique_ptr.139"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.std::__1::unique_ptr.139"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.std::__1::unique_ptr.139"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %256, i64 1
  %264 = ptrtoint %"class.std::__1::unique_ptr.139"** %263 to i64
  %265 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !63

268:                                              ; preds = %255
  %269 = ptrtoint %"class.std::__1::unique_ptr.139"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.std::__1::unique_ptr.139"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.std::__1::unique_ptr.139"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.std::__1::unique_ptr.139"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.std::__1::unique_ptr.139"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.std::__1::unique_ptr.139"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %276, i64 1
  %283 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %278, i64 1
  %284 = bitcast %"class.std::__1::unique_ptr.139"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.std::__1::unique_ptr.139"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %276, i64 2
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %278, i64 2
  %289 = bitcast %"class.std::__1::unique_ptr.139"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.std::__1::unique_ptr.139"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %276, i64 3
  %293 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %278, i64 3
  %294 = bitcast %"class.std::__1::unique_ptr.139"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.std::__1::unique_ptr.139"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %276, i64 4
  %298 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %278, i64 4
  %299 = bitcast %"class.std::__1::unique_ptr.139"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.std::__1::unique_ptr.139"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %276, i64 5
  %303 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %278, i64 5
  %304 = bitcast %"class.std::__1::unique_ptr.139"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.std::__1::unique_ptr.139"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %276, i64 6
  %308 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %278, i64 6
  %309 = bitcast %"class.std::__1::unique_ptr.139"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.std::__1::unique_ptr.139"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %276, i64 7
  %313 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %278, i64 7
  %314 = bitcast %"class.std::__1::unique_ptr.139"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.std::__1::unique_ptr.139"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %276, i64 8
  %318 = ptrtoint %"class.std::__1::unique_ptr.139"** %317 to i64
  %319 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %278, i64 8
  %320 = icmp eq %"class.std::__1::unique_ptr.139"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.std::__1::unique_ptr.139"** %247 to i64
  %323 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.std::__1::unique_ptr.139"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.std::__1::unique_ptr.139"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.std::__1::unique_ptr.139"** %325 to i8*
  call void @_ZdlPv(i8* %330) #15
  %331 = bitcast %"class.std::__1::unique_ptr.139"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %164, align 8
  %336 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %335, i64 1
  store %"class.std::__1::unique_ptr.139"** %336, %"class.std::__1::unique_ptr.139"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.300"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #14
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.300", %"struct.std::__1::__split_buffer.300"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.300", %"struct.std::__1::__split_buffer.300"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.300", %"struct.std::__1::__split_buffer.300"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.300", %"struct.std::__1::__split_buffer.300"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.300"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.std::__1::unique_ptr.139"** null, %"class.std::__1::unique_ptr.139"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.148"** %342 to %"class.std::__1::__compressed_pair.145"**
  store %"class.std::__1::__compressed_pair.145"* %346, %"class.std::__1::__compressed_pair.145"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #16
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #15
  %354 = bitcast i8* %353 to %"class.std::__1::unique_ptr.139"**
  %355 = bitcast %"struct.std::__1::__split_buffer.300"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %354, i64 %171
  store %"class.std::__1::unique_ptr.139"** %356, %"class.std::__1::unique_ptr.139"*** %340, align 8
  store %"class.std::__1::unique_ptr.139"** %356, %"class.std::__1::unique_ptr.139"*** %339, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %354, i64 %345
  store %"class.std::__1::unique_ptr.139"** %357, %"class.std::__1::unique_ptr.139"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #15
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.std::__1::unique_ptr.139"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.std::__1::unique_ptr.139"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.std::__1::unique_ptr.139"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %356, i64 %370
  store %"class.std::__1::unique_ptr.139"** %371, %"class.std::__1::unique_ptr.139"*** %340, align 8
  store %"class.std::__1::unique_ptr.139"** %371, %"class.std::__1::unique_ptr.139"*** %339, align 8
  %372 = ptrtoint %"class.std::__1::unique_ptr.139"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #16
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.300"* %4 to i64*
  %382 = bitcast %"class.std::__1::unique_ptr.139"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #15
  %386 = bitcast i8* %385 to %"class.std::__1::unique_ptr.139"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %386, i64 %383
  %389 = ptrtoint %"class.std::__1::unique_ptr.139"** %388 to i64
  %390 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %386, i64 %377
  %391 = ptrtoint %"class.std::__1::unique_ptr.139"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.std::__1::unique_ptr.139"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.std::__1::unique_ptr.139"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #15
  %394 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %164, align 8
  %395 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %167, align 8
  %396 = ptrtoint %"class.std::__1::unique_ptr.139"** %395 to i64
  %397 = ptrtoint %"class.std::__1::unique_ptr.139"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.std::__1::unique_ptr.139"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.std::__1::unique_ptr.139"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.std::__1::unique_ptr.139"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.std::__1::unique_ptr.139"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %406, i64 1
  store %"class.std::__1::unique_ptr.139"** %408, %"class.std::__1::unique_ptr.139"*** %340, align 8
  %409 = icmp eq %"class.std::__1::unique_ptr.139"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.std::__1::unique_ptr.139"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.300"* %4 to i64*
  %413 = bitcast %"class.std::__1::unique_ptr.139"*** %339 to i64*
  %414 = bitcast %"class.std::__1::unique_ptr.139"*** %340 to i64*
  %415 = bitcast %"class.std::__1::unique_ptr.139"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.std::__1::unique_ptr.139"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.300"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.std::__1::unique_ptr.139"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.std::__1::unique_ptr.139"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.std::__1::unique_ptr.139"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.std::__1::unique_ptr.139"**
  %441 = inttoptr i64 %434 to %"class.std::__1::unique_ptr.139"**
  %442 = icmp eq %"class.std::__1::unique_ptr.139"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %441, i64 -1
  %445 = ptrtoint %"class.std::__1::unique_ptr.139"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %441, i64 %448
  store %"class.std::__1::unique_ptr.139"** %449, %"class.std::__1::unique_ptr.139"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #15
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #14
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.std::__1::unique_ptr.139"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN4aura21WindowEventDispatcher16ObserverNotifierENS_14default_deleteIS4_EEEERNS_9allocatorIS8_EEE10push_frontERKS8_(%"struct.std::__1::__split_buffer.300"* nonnull %4, %"class.std::__1::unique_ptr.139"** dereferenceable(8) %457)
  %458 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %167, align 8
  %459 = icmp eq %"class.std::__1::unique_ptr.139"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN4aura21WindowEventDispatcher16ObserverNotifierENS_14default_deleteIS4_EEEENS_9allocatorIS8_EEE9push_backEOS8_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::unique_ptr.139"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.139"** %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.139"** %6 to i64
  %9 = bitcast %"class.std::__1::unique_ptr.139"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %13, align 8
  %15 = icmp ugt %"class.std::__1::unique_ptr.139"** %12, %14
  %16 = ptrtoint %"class.std::__1::unique_ptr.139"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.std::__1::unique_ptr.139"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %12, i64 %22
  %24 = ptrtoint %"class.std::__1::unique_ptr.139"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.std::__1::unique_ptr.139"** %23 to i8*
  %30 = bitcast %"class.std::__1::unique_ptr.139"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #14
  %31 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.std::__1::unique_ptr.139"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %23, i64 %26
  store %"class.std::__1::unique_ptr.139"** %34, %"class.std::__1::unique_ptr.139"*** %3, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %33, i64 %22
  store %"class.std::__1::unique_ptr.139"** %35, %"class.std::__1::unique_ptr.139"*** %11, align 8
  %36 = bitcast %"class.std::__1::unique_ptr.139"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.std::__1::unique_ptr.139"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #15
  %50 = bitcast i8* %49 to %"class.std::__1::unique_ptr.139"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %50, i64 %47
  %53 = ptrtoint %"class.std::__1::unique_ptr.139"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %50, i64 %43
  %55 = ptrtoint %"class.std::__1::unique_ptr.139"** %54 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.139"** %12 to i64
  %57 = ptrtoint %"class.std::__1::unique_ptr.139"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.std::__1::unique_ptr.139"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.std::__1::unique_ptr.139"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.std::__1::unique_ptr.139"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %69, i64 1
  %77 = ptrtoint %"class.std::__1::unique_ptr.139"** %76 to i64
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !64

81:                                               ; preds = %68
  %82 = ptrtoint %"class.std::__1::unique_ptr.139"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.std::__1::unique_ptr.139"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.std::__1::unique_ptr.139"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.std::__1::unique_ptr.139"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.std::__1::unique_ptr.139"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.std::__1::unique_ptr.139"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %89, i64 1
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %91, i64 1
  %97 = bitcast %"class.std::__1::unique_ptr.139"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.std::__1::unique_ptr.139"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %89, i64 2
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %91, i64 2
  %102 = bitcast %"class.std::__1::unique_ptr.139"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.std::__1::unique_ptr.139"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %89, i64 3
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %91, i64 3
  %107 = bitcast %"class.std::__1::unique_ptr.139"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::unique_ptr.139"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %89, i64 4
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %91, i64 4
  %112 = bitcast %"class.std::__1::unique_ptr.139"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.139"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %89, i64 5
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %91, i64 5
  %117 = bitcast %"class.std::__1::unique_ptr.139"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::__1::unique_ptr.139"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %89, i64 6
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %91, i64 6
  %122 = bitcast %"class.std::__1::unique_ptr.139"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.139"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %89, i64 7
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %91, i64 7
  %127 = bitcast %"class.std::__1::unique_ptr.139"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.139"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %89, i64 8
  %131 = ptrtoint %"class.std::__1::unique_ptr.139"** %130 to i64
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %91, i64 8
  %133 = icmp eq %"class.std::__1::unique_ptr.139"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.std::__1::unique_ptr.139"** %60 to i64
  %136 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.std::__1::unique_ptr.139"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.std::__1::unique_ptr.139"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.139"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.std::__1::unique_ptr.139"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.std::__1::unique_ptr.139"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #15
  %146 = bitcast %"class.std::__1::unique_ptr.139"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.std::__1::unique_ptr.139"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %3, align 8
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %152, i64 1
  store %"class.std::__1::unique_ptr.139"** %153, %"class.std::__1::unique_ptr.139"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN4aura21WindowEventDispatcher16ObserverNotifierENS_14default_deleteIS4_EEEENS_9allocatorIS8_EEE10push_frontEOS8_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::unique_ptr.139"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.139"** %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.139"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %12, align 8
  %14 = icmp ult %"class.std::__1::unique_ptr.139"** %11, %13
  %15 = bitcast %"class.std::__1::unique_ptr.139"*** %12 to i64*
  %16 = ptrtoint %"class.std::__1::unique_ptr.139"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.std::__1::unique_ptr.139"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %11, i64 %22
  %24 = ptrtoint %"class.std::__1::unique_ptr.139"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %23, i64 %29
  %31 = bitcast %"class.std::__1::unique_ptr.139"** %30 to i8*
  %32 = bitcast %"class.std::__1::unique_ptr.139"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #14
  %33 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.std::__1::unique_ptr.139"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.std::__1::unique_ptr.139"** [ %30, %27 ], [ %23, %17 ]
  store %"class.std::__1::unique_ptr.139"** %36, %"class.std::__1::unique_ptr.139"*** %3, align 8
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %35, i64 %22
  store %"class.std::__1::unique_ptr.139"** %37, %"class.std::__1::unique_ptr.139"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #15
  %51 = bitcast i8* %50 to %"class.std::__1::unique_ptr.139"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %51, i64 %48
  %54 = ptrtoint %"class.std::__1::unique_ptr.139"** %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %51, i64 %43
  %56 = ptrtoint %"class.std::__1::unique_ptr.139"** %55 to i64
  %57 = ptrtoint %"class.std::__1::unique_ptr.139"** %4 to i64
  %58 = ptrtoint %"class.std::__1::unique_ptr.139"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.std::__1::unique_ptr.139"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.std::__1::unique_ptr.139"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.std::__1::unique_ptr.139"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %70, i64 1
  %78 = ptrtoint %"class.std::__1::unique_ptr.139"** %77 to i64
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !65

82:                                               ; preds = %69
  %83 = ptrtoint %"class.std::__1::unique_ptr.139"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.std::__1::unique_ptr.139"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.std::__1::unique_ptr.139"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.std::__1::unique_ptr.139"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.std::__1::unique_ptr.139"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.std::__1::unique_ptr.139"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 1
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 1
  %98 = bitcast %"class.std::__1::unique_ptr.139"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.139"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 2
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 2
  %103 = bitcast %"class.std::__1::unique_ptr.139"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.std::__1::unique_ptr.139"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 3
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 3
  %108 = bitcast %"class.std::__1::unique_ptr.139"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::unique_ptr.139"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 4
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 4
  %113 = bitcast %"class.std::__1::unique_ptr.139"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::unique_ptr.139"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 5
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 5
  %118 = bitcast %"class.std::__1::unique_ptr.139"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.139"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 6
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 6
  %123 = bitcast %"class.std::__1::unique_ptr.139"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.139"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 7
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 7
  %128 = bitcast %"class.std::__1::unique_ptr.139"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.139"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 8
  %132 = ptrtoint %"class.std::__1::unique_ptr.139"** %131 to i64
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 8
  %134 = icmp eq %"class.std::__1::unique_ptr.139"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.std::__1::unique_ptr.139"** %61 to i64
  %137 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.std::__1::unique_ptr.139"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.139"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.std::__1::unique_ptr.139"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.std::__1::unique_ptr.139"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.std::__1::unique_ptr.139"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #15
  %146 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.std::__1::unique_ptr.139"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %148, i64 -1
  %150 = bitcast %"class.std::__1::unique_ptr.139"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.std::__1::unique_ptr.139"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %3, align 8
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %153, i64 -1
  store %"class.std::__1::unique_ptr.139"** %154, %"class.std::__1::unique_ptr.139"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN4aura21WindowEventDispatcher16ObserverNotifierENS_14default_deleteIS4_EEEERNS_9allocatorIS8_EEE10push_frontERKS8_(%"struct.std::__1::__split_buffer.300"*, %"class.std::__1::unique_ptr.139"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.300", %"struct.std::__1::__split_buffer.300"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.300", %"struct.std::__1::__split_buffer.300"* %0, i64 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.139"** %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.139"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.300", %"struct.std::__1::__split_buffer.300"* %0, i64 0, i32 2
  %11 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.300", %"struct.std::__1::__split_buffer.300"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %12, align 8
  %14 = icmp ult %"class.std::__1::unique_ptr.139"** %11, %13
  %15 = bitcast %"class.std::__1::unique_ptr.139"*** %12 to i64*
  %16 = ptrtoint %"class.std::__1::unique_ptr.139"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.std::__1::unique_ptr.139"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %11, i64 %22
  %24 = ptrtoint %"class.std::__1::unique_ptr.139"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %23, i64 %29
  %31 = bitcast %"class.std::__1::unique_ptr.139"** %30 to i8*
  %32 = bitcast %"class.std::__1::unique_ptr.139"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #14
  %33 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.std::__1::unique_ptr.139"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.std::__1::unique_ptr.139"** [ %30, %27 ], [ %23, %17 ]
  store %"class.std::__1::unique_ptr.139"** %36, %"class.std::__1::unique_ptr.139"*** %3, align 8
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %35, i64 %22
  store %"class.std::__1::unique_ptr.139"** %37, %"class.std::__1::unique_ptr.139"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.300"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #15
  %51 = bitcast i8* %50 to %"class.std::__1::unique_ptr.139"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %51, i64 %48
  %54 = ptrtoint %"class.std::__1::unique_ptr.139"** %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %51, i64 %43
  %56 = ptrtoint %"class.std::__1::unique_ptr.139"** %55 to i64
  %57 = ptrtoint %"class.std::__1::unique_ptr.139"** %4 to i64
  %58 = ptrtoint %"class.std::__1::unique_ptr.139"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.std::__1::unique_ptr.139"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.std::__1::unique_ptr.139"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.std::__1::unique_ptr.139"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %70, i64 1
  %78 = ptrtoint %"class.std::__1::unique_ptr.139"** %77 to i64
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !66

82:                                               ; preds = %69
  %83 = ptrtoint %"class.std::__1::unique_ptr.139"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.std::__1::unique_ptr.139"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.std::__1::unique_ptr.139"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.std::__1::unique_ptr.139"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.std::__1::unique_ptr.139"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.std::__1::unique_ptr.139"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 1
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 1
  %98 = bitcast %"class.std::__1::unique_ptr.139"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.139"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 2
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 2
  %103 = bitcast %"class.std::__1::unique_ptr.139"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.std::__1::unique_ptr.139"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 3
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 3
  %108 = bitcast %"class.std::__1::unique_ptr.139"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::unique_ptr.139"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 4
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 4
  %113 = bitcast %"class.std::__1::unique_ptr.139"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::unique_ptr.139"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 5
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 5
  %118 = bitcast %"class.std::__1::unique_ptr.139"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.139"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 6
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 6
  %123 = bitcast %"class.std::__1::unique_ptr.139"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.139"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 7
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 7
  %128 = bitcast %"class.std::__1::unique_ptr.139"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.139"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, i64 8
  %132 = ptrtoint %"class.std::__1::unique_ptr.139"** %131 to i64
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, i64 8
  %134 = icmp eq %"class.std::__1::unique_ptr.139"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.std::__1::unique_ptr.139"** %61 to i64
  %137 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.std::__1::unique_ptr.139"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.139"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.std::__1::unique_ptr.139"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.std::__1::unique_ptr.139"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.std::__1::unique_ptr.139"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #15
  %146 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.std::__1::unique_ptr.139"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %148, i64 -1
  %150 = bitcast %"class.std::__1::unique_ptr.139"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.std::__1::unique_ptr.139"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.std::__1::unique_ptr.139"**, %"class.std::__1::unique_ptr.139"*** %3, align 8
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %153, i64 -1
  store %"class.std::__1::unique_ptr.139"** %154, %"class.std::__1::unique_ptr.139"*** %3, align 8
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

declare void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"*, %"class.aura::WindowObserver"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!16 = distinct !{!16, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!17 = distinct !{!17, !9}
!18 = distinct !{!18, !9}
!19 = !{!"branch_weights", i32 2000, i32 1}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK4base14WeakPtrFactoryIN4aura21WindowEventDispatcherEE10GetWeakPtrEv: argument 0"}
!22 = distinct !{!22, !"_ZNK4base14WeakPtrFactoryIN4aura21WindowEventDispatcherEE10GetWeakPtrEv"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_"}
!26 = distinct !{!26, !27, !"_ZN4base8BindOnceINS_8internal18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS4_EEEEENS_12OnceCallbackINS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!27 = distinct !{!27, !"_ZN4base8BindOnceINS_8internal18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS4_EEEEENS_12OnceCallbackINS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!28 = !{i8 0, i8 2}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!31 = distinct !{!31, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!34 = distinct !{!34, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!35 = distinct !{!35, !9}
!36 = distinct !{!36, !9}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK4base14WeakPtrFactoryIN4aura21WindowEventDispatcherEE10GetWeakPtrEv: argument 0"}
!39 = distinct !{!39, !"_ZNK4base14WeakPtrFactoryIN4aura21WindowEventDispatcherEE10GetWeakPtrEv"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!42 = distinct !{!42, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_"}
!43 = distinct !{!43, !44, !"_ZN4base8BindOnceINS_8internal18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS4_EEEEENS_12OnceCallbackINS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!44 = distinct !{!44, !"_ZN4base8BindOnceINS_8internal18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS4_EEEEENS_12OnceCallbackINS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!45 = !{!"branch_weights", i32 1, i32 2000}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK4base14WeakPtrFactoryIN4aura21WindowEventDispatcherEE10GetWeakPtrEv: argument 0"}
!48 = distinct !{!48, !"_ZNK4base14WeakPtrFactoryIN4aura21WindowEventDispatcherEE10GetWeakPtrEv"}
!49 = !{!50, !52}
!50 = distinct !{!50, !51, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!51 = distinct !{!51, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS0_18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_"}
!52 = distinct !{!52, !53, !"_ZN4base8BindOnceINS_8internal18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS4_EEEEENS_12OnceCallbackINS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!53 = distinct !{!53, !"_ZN4base8BindOnceINS_8internal18IgnoreResultHelperIMN4aura21WindowEventDispatcherEFN2ui20EventDispatchDetailsEvEEEJNS_7WeakPtrIS4_EEEEENS_12OnceCallbackINS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!56 = distinct !{!56, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!59 = distinct !{!59, !"_ZNK4base12ObserverListIN4aura29WindowEventDispatcherObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!60 = distinct !{!60, !9}
!61 = distinct !{!61, !9}
!62 = distinct !{!62, !9}
!63 = distinct !{!63, !9}
!64 = distinct !{!64, !9}
!65 = distinct !{!65, !9}
!66 = distinct !{!66, !9}
