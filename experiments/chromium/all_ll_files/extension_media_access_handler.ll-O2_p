; ModuleID = '../../chrome/browser/media/extension_media_access_handler.cc'
source_filename = "../../chrome/browser/media/extension_media_access_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ExtensionMediaAccessHandler = type { %class.MediaAccessHandler }
%class.MediaAccessHandler = type { i32 (...)** }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.22", %"class.std::__1::vector", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.93", %"class.std::__1::map.134", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.10" }
%"class.std::__1::__tree.10" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type { i32 (...)**, %"class.std::__1::basic_string", i32, i32, %"class.base::Lock", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25", %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet", %"class.absl::optional", %"class.std::__1::map.55", %"class.std::__1::unique_ptr.66" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.extensions::PermissionSet"* }
%"class.extensions::PermissionSet" = type { %"class.extensions::APIPermissionSet", %"class.extensions::ManifestPermissionSet", %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet", i32, i32 }
%"class.extensions::APIPermissionSet" = type { %"class.extensions::BaseSetOperators" }
%"class.extensions::BaseSetOperators" = type { %"class.std::__1::map.28" }
%"class.std::__1::map.28" = type { %"class.std::__1::__tree.29" }
%"class.std::__1::__tree.29" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.extensions::ManifestPermissionSet" = type { %"class.extensions::BaseSetOperators.39" }
%"class.extensions::BaseSetOperators.39" = type { %"class.std::__1::map.40" }
%"class.std::__1::map.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.54 }
%union.anon.54 = type { i32 }
%"class.std::__1::map.55" = type { %"class.std::__1::__tree.56" }
%"class.std::__1::__tree.56" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.base::ThreadChecker"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.75" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.80" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.86" }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { i32*, i32*, %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.96", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.99" }
%"union.absl::variant_internal::DestructibleUnionImpl.99" = type { %"union.absl::variant_internal::DestructibleUnionImpl.100" }
%"union.absl::variant_internal::DestructibleUnionImpl.100" = type { %"union.absl::variant_internal::DestructibleUnionImpl.101" }
%"union.absl::variant_internal::DestructibleUnionImpl.101" = type { %"union.absl::variant_internal::DestructibleUnionImpl.102" }
%"union.absl::variant_internal::DestructibleUnionImpl.102" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map.134" = type { %"class.std::__1::__tree.135" }
%"class.std::__1::__tree.135" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.content::RenderFrameHost" = type { %"class.IPC::Listener", %"class.IPC::Sender" }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"struct.content::MediaStreamRequest" = type <{ i32, i32, i32, [4 x i8], %class.GURL, i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.143", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.143" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr.144" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.150", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.170" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.156", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.165" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.158 }
%class.scoped_refptr.158 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.159", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.159" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.160" }
%"struct.std::__1::atomic.160" = type { %"struct.std::__1::__atomic_base.161" }
%"struct.std::__1::__atomic_base.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i8 }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque

$_ZN18MediaAccessHandler23UpdateMediaRequestStateEiiiN5blink5mojom15MediaStreamTypeEN7content17MediaRequestStateE = comdat any

$_ZN18MediaAccessHandler30UpdateVideoScreenCaptureStatusEiiib = comdat any

@_ZTV27ExtensionMediaAccessHandler = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ExtensionMediaAccessHandler*)* @_ZN27ExtensionMediaAccessHandlerD2Ev to i8*), i8* bitcast (void (%class.ExtensionMediaAccessHandler*)* @_ZN27ExtensionMediaAccessHandlerD0Ev to i8*), i8* bitcast (i1 (%class.ExtensionMediaAccessHandler*, %"class.content::WebContents"*, i32, %"class.extensions::Extension"*)* @_ZN27ExtensionMediaAccessHandler18SupportsStreamTypeEPN7content11WebContentsEN5blink5mojom15MediaStreamTypeEPKN10extensions9ExtensionE to i8*), i8* bitcast (i1 (%class.ExtensionMediaAccessHandler*, %"class.content::RenderFrameHost"*, %class.GURL*, i32, %"class.extensions::Extension"*)* @_ZN27ExtensionMediaAccessHandler26CheckMediaAccessPermissionEPN7content15RenderFrameHostERK4GURLN5blink5mojom15MediaStreamTypeEPKN10extensions9ExtensionE to i8*), i8* bitcast (void (%class.ExtensionMediaAccessHandler*, %"class.content::WebContents"*, %"struct.content::MediaStreamRequest"*, %"class.base::OnceCallback"*, %"class.extensions::Extension"*)* @_ZN27ExtensionMediaAccessHandler13HandleRequestEPN7content11WebContentsERKNS0_18MediaStreamRequestEN4base12OnceCallbackIFvRKNSt3__16vectorIN5blink17MediaStreamDeviceENS8_9allocatorISB_EEEENSA_5mojom24MediaStreamRequestResultENS8_10unique_ptrINS0_13MediaStreamUIENS8_14default_deleteISK_EEEEEEEPKN10extensions9ExtensionE to i8*), i8* bitcast (void (%class.MediaAccessHandler*, i32, i32, i32, i32, i32)* @_ZN18MediaAccessHandler23UpdateMediaRequestStateEiiiN5blink5mojom15MediaStreamTypeEN7content17MediaRequestStateE to i8*), i8* bitcast (i1 (%class.MediaAccessHandler*, i32, i32)* @_ZN18MediaAccessHandler29IsInsecureCapturingInProgressEii to i8*), i8* bitcast (void (%class.MediaAccessHandler*, i32, i32, i32, i1)* @_ZN18MediaAccessHandler30UpdateVideoScreenCaptureStatusEiiib to i8*)] }, align 8
@_ZN5prefs20kAudioCaptureAllowedE = external constant [0 x i8], align 1
@_ZN5prefs24kAudioCaptureAllowedUrlsE = external constant [0 x i8], align 1
@_ZN5prefs20kVideoCaptureAllowedE = external constant [0 x i8], align 1
@_ZN5prefs24kVideoCaptureAllowedUrlsE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [33 x i8] c"mppnpdlheglhdfmldimlhpnegondlapf\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"jokbpnebhdcladagohdnfgjcpejggllo\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"clffjmdilanldobdnedchkdbofoimcgb\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"nnckehldicaciogcbchegobnafnjkcne\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"nbpagnldghgfoolbancepceaanlmhfmd\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"jkghodnilhceideoidjikpgommlajknk\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"gjaehgfemfahhmlgpdfknkhdnemmolop\00", align 1

@_ZN27ExtensionMediaAccessHandlerC1Ev = hidden unnamed_addr alias void (%class.ExtensionMediaAccessHandler*), void (%class.ExtensionMediaAccessHandler*)* @_ZN27ExtensionMediaAccessHandlerC2Ev
@_ZN27ExtensionMediaAccessHandlerD1Ev = hidden unnamed_addr alias void (%class.ExtensionMediaAccessHandler*), void (%class.ExtensionMediaAccessHandler*)* @_ZN27ExtensionMediaAccessHandlerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN27ExtensionMediaAccessHandlerC2Ev(%class.ExtensionMediaAccessHandler* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExtensionMediaAccessHandler, %class.ExtensionMediaAccessHandler* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV27ExtensionMediaAccessHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN27ExtensionMediaAccessHandlerD2Ev(%class.ExtensionMediaAccessHandler* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27ExtensionMediaAccessHandlerD0Ev(%class.ExtensionMediaAccessHandler*) unnamed_addr #2 align 2 {
  %2 = bitcast %class.ExtensionMediaAccessHandler* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN27ExtensionMediaAccessHandler18SupportsStreamTypeEPN7content11WebContentsEN5blink5mojom15MediaStreamTypeEPKN10extensions9ExtensionE(%class.ExtensionMediaAccessHandler* nocapture readnone, %"class.content::WebContents"* nocapture readnone, i32, %"class.extensions::Extension"*) unnamed_addr #2 align 2 {
  %5 = icmp eq %"class.extensions::Extension"* %3, null
  br i1 %5, label %109, label %6

6:                                                ; preds = %4
  %7 = tail call zeroext i1 @_ZNK10extensions9Extension15is_platform_appEv(%"class.extensions::Extension"* nonnull %3) #7
  br i1 %7, label %106, label %8

8:                                                ; preds = %6
  %9 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* nonnull %3) #7
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 32
  br i1 %18, label %19, label %22

19:                                               ; preds = %8
  %20 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %9, i64 0, i64 -1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i64 32) #7
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %106, label %22

22:                                               ; preds = %19, %8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* nonnull %3) #7
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp eq i64 %31, 32
  br i1 %32, label %33, label %36

33:                                               ; preds = %22
  %34 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %23, i64 0, i64 -1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i64 32) #7
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %106, label %36

36:                                               ; preds = %33, %22
  %37 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* nonnull %3) #7
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %40 to i64
  %45 = select i1 %41, i64 %43, i64 %44
  %46 = icmp eq i64 %45, 32
  br i1 %46, label %47, label %50

47:                                               ; preds = %36
  %48 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %37, i64 0, i64 -1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i64 32) #7
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %106, label %50

50:                                               ; preds = %47, %36
  %51 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* nonnull %3) #7
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = zext i8 %54 to i64
  %59 = select i1 %55, i64 %57, i64 %58
  %60 = icmp eq i64 %59, 32
  br i1 %60, label %61, label %64

61:                                               ; preds = %50
  %62 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %51, i64 0, i64 -1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i64 32) #7
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %106, label %64

64:                                               ; preds = %61, %50
  %65 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* nonnull %3) #7
  %66 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = zext i8 %68 to i64
  %73 = select i1 %69, i64 %71, i64 %72
  %74 = icmp eq i64 %73, 32
  br i1 %74, label %75, label %78

75:                                               ; preds = %64
  %76 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %65, i64 0, i64 -1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i64 32) #7
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %106, label %78

78:                                               ; preds = %75, %64
  %79 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* nonnull %3) #7
  %80 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = zext i8 %82 to i64
  %87 = select i1 %83, i64 %85, i64 %86
  %88 = icmp eq i64 %87, 32
  br i1 %88, label %89, label %92

89:                                               ; preds = %78
  %90 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %79, i64 0, i64 -1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0), i64 32) #7
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %106, label %92

92:                                               ; preds = %89, %78
  %93 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* nonnull %3) #7
  %94 = bitcast %"class.std::__1::basic_string"* %93 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = zext i8 %96 to i64
  %101 = select i1 %97, i64 %99, i64 %100
  %102 = icmp eq i64 %101, 32
  br i1 %102, label %103, label %109

103:                                              ; preds = %92
  %104 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %93, i64 0, i64 -1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i64 32) #7
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %19, %33, %47, %61, %75, %89, %103, %6
  %107 = add i32 %2, -1
  %108 = icmp ult i32 %107, 2
  br label %109

109:                                              ; preds = %92, %4, %106, %103
  %110 = phi i1 [ false, %103 ], [ false, %4 ], [ %108, %106 ], [ false, %92 ]
  ret i1 %110
}

declare zeroext i1 @_ZNK10extensions9Extension15is_platform_appEv(%"class.extensions::Extension"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN27ExtensionMediaAccessHandler26CheckMediaAccessPermissionEPN7content15RenderFrameHostERK4GURLN5blink5mojom15MediaStreamTypeEPKN10extensions9ExtensionE(%class.ExtensionMediaAccessHandler* nocapture readnone, %"class.content::RenderFrameHost"* nocapture readnone, %class.GURL* nocapture readnone dereferenceable(120), i32, %"class.extensions::Extension"* nocapture readonly) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %4, i64 0, i32 8, i32 0, i32 0, i32 0
  %7 = load %"class.extensions::PermissionsData"*, %"class.extensions::PermissionsData"** %6, align 8
  %8 = icmp eq i32 %3, 1
  %9 = select i1 %8, i32 12, i32 150
  %10 = tail call zeroext i1 @_ZNK10extensions15PermissionsData16HasAPIPermissionENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionsData"* %7, i32 %9) #7
  ret i1 %10
}

declare zeroext i1 @_ZNK10extensions15PermissionsData16HasAPIPermissionENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionsData"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27ExtensionMediaAccessHandler13HandleRequestEPN7content11WebContentsERKNS0_18MediaStreamRequestEN4base12OnceCallbackIFvRKNSt3__16vectorIN5blink17MediaStreamDeviceENS8_9allocatorISB_EEEENSA_5mojom24MediaStreamRequestResultENS8_10unique_ptrINS0_13MediaStreamUIENS8_14default_deleteISK_EEEEEEEPKN10extensions9ExtensionE(%class.ExtensionMediaAccessHandler* nocapture readnone, %"class.content::WebContents"*, %"struct.content::MediaStreamRequest"* dereferenceable(208), %"class.base::OnceCallback"* nocapture, %"class.extensions::Extension"*) unnamed_addr #2 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = bitcast %"class.content::WebContents"* %1 to %"class.content::BrowserContext"* (%"class.content::WebContents"*)***
  %8 = load %"class.content::BrowserContext"* (%"class.content::WebContents"*)**, %"class.content::BrowserContext"* (%"class.content::WebContents"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.content::BrowserContext"* (%"class.content::WebContents"*)*, %"class.content::BrowserContext"* (%"class.content::WebContents"*)** %8, i64 6
  %10 = load %"class.content::BrowserContext"* (%"class.content::WebContents"*)*, %"class.content::BrowserContext"* (%"class.content::WebContents"*)** %9, align 8
  %11 = tail call %"class.content::BrowserContext"* %10(%"class.content::WebContents"* %1) #7
  %12 = tail call %class.Profile* @_ZN7Profile18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %11) #7
  %13 = getelementptr inbounds %"struct.content::MediaStreamRequest", %"struct.content::MediaStreamRequest"* %2, i64 0, i32 10
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %24

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %4, i64 0, i32 8, i32 0, i32 0, i32 0
  %18 = load %"class.extensions::PermissionsData"*, %"class.extensions::PermissionsData"** %17, align 8
  %19 = tail call zeroext i1 @_ZNK10extensions15PermissionsData16HasAPIPermissionENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionsData"* %18, i32 12) #7
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %4, i64 0, i32 10
  %22 = tail call i32 @_Z15GetDevicePolicyPK7ProfileRK4GURLPKcS6_(%class.Profile* %12, %class.GURL* dereferenceable(120) %21, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs20kAudioCaptureAllowedE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs24kAudioCaptureAllowedUrlsE, i64 0, i64 0)) #7
  %23 = icmp ne i32 %22, 1
  br label %24

24:                                               ; preds = %20, %16, %5
  %25 = phi i1 [ false, %16 ], [ false, %5 ], [ %23, %20 ]
  %26 = getelementptr inbounds %"struct.content::MediaStreamRequest", %"struct.content::MediaStreamRequest"* %2, i64 0, i32 11
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 2
  br i1 %28, label %29, label %37

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %4, i64 0, i32 8, i32 0, i32 0, i32 0
  %31 = load %"class.extensions::PermissionsData"*, %"class.extensions::PermissionsData"** %30, align 8
  %32 = tail call zeroext i1 @_ZNK10extensions15PermissionsData16HasAPIPermissionENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionsData"* %31, i32 150) #7
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %4, i64 0, i32 10
  %35 = tail call i32 @_Z15GetDevicePolicyPK7ProfileRK4GURLPKcS6_(%class.Profile* %12, %class.GURL* dereferenceable(120) %34, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs20kVideoCaptureAllowedE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs24kVideoCaptureAllowedUrlsE, i64 0, i64 0)) #7
  %36 = icmp ne i32 %35, 1
  br label %37

37:                                               ; preds = %33, %29, %24
  %38 = phi i1 [ false, %29 ], [ false, %24 ], [ %36, %33 ]
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %41, i64* %42, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %39, align 8
  call void @_ZN18MediaAccessHandler26CheckDevicesAndRunCallbackEPN7content11WebContentsERKNS0_18MediaStreamRequestEN4base12OnceCallbackIFvRKNSt3__16vectorIN5blink17MediaStreamDeviceENS8_9allocatorISB_EEEENSA_5mojom24MediaStreamRequestResultENS8_10unique_ptrINS0_13MediaStreamUIENS8_14default_deleteISK_EEEEEEEbb(%"class.content::WebContents"* %1, %"struct.content::MediaStreamRequest"* dereferenceable(208) %2, %"class.base::OnceCallback"* nonnull %6, i1 zeroext %25, i1 zeroext %38) #7
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %43) #7
  ret void
}

declare %class.Profile* @_ZN7Profile18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #4

declare i32 @_Z15GetDevicePolicyPK7ProfileRK4GURLPKcS6_(%class.Profile*, %class.GURL* dereferenceable(120), i8*, i8*) local_unnamed_addr #4

declare void @_ZN18MediaAccessHandler26CheckDevicesAndRunCallbackEPN7content11WebContentsERKNS0_18MediaStreamRequestEN4base12OnceCallbackIFvRKNSt3__16vectorIN5blink17MediaStreamDeviceENS8_9allocatorISB_EEEENSA_5mojom24MediaStreamRequestResultENS8_10unique_ptrINS0_13MediaStreamUIENS8_14default_deleteISK_EEEEEEEbb(%"class.content::WebContents"*, %"struct.content::MediaStreamRequest"* dereferenceable(208), %"class.base::OnceCallback"*, i1 zeroext, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18MediaAccessHandler23UpdateMediaRequestStateEiiiN5blink5mojom15MediaStreamTypeEN7content17MediaRequestStateE(%class.MediaAccessHandler*, i32, i32, i32, i32, i32) unnamed_addr #2 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN18MediaAccessHandler29IsInsecureCapturingInProgressEii(%class.MediaAccessHandler*, i32, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18MediaAccessHandler30UpdateVideoScreenCaptureStatusEiiib(%class.MediaAccessHandler*, i32, i32, i32, i1 zeroext) unnamed_addr #2 comdat align 2 {
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"*) local_unnamed_addr #4

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
