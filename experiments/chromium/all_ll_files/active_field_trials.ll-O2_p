; ModuleID = '../../components/variations/active_field_trials.cc'
source_filename = "../../components/variations/active_field_trials.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [24 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"*, %"class.std::__1::__compressed_pair" }
%"struct.variations::ActiveGroupId" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.variations::ActiveGroupId"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"*, %"class.std::__1::__compressed_pair.8" }
%"struct.base::FieldTrial::ActiveGroup" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.base::FieldTrial::ActiveGroup"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::basic_string"* }
%"class.variations::SyntheticTrialsActiveGroupIdProvider" = type { %"class.variations::SyntheticTrialObserver", %"class.std::__1::vector", %"class.base::Lock" }
%"class.variations::SyntheticTrialObserver" = type { i32 (...)** }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZN10variations12_GLOBAL__N_114g_seed_versionE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@.str.1 = private unnamed_addr constant [6 x i8] c"%x-%x\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10variations17MakeActiveGroupIdEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8*, i64, i8*, i64) local_unnamed_addr #0 {
  %5 = tail call i32 @_ZN10variations8HashNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %0, i64 %1) #8
  %6 = tail call i32 @_ZN10variations8HashNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %2, i64 %3) #8
  %7 = zext i32 %6 to i64
  %8 = shl nuw i64 %7, 32
  %9 = zext i32 %5 to i64
  %10 = or i64 %8, %9
  ret i64 %10
}

declare i32 @_ZN10variations8HashNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations27GetFieldTrialActiveGroupIdsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_6vectorINS_13ActiveGroupIdENS2_9allocatorIS7_EEEE(i8*, i64, %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector.1", align 8
  %5 = bitcast %"class.std::__1::vector.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #8
  call void @_ZN4base14FieldTrialList25GetActiveFieldTrialGroupsEPNSt3__16vectorINS_10FieldTrial11ActiveGroupENS1_9allocatorIS4_EEEE(%"class.std::__1::vector.1"* nonnull %4) #8
  call fastcc void @_ZN10variations12_GLOBAL__N_142GetFieldTrialActiveGroupIdsForActiveGroupsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS1_10FieldTrial11ActiveGroupENS3_9allocatorIS9_EEEEPNS7_INS_13ActiveGroupIdENSA_ISF_EEEE(i8* %0, i64 %1, %"class.std::__1::vector.1"* nonnull dereferenceable(24) %4, %"class.std::__1::vector"* %2)
  %8 = load %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"** %6, align 8
  %9 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %8, null
  br i1 %9, label %40, label %10

10:                                               ; preds = %3
  %11 = bitcast %"struct.base::FieldTrial::ActiveGroup"* %8 to i8*
  %12 = load %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"** %7, align 8
  %13 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %12, %8
  br i1 %13, label %38, label %14

14:                                               ; preds = %10, %33
  %15 = phi %"struct.base::FieldTrial::ActiveGroup"* [ %16, %33 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %15, i64 -1
  %17 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %15, i64 -1, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %22, %14
  %26 = bitcast %"struct.base::FieldTrial::ActiveGroup"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #9
  br label %33

33:                                               ; preds = %30, %25
  %34 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %16, %8
  br i1 %34, label %35, label %14

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::vector.1"* %4 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %10
  %39 = phi i8* [ %37, %35 ], [ %11, %10 ]
  store %"struct.base::FieldTrial::ActiveGroup"* %8, %"struct.base::FieldTrial::ActiveGroup"** %7, align 8
  call void @_ZdlPv(i8* %39) #9
  br label %40

40:                                               ; preds = %3, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base14FieldTrialList25GetActiveFieldTrialGroupsEPNSt3__16vectorINS_10FieldTrial11ActiveGroupENS1_9allocatorIS4_EEEE(%"class.std::__1::vector.1"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN10variations12_GLOBAL__N_142GetFieldTrialActiveGroupIdsForActiveGroupsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS1_10FieldTrial11ActiveGroupENS3_9allocatorIS9_EEEEPNS7_INS_13ActiveGroupIdENSA_ISF_EEEE(i8*, i64, %"class.std::__1::vector.1"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"*) unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 0
  %10 = load %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 1
  %12 = load %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"** %11, align 8
  %13 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %10, %12
  br i1 %13, label %50, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %17 = icmp ugt i64 %1, -17
  %18 = icmp ult i64 %1, 23
  %19 = add nuw i64 %1, 16
  %20 = and i64 %19, -16
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = or i64 %20, -9223372036854775808
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = trunc i64 %1 to i8
  %26 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = icmp eq i64 %1, 0
  %29 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %34 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast %"struct.variations::ActiveGroupId"** %44 to i64*
  %47 = bitcast %"class.std::__1::vector"* %3 to i64*
  %48 = bitcast %"struct.variations::ActiveGroupId"** %45 to i64*
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  br label %51

50:                                               ; preds = %202, %4
  ret void

51:                                               ; preds = %14, %202
  %52 = phi %"struct.base::FieldTrial::ActiveGroup"* [ %10, %14 ], [ %203, %202 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8
  br i1 %17, label %53, label %55

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %54) #10
  unreachable

55:                                               ; preds = %51
  br i1 %18, label %58, label %56

56:                                               ; preds = %55
  %57 = call i8* @_Znwm(i64 %20) #9
  store i8* %57, i8** %21, align 8, !alias.scope !2
  store i64 %22, i64* %23, align 8, !alias.scope !2
  store i64 %1, i64* %24, align 8, !alias.scope !2
  br label %59

58:                                               ; preds = %55
  store i8 %25, i8* %27, align 1, !alias.scope !2
  br i1 %28, label %61, label %59

59:                                               ; preds = %58, %56
  %60 = phi i8* [ %57, %56 ], [ %16, %58 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %0, i64 %1, i1 false) #8
  br label %61

61:                                               ; preds = %59, %58
  %62 = phi i8* [ %16, %58 ], [ %60, %59 ]
  %63 = getelementptr inbounds i8, i8* %62, i64 %1
  store i8 0, i8* %63, align 1
  %64 = bitcast %"struct.base::FieldTrial::ActiveGroup"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1, !noalias !5
  %67 = icmp slt i8 %66, 0
  %68 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8, !noalias !5
  %70 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8, !noalias !5
  %72 = bitcast %"struct.base::FieldTrial::ActiveGroup"* %52 to i8*
  %73 = zext i8 %66 to i64
  %74 = select i1 %67, i8* %69, i8* %72
  %75 = select i1 %67, i64 %71, i64 %73
  %76 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i8* %74, i64 %75) #8, !noalias !5
  %77 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %77, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #8, !noalias !5
  %78 = load i8, i8* %30, align 1
  %79 = icmp slt i8 %78, 0
  %80 = load i8*, i8** %31, align 8
  %81 = select i1 %79, i8* %80, i8* %15
  %82 = load i64, i64* %32, align 8
  %83 = zext i8 %78 to i64
  %84 = select i1 %79, i64 %82, i64 %83
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #8
  %85 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %52, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #8
  br i1 %18, label %88, label %86

86:                                               ; preds = %61
  %87 = call i8* @_Znwm(i64 %20) #9
  store i8* %87, i8** %35, align 8, !alias.scope !8
  store i64 %22, i64* %36, align 8, !alias.scope !8
  store i64 %1, i64* %37, align 8, !alias.scope !8
  br label %89

88:                                               ; preds = %61
  store i8 %25, i8* %39, align 1, !alias.scope !8
  br i1 %28, label %91, label %89

89:                                               ; preds = %88, %86
  %90 = phi i8* [ %87, %86 ], [ %34, %88 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %90, i8* align 1 %0, i64 %1, i1 false) #8
  br label %91

91:                                               ; preds = %88, %89
  %92 = phi i8* [ %34, %88 ], [ %90, %89 ]
  %93 = getelementptr inbounds i8, i8* %92, i64 %1
  store i8 0, i8* %93, align 1
  %94 = bitcast %"class.std::__1::basic_string"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1, !noalias !11
  %97 = icmp slt i8 %96, 0
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8, !noalias !11
  %100 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %52, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8, !noalias !11
  %102 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  %103 = zext i8 %96 to i64
  %104 = select i1 %97, i8* %99, i8* %102
  %105 = select i1 %97, i64 %101, i64 %103
  %106 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm(%"class.std::__1::basic_string"* nonnull %8, i64 0, i8* %104, i64 %105) #8, !noalias !11
  %107 = bitcast %"class.std::__1::basic_string"* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 %107, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #8, !noalias !11
  %108 = load i8, i8* %41, align 1
  %109 = icmp slt i8 %108, 0
  %110 = load i8*, i8** %42, align 8
  %111 = select i1 %109, i8* %110, i8* %33
  %112 = load i64, i64* %43, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = call i32 @_ZN10variations8HashNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %81, i64 %84) #8
  %116 = call i32 @_ZN10variations8HashNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %111, i64 %114) #8
  %117 = zext i32 %116 to i64
  %118 = shl nuw i64 %117, 32
  %119 = zext i32 %115 to i64
  %120 = or i64 %118, %119
  %121 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %44, align 8
  %122 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %45, align 8
  %123 = icmp ult %"struct.variations::ActiveGroupId"* %121, %122
  %124 = ptrtoint %"struct.variations::ActiveGroupId"* %122 to i64
  br i1 %123, label %125, label %129

125:                                              ; preds = %91
  %126 = bitcast %"struct.variations::ActiveGroupId"* %121 to i64*
  store i64 %120, i64* %126, align 4
  %127 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %121, i64 1
  %128 = ptrtoint %"struct.variations::ActiveGroupId"* %127 to i64
  store i64 %128, i64* %46, align 8
  br label %182

129:                                              ; preds = %91
  %130 = ptrtoint %"struct.variations::ActiveGroupId"* %121 to i64
  %131 = load i64, i64* %47, align 8
  %132 = sub i64 %130, %131
  %133 = ashr exact i64 %132, 3
  %134 = add nsw i64 %133, 1
  %135 = icmp ugt i64 %134, 2305843009213693951
  br i1 %135, label %136, label %138

136:                                              ; preds = %129
  %137 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %137) #10
  unreachable

138:                                              ; preds = %129
  %139 = sub i64 %124, %131
  %140 = ashr exact i64 %139, 3
  %141 = icmp ult i64 %140, 1152921504606846975
  br i1 %141, label %142, label %150

142:                                              ; preds = %138
  %143 = ashr exact i64 %139, 2
  %144 = icmp ult i64 %143, %134
  %145 = select i1 %144, i64 %134, i64 %143
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %155, label %147

147:                                              ; preds = %142
  %148 = icmp ugt i64 %145, 2305843009213693951
  br i1 %148, label %149, label %150

149:                                              ; preds = %147
  call void @abort() #10
  unreachable

150:                                              ; preds = %147, %138
  %151 = phi i64 [ %145, %147 ], [ 2305843009213693951, %138 ]
  %152 = shl i64 %151, 3
  %153 = call i8* @_Znwm(i64 %152) #9
  %154 = bitcast i8* %153 to %"struct.variations::ActiveGroupId"*
  br label %155

155:                                              ; preds = %150, %142
  %156 = phi i64 [ %151, %150 ], [ 0, %142 ]
  %157 = phi %"struct.variations::ActiveGroupId"* [ %154, %150 ], [ null, %142 ]
  %158 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %157, i64 %133
  %159 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %157, i64 %156
  %160 = ptrtoint %"struct.variations::ActiveGroupId"* %159 to i64
  %161 = bitcast %"struct.variations::ActiveGroupId"* %158 to i64*
  store i64 %120, i64* %161, align 4
  %162 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %158, i64 1
  %163 = ptrtoint %"struct.variations::ActiveGroupId"* %162 to i64
  %164 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %49, align 8
  %165 = load i64, i64* %46, align 8
  %166 = ptrtoint %"struct.variations::ActiveGroupId"* %164 to i64
  %167 = sub i64 %165, %166
  %168 = ashr exact i64 %167, 3
  %169 = sub nsw i64 0, %168
  %170 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %158, i64 %169
  %171 = ptrtoint %"struct.variations::ActiveGroupId"* %170 to i64
  %172 = icmp sgt i64 %167, 0
  br i1 %172, label %173, label %177

173:                                              ; preds = %155
  %174 = bitcast %"struct.variations::ActiveGroupId"* %170 to i8*
  %175 = bitcast %"struct.variations::ActiveGroupId"* %164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %175, i64 %167, i1 false) #8
  %176 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %49, align 8
  br label %177

177:                                              ; preds = %173, %155
  %178 = phi %"struct.variations::ActiveGroupId"* [ %164, %155 ], [ %176, %173 ]
  store i64 %171, i64* %47, align 8
  store i64 %163, i64* %46, align 8
  store i64 %160, i64* %48, align 8
  %179 = icmp eq %"struct.variations::ActiveGroupId"* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %177
  %181 = bitcast %"struct.variations::ActiveGroupId"* %178 to i8*
  call void @_ZdlPv(i8* %181) #9
  br label %182

182:                                              ; preds = %125, %177, %180
  %183 = load i8, i8* %41, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %187

185:                                              ; preds = %182
  %186 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %186) #9
  br label %187

187:                                              ; preds = %182, %185
  %188 = load i8, i8* %39, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %187
  %191 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %191) #9
  br label %192

192:                                              ; preds = %187, %190
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #8
  %193 = load i8, i8* %30, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %192
  %196 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %196) #9
  br label %197

197:                                              ; preds = %192, %195
  %198 = load i8, i8* %27, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %197
  %201 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %201) #9
  br label %202

202:                                              ; preds = %197, %200
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  %203 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %52, i64 1
  %204 = load %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"** %11, align 8
  %205 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %203, %204
  br i1 %205, label %50, label %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations36GetFieldTrialActiveGroupIdsAsStringsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_6vectorINS2_12basic_stringIcS4_NS2_9allocatorIcEEEENS8_ISA_EEEE(i8*, i64, %"class.std::__1::vector.13"*) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #8
  call void @_ZN10variations27GetFieldTrialActiveGroupIdsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_6vectorINS_13ActiveGroupIdENS2_9allocatorIS7_EEEE(i8* %0, i64 %1, %"class.std::__1::vector"* nonnull %5)
  %10 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #8
  %11 = bitcast %"struct.variations::ActiveGroupId"** %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %5 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp eq i64 %15, 0
  %18 = inttoptr i64 %14 to %"struct.variations::ActiveGroupId"*
  br i1 %17, label %85, label %19

19:                                               ; preds = %3
  %20 = icmp ugt i64 %16, 2305843009213693951
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #10
  unreachable

23:                                               ; preds = %19
  %24 = call i8* @_Znwm(i64 %15) #9
  %25 = bitcast i8* %24 to %"struct.variations::ActiveGroupId"*
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %27 = bitcast %"struct.variations::ActiveGroupId"** %26 to i8**
  store i8* %24, i8** %27, align 8
  %28 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %24, i8** %28, align 8
  %29 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %25, i64 %16
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.variations::ActiveGroupId"* %29, %"struct.variations::ActiveGroupId"** %30, align 8
  %31 = bitcast %"struct.variations::ActiveGroupId"** %26 to i64*
  %32 = ptrtoint i8* %24 to i64
  %33 = icmp sgt i64 %15, 0
  br i1 %33, label %34, label %39

34:                                               ; preds = %23
  %35 = lshr exact i64 %15, 3
  %36 = inttoptr i64 %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 %36, i64 %15, i1 false) #8
  %37 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %25, i64 %35
  %38 = ptrtoint %"struct.variations::ActiveGroupId"* %37 to i64
  br label %39

39:                                               ; preds = %23, %34
  %40 = phi i64 [ %38, %34 ], [ %32, %23 ]
  store i64 %40, i64* %31, align 8
  %41 = inttoptr i64 %40 to %"struct.variations::ActiveGroupId"*
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %44 = icmp eq %"struct.variations::ActiveGroupId"* %25, %41
  br i1 %44, label %76, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %47 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %2, i64 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"class.std::__1::basic_string"** %47 to i64*
  %50 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %53

53:                                               ; preds = %71, %45
  %54 = phi %"struct.variations::ActiveGroupId"* [ %25, %45 ], [ %72, %71 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #8
  %55 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %54, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32 %56, i32 %58) #8
  %59 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %47, align 8
  %60 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %48, align 8
  %61 = icmp ult %"class.std::__1::basic_string"* %59, %60
  br i1 %61, label %62, label %66

62:                                               ; preds = %53
  %63 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* nonnull align 8 %46, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 24, i1 false) #8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 1
  %65 = ptrtoint %"class.std::__1::basic_string"* %64 to i64
  store i64 %65, i64* %49, align 8
  br label %71

66:                                               ; preds = %53
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.13"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #8
  %67 = load i8, i8* %51, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %70) #9
  br label %71

71:                                               ; preds = %69, %66, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #8
  %72 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %54, i64 1
  %73 = icmp eq %"struct.variations::ActiveGroupId"* %72, %41
  br i1 %73, label %74, label %53

74:                                               ; preds = %71
  %75 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %42, align 8
  br label %76

76:                                               ; preds = %74, %39
  %77 = phi %"struct.variations::ActiveGroupId"* [ %75, %74 ], [ %41, %39 ]
  %78 = icmp eq %"struct.variations::ActiveGroupId"* %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %76
  %80 = ptrtoint %"struct.variations::ActiveGroupId"* %77 to i64
  %81 = bitcast %"struct.variations::ActiveGroupId"** %43 to i64*
  store i64 %80, i64* %81, align 8
  %82 = bitcast %"struct.variations::ActiveGroupId"* %77 to i8*
  call void @_ZdlPv(i8* %82) #9
  br label %83

83:                                               ; preds = %79, %76
  %84 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %8, align 8
  br label %85

85:                                               ; preds = %83, %3
  %86 = phi %"struct.variations::ActiveGroupId"* [ %84, %83 ], [ %18, %3 ]
  %87 = icmp eq %"struct.variations::ActiveGroupId"* %86, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  %89 = ptrtoint %"struct.variations::ActiveGroupId"* %86 to i64
  store i64 %89, i64* %11, align 8
  %90 = bitcast %"struct.variations::ActiveGroupId"* %86 to i8*
  call void @_ZdlPv(i8* %90) #9
  br label %91

91:                                               ; preds = %85, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations33GetSyntheticTrialGroupIdsAsStringEPNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEE(%"class.std::__1::vector.13"*) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #8
  %8 = tail call %"class.variations::SyntheticTrialsActiveGroupIdProvider"* @_ZN10variations36SyntheticTrialsActiveGroupIdProvider11GetInstanceEv() #8
  call void @_ZN10variations36SyntheticTrialsActiveGroupIdProvider17GetActiveGroupIdsEPNSt3__16vectorINS_13ActiveGroupIdENS1_9allocatorIS3_EEEE(%"class.variations::SyntheticTrialsActiveGroupIdProvider"* %8, %"class.std::__1::vector"* nonnull %3) #8
  %9 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #8
  %10 = bitcast %"struct.variations::ActiveGroupId"** %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp eq i64 %14, 0
  %17 = inttoptr i64 %13 to %"struct.variations::ActiveGroupId"*
  br i1 %16, label %84, label %18

18:                                               ; preds = %1
  %19 = icmp ugt i64 %15, 2305843009213693951
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %21) #10
  unreachable

22:                                               ; preds = %18
  %23 = call i8* @_Znwm(i64 %14) #9
  %24 = bitcast i8* %23 to %"struct.variations::ActiveGroupId"*
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %26 = bitcast %"struct.variations::ActiveGroupId"** %25 to i8**
  store i8* %23, i8** %26, align 8
  %27 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %23, i8** %27, align 8
  %28 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %24, i64 %15
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.variations::ActiveGroupId"* %28, %"struct.variations::ActiveGroupId"** %29, align 8
  %30 = bitcast %"struct.variations::ActiveGroupId"** %25 to i64*
  %31 = ptrtoint i8* %23 to i64
  %32 = icmp sgt i64 %14, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %22
  %34 = lshr exact i64 %14, 3
  %35 = inttoptr i64 %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 %35, i64 %14, i1 false) #8
  %36 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %24, i64 %34
  %37 = ptrtoint %"struct.variations::ActiveGroupId"* %36 to i64
  br label %38

38:                                               ; preds = %22, %33
  %39 = phi i64 [ %37, %33 ], [ %31, %22 ]
  store i64 %39, i64* %30, align 8
  %40 = inttoptr i64 %39 to %"struct.variations::ActiveGroupId"*
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %43 = icmp eq %"struct.variations::ActiveGroupId"* %24, %40
  br i1 %43, label %75, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %46 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %48 = bitcast %"class.std::__1::basic_string"** %46 to i64*
  %49 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %52

52:                                               ; preds = %70, %44
  %53 = phi %"struct.variations::ActiveGroupId"* [ %24, %44 ], [ %71, %70 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #8
  %54 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %53, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %53, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32 %55, i32 %57) #8
  %58 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  %59 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %47, align 8
  %60 = icmp ult %"class.std::__1::basic_string"* %58, %59
  br i1 %60, label %61, label %65

61:                                               ; preds = %52
  %62 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %45, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #8
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 1
  %64 = ptrtoint %"class.std::__1::basic_string"* %63 to i64
  store i64 %64, i64* %48, align 8
  br label %70

65:                                               ; preds = %52
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.13"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #8
  %66 = load i8, i8* %50, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %65
  %69 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %69) #9
  br label %70

70:                                               ; preds = %68, %65, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #8
  %71 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %53, i64 1
  %72 = icmp eq %"struct.variations::ActiveGroupId"* %71, %40
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  %74 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %41, align 8
  br label %75

75:                                               ; preds = %73, %38
  %76 = phi %"struct.variations::ActiveGroupId"* [ %74, %73 ], [ %40, %38 ]
  %77 = icmp eq %"struct.variations::ActiveGroupId"* %76, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %75
  %79 = ptrtoint %"struct.variations::ActiveGroupId"* %76 to i64
  %80 = bitcast %"struct.variations::ActiveGroupId"** %42 to i64*
  store i64 %79, i64* %80, align 8
  %81 = bitcast %"struct.variations::ActiveGroupId"* %76 to i8*
  call void @_ZdlPv(i8* %81) #9
  br label %82

82:                                               ; preds = %78, %75
  %83 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %6, align 8
  br label %84

84:                                               ; preds = %82, %1
  %85 = phi %"struct.variations::ActiveGroupId"* [ %83, %82 ], [ %17, %1 ]
  %86 = icmp eq %"struct.variations::ActiveGroupId"* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %84
  %88 = ptrtoint %"struct.variations::ActiveGroupId"* %85 to i64
  store i64 %88, i64* %10, align 8
  %89 = bitcast %"struct.variations::ActiveGroupId"* %85 to i8*
  call void @_ZdlPv(i8* %89) #9
  br label %90

90:                                               ; preds = %84, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  ret void
}

declare %"class.variations::SyntheticTrialsActiveGroupIdProvider"* @_ZN10variations36SyntheticTrialsActiveGroupIdProvider11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN10variations36SyntheticTrialsActiveGroupIdProvider17GetActiveGroupIdsEPNSt3__16vectorINS_13ActiveGroupIdENS1_9allocatorIS3_EEEE(%"class.variations::SyntheticTrialsActiveGroupIdProvider"*, %"class.std::__1::vector"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations14SetSeedVersionERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE, i64 0, i32 0)) #8
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE, i64 0, i32 1, i64 0), i8 0, i64 24, i1 false) #8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE to i8*)) #8
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %1, %6, %7
  %10 = phi i64 [ %2, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.std::__1::basic_string"*
  %12 = icmp eq %"class.std::__1::basic_string"* %11, %0
  br i1 %12, label %42, label %13

13:                                               ; preds = %9
  %14 = inttoptr i64 %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %17, label %32, label %22

22:                                               ; preds = %13
  br i1 %21, label %26, label %23

23:                                               ; preds = %22
  %24 = inttoptr i64 %10 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #8
  br label %42

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %11, i8* %28, i64 %30) #8
  br label %42

32:                                               ; preds = %13
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %38 = zext i8 %20 to i64
  %39 = select i1 %21, i8* %34, i8* %37
  %40 = select i1 %21, i64 %36, i64 %38
  %41 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %11, i8* %39, i64 %40) #8
  br label %42

42:                                               ; preds = %9, %23, %26, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZN10variations14GetSeedVersionEv() local_unnamed_addr #0 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE, i64 0, i32 0)) #8
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE, i64 0, i32 1, i64 0), i8 0, i64 24, i1 false) #8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE to i8*)) #8
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10variations12_GLOBAL__N_114g_seed_versionE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %"class.std::__1::basic_string"*
  ret %"class.std::__1::basic_string"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations7testing31TestGetFieldTrialActiveGroupIdsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS1_10FieldTrial11ActiveGroupENS3_9allocatorIS9_EEEEPNS7_INS_13ActiveGroupIdENSA_ISF_EEEE(i8*, i64, %"class.std::__1::vector.1"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #0 {
  tail call fastcc void @_ZN10variations12_GLOBAL__N_142GetFieldTrialActiveGroupIdsForActiveGroupsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS1_10FieldTrial11ActiveGroupENS3_9allocatorIS9_EEEEPNS7_INS_13ActiveGroupIdENSA_ISF_EEEE(i8* %0, i64 %1, %"class.std::__1::vector.1"* dereferenceable(24) %2, %"class.std::__1::vector"* %3)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm(%"class.std::__1::basic_string"*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #3

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.13"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.13"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.13"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #9
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #8
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #9
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #9
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_"}
