; ModuleID = '../../components/services/storage/dom_storage/session_storage_data_map.cc'
source_filename = "../../components/services/storage/dom_storage/session_storage_data_map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.storage::SessionStorageDataMap" = type { %"class.storage::StorageAreaImpl::Delegate", %"class.base::RefCounted", %"class.storage::SessionStorageDataMap::Listener"*, i32, %class.scoped_refptr, %class.scoped_refptr.0, %"class.std::__1::unique_ptr", %"class.storage::StorageAreaImpl"* }
%"class.storage::StorageAreaImpl::Delegate" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr = type { %"class.storage::SessionStorageDataMap"* }
%class.scoped_refptr.0 = type { %"class.storage::SessionStorageMetadata::MapData"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.storage::StorageAreaImpl"* }
%"class.storage::StorageAreaImpl" = type { %"class.blink::mojom::StorageArea", %"class.std::__1::vector", %"class.mojo::ReceiverSetBase", %"class.mojo::RemoteSetImpl", %"class.storage::StorageAreaImpl::Delegate"*, %"class.storage::AsyncDomStorageDatabase"*, i32, i32, %"class.std::__1::map.68", %"class.std::__1::map.79", %"class.std::__1::vector.88", i64, i64, i64, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.storage::StorageAreaImpl::RateLimiter", %"class.storage::StorageAreaImpl::RateLimiter", i32, i8, %"class.std::__1::unique_ptr.95", %"class.base::OnceCallback", %"class.base::WeakPtrFactory.113" }
%"class.blink::mojom::StorageArea" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.13", i64, %"class.std::__1::map", i8*, i64, %"class.base::WeakPtrFactory" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback.13" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.23", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i8 }
%"class.mojo::RemoteSetImpl" = type { %"class.util::IdType<mojo::internal::RemoteSetElementIdTypeTag, unsigned int, 0, 1>::Generator", %"class.std::__1::map.29", %"class.base::RepeatingCallback.40" }
%"class.util::IdType<mojo::internal::RemoteSetElementIdTypeTag, unsigned int, 0, 1>::Generator" = type { i32 }
%"class.std::__1::map.29" = type { %"class.std::__1::__tree.30" }
%"class.std::__1::__tree.30" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.base::RepeatingCallback.40" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.68" = type { %"class.std::__1::__tree.69" }
%"class.std::__1::__tree.69" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::map.79" = type { %"class.std::__1::__tree.80" }
%"class.std::__1::__tree.80" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.base::OnceCallback"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.storage::StorageAreaImpl::RateLimiter" = type { float, float, %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.storage::StorageAreaImpl::CommitBatch"* }
%"struct.storage::StorageAreaImpl::CommitBatch" = type { i8, %"class.absl::optional.98", %"class.std::__1::map.68", %"class.std::__1::set" }
%"class.absl::optional.98" = type { %"class.absl::optional_internal::optional_data.99" }
%"class.absl::optional_internal::optional_data.99" = type { %"class.absl::optional_internal::optional_data_base.100" }
%"class.absl::optional_internal::optional_data_base.100" = type { %"class.absl::optional_internal::optional_data_dtor_base.101" }
%"class.absl::optional_internal::optional_data_dtor_base.101" = type { i8, %union.anon.102 }
%union.anon.102 = type { %"class.std::__1::vector" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.103" }
%"class.std::__1::__tree.103" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.113" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.storage::SessionStorageDataMap::Listener" = type { i32 (...)** }
%"class.storage::SessionStorageMetadata::MapData" = type <{ %"class.base::RefCounted.1", [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.url::Origin", i32, [4 x i8] }>
%"class.base::RefCounted.1" = type { %"class.base::subtle::RefCountedBase" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.8 }
%union.anon.8 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.storage::AsyncDomStorageDatabase" = type { %"class.base::SequenceBound", %"class.std::__1::vector.59", %"class.base::WeakPtrFactory.67" }
%"class.base::SequenceBound" = type { %"class.storage::DomStorageDatabase"*, i8*, %class.scoped_refptr.57 }
%"class.storage::DomStorageDatabase" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.41", %"struct.leveldb_env::Options", %"class.absl::optional.46", %"class.std::__1::unique_ptr.51", i8, %"class.base::OnceCallback" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.leveldb::Env"* }
%"class.leveldb::Env" = type { i32 (...)** }
%"struct.leveldb_env::Options" = type { %"struct.leveldb::Options", %"class.base::RepeatingCallback.45", %"class.base::RepeatingCallback.45" }
%"struct.leveldb::Options" = type { %"class.leveldb::Comparator"*, i8, i8, i8, %"class.leveldb::Env"*, %"class.leveldb::Logger"*, i64, i32, %"class.leveldb::Cache"*, i64, i32, i64, i32, i8, %"class.leveldb::FilterPolicy"* }
%"class.leveldb::Comparator" = type opaque
%"class.leveldb::Logger" = type { i32 (...)** }
%"class.leveldb::Cache" = type { i32 (...)**, %"struct.leveldb::Cache::Rep"* }
%"struct.leveldb::Cache::Rep" = type opaque
%"class.leveldb::FilterPolicy" = type opaque
%"class.base::RepeatingCallback.45" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.46" = type { %"class.absl::optional_internal::optional_data.47" }
%"class.absl::optional_internal::optional_data.47" = type { %"class.absl::optional_internal::optional_data_base.48" }
%"class.absl::optional_internal::optional_data_base.48" = type { %"class.absl::optional_internal::optional_data_dtor_base.49" }
%"class.absl::optional_internal::optional_data_dtor_base.49" = type { i8, %union.anon.50 }
%union.anon.50 = type { %"class.base::trace_event::MemoryAllocatorDumpGuid" }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.leveldb::DB"* }
%"class.leveldb::DB" = type { i32 (...)** }
%class.scoped_refptr.57 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.58" }>
%"class.base::RefCountedThreadSafe.58" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"class.base::OnceCallback.61"*, %"class.base::OnceCallback.61"*, %"class.std::__1::__compressed_pair.62" }
%"class.base::OnceCallback.61" = type opaque
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.base::OnceCallback.61"* }
%"class.base::WeakPtrFactory.67" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.leveldb::Status" = type { i8* }
%"struct.storage::StorageAreaImpl::Options" = type { i32, i64, %"class.base::TimeDelta", i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.117" = type opaque
%"class.std::__1::vector.118" = type opaque

$_ZN7storage21SessionStorageDataMap12OnNoBindingsEv = comdat any

@_ZTVN7storage21SessionStorageDataMapE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.storage::SessionStorageDataMap"*)* @_ZN7storage21SessionStorageDataMapD2Ev to i8*), i8* bitcast (void (%"class.storage::SessionStorageDataMap"*)* @_ZN7storage21SessionStorageDataMapD0Ev to i8*), i8* bitcast (void (%"class.storage::SessionStorageDataMap"*)* @_ZN7storage21SessionStorageDataMap12OnNoBindingsEv to i8*), i8* bitcast (void (%"class.storage::StorageAreaImpl::Delegate"*, %"class.std::__1::vector.117"*, %"class.std::__1::vector.118"*)* @_ZN7storage15StorageAreaImpl8Delegate15PrepareToCommitEPNSt3__16vectorINS_18DomStorageDatabase12KeyValuePairENS2_9allocatorIS5_EEEEPNS3_INS3_IhNS6_IhEEEENS6_ISB_EEEE to i8*), i8* bitcast (void (%"class.storage::SessionStorageDataMap"*, %"class.leveldb::Status"*)* @_ZN7storage21SessionStorageDataMap9DidCommitEN7leveldb6StatusE to i8*), i8* bitcast (void (%"class.storage::SessionStorageDataMap"*, %"class.leveldb::Status"*)* @_ZN7storage21SessionStorageDataMap11OnMapLoadedEN7leveldb6StatusE to i8*)] }, align 8
@_ZN7storage20kPerStorageAreaQuotaE = external local_unnamed_addr constant i64, align 8
@_ZN7storage33kPerStorageAreaOverQuotaAllowanceE = external local_unnamed_addr constant i64, align 8

@_ZN7storage21SessionStorageDataMapC1EPNS0_8ListenerE13scoped_refptrINS_22SessionStorageMetadata7MapDataEEPNS_23AsyncDomStorageDatabaseEb = hidden unnamed_addr alias void (%"class.storage::SessionStorageDataMap"*, %"class.storage::SessionStorageDataMap::Listener"*, %"class.storage::SessionStorageMetadata::MapData"*, %"class.storage::AsyncDomStorageDatabase"*, i1), void (%"class.storage::SessionStorageDataMap"*, %"class.storage::SessionStorageDataMap::Listener"*, %"class.storage::SessionStorageMetadata::MapData"*, %"class.storage::AsyncDomStorageDatabase"*, i1)* @_ZN7storage21SessionStorageDataMapC2EPNS0_8ListenerE13scoped_refptrINS_22SessionStorageMetadata7MapDataEEPNS_23AsyncDomStorageDatabaseEb
@_ZN7storage21SessionStorageDataMapC1EPNS0_8ListenerE13scoped_refptrINS_22SessionStorageMetadata7MapDataEES3_IS0_E = hidden unnamed_addr alias void (%"class.storage::SessionStorageDataMap"*, %"class.storage::SessionStorageDataMap::Listener"*, %"class.storage::SessionStorageMetadata::MapData"*, %"class.storage::SessionStorageDataMap"*), void (%"class.storage::SessionStorageDataMap"*, %"class.storage::SessionStorageDataMap::Listener"*, %"class.storage::SessionStorageMetadata::MapData"*, %"class.storage::SessionStorageDataMap"*)* @_ZN7storage21SessionStorageDataMapC2EPNS0_8ListenerE13scoped_refptrINS_22SessionStorageMetadata7MapDataEES3_IS0_E
@_ZN7storage21SessionStorageDataMapD1Ev = hidden unnamed_addr alias void (%"class.storage::SessionStorageDataMap"*), void (%"class.storage::SessionStorageDataMap"*)* @_ZN7storage21SessionStorageDataMapD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.storage::SessionStorageDataMap"* @_ZN7storage21SessionStorageDataMap14CreateFromDiskEPNS0_8ListenerE13scoped_refptrINS_22SessionStorageMetadata7MapDataEEPNS_23AsyncDomStorageDatabaseE(%"class.storage::SessionStorageDataMap::Listener"*, %"class.storage::SessionStorageMetadata::MapData"*, %"class.storage::AsyncDomStorageDatabase"*) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 64) #7
  %5 = bitcast i8* %4 to %"class.storage::SessionStorageDataMap"*
  tail call void @_ZN7storage21SessionStorageDataMapC2EPNS0_8ListenerE13scoped_refptrINS_22SessionStorageMetadata7MapDataEEPNS_23AsyncDomStorageDatabaseEb(%"class.storage::SessionStorageDataMap"* nonnull %5, %"class.storage::SessionStorageDataMap::Listener"* %0, %"class.storage::SessionStorageMetadata::MapData"* %1, %"class.storage::AsyncDomStorageDatabase"* %2, i1 zeroext false)
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %7) #8
  ret %"class.storage::SessionStorageDataMap"* %5
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.storage::SessionStorageDataMap"* @_ZN7storage21SessionStorageDataMap11CreateEmptyEPNS0_8ListenerE13scoped_refptrINS_22SessionStorageMetadata7MapDataEEPNS_23AsyncDomStorageDatabaseE(%"class.storage::SessionStorageDataMap::Listener"*, %"class.storage::SessionStorageMetadata::MapData"*, %"class.storage::AsyncDomStorageDatabase"*) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 64) #7
  %5 = bitcast i8* %4 to %"class.storage::SessionStorageDataMap"*
  tail call void @_ZN7storage21SessionStorageDataMapC2EPNS0_8ListenerE13scoped_refptrINS_22SessionStorageMetadata7MapDataEEPNS_23AsyncDomStorageDatabaseEb(%"class.storage::SessionStorageDataMap"* nonnull %5, %"class.storage::SessionStorageDataMap::Listener"* %0, %"class.storage::SessionStorageMetadata::MapData"* %1, %"class.storage::AsyncDomStorageDatabase"* %2, i1 zeroext true)
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %7) #8
  ret %"class.storage::SessionStorageDataMap"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.storage::SessionStorageDataMap"* @_ZN7storage21SessionStorageDataMap11CreateCloneEPNS0_8ListenerE13scoped_refptrINS_22SessionStorageMetadata7MapDataEES3_IS0_E(%"class.storage::SessionStorageDataMap::Listener"*, %"class.storage::SessionStorageMetadata::MapData"*, %"class.storage::SessionStorageDataMap"*) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 64) #7
  %5 = bitcast i8* %4 to %"class.storage::SessionStorageDataMap"*
  tail call void @_ZN7storage21SessionStorageDataMapC2EPNS0_8ListenerE13scoped_refptrINS_22SessionStorageMetadata7MapDataEES3_IS0_E(%"class.storage::SessionStorageDataMap"* nonnull %5, %"class.storage::SessionStorageDataMap::Listener"* %0, %"class.storage::SessionStorageMetadata::MapData"* %1, %"class.storage::SessionStorageDataMap"* %2)
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %7) #8
  ret %"class.storage::SessionStorageDataMap"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage21SessionStorageDataMap9DidCommitEN7leveldb6StatusE(%"class.storage::SessionStorageDataMap"* nocapture readonly, %"class.leveldb::Status"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.leveldb::Status", align 8
  %4 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 2
  %5 = load %"class.storage::SessionStorageDataMap::Listener"*, %"class.storage::SessionStorageDataMap::Listener"** %4, align 8
  %6 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %1, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = tail call i8* @_ZN7leveldb6Status9CopyStateEPKc(i8* nonnull %7) #8
  br label %11

11:                                               ; preds = %2, %9
  %12 = phi i8* [ %10, %9 ], [ null, %2 ]
  %13 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %3, i64 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = bitcast %"class.storage::SessionStorageDataMap::Listener"* %5 to void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.leveldb::Status"*)***
  %15 = load void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.leveldb::Status"*)**, void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.leveldb::Status"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.leveldb::Status"*)*, void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.leveldb::Status"*)** %15, i64 4
  %17 = load void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.leveldb::Status"*)*, void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.leveldb::Status"*)** %16, align 8
  call void %17(%"class.storage::SessionStorageDataMap::Listener"* %5, %"class.leveldb::Status"* nonnull %3) #8
  %18 = load i8*, i8** %13, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %11
  call void @_ZdaPv(i8* nonnull %18) #7
  br label %21

21:                                               ; preds = %11, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage21SessionStorageDataMapC2EPNS0_8ListenerE13scoped_refptrINS_22SessionStorageMetadata7MapDataEEPNS_23AsyncDomStorageDatabaseEb(%"class.storage::SessionStorageDataMap"*, %"class.storage::SessionStorageDataMap::Listener"*, %"class.storage::SessionStorageMetadata::MapData"*, %"class.storage::AsyncDomStorageDatabase"*, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"struct.storage::StorageAreaImpl::Options", align 8
  %8 = ptrtoint %"class.storage::SessionStorageMetadata::MapData"* %2 to i64
  %9 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 0, i32* %10, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7storage21SessionStorageDataMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 2
  store %"class.storage::SessionStorageDataMap::Listener"* %1, %"class.storage::SessionStorageDataMap::Listener"** %11, align 8
  %12 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 3
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 4, i32 0
  store %"class.storage::SessionStorageDataMap"* null, %"class.storage::SessionStorageDataMap"** %13, align 8
  %14 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 5
  %15 = bitcast %class.scoped_refptr.0* %14 to i64*
  store i64 %8, i64* %15, align 8
  %16 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %14, i64 0, i32 0
  %17 = getelementptr inbounds %"class.storage::SessionStorageMetadata::MapData", %"class.storage::SessionStorageMetadata::MapData"* %2, i64 0, i32 3
  %18 = bitcast %"struct.storage::StorageAreaImpl::Options"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #8
  %19 = bitcast %"struct.storage::StorageAreaImpl::Options"* %7 to i64*
  store i64 -6148914694099828736, i64* %19, align 8, !alias.scope !2
  %20 = getelementptr inbounds %"struct.storage::StorageAreaImpl::Options", %"struct.storage::StorageAreaImpl::Options"* %7, i64 0, i32 1
  %21 = load i64, i64* @_ZN7storage20kPerStorageAreaQuotaE, align 8, !noalias !2
  %22 = load i64, i64* @_ZN7storage33kPerStorageAreaOverQuotaAllowanceE, align 8, !noalias !2
  %23 = add i64 %22, %21
  store i64 %23, i64* %20, align 8, !alias.scope !2
  %24 = getelementptr inbounds %"struct.storage::StorageAreaImpl::Options", %"struct.storage::StorageAreaImpl::Options"* %7, i64 0, i32 2, i32 0
  store i64 5000000, i64* %24, align 8, !alias.scope !2
  %25 = trunc i64 %21 to i32
  %26 = getelementptr inbounds %"struct.storage::StorageAreaImpl::Options", %"struct.storage::StorageAreaImpl::Options"* %7, i64 0, i32 3
  store i32 %25, i32* %26, align 8, !alias.scope !2
  %27 = getelementptr inbounds %"struct.storage::StorageAreaImpl::Options", %"struct.storage::StorageAreaImpl::Options"* %7, i64 0, i32 4
  store i32 60, i32* %27, align 4, !alias.scope !2
  %28 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28)
  %29 = tail call i8* @_Znwm(i64 360) #7
  %30 = bitcast i8* %29 to %"class.storage::StorageAreaImpl"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #8
  %31 = getelementptr inbounds %"class.storage::SessionStorageMetadata::MapData", %"class.storage::SessionStorageMetadata::MapData"* %2, i64 0, i32 3, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %17 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = icmp eq i64 %36, 0
  %38 = inttoptr i64 %35 to i8*
  br i1 %37, label %51, label %39

39:                                               ; preds = %5
  %40 = icmp slt i64 %36, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %42) #9
  unreachable

43:                                               ; preds = %39
  %44 = tail call i8* @_Znwm(i64 %36) #7
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds i8, i8* %44, i64 %36
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %47, i8** %48, align 8
  %49 = bitcast i8** %45 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %44, i8* align 1 %38, i64 %36, i1 false) #8
  %50 = ptrtoint i8* %47 to i64
  store i64 %50, i64* %49, align 8
  br label %51

51:                                               ; preds = %43, %5
  %52 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 0
  call void @_ZN7storage15StorageAreaImplC1EPNS_23AsyncDomStorageDatabaseENSt3__16vectorIhNS3_9allocatorIhEEEEPNS0_8DelegateERKNS0_7OptionsE(%"class.storage::StorageAreaImpl"* nonnull %30, %"class.storage::AsyncDomStorageDatabase"* %3, %"class.std::__1::vector"* nonnull %6, %"class.storage::StorageAreaImpl::Delegate"* %52, %"struct.storage::StorageAreaImpl::Options"* nonnull dereferenceable(32) %7) #8
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %51
  %57 = ptrtoint i8* %54 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %59 = bitcast i8** %58 to i64*
  store i64 %57, i64* %59, align 8
  call void @_ZdlPv(i8* nonnull %54) #7
  br label %60

60:                                               ; preds = %51, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28)
  %61 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %62 = bitcast %"class.storage::StorageAreaImpl"** %61 to i8**
  store i8* %29, i8** %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #8
  %63 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 7
  %64 = bitcast %"class.storage::StorageAreaImpl"** %63 to i8**
  store i8* %29, i8** %64, align 8
  br i1 %4, label %65, label %66

65:                                               ; preds = %60
  call void @_ZN7storage15StorageAreaImpl17InitializeAsEmptyEv(%"class.storage::StorageAreaImpl"* nonnull %30) #8
  br label %66

66:                                               ; preds = %60, %65
  %67 = load %"class.storage::SessionStorageDataMap::Listener"*, %"class.storage::SessionStorageDataMap::Listener"** %11, align 8
  %68 = load %"class.storage::SessionStorageMetadata::MapData"*, %"class.storage::SessionStorageMetadata::MapData"** %16, align 8
  %69 = getelementptr inbounds %"class.storage::SessionStorageMetadata::MapData", %"class.storage::SessionStorageMetadata::MapData"* %68, i64 0, i32 2
  %70 = bitcast %"class.storage::SessionStorageDataMap::Listener"* %67 to void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*, %"class.storage::SessionStorageDataMap"*)***
  %71 = load void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*, %"class.storage::SessionStorageDataMap"*)**, void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*, %"class.storage::SessionStorageDataMap"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*, %"class.storage::SessionStorageDataMap"*)*, void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*, %"class.storage::SessionStorageDataMap"*)** %71, i64 2
  %73 = load void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*, %"class.storage::SessionStorageDataMap"*)*, void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*, %"class.storage::SessionStorageDataMap"*)** %72, align 8
  call void %73(%"class.storage::SessionStorageDataMap::Listener"* %67, %"class.std::__1::vector"* dereferenceable(24) %69, %"class.storage::SessionStorageDataMap"* %0) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage21SessionStorageDataMap10GetOptionsEv(%"struct.storage::StorageAreaImpl::Options"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.storage::StorageAreaImpl::Options"* %0 to i64*
  store i64 -6148914691236517206, i64* %2, align 8
  %3 = getelementptr inbounds %"struct.storage::StorageAreaImpl::Options", %"struct.storage::StorageAreaImpl::Options"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.storage::StorageAreaImpl::Options", %"struct.storage::StorageAreaImpl::Options"* %0, i64 0, i32 1
  %5 = load i64, i64* @_ZN7storage20kPerStorageAreaQuotaE, align 8
  %6 = load i64, i64* @_ZN7storage33kPerStorageAreaOverQuotaAllowanceE, align 8
  %7 = add i64 %6, %5
  store i64 %7, i64* %4, align 8
  %8 = getelementptr inbounds %"struct.storage::StorageAreaImpl::Options", %"struct.storage::StorageAreaImpl::Options"* %0, i64 0, i32 2, i32 0
  store i64 5000000, i64* %8, align 8
  %9 = trunc i64 %5 to i32
  %10 = getelementptr inbounds %"struct.storage::StorageAreaImpl::Options", %"struct.storage::StorageAreaImpl::Options"* %0, i64 0, i32 3
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.storage::StorageAreaImpl::Options", %"struct.storage::StorageAreaImpl::Options"* %0, i64 0, i32 4
  store i32 60, i32* %11, align 4
  store i32 0, i32* %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7storage15StorageAreaImpl17InitializeAsEmptyEv(%"class.storage::StorageAreaImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage21SessionStorageDataMapC2EPNS0_8ListenerE13scoped_refptrINS_22SessionStorageMetadata7MapDataEES3_IS0_E(%"class.storage::SessionStorageDataMap"*, %"class.storage::SessionStorageDataMap::Listener"*, %"class.storage::SessionStorageMetadata::MapData"*, %"class.storage::SessionStorageDataMap"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"struct.storage::StorageAreaImpl::Options", align 8
  %7 = ptrtoint %"class.storage::SessionStorageMetadata::MapData"* %2 to i64
  %8 = ptrtoint %"class.storage::SessionStorageDataMap"* %3 to i64
  %9 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 0, i32* %11, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7storage21SessionStorageDataMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %12 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 2
  store %"class.storage::SessionStorageDataMap::Listener"* %1, %"class.storage::SessionStorageDataMap::Listener"** %12, align 8
  %13 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 3
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 4
  %15 = bitcast %class.scoped_refptr* %14 to i64*
  store i64 %8, i64* %15, align 8
  %16 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 5
  %17 = bitcast %class.scoped_refptr.0* %16 to i64*
  store i64 %7, i64* %17, align 8
  %18 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %3, i64 0, i32 7
  %19 = load %"class.storage::StorageAreaImpl"*, %"class.storage::StorageAreaImpl"** %18, align 8
  %20 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %16, i64 0, i32 0
  %21 = getelementptr inbounds %"class.storage::SessionStorageMetadata::MapData", %"class.storage::SessionStorageMetadata::MapData"* %2, i64 0, i32 3
  %22 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #8
  %23 = getelementptr inbounds %"class.storage::SessionStorageMetadata::MapData", %"class.storage::SessionStorageMetadata::MapData"* %2, i64 0, i32 3, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector"* %21 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp eq i64 %28, 0
  %30 = inttoptr i64 %27 to i8*
  br i1 %29, label %43, label %31

31:                                               ; preds = %4
  %32 = icmp slt i64 %28, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %34) #9
  unreachable

35:                                               ; preds = %31
  %36 = tail call i8* @_Znwm(i64 %28) #7
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds i8, i8* %36, i64 %28
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %39, i8** %40, align 8
  %41 = bitcast i8** %37 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %30, i64 %28, i1 false) #8
  %42 = ptrtoint i8* %39 to i64
  store i64 %42, i64* %41, align 8
  br label %43

43:                                               ; preds = %4, %35
  %44 = bitcast %"struct.storage::StorageAreaImpl::Options"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #8
  %45 = bitcast %"struct.storage::StorageAreaImpl::Options"* %6 to i64*
  store i64 -6148914694099828736, i64* %45, align 8, !alias.scope !5
  %46 = getelementptr inbounds %"struct.storage::StorageAreaImpl::Options", %"struct.storage::StorageAreaImpl::Options"* %6, i64 0, i32 1
  %47 = load i64, i64* @_ZN7storage20kPerStorageAreaQuotaE, align 8, !noalias !5
  %48 = load i64, i64* @_ZN7storage33kPerStorageAreaOverQuotaAllowanceE, align 8, !noalias !5
  %49 = add i64 %48, %47
  store i64 %49, i64* %46, align 8, !alias.scope !5
  %50 = getelementptr inbounds %"struct.storage::StorageAreaImpl::Options", %"struct.storage::StorageAreaImpl::Options"* %6, i64 0, i32 2, i32 0
  store i64 5000000, i64* %50, align 8, !alias.scope !5
  %51 = trunc i64 %47 to i32
  %52 = getelementptr inbounds %"struct.storage::StorageAreaImpl::Options", %"struct.storage::StorageAreaImpl::Options"* %6, i64 0, i32 3
  store i32 %51, i32* %52, align 8, !alias.scope !5
  %53 = getelementptr inbounds %"struct.storage::StorageAreaImpl::Options", %"struct.storage::StorageAreaImpl::Options"* %6, i64 0, i32 4
  store i32 60, i32* %53, align 4, !alias.scope !5
  %54 = call %"class.storage::StorageAreaImpl"* @_ZN7storage15StorageAreaImpl15ForkToNewPrefixENSt3__16vectorIhNS1_9allocatorIhEEEEPNS0_8DelegateERKNS0_7OptionsE(%"class.storage::StorageAreaImpl"* %19, %"class.std::__1::vector"* nonnull %5, %"class.storage::StorageAreaImpl::Delegate"* %9, %"struct.storage::StorageAreaImpl::Options"* nonnull dereferenceable(32) %6) #8
  %55 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  store %"class.storage::StorageAreaImpl"* %54, %"class.storage::StorageAreaImpl"** %55, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %43
  %60 = ptrtoint %"class.storage::StorageAreaImpl"* %54 to i64
  br label %67

61:                                               ; preds = %43
  %62 = ptrtoint i8* %57 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %64 = bitcast i8** %63 to i64*
  store i64 %62, i64* %64, align 8
  call void @_ZdlPv(i8* nonnull %57) #7
  %65 = bitcast %"class.storage::StorageAreaImpl"** %55 to i64*
  %66 = load i64, i64* %65, align 8
  br label %67

67:                                               ; preds = %59, %61
  %68 = phi i64 [ %60, %59 ], [ %66, %61 ]
  %69 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 7
  %70 = bitcast %"class.storage::StorageAreaImpl"** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = load %"class.storage::SessionStorageDataMap::Listener"*, %"class.storage::SessionStorageDataMap::Listener"** %12, align 8
  %72 = load %"class.storage::SessionStorageMetadata::MapData"*, %"class.storage::SessionStorageMetadata::MapData"** %20, align 8
  %73 = getelementptr inbounds %"class.storage::SessionStorageMetadata::MapData", %"class.storage::SessionStorageMetadata::MapData"* %72, i64 0, i32 2
  %74 = bitcast %"class.storage::SessionStorageDataMap::Listener"* %71 to void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*, %"class.storage::SessionStorageDataMap"*)***
  %75 = load void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*, %"class.storage::SessionStorageDataMap"*)**, void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*, %"class.storage::SessionStorageDataMap"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*, %"class.storage::SessionStorageDataMap"*)*, void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*, %"class.storage::SessionStorageDataMap"*)** %75, i64 2
  %77 = load void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*, %"class.storage::SessionStorageDataMap"*)*, void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*, %"class.storage::SessionStorageDataMap"*)** %76, align 8
  call void %77(%"class.storage::SessionStorageDataMap::Listener"* %71, %"class.std::__1::vector"* dereferenceable(24) %73, %"class.storage::SessionStorageDataMap"* %0) #8
  ret void
}

declare %"class.storage::StorageAreaImpl"* @_ZN7storage15StorageAreaImpl15ForkToNewPrefixENSt3__16vectorIhNS1_9allocatorIhEEEEPNS0_8DelegateERKNS0_7OptionsE(%"class.storage::StorageAreaImpl"*, %"class.std::__1::vector"*, %"class.storage::StorageAreaImpl::Delegate"*, %"struct.storage::StorageAreaImpl::Options"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage21SessionStorageDataMapD2Ev(%"class.storage::SessionStorageDataMap"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7storage21SessionStorageDataMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 2
  %4 = load %"class.storage::SessionStorageDataMap::Listener"*, %"class.storage::SessionStorageDataMap::Listener"** %3, align 8
  %5 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 5, i32 0
  %6 = load %"class.storage::SessionStorageMetadata::MapData"*, %"class.storage::SessionStorageMetadata::MapData"** %5, align 8
  %7 = getelementptr inbounds %"class.storage::SessionStorageMetadata::MapData", %"class.storage::SessionStorageMetadata::MapData"* %6, i64 0, i32 2
  %8 = bitcast %"class.storage::SessionStorageDataMap::Listener"* %4 to void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*)***
  %9 = load void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*)**, void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*)*, void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*)** %9, i64 3
  %11 = load void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*)*, void (%"class.storage::SessionStorageDataMap::Listener"*, %"class.std::__1::vector"*)** %10, align 8
  tail call void %11(%"class.storage::SessionStorageDataMap::Listener"* %4, %"class.std::__1::vector"* dereferenceable(24) %7) #8
  %12 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %"class.storage::StorageAreaImpl"*, %"class.storage::StorageAreaImpl"** %12, align 8
  store %"class.storage::StorageAreaImpl"* null, %"class.storage::StorageAreaImpl"** %12, align 8
  %14 = icmp eq %"class.storage::StorageAreaImpl"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.storage::StorageAreaImpl"* %13 to void (%"class.storage::StorageAreaImpl"*)***
  %17 = load void (%"class.storage::StorageAreaImpl"*)**, void (%"class.storage::StorageAreaImpl"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.storage::StorageAreaImpl"*)*, void (%"class.storage::StorageAreaImpl"*)** %17, i64 1
  %19 = load void (%"class.storage::StorageAreaImpl"*)*, void (%"class.storage::StorageAreaImpl"*)** %18, align 8
  tail call void %19(%"class.storage::StorageAreaImpl"* nonnull %13) #8
  br label %20

20:                                               ; preds = %1, %15
  %21 = load %"class.storage::SessionStorageMetadata::MapData"*, %"class.storage::SessionStorageMetadata::MapData"** %5, align 8
  %22 = icmp eq %"class.storage::SessionStorageMetadata::MapData"* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.storage::SessionStorageMetadata::MapData", %"class.storage::SessionStorageMetadata::MapData"* %21, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %24) #8
  %25 = getelementptr inbounds %"class.storage::SessionStorageMetadata::MapData", %"class.storage::SessionStorageMetadata::MapData"* %21, i64 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  tail call void @_ZN7storage22SessionStorageMetadata7MapDataD1Ev(%"class.storage::SessionStorageMetadata::MapData"* nonnull %21) #8
  %29 = bitcast %"class.storage::SessionStorageMetadata::MapData"* %21 to i8*
  tail call void @_ZdlPv(i8* %29) #7
  br label %30

30:                                               ; preds = %20, %23, %28
  %31 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 4, i32 0
  %32 = load %"class.storage::SessionStorageDataMap"*, %"class.storage::SessionStorageDataMap"** %31, align 8
  %33 = icmp eq %"class.storage::SessionStorageDataMap"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %32, i64 0, i32 1
  %36 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %35, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #8
  %37 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %35, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %35, i64 -2
  %42 = bitcast %"class.base::RefCounted"* %41 to %"class.storage::SessionStorageDataMap"*
  %43 = bitcast %"class.base::RefCounted"* %41 to void (%"class.storage::SessionStorageDataMap"*)***
  %44 = load void (%"class.storage::SessionStorageDataMap"*)**, void (%"class.storage::SessionStorageDataMap"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.storage::SessionStorageDataMap"*)*, void (%"class.storage::SessionStorageDataMap"*)** %44, i64 1
  %46 = load void (%"class.storage::SessionStorageDataMap"*)*, void (%"class.storage::SessionStorageDataMap"*)** %45, align 8
  tail call void %46(%"class.storage::SessionStorageDataMap"* nonnull %42) #8
  br label %47

47:                                               ; preds = %30, %34, %40
  %48 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 0
  tail call void @_ZN7storage15StorageAreaImpl8DelegateD2Ev(%"class.storage::StorageAreaImpl::Delegate"* %48) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7storage15StorageAreaImpl8DelegateD2Ev(%"class.storage::StorageAreaImpl::Delegate"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage21SessionStorageDataMapD0Ev(%"class.storage::SessionStorageDataMap"*) unnamed_addr #0 align 2 {
  tail call void @_ZN7storage21SessionStorageDataMapD2Ev(%"class.storage::SessionStorageDataMap"* %0) #8
  %2 = bitcast %"class.storage::SessionStorageDataMap"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage21SessionStorageDataMap22RemoveBindingReferenceEv(%"class.storage::SessionStorageDataMap"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, -1
  store i32 %5, i32* %3, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 7
  %9 = load %"class.storage::StorageAreaImpl"*, %"class.storage::StorageAreaImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  call void @_ZN7storage15StorageAreaImpl23ScheduleImmediateCommitEN4base12OnceCallbackIFvvEEE(%"class.storage::StorageAreaImpl"* %9, %"class.base::OnceCallback"* nonnull %2) #8
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #8
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

declare void @_ZN7storage15StorageAreaImpl23ScheduleImmediateCommitEN4base12OnceCallbackIFvvEEE(%"class.storage::StorageAreaImpl"*, %"class.base::OnceCallback"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage21SessionStorageDataMap11OnMapLoadedEN7leveldb6StatusE(%"class.storage::SessionStorageDataMap"* nocapture, %"class.leveldb::Status"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %0, i64 0, i32 4
  %4 = bitcast %class.scoped_refptr* %3 to i64*
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  %6 = load %"class.storage::SessionStorageDataMap"*, %"class.storage::SessionStorageDataMap"** %5, align 8
  store i64 0, i64* %4, align 8
  %7 = icmp eq %"class.storage::SessionStorageDataMap"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.storage::SessionStorageDataMap", %"class.storage::SessionStorageDataMap"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %9, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #8
  %11 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %9, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %9, i64 -2
  %16 = bitcast %"class.base::RefCounted"* %15 to %"class.storage::SessionStorageDataMap"*
  %17 = bitcast %"class.base::RefCounted"* %15 to void (%"class.storage::SessionStorageDataMap"*)***
  %18 = load void (%"class.storage::SessionStorageDataMap"*)**, void (%"class.storage::SessionStorageDataMap"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.storage::SessionStorageDataMap"*)*, void (%"class.storage::SessionStorageDataMap"*)** %18, i64 1
  %20 = load void (%"class.storage::SessionStorageDataMap"*)*, void (%"class.storage::SessionStorageDataMap"*)** %19, align 8
  tail call void %20(%"class.storage::SessionStorageDataMap"* nonnull %16) #8
  br label %21

21:                                               ; preds = %2, %8, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7storage21SessionStorageDataMap12OnNoBindingsEv(%"class.storage::SessionStorageDataMap"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN7storage15StorageAreaImpl8Delegate15PrepareToCommitEPNSt3__16vectorINS_18DomStorageDatabase12KeyValuePairENS2_9allocatorIS5_EEEEPNS3_INS3_IhNS6_IhEEEENS6_ISB_EEEE(%"class.storage::StorageAreaImpl::Delegate"*, %"class.std::__1::vector.117"*, %"class.std::__1::vector.118"*) unnamed_addr #3

declare i8* @_ZN7leveldb6Status9CopyStateEPKc(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7storage22SessionStorageMetadata7MapDataD1Ev(%"class.storage::SessionStorageMetadata::MapData"*) unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare void @_ZN7storage15StorageAreaImplC1EPNS_23AsyncDomStorageDatabaseENSt3__16vectorIhNS3_9allocatorIhEEEEPNS0_8DelegateERKNS0_7OptionsE(%"class.storage::StorageAreaImpl"*, %"class.storage::AsyncDomStorageDatabase"*, %"class.std::__1::vector"*, %"class.storage::StorageAreaImpl::Delegate"*, %"struct.storage::StorageAreaImpl::Options"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN7storage21SessionStorageDataMap10GetOptionsEv: argument 0"}
!4 = distinct !{!4, !"_ZN7storage21SessionStorageDataMap10GetOptionsEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN7storage21SessionStorageDataMap10GetOptionsEv: argument 0"}
!7 = distinct !{!7, !"_ZN7storage21SessionStorageDataMap10GetOptionsEv"}
