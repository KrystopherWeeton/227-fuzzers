; ModuleID = '../../v8/src/objects/feedback-vector.cc'
source_filename = "../../v8/src/objects/feedback-vector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.542" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.140", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.20", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.20", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.20", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.20", i64, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.30", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.162", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.20", i64, i8, %"struct.std::__1::atomic.20", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.166", %"class.std::__1::vector.166", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::shared_ptr.481", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.504", %"class.std::__1::unique_ptr.530", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.536", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.549", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.331", i8, [7 x i8], %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.581", %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.605", %"class.std::__1::vector.633", i8, %"class.std::__1::unique_ptr.640", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.3", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.17", [4 x i8] }>
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.646", %"class.std::__1::unique_ptr.667", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.677", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.866", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.879", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.889", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.900", %"struct.std::__1::atomic.153", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.975", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1021"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1028", i32, i8, i8, i32, i32, %"class.std::__1::vector.1034", %"class.std::__1::vector.1034", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1041", i64, %"class.std::__1::unordered_map.1042", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.542", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.161", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1098", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1136", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1170", %"class.std::__1::vector.1174", %"class.std::__1::vector.1174", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.0", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.0" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.646" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.140", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.647", %"class.std::__1::unique_ptr.661" }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.650" }
%"class.std::__1::vector.650" = type { %"class.std::__1::__vector_base.651" }
%"class.std::__1::__vector_base.651" = type { %"class.std::__1::unique_ptr.652"*, %"class.std::__1::unique_ptr.652"*, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.1249" }
%"class.std::__1::__compressed_pair.1249" = type { %"struct.std::__1::__compressed_pair_elem.1250" }
%"struct.std::__1::__compressed_pair_elem.1250" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.std::__1::unique_ptr.652"* }
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.670", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.670" = type { %"struct.std::__1::__atomic_base.671" }
%"struct.std::__1::__atomic_base.671" = type { %"struct.std::__1::__cxx_atomic_impl.672" }
%"struct.std::__1::__cxx_atomic_impl.672" = type { %"struct.std::__1::__cxx_atomic_base_impl.673" }
%"struct.std::__1::__cxx_atomic_base_impl.673" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.677" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.678", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.678" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.679", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.std::__1::unique_ptr.681"*, %"class.std::__1::unique_ptr.681"*, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::unique_ptr.681" = type opaque
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.std::__1::unique_ptr.681"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.687", %"class.std::__1::unique_ptr.693", %"struct.std::__1::atomic.153", %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::set.729", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.729" = type { %"class.std::__1::__tree.730" }
%"class.std::__1::__tree.730" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.731", %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.776", %"class.std::__1::unique_ptr.783" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.739", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.763", %"class.v8::internal::Handle.775", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.739" = type { %"class.std::__1::__vector_base.740" }
%"class.std::__1::__vector_base.740" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.758" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.741", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional.753", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.741" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.749" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.744" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.742", %union.anon.743 }
%"class.v8::internal::Handle.742" = type { %"class.v8::internal::HandleBase" }
%union.anon.743 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::base::Optional.753" = type { %"class.v8::base::internal::OptionalBase.754" }
%"class.v8::base::internal::OptionalBase.754" = type { %"struct.v8::base::internal::OptionalStorage.755" }
%"struct.v8::base::internal::OptionalStorage.755" = type { %"struct.v8::base::internal::OptionalStorageBase.756" }
%"struct.v8::base::internal::OptionalStorageBase.756" = type { i8, %union.anon.757 }
%union.anon.757 = type { i8 }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.763" = type { %"class.std::__1::__deque_base.764" }
%"class.std::__1::__deque_base.764" = type { %"struct.std::__1::__split_buffer.765", i64, %"class.std::__1::__compressed_pair.771" }
%"struct.std::__1::__split_buffer.765" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.766" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::Handle.775" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.776" = type { %"class.std::__1::__vector_base.777" }
%"class.std::__1::__vector_base.777" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.778" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.795", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.801", %"class.v8::internal::DetachableVector.802", %"class.v8::internal::DetachableVector.801", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.802" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.801" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.std::__1::unique_ptr.789", %"class.std::__1::unique_ptr.482" }
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.485", %"class.std::__1::set.493" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.485" = type { %"class.std::__1::__tree.486" }
%"class.std::__1::__tree.486" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::set.493" = type { %"class.std::__1::__tree.494" }
%"class.std::__1::__tree.494" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::InnerPointerToCodeCache" = type { %"class.v8::internal::Isolate"*, [1024 x %"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry"] }
%"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry" = type { i64, %"class.v8::internal::Code", %"class.v8::internal::SafepointEntry" }
%"class.v8::internal::SafepointEntry" = type <{ i32, [4 x i8], i8*, i8*, i32, [4 x i8] }>
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.803", %"class.std::__1::vector.809", %"class.std::__1::unique_ptr.816", %"class.std::__1::vector.823", %"class.std::__1::unique_ptr.830", i64, %"class.std::__1::vector.836", %"class.std::__1::vector.844", %"class.std::__1::vector.852", i8, i8, i32 }
%"class.std::__1::unique_ptr.803" = type { %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.811" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.816" = type { %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"class.v8::internal::GlobalHandles::NodeSpace.819"* }
%"class.v8::internal::GlobalHandles::NodeSpace.819" = type opaque
%"class.std::__1::vector.823" = type { %"class.std::__1::__vector_base.824" }
%"class.std::__1::__vector_base.824" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.825" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.830" = type { %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.836" = type { %"class.std::__1::__vector_base.837" }
%"class.std::__1::__vector_base.837" = type { %"struct.std::__1::pair.838"*, %"struct.std::__1::pair.838"*, %"class.std::__1::__compressed_pair.839" }
%"struct.std::__1::pair.838" = type opaque
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"struct.std::__1::pair.838"* }
%"class.std::__1::vector.844" = type { %"class.std::__1::__vector_base.845" }
%"class.std::__1::__vector_base.845" = type { %"struct.std::__1::pair.846"*, %"struct.std::__1::pair.846"*, %"class.std::__1::__compressed_pair.847" }
%"struct.std::__1::pair.846" = type opaque
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"struct.std::__1::pair.846"* }
%"class.std::__1::vector.852" = type { %"class.std::__1::__vector_base.853" }
%"class.std::__1::__vector_base.853" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.854" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.859", %"class.std::__1::vector.866" }
%"class.std::__1::vector.859" = type { %"class.std::__1::__vector_base.860" }
%"class.std::__1::__vector_base.860" = type { i64**, i64**, %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.873" }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.866" = type { %"class.std::__1::__vector_base.867" }
%"class.std::__1::__vector_base.867" = type { i32*, i32*, %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.879" = type { %"struct.std::__1::__atomic_base.880" }
%"struct.std::__1::__atomic_base.880" = type { %"struct.std::__1::__cxx_atomic_impl.881" }
%"struct.std::__1::__cxx_atomic_impl.881" = type { %"struct.std::__1::__cxx_atomic_base_impl.882" }
%"struct.std::__1::__cxx_atomic_base_impl.882" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.889" = type { %"struct.std::__1::__atomic_base.890" }
%"struct.std::__1::__atomic_base.890" = type { %"struct.std::__1::__cxx_atomic_impl.891" }
%"struct.std::__1::__cxx_atomic_impl.891" = type { %"struct.std::__1::__cxx_atomic_base_impl.892" }
%"struct.std::__1::__cxx_atomic_base_impl.892" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.896 }
%union.anon.896 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.900" = type { %"class.std::__1::__hash_table.901" }
%"class.std::__1::__hash_table.901" = type <{ %"class.std::__1::unique_ptr.902", %"class.std::__1::__compressed_pair.912", %"class.std::__1::__compressed_pair.917", %"class.std::__1::__compressed_pair.920", [4 x i8] }>
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904", %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"struct.std::__1::__hash_node_base.905"** }
%"struct.std::__1::__hash_node_base.905" = type { %"struct.std::__1::__hash_node_base.905"* }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.std::__1::__bucket_list_deallocator.907" }
%"class.std::__1::__bucket_list_deallocator.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"struct.std::__1::__hash_node_base.905" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__cxx_atomic_impl.155" }
%"struct.std::__1::__cxx_atomic_impl.155" = type { %"struct.std::__1::__cxx_atomic_base_impl.156" }
%"struct.std::__1::__cxx_atomic_base_impl.156" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.926", %"class.v8::internal::Handle.932", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.933", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.932" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.933" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.934", %"class.std::__1::vector.940", %"class.std::__1::unique_ptr.948", %"class.std::__1::unique_ptr.954", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.960", %"class.std::__1::vector.966", %"struct.std::__1::pair.974" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.940" = type { %"class.std::__1::__vector_base.941" }
%"class.std::__1::__vector_base.941" = type { %"class.std::__1::unique_ptr.942"*, %"class.std::__1::unique_ptr.942"*, %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::unique_ptr.942" = type opaque
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"class.std::__1::unique_ptr.942"* }
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.966" = type { %"class.std::__1::__vector_base.967" }
%"class.std::__1::__vector_base.967" = type { %"struct.std::__1::pair.968"*, %"struct.std::__1::pair.968"*, %"class.std::__1::__compressed_pair.969" }
%"struct.std::__1::pair.968" = type opaque
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"struct.std::__1::pair.968"* }
%"struct.std::__1::pair.974" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.1"*, i16, i8*)*, i8* }
%"class.v8::Local.1" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.978", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.978" = type { %"class.std::__1::__hash_table.979" }
%"class.std::__1::__hash_table.979" = type <{ %"class.std::__1::unique_ptr.980", %"class.std::__1::__compressed_pair.990", %"class.std::__1::__compressed_pair.995", %"class.std::__1::__compressed_pair.999", [4 x i8] }>
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982", %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"struct.std::__1::__hash_node_base.983"** }
%"struct.std::__1::__hash_node_base.983" = type { %"struct.std::__1::__hash_node_base.983"* }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.std::__1::__bucket_list_deallocator.985" }
%"class.std::__1::__bucket_list_deallocator.985" = type { %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"struct.std::__1::__hash_node_base.983" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1007" }
%"class.std::__1::deque.1007" = type { %"class.std::__1::__deque_base.1008" }
%"class.std::__1::__deque_base.1008" = type { %"struct.std::__1::__split_buffer.1009", i64, %"class.std::__1::__compressed_pair.1016" }
%"struct.std::__1::__split_buffer.1009" = type { %"struct.std::__1::pair.1010"**, %"struct.std::__1::pair.1010"**, %"struct.std::__1::pair.1010"**, %"class.std::__1::__compressed_pair.1011" }
%"struct.std::__1::pair.1010" = type opaque
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"struct.std::__1::pair.1010"** }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1021" = type { %"class.std::__1::__vector_base.1022" }
%"class.std::__1::__vector_base.1022" = type { %"class.v8::internal::Handle.742"*, %"class.v8::internal::Handle.742"*, %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.v8::internal::Handle.742"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.884", i32, %"class.v8::Local.1" }
%"class.v8::Local.884" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1028" = type { %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.859", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1034" = type { %"class.std::__1::__vector_base.1035" }
%"class.std::__1::__vector_base.1035" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1036" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1037" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1041" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1042" = type { %"class.std::__1::__hash_table.1043" }
%"class.std::__1::__hash_table.1043" = type <{ %"class.std::__1::unique_ptr.1044", %"class.std::__1::__compressed_pair.1054", %"class.std::__1::__compressed_pair.1059", %"class.std::__1::__compressed_pair.1062", [4 x i8] }>
%"class.std::__1::unique_ptr.1044" = type { %"class.std::__1::__compressed_pair.1045" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.1046", %"struct.std::__1::__compressed_pair_elem.1048" }
%"struct.std::__1::__compressed_pair_elem.1046" = type { %"struct.std::__1::__hash_node_base.1047"** }
%"struct.std::__1::__hash_node_base.1047" = type { %"struct.std::__1::__hash_node_base.1047"* }
%"struct.std::__1::__compressed_pair_elem.1048" = type { %"class.std::__1::__bucket_list_deallocator.1049" }
%"class.std::__1::__bucket_list_deallocator.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.1055" }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"struct.std::__1::__hash_node_base.1047" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.161" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1066", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1095", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1096", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1066" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1091, %union.anon.1093, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1091 = type { i64 }
%union.anon.1093 = type { i64 }
%"class.std::__1::weak_ptr.1095" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.20", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.161" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1096" = type { %"class.v8::PersistentBase.1097" }
%"class.v8::PersistentBase.1097" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1067", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1067" = type { %"class.std::__1::__hash_table.1068" }
%"class.std::__1::__hash_table.1068" = type <{ %"class.std::__1::unique_ptr.1069", %"class.std::__1::__compressed_pair.1079", %"class.std::__1::__compressed_pair.1084", %"class.std::__1::__compressed_pair.1087", [4 x i8] }>
%"class.std::__1::unique_ptr.1069" = type { %"class.std::__1::__compressed_pair.1070" }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071", %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"struct.std::__1::__hash_node_base.1072"** }
%"struct.std::__1::__hash_node_base.1072" = type { %"struct.std::__1::__hash_node_base.1072"* }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"class.std::__1::__bucket_list_deallocator.1074" }
%"class.std::__1::__bucket_list_deallocator.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"struct.std::__1::__hash_node_base.1072" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1127", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1103", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1107", %"class.std::__1::unique_ptr.1113", %"class.std::__1::unique_ptr.475", %"class.std::__1::vector.1119", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1103" = type { %"struct.std::__1::__atomic_base.1104" }
%"struct.std::__1::__atomic_base.1104" = type { %"struct.std::__1::__cxx_atomic_impl.1105" }
%"struct.std::__1::__cxx_atomic_impl.1105" = type { %"struct.std::__1::__cxx_atomic_base_impl.1106" }
%"struct.std::__1::__cxx_atomic_base_impl.1106" = type { i32 }
%"class.std::__1::unique_ptr.1107" = type { %"class.std::__1::__compressed_pair.1108" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.859" }
%"class.std::__1::unique_ptr.1113" = type { %"class.std::__1::__compressed_pair.1114" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.1115" }
%"struct.std::__1::__compressed_pair_elem.1115" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1119" = type { %"class.std::__1::__vector_base.1120" }
%"class.std::__1::__vector_base.1120" = type { %"struct.std::__1::pair.1121"*, %"struct.std::__1::pair.1121"*, %"class.std::__1::__compressed_pair.1122" }
%"struct.std::__1::pair.1121" = type opaque
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"struct.std::__1::pair.1121"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.20"*, %"class.std::__1::unique_ptr.98" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.39", %"class.std::__1::vector.39", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.41" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.46" }
%"class.std::__1::__hash_table.46" = type <{ %"class.std::__1::unique_ptr.47", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.64", [4 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49", %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base.50"** }
%"struct.std::__1::__hash_node_base.50" = type { %"struct.std::__1::__hash_node_base.50"* }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__bucket_list_deallocator.52" }
%"class.std::__1::__bucket_list_deallocator.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base.50" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.25", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.87", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.20"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.25", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.69", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.75" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.91", i8, [7 x i8] }>
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { i64*, i64*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.20", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1127" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1136" = type { %"class.std::__1::__compressed_pair.1137" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.885", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.885" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1144" }
%"class.std::__1::unordered_map.1144" = type { %"class.std::__1::__hash_table.1145" }
%"class.std::__1::__hash_table.1145" = type <{ %"class.std::__1::unique_ptr.1146", %"class.std::__1::__compressed_pair.1156", %"class.std::__1::__compressed_pair.1161", %"class.std::__1::__compressed_pair.1164", [4 x i8] }>
%"class.std::__1::unique_ptr.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148", %"struct.std::__1::__compressed_pair_elem.1150" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"struct.std::__1::__hash_node_base.1149"** }
%"struct.std::__1::__hash_node_base.1149" = type { %"struct.std::__1::__hash_node_base.1149"* }
%"struct.std::__1::__compressed_pair_elem.1150" = type { %"class.std::__1::__bucket_list_deallocator.1151" }
%"class.std::__1::__bucket_list_deallocator.1151" = type { %"class.std::__1::__compressed_pair.1152" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1157" = type { %"struct.std::__1::__hash_node_base.1149" }
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.1170" = type { %"struct.std::__1::__atomic_base.1171" }
%"struct.std::__1::__atomic_base.1171" = type { %"struct.std::__1::__cxx_atomic_impl.1172" }
%"struct.std::__1::__cxx_atomic_impl.1172" = type { %"struct.std::__1::__cxx_atomic_base_impl.1173" }
%"struct.std::__1::__cxx_atomic_base_impl.1173" = type { %"class.std::__1::vector.1174"* }
%"class.std::__1::vector.1174" = type { %"class.std::__1::__vector_base.1175" }
%"class.std::__1::__vector_base.1175" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1176" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.1177" }
%"struct.std::__1::__compressed_pair_elem.1177" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.104" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.std::__1::pair.106"*, %"struct.std::__1::pair.106"*, %"class.std::__1::__compressed_pair.107" }
%"struct.std::__1::pair.106" = type { i32, i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::pair.106"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.20", i32, %"struct.std::__1::atomic.20", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.112" }
%"class.std::__1::unordered_map.112" = type { %"class.std::__1::__hash_table.113" }
%"class.std::__1::__hash_table.113" = type <{ %"class.std::__1::unique_ptr.114", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.134", [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base.117"** }
%"struct.std::__1::__hash_node_base.117" = type { %"struct.std::__1::__hash_node_base.117"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator.119" }
%"class.std::__1::__bucket_list_deallocator.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.117" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.153", %"struct.std::__1::atomic.157", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__cxx_atomic_impl.159" }
%"struct.std::__1::__cxx_atomic_impl.159" = type { %"struct.std::__1::__cxx_atomic_base_impl.160" }
%"struct.std::__1::__cxx_atomic_base_impl.160" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__cxx_atomic_impl.164" }
%"struct.std::__1::__cxx_atomic_impl.164" = type { %"struct.std::__1::__cxx_atomic_base_impl.165" }
%"struct.std::__1::__cxx_atomic_base_impl.165" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.168" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.288", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.182", %"class.std::__1::vector.183", %"class.std::__1::vector.190", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.182" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.185" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.std::__1::unique_ptr.192"*, %"class.std::__1::unique_ptr.192"*, %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::unique_ptr.192" = type opaque
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::unique_ptr.192"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.202" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.214", i8, i64 }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.230" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.182"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.230" = type { %"class.std::__1::__hash_table.231" }
%"class.std::__1::__hash_table.231" = type <{ %"class.std::__1::unique_ptr.232", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234", %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::__hash_node_base.235"** }
%"struct.std::__1::__hash_node_base.235" = type { %"struct.std::__1::__hash_node_base.235"* }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.std::__1::__bucket_list_deallocator.237" }
%"class.std::__1::__bucket_list_deallocator.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base.235" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.257" }
%"class.std::__1::unordered_map.257" = type { %"class.std::__1::__hash_table.258" }
%"class.std::__1::__hash_table.258" = type <{ %"class.std::__1::unique_ptr.259", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.277", [4 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::__hash_node_base.262"** }
%"struct.std::__1::__hash_node_base.262" = type { %"struct.std::__1::__hash_node_base.262"* }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.std::__1::__bucket_list_deallocator.264" }
%"class.std::__1::__bucket_list_deallocator.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::__hash_node_base.262" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.std::__1::pair.290"*, %"struct.std::__1::pair.290"*, %"class.std::__1::__compressed_pair.291" }
%"struct.std::__1::pair.290" = type opaque
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::pair.290"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.296", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.281"], [3 x %"class.std::__1::vector.281"], i8, %"struct.std::__1::atomic.153", [6 x i8], %"class.std::__1::vector.281", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.306"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.306" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.331", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.324"], %"class.std::__1::unique_ptr.296" }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.363", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.367", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.372" }
%"struct.std::__1::atomic.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__cxx_atomic_impl.365" }
%"struct.std::__1::__cxx_atomic_impl.365" = type { %"struct.std::__1::__cxx_atomic_base_impl.366" }
%"struct.std::__1::__cxx_atomic_base_impl.366" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.367" = type { %"struct.std::__1::__atomic_base.368" }
%"struct.std::__1::__atomic_base.368" = type { %"struct.std::__1::__cxx_atomic_impl.369" }
%"struct.std::__1::__cxx_atomic_impl.369" = type { %"struct.std::__1::__cxx_atomic_base_impl.370" }
%"struct.std::__1::__cxx_atomic_base_impl.370" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.372" = type { %"class.std::__1::__hash_table.373" }
%"class.std::__1::__hash_table.373" = type <{ %"class.std::__1::unique_ptr.374", %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.392", [4 x i8] }>
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376", %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base.377"** }
%"struct.std::__1::__hash_node_base.377" = type { %"struct.std::__1::__hash_node_base.377"* }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::__bucket_list_deallocator.379" }
%"class.std::__1::__bucket_list_deallocator.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.377" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.296", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.153", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.402", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.422", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.438" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.481" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.500", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.482", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.500" = type { %"struct.std::__1::__atomic_base.501" }
%"struct.std::__1::__atomic_base.501" = type { %"struct.std::__1::__cxx_atomic_impl.502" }
%"struct.std::__1::__cxx_atomic_impl.502" = type { %"struct.std::__1::__cxx_atomic_base_impl.503" }
%"struct.std::__1::__cxx_atomic_base_impl.503" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.504" = type { %"class.std::__1::__hash_table.505" }
%"class.std::__1::__hash_table.505" = type <{ %"class.std::__1::unique_ptr.506", %"class.std::__1::__compressed_pair.516", %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.524", [4 x i8] }>
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508", %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.std::__1::__hash_node_base.509"** }
%"struct.std::__1::__hash_node_base.509" = type { %"struct.std::__1::__hash_node_base.509"* }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.std::__1::__bucket_list_deallocator.511" }
%"class.std::__1::__bucket_list_deallocator.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"struct.std::__1::__hash_node_base.509" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.542", %"class.std::__1::vector.542" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.331" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.352", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.336" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.581" = type { %"class.std::__1::__hash_table.582" }
%"class.std::__1::__hash_table.582" = type <{ %"class.std::__1::unique_ptr.583", %"class.std::__1::__compressed_pair.593", %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.601", [4 x i8] }>
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585", %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.std::__1::__hash_node_base.586"** }
%"struct.std::__1::__hash_node_base.586" = type { %"struct.std::__1::__hash_node_base.586"* }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.std::__1::__bucket_list_deallocator.588" }
%"class.std::__1::__bucket_list_deallocator.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"struct.std::__1::__hash_node_base.586" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.555" = type { %"class.std::__1::__hash_table.556" }
%"class.std::__1::__hash_table.556" = type <{ %"class.std::__1::unique_ptr.557", %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.572", %"class.std::__1::__compressed_pair.575", [4 x i8] }>
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559", %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"struct.std::__1::__hash_node_base.560"** }
%"struct.std::__1::__hash_node_base.560" = type { %"struct.std::__1::__hash_node_base.560"* }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.std::__1::__bucket_list_deallocator.562" }
%"class.std::__1::__bucket_list_deallocator.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"struct.std::__1::__hash_node_base.560" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.605" = type { %"class.std::__1::__hash_table.606" }
%"class.std::__1::__hash_table.606" = type <{ %"class.std::__1::unique_ptr.607", %"class.std::__1::__compressed_pair.617", %"class.std::__1::__compressed_pair.622", %"class.std::__1::__compressed_pair.627", [4 x i8] }>
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609", %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.610"** }
%"struct.std::__1::__hash_node_base.610" = type { %"struct.std::__1::__hash_node_base.610"* }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.std::__1::__bucket_list_deallocator.612" }
%"class.std::__1::__bucket_list_deallocator.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"struct.std::__1::__hash_node_base.610" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.20", i64, %"struct.std::__1::atomic.20" }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.142" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.v8::internal::Object"* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8::internal::FeedbackNexus" = type { %"class.v8::internal::Handle.775", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", i8, %"class.v8::base::Optional.1194", %"class.v8::internal::NexusConfig" }
%"class.v8::base::Optional.1194" = type { %"class.v8::base::internal::OptionalBase.1195" }
%"class.v8::base::internal::OptionalBase.1195" = type { %"struct.v8::base::internal::OptionalStorage.1196" }
%"struct.v8::base::internal::OptionalStorage.1196" = type { %"struct.v8::base::internal::OptionalStorageBase.1197" }
%"struct.v8::base::internal::OptionalStorageBase.1197" = type { i8, %union.anon.1198 }
%union.anon.1198 = type { %"struct.std::__1::pair.1199" }
%"struct.std::__1::pair.1199" = type { %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle" }
%"class.v8::internal::MaybeObjectHandle" = type { i32, %"class.v8::internal::MaybeHandle.1200" }
%"class.v8::internal::MaybeHandle.1200" = type { i64* }
%"class.v8::internal::NexusConfig" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::FeedbackIterator" = type <{ %"class.v8::internal::Handle.1212", %"class.v8::internal::Map", %"class.v8::internal::MaybeObject", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::Handle.1212" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::MaybeObject" = type { %"class.v8::internal::TaggedImpl.1190" }
%"class.v8::internal::TaggedImpl.1190" = type { i64 }
%"class.v8::internal::FeedbackVectorSpec" = type <{ %"class.v8::internal::ZoneVector", i32, [4 x i8] }>
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.1181" }
%"class.std::__1::vector.1181" = type { %"class.std::__1::__vector_base.1182" }
%"class.std::__1::__vector_base.1182" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1183" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.1184", %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1184" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::FeedbackMetadata" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FactoryBase.1101" = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::IsCompiledScope" = type <{ %"class.v8::internal::MaybeHandle", i8, [7 x i8] }>
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.v8::internal::Script" = type { %"class.v8::internal::TorqueGeneratedScript" }
%"class.v8::internal::TorqueGeneratedScript" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }
%"class.std::__1::vector.1220" = type { %"class.std::__1::__vector_base.1221" }
%"class.std::__1::__vector_base.1221" = type { %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"*, %"class.std::__1::__compressed_pair.1223" }
%"struct.std::__1::pair.1222" = type { %"class.v8::internal::Handle.1218", %"class.v8::internal::MaybeObjectHandle" }
%"class.v8::internal::Handle.1218" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"struct.std::__1::pair.1222"* }
%"class.std::__1::vector.1228" = type { %"class.std::__1::__vector_base.1229" }
%"class.std::__1::__vector_base.1229" = type { %"class.v8::internal::Handle.1218"*, %"class.v8::internal::Handle.1218"*, %"class.std::__1::__compressed_pair.1230" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.1231" }
%"struct.std::__1::__compressed_pair_elem.1231" = type { %"class.v8::internal::Handle.1218"* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { i64* (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1218"*)* }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.std::__1::vector.1242" = type { %"class.std::__1::__vector_base.1243" }
%"class.std::__1::__vector_base.1243" = type { %"class.v8::internal::Handle.1240"*, %"class.v8::internal::Handle.1240"*, %"class.std::__1::__compressed_pair.1244" }
%"class.v8::internal::Handle.1240" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"class.v8::internal::Handle.1240"* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2v88internal16FeedbackMetadata3NewINS0_7IsolateEEENS0_6HandleIS1_EEPT_PKNS0_18FeedbackVectorSpecE = comdat any

$_ZN2v88internal16FeedbackMetadata3NewINS0_12LocalIsolateEEENS0_6HandleIS1_EEPT_PKNS0_18FeedbackVectorSpecE = comdat any

$_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv = comdat any

$_ZN2v88internal15IsCompiledScopeC2ENS0_18SharedFunctionInfoEPNS0_7IsolateE = comdat any

$_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFN2v88internal11MaybeHandleINS3_3MapEEENS3_6HandleIS5_EEEE12__call_emptyEPKNS0_16__policy_storageEOS8_ = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [76 x i8] c"FeedbackVectorSpec::kTypeProfileSlotIndex == FeedbackVector::GetIndex(slot)\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"Invalid\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"Call\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"LoadProperty\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"LoadGlobalInsideTypeof\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"LoadGlobalNotInsideTypeof\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"LoadKeyed\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"HasKeyed\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"StoreNamedSloppy\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"StoreNamedStrict\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"StoreOwnNamed\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"StoreGlobalSloppy\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"StoreGlobalStrict\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"StoreKeyedSloppy\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"StoreKeyedStrict\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"StoreInArrayLiteral\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"BinaryOp\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"CompareOp\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"StoreDataPropertyInLiteral\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"Literal\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"TypeProfile\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"ForIn\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"InstanceOf\00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"CloneObject\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal14FLAG_turbopropE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal21FLAG_interrupt_budgetE = external local_unnamed_addr global i32, align 4
@_ZN2v88internal47FLAG_interrupt_budget_scale_factor_for_top_tierE = external local_unnamed_addr global i32, align 4
@_ZN2v88internal24FLAG_log_function_eventsE = external local_unnamed_addr global i8, align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"can_write()\00", align 1
@.str.27 = private unnamed_addr constant [51 x i8] c"vector.length() > start_slot.WithOffset(1).ToInt()\00", align 1
@.str.28 = private unnamed_addr constant [62 x i8] c"heap_object.IsJSFunction() || heap_object.IsJSBoundFunction()\00", align 1
@.str.29 = private unnamed_addr constant [36 x i8] c"feedback == UninitializedSentinel()\00", align 1
@_ZN2v88internal36FLAG_max_valid_polymorphic_map_countE = external local_unnamed_addr global i32, align 4
@.str.30 = private unnamed_addr constant [19 x i8] c"call_count.IsSmi()\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"!done_\00", align 1
@.str.32 = private unnamed_addr constant [23 x i8] c"state_ == kPolymorphic\00", align 1
@.str.33 = private unnamed_addr constant [17 x i8] c"index_ == length\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZN2v88internal25FLAG_turboprop_as_toptierE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal11FLAG_use_icE = external local_unnamed_addr global i8, align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@switch.table._ZN2v88internal16FeedbackMetadata11Kind2StringENS0_16FeedbackSlotKindE = private unnamed_addr constant [23 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i64 0, i64 0)], align 8
@switch.table._ZNK2v88internal13FeedbackNexus8ic_stateEv = private unnamed_addr constant [4 x i32] [i32 1, i32 2, i32 7, i32 2], align 4
@switch.table._ZNK2v88internal13FeedbackNexus23GetKeyedAccessStoreModeEv = private unnamed_addr constant [12 x i32] [i32 0, i32 1, i32 2, i32 3, i32 0, i32 1, i32 2, i32 3, i32 0, i32 1, i32 2, i32 3], align 4

@_ZN2v88internal13FeedbackNexusC1ENS0_6HandleINS0_14FeedbackVectorEEENS0_12FeedbackSlotE = hidden unnamed_addr alias void (%"class.v8::internal::FeedbackNexus"*, i64*, i32), void (%"class.v8::internal::FeedbackNexus"*, i64*, i32)* @_ZN2v88internal13FeedbackNexusC2ENS0_6HandleINS0_14FeedbackVectorEEENS0_12FeedbackSlotE
@_ZN2v88internal13FeedbackNexusC1ENS0_14FeedbackVectorENS0_12FeedbackSlotE = hidden unnamed_addr alias void (%"class.v8::internal::FeedbackNexus"*, i64, i32), void (%"class.v8::internal::FeedbackNexus"*, i64, i32)* @_ZN2v88internal13FeedbackNexusC2ENS0_14FeedbackVectorENS0_12FeedbackSlotE
@_ZN2v88internal13FeedbackNexusC1ENS0_6HandleINS0_14FeedbackVectorEEENS0_12FeedbackSlotERKNS0_11NexusConfigE = hidden unnamed_addr alias void (%"class.v8::internal::FeedbackNexus"*, i64*, i32, %"class.v8::internal::NexusConfig"*), void (%"class.v8::internal::FeedbackNexus"*, i64*, i32, %"class.v8::internal::NexusConfig"*)* @_ZN2v88internal13FeedbackNexusC2ENS0_6HandleINS0_14FeedbackVectorEEENS0_12FeedbackSlotERKNS0_11NexusConfigE
@_ZN2v88internal16FeedbackIteratorC1EPKNS0_13FeedbackNexusE = hidden unnamed_addr alias void (%"class.v8::internal::FeedbackIterator"*, %"class.v8::internal::FeedbackNexus"*), void (%"class.v8::internal::FeedbackIterator"*, %"class.v8::internal::FeedbackNexus"*)* @_ZN2v88internal16FeedbackIteratorC2EPKNS0_13FeedbackNexusE

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal16FeedbackMetadata3NewINS0_7IsolateEEENS0_6HandleIS1_EEPT_PKNS0_18FeedbackVectorSpecE(%"class.v8::internal::Isolate"*, %"class.v8::internal::FeedbackVectorSpec"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.v8::internal::FeedbackVectorSpec"* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  br label %14

14:                                               ; preds = %2, %4
  %15 = phi i32 [ %11, %4 ], [ 0, %2 ]
  %16 = phi i32 [ %13, %4 ], [ 0, %2 ]
  %17 = or i32 %16, %15
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 114
  br label %61

21:                                               ; preds = %14
  %22 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %23 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewFeedbackMetadataEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %22, i32 %15, i32 %16, i8 zeroext 1) #9
  %24 = icmp sgt i32 %15, 0
  br i1 %24, label %25, label %61

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  %28 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %1 to i64*
  %29 = zext i32 %15 to i64
  br label %30

30:                                               ; preds = %38, %25
  %31 = phi i64 [ 0, %25 ], [ %59, %38 ]
  %32 = load i64, i64* %27, align 8
  %33 = load i64, i64* %28, align 8
  %34 = sub i64 %32, %33
  %35 = icmp ugt i64 %34, %31
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %37) #16
  unreachable

38:                                               ; preds = %30
  %39 = inttoptr i64 %33 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 %31
  %41 = load i8, i8* %40, align 1
  %42 = load i64, i64* %23, align 8
  %43 = trunc i64 %31 to i32
  %44 = udiv i32 %43, 6
  %45 = shl nuw nsw i32 %44, 2
  %46 = add nuw i32 %45, 11
  %47 = zext i32 %46 to i64
  %48 = add i64 %42, %47
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = urem i32 %43, 6
  %52 = mul nuw nsw i32 %51, 5
  %53 = zext i8 %41 to i32
  %54 = shl i32 %53, %52
  %55 = shl i32 31, %52
  %56 = xor i32 %55, -1
  %57 = and i32 %50, %56
  %58 = or i32 %57, %54
  store i32 %58, i32* %49, align 4
  %59 = add nuw nsw i64 %31, 1
  %60 = icmp eq i64 %59, %29
  br i1 %60, label %61, label %30

61:                                               ; preds = %38, %21, %19
  %62 = phi i64* [ %20, %19 ], [ %23, %21 ], [ %23, %38 ]
  ret i64* %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewFeedbackMetadataEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal16FeedbackMetadata7SetKindENS0_12FeedbackSlotENS0_16FeedbackSlotKindE(%"class.v8::internal::FeedbackMetadata"* nocapture readonly, i32, i8 zeroext) local_unnamed_addr #3 align 2 {
  %4 = sdiv i32 %1, 6
  %5 = shl nsw i32 %4, 2
  %6 = getelementptr inbounds %"class.v8::internal::FeedbackMetadata", %"class.v8::internal::FeedbackMetadata"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %5 to i64
  %9 = add nsw i64 %8, 11
  %10 = add i64 %9, %7
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = srem i32 %1, 6
  %14 = mul nsw i32 %13, 5
  %15 = zext i8 %2 to i32
  %16 = shl i32 %15, %14
  %17 = shl i32 31, %14
  %18 = xor i32 %17, -1
  %19 = and i32 %12, %18
  %20 = or i32 %19, %16
  store i32 %20, i32* %11, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal16FeedbackMetadata3NewINS0_12LocalIsolateEEENS0_6HandleIS1_EEPT_PKNS0_18FeedbackVectorSpecE(%"class.v8::internal::LocalIsolate"*, %"class.v8::internal::FeedbackVectorSpec"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.v8::internal::FeedbackVectorSpec"* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  br label %14

14:                                               ; preds = %2, %4
  %15 = phi i32 [ %11, %4 ], [ 0, %2 ]
  %16 = phi i32 [ %13, %4 ], [ 0, %2 ]
  %17 = or i32 %16, %15
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 114
  br label %63

23:                                               ; preds = %14
  %24 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1101"*
  %25 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE19NewFeedbackMetadataEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1101"* %24, i32 %15, i32 %16, i8 zeroext 1) #9
  %26 = icmp sgt i32 %15, 0
  br i1 %26, label %27, label %63

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %1 to i64*
  %31 = zext i32 %15 to i64
  br label %32

32:                                               ; preds = %40, %27
  %33 = phi i64 [ 0, %27 ], [ %61, %40 ]
  %34 = load i64, i64* %29, align 8
  %35 = load i64, i64* %30, align 8
  %36 = sub i64 %34, %35
  %37 = icmp ugt i64 %36, %33
  br i1 %37, label %40, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %39) #16
  unreachable

40:                                               ; preds = %32
  %41 = inttoptr i64 %35 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 %33
  %43 = load i8, i8* %42, align 1
  %44 = load i64, i64* %25, align 8
  %45 = trunc i64 %33 to i32
  %46 = udiv i32 %45, 6
  %47 = shl nuw nsw i32 %46, 2
  %48 = add nuw i32 %47, 11
  %49 = zext i32 %48 to i64
  %50 = add i64 %44, %49
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = urem i32 %45, 6
  %54 = mul nuw nsw i32 %53, 5
  %55 = zext i8 %43 to i32
  %56 = shl i32 %55, %54
  %57 = shl i32 31, %54
  %58 = xor i32 %57, -1
  %59 = and i32 %52, %58
  %60 = or i32 %59, %56
  store i32 %60, i32* %51, align 4
  %61 = add nuw nsw i64 %33, 1
  %62 = icmp eq i64 %61, %31
  br i1 %62, label %63, label %32

63:                                               ; preds = %40, %23, %19
  %64 = phi i64* [ %22, %19 ], [ %25, %23 ], [ %25, %40 ]
  ret i64* %64
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE19NewFeedbackMetadataEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1101"*, i32, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal18FeedbackVectorSpec7AddSlotENS0_16FeedbackSlotKindE(%"class.v8::internal::FeedbackVectorSpec"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = trunc i64 %8 to i32
  %10 = inttoptr i64 %5 to i8*
  switch i8 %1, label %13 [
    i8 23, label %12
    i8 0, label %12
    i8 17, label %11
    i8 14, label %11
    i8 13, label %11
    i8 3, label %11
    i8 4, label %11
    i8 22, label %11
    i8 5, label %11
    i8 7, label %11
    i8 6, label %11
    i8 8, label %11
    i8 9, label %11
    i8 2, label %11
    i8 11, label %11
    i8 12, label %11
    i8 1, label %11
    i8 10, label %11
  ]

11:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  br label %13

12:                                               ; preds = %2, %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #16
  unreachable

13:                                               ; preds = %2, %11
  %14 = phi i32 [ 2, %11 ], [ 1, %2 ]
  %15 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, %10
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  store i8 %1, i8* %10, align 1
  %19 = getelementptr inbounds i8, i8* %10, i64 1
  %20 = ptrtoint i8* %19 to i64
  store i64 %20, i64* %4, align 8
  br label %181

21:                                               ; preds = %13
  %22 = ptrtoint i8* %16 to i64
  %23 = sub i64 %22, %7
  %24 = add i64 %23, 1
  %25 = icmp ugt i64 %24, 2147483647
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #16
  unreachable

28:                                               ; preds = %21
  %29 = bitcast i8** %15 to i64*
  %30 = icmp ult i64 %23, 1073741823
  br i1 %30, label %31, label %36

31:                                               ; preds = %28
  %32 = shl i64 %23, 1
  %33 = icmp ult i64 %32, %24
  %34 = select i1 %33, i64 %24, i64 %32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %55, label %36

36:                                               ; preds = %31, %28
  %37 = phi i64 [ %34, %31 ], [ 2147483647, %28 ]
  %38 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %39 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %38, align 8
  %40 = add nuw nsw i64 %37, 7
  %41 = and i64 %40, -8
  %42 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %39, i64 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %39, i64 0, i32 3
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %45, %43
  %47 = icmp ugt i64 %41, %46
  br i1 %47, label %48, label %50, !prof !2

48:                                               ; preds = %36
  %49 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %39, i64 %41) #9
  br label %52

50:                                               ; preds = %36
  %51 = add i64 %43, %41
  store i64 %51, i64* %42, align 8
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi i64 [ %49, %48 ], [ %43, %50 ]
  %54 = inttoptr i64 %53 to i8*
  br label %55

55:                                               ; preds = %52, %31
  %56 = phi i64 [ %37, %52 ], [ 0, %31 ]
  %57 = phi i8* [ %54, %52 ], [ null, %31 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 %23
  %59 = getelementptr inbounds i8, i8* %57, i64 %56
  %60 = ptrtoint i8* %59 to i64
  store i8 %1, i8* %58, align 1
  %61 = getelementptr inbounds i8, i8* %58, i64 1
  %62 = ptrtoint i8* %61 to i64
  %63 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = load i8*, i8** %3, align 8
  %66 = ptrtoint i8* %65 to i64
  %67 = icmp eq i8* %65, %64
  br i1 %67, label %178, label %68

68:                                               ; preds = %55
  %69 = ptrtoint i8* %64 to i64
  %70 = ptrtoint i8* %65 to i64
  %71 = sub i64 %70, %69
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %168, label %73

73:                                               ; preds = %68
  %74 = sub i64 %22, %66
  %75 = sub i64 %74, %7
  %76 = getelementptr i8, i8* %64, i64 %75
  %77 = ptrtoint i8* %76 to i64
  %78 = getelementptr i8, i8* %57, i64 %77
  %79 = icmp ult i8* %78, %65
  %80 = icmp ult i8* %64, %58
  %81 = and i1 %79, %80
  br i1 %81, label %168, label %82

82:                                               ; preds = %73
  %83 = and i64 %71, -16
  %84 = sub i64 0, %83
  %85 = getelementptr i8, i8* %58, i64 %84
  %86 = sub i64 0, %83
  %87 = getelementptr i8, i8* %65, i64 %86
  %88 = add i64 %83, -16
  %89 = lshr exact i64 %88, 4
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 48
  br i1 %92, label %145, label %93

93:                                               ; preds = %82
  %94 = sub nsw i64 %90, %91
  %95 = getelementptr i8, i8* %58, i64 -1
  %96 = getelementptr inbounds i8, i8* %95, i64 -8
  %97 = getelementptr inbounds i8, i8* %65, i64 -16
  %98 = getelementptr inbounds i8, i8* %96, i64 -7
  %99 = getelementptr i8, i8* %58, i64 -1
  %100 = getelementptr inbounds i8, i8* %99, i64 -8
  %101 = getelementptr inbounds i8, i8* %65, i64 -16
  %102 = getelementptr inbounds i8, i8* %100, i64 -7
  %103 = getelementptr i8, i8* %58, i64 -1
  %104 = getelementptr inbounds i8, i8* %103, i64 -8
  %105 = getelementptr inbounds i8, i8* %65, i64 -16
  %106 = getelementptr inbounds i8, i8* %104, i64 -7
  %107 = getelementptr i8, i8* %58, i64 -1
  %108 = getelementptr inbounds i8, i8* %107, i64 -8
  %109 = getelementptr inbounds i8, i8* %65, i64 -16
  %110 = getelementptr inbounds i8, i8* %108, i64 -7
  br label %111

111:                                              ; preds = %111, %93
  %112 = phi i64 [ 0, %93 ], [ %142, %111 ]
  %113 = phi i64 [ %94, %93 ], [ %143, %111 ]
  %114 = sub i64 0, %112
  %115 = sub i64 0, %112
  %116 = getelementptr inbounds i8, i8* %97, i64 %115
  %117 = bitcast i8* %116 to <2 x i64>*
  %118 = load <2 x i64>, <2 x i64>* %117, align 1, !alias.scope !3
  %119 = getelementptr inbounds i8, i8* %98, i64 %114
  %120 = bitcast i8* %119 to <2 x i64>*
  store <2 x i64> %118, <2 x i64>* %120, align 1, !alias.scope !6, !noalias !3
  %121 = sub nuw nsw i64 -16, %112
  %122 = sub nuw nsw i64 -16, %112
  %123 = getelementptr inbounds i8, i8* %101, i64 %122
  %124 = bitcast i8* %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 1, !alias.scope !3
  %126 = getelementptr inbounds i8, i8* %102, i64 %121
  %127 = bitcast i8* %126 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %127, align 1, !alias.scope !6, !noalias !3
  %128 = sub nuw nsw i64 -32, %112
  %129 = sub nuw nsw i64 -32, %112
  %130 = getelementptr inbounds i8, i8* %105, i64 %129
  %131 = bitcast i8* %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 1, !alias.scope !3
  %133 = getelementptr inbounds i8, i8* %106, i64 %128
  %134 = bitcast i8* %133 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %134, align 1, !alias.scope !6, !noalias !3
  %135 = sub nuw nsw i64 -48, %112
  %136 = sub nuw nsw i64 -48, %112
  %137 = getelementptr inbounds i8, i8* %109, i64 %136
  %138 = bitcast i8* %137 to <2 x i64>*
  %139 = load <2 x i64>, <2 x i64>* %138, align 1, !alias.scope !3
  %140 = getelementptr inbounds i8, i8* %110, i64 %135
  %141 = bitcast i8* %140 to <2 x i64>*
  store <2 x i64> %139, <2 x i64>* %141, align 1, !alias.scope !6, !noalias !3
  %142 = add i64 %112, 64
  %143 = add i64 %113, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %111, !llvm.loop !8

145:                                              ; preds = %111, %82
  %146 = phi i64 [ 0, %82 ], [ %142, %111 ]
  %147 = icmp eq i64 %91, 0
  br i1 %147, label %166, label %148

148:                                              ; preds = %145
  %149 = getelementptr i8, i8* %58, i64 -1
  %150 = getelementptr inbounds i8, i8* %149, i64 -8
  %151 = getelementptr inbounds i8, i8* %65, i64 -16
  %152 = getelementptr inbounds i8, i8* %150, i64 -7
  br label %153

153:                                              ; preds = %153, %148
  %154 = phi i64 [ %146, %148 ], [ %163, %153 ]
  %155 = phi i64 [ %91, %148 ], [ %164, %153 ]
  %156 = sub i64 0, %154
  %157 = sub i64 0, %154
  %158 = getelementptr inbounds i8, i8* %151, i64 %157
  %159 = bitcast i8* %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 1, !alias.scope !3
  %161 = getelementptr inbounds i8, i8* %152, i64 %156
  %162 = bitcast i8* %161 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %162, align 1, !alias.scope !6, !noalias !3
  %163 = add i64 %154, 16
  %164 = add i64 %155, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %153, !llvm.loop !10

166:                                              ; preds = %153, %145
  %167 = icmp eq i64 %71, %83
  br i1 %167, label %178, label %168

168:                                              ; preds = %166, %73, %68
  %169 = phi i8* [ %58, %73 ], [ %58, %68 ], [ %85, %166 ]
  %170 = phi i8* [ %65, %73 ], [ %65, %68 ], [ %87, %166 ]
  br label %171

171:                                              ; preds = %168, %171
  %172 = phi i8* [ %174, %171 ], [ %169, %168 ]
  %173 = phi i8* [ %175, %171 ], [ %170, %168 ]
  %174 = getelementptr inbounds i8, i8* %172, i64 -1
  %175 = getelementptr inbounds i8, i8* %173, i64 -1
  %176 = load i8, i8* %175, align 1
  store i8 %176, i8* %174, align 1
  %177 = icmp eq i8* %175, %64
  br i1 %177, label %178, label %171, !llvm.loop !12

178:                                              ; preds = %171, %166, %55
  %179 = phi i8* [ %58, %55 ], [ %85, %166 ], [ %174, %171 ]
  %180 = ptrtoint i8* %179 to i64
  store i64 %180, i64* %6, align 8
  store i64 %62, i64* %4, align 8
  store i64 %60, i64* %29, align 8
  br label %181

181:                                              ; preds = %18, %178
  %182 = phi i8* [ %19, %18 ], [ %61, %178 ]
  %183 = icmp ugt i32 %14, 1
  br i1 %183, label %185, label %184

184:                                              ; preds = %349, %191, %181
  ret i32 %9

185:                                              ; preds = %181
  %186 = bitcast i8** %15 to i64*
  %187 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %188 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i8*, i8** %15, align 8
  %190 = icmp eq i8* %182, %189
  br i1 %190, label %194, label %191

191:                                              ; preds = %185
  store i8 0, i8* %182, align 1
  %192 = getelementptr inbounds i8, i8* %182, i64 1
  %193 = ptrtoint i8* %192 to i64
  store i64 %193, i64* %4, align 8
  br label %184

194:                                              ; preds = %185
  %195 = ptrtoint i8* %189 to i64
  %196 = load i64, i64* %6, align 8
  %197 = sub i64 %195, %196
  %198 = add i64 %197, 1
  %199 = icmp ugt i64 %198, 2147483647
  br i1 %199, label %200, label %202

200:                                              ; preds = %194
  %201 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %201) #16
  unreachable

202:                                              ; preds = %194
  %203 = icmp ult i64 %197, 1073741823
  br i1 %203, label %204, label %209

204:                                              ; preds = %202
  %205 = shl i64 %197, 1
  %206 = icmp ult i64 %205, %198
  %207 = select i1 %206, i64 %198, i64 %205
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %227, label %209

209:                                              ; preds = %204, %202
  %210 = phi i64 [ %207, %204 ], [ 2147483647, %202 ]
  %211 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %187, align 8
  %212 = add nuw nsw i64 %210, 7
  %213 = and i64 %212, -8
  %214 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %211, i64 0, i32 2
  %215 = load i64, i64* %214, align 8
  %216 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %211, i64 0, i32 3
  %217 = load i64, i64* %216, align 8
  %218 = sub i64 %217, %215
  %219 = icmp ugt i64 %213, %218
  br i1 %219, label %220, label %222, !prof !2

220:                                              ; preds = %209
  %221 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %211, i64 %213) #9
  br label %224

222:                                              ; preds = %209
  %223 = add i64 %215, %213
  store i64 %223, i64* %214, align 8
  br label %224

224:                                              ; preds = %222, %220
  %225 = phi i64 [ %221, %220 ], [ %215, %222 ]
  %226 = inttoptr i64 %225 to i8*
  br label %227

227:                                              ; preds = %224, %204
  %228 = phi i64 [ %210, %224 ], [ 0, %204 ]
  %229 = phi i8* [ %226, %224 ], [ null, %204 ]
  %230 = getelementptr inbounds i8, i8* %229, i64 %197
  %231 = getelementptr inbounds i8, i8* %229, i64 %228
  %232 = ptrtoint i8* %231 to i64
  store i8 0, i8* %230, align 1
  %233 = getelementptr inbounds i8, i8* %230, i64 1
  %234 = ptrtoint i8* %233 to i64
  %235 = load i8*, i8** %188, align 8
  %236 = load i8*, i8** %3, align 8
  %237 = ptrtoint i8* %236 to i64
  %238 = icmp eq i8* %236, %235
  br i1 %238, label %349, label %239

239:                                              ; preds = %227
  %240 = ptrtoint i8* %235 to i64
  %241 = ptrtoint i8* %236 to i64
  %242 = sub i64 %241, %240
  %243 = icmp ult i64 %242, 16
  br i1 %243, label %339, label %244

244:                                              ; preds = %239
  %245 = sub i64 %195, %237
  %246 = sub i64 %245, %196
  %247 = getelementptr i8, i8* %235, i64 %246
  %248 = ptrtoint i8* %247 to i64
  %249 = getelementptr i8, i8* %229, i64 %248
  %250 = icmp ult i8* %249, %236
  %251 = icmp ult i8* %235, %230
  %252 = and i1 %250, %251
  br i1 %252, label %339, label %253

253:                                              ; preds = %244
  %254 = and i64 %242, -16
  %255 = sub i64 0, %254
  %256 = getelementptr i8, i8* %230, i64 %255
  %257 = sub i64 0, %254
  %258 = getelementptr i8, i8* %236, i64 %257
  %259 = add i64 %254, -16
  %260 = lshr exact i64 %259, 4
  %261 = add nuw nsw i64 %260, 1
  %262 = and i64 %261, 3
  %263 = icmp ult i64 %259, 48
  br i1 %263, label %316, label %264

264:                                              ; preds = %253
  %265 = sub nsw i64 %261, %262
  %266 = getelementptr i8, i8* %230, i64 -1
  %267 = getelementptr inbounds i8, i8* %266, i64 -8
  %268 = getelementptr inbounds i8, i8* %236, i64 -16
  %269 = getelementptr inbounds i8, i8* %267, i64 -7
  %270 = getelementptr i8, i8* %230, i64 -1
  %271 = getelementptr inbounds i8, i8* %270, i64 -8
  %272 = getelementptr inbounds i8, i8* %236, i64 -16
  %273 = getelementptr inbounds i8, i8* %271, i64 -7
  %274 = getelementptr i8, i8* %230, i64 -1
  %275 = getelementptr inbounds i8, i8* %274, i64 -8
  %276 = getelementptr inbounds i8, i8* %236, i64 -16
  %277 = getelementptr inbounds i8, i8* %275, i64 -7
  %278 = getelementptr i8, i8* %230, i64 -1
  %279 = getelementptr inbounds i8, i8* %278, i64 -8
  %280 = getelementptr inbounds i8, i8* %236, i64 -16
  %281 = getelementptr inbounds i8, i8* %279, i64 -7
  br label %282

282:                                              ; preds = %282, %264
  %283 = phi i64 [ 0, %264 ], [ %313, %282 ]
  %284 = phi i64 [ %265, %264 ], [ %314, %282 ]
  %285 = sub i64 0, %283
  %286 = sub i64 0, %283
  %287 = getelementptr inbounds i8, i8* %268, i64 %286
  %288 = bitcast i8* %287 to <2 x i64>*
  %289 = load <2 x i64>, <2 x i64>* %288, align 1, !alias.scope !13
  %290 = getelementptr inbounds i8, i8* %269, i64 %285
  %291 = bitcast i8* %290 to <2 x i64>*
  store <2 x i64> %289, <2 x i64>* %291, align 1, !alias.scope !16, !noalias !13
  %292 = sub nuw nsw i64 -16, %283
  %293 = sub nuw nsw i64 -16, %283
  %294 = getelementptr inbounds i8, i8* %272, i64 %293
  %295 = bitcast i8* %294 to <2 x i64>*
  %296 = load <2 x i64>, <2 x i64>* %295, align 1, !alias.scope !13
  %297 = getelementptr inbounds i8, i8* %273, i64 %292
  %298 = bitcast i8* %297 to <2 x i64>*
  store <2 x i64> %296, <2 x i64>* %298, align 1, !alias.scope !16, !noalias !13
  %299 = sub nuw nsw i64 -32, %283
  %300 = sub nuw nsw i64 -32, %283
  %301 = getelementptr inbounds i8, i8* %276, i64 %300
  %302 = bitcast i8* %301 to <2 x i64>*
  %303 = load <2 x i64>, <2 x i64>* %302, align 1, !alias.scope !13
  %304 = getelementptr inbounds i8, i8* %277, i64 %299
  %305 = bitcast i8* %304 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %305, align 1, !alias.scope !16, !noalias !13
  %306 = sub nuw nsw i64 -48, %283
  %307 = sub nuw nsw i64 -48, %283
  %308 = getelementptr inbounds i8, i8* %280, i64 %307
  %309 = bitcast i8* %308 to <2 x i64>*
  %310 = load <2 x i64>, <2 x i64>* %309, align 1, !alias.scope !13
  %311 = getelementptr inbounds i8, i8* %281, i64 %306
  %312 = bitcast i8* %311 to <2 x i64>*
  store <2 x i64> %310, <2 x i64>* %312, align 1, !alias.scope !16, !noalias !13
  %313 = add i64 %283, 64
  %314 = add i64 %284, -4
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %316, label %282, !llvm.loop !18

316:                                              ; preds = %282, %253
  %317 = phi i64 [ 0, %253 ], [ %313, %282 ]
  %318 = icmp eq i64 %262, 0
  br i1 %318, label %337, label %319

319:                                              ; preds = %316
  %320 = getelementptr i8, i8* %230, i64 -1
  %321 = getelementptr inbounds i8, i8* %320, i64 -8
  %322 = getelementptr inbounds i8, i8* %236, i64 -16
  %323 = getelementptr inbounds i8, i8* %321, i64 -7
  br label %324

324:                                              ; preds = %324, %319
  %325 = phi i64 [ %317, %319 ], [ %334, %324 ]
  %326 = phi i64 [ %262, %319 ], [ %335, %324 ]
  %327 = sub i64 0, %325
  %328 = sub i64 0, %325
  %329 = getelementptr inbounds i8, i8* %322, i64 %328
  %330 = bitcast i8* %329 to <2 x i64>*
  %331 = load <2 x i64>, <2 x i64>* %330, align 1, !alias.scope !13
  %332 = getelementptr inbounds i8, i8* %323, i64 %327
  %333 = bitcast i8* %332 to <2 x i64>*
  store <2 x i64> %331, <2 x i64>* %333, align 1, !alias.scope !16, !noalias !13
  %334 = add i64 %325, 16
  %335 = add i64 %326, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %324, !llvm.loop !19

337:                                              ; preds = %324, %316
  %338 = icmp eq i64 %242, %254
  br i1 %338, label %349, label %339

339:                                              ; preds = %337, %244, %239
  %340 = phi i8* [ %230, %244 ], [ %230, %239 ], [ %256, %337 ]
  %341 = phi i8* [ %236, %244 ], [ %236, %239 ], [ %258, %337 ]
  br label %342

342:                                              ; preds = %339, %342
  %343 = phi i8* [ %345, %342 ], [ %340, %339 ]
  %344 = phi i8* [ %346, %342 ], [ %341, %339 ]
  %345 = getelementptr inbounds i8, i8* %343, i64 -1
  %346 = getelementptr inbounds i8, i8* %344, i64 -1
  %347 = load i8, i8* %346, align 1
  store i8 %347, i8* %345, align 1
  %348 = icmp eq i8* %346, %235
  br i1 %348, label %349, label %342, !llvm.loop !20

349:                                              ; preds = %342, %337, %227
  %350 = phi i8* [ %230, %227 ], [ %256, %337 ], [ %345, %342 ]
  %351 = ptrtoint i8* %350 to i64
  store i64 %351, i64* %6, align 8
  store i64 %234, i64* %4, align 8
  store i64 %232, i64* %186, align 8
  br label %184
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal18FeedbackVectorSpec18AddTypeProfileSlotEv(%"class.v8::internal::FeedbackVectorSpec"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = trunc i64 %7 to i32
  %9 = inttoptr i64 %4 to i8*
  %10 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, %9
  br i1 %12, label %16, label %13

13:                                               ; preds = %1
  store i8 18, i8* %9, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 1
  %15 = ptrtoint i8* %14 to i64
  store i64 %15, i64* %3, align 8
  br label %174

16:                                               ; preds = %1
  %17 = add i64 %7, 1
  %18 = icmp ugt i64 %17, 2147483647
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %20) #16
  unreachable

21:                                               ; preds = %16
  %22 = bitcast i8** %10 to i64*
  %23 = icmp ult i64 %7, 1073741823
  br i1 %23, label %24, label %29

24:                                               ; preds = %21
  %25 = shl i64 %7, 1
  %26 = icmp ult i64 %25, %17
  %27 = select i1 %26, i64 %17, i64 %25
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %48, label %29

29:                                               ; preds = %24, %21
  %30 = phi i64 [ %27, %24 ], [ 2147483647, %21 ]
  %31 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %32 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %31, align 8
  %33 = add nuw nsw i64 %30, 7
  %34 = and i64 %33, -8
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %32, i64 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %32, i64 0, i32 3
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %38, %36
  %40 = icmp ugt i64 %34, %39
  br i1 %40, label %41, label %43, !prof !2

41:                                               ; preds = %29
  %42 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %32, i64 %34) #9
  br label %45

43:                                               ; preds = %29
  %44 = add i64 %36, %34
  store i64 %44, i64* %35, align 8
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi i64 [ %42, %41 ], [ %36, %43 ]
  %47 = inttoptr i64 %46 to i8*
  br label %48

48:                                               ; preds = %45, %24
  %49 = phi i64 [ %30, %45 ], [ 0, %24 ]
  %50 = phi i8* [ %47, %45 ], [ null, %24 ]
  %51 = getelementptr inbounds i8, i8* %50, i64 %7
  %52 = getelementptr inbounds i8, i8* %50, i64 %49
  %53 = ptrtoint i8* %52 to i64
  store i8 18, i8* %51, align 1
  %54 = getelementptr inbounds i8, i8* %51, i64 1
  %55 = ptrtoint i8* %54 to i64
  %56 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = load i8*, i8** %2, align 8
  %59 = ptrtoint i8* %58 to i64
  %60 = icmp eq i8* %58, %57
  br i1 %60, label %171, label %61

61:                                               ; preds = %48
  %62 = ptrtoint i8* %57 to i64
  %63 = ptrtoint i8* %58 to i64
  %64 = sub i64 %63, %62
  %65 = icmp ult i64 %64, 16
  br i1 %65, label %161, label %66

66:                                               ; preds = %61
  %67 = sub i64 %4, %59
  %68 = sub i64 %67, %6
  %69 = getelementptr i8, i8* %57, i64 %68
  %70 = ptrtoint i8* %69 to i64
  %71 = getelementptr i8, i8* %50, i64 %70
  %72 = icmp ult i8* %71, %58
  %73 = icmp ult i8* %57, %51
  %74 = and i1 %72, %73
  br i1 %74, label %161, label %75

75:                                               ; preds = %66
  %76 = and i64 %64, -16
  %77 = sub i64 0, %76
  %78 = getelementptr i8, i8* %51, i64 %77
  %79 = sub i64 0, %76
  %80 = getelementptr i8, i8* %58, i64 %79
  %81 = add i64 %76, -16
  %82 = lshr exact i64 %81, 4
  %83 = add nuw nsw i64 %82, 1
  %84 = and i64 %83, 3
  %85 = icmp ult i64 %81, 48
  br i1 %85, label %138, label %86

86:                                               ; preds = %75
  %87 = sub nsw i64 %83, %84
  %88 = getelementptr i8, i8* %51, i64 -1
  %89 = getelementptr inbounds i8, i8* %88, i64 -8
  %90 = getelementptr inbounds i8, i8* %58, i64 -16
  %91 = getelementptr inbounds i8, i8* %89, i64 -7
  %92 = getelementptr i8, i8* %51, i64 -1
  %93 = getelementptr inbounds i8, i8* %92, i64 -8
  %94 = getelementptr inbounds i8, i8* %58, i64 -16
  %95 = getelementptr inbounds i8, i8* %93, i64 -7
  %96 = getelementptr i8, i8* %51, i64 -1
  %97 = getelementptr inbounds i8, i8* %96, i64 -8
  %98 = getelementptr inbounds i8, i8* %58, i64 -16
  %99 = getelementptr inbounds i8, i8* %97, i64 -7
  %100 = getelementptr i8, i8* %51, i64 -1
  %101 = getelementptr inbounds i8, i8* %100, i64 -8
  %102 = getelementptr inbounds i8, i8* %58, i64 -16
  %103 = getelementptr inbounds i8, i8* %101, i64 -7
  br label %104

104:                                              ; preds = %104, %86
  %105 = phi i64 [ 0, %86 ], [ %135, %104 ]
  %106 = phi i64 [ %87, %86 ], [ %136, %104 ]
  %107 = sub i64 0, %105
  %108 = sub i64 0, %105
  %109 = getelementptr inbounds i8, i8* %90, i64 %108
  %110 = bitcast i8* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 1, !alias.scope !21
  %112 = getelementptr inbounds i8, i8* %91, i64 %107
  %113 = bitcast i8* %112 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %113, align 1, !alias.scope !24, !noalias !21
  %114 = sub nuw nsw i64 -16, %105
  %115 = sub nuw nsw i64 -16, %105
  %116 = getelementptr inbounds i8, i8* %94, i64 %115
  %117 = bitcast i8* %116 to <2 x i64>*
  %118 = load <2 x i64>, <2 x i64>* %117, align 1, !alias.scope !21
  %119 = getelementptr inbounds i8, i8* %95, i64 %114
  %120 = bitcast i8* %119 to <2 x i64>*
  store <2 x i64> %118, <2 x i64>* %120, align 1, !alias.scope !24, !noalias !21
  %121 = sub nuw nsw i64 -32, %105
  %122 = sub nuw nsw i64 -32, %105
  %123 = getelementptr inbounds i8, i8* %98, i64 %122
  %124 = bitcast i8* %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 1, !alias.scope !21
  %126 = getelementptr inbounds i8, i8* %99, i64 %121
  %127 = bitcast i8* %126 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %127, align 1, !alias.scope !24, !noalias !21
  %128 = sub nuw nsw i64 -48, %105
  %129 = sub nuw nsw i64 -48, %105
  %130 = getelementptr inbounds i8, i8* %102, i64 %129
  %131 = bitcast i8* %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 1, !alias.scope !21
  %133 = getelementptr inbounds i8, i8* %103, i64 %128
  %134 = bitcast i8* %133 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %134, align 1, !alias.scope !24, !noalias !21
  %135 = add i64 %105, 64
  %136 = add i64 %106, -4
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %104, !llvm.loop !26

138:                                              ; preds = %104, %75
  %139 = phi i64 [ 0, %75 ], [ %135, %104 ]
  %140 = icmp eq i64 %84, 0
  br i1 %140, label %159, label %141

141:                                              ; preds = %138
  %142 = getelementptr i8, i8* %51, i64 -1
  %143 = getelementptr inbounds i8, i8* %142, i64 -8
  %144 = getelementptr inbounds i8, i8* %58, i64 -16
  %145 = getelementptr inbounds i8, i8* %143, i64 -7
  br label %146

146:                                              ; preds = %146, %141
  %147 = phi i64 [ %139, %141 ], [ %156, %146 ]
  %148 = phi i64 [ %84, %141 ], [ %157, %146 ]
  %149 = sub i64 0, %147
  %150 = sub i64 0, %147
  %151 = getelementptr inbounds i8, i8* %144, i64 %150
  %152 = bitcast i8* %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 1, !alias.scope !21
  %154 = getelementptr inbounds i8, i8* %145, i64 %149
  %155 = bitcast i8* %154 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %155, align 1, !alias.scope !24, !noalias !21
  %156 = add i64 %147, 16
  %157 = add i64 %148, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %146, !llvm.loop !27

159:                                              ; preds = %146, %138
  %160 = icmp eq i64 %64, %76
  br i1 %160, label %171, label %161

161:                                              ; preds = %159, %66, %61
  %162 = phi i8* [ %51, %66 ], [ %51, %61 ], [ %78, %159 ]
  %163 = phi i8* [ %58, %66 ], [ %58, %61 ], [ %80, %159 ]
  br label %164

164:                                              ; preds = %161, %164
  %165 = phi i8* [ %167, %164 ], [ %162, %161 ]
  %166 = phi i8* [ %168, %164 ], [ %163, %161 ]
  %167 = getelementptr inbounds i8, i8* %165, i64 -1
  %168 = getelementptr inbounds i8, i8* %166, i64 -1
  %169 = load i8, i8* %168, align 1
  store i8 %169, i8* %167, align 1
  %170 = icmp eq i8* %168, %57
  br i1 %170, label %171, label %164, !llvm.loop !28

171:                                              ; preds = %164, %159, %48
  %172 = phi i8* [ %51, %48 ], [ %78, %159 ], [ %167, %164 ]
  %173 = ptrtoint i8* %172 to i64
  store i64 %173, i64* %5, align 8
  store i64 %55, i64* %3, align 8
  store i64 %53, i64* %22, align 8
  br label %174

174:                                              ; preds = %13, %171
  %175 = icmp eq i32 %8, 0
  br i1 %175, label %177, label %176, !prof !29

176:                                              ; preds = %174
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable

177:                                              ; preds = %174
  ret i32 0
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal18FeedbackVectorSpec18HasTypeProfileSlotEv(%"class.v8::internal::FeedbackVectorSpec"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = trunc i64 %7 to i32
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %1
  %11 = icmp eq i64 %7, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %10
  %15 = inttoptr i64 %6 to i8*
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 18
  br label %18

18:                                               ; preds = %1, %14
  %19 = phi i1 [ %17, %14 ], [ false, %1 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_16FeedbackSlotKindE(%"class.std::__1::basic_ostream"* dereferenceable(160), i8 zeroext) local_unnamed_addr #0 {
  %3 = icmp ult i8 %1, 23
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #16
  unreachable

5:                                                ; preds = %2
  %6 = sext i8 %1 to i64
  %7 = getelementptr inbounds [23 x i8*], [23 x i8*]* @switch.table._ZN2v88internal16FeedbackMetadata11Kind2StringENS0_16FeedbackSlotKindE, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  %9 = tail call i64 @strlen(i8* nonnull %8) #9
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* nonnull %8, i64 %9) #9
  ret %"class.std::__1::basic_ostream"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal16FeedbackMetadata11Kind2StringENS0_16FeedbackSlotKindE(i8 zeroext) local_unnamed_addr #0 align 2 {
  %2 = icmp ult i8 %0, 23
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #16
  unreachable

4:                                                ; preds = %1
  %5 = sext i8 %0 to i64
  %6 = getelementptr inbounds [23 x i8*], [23 x i8*]* @switch.table._ZN2v88internal16FeedbackMetadata11Kind2StringENS0_16FeedbackSlotKindE, i64 0, i64 %5
  %7 = load i8*, i8** %6, align 8
  ret i8* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK2v88internal16FeedbackMetadata7GetKindENS0_12FeedbackSlotE(%"class.v8::internal::FeedbackMetadata"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = sdiv i32 %1, 6
  %4 = shl nsw i32 %3, 2
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackMetadata", %"class.v8::internal::FeedbackMetadata"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sext i32 %4 to i64
  %8 = add nsw i64 %7, 11
  %9 = add i64 %8, %6
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = srem i32 %1, 6
  %13 = mul nsw i32 %12, 5
  %14 = lshr i32 %11, %13
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 31
  ret i8 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal16FeedbackMetadata15SpecDiffersFromEPKNS0_18FeedbackVectorSpecE(%"class.v8::internal::FeedbackMetadata"* nocapture readonly, %"class.v8::internal::FeedbackVectorSpec"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %"class.v8::internal::FeedbackMetadata", %"class.v8::internal::FeedbackMetadata"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 3
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, %9
  br i1 %15, label %16, label %47

16:                                               ; preds = %2
  %17 = inttoptr i64 %7 to i8*
  br label %18

18:                                               ; preds = %16, %42
  %19 = phi i32 [ %46, %42 ], [ 0, %16 ]
  %20 = icmp slt i32 %19, %9
  br i1 %20, label %21, label %47

21:                                               ; preds = %18
  %22 = udiv i32 %19, 6
  %23 = shl nuw nsw i32 %22, 2
  %24 = add nuw i32 %23, 11
  %25 = zext i32 %24 to i64
  %26 = add i64 %11, %25
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = urem i32 %19, 6
  %30 = mul nuw nsw i32 %29, 5
  %31 = lshr i32 %28, %30
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 31
  switch i8 %33, label %36 [
    i8 23, label %35
    i8 0, label %35
    i8 17, label %34
    i8 14, label %34
    i8 13, label %34
    i8 3, label %34
    i8 4, label %34
    i8 22, label %34
    i8 5, label %34
    i8 7, label %34
    i8 6, label %34
    i8 8, label %34
    i8 9, label %34
    i8 2, label %34
    i8 11, label %34
    i8 12, label %34
    i8 1, label %34
    i8 10, label %34
  ]

34:                                               ; preds = %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21
  br label %36

35:                                               ; preds = %21, %21
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #16
  unreachable

36:                                               ; preds = %21, %34
  %37 = phi i32 [ 2, %34 ], [ 1, %21 ]
  %38 = zext i32 %19 to i64
  %39 = icmp ugt i64 %8, %38
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %41) #16
  unreachable

42:                                               ; preds = %36
  %43 = getelementptr inbounds i8, i8* %17, i64 %38
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %33, %44
  %46 = add nuw nsw i32 %37, %19
  br i1 %45, label %18, label %47

47:                                               ; preds = %42, %18, %2
  %48 = phi i1 [ true, %2 ], [ false, %18 ], [ true, %42 ]
  ret i1 %48
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal16FeedbackMetadata18HasTypeProfileSlotEv(%"class.v8::internal::FeedbackMetadata"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FeedbackMetadata", %"class.v8::internal::FeedbackMetadata"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 3
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = add i64 %3, 11
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 31
  %13 = icmp eq i32 %12, 18
  br label %14

14:                                               ; preds = %8, %1
  %15 = phi i1 [ false, %1 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK2v88internal14FeedbackVector7GetKindENS0_12FeedbackSlotE(%"class.v8::internal::FeedbackVector"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 19
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 11
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  %16 = sdiv i32 %1, 6
  %17 = shl nsw i32 %16, 2
  %18 = sext i32 %17 to i64
  %19 = add nsw i64 %18, 11
  %20 = add i64 %19, %15
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = srem i32 %1, 6
  %24 = mul nsw i32 %23, 5
  %25 = lshr i32 %22, %24
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 31
  ret i8 %27
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK2v88internal14FeedbackVector18GetTypeProfileSlotEv(%"class.v8::internal::FeedbackVector"* nocapture readnone) local_unnamed_addr #7 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal24ClosureFeedbackCellArray3NewEPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = tail call i64* @_ZN2v88internal7Factory27NewClosureFeedbackCellArrayEi(%"class.v8::internal::Factory"* %3, i32 %13) #9
  %15 = icmp sgt i32 %13, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %18 = zext i32 %13 to i64
  br label %20

19:                                               ; preds = %57, %2
  ret i64* %14

20:                                               ; preds = %57, %16
  %21 = phi i64 [ 0, %16 ], [ %58, %57 ]
  %22 = tail call i64* @_ZN2v88internal7Factory17NewNoClosuresCellENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Factory"* %3, i64* %17) #9
  %23 = load i64, i64* %14, align 8
  %24 = load i64, i64* %22, align 8
  %25 = trunc i64 %21 to i32
  %26 = shl i32 %25, 2
  %27 = sext i32 %26 to i64
  %28 = add nsw i64 %27, 7
  %29 = add i64 %28, %23
  %30 = inttoptr i64 %29 to i32*
  %31 = trunc i64 %24 to i32
  store atomic volatile i32 %31, i32* %30 monotonic, align 4
  %32 = and i64 %24, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %57, label %34

34:                                               ; preds = %20
  %35 = and i64 %23, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 262144
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %34
  %42 = or i64 %35, 16
  %43 = inttoptr i64 %42 to %"class.v8::internal::Heap"**
  %44 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %43, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %44, i64 %23, i64 %29, i64 %24) #9
  br label %45

45:                                               ; preds = %41, %34
  %46 = and i64 %24, -262144
  %47 = or i64 %46, 8
  %48 = inttoptr i64 %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 24
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = load i64, i64* %37, align 8
  %54 = and i64 %53, 24
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %52
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %23, i64 %29, i64 %24) #9
  br label %57

57:                                               ; preds = %20, %45, %52, %56
  %58 = add nuw nsw i64 %21, 1
  %59 = icmp eq i64 %58, %18
  br i1 %59, label %19, label %20
}

declare i64* @_ZN2v88internal7Factory27NewClosureFeedbackCellArrayEi(%"class.v8::internal::Factory"*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory17NewNoClosuresCellENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal14FeedbackVector3NewEPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS4_INS0_24ClosureFeedbackCellArrayEEEPNS0_15IsCompiledScopeE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::IsCompiledScope"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %6 = load i64, i64* %1, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 11
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %14 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %13, align 8
  %15 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %4
  %17 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %14, i64 %12) #9
  %18 = load i64, i64* %17, align 8
  br label %32

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %21, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %19
  %26 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #9
  br label %27

27:                                               ; preds = %25, %19
  %28 = phi i64* [ %26, %25 ], [ %21, %19 ]
  %29 = ptrtoint i64* %28 to i64
  %30 = add i64 %29, 8
  %31 = inttoptr i64 %30 to i64*
  store i64* %31, i64** %20, align 8
  store i64 %12, i64* %28, align 8
  br label %32

32:                                               ; preds = %16, %27
  %33 = phi i64 [ %18, %16 ], [ %12, %27 ]
  %34 = phi i64* [ %17, %16 ], [ %28, %27 ]
  %35 = add i64 %33, 3
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = tail call i64* @_ZN2v88internal7Factory17NewFeedbackVectorENS0_6HandleINS0_18SharedFunctionInfoEEENS2_INS0_24ClosureFeedbackCellArrayEEE(%"class.v8::internal::Factory"* %5, i64* %1, i64* %2) #9
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 508
  %40 = icmp sgt i32 %37, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  br label %47

43:                                               ; preds = %111, %32
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 54, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %123, label %127

47:                                               ; preds = %41, %111
  %48 = phi i32 [ 0, %41 ], [ %112, %111 ]
  %49 = load i64, i64* %34, align 8
  %50 = udiv i32 %48, 6
  %51 = shl nuw nsw i32 %50, 2
  %52 = add nuw i32 %51, 11
  %53 = zext i32 %52 to i64
  %54 = add i64 %49, %53
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = urem i32 %48, 6
  %58 = mul nuw nsw i32 %57, 5
  %59 = lshr i32 %56, %58
  %60 = trunc i32 %59 to i8
  %61 = and i8 %60, 31
  switch i8 %61, label %64 [
    i8 23, label %63
    i8 0, label %63
    i8 17, label %62
    i8 14, label %62
    i8 13, label %62
    i8 3, label %62
    i8 4, label %62
    i8 22, label %62
    i8 5, label %62
    i8 7, label %62
    i8 6, label %62
    i8 8, label %62
    i8 9, label %62
    i8 2, label %62
    i8 11, label %62
    i8 12, label %62
    i8 1, label %62
    i8 10, label %62
  ]

62:                                               ; preds = %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47
  br label %64

63:                                               ; preds = %47, %47
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #16
  unreachable

64:                                               ; preds = %47, %62
  %65 = phi i32 [ 2, %62 ], [ 1, %47 ]
  %66 = load i64, i64* %39, align 8
  switch i8 %61, label %108 [
    i8 7, label %67
    i8 6, label %67
    i8 1, label %67
    i8 10, label %67
    i8 20, label %77
    i8 16, label %77
    i8 15, label %77
    i8 19, label %84
    i8 4, label %91
    i8 22, label %99
    i8 5, label %99
    i8 8, label %99
    i8 9, label %99
    i8 2, label %99
    i8 11, label %99
    i8 12, label %99
    i8 3, label %99
    i8 13, label %99
    i8 14, label %99
    i8 17, label %99
    i8 18, label %99
    i8 21, label %99
    i8 0, label %107
    i8 23, label %107
  ]

67:                                               ; preds = %64, %64, %64, %64
  %68 = load i64, i64* %38, align 8
  %69 = load i64, i64* %42, align 8
  %70 = and i64 %69, 4294967295
  %71 = icmp eq i64 %70, 0
  tail call void @llvm.assume(i1 %71) #9
  %72 = shl i32 %48, 2
  %73 = sext i32 %72 to i64
  %74 = add nsw i64 %73, 31
  %75 = add i64 %74, %68
  %76 = inttoptr i64 %75 to i32*
  store atomic volatile i32 3, i32* %76 monotonic, align 4
  br label %108

77:                                               ; preds = %64, %64, %64
  %78 = load i64, i64* %38, align 8
  %79 = shl i32 %48, 2
  %80 = sext i32 %79 to i64
  %81 = add nsw i64 %80, 31
  %82 = add i64 %81, %78
  %83 = inttoptr i64 %82 to i32*
  store atomic volatile i32 0, i32* %83 monotonic, align 4
  br label %108

84:                                               ; preds = %64
  %85 = load i64, i64* %38, align 8
  %86 = shl i32 %48, 2
  %87 = sext i32 %86 to i64
  %88 = add nsw i64 %87, 31
  %89 = add i64 %88, %85
  %90 = inttoptr i64 %89 to i32*
  store atomic volatile i32 0, i32* %90 monotonic, align 4
  br label %108

91:                                               ; preds = %64
  %92 = load i64, i64* %38, align 8
  %93 = shl i32 %48, 2
  %94 = sext i32 %93 to i64
  %95 = add nsw i64 %94, 31
  %96 = add i64 %95, %92
  %97 = inttoptr i64 %96 to i32*
  %98 = trunc i64 %66 to i32
  store atomic volatile i32 %98, i32* %97 monotonic, align 4
  br label %108

99:                                               ; preds = %64, %64, %64, %64, %64, %64, %64, %64, %64, %64, %64, %64, %64
  %100 = load i64, i64* %38, align 8
  %101 = shl i32 %48, 2
  %102 = sext i32 %101 to i64
  %103 = add nsw i64 %102, 31
  %104 = add i64 %103, %100
  %105 = inttoptr i64 %104 to i32*
  %106 = trunc i64 %66 to i32
  store atomic volatile i32 %106, i32* %105 monotonic, align 4
  br label %108

107:                                              ; preds = %64, %64
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #16
  unreachable

108:                                              ; preds = %64, %99, %91, %84, %77, %67
  %109 = phi i64 [ %66, %64 ], [ %66, %99 ], [ 0, %91 ], [ %66, %84 ], [ %66, %77 ], [ %66, %67 ]
  %110 = icmp ugt i32 %65, 1
  br i1 %110, label %114, label %111

111:                                              ; preds = %114, %108
  %112 = add nuw nsw i32 %65, %48
  %113 = icmp slt i32 %112, %37
  br i1 %113, label %47, label %43

114:                                              ; preds = %108
  %115 = trunc i64 %109 to i32
  %116 = load i64, i64* %38, align 8
  %117 = shl i32 %48, 2
  %118 = add i32 %117, 4
  %119 = sext i32 %118 to i64
  %120 = add nsw i64 %119, 31
  %121 = add i64 %120, %116
  %122 = inttoptr i64 %121 to i32*
  store atomic volatile i32 %115, i32* %122 monotonic, align 4
  br label %111

123:                                              ; preds = %43
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 109
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %128

127:                                              ; preds = %123, %43
  tail call void @_ZN2v88internal14FeedbackVector29AddToVectorsForProfilingToolsEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %38)
  br label %128

128:                                              ; preds = %127, %123
  ret i64* %38
}

declare i64* @_ZN2v88internal7Factory17NewFeedbackVectorENS0_6HandleINS0_18SharedFunctionInfoEEENS2_INS0_24ClosureFeedbackCellArrayEEE(%"class.v8::internal::Factory"*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14FeedbackVector29AddToVectorsForProfilingToolsEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Script", align 8
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 19
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 3
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 acquire, align 4
  %14 = zext i32 %13 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %2
  %18 = or i64 %5, %14
  %19 = add i64 %18, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %5, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp eq i16 %26, 92
  br i1 %27, label %85, label %28

28:                                               ; preds = %17, %2
  %29 = add i64 %10, 15
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 acquire, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %5, %32
  %34 = add i64 %33, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = icmp eq i16 %41, 100
  br i1 %42, label %43, label %49

43:                                               ; preds = %28
  %44 = add i64 %33, 11
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %5, %47
  br label %49

49:                                               ; preds = %43, %28
  %50 = phi i64 [ %48, %43 ], [ %33, %28 ]
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %77, label %53

53:                                               ; preds = %49
  %54 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %55 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %54, i64 0, i32 0, i32 1
  %58 = load i8, i8* %57, align 8, !range !30
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %54, i64 0, i32 1, i64 0
  br label %70

62:                                               ; preds = %56, %53
  %63 = and i64 %50, -262144
  %64 = or i64 %63, 16
  %65 = inttoptr i64 %64 to i64*
  %66 = load i64, i64* %65, align 16
  %67 = add i64 %66, -41416
  %68 = inttoptr i64 %67 to %"class.v8::internal::Isolate"*
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %68, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %70

70:                                               ; preds = %62, %60
  %71 = phi i64* [ %69, %62 ], [ %61, %60 ]
  %72 = getelementptr inbounds i64, i64* %71, i64 4
  %73 = load i64, i64* %72, align 8
  %74 = trunc i64 %50 to i32
  %75 = trunc i64 %73 to i32
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %85, label %77

77:                                               ; preds = %49, %70
  %78 = bitcast %"class.v8::internal::Script"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #9
  %79 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %50, i64* %79, align 8
  %80 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #9
  br i1 %80, label %81, label %85

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 653
  %83 = call i64* @_ZN2v88internal9ArrayList3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %82, i64* %1) #9
  %84 = load i64, i64* %83, align 8
  call void @_ZN2v88internal7Isolate35SetFeedbackVectorsForProfilingToolsENS0_6ObjectE(%"class.v8::internal::Isolate"* %0, i64 %84) #9
  br label %85

85:                                               ; preds = %70, %17, %77, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal14FeedbackVector30NewWithOneBinarySlotForTestingEPNS0_4ZoneEPNS0_7IsolateE(%"class.v8::internal::Zone"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::FeedbackVectorSpec", align 8
  %4 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #9
  %5 = ptrtoint %"class.v8::internal::Zone"* %0 to i64
  %6 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %7 = bitcast %"struct.std::__1::__compressed_pair_elem.1185"* %6 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #9
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %3, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast i8** %9 to i64*
  %11 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %3 to i64*
  %12 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %15
  %19 = icmp ult i64 %18, 16
  br i1 %19, label %20, label %22, !prof !2

20:                                               ; preds = %2
  %21 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 16) #9
  br label %24

22:                                               ; preds = %2
  %23 = add i64 %15, 16
  store i64 %23, i64* %14, align 8
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi i64 [ %21, %20 ], [ %15, %22 ]
  %26 = inttoptr i64 %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 16
  %28 = ptrtoint i8* %27 to i64
  %29 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %25, i64* %11, align 8
  store i64 %28, i64* %10, align 8
  store i8 15, i8* %26, align 1
  %30 = getelementptr inbounds i8, i8* %26, i64 1
  %31 = ptrtoint i8* %30 to i64
  store i64 %31, i64* %13, align 8
  %32 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_127NewFeedbackVectorForTestingEPNS0_7IsolateEPKNS0_18FeedbackVectorSpecE(%"class.v8::internal::Isolate"* %1, %"class.v8::internal::FeedbackVectorSpec"* nonnull %3)
  %33 = load i8*, i8** %29, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %24
  %36 = ptrtoint i8* %33 to i64
  store i64 %36, i64* %13, align 8
  br label %37

37:                                               ; preds = %24, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #9
  ret i64* %32
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_127NewFeedbackVectorForTestingEPNS0_7IsolateEPKNS0_18FeedbackVectorSpecE(%"class.v8::internal::Isolate"*, %"class.v8::internal::FeedbackVectorSpec"*) unnamed_addr #0 {
  %3 = alloca { i64*, i8 }, align 8
  %4 = icmp eq %"class.v8::internal::FeedbackVectorSpec"* %1, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  br label %15

15:                                               ; preds = %5, %2
  %16 = phi i32 [ %12, %5 ], [ 0, %2 ]
  %17 = phi i32 [ %14, %5 ], [ 0, %2 ]
  %18 = or i32 %17, %16
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 114
  br label %62

22:                                               ; preds = %15
  %23 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %24 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewFeedbackMetadataEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %23, i32 %16, i32 %17, i8 zeroext 1) #9
  %25 = icmp sgt i32 %16, 0
  br i1 %25, label %26, label %62

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %1 to i64*
  %30 = zext i32 %16 to i64
  br label %31

31:                                               ; preds = %39, %26
  %32 = phi i64 [ 0, %26 ], [ %60, %39 ]
  %33 = load i64, i64* %28, align 8
  %34 = load i64, i64* %29, align 8
  %35 = sub i64 %33, %34
  %36 = icmp ugt i64 %35, %32
  br i1 %36, label %39, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %38) #16
  unreachable

39:                                               ; preds = %31
  %40 = inttoptr i64 %34 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 %32
  %42 = load i8, i8* %41, align 1
  %43 = load i64, i64* %24, align 8
  %44 = trunc i64 %32 to i32
  %45 = udiv i32 %44, 6
  %46 = shl nuw nsw i32 %45, 2
  %47 = add nuw i32 %46, 11
  %48 = zext i32 %47 to i64
  %49 = add i64 %43, %48
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = urem i32 %44, 6
  %53 = mul nuw nsw i32 %52, 5
  %54 = zext i8 %42 to i32
  %55 = shl i32 %54, %53
  %56 = shl i32 31, %53
  %57 = xor i32 %56, -1
  %58 = and i32 %51, %57
  %59 = or i32 %58, %55
  store i32 %59, i32* %50, align 4
  %60 = add nuw nsw i64 %32, 1
  %61 = icmp eq i64 %60, %30
  br i1 %61, label %62, label %31

62:                                               ; preds = %39, %20, %22
  %63 = phi i64* [ %21, %20 ], [ %24, %22 ], [ %24, %39 ]
  %64 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 9
  %66 = tail call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %64, i64* %65, i32 160, i8 zeroext 0) #9
  %67 = load i64, i64* %66, align 8
  %68 = load i64, i64* %63, align 8
  %69 = add i64 %67, 11
  %70 = inttoptr i64 %69 to i32*
  %71 = trunc i64 %68 to i32
  store atomic volatile i32 %71, i32* %70 monotonic, align 4
  %72 = and i64 %68, 1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %85, label %74

74:                                               ; preds = %62
  %75 = and i64 %67, -262144
  %76 = or i64 %75, 8
  %77 = inttoptr i64 %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %78, 262144
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %74
  %82 = or i64 %75, 16
  %83 = inttoptr i64 %82 to %"class.v8::internal::Heap"**
  %84 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %83, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %84, i64 %67, i64 %69, i64 %68) #9
  br label %85

85:                                               ; preds = %81, %74, %62
  %86 = and i64 %68, -262144
  %87 = or i64 %86, 8
  %88 = inttoptr i64 %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = and i64 %89, 24
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %85
  %93 = and i64 %67, -262144
  %94 = or i64 %93, 8
  %95 = inttoptr i64 %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = and i64 %96, 24
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %92
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %67, i64 %69, i64 %68) #9
  br label %100

100:                                              ; preds = %85, %92, %99
  %101 = tail call i64* @_ZN2v88internal24ClosureFeedbackCellArray3NewEPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Isolate"* %0, i64* %66)
  %102 = load i64, i64* %66, align 8
  %103 = bitcast { i64*, i8 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103)
  %104 = bitcast { i64*, i8 }* %3 to %"class.v8::internal::IsCompiledScope"*
  call void @_ZN2v88internal15IsCompiledScopeC2ENS0_18SharedFunctionInfoEPNS0_7IsolateE(%"class.v8::internal::IsCompiledScope"* nonnull %104, i64 %102, %"class.v8::internal::Isolate"* %0) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103)
  %105 = call i64* @_ZN2v88internal14FeedbackVector3NewEPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS4_INS0_24ClosureFeedbackCellArrayEEEPNS0_15IsCompiledScopeE(%"class.v8::internal::Isolate"* %0, i64* %66, i64* %101, %"class.v8::internal::IsCompiledScope"* undef)
  ret i64* %105
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal14FeedbackVector31NewWithOneCompareSlotForTestingEPNS0_4ZoneEPNS0_7IsolateE(%"class.v8::internal::Zone"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::FeedbackVectorSpec", align 8
  %4 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #9
  %5 = ptrtoint %"class.v8::internal::Zone"* %0 to i64
  %6 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %7 = bitcast %"struct.std::__1::__compressed_pair_elem.1185"* %6 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #9
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %3, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast i8** %9 to i64*
  %11 = bitcast %"class.v8::internal::FeedbackVectorSpec"* %3 to i64*
  %12 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %15
  %19 = icmp ult i64 %18, 16
  br i1 %19, label %20, label %22, !prof !2

20:                                               ; preds = %2
  %21 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 16) #9
  br label %24

22:                                               ; preds = %2
  %23 = add i64 %15, 16
  store i64 %23, i64* %14, align 8
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi i64 [ %21, %20 ], [ %15, %22 ]
  %26 = inttoptr i64 %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 16
  %28 = ptrtoint i8* %27 to i64
  %29 = getelementptr inbounds %"class.v8::internal::FeedbackVectorSpec", %"class.v8::internal::FeedbackVectorSpec"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %25, i64* %11, align 8
  store i64 %28, i64* %10, align 8
  store i8 16, i8* %26, align 1
  %30 = getelementptr inbounds i8, i8* %26, i64 1
  %31 = ptrtoint i8* %30 to i64
  store i64 %31, i64* %13, align 8
  %32 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_127NewFeedbackVectorForTestingEPNS0_7IsolateEPKNS0_18FeedbackVectorSpecE(%"class.v8::internal::Isolate"* %1, %"class.v8::internal::FeedbackVectorSpec"* nonnull %3)
  %33 = load i8*, i8** %29, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %24
  %36 = ptrtoint i8* %33 to i64
  store i64 %36, i64* %13, align 8
  br label %37

37:                                               ; preds = %24, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #9
  ret i64* %32
}

declare i64* @_ZN2v88internal9ArrayList3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal7Isolate35SetFeedbackVectorsForProfilingToolsENS0_6ObjectE(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal14FeedbackVector32SaturatingIncrementProfilerTicksEv(%"class.v8::internal::FeedbackVector"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 11
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 1073741823
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = add nsw i32 %6, 1
  store i32 %9, i32* %5, align 4
  br label %10

10:                                               ; preds = %8, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14FeedbackVector16SetOptimizedCodeENS0_6HandleIS1_EENS2_INS0_4CodeEEENS0_12FeedbackCellE(i64*, i64*, i64) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %0, align 8
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %4, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = trunc i64 %5 to i32
  %9 = or i32 %8, 2
  store atomic volatile i32 %9, i32* %7 release, align 4
  %10 = and i64 %5, 1
  %11 = icmp ne i64 %10, 0
  %12 = icmp ne i32 %9, 3
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %42

14:                                               ; preds = %3
  %15 = and i64 %4, -262144
  %16 = or i64 %15, 8
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 262144
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %14
  %22 = and i64 %5, -3
  %23 = or i64 %15, 16
  %24 = inttoptr i64 %23 to %"class.v8::internal::Heap"**
  %25 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %24, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %25, i64 %4, i64 %6, i64 %22) #9
  br label %26

26:                                               ; preds = %21, %14
  %27 = and i64 %5, -3
  %28 = and i64 %5, -262144
  %29 = or i64 %28, 8
  %30 = inttoptr i64 %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 24
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %26
  %35 = and i64 %4, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %34
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %4, i64 %6, i64 %27) #9
  br label %42

42:                                               ; preds = %3, %26, %34, %41
  %43 = load i64, i64* %0, align 8
  %44 = add i64 %43, 15
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = load i64, i64* %1, align 8
  %48 = add i64 %47, 27
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 15
  switch i32 %51, label %56 [
    i32 13, label %57
    i32 12, label %52
  ]

52:                                               ; preds = %42
  %53 = load i8, i8* @_ZN2v88internal25FLAG_turboprop_as_toptierE, align 1, !range !30
  %54 = icmp eq i8 %53, 0
  %55 = select i1 %54, i32 8, i32 16
  br label %57

56:                                               ; preds = %42
  br label %57

57:                                               ; preds = %42, %52, %56
  %58 = phi i32 [ %55, %52 ], [ 0, %56 ], [ 16, %42 ]
  %59 = and i32 %46, -32
  %60 = or i32 %58, %59
  store i32 %60, i32* %45, align 4
  %61 = load i8, i8* @_ZN2v88internal14FLAG_turbopropE, align 1, !range !30
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %83, label %63

63:                                               ; preds = %57
  %64 = and i64 %2, -4294967296
  %65 = add i64 %2, 3
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %64, %68
  %70 = add i64 %69, 23
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 acquire, align 4
  %73 = and i32 %72, 1
  %74 = icmp ne i32 %73, 0
  %75 = icmp ne i32 %72, 3
  %76 = and i1 %75, %74
  %77 = load i32, i32* @_ZN2v88internal21FLAG_interrupt_budgetE, align 4
  %78 = load i32, i32* @_ZN2v88internal47FLAG_interrupt_budget_scale_factor_for_top_tierE, align 4
  %79 = select i1 %76, i32 %78, i32 1
  %80 = mul nsw i32 %77, %79
  %81 = add i64 %2, 7
  %82 = inttoptr i64 %81 to i32*
  store i32 %80, i32* %82, align 4
  br label %83

83:                                               ; preds = %63, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14FeedbackVector18SetInterruptBudgetENS0_12FeedbackCellE(i64) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN2v88internal14FLAG_turbopropE, align 1, !range !30
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %22, label %4

4:                                                ; preds = %1
  %5 = and i64 %0, -4294967296
  %6 = add i64 %0, 3
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 23
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 acquire, align 4
  %14 = and i32 %13, 1
  %15 = icmp ne i32 %14, 0
  %16 = icmp ne i32 %13, 3
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %22

18:                                               ; preds = %4
  %19 = load i32, i32* @_ZN2v88internal21FLAG_interrupt_budgetE, align 4
  %20 = load i32, i32* @_ZN2v88internal47FLAG_interrupt_budget_scale_factor_for_top_tierE, align 4
  %21 = mul nsw i32 %20, %19
  br label %24

22:                                               ; preds = %1, %4
  %23 = load i32, i32* @_ZN2v88internal21FLAG_interrupt_budgetE, align 4
  br label %24

24:                                               ; preds = %22, %18
  %25 = phi i32 [ %23, %22 ], [ %21, %18 ]
  %26 = add i64 %0, 7
  %27 = inttoptr i64 %26 to i32*
  store i32 %25, i32* %27, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14FeedbackVector18ClearOptimizedCodeENS0_12FeedbackCellE(%"class.v8::internal::FeedbackVector"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 4294967295
  %14 = icmp eq i64 %13, 0
  tail call void @llvm.assume(i1 %14) #9
  %15 = add i64 %4, 23
  %16 = inttoptr i64 %15 to i32*
  store atomic volatile i32 3, i32* %16 release, align 4
  %17 = load i64, i64* %3, align 8
  %18 = add i64 %17, 15
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, -25
  store i32 %21, i32* %19, align 4
  %22 = load i8, i8* @_ZN2v88internal14FLAG_turbopropE, align 1, !range !30
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %44, label %24

24:                                               ; preds = %2
  %25 = and i64 %1, -4294967296
  %26 = add i64 %1, 3
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = add i64 %30, 23
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 acquire, align 4
  %34 = and i32 %33, 1
  %35 = icmp ne i32 %34, 0
  %36 = icmp ne i32 %33, 3
  %37 = and i1 %36, %35
  %38 = load i32, i32* @_ZN2v88internal21FLAG_interrupt_budgetE, align 4
  %39 = load i32, i32* @_ZN2v88internal47FLAG_interrupt_budget_scale_factor_for_top_tierE, align 4
  %40 = select i1 %37, i32 %39, i32 1
  %41 = mul nsw i32 %38, %40
  %42 = add i64 %1, 7
  %43 = inttoptr i64 %42 to i32*
  store i32 %41, i32* %43, align 4
  br label %44

44:                                               ; preds = %24, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal14FeedbackVector21ClearOptimizationTierENS0_12FeedbackCellE(%"class.v8::internal::FeedbackVector"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, -25
  store i32 %8, i32* %6, align 4
  %9 = load i8, i8* @_ZN2v88internal14FLAG_turbopropE, align 1, !range !30
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %31, label %11

11:                                               ; preds = %2
  %12 = and i64 %1, -4294967296
  %13 = add i64 %1, 3
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 23
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 acquire, align 4
  %21 = and i32 %20, 1
  %22 = icmp ne i32 %21, 0
  %23 = icmp ne i32 %20, 3
  %24 = and i1 %23, %22
  %25 = load i32, i32* @_ZN2v88internal21FLAG_interrupt_budgetE, align 4
  %26 = load i32, i32* @_ZN2v88internal47FLAG_interrupt_budget_scale_factor_for_top_tierE, align 4
  %27 = select i1 %24, i32 %26, i32 1
  %28 = mul nsw i32 %25, %27
  %29 = add i64 %1, 7
  %30 = inttoptr i64 %29 to i32*
  store i32 %28, i32* %30, align 4
  br label %31

31:                                               ; preds = %11, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal14FeedbackVector23ClearOptimizationMarkerEv(%"class.v8::internal::FeedbackVector"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 15
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, -8
  store i32 %7, i32* %5, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal14FeedbackVector21SetOptimizationMarkerENS0_18OptimizationMarkerE(%"class.v8::internal::FeedbackVector"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, -8
  %9 = or i32 %8, %1
  store i32 %9, i32* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal14FeedbackVector27InitializeOptimizationStateEv(%"class.v8::internal::FeedbackVector"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = load i8, i8* @_ZN2v88internal24FLAG_log_function_eventsE, align 1, !range !30
  %3 = icmp eq i8 %2, 0
  %4 = select i1 %3, i32 0, i32 4
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  store i32 %4, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14FeedbackVector41EvictOptimizedCodeMarkedForDeoptimizationENS0_12FeedbackCellENS0_18SharedFunctionInfoEPKc(%"class.v8::internal::FeedbackVector"* nocapture readonly, i64, i64, i8*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 23
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 acquire, align 4
  %10 = icmp eq i32 %9, 3
  br i1 %10, label %11, label %42

11:                                               ; preds = %4
  %12 = load i64, i64* %5, align 8
  %13 = add i64 %12, 15
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, -25
  store i32 %16, i32* %14, align 4
  %17 = load i8, i8* @_ZN2v88internal14FLAG_turbopropE, align 1, !range !30
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %118, label %19

19:                                               ; preds = %11
  %20 = and i64 %1, -4294967296
  %21 = add i64 %1, 3
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = add i64 %25, 23
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = and i32 %28, 1
  %30 = icmp ne i32 %29, 0
  %31 = icmp ne i32 %28, 3
  %32 = and i1 %31, %30
  %33 = load i32, i32* @_ZN2v88internal21FLAG_interrupt_budgetE, align 4
  br i1 %32, label %34, label %39

34:                                               ; preds = %19
  %35 = load i32, i32* @_ZN2v88internal47FLAG_interrupt_budget_scale_factor_for_top_tierE, align 4
  %36 = mul nsw i32 %35, %33
  %37 = add i64 %1, 7
  %38 = inttoptr i64 %37 to i32*
  store i32 %36, i32* %38, align 4
  br label %118

39:                                               ; preds = %19
  %40 = add i64 %1, 7
  %41 = inttoptr i64 %40 to i32*
  store i32 %33, i32* %41, align 4
  br label %118

42:                                               ; preds = %4
  %43 = and i64 %6, -4294967296
  %44 = and i32 %9, -3
  %45 = zext i32 %44 to i64
  %46 = or i64 %43, %45
  %47 = add i64 %46, 15
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 acquire, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %43, %50
  %52 = add i64 %51, 7
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %118, label %57

57:                                               ; preds = %42
  tail call void @_ZN2v88internal11Deoptimizer32TraceEvictFromOptimizedCodeCacheENS0_18SharedFunctionInfoEPKc(i64 %2, i8* %3) #9
  %58 = load atomic i32, i32* %48 acquire, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %43, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %74

66:                                               ; preds = %57
  %67 = load atomic i32, i32* %48 acquire, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %43, %68
  %70 = add i64 %69, 7
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = or i32 %72, 4
  store atomic volatile i32 %73, i32* %71 monotonic, align 4
  br label %74

74:                                               ; preds = %57, %66
  %75 = load i64, i64* %5, align 8
  %76 = and i64 %75, -262144
  %77 = or i64 %76, 16
  %78 = inttoptr i64 %77 to i64*
  %79 = load i64, i64* %78, align 16
  %80 = add i64 %79, -41416
  %81 = inttoptr i64 %80 to %"class.v8::internal::Isolate"*
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %81, i64 0, i32 0, i32 4
  %83 = load i64, i64* %82, align 8
  %84 = and i64 %83, 4294967295
  %85 = icmp eq i64 %84, 0
  tail call void @llvm.assume(i1 %85) #9
  %86 = add i64 %75, 23
  %87 = inttoptr i64 %86 to i32*
  store atomic volatile i32 3, i32* %87 release, align 4
  %88 = load i64, i64* %5, align 8
  %89 = add i64 %88, 15
  %90 = inttoptr i64 %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %91, -25
  store i32 %92, i32* %90, align 4
  %93 = load i8, i8* @_ZN2v88internal14FLAG_turbopropE, align 1, !range !30
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %118, label %95

95:                                               ; preds = %74
  %96 = and i64 %1, -4294967296
  %97 = add i64 %1, 3
  %98 = inttoptr i64 %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %96, %100
  %102 = add i64 %101, 23
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 acquire, align 4
  %105 = and i32 %104, 1
  %106 = icmp ne i32 %105, 0
  %107 = icmp ne i32 %104, 3
  %108 = and i1 %107, %106
  %109 = load i32, i32* @_ZN2v88internal21FLAG_interrupt_budgetE, align 4
  br i1 %108, label %110, label %115

110:                                              ; preds = %95
  %111 = load i32, i32* @_ZN2v88internal47FLAG_interrupt_budget_scale_factor_for_top_tierE, align 4
  %112 = mul nsw i32 %111, %109
  %113 = add i64 %1, 7
  %114 = inttoptr i64 %113 to i32*
  store i32 %112, i32* %114, align 4
  br label %118

115:                                              ; preds = %95
  %116 = add i64 %1, 7
  %117 = inttoptr i64 %116 to i32*
  store i32 %109, i32* %117, align 4
  br label %118

118:                                              ; preds = %42, %74, %110, %115, %39, %34, %11
  ret void
}

declare void @_ZN2v88internal11Deoptimizer32TraceEvictFromOptimizedCodeCacheENS0_18SharedFunctionInfoEPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14FeedbackVector10ClearSlotsEPNS0_7IsolateE(%"class.v8::internal::FeedbackVector"* nocapture readonly, %"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.v8::internal::FeedbackNexus", align 8
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 19
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %7, %16
  %18 = add i64 %17, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %7, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp eq i16 %25, 166
  br i1 %26, label %27, label %133

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 508
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  store i64 %17, i64* %3, align 8
  %31 = add i64 %17, 3
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %129

35:                                               ; preds = %27
  %36 = trunc i64 %29 to i32
  %37 = bitcast %"class.v8::internal::FeedbackNexus"* %4 to i8*
  %38 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %4, i64 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %4, i64 0, i32 2, i32 0
  %41 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %union.anon.1198* %42 to i8*
  %44 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %4, i64 0, i32 5, i32 0
  %45 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %4, i64 0, i32 5, i32 1
  %46 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %4, i64 0, i32 3
  br label %47

47:                                               ; preds = %35, %121
  %48 = phi i64 [ %17, %35 ], [ %122, %121 ]
  %49 = phi i64 [ %17, %35 ], [ %123, %121 ]
  %50 = phi i8 [ 0, %35 ], [ %124, %121 ]
  %51 = phi i32 [ 0, %35 ], [ %68, %121 ]
  %52 = udiv i32 %51, 6
  %53 = shl nuw nsw i32 %52, 2
  %54 = add nuw i32 %53, 11
  %55 = zext i32 %54 to i64
  %56 = add i64 %49, %55
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = urem i32 %51, 6
  %60 = mul nuw nsw i32 %59, 5
  %61 = lshr i32 %58, %60
  %62 = trunc i32 %61 to i8
  %63 = and i8 %62, 31
  switch i8 %63, label %66 [
    i8 23, label %65
    i8 0, label %65
    i8 17, label %64
    i8 14, label %64
    i8 13, label %64
    i8 3, label %64
    i8 4, label %64
    i8 22, label %64
    i8 5, label %64
    i8 7, label %64
    i8 6, label %64
    i8 8, label %64
    i8 9, label %64
    i8 2, label %64
    i8 11, label %64
    i8 12, label %64
    i8 1, label %64
    i8 10, label %64
  ]

64:                                               ; preds = %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47
  br label %66

65:                                               ; preds = %47, %47
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #16
  unreachable

66:                                               ; preds = %47, %64
  %67 = phi i32 [ 2, %64 ], [ 1, %47 ]
  %68 = add nuw nsw i32 %67, %51
  %69 = load i64, i64* %5, align 8
  %70 = and i64 %69, -4294967296
  %71 = shl i32 %51, 2
  %72 = sext i32 %71 to i64
  %73 = add nsw i64 %72, 31
  %74 = add i64 %73, %69
  %75 = inttoptr i64 %74 to i32*
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = icmp eq i32 %76, %36
  br i1 %77, label %121, label %78

78:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %37) #9
  store i64* null, i64** %38, align 8
  store i64 %69, i64* %39, align 8
  store i32 %51, i32* %40, align 8
  store i8 0, i8* %41, align 8
  store i8 0, i8* %43, align 8
  %79 = trunc i64 %69 to i32
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  %82 = bitcast %"class.v8::internal::Isolate"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 16, i1 false) #9
  store i8 0, i8* %46, align 4
  br label %115

83:                                               ; preds = %78
  %84 = and i64 %69, -262144
  %85 = or i64 %84, 16
  %86 = inttoptr i64 %85 to i64*
  %87 = load i64, i64* %86, align 16
  %88 = add i64 %87, -41416
  %89 = inttoptr i64 %88 to %"class.v8::internal::Isolate"*
  store %"class.v8::internal::Isolate"* %89, %"class.v8::internal::Isolate"** %44, align 8
  store %"class.v8::internal::LocalHeap"* null, %"class.v8::internal::LocalHeap"** %45, align 8
  %90 = add i64 %69, 19
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %70, %93
  %95 = add i64 %94, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %70, %98
  %100 = add i64 %99, %55
  %101 = inttoptr i64 %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = lshr i32 %102, %60
  %104 = trunc i32 %103 to i8
  %105 = and i8 %104, 31
  store i8 %105, i8* %46, align 4
  switch i8 %105, label %116 [
    i8 23, label %115
    i8 0, label %115
    i8 22, label %108
    i8 17, label %108
    i8 19, label %106
    i8 2, label %108
    i8 11, label %108
    i8 3, label %108
    i8 13, label %108
    i8 14, label %108
    i8 12, label %108
    i8 5, label %108
    i8 8, label %108
    i8 9, label %108
    i8 1, label %108
    i8 10, label %108
    i8 6, label %108
    i8 7, label %108
    i8 4, label %108
    i8 21, label %108
  ]

106:                                              ; preds = %83
  store atomic volatile i32 0, i32* %75 release, align 4
  %107 = load i64, i64* %3, align 8
  br label %116

108:                                              ; preds = %83, %83, %83, %83, %83, %83, %83, %83, %83, %83, %83, %83, %83, %83, %83, %83, %83
  %109 = call i32 @_ZNK2v88internal13FeedbackNexus8ic_stateEv(%"class.v8::internal::FeedbackNexus"* nonnull %4) #9
  %110 = load i8, i8* @_ZN2v88internal11FLAG_use_icE, align 1, !range !30
  %111 = icmp eq i8 %110, 0
  %112 = icmp eq i32 %109, 1
  %113 = or i1 %112, %111
  br i1 %113, label %116, label %114

114:                                              ; preds = %108
  call void @_ZN2v88internal13FeedbackNexus22ConfigureUninitializedEv(%"class.v8::internal::FeedbackNexus"* nonnull %4) #9
  br label %116

115:                                              ; preds = %83, %83, %81
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #16
  unreachable

116:                                              ; preds = %83, %106, %108, %114
  %117 = phi i64 [ %48, %83 ], [ %107, %106 ], [ %48, %108 ], [ %48, %114 ]
  %118 = phi i8 [ 0, %83 ], [ 1, %106 ], [ 0, %108 ], [ 1, %114 ]
  %119 = and i8 %50, 1
  %120 = or i8 %118, %119
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %37) #9
  br label %121

121:                                              ; preds = %66, %116
  %122 = phi i64 [ %117, %116 ], [ %48, %66 ]
  %123 = phi i64 [ %117, %116 ], [ %49, %66 ]
  %124 = phi i8 [ %120, %116 ], [ %50, %66 ]
  %125 = add i64 %123, 3
  %126 = inttoptr i64 %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = icmp slt i32 %68, %127
  br i1 %128, label %47, label %129

129:                                              ; preds = %121, %27
  %130 = phi i8 [ 0, %27 ], [ %124, %121 ]
  %131 = and i8 %130, 1
  %132 = icmp ne i8 %131, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  br label %133

133:                                              ; preds = %2, %129
  %134 = phi i1 [ %132, %129 ], [ false, %2 ]
  ret i1 %134
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal13FeedbackNexus5ClearEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 4
  switch i8 %3, label %26 [
    i8 23, label %25
    i8 0, label %25
    i8 22, label %18
    i8 17, label %18
    i8 19, label %4
    i8 2, label %18
    i8 11, label %18
    i8 3, label %18
    i8 13, label %18
    i8 14, label %18
    i8 12, label %18
    i8 5, label %18
    i8 8, label %18
    i8 9, label %18
    i8 1, label %18
    i8 10, label %18
    i8 6, label %18
    i8 7, label %18
    i8 4, label %18
    i8 21, label %18
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %6, null
  %8 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = select i1 %7, i64* %8, i64* %6
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = shl i32 %12, 2
  %14 = sext i32 %13 to i64
  %15 = add i64 %10, 31
  %16 = add i64 %15, %14
  %17 = inttoptr i64 %16 to i32*
  store atomic volatile i32 0, i32* %17 release, align 4
  br label %26

18:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %19 = tail call i32 @_ZNK2v88internal13FeedbackNexus8ic_stateEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %20 = load i8, i8* @_ZN2v88internal11FLAG_use_icE, align 1, !range !30
  %21 = icmp eq i8 %20, 0
  %22 = icmp eq i32 %19, 1
  %23 = or i1 %22, %21
  br i1 %23, label %26, label %24

24:                                               ; preds = %18
  tail call void @_ZN2v88internal13FeedbackNexus22ConfigureUninitializedEv(%"class.v8::internal::FeedbackNexus"* %0)
  br label %26

25:                                               ; preds = %1, %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #16
  unreachable

26:                                               ; preds = %18, %24, %1, %4
  %27 = phi i1 [ false, %1 ], [ true, %4 ], [ false, %18 ], [ true, %24 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden { i32, i64* } @_ZNK2v88internal11NexusConfig9NewHandleENS0_11MaybeObjectE(%"class.v8::internal::NexusConfig"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::NexusConfig", %"class.v8::internal::NexusConfig"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3, align 8
  %5 = icmp eq %"class.v8::internal::LocalHeap"* %4, null
  br i1 %5, label %6, label %59

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::NexusConfig", %"class.v8::internal::NexusConfig"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = and i64 %1, 3
  %10 = icmp eq i64 %9, 3
  %11 = trunc i64 %1 to i32
  %12 = icmp ne i32 %11, 3
  %13 = and i1 %10, %12
  br i1 %13, label %14, label %35

14:                                               ; preds = %6
  %15 = and i64 %1, -3
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %17 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %16, align 8
  %18 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %17, i64 %15) #9
  %21 = ptrtoint i64* %20 to i64
  br label %55

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = icmp eq i64* %24, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #9
  br label %30

30:                                               ; preds = %28, %22
  %31 = phi i64* [ %29, %28 ], [ %24, %22 ]
  %32 = ptrtoint i64* %31 to i64
  %33 = add i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  store i64* %34, i64** %23, align 8
  store i64 %15, i64* %31, align 8
  br label %55

35:                                               ; preds = %6
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %37 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %36, align 8
  %38 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %37, i64 %1) #9
  %41 = ptrtoint i64* %40 to i64
  br label %55

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = icmp eq i64* %44, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %42
  %49 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #9
  br label %50

50:                                               ; preds = %48, %42
  %51 = phi i64* [ %49, %48 ], [ %44, %42 ]
  %52 = ptrtoint i64* %51 to i64
  %53 = add i64 %52, 8
  %54 = inttoptr i64 %53 to i64*
  store i64* %54, i64** %43, align 8
  store i64 %1, i64* %51, align 8
  br label %55

55:                                               ; preds = %19, %30, %39, %50
  %56 = phi i64 [ %21, %19 ], [ %32, %30 ], [ %41, %39 ], [ %52, %50 ]
  %57 = phi i32 [ 0, %19 ], [ 0, %30 ], [ 1, %39 ], [ 1, %50 ]
  %58 = inttoptr i64 %56 to i64*
  br label %108

59:                                               ; preds = %2
  %60 = and i64 %1, 3
  %61 = icmp eq i64 %60, 3
  %62 = trunc i64 %1 to i32
  %63 = icmp ne i32 %62, 3
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %87

65:                                               ; preds = %59
  %66 = and i64 %1, -3
  %67 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4, i64 0, i32 1
  %68 = load i8, i8* %67, align 8, !range !30
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* nonnull %4, i64 %66) #9
  br label %108

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4, i64 0, i32 7, i32 0, i32 0, i32 0
  %74 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %74, i64 0, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %74, i64 0, i32 0, i32 1
  %78 = load i64*, i64** %77, align 8
  %79 = icmp eq i64* %76, %78
  br i1 %79, label %80, label %83

80:                                               ; preds = %72
  %81 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %74) #9
  %82 = load i64*, i64** %75, align 8
  br label %83

83:                                               ; preds = %80, %72
  %84 = phi i64* [ %82, %80 ], [ %76, %72 ]
  %85 = phi i64* [ %81, %80 ], [ %76, %72 ]
  %86 = getelementptr inbounds i64, i64* %84, i64 1
  store i64* %86, i64** %75, align 8
  store i64 %66, i64* %85, align 8
  br label %108

87:                                               ; preds = %59
  %88 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4, i64 0, i32 1
  %89 = load i8, i8* %88, align 8, !range !30
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  %92 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* nonnull %4, i64 %1) #9
  br label %108

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4, i64 0, i32 7, i32 0, i32 0, i32 0
  %95 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %95, i64 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %95, i64 0, i32 0, i32 1
  %99 = load i64*, i64** %98, align 8
  %100 = icmp eq i64* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %93
  %102 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %95) #9
  %103 = load i64*, i64** %96, align 8
  br label %104

104:                                              ; preds = %101, %93
  %105 = phi i64* [ %103, %101 ], [ %97, %93 ]
  %106 = phi i64* [ %102, %101 ], [ %97, %93 ]
  %107 = getelementptr inbounds i64, i64* %105, i64 1
  store i64* %107, i64** %96, align 8
  store i64 %1, i64* %106, align 8
  br label %108

108:                                              ; preds = %104, %91, %83, %70, %55
  %109 = phi i32 [ %57, %55 ], [ 0, %70 ], [ 0, %83 ], [ 1, %91 ], [ 1, %104 ]
  %110 = phi i64* [ %58, %55 ], [ %71, %70 ], [ %85, %83 ], [ %92, %91 ], [ %106, %104 ]
  %111 = insertvalue { i32, i64* } undef, i32 %109, 0
  %112 = insertvalue { i32, i64* } %111, i64* %110, 1
  ret { i32, i64* } %112
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal11NexusConfig15SetFeedbackPairENS0_14FeedbackVectorENS0_12FeedbackSlotENS0_11MaybeObjectENS0_16WriteBarrierModeES4_S5_(%"class.v8::internal::NexusConfig"* nocapture readonly, i64, i32, i64, i32, i64, i32) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.v8::internal::NexusConfig", %"class.v8::internal::NexusConfig"* %0, i64 0, i32 1
  %9 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %8, align 8
  %10 = icmp eq %"class.v8::internal::LocalHeap"* %9, null
  br i1 %10, label %12, label %11, !prof !29

11:                                               ; preds = %7
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0)) #16
  unreachable

12:                                               ; preds = %7
  %13 = add i64 %1, 3
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %2, 1
  %17 = icmp sgt i32 %15, %16
  br i1 %17, label %19, label %18, !prof !29

18:                                               ; preds = %12
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27, i64 0, i64 0)) #16
  unreachable

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.v8::internal::NexusConfig", %"class.v8::internal::NexusConfig"* %0, i64 0, i32 0
  %21 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 16
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %22) #9
  %23 = shl i32 %2, 2
  %24 = sext i32 %23 to i64
  %25 = add i64 %1, 31
  %26 = add i64 %25, %24
  %27 = inttoptr i64 %26 to i32*
  %28 = trunc i64 %3 to i32
  store atomic volatile i32 %28, i32* %27 monotonic, align 4
  switch i32 %4, label %29 [
    i32 0, label %69
    i32 4, label %31
  ]

29:                                               ; preds = %19
  %30 = and i64 %3, 1
  br label %48

31:                                               ; preds = %19
  %32 = and i64 %3, 1
  %33 = icmp ne i64 %32, 0
  %34 = icmp ne i32 %28, 3
  %35 = and i1 %34, %33
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = and i64 %1, -262144
  %38 = or i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 262144
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %36
  %44 = and i64 %3, -3
  %45 = or i64 %37, 16
  %46 = inttoptr i64 %45 to %"class.v8::internal::Heap"**
  %47 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %46, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %47, i64 %1, i64 %26, i64 %44) #9
  br label %48

48:                                               ; preds = %43, %36, %31, %29
  %49 = phi i64 [ %30, %29 ], [ 1, %43 ], [ 1, %36 ], [ %32, %31 ]
  %50 = icmp ne i64 %49, 0
  %51 = icmp ne i32 %28, 3
  %52 = and i1 %51, %50
  br i1 %52, label %53, label %69

53:                                               ; preds = %48
  %54 = and i64 %3, -3
  %55 = and i64 %3, -262144
  %56 = or i64 %55, 8
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 24
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %53
  %62 = and i64 %1, -262144
  %63 = or i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 24
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %61
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1, i64 %26, i64 %54) #9
  br label %69

69:                                               ; preds = %19, %48, %53, %61, %68
  %70 = shl i32 %16, 2
  %71 = sext i32 %70 to i64
  %72 = add i64 %25, %71
  %73 = inttoptr i64 %72 to i32*
  %74 = trunc i64 %5 to i32
  store atomic volatile i32 %74, i32* %73 monotonic, align 4
  switch i32 %6, label %75 [
    i32 0, label %115
    i32 4, label %77
  ]

75:                                               ; preds = %69
  %76 = and i64 %5, 1
  br label %94

77:                                               ; preds = %69
  %78 = and i64 %5, 1
  %79 = icmp ne i64 %78, 0
  %80 = icmp ne i32 %74, 3
  %81 = and i1 %80, %79
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = and i64 %1, -262144
  %84 = or i64 %83, 8
  %85 = inttoptr i64 %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = and i64 %86, 262144
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %82
  %90 = and i64 %5, -3
  %91 = or i64 %83, 16
  %92 = inttoptr i64 %91 to %"class.v8::internal::Heap"**
  %93 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %92, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %93, i64 %1, i64 %72, i64 %90) #9
  br label %94

94:                                               ; preds = %89, %82, %77, %75
  %95 = phi i64 [ %76, %75 ], [ 1, %89 ], [ 1, %82 ], [ %78, %77 ]
  %96 = icmp ne i64 %95, 0
  %97 = icmp ne i32 %74, 3
  %98 = and i1 %97, %96
  br i1 %98, label %99, label %115

99:                                               ; preds = %94
  %100 = and i64 %5, -3
  %101 = and i64 %5, -262144
  %102 = or i64 %101, 8
  %103 = inttoptr i64 %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = and i64 %104, 24
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %115, label %107

107:                                              ; preds = %99
  %108 = and i64 %1, -262144
  %109 = or i64 %108, 8
  %110 = inttoptr i64 %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, 24
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %107
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1, i64 %72, i64 %100) #9
  br label %115

115:                                              ; preds = %69, %94, %99, %107, %114
  tail call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %22) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2v88internal11NexusConfig15GetFeedbackPairENS0_14FeedbackVectorENS0_12FeedbackSlotE(%"class.v8::internal::NexusConfig"* nocapture readonly, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::NexusConfig", %"class.v8::internal::NexusConfig"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 16
  %7 = getelementptr inbounds %"class.v8::internal::NexusConfig", %"class.v8::internal::NexusConfig"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %7, align 8
  %9 = icmp eq %"class.v8::internal::LocalHeap"* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %3
  tail call void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"* %6) #9
  br label %11

11:                                               ; preds = %3, %10
  %12 = phi i1 [ false, %10 ], [ true, %3 ]
  %13 = phi %"class.v8::base::SharedMutex"* [ %6, %10 ], [ null, %3 ]
  %14 = and i64 %1, -4294967296
  %15 = shl i32 %2, 2
  %16 = sext i32 %15 to i64
  %17 = add i64 %1, 31
  %18 = add i64 %17, %16
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %14, %21
  %23 = add i32 %15, 4
  %24 = sext i32 %23 to i64
  %25 = add i64 %17, %24
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %14, %28
  %30 = insertvalue { i64, i64 } undef, i64 %22, 0
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1
  br i1 %12, label %33, label %32

32:                                               ; preds = %11
  tail call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %13) #9
  br label %33

33:                                               ; preds = %11, %32
  ret { i64, i64 } %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13FeedbackNexusC2ENS0_6HandleINS0_14FeedbackVectorEEENS0_12FeedbackSlotE(%"class.v8::internal::FeedbackNexus"* nocapture, i64*, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::FeedbackNexus"* %0 to i64*
  %5 = ptrtoint i64* %1 to i64
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %union.anon.1198* %9 to i8*
  store i8 0, i8* %10, align 8
  %11 = icmp eq i64* %1, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 0
  %14 = bitcast %"class.v8::internal::Isolate"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false)
  br label %49

15:                                               ; preds = %3
  %16 = load i64, i64* %1, align 8
  %17 = and i64 %16, -262144
  %18 = or i64 %17, 16
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 16
  %21 = add i64 %20, -41416
  %22 = inttoptr i64 %21 to %"class.v8::internal::Isolate"*
  %23 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 0
  store %"class.v8::internal::Isolate"* %22, %"class.v8::internal::Isolate"** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 1
  store %"class.v8::internal::LocalHeap"* null, %"class.v8::internal::LocalHeap"** %24, align 8
  %25 = load i64, i64* %1, align 8
  %26 = and i64 %25, -4294967296
  %27 = add i64 %25, 19
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %26, %30
  %32 = add i64 %31, 11
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %26, %35
  %37 = sdiv i32 %2, 6
  %38 = shl nsw i32 %37, 2
  %39 = sext i32 %38 to i64
  %40 = add nsw i64 %39, 11
  %41 = add i64 %40, %36
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = srem i32 %2, 6
  %45 = mul nsw i32 %44, 5
  %46 = lshr i32 %43, %45
  %47 = trunc i32 %46 to i8
  %48 = and i8 %47, 31
  br label %49

49:                                               ; preds = %12, %15
  %50 = phi i8 [ %48, %15 ], [ 0, %12 ]
  %51 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 3
  store i8 %50, i8* %51, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal13FeedbackNexusC2ENS0_14FeedbackVectorENS0_12FeedbackSlotE(%"class.v8::internal::FeedbackNexus"* nocapture, i64, i32) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon.1198* %8 to i8*
  store i8 0, i8* %9, align 8
  %10 = trunc i64 %1 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 0
  %14 = bitcast %"class.v8::internal::Isolate"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false)
  br label %47

15:                                               ; preds = %3
  %16 = and i64 %1, -262144
  %17 = or i64 %16, 16
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 16
  %20 = add i64 %19, -41416
  %21 = inttoptr i64 %20 to %"class.v8::internal::Isolate"*
  %22 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 0
  store %"class.v8::internal::Isolate"* %21, %"class.v8::internal::Isolate"** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 1
  store %"class.v8::internal::LocalHeap"* null, %"class.v8::internal::LocalHeap"** %23, align 8
  %24 = and i64 %1, -4294967296
  %25 = add i64 %1, 19
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = add i64 %29, 11
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %24, %33
  %35 = sdiv i32 %2, 6
  %36 = shl nsw i32 %35, 2
  %37 = sext i32 %36 to i64
  %38 = add nsw i64 %37, 11
  %39 = add i64 %38, %34
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = srem i32 %2, 6
  %43 = mul nsw i32 %42, 5
  %44 = lshr i32 %41, %43
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 31
  br label %47

47:                                               ; preds = %12, %15
  %48 = phi i8 [ %46, %15 ], [ 0, %12 ]
  %49 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 3
  store i8 %48, i8* %49, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13FeedbackNexusC2ENS0_6HandleINS0_14FeedbackVectorEEENS0_12FeedbackSlotERKNS0_11NexusConfigE(%"class.v8::internal::FeedbackNexus"* nocapture, i64*, i32, %"class.v8::internal::NexusConfig"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.v8::internal::FeedbackNexus"* %0 to i64*
  %6 = ptrtoint i64* %1 to i64
  store i64 %6, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 3
  %10 = load i64, i64* %1, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, 19
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 11
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %11, %20
  %22 = sdiv i32 %2, 6
  %23 = shl nsw i32 %22, 2
  %24 = sext i32 %23 to i64
  %25 = add nsw i64 %24, 11
  %26 = add i64 %25, %21
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = srem i32 %2, 6
  %30 = mul nsw i32 %29, 5
  %31 = lshr i32 %28, %30
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 31
  store i8 %33, i8* %9, align 4
  %34 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %union.anon.1198* %35 to i8*
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %38 = bitcast %"class.v8::internal::NexusConfig"* %37 to i8*
  %39 = bitcast %"class.v8::internal::NexusConfig"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13FeedbackNexus17CreateArrayOfSizeEi(%"class.v8::internal::FeedbackNexus"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  %6 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = select i1 %5, i64* %6, i64* %4
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -262144
  %10 = or i64 %9, 16
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 16
  %13 = add i64 %12, -41416
  %14 = inttoptr i64 %13 to %"class.v8::internal::FactoryBase"*
  %15 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %14, i32 %1, i8 zeroext 0) #9
  ret i64* %15
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13FeedbackNexus22ConfigureUninitializedEv(%"class.v8::internal::FeedbackNexus"* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = select i1 %4, i64* %5, i64* %3
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -262144
  %9 = or i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 16
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 3
  %15 = load i8, i8* %14, align 4
  switch i8 %15, label %121 [
    i8 1, label %16
    i8 10, label %16
    i8 6, label %16
    i8 7, label %16
    i8 22, label %50
    i8 4, label %50
    i8 21, label %80
    i8 2, label %91
    i8 11, label %91
    i8 3, label %91
    i8 13, label %91
    i8 14, label %91
    i8 12, label %91
    i8 5, label %91
    i8 8, label %91
    i8 9, label %91
    i8 17, label %91
  ]

16:                                               ; preds = %1, %1, %1, %1
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 4294967295
  %20 = icmp eq i64 %19, 0
  tail call void @llvm.assume(i1 %20) #9
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 508
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 1
  %26 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %25, align 8
  %27 = icmp eq %"class.v8::internal::LocalHeap"* %26, null
  br i1 %27, label %29, label %28, !prof !29

28:                                               ; preds = %16
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0)) #16
  unreachable

29:                                               ; preds = %16
  %30 = add i64 %7, 3
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %24, 1
  %34 = icmp sgt i32 %32, %33
  br i1 %34, label %36, label %35, !prof !29

35:                                               ; preds = %29
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27, i64 0, i64 0)) #16
  unreachable

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %38, i64 0, i32 16
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %39) #9
  %40 = shl i32 %24, 2
  %41 = sext i32 %40 to i64
  %42 = add i64 %7, 31
  %43 = add i64 %42, %41
  %44 = inttoptr i64 %43 to i32*
  store atomic volatile i32 3, i32* %44 monotonic, align 4
  %45 = shl i32 %33, 2
  %46 = sext i32 %45 to i64
  %47 = add i64 %42, %46
  %48 = inttoptr i64 %47 to i32*
  %49 = trunc i64 %22 to i32
  store atomic volatile i32 %49, i32* %48 monotonic, align 4
  tail call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %39) #9
  br label %122

50:                                               ; preds = %1, %1
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 508
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 1
  %56 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %55, align 8
  %57 = icmp eq %"class.v8::internal::LocalHeap"* %56, null
  br i1 %57, label %59, label %58, !prof !29

58:                                               ; preds = %50
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0)) #16
  unreachable

59:                                               ; preds = %50
  %60 = add i64 %7, 3
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = add nsw i32 %54, 1
  %64 = icmp sgt i32 %62, %63
  br i1 %64, label %66, label %65, !prof !29

65:                                               ; preds = %59
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27, i64 0, i64 0)) #16
  unreachable

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 0
  %68 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %68, i64 0, i32 16
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %69) #9
  %70 = shl i32 %54, 2
  %71 = sext i32 %70 to i64
  %72 = add i64 %7, 31
  %73 = add i64 %72, %71
  %74 = inttoptr i64 %73 to i32*
  %75 = trunc i64 %52 to i32
  store atomic volatile i32 %75, i32* %74 monotonic, align 4
  %76 = shl i32 %63, 2
  %77 = sext i32 %76 to i64
  %78 = add i64 %72, %77
  %79 = inttoptr i64 %78 to i32*
  store atomic volatile i32 0, i32* %79 monotonic, align 4
  tail call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %69) #9
  br label %122

80:                                               ; preds = %1
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 508
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = shl i32 %84, 2
  %86 = sext i32 %85 to i64
  %87 = add i64 %7, 31
  %88 = add i64 %87, %86
  %89 = inttoptr i64 %88 to i32*
  %90 = trunc i64 %82 to i32
  store atomic volatile i32 %90, i32* %89 release, align 4
  br label %122

91:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 508
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 1
  %97 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %96, align 8
  %98 = icmp eq %"class.v8::internal::LocalHeap"* %97, null
  br i1 %98, label %100, label %99, !prof !29

99:                                               ; preds = %91
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0)) #16
  unreachable

100:                                              ; preds = %91
  %101 = add i64 %7, 3
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = add nsw i32 %95, 1
  %105 = icmp sgt i32 %103, %104
  br i1 %105, label %107, label %106, !prof !29

106:                                              ; preds = %100
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27, i64 0, i64 0)) #16
  unreachable

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 0
  %109 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %109, i64 0, i32 16
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %110) #9
  %111 = shl i32 %95, 2
  %112 = sext i32 %111 to i64
  %113 = add i64 %7, 31
  %114 = add i64 %113, %112
  %115 = inttoptr i64 %114 to i32*
  %116 = trunc i64 %93 to i32
  store atomic volatile i32 %116, i32* %115 monotonic, align 4
  %117 = shl i32 %104, 2
  %118 = sext i32 %117 to i64
  %119 = add i64 %113, %118
  %120 = inttoptr i64 %119 to i32*
  store atomic volatile i32 %116, i32* %120 monotonic, align 4
  tail call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %110) #9
  br label %122

121:                                              ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #16
  unreachable

122:                                              ; preds = %107, %80, %66, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal13FeedbackNexus20ConfigureMegamorphicEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = select i1 %4, i64* %5, i64* %3
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -262144
  %9 = or i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 16
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 488
  %15 = load i64, i64* %14, align 8
  %16 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %17 = extractvalue { i64, i64 } %16, 0
  %18 = trunc i64 %17 to i32
  %19 = trunc i64 %15 to i32
  %20 = icmp eq i32 %18, %19
  br i1 %20, label %34, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 4
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 4294967295
  %25 = icmp eq i64 %24, 0
  tail call void @llvm.assume(i1 %25) #9
  %26 = or i64 %23, 3
  %27 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %28 = load i64*, i64** %2, align 8
  %29 = icmp eq i64* %28, null
  %30 = select i1 %29, i64* %5, i64* %28
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %33 = load i32, i32* %32, align 8
  tail call void @_ZNK2v88internal11NexusConfig15SetFeedbackPairENS0_14FeedbackVectorENS0_12FeedbackSlotENS0_11MaybeObjectENS0_16WriteBarrierModeES4_S5_(%"class.v8::internal::NexusConfig"* %27, i64 %31, i32 %33, i64 %15, i32 0, i64 %26, i32 4) #9
  br label %34

34:                                               ; preds = %1, %21
  %35 = phi i1 [ true, %21 ], [ false, %1 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13FeedbackNexus16ConfigureMegaDOMERKNS0_17MaybeObjectHandleE(%"class.v8::internal::FeedbackNexus"* nocapture readonly, %"class.v8::internal::MaybeObjectHandle"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  %6 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = select i1 %5, i64* %6, i64* %4
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -262144
  %10 = or i64 %9, 16
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 16
  %13 = add i64 %12, -41416
  %14 = inttoptr i64 %13 to %"class.v8::internal::Isolate"*
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 7, i32 0, i64 487
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %1, i64 0, i32 1, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %21, null
  br i1 %19, label %23, label %28

23:                                               ; preds = %2
  br i1 %22, label %24, label %25, !prof !2

24:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

25:                                               ; preds = %23
  %26 = load i64, i64* %21, align 8
  %27 = or i64 %26, 2
  br label %32

28:                                               ; preds = %2
  br i1 %22, label %29, label %30, !prof !2

29:                                               ; preds = %28
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

30:                                               ; preds = %28
  %31 = load i64, i64* %21, align 8
  br label %32

32:                                               ; preds = %25, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ]
  %34 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %36 = load i32, i32* %35, align 8
  tail call void @_ZNK2v88internal11NexusConfig15SetFeedbackPairENS0_14FeedbackVectorENS0_12FeedbackSlotENS0_11MaybeObjectENS0_16WriteBarrierModeES4_S5_(%"class.v8::internal::NexusConfig"* %34, i64 %8, i32 %36, i64 %16, i32 0, i64 %33, i32 4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal13FeedbackNexus20ConfigureMegamorphicENS0_11IcCheckTypeE(%"class.v8::internal::FeedbackNexus"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  %6 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = select i1 %5, i64* %6, i64* %4
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -262144
  %10 = or i64 %9, 16
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 16
  %13 = add i64 %12, -41416
  %14 = inttoptr i64 %13 to %"class.v8::internal::Isolate"*
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 7, i32 0, i64 488
  %16 = load i64, i64* %15, align 8
  %17 = sext i32 %1 to i64
  %18 = shl nsw i64 %17, 1
  %19 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0)
  %20 = extractvalue { i64, i64 } %19, 0
  %21 = trunc i64 %20 to i32
  %22 = trunc i64 %16 to i32
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %24, label %29

24:                                               ; preds = %2
  %25 = extractvalue { i64, i64 } %19, 1
  %26 = trunc i64 %25 to i32
  %27 = trunc i64 %18 to i32
  %28 = icmp eq i32 %26, %27
  br i1 %28, label %61, label %29

29:                                               ; preds = %24, %2
  %30 = load i64*, i64** %3, align 8
  %31 = icmp eq i64* %30, null
  %32 = select i1 %31, i64* %6, i64* %30
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 1
  %37 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %36, align 8
  %38 = icmp eq %"class.v8::internal::LocalHeap"* %37, null
  br i1 %38, label %40, label %39, !prof !29

39:                                               ; preds = %29
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0)) #16
  unreachable

40:                                               ; preds = %29
  %41 = add i64 %33, 3
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %35, 1
  %45 = icmp sgt i32 %43, %44
  br i1 %45, label %47, label %46, !prof !29

46:                                               ; preds = %40
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27, i64 0, i64 0)) #16
  unreachable

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 0
  %49 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %49, i64 0, i32 16
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %50) #9
  %51 = shl i32 %35, 2
  %52 = sext i32 %51 to i64
  %53 = add i64 %33, 31
  %54 = add i64 %53, %52
  %55 = inttoptr i64 %54 to i32*
  store atomic volatile i32 %22, i32* %55 monotonic, align 4
  %56 = shl i32 %44, 2
  %57 = sext i32 %56 to i64
  %58 = add i64 %53, %57
  %59 = inttoptr i64 %58 to i32*
  %60 = trunc i64 %18 to i32
  store atomic volatile i32 %60, i32* %59 monotonic, align 4
  tail call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %50) #9
  br label %61

61:                                               ; preds = %24, %47
  %62 = phi i1 [ true, %47 ], [ false, %24 ]
  ret i1 %62
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 1
  %4 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3, align 8
  %5 = icmp eq %"class.v8::internal::LocalHeap"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !30
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %49, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %12, null
  br i1 %13, label %14, label %22

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 0
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 4294967295
  %20 = icmp eq i64 %19, 0
  tail call void @llvm.assume(i1 %20) #9
  %21 = or i64 %18, 3
  br label %29

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  %26 = load i64, i64* %12, align 8
  %27 = or i64 %26, 2
  %28 = select i1 %25, i64 %27, i64 %26
  br label %29

29:                                               ; preds = %22, %14
  %30 = phi i64 [ %21, %14 ], [ %28, %22 ]
  %31 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = icmp eq i64* %32, null
  br i1 %33, label %34, label %42

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 0
  %36 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %36, i64 0, i32 0, i32 4
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 4294967295
  %40 = icmp eq i64 %39, 0
  tail call void @llvm.assume(i1 %40) #9
  %41 = or i64 %38, 3
  br label %134

42:                                               ; preds = %29
  %43 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  %46 = load i64, i64* %32, align 8
  %47 = or i64 %46, 2
  %48 = select i1 %45, i64 %47, i64 %46
  br label %134

49:                                               ; preds = %6, %1
  %50 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 3
  %51 = load i8, i8* %50, align 4
  switch i8 %51, label %54 [
    i8 23, label %53
    i8 0, label %53
    i8 17, label %52
    i8 14, label %52
    i8 13, label %52
    i8 3, label %52
    i8 4, label %52
    i8 22, label %52
    i8 5, label %52
    i8 7, label %52
    i8 6, label %52
    i8 8, label %52
    i8 9, label %52
    i8 2, label %52
    i8 11, label %52
    i8 12, label %52
    i8 1, label %52
    i8 10, label %52
  ]

52:                                               ; preds = %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49
  br label %54

53:                                               ; preds = %49, %49
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #16
  unreachable

54:                                               ; preds = %49, %52
  %55 = phi i1 [ true, %52 ], [ false, %49 ]
  %56 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = icmp eq i64* %57, null
  %59 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = select i1 %58, i64* %59, i64* %57
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %63 = load i32, i32* %62, align 8
  br i1 %55, label %64, label %89

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.v8::internal::NexusConfig", %"class.v8::internal::NexusConfig"* %2, i64 0, i32 0
  %66 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %66, i64 0, i32 16
  br i1 %5, label %69, label %68

68:                                               ; preds = %64
  tail call void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"* %67) #9
  br label %69

69:                                               ; preds = %68, %64
  %70 = phi i1 [ false, %68 ], [ true, %64 ]
  %71 = phi %"class.v8::base::SharedMutex"* [ %67, %68 ], [ null, %64 ]
  %72 = and i64 %61, -4294967296
  %73 = shl i32 %63, 2
  %74 = sext i32 %73 to i64
  %75 = add i64 %61, 31
  %76 = add i64 %75, %74
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %72, %79
  %81 = add i32 %73, 4
  %82 = sext i32 %81 to i64
  %83 = add i64 %75, %82
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %72, %86
  br i1 %70, label %99, label %88

88:                                               ; preds = %69
  tail call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %71) #9
  br label %99

89:                                               ; preds = %54
  %90 = shl i32 %63, 2
  %91 = sext i32 %90 to i64
  %92 = add i64 %61, 31
  %93 = add i64 %92, %91
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 acquire, align 4
  %96 = and i64 %61, -4294967296
  %97 = zext i32 %95 to i64
  %98 = or i64 %96, %97
  br label %99

99:                                               ; preds = %88, %69, %89
  %100 = phi i64 [ %98, %89 ], [ %80, %69 ], [ %80, %88 ]
  %101 = phi i64 [ 0, %89 ], [ %87, %69 ], [ %87, %88 ]
  %102 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3, align 8
  %103 = icmp eq %"class.v8::internal::LocalHeap"* %102, null
  br i1 %103, label %134, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %106 = load i8, i8* %105, align 8, !range !30
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %134

108:                                              ; preds = %104
  %109 = trunc i64 %100 to i32
  %110 = icmp eq i32 %109, 3
  br i1 %110, label %115, label %111

111:                                              ; preds = %108
  %112 = tail call { i32, i64* } @_ZNK2v88internal11NexusConfig9NewHandleENS0_11MaybeObjectE(%"class.v8::internal::NexusConfig"* %2, i64 %100) #9
  %113 = extractvalue { i32, i64* } %112, 0
  %114 = extractvalue { i32, i64* } %112, 1
  br label %115

115:                                              ; preds = %108, %111
  %116 = phi i32 [ %113, %111 ], [ 1, %108 ]
  %117 = phi i64* [ %114, %111 ], [ null, %108 ]
  %118 = trunc i64 %101 to i32
  %119 = icmp eq i32 %118, 3
  br i1 %119, label %124, label %120

120:                                              ; preds = %115
  %121 = tail call { i32, i64* } @_ZNK2v88internal11NexusConfig9NewHandleENS0_11MaybeObjectE(%"class.v8::internal::NexusConfig"* %2, i64 %101) #9
  %122 = extractvalue { i32, i64* } %121, 0
  %123 = extractvalue { i32, i64* } %121, 1
  br label %124

124:                                              ; preds = %115, %120
  %125 = phi i32 [ %122, %120 ], [ 1, %115 ]
  %126 = phi i64* [ %123, %120 ], [ null, %115 ]
  %127 = load i8, i8* %105, align 8, !range !30
  %128 = icmp eq i8 %127, 0
  %129 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 %116, i32* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store i64* %117, i64** %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  store i32 %125, i32* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1, i32 0
  store i64* %126, i64** %132, align 8
  br i1 %128, label %133, label %134

133:                                              ; preds = %124
  store i8 1, i8* %105, align 8
  br label %134

134:                                              ; preds = %124, %34, %42, %104, %99, %133
  %135 = phi i64 [ %100, %104 ], [ %100, %99 ], [ %100, %133 ], [ %30, %42 ], [ %30, %34 ], [ %100, %124 ]
  %136 = phi i64 [ %101, %104 ], [ %101, %99 ], [ %101, %133 ], [ %48, %42 ], [ %41, %34 ], [ %101, %124 ]
  %137 = insertvalue { i64, i64 } undef, i64 %135, 0
  %138 = insertvalue { i64, i64 } %137, i64 %136, 1
  ret { i64, i64 } %138
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal13FeedbackNexus11GetFirstMapEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::FeedbackIterator", align 8
  %3 = bitcast %"class.v8::internal::FeedbackIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #9
  call void @_ZN2v88internal16FeedbackIteratorC2EPKNS0_13FeedbackNexusE(%"class.v8::internal::FeedbackIterator"* nonnull %2, %"class.v8::internal::FeedbackNexus"* %0)
  %4 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %2, i64 0, i32 3
  %5 = load i8, i8* %4, align 8, !range !30
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = select i1 %6, i64 %8, i64 0
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #9
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal13FeedbackNexus8ic_stateEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4
  switch i8 %6, label %293 [
    i8 19, label %7
    i8 1, label %11
    i8 10, label %11
    i8 6, label %11
    i8 7, label %11
    i8 2, label %36
    i8 11, label %36
    i8 3, label %36
    i8 13, label %36
    i8 14, label %36
    i8 12, label %36
    i8 5, label %36
    i8 8, label %36
    i8 9, label %36
    i8 4, label %93
    i8 15, label %162
    i8 16, label %169
    i8 20, label %189
    i8 21, label %196
    i8 17, label %220
    i8 18, label %242
    i8 22, label %261
    i8 0, label %288
    i8 23, label %288
  ]

7:                                                ; preds = %1
  %8 = and i64 %3, 1
  %9 = icmp eq i64 %8, 0
  %10 = select i1 %9, i32 1, i32 2
  br label %293

11:                                               ; preds = %1, %1, %1, %1
  %12 = and i64 %3, 1
  %13 = icmp ne i64 %12, 0
  %14 = trunc i64 %3 to i32
  %15 = icmp eq i32 %14, 3
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %293

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %19, null
  %21 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = select i1 %20, i64* %21, i64* %19
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, -262144
  %25 = or i64 %24, 16
  %26 = inttoptr i64 %25 to i64*
  %27 = load i64, i64* %26, align 16
  %28 = add i64 %27, -41416
  %29 = inttoptr i64 %28 to %"class.v8::internal::Isolate"*
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 0, i32 7, i32 0, i64 508
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %4 to i32
  %33 = trunc i64 %31 to i32
  %34 = icmp eq i32 %32, %33
  %35 = select i1 %34, i32 1, i32 2
  br label %293

36:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1
  %37 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = icmp eq i64* %38, null
  %40 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = select i1 %39, i64* %40, i64* %38
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, -262144
  %44 = or i64 %43, 16
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 16
  %47 = add i64 %46, -41416
  %48 = inttoptr i64 %47 to %"class.v8::internal::Isolate"*
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 0, i32 7, i32 0, i64 508
  %50 = load i64, i64* %49, align 8
  %51 = trunc i64 %3 to i32
  %52 = trunc i64 %50 to i32
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %293, label %54

54:                                               ; preds = %36
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 0, i32 7, i32 0, i64 488
  %56 = load i64, i64* %55, align 8
  %57 = trunc i64 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %293, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 0, i32 7, i32 0, i64 487
  %61 = load i64, i64* %60, align 8
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %51, %62
  br i1 %63, label %293, label %64

64:                                               ; preds = %59
  %65 = and i64 %3, 3
  switch i64 %65, label %92 [
    i64 3, label %293
    i64 1, label %66
  ]

66:                                               ; preds = %64
  %67 = and i64 %3, -4294967296
  %68 = add i64 %3, -1
  %69 = inttoptr i64 %68 to i32*
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %67, %71
  %73 = add i64 %72, 7
  %74 = inttoptr i64 %73 to i16*
  %75 = load atomic i16, i16* %74 monotonic, align 2
  %76 = add i16 %75, -159
  %77 = icmp ult i16 %76, 2
  br i1 %77, label %293, label %78

78:                                               ; preds = %66
  %79 = load atomic i32, i32* %69 monotonic, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %67, %80
  %82 = add i64 %81, 7
  %83 = inttoptr i64 %82 to i16*
  %84 = load atomic i16, i16* %83 monotonic, align 2
  %85 = icmp ult i16 %84, 65
  br i1 %85, label %86, label %92

86:                                               ; preds = %78
  %87 = add i64 %4, 3
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = icmp sgt i32 %89, 5
  %91 = select i1 %90, i32 4, i32 2
  br label %293

92:                                               ; preds = %64, %78
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #16
  unreachable

93:                                               ; preds = %1
  %94 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %95 = load i64*, i64** %94, align 8
  %96 = icmp eq i64* %95, null
  %97 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = select i1 %96, i64* %97, i64* %95
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, -262144
  %101 = or i64 %100, 16
  %102 = inttoptr i64 %101 to i64*
  %103 = load i64, i64* %102, align 16
  %104 = add i64 %103, -41416
  %105 = inttoptr i64 %104 to %"class.v8::internal::Isolate"*
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %105, i64 0, i32 0, i32 7, i32 0, i64 488
  %107 = load i64, i64* %106, align 8
  %108 = trunc i64 %3 to i32
  %109 = trunc i64 %107 to i32
  %110 = icmp eq i32 %108, %109
  br i1 %110, label %293, label %111

111:                                              ; preds = %93
  %112 = and i64 %3, 3
  switch i64 %112, label %156 [
    i64 3, label %113
    i64 1, label %145
  ]

113:                                              ; preds = %111
  %114 = icmp eq i32 %108, 3
  br i1 %114, label %293, label %115

115:                                              ; preds = %113
  %116 = and i64 %3, -3
  %117 = and i64 %3, -4294967296
  %118 = add i64 %116, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = icmp eq i16 %125, 102
  br i1 %126, label %293, label %127

127:                                              ; preds = %115
  %128 = load atomic i32, i32* %119 monotonic, align 4
  %129 = zext i32 %128 to i64
  %130 = or i64 %117, %129
  %131 = add i64 %130, 7
  %132 = inttoptr i64 %131 to i16*
  %133 = load atomic i16, i16* %132 monotonic, align 2
  %134 = add i16 %133, -1059
  %135 = icmp ult i16 %134, 15
  br i1 %135, label %293, label %136

136:                                              ; preds = %127
  %137 = load atomic i32, i32* %119 monotonic, align 4
  %138 = zext i32 %137 to i64
  %139 = or i64 %117, %138
  %140 = add i64 %139, 7
  %141 = inttoptr i64 %140 to i16*
  %142 = load atomic i16, i16* %141 monotonic, align 2
  %143 = icmp eq i16 %142, 1058
  br i1 %143, label %293, label %144, !prof !29

144:                                              ; preds = %136
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.28, i64 0, i64 0)) #16
  unreachable

145:                                              ; preds = %111
  %146 = and i64 %3, -4294967296
  %147 = add i64 %3, -1
  %148 = inttoptr i64 %147 to i32*
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = zext i32 %149 to i64
  %151 = or i64 %146, %150
  %152 = add i64 %151, 7
  %153 = inttoptr i64 %152 to i16*
  %154 = load atomic i16, i16* %153 monotonic, align 2
  %155 = icmp eq i16 %154, 90
  br i1 %155, label %293, label %156

156:                                              ; preds = %111, %145
  %157 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %105, i64 0, i32 0, i32 7, i32 0, i64 508
  %158 = load i64, i64* %157, align 8
  %159 = trunc i64 %158 to i32
  %160 = icmp eq i32 %108, %159
  br i1 %160, label %293, label %161, !prof !29

161:                                              ; preds = %156
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29, i64 0, i64 0)) #16
  unreachable

162:                                              ; preds = %1
  %163 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %164 = extractvalue { i64, i64 } %163, 0
  %165 = trunc i64 %164 to i32
  %166 = ashr i32 %165, 1
  switch i32 %166, label %167 [
    i32 0, label %293
    i32 1, label %168
    i32 3, label %168
    i32 7, label %168
    i32 15, label %168
    i32 16, label %168
    i32 32, label %168
  ]

167:                                              ; preds = %162
  br label %293

168:                                              ; preds = %162, %162, %162, %162, %162, %162
  br label %293

169:                                              ; preds = %1
  %170 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %171 = extractvalue { i64, i64 } %170, 0
  %172 = trunc i64 %171 to i32
  %173 = ashr i32 %172, 1
  switch i32 %173, label %174 [
    i32 0, label %293
    i32 1, label %188
  ]

174:                                              ; preds = %169
  %175 = icmp ult i32 %173, 8
  %176 = and i32 %173, -49
  %177 = icmp eq i32 %176, 0
  %178 = or i1 %175, %177
  %179 = and i32 %173, -265
  %180 = icmp eq i32 %179, 0
  %181 = or i1 %180, %178
  %182 = and i32 %173, -129
  %183 = icmp eq i32 %182, 0
  %184 = or i1 %183, %181
  %185 = and i32 %173, -65
  %186 = icmp eq i32 %185, 0
  %187 = or i1 %186, %184
  br i1 %187, label %188, label %293

188:                                              ; preds = %174, %169
  br label %293

189:                                              ; preds = %1
  %190 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %191 = extractvalue { i64, i64 } %190, 0
  %192 = trunc i64 %191 to i32
  %193 = lshr i32 %192, 1
  %194 = trunc i32 %193 to i8
  %195 = icmp ult i8 %194, 4
  br i1 %195, label %289, label %293

196:                                              ; preds = %1
  %197 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %198 = load i64*, i64** %197, align 8
  %199 = icmp eq i64* %198, null
  %200 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = select i1 %199, i64* %200, i64* %198
  %202 = load i64, i64* %201, align 8
  %203 = and i64 %202, -262144
  %204 = or i64 %203, 16
  %205 = inttoptr i64 %204 to i64*
  %206 = load i64, i64* %205, align 16
  %207 = add i64 %206, -41416
  %208 = inttoptr i64 %207 to %"class.v8::internal::Isolate"*
  %209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %208, i64 0, i32 0, i32 7, i32 0, i64 508
  %210 = load i64, i64* %209, align 8
  %211 = trunc i64 %3 to i32
  %212 = trunc i64 %210 to i32
  %213 = icmp eq i32 %211, %212
  br i1 %213, label %293, label %214

214:                                              ; preds = %196
  %215 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %208, i64 0, i32 0, i32 7, i32 0, i64 488
  %216 = load i64, i64* %215, align 8
  %217 = trunc i64 %216 to i32
  %218 = icmp eq i32 %211, %217
  %219 = select i1 %218, i32 6, i32 2
  br label %293

220:                                              ; preds = %1
  %221 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %222 = load i64*, i64** %221, align 8
  %223 = icmp eq i64* %222, null
  %224 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = select i1 %223, i64* %224, i64* %222
  %226 = load i64, i64* %225, align 8
  %227 = and i64 %226, -262144
  %228 = or i64 %227, 16
  %229 = inttoptr i64 %228 to i64*
  %230 = load i64, i64* %229, align 16
  %231 = add i64 %230, -41416
  %232 = inttoptr i64 %231 to %"class.v8::internal::Isolate"*
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %232, i64 0, i32 0, i32 7, i32 0, i64 508
  %234 = load i64, i64* %233, align 8
  %235 = trunc i64 %3 to i32
  %236 = trunc i64 %234 to i32
  %237 = icmp eq i32 %235, %236
  br i1 %237, label %293, label %238

238:                                              ; preds = %220
  %239 = and i64 %3, 3
  %240 = icmp eq i64 %239, 3
  %241 = select i1 %240, i32 2, i32 6
  br label %293

242:                                              ; preds = %1
  %243 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %244 = load i64*, i64** %243, align 8
  %245 = icmp eq i64* %244, null
  %246 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = select i1 %245, i64* %246, i64* %244
  %248 = load i64, i64* %247, align 8
  %249 = and i64 %248, -262144
  %250 = or i64 %249, 16
  %251 = inttoptr i64 %250 to i64*
  %252 = load i64, i64* %251, align 16
  %253 = add i64 %252, -41416
  %254 = inttoptr i64 %253 to %"class.v8::internal::Isolate"*
  %255 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %254, i64 0, i32 0, i32 7, i32 0, i64 508
  %256 = load i64, i64* %255, align 8
  %257 = trunc i64 %3 to i32
  %258 = trunc i64 %256 to i32
  %259 = icmp eq i32 %257, %258
  %260 = select i1 %259, i32 1, i32 2
  br label %293

261:                                              ; preds = %1
  %262 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %263 = load i64*, i64** %262, align 8
  %264 = icmp eq i64* %263, null
  %265 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = select i1 %264, i64* %265, i64* %263
  %267 = load i64, i64* %266, align 8
  %268 = and i64 %267, -262144
  %269 = or i64 %268, 16
  %270 = inttoptr i64 %269 to i64*
  %271 = load i64, i64* %270, align 16
  %272 = add i64 %271, -41416
  %273 = inttoptr i64 %272 to %"class.v8::internal::Isolate"*
  %274 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %273, i64 0, i32 0, i32 7, i32 0, i64 508
  %275 = load i64, i64* %274, align 8
  %276 = trunc i64 %3 to i32
  %277 = trunc i64 %275 to i32
  %278 = icmp eq i32 %276, %277
  br i1 %278, label %293, label %279

279:                                              ; preds = %261
  %280 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %273, i64 0, i32 0, i32 7, i32 0, i64 488
  %281 = load i64, i64* %280, align 8
  %282 = trunc i64 %281 to i32
  %283 = icmp eq i32 %276, %282
  br i1 %283, label %293, label %284

284:                                              ; preds = %279
  %285 = and i64 %3, 3
  %286 = icmp eq i64 %285, 3
  %287 = select i1 %286, i32 2, i32 4
  br label %293

288:                                              ; preds = %1, %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #16
  unreachable

289:                                              ; preds = %189
  %290 = sext i8 %194 to i64
  %291 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZNK2v88internal13FeedbackNexus8ic_stateEv, i64 0, i64 %290
  %292 = load i32, i32* %291, align 4
  ret i32 %292

293:                                              ; preds = %189, %136, %113, %174, %64, %11, %188, %169, %167, %168, %162, %93, %115, %127, %145, %156, %86, %66, %17, %1, %284, %279, %261, %242, %238, %220, %214, %196, %59, %54, %36, %7
  %294 = phi i32 [ %10, %7 ], [ 2, %11 ], [ 1, %36 ], [ 6, %54 ], [ 5, %59 ], [ 2, %64 ], [ 1, %196 ], [ %219, %214 ], [ 1, %220 ], [ %241, %238 ], [ %260, %242 ], [ 1, %261 ], [ 6, %279 ], [ %287, %284 ], [ 1, %1 ], [ %35, %17 ], [ %91, %86 ], [ 4, %66 ], [ 7, %93 ], [ 4, %115 ], [ 2, %127 ], [ 2, %136 ], [ 2, %145 ], [ 1, %156 ], [ 2, %113 ], [ 7, %167 ], [ 2, %168 ], [ 1, %162 ], [ 2, %188 ], [ 1, %169 ], [ 7, %174 ], [ 7, %189 ]
  ret i32 %294
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2v88internal13FeedbackNexus26GetBinaryOperationFeedbackEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = ashr i32 %4, 1
  switch i32 %5, label %12 [
    i32 0, label %13
    i32 1, label %6
    i32 3, label %7
    i32 7, label %8
    i32 15, label %9
    i32 16, label %10
    i32 32, label %11
  ]

6:                                                ; preds = %1
  br label %13

7:                                                ; preds = %1
  br label %13

8:                                                ; preds = %1
  br label %13

9:                                                ; preds = %1
  br label %13

10:                                               ; preds = %1
  br label %13

11:                                               ; preds = %1
  br label %13

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %1, %6, %7, %8, %9, %10, %11, %12
  %14 = phi i8 [ 7, %12 ], [ 6, %11 ], [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %1 ]
  ret i8 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2v88internal13FeedbackNexus27GetCompareOperationFeedbackEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = ashr i32 %4, 1
  switch i32 %5, label %6 [
    i32 0, label %30
    i32 1, label %29
  ]

6:                                                ; preds = %1
  %7 = icmp ult i32 %5, 4
  br i1 %7, label %30, label %8

8:                                                ; preds = %6
  %9 = icmp ult i32 %5, 8
  br i1 %9, label %30, label %10

10:                                               ; preds = %8
  %11 = and i32 %5, -17
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %30, label %13

13:                                               ; preds = %10
  %14 = and i32 %5, -49
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %30, label %16

16:                                               ; preds = %13
  %17 = and i32 %5, -257
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %16
  %20 = and i32 %5, -265
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %19
  %23 = and i32 %5, -129
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %22
  %26 = and i32 %5, -65
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i8 7, i8 11
  br label %30

29:                                               ; preds = %1
  br label %30

30:                                               ; preds = %1, %6, %8, %10, %13, %16, %19, %22, %25, %29
  %31 = phi i8 [ 0, %1 ], [ 2, %6 ], [ 3, %8 ], [ 5, %10 ], [ 6, %13 ], [ 9, %16 ], [ 10, %19 ], [ 8, %22 ], [ %28, %25 ], [ 1, %29 ]
  ret i8 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2v88internal13FeedbackNexus16GetForInFeedbackEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = lshr i32 %4, 1
  %6 = trunc i32 %5 to i8
  %7 = icmp ult i8 %6, 4
  br i1 %7, label %8, label %13

8:                                                ; preds = %1
  %9 = shl i32 %5, 3
  %10 = and i32 %9, 2040
  %11 = lshr i32 33751296, %10
  %12 = trunc i32 %11 to i8
  ret i8 %12

13:                                               ; preds = %1
  ret i8 3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13FeedbackNexus25ConfigurePropertyCellModeENS0_6HandleINS0_12PropertyCellEEE(%"class.v8::internal::FeedbackNexus"* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = or i64 %3, 2
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %6, null
  %8 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = select i1 %7, i64* %8, i64* %6
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, -262144
  %12 = or i64 %11, 16
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13, align 16
  %15 = add i64 %14, -41416
  %16 = inttoptr i64 %15 to %"class.v8::internal::Isolate"*
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 0, i32 7, i32 0, i64 508
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %20 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %21 = load i32, i32* %20, align 8
  tail call void @_ZNK2v88internal11NexusConfig15SetFeedbackPairENS0_14FeedbackVectorENS0_12FeedbackSlotENS0_11MaybeObjectENS0_16WriteBarrierModeES4_S5_(%"class.v8::internal::NexusConfig"* %19, i64 %10, i32 %21, i64 %4, i32 4, i64 %18, i32 0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal13FeedbackNexus23ConfigureLexicalVarModeEiib(%"class.v8::internal::FeedbackNexus"* nocapture readonly, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = icmp ult i32 %1, 4096
  %6 = icmp ult i32 %2, 262144
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %56

8:                                                ; preds = %4
  %9 = shl i32 %2, 12
  %10 = or i32 %9, %1
  %11 = zext i1 %3 to i32
  %12 = shl nuw nsw i32 %11, 30
  %13 = or i32 %10, %12
  %14 = shl i32 %13, 1
  %15 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %16, null
  %18 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = select i1 %17, i64* %18, i64* %16
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, -262144
  %22 = or i64 %21, 16
  %23 = inttoptr i64 %22 to i64*
  %24 = load i64, i64* %23, align 16
  %25 = add i64 %24, -41416
  %26 = inttoptr i64 %25 to %"class.v8::internal::Isolate"*
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 0, i32 7, i32 0, i64 508
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 1
  %32 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %31, align 8
  %33 = icmp eq %"class.v8::internal::LocalHeap"* %32, null
  br i1 %33, label %35, label %34, !prof !29

34:                                               ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0)) #16
  unreachable

35:                                               ; preds = %8
  %36 = add i64 %20, 3
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %30, 1
  %40 = icmp sgt i32 %38, %39
  br i1 %40, label %42, label %41, !prof !29

41:                                               ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27, i64 0, i64 0)) #16
  unreachable

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 0
  %44 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 16
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %45) #9
  %46 = shl i32 %30, 2
  %47 = sext i32 %46 to i64
  %48 = add i64 %20, 31
  %49 = add i64 %48, %47
  %50 = inttoptr i64 %49 to i32*
  store atomic volatile i32 %14, i32* %50 monotonic, align 4
  %51 = shl i32 %39, 2
  %52 = sext i32 %51 to i64
  %53 = add i64 %48, %52
  %54 = inttoptr i64 %53 to i32*
  %55 = trunc i64 %28 to i32
  store atomic volatile i32 %55, i32* %54 monotonic, align 4
  tail call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %45) #9
  br label %56

56:                                               ; preds = %4, %42
  %57 = phi i1 [ true, %42 ], [ false, %4 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13FeedbackNexus20ConfigureHandlerModeERKNS0_17MaybeObjectHandleE(%"class.v8::internal::FeedbackNexus"* nocapture readonly, %"class.v8::internal::MaybeObjectHandle"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  %6 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = select i1 %5, i64* %6, i64* %4
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -262144
  %10 = or i64 %9, 16
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 16
  %13 = add i64 %12, -41416
  %14 = inttoptr i64 %13 to %"class.v8::internal::Isolate"*
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 4294967295
  %18 = icmp eq i64 %17, 0
  tail call void @llvm.assume(i1 %18) #9
  %19 = or i64 %16, 3
  %20 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %1, i64 0, i32 1, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = icmp eq i64* %24, null
  br i1 %22, label %26, label %31

26:                                               ; preds = %2
  br i1 %25, label %27, label %28, !prof !2

27:                                               ; preds = %26
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

28:                                               ; preds = %26
  %29 = load i64, i64* %24, align 8
  %30 = or i64 %29, 2
  br label %35

31:                                               ; preds = %2
  br i1 %25, label %32, label %33, !prof !2

32:                                               ; preds = %31
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

33:                                               ; preds = %31
  %34 = load i64, i64* %24, align 8
  br label %35

35:                                               ; preds = %28, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ]
  %37 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %38 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %39 = load i32, i32* %38, align 8
  tail call void @_ZNK2v88internal11NexusConfig15SetFeedbackPairENS0_14FeedbackVectorENS0_12FeedbackSlotENS0_11MaybeObjectENS0_16WriteBarrierModeES4_S5_(%"class.v8::internal::NexusConfig"* %37, i64 %8, i32 %39, i64 %19, i32 4, i64 %36, i32 4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13FeedbackNexus20ConfigureCloneObjectENS0_6HandleINS0_3MapEEES4_(%"class.v8::internal::FeedbackNexus"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = icmp eq i64* %5, null
  %7 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = select i1 %6, i64* %7, i64* %5
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, -262144
  %11 = or i64 %10, 16
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 16
  %14 = add i64 %13, -41416
  %15 = inttoptr i64 %14 to %"class.v8::internal::Isolate"*
  %16 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %17 = extractvalue { i64, i64 } %16, 0
  %18 = and i64 %17, 1
  %19 = icmp ne i64 %18, 0
  %20 = trunc i64 %17 to i32
  %21 = icmp ne i32 %20, 3
  %22 = and i1 %21, %19
  br i1 %22, label %23, label %43

23:                                               ; preds = %3
  %24 = and i64 %17, -3
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 4
  %26 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %25, align 8
  %27 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %26, i64 %24) #9
  br label %43

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %34 = load i64*, i64** %33, align 8
  %35 = icmp eq i64* %32, %34
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  %37 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #9
  br label %38

38:                                               ; preds = %36, %30
  %39 = phi i64* [ %37, %36 ], [ %32, %30 ]
  %40 = ptrtoint i64* %39 to i64
  %41 = add i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  store i64* %42, i64** %31, align 8
  store i64 %24, i64* %39, align 8
  br label %43

43:                                               ; preds = %38, %28, %3
  %44 = phi i64* [ null, %3 ], [ %29, %28 ], [ %39, %38 ]
  %45 = tail call i32 @_ZNK2v88internal13FeedbackNexus8ic_stateEv(%"class.v8::internal::FeedbackNexus"* %0)
  switch i32 %45, label %645 [
    i32 1, label %46
    i32 2, label %57
    i32 4, label %266
  ]

46:                                               ; preds = %43
  %47 = load i64, i64* %1, align 8
  %48 = or i64 %47, 2
  %49 = load i64, i64* %2, align 8
  %50 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %51 = load i64*, i64** %4, align 8
  %52 = icmp eq i64* %51, null
  %53 = select i1 %52, i64* %7, i64* %51
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %56 = load i32, i32* %55, align 8
  tail call void @_ZNK2v88internal11NexusConfig15SetFeedbackPairENS0_14FeedbackVectorENS0_12FeedbackSlotENS0_11MaybeObjectENS0_16WriteBarrierModeES4_S5_(%"class.v8::internal::NexusConfig"* %50, i64 %54, i32 %56, i64 %48, i32 4, i64 %49, i32 4) #9
  br label %646

57:                                               ; preds = %43
  %58 = icmp eq i64* %44, null
  %59 = icmp eq i64* %44, %1
  %60 = or i1 %58, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %57
  %62 = icmp eq i64* %1, null
  %63 = load i64, i64* %44, align 8
  br i1 %62, label %69, label %64

64:                                               ; preds = %61
  %65 = load i64, i64* %1, align 8
  %66 = trunc i64 %63 to i32
  %67 = trunc i64 %65 to i32
  %68 = icmp eq i32 %66, %67
  br i1 %68, label %75, label %69

69:                                               ; preds = %61, %64
  %70 = add i64 %63, 11
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 acquire, align 4
  %73 = and i32 %72, 16777216
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %86, label %75

75:                                               ; preds = %69, %57, %64
  %76 = load i64, i64* %1, align 8
  %77 = or i64 %76, 2
  %78 = load i64, i64* %2, align 8
  %79 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %80 = load i64*, i64** %4, align 8
  %81 = icmp eq i64* %80, null
  %82 = select i1 %81, i64* %7, i64* %80
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %85 = load i32, i32* %84, align 8
  tail call void @_ZNK2v88internal11NexusConfig15SetFeedbackPairENS0_14FeedbackVectorENS0_12FeedbackSlotENS0_11MaybeObjectENS0_16WriteBarrierModeES4_S5_(%"class.v8::internal::NexusConfig"* %79, i64 %83, i32 %85, i64 %77, i32 4, i64 %78, i32 4) #9
  br label %646

86:                                               ; preds = %69
  %87 = load i64*, i64** %4, align 8
  %88 = icmp eq i64* %87, null
  %89 = select i1 %88, i64* %7, i64* %87
  %90 = load i64, i64* %89, align 8
  %91 = and i64 %90, -262144
  %92 = or i64 %91, 16
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 16
  %95 = add i64 %94, -41416
  %96 = inttoptr i64 %95 to %"class.v8::internal::FactoryBase"*
  %97 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %96, i32 4, i8 zeroext 0) #9
  %98 = load i64, i64* %97, align 8
  %99 = load i64, i64* %44, align 8
  %100 = add i64 %98, 7
  %101 = inttoptr i64 %100 to i32*
  %102 = trunc i64 %99 to i32
  %103 = or i32 %102, 2
  store atomic volatile i32 %103, i32* %101 monotonic, align 4
  %104 = and i64 %99, 1
  %105 = icmp ne i64 %104, 0
  %106 = icmp ne i32 %103, 3
  %107 = and i1 %105, %106
  br i1 %107, label %108, label %136

108:                                              ; preds = %86
  %109 = and i64 %98, -262144
  %110 = or i64 %109, 8
  %111 = inttoptr i64 %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, 262144
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %108
  %116 = and i64 %99, -3
  %117 = or i64 %109, 16
  %118 = inttoptr i64 %117 to %"class.v8::internal::Heap"**
  %119 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %118, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %119, i64 %98, i64 %100, i64 %116) #9
  br label %120

120:                                              ; preds = %115, %108
  %121 = and i64 %99, -3
  %122 = and i64 %99, -262144
  %123 = or i64 %122, 8
  %124 = inttoptr i64 %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, 24
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %136, label %128

128:                                              ; preds = %120
  %129 = and i64 %98, -262144
  %130 = or i64 %129, 8
  %131 = inttoptr i64 %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = and i64 %132, 24
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %128
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %98, i64 %100, i64 %121) #9
  br label %136

136:                                              ; preds = %86, %120, %128, %135
  %137 = load i64, i64* %97, align 8
  %138 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %139 = extractvalue { i64, i64 } %138, 1
  %140 = add i64 %137, 11
  %141 = inttoptr i64 %140 to i32*
  %142 = trunc i64 %139 to i32
  store atomic volatile i32 %142, i32* %141 monotonic, align 4
  %143 = and i64 %139, 1
  %144 = icmp ne i64 %143, 0
  %145 = icmp ne i32 %142, 3
  %146 = and i1 %145, %144
  br i1 %146, label %147, label %175

147:                                              ; preds = %136
  %148 = and i64 %137, -262144
  %149 = or i64 %148, 8
  %150 = inttoptr i64 %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = and i64 %151, 262144
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %159, label %154

154:                                              ; preds = %147
  %155 = and i64 %139, -3
  %156 = or i64 %148, 16
  %157 = inttoptr i64 %156 to %"class.v8::internal::Heap"**
  %158 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %157, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %158, i64 %137, i64 %140, i64 %155) #9
  br label %159

159:                                              ; preds = %154, %147
  %160 = and i64 %139, -3
  %161 = and i64 %139, -262144
  %162 = or i64 %161, 8
  %163 = inttoptr i64 %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = and i64 %164, 24
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %175, label %167

167:                                              ; preds = %159
  %168 = and i64 %137, -262144
  %169 = or i64 %168, 8
  %170 = inttoptr i64 %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = and i64 %171, 24
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %167
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %137, i64 %140, i64 %160) #9
  br label %175

175:                                              ; preds = %136, %159, %167, %174
  %176 = load i64, i64* %97, align 8
  %177 = load i64, i64* %1, align 8
  %178 = add i64 %176, 15
  %179 = inttoptr i64 %178 to i32*
  %180 = trunc i64 %177 to i32
  %181 = or i32 %180, 2
  store atomic volatile i32 %181, i32* %179 monotonic, align 4
  %182 = and i64 %177, 1
  %183 = icmp ne i64 %182, 0
  %184 = icmp ne i32 %181, 3
  %185 = and i1 %183, %184
  br i1 %185, label %186, label %214

186:                                              ; preds = %175
  %187 = and i64 %176, -262144
  %188 = or i64 %187, 8
  %189 = inttoptr i64 %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = and i64 %190, 262144
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %198, label %193

193:                                              ; preds = %186
  %194 = and i64 %177, -3
  %195 = or i64 %187, 16
  %196 = inttoptr i64 %195 to %"class.v8::internal::Heap"**
  %197 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %196, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %197, i64 %176, i64 %178, i64 %194) #9
  br label %198

198:                                              ; preds = %193, %186
  %199 = and i64 %177, -3
  %200 = and i64 %177, -262144
  %201 = or i64 %200, 8
  %202 = inttoptr i64 %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = and i64 %203, 24
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %214, label %206

206:                                              ; preds = %198
  %207 = and i64 %176, -262144
  %208 = or i64 %207, 8
  %209 = inttoptr i64 %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = and i64 %210, 24
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %206
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %176, i64 %178, i64 %199) #9
  br label %214

214:                                              ; preds = %175, %198, %206, %213
  %215 = load i64, i64* %97, align 8
  %216 = load i64, i64* %2, align 8
  %217 = add i64 %215, 19
  %218 = inttoptr i64 %217 to i32*
  %219 = trunc i64 %216 to i32
  store atomic volatile i32 %219, i32* %218 monotonic, align 4
  %220 = and i64 %216, 1
  %221 = icmp ne i64 %220, 0
  %222 = icmp ne i32 %219, 3
  %223 = and i1 %222, %221
  br i1 %223, label %224, label %252

224:                                              ; preds = %214
  %225 = and i64 %215, -262144
  %226 = or i64 %225, 8
  %227 = inttoptr i64 %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = and i64 %228, 262144
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %236, label %231

231:                                              ; preds = %224
  %232 = and i64 %216, -3
  %233 = or i64 %225, 16
  %234 = inttoptr i64 %233 to %"class.v8::internal::Heap"**
  %235 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %234, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %235, i64 %215, i64 %217, i64 %232) #9
  br label %236

236:                                              ; preds = %231, %224
  %237 = and i64 %216, -3
  %238 = and i64 %216, -262144
  %239 = or i64 %238, 8
  %240 = inttoptr i64 %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = and i64 %241, 24
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %252, label %244

244:                                              ; preds = %236
  %245 = and i64 %215, -262144
  %246 = or i64 %245, 8
  %247 = inttoptr i64 %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = and i64 %248, 24
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %244
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %215, i64 %217, i64 %237) #9
  br label %252

252:                                              ; preds = %214, %236, %244, %251
  %253 = load i64, i64* %97, align 8
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 4
  %255 = load i64, i64* %254, align 8
  %256 = and i64 %255, 4294967295
  %257 = icmp eq i64 %256, 0
  tail call void @llvm.assume(i1 %257) #9
  %258 = or i64 %255, 3
  %259 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %260 = load i64*, i64** %4, align 8
  %261 = icmp eq i64* %260, null
  %262 = select i1 %261, i64* %7, i64* %260
  %263 = load i64, i64* %262, align 8
  %264 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %265 = load i32, i32* %264, align 8
  tail call void @_ZNK2v88internal11NexusConfig15SetFeedbackPairENS0_14FeedbackVectorENS0_12FeedbackSlotENS0_11MaybeObjectENS0_16WriteBarrierModeES4_S5_(%"class.v8::internal::NexusConfig"* %259, i64 %263, i32 %265, i64 %253, i32 4, i64 %258, i32 4) #9
  br label %646

266:                                              ; preds = %43
  %267 = load i32, i32* @_ZN2v88internal36FLAG_max_valid_polymorphic_map_countE, align 4
  %268 = shl nsw i32 %267, 1
  %269 = load i64, i64* %44, align 8
  %270 = add i64 %269, 3
  %271 = inttoptr i64 %270 to i32*
  %272 = load i32, i32* %271, align 4
  %273 = icmp sgt i32 %272, 1
  br i1 %273, label %274, label %407

274:                                              ; preds = %266
  %275 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 4
  %276 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %277 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %278 = icmp eq i64* %1, null
  br i1 %278, label %279, label %331

279:                                              ; preds = %274, %321
  %280 = phi i64 [ %322, %321 ], [ 0, %274 ]
  %281 = phi i64 [ %324, %321 ], [ %269, %274 ]
  %282 = phi i32 [ %323, %321 ], [ 0, %274 ]
  %283 = trunc i64 %280 to i32
  %284 = shl i32 %283, 2
  %285 = or i32 %284, 7
  %286 = sext i32 %285 to i64
  %287 = add i64 %281, %286
  %288 = inttoptr i64 %287 to i32*
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = icmp eq i32 %289, 3
  br i1 %290, label %397, label %291

291:                                              ; preds = %279
  %292 = and i64 %281, -4294967296
  %293 = and i32 %289, -3
  %294 = zext i32 %293 to i64
  %295 = or i64 %292, %294
  %296 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %275, align 8
  %297 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %296, null
  br i1 %297, label %300, label %298

298:                                              ; preds = %291
  %299 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %296, i64 %295) #9
  br label %311

300:                                              ; preds = %291
  %301 = load i64*, i64** %276, align 8
  %302 = load i64*, i64** %277, align 8
  %303 = icmp eq i64* %301, %302
  br i1 %303, label %304, label %306

304:                                              ; preds = %300
  %305 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #9
  br label %306

306:                                              ; preds = %304, %300
  %307 = phi i64* [ %305, %304 ], [ %301, %300 ]
  %308 = ptrtoint i64* %307 to i64
  %309 = add i64 %308, 8
  %310 = inttoptr i64 %309 to i64*
  store i64* %310, i64** %276, align 8
  store i64 %295, i64* %307, align 8
  br label %311

311:                                              ; preds = %306, %298
  %312 = phi i64* [ %299, %298 ], [ %307, %306 ]
  %313 = icmp eq i64* %312, null
  br i1 %313, label %395, label %314

314:                                              ; preds = %311
  %315 = load i64, i64* %312, align 8
  %316 = add i64 %315, 11
  %317 = inttoptr i64 %316 to i32*
  %318 = load atomic i32, i32* %317 acquire, align 4
  %319 = and i32 %318, 16777216
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %393

321:                                              ; preds = %314
  %322 = add nuw nsw i64 %280, 2
  %323 = add nuw nsw i32 %282, 2
  %324 = load i64, i64* %44, align 8
  %325 = add i64 %324, 3
  %326 = inttoptr i64 %325 to i32*
  %327 = load i32, i32* %326, align 4
  %328 = ashr i32 %327, 1
  %329 = sext i32 %328 to i64
  %330 = icmp slt i64 %322, %329
  br i1 %330, label %279, label %407

331:                                              ; preds = %274, %383
  %332 = phi i64 [ %384, %383 ], [ 0, %274 ]
  %333 = phi i64 [ %386, %383 ], [ %269, %274 ]
  %334 = phi i32 [ %385, %383 ], [ 0, %274 ]
  %335 = trunc i64 %332 to i32
  %336 = shl i32 %335, 2
  %337 = or i32 %336, 7
  %338 = sext i32 %337 to i64
  %339 = add i64 %333, %338
  %340 = inttoptr i64 %339 to i32*
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = icmp eq i32 %341, 3
  br i1 %342, label %405, label %343

343:                                              ; preds = %331
  %344 = and i64 %333, -4294967296
  %345 = and i32 %341, -3
  %346 = zext i32 %345 to i64
  %347 = or i64 %344, %346
  %348 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %275, align 8
  %349 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %348, null
  br i1 %349, label %352, label %350

350:                                              ; preds = %343
  %351 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %348, i64 %347) #9
  br label %363

352:                                              ; preds = %343
  %353 = load i64*, i64** %276, align 8
  %354 = load i64*, i64** %277, align 8
  %355 = icmp eq i64* %353, %354
  br i1 %355, label %356, label %358

356:                                              ; preds = %352
  %357 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #9
  br label %358

358:                                              ; preds = %356, %352
  %359 = phi i64* [ %357, %356 ], [ %353, %352 ]
  %360 = ptrtoint i64* %359 to i64
  %361 = add i64 %360, 8
  %362 = inttoptr i64 %361 to i64*
  store i64* %362, i64** %276, align 8
  store i64 %347, i64* %359, align 8
  br label %363

363:                                              ; preds = %350, %358
  %364 = phi i64* [ %351, %350 ], [ %359, %358 ]
  %365 = icmp eq i64* %364, %1
  br i1 %365, label %401, label %366

366:                                              ; preds = %363
  %367 = icmp eq i64* %364, null
  br i1 %367, label %368, label %370

368:                                              ; preds = %366
  %369 = load i64, i64* null, align 536870912
  br label %376

370:                                              ; preds = %366
  %371 = load i64, i64* %364, align 8
  %372 = load i64, i64* %1, align 8
  %373 = trunc i64 %371 to i32
  %374 = trunc i64 %372 to i32
  %375 = icmp eq i32 %373, %374
  br i1 %375, label %403, label %376

376:                                              ; preds = %368, %370
  %377 = phi i64 [ %369, %368 ], [ %371, %370 ]
  %378 = add i64 %377, 11
  %379 = inttoptr i64 %378 to i32*
  %380 = load atomic i32, i32* %379 acquire, align 4
  %381 = and i32 %380, 16777216
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %399

383:                                              ; preds = %376
  %384 = add nuw nsw i64 %332, 2
  %385 = add nuw nsw i32 %334, 2
  %386 = load i64, i64* %44, align 8
  %387 = add i64 %386, 3
  %388 = inttoptr i64 %387 to i32*
  %389 = load i32, i32* %388, align 4
  %390 = ashr i32 %389, 1
  %391 = sext i32 %390 to i64
  %392 = icmp slt i64 %384, %391
  br i1 %392, label %331, label %407

393:                                              ; preds = %314
  %394 = trunc i64 %280 to i32
  br label %407

395:                                              ; preds = %311
  %396 = trunc i64 %280 to i32
  br label %407

397:                                              ; preds = %279
  %398 = trunc i64 %280 to i32
  br label %407

399:                                              ; preds = %376
  %400 = trunc i64 %332 to i32
  br label %407

401:                                              ; preds = %363
  %402 = trunc i64 %332 to i32
  br label %407

403:                                              ; preds = %370
  %404 = trunc i64 %332 to i32
  br label %407

405:                                              ; preds = %331
  %406 = trunc i64 %332 to i32
  br label %407

407:                                              ; preds = %383, %321, %399, %401, %403, %405, %393, %395, %397, %266
  %408 = phi i32 [ 0, %266 ], [ %394, %393 ], [ %396, %395 ], [ %398, %397 ], [ %400, %399 ], [ %402, %401 ], [ %404, %403 ], [ %406, %405 ], [ %323, %321 ], [ %385, %383 ]
  %409 = load i64, i64* %44, align 8
  %410 = add i64 %409, 3
  %411 = inttoptr i64 %410 to i32*
  %412 = load i32, i32* %411, align 4
  %413 = ashr i32 %412, 1
  %414 = icmp slt i32 %408, %413
  br i1 %414, label %561, label %415

415:                                              ; preds = %407
  %416 = icmp eq i32 %408, %268
  br i1 %416, label %417, label %438

417:                                              ; preds = %415
  %418 = load i64*, i64** %4, align 8
  %419 = icmp eq i64* %418, null
  %420 = select i1 %419, i64* %7, i64* %418
  %421 = load i64, i64* %420, align 8
  %422 = and i64 %421, -262144
  %423 = or i64 %422, 16
  %424 = inttoptr i64 %423 to i64*
  %425 = load i64, i64* %424, align 16
  %426 = add i64 %425, -41416
  %427 = inttoptr i64 %426 to %"class.v8::internal::Isolate"*
  %428 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %427, i64 0, i32 0, i32 7, i32 0, i64 488
  %429 = load i64, i64* %428, align 8
  %430 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 4
  %431 = load i64, i64* %430, align 8
  %432 = and i64 %431, 4294967295
  %433 = icmp eq i64 %432, 0
  tail call void @llvm.assume(i1 %433) #9
  %434 = or i64 %431, 3
  %435 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %436 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %437 = load i32, i32* %436, align 8
  tail call void @_ZNK2v88internal11NexusConfig15SetFeedbackPairENS0_14FeedbackVectorENS0_12FeedbackSlotENS0_11MaybeObjectENS0_16WriteBarrierModeES4_S5_(%"class.v8::internal::NexusConfig"* %435, i64 %421, i32 %437, i64 %429, i32 0, i64 %434, i32 4) #9
  br label %646

438:                                              ; preds = %415
  %439 = add nsw i32 %413, 2
  %440 = load i64*, i64** %4, align 8
  %441 = icmp eq i64* %440, null
  %442 = select i1 %441, i64* %7, i64* %440
  %443 = load i64, i64* %442, align 8
  %444 = and i64 %443, -262144
  %445 = or i64 %444, 16
  %446 = inttoptr i64 %445 to i64*
  %447 = load i64, i64* %446, align 16
  %448 = add i64 %447, -41416
  %449 = inttoptr i64 %448 to %"class.v8::internal::FactoryBase"*
  %450 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %449, i32 %439, i8 zeroext 0) #9
  %451 = load i64, i64* %44, align 8
  %452 = add i64 %451, 3
  %453 = inttoptr i64 %452 to i32*
  %454 = load i32, i32* %453, align 4
  %455 = icmp sgt i32 %454, 1
  %456 = load i64, i64* %450, align 8
  br i1 %455, label %503, label %457

457:                                              ; preds = %551, %438
  %458 = phi i64 [ %456, %438 ], [ %560, %551 ]
  %459 = load i64*, i64** %4, align 8
  %460 = icmp eq i64* %459, null
  %461 = select i1 %460, i64* %7, i64* %459
  %462 = load i64, i64* %461, align 8
  %463 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %464 = load i32, i32* %463, align 8
  %465 = shl i32 %464, 2
  %466 = sext i32 %465 to i64
  %467 = add i64 %462, 31
  %468 = add i64 %467, %466
  %469 = inttoptr i64 %468 to i32*
  %470 = trunc i64 %458 to i32
  store atomic volatile i32 %470, i32* %469 release, align 4
  %471 = and i64 %458, 1
  %472 = icmp ne i64 %471, 0
  %473 = icmp ne i32 %470, 3
  %474 = and i1 %473, %472
  br i1 %474, label %475, label %561

475:                                              ; preds = %457
  %476 = and i64 %462, -262144
  %477 = or i64 %476, 8
  %478 = inttoptr i64 %477 to i64*
  %479 = load i64, i64* %478, align 8
  %480 = and i64 %479, 262144
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %487, label %482

482:                                              ; preds = %475
  %483 = and i64 %458, -3
  %484 = or i64 %476, 16
  %485 = inttoptr i64 %484 to %"class.v8::internal::Heap"**
  %486 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %485, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %486, i64 %462, i64 %468, i64 %483) #9
  br label %487

487:                                              ; preds = %482, %475
  %488 = and i64 %458, -3
  %489 = and i64 %458, -262144
  %490 = or i64 %489, 8
  %491 = inttoptr i64 %490 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = and i64 %492, 24
  %494 = icmp eq i64 %493, 0
  br i1 %494, label %561, label %495

495:                                              ; preds = %487
  %496 = and i64 %462, -262144
  %497 = or i64 %496, 8
  %498 = inttoptr i64 %497 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = and i64 %499, 24
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %502, label %561

502:                                              ; preds = %495
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %462, i64 %468, i64 %488) #9
  br label %561

503:                                              ; preds = %438, %551
  %504 = phi i64 [ %552, %551 ], [ 0, %438 ]
  %505 = phi i64 [ %560, %551 ], [ %456, %438 ]
  %506 = phi i64 [ %553, %551 ], [ %451, %438 ]
  %507 = and i64 %506, -4294967296
  %508 = trunc i64 %504 to i32
  %509 = shl i32 %508, 2
  %510 = sext i32 %509 to i64
  %511 = add nsw i64 %510, 7
  %512 = add i64 %511, %506
  %513 = inttoptr i64 %512 to i32*
  %514 = load atomic i32, i32* %513 monotonic, align 4
  %515 = zext i32 %514 to i64
  %516 = or i64 %507, %515
  %517 = add i64 %505, %511
  %518 = inttoptr i64 %517 to i32*
  store atomic volatile i32 %514, i32* %518 monotonic, align 4
  %519 = and i64 %515, 1
  %520 = icmp ne i64 %519, 0
  %521 = icmp ne i32 %514, 3
  %522 = and i1 %521, %520
  br i1 %522, label %523, label %551

523:                                              ; preds = %503
  %524 = and i64 %505, -262144
  %525 = or i64 %524, 8
  %526 = inttoptr i64 %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = and i64 %527, 262144
  %529 = icmp eq i64 %528, 0
  br i1 %529, label %535, label %530

530:                                              ; preds = %523
  %531 = and i64 %516, -3
  %532 = or i64 %524, 16
  %533 = inttoptr i64 %532 to %"class.v8::internal::Heap"**
  %534 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %533, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %534, i64 %505, i64 %517, i64 %531) #9
  br label %535

535:                                              ; preds = %530, %523
  %536 = and i64 %516, -3
  %537 = and i64 %516, -262144
  %538 = or i64 %537, 8
  %539 = inttoptr i64 %538 to i64*
  %540 = load i64, i64* %539, align 8
  %541 = and i64 %540, 24
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %551, label %543

543:                                              ; preds = %535
  %544 = and i64 %505, -262144
  %545 = or i64 %544, 8
  %546 = inttoptr i64 %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = and i64 %547, 24
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %550, label %551

550:                                              ; preds = %543
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %505, i64 %517, i64 %536) #9
  br label %551

551:                                              ; preds = %503, %535, %543, %550
  %552 = add nuw nsw i64 %504, 1
  %553 = load i64, i64* %44, align 8
  %554 = add i64 %553, 3
  %555 = inttoptr i64 %554 to i32*
  %556 = load i32, i32* %555, align 4
  %557 = ashr i32 %556, 1
  %558 = sext i32 %557 to i64
  %559 = icmp slt i64 %552, %558
  %560 = load i64, i64* %450, align 8
  br i1 %559, label %503, label %457

561:                                              ; preds = %457, %502, %495, %487, %407
  %562 = phi i64* [ %44, %407 ], [ %450, %487 ], [ %450, %495 ], [ %450, %502 ], [ %450, %457 ]
  %563 = load i64, i64* %562, align 8
  %564 = load i64, i64* %1, align 8
  %565 = shl i32 %408, 2
  %566 = or i32 %565, 7
  %567 = sext i32 %566 to i64
  %568 = add i64 %563, %567
  %569 = inttoptr i64 %568 to i32*
  %570 = trunc i64 %564 to i32
  %571 = or i32 %570, 2
  store atomic volatile i32 %571, i32* %569 monotonic, align 4
  %572 = and i64 %564, 1
  %573 = icmp ne i64 %572, 0
  %574 = icmp ne i32 %571, 3
  %575 = and i1 %573, %574
  br i1 %575, label %576, label %604

576:                                              ; preds = %561
  %577 = and i64 %563, -262144
  %578 = or i64 %577, 8
  %579 = inttoptr i64 %578 to i64*
  %580 = load i64, i64* %579, align 8
  %581 = and i64 %580, 262144
  %582 = icmp eq i64 %581, 0
  br i1 %582, label %588, label %583

583:                                              ; preds = %576
  %584 = and i64 %564, -3
  %585 = or i64 %577, 16
  %586 = inttoptr i64 %585 to %"class.v8::internal::Heap"**
  %587 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %586, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %587, i64 %563, i64 %568, i64 %584) #9
  br label %588

588:                                              ; preds = %583, %576
  %589 = and i64 %564, -3
  %590 = and i64 %564, -262144
  %591 = or i64 %590, 8
  %592 = inttoptr i64 %591 to i64*
  %593 = load i64, i64* %592, align 8
  %594 = and i64 %593, 24
  %595 = icmp eq i64 %594, 0
  br i1 %595, label %604, label %596

596:                                              ; preds = %588
  %597 = and i64 %563, -262144
  %598 = or i64 %597, 8
  %599 = inttoptr i64 %598 to i64*
  %600 = load i64, i64* %599, align 8
  %601 = and i64 %600, 24
  %602 = icmp eq i64 %601, 0
  br i1 %602, label %603, label %604

603:                                              ; preds = %596
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %563, i64 %568, i64 %589) #9
  br label %604

604:                                              ; preds = %561, %588, %596, %603
  %605 = load i64, i64* %562, align 8
  %606 = load i64, i64* %2, align 8
  %607 = or i32 %565, 4
  %608 = sext i32 %607 to i64
  %609 = add nsw i64 %608, 7
  %610 = add i64 %609, %605
  %611 = inttoptr i64 %610 to i32*
  %612 = trunc i64 %606 to i32
  store atomic volatile i32 %612, i32* %611 monotonic, align 4
  %613 = and i64 %606, 1
  %614 = icmp ne i64 %613, 0
  %615 = icmp ne i32 %612, 3
  %616 = and i1 %615, %614
  br i1 %616, label %617, label %646

617:                                              ; preds = %604
  %618 = and i64 %605, -262144
  %619 = or i64 %618, 8
  %620 = inttoptr i64 %619 to i64*
  %621 = load i64, i64* %620, align 8
  %622 = and i64 %621, 262144
  %623 = icmp eq i64 %622, 0
  br i1 %623, label %629, label %624

624:                                              ; preds = %617
  %625 = and i64 %606, -3
  %626 = or i64 %618, 16
  %627 = inttoptr i64 %626 to %"class.v8::internal::Heap"**
  %628 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %627, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %628, i64 %605, i64 %610, i64 %625) #9
  br label %629

629:                                              ; preds = %624, %617
  %630 = and i64 %606, -3
  %631 = and i64 %606, -262144
  %632 = or i64 %631, 8
  %633 = inttoptr i64 %632 to i64*
  %634 = load i64, i64* %633, align 8
  %635 = and i64 %634, 24
  %636 = icmp eq i64 %635, 0
  br i1 %636, label %646, label %637

637:                                              ; preds = %629
  %638 = and i64 %605, -262144
  %639 = or i64 %638, 8
  %640 = inttoptr i64 %639 to i64*
  %641 = load i64, i64* %640, align 8
  %642 = and i64 %641, 24
  %643 = icmp eq i64 %642, 0
  br i1 %643, label %644, label %646

644:                                              ; preds = %637
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %605, i64 %610, i64 %630) #9
  br label %646

645:                                              ; preds = %43
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #16
  unreachable

646:                                              ; preds = %604, %417, %629, %637, %644, %75, %252, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal13FeedbackNexus12GetCallCountEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %3 = extractvalue { i64, i64 } %2, 1
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %7, label %6, !prof !29

6:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30, i64 0, i64 0)) #16
  unreachable

7:                                                ; preds = %1
  %8 = trunc i64 %3 to i32
  %9 = ashr i32 %8, 1
  %10 = lshr i32 %9, 2
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13FeedbackNexus18SetSpeculationModeENS0_15SpeculationModeE(%"class.v8::internal::FeedbackNexus"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %4 = extractvalue { i64, i64 } %3, 1
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %8, label %7, !prof !29

7:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30, i64 0, i64 0)) #16
  unreachable

8:                                                ; preds = %2
  %9 = trunc i64 %4 to i32
  %10 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = shl i32 %1, 1
  %13 = and i32 %9, -8
  %14 = or i32 %13, %12
  %15 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %16, null
  %18 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = select i1 %17, i64* %18, i64* %16
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 1
  %24 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %23, align 8
  %25 = icmp eq %"class.v8::internal::LocalHeap"* %24, null
  br i1 %25, label %27, label %26, !prof !29

26:                                               ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0)) #16
  unreachable

27:                                               ; preds = %8
  %28 = add i64 %20, 3
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %22, 1
  %32 = icmp sgt i32 %30, %31
  br i1 %32, label %34, label %33, !prof !29

33:                                               ; preds = %27
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27, i64 0, i64 0)) #16
  unreachable

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 0
  %36 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %36, i64 0, i32 16
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %37) #9
  %38 = shl i32 %22, 2
  %39 = sext i32 %38 to i64
  %40 = add i64 %20, 31
  %41 = add i64 %40, %39
  %42 = inttoptr i64 %41 to i32*
  %43 = trunc i64 %11 to i32
  store atomic volatile i32 %43, i32* %42 monotonic, align 4
  %44 = shl i32 %31, 2
  %45 = sext i32 %44 to i64
  %46 = add i64 %40, %45
  %47 = inttoptr i64 %46 to i32*
  store atomic volatile i32 %14, i32* %47 monotonic, align 4
  tail call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %37) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal13FeedbackNexus18GetSpeculationModeEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %3 = extractvalue { i64, i64 } %2, 1
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %7, label %6, !prof !29

6:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30, i64 0, i64 0)) #16
  unreachable

7:                                                ; preds = %1
  %8 = trunc i64 %3 to i32
  %9 = lshr i32 %8, 1
  %10 = and i32 %9, 1
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal13FeedbackNexus22GetCallFeedbackContentEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %3 = extractvalue { i64, i64 } %2, 1
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %7, label %6, !prof !29

6:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30, i64 0, i64 0)) #16
  unreachable

7:                                                ; preds = %1
  %8 = trunc i64 %3 to i32
  %9 = lshr i32 %8, 2
  %10 = and i32 %9, 1
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN2v88internal13FeedbackNexus20ComputeCallFrequencyEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = select i1 %4, i64* %5, i64* %3
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 7
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %12 = extractvalue { i64, i64 } %11, 1
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %16, label %15, !prof !29

15:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30, i64 0, i64 0)) #16
  unreachable

16:                                               ; preds = %1
  %17 = icmp eq i32 %10, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %16
  %19 = trunc i64 %12 to i32
  %20 = ashr i32 %19, 1
  %21 = lshr i32 %20, 2
  %22 = sitofp i32 %10 to double
  %23 = sitofp i32 %21 to double
  %24 = fdiv double %23, %22
  %25 = fptrunc double %24 to float
  br label %26

26:                                               ; preds = %16, %18
  %27 = phi float [ %25, %18 ], [ 0.000000e+00, %16 ]
  ret float %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13FeedbackNexus20ConfigureMonomorphicENS0_6HandleINS0_4NameEEENS2_INS0_3MapEEERKNS0_17MaybeObjectHandleE(%"class.v8::internal::FeedbackNexus"* nocapture readonly, i64*, i64*, %"class.v8::internal::MaybeObjectHandle"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4
  %7 = icmp eq i8 %6, 17
  br i1 %7, label %8, label %21

8:                                                ; preds = %4
  %9 = load i64, i64* %2, align 8
  %10 = or i64 %9, 2
  %11 = load i64, i64* %1, align 8
  %12 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp eq i64* %14, null
  %16 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = select i1 %15, i64* %16, i64* %14
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %20 = load i32, i32* %19, align 8
  tail call void @_ZNK2v88internal11NexusConfig15SetFeedbackPairENS0_14FeedbackVectorENS0_12FeedbackSlotENS0_11MaybeObjectENS0_16WriteBarrierModeES4_S5_(%"class.v8::internal::NexusConfig"* %12, i64 %18, i32 %20, i64 %10, i32 4, i64 %11, i32 4) #9
  br label %168

21:                                               ; preds = %4
  %22 = icmp eq i64* %1, null
  br i1 %22, label %23, label %52

23:                                               ; preds = %21
  %24 = load i64, i64* %2, align 8
  %25 = or i64 %24, 2
  %26 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %3, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %3, i64 0, i32 1, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  br i1 %28, label %32, label %37

32:                                               ; preds = %23
  br i1 %31, label %33, label %34, !prof !2

33:                                               ; preds = %32
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

34:                                               ; preds = %32
  %35 = load i64, i64* %30, align 8
  %36 = or i64 %35, 2
  br label %41

37:                                               ; preds = %23
  br i1 %31, label %38, label %39, !prof !2

38:                                               ; preds = %37
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

39:                                               ; preds = %37
  %40 = load i64, i64* %30, align 8
  br label %41

41:                                               ; preds = %34, %39
  %42 = phi i64 [ %36, %34 ], [ %40, %39 ]
  %43 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %44 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = icmp eq i64* %45, null
  %47 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = select i1 %46, i64* %47, i64* %45
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %51 = load i32, i32* %50, align 8
  tail call void @_ZNK2v88internal11NexusConfig15SetFeedbackPairENS0_14FeedbackVectorENS0_12FeedbackSlotENS0_11MaybeObjectENS0_16WriteBarrierModeES4_S5_(%"class.v8::internal::NexusConfig"* %43, i64 %49, i32 %51, i64 %25, i32 4, i64 %42, i32 4) #9
  br label %168

52:                                               ; preds = %21
  %53 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = icmp eq i64* %54, null
  %56 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = select i1 %55, i64* %56, i64* %54
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, -262144
  %60 = or i64 %59, 16
  %61 = inttoptr i64 %60 to i64*
  %62 = load i64, i64* %61, align 16
  %63 = add i64 %62, -41416
  %64 = inttoptr i64 %63 to %"class.v8::internal::FactoryBase"*
  %65 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %64, i32 2, i8 zeroext 0) #9
  %66 = load i64, i64* %65, align 8
  %67 = load i64, i64* %2, align 8
  %68 = add i64 %66, 7
  %69 = inttoptr i64 %68 to i32*
  %70 = trunc i64 %67 to i32
  %71 = or i32 %70, 2
  store atomic volatile i32 %71, i32* %69 monotonic, align 4
  %72 = and i64 %67, 1
  %73 = icmp ne i64 %72, 0
  %74 = icmp ne i32 %71, 3
  %75 = and i1 %73, %74
  br i1 %75, label %76, label %104

76:                                               ; preds = %52
  %77 = and i64 %66, -262144
  %78 = or i64 %77, 8
  %79 = inttoptr i64 %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, 262144
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %88, label %83

83:                                               ; preds = %76
  %84 = and i64 %67, -3
  %85 = or i64 %77, 16
  %86 = inttoptr i64 %85 to %"class.v8::internal::Heap"**
  %87 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %86, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %87, i64 %66, i64 %68, i64 %84) #9
  br label %88

88:                                               ; preds = %83, %76
  %89 = and i64 %67, -3
  %90 = and i64 %67, -262144
  %91 = or i64 %90, 8
  %92 = inttoptr i64 %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = and i64 %93, 24
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %88
  %97 = and i64 %66, -262144
  %98 = or i64 %97, 8
  %99 = inttoptr i64 %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = and i64 %100, 24
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %66, i64 %68, i64 %89) #9
  br label %104

104:                                              ; preds = %52, %88, %96, %103
  %105 = load i64, i64* %65, align 8
  %106 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %3, i64 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %3, i64 0, i32 1, i32 0
  %110 = load i64*, i64** %109, align 8
  %111 = icmp eq i64* %110, null
  br i1 %108, label %112, label %117

112:                                              ; preds = %104
  br i1 %111, label %113, label %114, !prof !2

113:                                              ; preds = %112
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

114:                                              ; preds = %112
  %115 = load i64, i64* %110, align 8
  %116 = or i64 %115, 2
  br label %121

117:                                              ; preds = %104
  br i1 %111, label %118, label %119, !prof !2

118:                                              ; preds = %117
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

119:                                              ; preds = %117
  %120 = load i64, i64* %110, align 8
  br label %121

121:                                              ; preds = %114, %119
  %122 = phi i64 [ %116, %114 ], [ %120, %119 ]
  %123 = add i64 %105, 11
  %124 = inttoptr i64 %123 to i32*
  %125 = trunc i64 %122 to i32
  store atomic volatile i32 %125, i32* %124 monotonic, align 4
  %126 = and i64 %122, 1
  %127 = icmp ne i64 %126, 0
  %128 = icmp ne i32 %125, 3
  %129 = and i1 %128, %127
  br i1 %129, label %130, label %158

130:                                              ; preds = %121
  %131 = and i64 %105, -262144
  %132 = or i64 %131, 8
  %133 = inttoptr i64 %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = and i64 %134, 262144
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %142, label %137

137:                                              ; preds = %130
  %138 = and i64 %122, -3
  %139 = or i64 %131, 16
  %140 = inttoptr i64 %139 to %"class.v8::internal::Heap"**
  %141 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %140, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %141, i64 %105, i64 %123, i64 %138) #9
  br label %142

142:                                              ; preds = %137, %130
  %143 = and i64 %122, -3
  %144 = and i64 %122, -262144
  %145 = or i64 %144, 8
  %146 = inttoptr i64 %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = and i64 %147, 24
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %158, label %150

150:                                              ; preds = %142
  %151 = and i64 %105, -262144
  %152 = or i64 %151, 8
  %153 = inttoptr i64 %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = and i64 %154, 24
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %150
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %105, i64 %123, i64 %143) #9
  br label %158

158:                                              ; preds = %121, %142, %150, %157
  %159 = load i64, i64* %1, align 8
  %160 = load i64, i64* %65, align 8
  %161 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %162 = load i64*, i64** %53, align 8
  %163 = icmp eq i64* %162, null
  %164 = select i1 %163, i64* %56, i64* %162
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %167 = load i32, i32* %166, align 8
  tail call void @_ZNK2v88internal11NexusConfig15SetFeedbackPairENS0_14FeedbackVectorENS0_12FeedbackSlotENS0_11MaybeObjectENS0_16WriteBarrierModeES4_S5_(%"class.v8::internal::NexusConfig"* %161, i64 %165, i32 %167, i64 %159, i32 4, i64 %160, i32 4) #9
  br label %168

168:                                              ; preds = %41, %158, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13FeedbackNexus20ConfigurePolymorphicENS0_6HandleINS0_4NameEEERKNSt3__16vectorINS5_4pairINS2_INS0_3MapEEENS0_17MaybeObjectHandleEEENS5_9allocatorISB_EEEE(%"class.v8::internal::FeedbackNexus"* nocapture readonly, i64*, %"class.std::__1::vector.1220"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.1220", %"class.std::__1::vector.1220"* %2, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::pair.1222"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.1220"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = trunc i64 %10 to i32
  %12 = shl nsw i32 %11, 1
  %13 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp eq i64* %14, null
  %16 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = select i1 %15, i64* %16, i64* %14
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, -262144
  %20 = or i64 %19, 16
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = add i64 %22, -41416
  %24 = inttoptr i64 %23 to %"class.v8::internal::FactoryBase"*
  %25 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %24, i32 %12, i8 zeroext 0) #9
  %26 = icmp sgt i32 %11, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.std::__1::vector.1220", %"class.std::__1::vector.1220"* %2, i64 0, i32 0, i32 0
  %29 = and i64 %10, 4294967295
  br label %32

30:                                               ; preds = %137, %3
  %31 = icmp eq i64* %1, null
  br i1 %31, label %140, label %157

32:                                               ; preds = %137, %27
  %33 = phi i64 [ 0, %27 ], [ %138, %137 ]
  %34 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %28, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %34, i64 %33, i32 0, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = load i64, i64* %25, align 8
  %38 = trunc i64 %33 to i32
  %39 = shl i32 %38, 3
  %40 = load i64, i64* %36, align 8
  %41 = or i32 %39, 7
  %42 = sext i32 %41 to i64
  %43 = add i64 %37, %42
  %44 = inttoptr i64 %43 to i32*
  %45 = trunc i64 %40 to i32
  %46 = or i32 %45, 2
  store atomic volatile i32 %46, i32* %44 monotonic, align 4
  %47 = and i64 %40, 1
  %48 = icmp ne i64 %47, 0
  %49 = icmp ne i32 %46, 3
  %50 = and i1 %48, %49
  br i1 %50, label %51, label %79

51:                                               ; preds = %32
  %52 = and i64 %37, -262144
  %53 = or i64 %52, 8
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, 262144
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %51
  %59 = and i64 %40, -3
  %60 = or i64 %52, 16
  %61 = inttoptr i64 %60 to %"class.v8::internal::Heap"**
  %62 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %61, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %62, i64 %37, i64 %43, i64 %59) #9
  br label %63

63:                                               ; preds = %58, %51
  %64 = and i64 %40, -3
  %65 = and i64 %40, -262144
  %66 = or i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %63
  %72 = and i64 %37, -262144
  %73 = or i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = and i64 %75, 24
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %71
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %37, i64 %43, i64 %64) #9
  br label %79

79:                                               ; preds = %32, %63, %71, %78
  %80 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %28, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %80, i64 %33, i32 1, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %80, i64 %33, i32 1, i32 1, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = load i64, i64* %25, align 8
  %86 = or i32 %39, 4
  %87 = icmp eq i32 %82, 0
  %88 = icmp eq i64* %84, null
  br i1 %87, label %89, label %94

89:                                               ; preds = %79
  br i1 %88, label %90, label %91, !prof !2

90:                                               ; preds = %89
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

91:                                               ; preds = %89
  %92 = load i64, i64* %84, align 8
  %93 = or i64 %92, 2
  br label %98

94:                                               ; preds = %79
  br i1 %88, label %95, label %96, !prof !2

95:                                               ; preds = %94
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

96:                                               ; preds = %94
  %97 = load i64, i64* %84, align 8
  br label %98

98:                                               ; preds = %91, %96
  %99 = phi i64 [ %93, %91 ], [ %97, %96 ]
  %100 = sext i32 %86 to i64
  %101 = add nsw i64 %100, 7
  %102 = add i64 %101, %85
  %103 = inttoptr i64 %102 to i32*
  %104 = trunc i64 %99 to i32
  store atomic volatile i32 %104, i32* %103 monotonic, align 4
  %105 = and i64 %99, 1
  %106 = icmp ne i64 %105, 0
  %107 = icmp ne i32 %104, 3
  %108 = and i1 %107, %106
  br i1 %108, label %109, label %137

109:                                              ; preds = %98
  %110 = and i64 %85, -262144
  %111 = or i64 %110, 8
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 262144
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %109
  %117 = and i64 %99, -3
  %118 = or i64 %110, 16
  %119 = inttoptr i64 %118 to %"class.v8::internal::Heap"**
  %120 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %119, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %120, i64 %85, i64 %102, i64 %117) #9
  br label %121

121:                                              ; preds = %116, %109
  %122 = and i64 %99, -3
  %123 = and i64 %99, -262144
  %124 = or i64 %123, 8
  %125 = inttoptr i64 %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = and i64 %126, 24
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %137, label %129

129:                                              ; preds = %121
  %130 = and i64 %85, -262144
  %131 = or i64 %130, 8
  %132 = inttoptr i64 %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = and i64 %133, 24
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %129
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %85, i64 %102, i64 %122) #9
  br label %137

137:                                              ; preds = %98, %121, %129, %136
  %138 = add nuw nsw i64 %33, 1
  %139 = icmp eq i64 %138, %29
  br i1 %139, label %30, label %32

140:                                              ; preds = %30
  %141 = load i64, i64* %25, align 8
  %142 = load i64*, i64** %13, align 8
  %143 = icmp eq i64* %142, null
  %144 = select i1 %143, i64* %16, i64* %142
  %145 = load i64, i64* %144, align 8
  %146 = and i64 %145, -262144
  %147 = or i64 %146, 16
  %148 = inttoptr i64 %147 to i64*
  %149 = load i64, i64* %148, align 16
  %150 = add i64 %149, -41416
  %151 = inttoptr i64 %150 to %"class.v8::internal::Isolate"*
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %151, i64 0, i32 0, i32 7, i32 0, i64 508
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %155 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %156 = load i32, i32* %155, align 8
  tail call void @_ZNK2v88internal11NexusConfig15SetFeedbackPairENS0_14FeedbackVectorENS0_12FeedbackSlotENS0_11MaybeObjectENS0_16WriteBarrierModeES4_S5_(%"class.v8::internal::NexusConfig"* %154, i64 %145, i32 %156, i64 %141, i32 4, i64 %153, i32 0) #9
  br label %167

157:                                              ; preds = %30
  %158 = load i64, i64* %1, align 8
  %159 = load i64, i64* %25, align 8
  %160 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %161 = load i64*, i64** %13, align 8
  %162 = icmp eq i64* %161, null
  %163 = select i1 %162, i64* %16, i64* %161
  %164 = load i64, i64* %163, align 8
  %165 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %166 = load i32, i32* %165, align 8
  tail call void @_ZNK2v88internal11NexusConfig15SetFeedbackPairENS0_14FeedbackVectorENS0_12FeedbackSlotENS0_11MaybeObjectENS0_16WriteBarrierModeES4_S5_(%"class.v8::internal::NexusConfig"* %160, i64 %164, i32 %166, i64 %158, i32 4, i64 %159, i32 4) #9
  br label %167

167:                                              ; preds = %157, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal13FeedbackNexus11ExtractMapsEPNSt3__16vectorINS0_6HandleINS0_3MapEEENS2_9allocatorIS6_EEEE(%"class.v8::internal::FeedbackNexus"*, %"class.std::__1::vector.1228"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::FeedbackIterator", align 8
  %4 = bitcast %"class.v8::internal::FeedbackIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #9
  call void @_ZN2v88internal16FeedbackIteratorC2EPKNS0_13FeedbackNexusE(%"class.v8::internal::FeedbackIterator"* nonnull %3, %"class.v8::internal::FeedbackNexus"* %0)
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %3, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !30
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %19

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.1228", %"class.std::__1::vector.1228"* %1, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.1228", %"class.std::__1::vector.1228"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.v8::internal::Handle.1218"** %12 to i64*
  %15 = bitcast %"class.std::__1::vector.1228"* %1 to i64*
  %16 = bitcast %"class.v8::internal::Handle.1218"** %13 to i64*
  %17 = getelementptr inbounds %"class.std::__1::vector.1228", %"class.std::__1::vector.1228"* %1, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %3, i64 0, i32 6
  br label %21

19:                                               ; preds = %136, %134, %2
  %20 = phi i32 [ 0, %2 ], [ %132, %134 ], [ %132, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #9
  ret i32 %20

21:                                               ; preds = %8, %136
  %22 = phi i32 [ 0, %8 ], [ %132, %136 ]
  %23 = load i64, i64* %9, align 8
  %24 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %10, align 8
  %25 = icmp eq %"class.v8::internal::LocalHeap"* %24, null
  br i1 %25, label %26, label %46

26:                                               ; preds = %21
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 31, i32 4
  %29 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %28, align 8
  %30 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %29, i64 %23) #9
  br label %67

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 31, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 31, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %35, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %27) #9
  br label %41

41:                                               ; preds = %39, %33
  %42 = phi i64* [ %40, %39 ], [ %35, %33 ]
  %43 = ptrtoint i64* %42 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  store i64* %45, i64** %34, align 8
  store i64 %23, i64* %42, align 8
  br label %67

46:                                               ; preds = %21
  %47 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %24, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !30
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* nonnull %24, i64 %23) #9
  br label %67

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %24, i64 0, i32 7, i32 0, i32 0, i32 0
  %54 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %54, i64 0, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %54, i64 0, i32 0, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %56, %58
  br i1 %59, label %60, label %63

60:                                               ; preds = %52
  %61 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %54) #9
  %62 = load i64*, i64** %55, align 8
  br label %63

63:                                               ; preds = %60, %52
  %64 = phi i64* [ %62, %60 ], [ %56, %52 ]
  %65 = phi i64* [ %61, %60 ], [ %56, %52 ]
  %66 = getelementptr inbounds i64, i64* %64, i64 1
  store i64* %66, i64** %55, align 8
  store i64 %23, i64* %65, align 8
  br label %67

67:                                               ; preds = %31, %41, %50, %63
  %68 = phi i64* [ %32, %31 ], [ %42, %41 ], [ %51, %50 ], [ %65, %63 ]
  %69 = ptrtoint i64* %68 to i64
  %70 = load %"class.v8::internal::Handle.1218"*, %"class.v8::internal::Handle.1218"** %12, align 8
  %71 = load %"class.v8::internal::Handle.1218"*, %"class.v8::internal::Handle.1218"** %13, align 8
  %72 = icmp ult %"class.v8::internal::Handle.1218"* %70, %71
  %73 = ptrtoint %"class.v8::internal::Handle.1218"* %71 to i64
  br i1 %72, label %74, label %78

74:                                               ; preds = %67
  %75 = bitcast %"class.v8::internal::Handle.1218"* %70 to i64*
  store i64 %69, i64* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Handle.1218", %"class.v8::internal::Handle.1218"* %70, i64 1
  %77 = ptrtoint %"class.v8::internal::Handle.1218"* %76 to i64
  store i64 %77, i64* %14, align 8
  br label %131

78:                                               ; preds = %67
  %79 = ptrtoint %"class.v8::internal::Handle.1218"* %70 to i64
  %80 = load i64, i64* %15, align 8
  %81 = sub i64 %79, %80
  %82 = ashr exact i64 %81, 3
  %83 = add nsw i64 %82, 1
  %84 = icmp ugt i64 %83, 2305843009213693951
  br i1 %84, label %85, label %87

85:                                               ; preds = %78
  %86 = bitcast %"class.std::__1::vector.1228"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %86) #16
  unreachable

87:                                               ; preds = %78
  %88 = sub i64 %73, %80
  %89 = ashr exact i64 %88, 3
  %90 = icmp ult i64 %89, 1152921504606846975
  br i1 %90, label %91, label %99

91:                                               ; preds = %87
  %92 = ashr exact i64 %88, 2
  %93 = icmp ult i64 %92, %83
  %94 = select i1 %93, i64 %83, i64 %92
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %91
  %97 = icmp ugt i64 %94, 2305843009213693951
  br i1 %97, label %98, label %99

98:                                               ; preds = %96
  tail call void @abort() #16
  unreachable

99:                                               ; preds = %96, %87
  %100 = phi i64 [ %94, %96 ], [ 2305843009213693951, %87 ]
  %101 = shl i64 %100, 3
  %102 = tail call i8* @_Znwm(i64 %101) #17
  %103 = bitcast i8* %102 to %"class.v8::internal::Handle.1218"*
  br label %104

104:                                              ; preds = %99, %91
  %105 = phi i64 [ %100, %99 ], [ 0, %91 ]
  %106 = phi %"class.v8::internal::Handle.1218"* [ %103, %99 ], [ null, %91 ]
  %107 = getelementptr inbounds %"class.v8::internal::Handle.1218", %"class.v8::internal::Handle.1218"* %106, i64 %82
  %108 = getelementptr inbounds %"class.v8::internal::Handle.1218", %"class.v8::internal::Handle.1218"* %106, i64 %105
  %109 = ptrtoint %"class.v8::internal::Handle.1218"* %108 to i64
  %110 = bitcast %"class.v8::internal::Handle.1218"* %107 to i64*
  store i64 %69, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Handle.1218", %"class.v8::internal::Handle.1218"* %107, i64 1
  %112 = ptrtoint %"class.v8::internal::Handle.1218"* %111 to i64
  %113 = load %"class.v8::internal::Handle.1218"*, %"class.v8::internal::Handle.1218"** %17, align 8
  %114 = load i64, i64* %14, align 8
  %115 = ptrtoint %"class.v8::internal::Handle.1218"* %113 to i64
  %116 = sub i64 %114, %115
  %117 = ashr exact i64 %116, 3
  %118 = sub nsw i64 0, %117
  %119 = getelementptr inbounds %"class.v8::internal::Handle.1218", %"class.v8::internal::Handle.1218"* %107, i64 %118
  %120 = ptrtoint %"class.v8::internal::Handle.1218"* %119 to i64
  %121 = icmp sgt i64 %116, 0
  br i1 %121, label %122, label %126

122:                                              ; preds = %104
  %123 = bitcast %"class.v8::internal::Handle.1218"* %119 to i8*
  %124 = bitcast %"class.v8::internal::Handle.1218"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 %116, i1 false) #9
  %125 = load %"class.v8::internal::Handle.1218"*, %"class.v8::internal::Handle.1218"** %17, align 8
  br label %126

126:                                              ; preds = %122, %104
  %127 = phi %"class.v8::internal::Handle.1218"* [ %113, %104 ], [ %125, %122 ]
  store i64 %120, i64* %15, align 8
  store i64 %112, i64* %14, align 8
  store i64 %109, i64* %16, align 8
  %128 = icmp eq %"class.v8::internal::Handle.1218"* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %126
  %130 = bitcast %"class.v8::internal::Handle.1218"* %127 to i8*
  tail call void @_ZdlPv(i8* %130) #17
  br label %131

131:                                              ; preds = %129, %126, %74
  %132 = add nuw nsw i32 %22, 1
  %133 = load i32, i32* %18, align 8
  switch i32 %133, label %135 [
    i32 0, label %134
    i32 1, label %136
  ], !prof !31

134:                                              ; preds = %131
  store i8 1, i8* %5, align 8
  br label %19

135:                                              ; preds = %131
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0)) #16
  unreachable

136:                                              ; preds = %131
  call void @_ZN2v88internal16FeedbackIterator18AdvancePolymorphicEv(%"class.v8::internal::FeedbackIterator"* nonnull %3) #9
  %137 = load i8, i8* %5, align 8, !range !30
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %21, label %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16FeedbackIterator7AdvanceEv(%"class.v8::internal::FeedbackIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !30
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5, !prof !29

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #16
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %10 [
    i32 0, label %9
    i32 1, label %11
  ], !prof !31

9:                                                ; preds = %6
  store i8 1, i8* %2, align 8
  br label %12

10:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0)) #16
  unreachable

11:                                               ; preds = %6
  tail call void @_ZN2v88internal16FeedbackIterator18AdvancePolymorphicEv(%"class.v8::internal::FeedbackIterator"* %0)
  br label %12

12:                                               ; preds = %11, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal13FeedbackNexus22ExtractMapsAndFeedbackEPNSt3__16vectorINS2_4pairINS0_6HandleINS0_3MapEEENS0_17MaybeObjectHandleEEENS2_9allocatorIS9_EEEE(%"class.v8::internal::FeedbackNexus"*, %"class.std::__1::vector.1220"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::FeedbackIterator", align 8
  %4 = bitcast %"class.v8::internal::FeedbackIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #9
  call void @_ZN2v88internal16FeedbackIteratorC2EPKNS0_13FeedbackNexusE(%"class.v8::internal::FeedbackIterator"* nonnull %3, %"class.v8::internal::FeedbackNexus"* %0)
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %3, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !30
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %21

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 1
  %12 = getelementptr inbounds %"class.v8::internal::NexusConfig", %"class.v8::internal::NexusConfig"* %9, i64 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %3, i64 0, i32 2, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.1220", %"class.std::__1::vector.1220"* %1, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.1220", %"class.std::__1::vector.1220"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.std::__1::pair.1222"** %14 to i64*
  %17 = bitcast %"class.std::__1::vector.1220"* %1 to i64*
  %18 = bitcast %"struct.std::__1::pair.1222"** %15 to i64*
  %19 = getelementptr inbounds %"class.std::__1::vector.1220", %"class.std::__1::vector.1220"* %1, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %3, i64 0, i32 6
  br label %23

21:                                               ; preds = %147, %145, %2
  %22 = phi i32 [ 0, %2 ], [ %143, %145 ], [ %143, %147 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #9
  ret i32 %22

23:                                               ; preds = %8, %147
  %24 = phi i32 [ 0, %8 ], [ %143, %147 ]
  %25 = load i64, i64* %10, align 8
  %26 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %11, align 8
  %27 = icmp eq %"class.v8::internal::LocalHeap"* %26, null
  br i1 %27, label %28, label %48

28:                                               ; preds = %23
  %29 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 4
  %31 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %30, align 8
  %32 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %31, i64 %25) #9
  br label %69

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 1
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %37, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %29) #9
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi i64* [ %42, %41 ], [ %37, %35 ]
  %45 = ptrtoint i64* %44 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  store i64* %47, i64** %36, align 8
  store i64 %25, i64* %44, align 8
  br label %69

48:                                               ; preds = %23
  %49 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %26, i64 0, i32 1
  %50 = load i8, i8* %49, align 8, !range !30
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* nonnull %26, i64 %25) #9
  br label %69

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %26, i64 0, i32 7, i32 0, i32 0, i32 0
  %56 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %56, i64 0, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %56, i64 0, i32 0, i32 1
  %60 = load i64*, i64** %59, align 8
  %61 = icmp eq i64* %58, %60
  br i1 %61, label %62, label %65

62:                                               ; preds = %54
  %63 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %56) #9
  %64 = load i64*, i64** %57, align 8
  br label %65

65:                                               ; preds = %62, %54
  %66 = phi i64* [ %64, %62 ], [ %58, %54 ]
  %67 = phi i64* [ %63, %62 ], [ %58, %54 ]
  %68 = getelementptr inbounds i64, i64* %66, i64 1
  store i64* %68, i64** %57, align 8
  store i64 %25, i64* %67, align 8
  br label %69

69:                                               ; preds = %33, %43, %52, %65
  %70 = phi i64* [ %34, %33 ], [ %44, %43 ], [ %53, %52 ], [ %67, %65 ]
  %71 = ptrtoint i64* %70 to i64
  %72 = load i64, i64* %13, align 8
  %73 = trunc i64 %72 to i32
  %74 = icmp eq i32 %73, 3
  br i1 %74, label %142, label %75

75:                                               ; preds = %69
  %76 = tail call { i32, i64* } @_ZNK2v88internal11NexusConfig9NewHandleENS0_11MaybeObjectE(%"class.v8::internal::NexusConfig"* %9, i64 %72)
  %77 = extractvalue { i32, i64* } %76, 0
  %78 = extractvalue { i32, i64* } %76, 1
  %79 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %14, align 8
  %80 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %15, align 8
  %81 = icmp ult %"struct.std::__1::pair.1222"* %79, %80
  %82 = ptrtoint %"struct.std::__1::pair.1222"* %80 to i64
  br i1 %81, label %83, label %89

83:                                               ; preds = %75
  %84 = bitcast %"struct.std::__1::pair.1222"* %79 to i64*
  store i64 %71, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %79, i64 0, i32 1, i32 0
  store i32 %77, i32* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %79, i64 0, i32 1, i32 1, i32 0
  store i64* %78, i64** %86, align 8
  %87 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %79, i64 1
  %88 = ptrtoint %"struct.std::__1::pair.1222"* %87 to i64
  store i64 %88, i64* %16, align 8
  br label %140

89:                                               ; preds = %75
  %90 = ptrtoint %"struct.std::__1::pair.1222"* %79 to i64
  %91 = load i64, i64* %17, align 8
  %92 = sub i64 %90, %91
  %93 = sdiv exact i64 %92, 24
  %94 = add nsw i64 %93, 1
  %95 = icmp ugt i64 %94, 768614336404564650
  br i1 %95, label %96, label %98

96:                                               ; preds = %89
  %97 = bitcast %"class.std::__1::vector.1220"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %97) #16
  unreachable

98:                                               ; preds = %89
  %99 = sub i64 %82, %91
  %100 = sdiv exact i64 %99, 24
  %101 = icmp ult i64 %100, 384307168202282325
  br i1 %101, label %102, label %107

102:                                              ; preds = %98
  %103 = shl nsw i64 %100, 1
  %104 = icmp ult i64 %103, %94
  %105 = select i1 %104, i64 %94, i64 %103
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %112, label %107

107:                                              ; preds = %102, %98
  %108 = phi i64 [ %105, %102 ], [ 768614336404564650, %98 ]
  %109 = mul i64 %108, 24
  %110 = tail call i8* @_Znwm(i64 %109) #17
  %111 = bitcast i8* %110 to %"struct.std::__1::pair.1222"*
  br label %112

112:                                              ; preds = %107, %102
  %113 = phi i64 [ %108, %107 ], [ 0, %102 ]
  %114 = phi %"struct.std::__1::pair.1222"* [ %111, %107 ], [ null, %102 ]
  %115 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %114, i64 %93
  %116 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %114, i64 %113
  %117 = ptrtoint %"struct.std::__1::pair.1222"* %116 to i64
  %118 = bitcast %"struct.std::__1::pair.1222"* %115 to i64*
  store i64 %71, i64* %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %114, i64 %93, i32 1, i32 0
  store i32 %77, i32* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %114, i64 %93, i32 1, i32 1, i32 0
  store i64* %78, i64** %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %115, i64 1
  %122 = ptrtoint %"struct.std::__1::pair.1222"* %121 to i64
  %123 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %19, align 8
  %124 = load i64, i64* %16, align 8
  %125 = ptrtoint %"struct.std::__1::pair.1222"* %123 to i64
  %126 = sub i64 %124, %125
  %127 = sdiv exact i64 %126, -24
  %128 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %115, i64 %127
  %129 = ptrtoint %"struct.std::__1::pair.1222"* %128 to i64
  %130 = icmp sgt i64 %126, 0
  br i1 %130, label %131, label %135

131:                                              ; preds = %112
  %132 = bitcast %"struct.std::__1::pair.1222"* %128 to i8*
  %133 = bitcast %"struct.std::__1::pair.1222"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 %126, i1 false) #9
  %134 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %19, align 8
  br label %135

135:                                              ; preds = %131, %112
  %136 = phi %"struct.std::__1::pair.1222"* [ %123, %112 ], [ %134, %131 ]
  store i64 %129, i64* %17, align 8
  store i64 %122, i64* %16, align 8
  store i64 %117, i64* %18, align 8
  %137 = icmp eq %"struct.std::__1::pair.1222"* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %135
  %139 = bitcast %"struct.std::__1::pair.1222"* %136 to i8*
  tail call void @_ZdlPv(i8* %139) #17
  br label %140

140:                                              ; preds = %83, %135, %138
  %141 = add nsw i32 %24, 1
  br label %142

142:                                              ; preds = %69, %140
  %143 = phi i32 [ %24, %69 ], [ %141, %140 ]
  %144 = load i32, i32* %20, align 8
  switch i32 %144, label %146 [
    i32 0, label %145
    i32 1, label %147
  ], !prof !31

145:                                              ; preds = %142
  store i8 1, i8* %5, align 8
  br label %21

146:                                              ; preds = %142
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0)) #16
  unreachable

147:                                              ; preds = %142
  call void @_ZN2v88internal16FeedbackIterator18AdvancePolymorphicEv(%"class.v8::internal::FeedbackIterator"* nonnull %3) #9
  %148 = load i8, i8* %5, align 8, !range !30
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %23, label %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal13FeedbackNexus22ExtractMapsAndHandlersEPNSt3__16vectorINS2_4pairINS0_6HandleINS0_3MapEEENS0_17MaybeObjectHandleEEENS2_9allocatorIS9_EEEENS2_8functionIFNS0_11MaybeHandleIS6_EES7_EEE(%"class.v8::internal::FeedbackNexus"*, %"class.std::__1::vector.1220"*, %"class.std::__1::function"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle.1218", align 8
  %5 = alloca %"class.v8::internal::FeedbackIterator", align 8
  %6 = bitcast %"class.v8::internal::FeedbackIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #9
  call void @_ZN2v88internal16FeedbackIteratorC2EPKNS0_13FeedbackNexusE(%"class.v8::internal::FeedbackIterator"* nonnull %5, %"class.v8::internal::FeedbackNexus"* %0)
  %7 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %5, i64 0, i32 3
  %8 = load i8, i8* %7, align 8, !range !30
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %28

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %12 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::NexusConfig", %"class.v8::internal::NexusConfig"* %11, i64 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %5, i64 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  %17 = bitcast %"class.v8::internal::Handle.1218"* %4 to i8*
  %18 = getelementptr inbounds %"class.v8::internal::Handle.1218", %"class.v8::internal::Handle.1218"* %4, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector.1220", %"class.std::__1::vector.1220"* %1, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector.1220", %"class.std::__1::vector.1220"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"struct.std::__1::pair.1222"** %21 to i64*
  %24 = bitcast %"class.std::__1::vector.1220"* %1 to i64*
  %25 = bitcast %"struct.std::__1::pair.1222"** %22 to i64*
  %26 = getelementptr inbounds %"class.std::__1::vector.1220", %"class.std::__1::vector.1220"* %1, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %5, i64 0, i32 6
  br label %30

28:                                               ; preds = %164, %162, %3
  %29 = phi i32 [ 0, %3 ], [ %160, %162 ], [ %160, %164 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #9
  ret i32 %29

30:                                               ; preds = %10, %164
  %31 = phi i32 [ 0, %10 ], [ %160, %164 ]
  %32 = load i64, i64* %12, align 8
  %33 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %13, align 8
  %34 = icmp eq %"class.v8::internal::LocalHeap"* %33, null
  br i1 %34, label %35, label %55

35:                                               ; preds = %30
  %36 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %14, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %36, i64 0, i32 31, i32 4
  %38 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8
  %39 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %35
  %41 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %38, i64 %32) #9
  br label %76

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %36, i64 0, i32 31, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %36, i64 0, i32 31, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = icmp eq i64* %44, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %42
  %49 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %36) #9
  br label %50

50:                                               ; preds = %48, %42
  %51 = phi i64* [ %49, %48 ], [ %44, %42 ]
  %52 = ptrtoint i64* %51 to i64
  %53 = add i64 %52, 8
  %54 = inttoptr i64 %53 to i64*
  store i64* %54, i64** %43, align 8
  store i64 %32, i64* %51, align 8
  br label %76

55:                                               ; preds = %30
  %56 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %33, i64 0, i32 1
  %57 = load i8, i8* %56, align 8, !range !30
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* nonnull %33, i64 %32) #9
  br label %76

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %33, i64 0, i32 7, i32 0, i32 0, i32 0
  %63 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %63, i64 0, i32 0, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %63, i64 0, i32 0, i32 1
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %65, %67
  br i1 %68, label %69, label %72

69:                                               ; preds = %61
  %70 = call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %63) #9
  %71 = load i64*, i64** %64, align 8
  br label %72

72:                                               ; preds = %69, %61
  %73 = phi i64* [ %71, %69 ], [ %65, %61 ]
  %74 = phi i64* [ %70, %69 ], [ %65, %61 ]
  %75 = getelementptr inbounds i64, i64* %73, i64 1
  store i64* %75, i64** %64, align 8
  store i64 %32, i64* %74, align 8
  br label %76

76:                                               ; preds = %40, %50, %59, %72
  %77 = phi i64* [ %41, %40 ], [ %51, %50 ], [ %60, %59 ], [ %74, %72 ]
  %78 = load i64, i64* %15, align 8
  %79 = trunc i64 %78 to i32
  %80 = icmp eq i32 %79, 3
  br i1 %80, label %159, label %81

81:                                               ; preds = %76
  %82 = call { i32, i64* } @_ZNK2v88internal11NexusConfig9NewHandleENS0_11MaybeObjectE(%"class.v8::internal::NexusConfig"* %11, i64 %78)
  %83 = extractvalue { i32, i64* } %82, 0
  %84 = extractvalue { i32, i64* } %82, 1
  %85 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %16, align 8
  %86 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %85, i64 0, i32 2
  %87 = load i8, i8* %86, align 8, !range !30
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %81
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  store i64* %77, i64** %18, align 8
  %90 = load i64* (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1218"*)*, i64* (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1218"*)** %19, align 8
  %91 = call i64* %90(%"union.std::__1::__function::__policy_storage"* %20, %"class.v8::internal::Handle.1218"* nonnull dereferenceable(8) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  %92 = icmp eq i64* %91, null
  br i1 %92, label %159, label %93

93:                                               ; preds = %89, %81
  %94 = phi i64* [ %77, %81 ], [ %91, %89 ]
  %95 = ptrtoint i64* %94 to i64
  %96 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %21, align 8
  %97 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %22, align 8
  %98 = icmp ult %"struct.std::__1::pair.1222"* %96, %97
  %99 = ptrtoint %"struct.std::__1::pair.1222"* %97 to i64
  br i1 %98, label %100, label %106

100:                                              ; preds = %93
  %101 = bitcast %"struct.std::__1::pair.1222"* %96 to i64*
  store i64 %95, i64* %101, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %96, i64 0, i32 1, i32 0
  store i32 %83, i32* %102, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %96, i64 0, i32 1, i32 1, i32 0
  store i64* %84, i64** %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %96, i64 1
  %105 = ptrtoint %"struct.std::__1::pair.1222"* %104 to i64
  store i64 %105, i64* %23, align 8
  br label %157

106:                                              ; preds = %93
  %107 = ptrtoint %"struct.std::__1::pair.1222"* %96 to i64
  %108 = load i64, i64* %24, align 8
  %109 = sub i64 %107, %108
  %110 = sdiv exact i64 %109, 24
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 768614336404564650
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.std::__1::vector.1220"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #16
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %99, %108
  %117 = sdiv exact i64 %116, 24
  %118 = icmp ult i64 %117, 384307168202282325
  br i1 %118, label %119, label %124

119:                                              ; preds = %115
  %120 = shl nsw i64 %117, 1
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %129, label %124

124:                                              ; preds = %119, %115
  %125 = phi i64 [ %122, %119 ], [ 768614336404564650, %115 ]
  %126 = mul i64 %125, 24
  %127 = call i8* @_Znwm(i64 %126) #17
  %128 = bitcast i8* %127 to %"struct.std::__1::pair.1222"*
  br label %129

129:                                              ; preds = %124, %119
  %130 = phi i64 [ %125, %124 ], [ 0, %119 ]
  %131 = phi %"struct.std::__1::pair.1222"* [ %128, %124 ], [ null, %119 ]
  %132 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %131, i64 %110
  %133 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %131, i64 %130
  %134 = ptrtoint %"struct.std::__1::pair.1222"* %133 to i64
  %135 = bitcast %"struct.std::__1::pair.1222"* %132 to i64*
  store i64 %95, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %131, i64 %110, i32 1, i32 0
  store i32 %83, i32* %136, align 8
  %137 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %131, i64 %110, i32 1, i32 1, i32 0
  store i64* %84, i64** %137, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %132, i64 1
  %139 = ptrtoint %"struct.std::__1::pair.1222"* %138 to i64
  %140 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %26, align 8
  %141 = load i64, i64* %23, align 8
  %142 = ptrtoint %"struct.std::__1::pair.1222"* %140 to i64
  %143 = sub i64 %141, %142
  %144 = sdiv exact i64 %143, -24
  %145 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %132, i64 %144
  %146 = ptrtoint %"struct.std::__1::pair.1222"* %145 to i64
  %147 = icmp sgt i64 %143, 0
  br i1 %147, label %148, label %152

148:                                              ; preds = %129
  %149 = bitcast %"struct.std::__1::pair.1222"* %145 to i8*
  %150 = bitcast %"struct.std::__1::pair.1222"* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %150, i64 %143, i1 false) #9
  %151 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %26, align 8
  br label %152

152:                                              ; preds = %148, %129
  %153 = phi %"struct.std::__1::pair.1222"* [ %140, %129 ], [ %151, %148 ]
  store i64 %146, i64* %24, align 8
  store i64 %139, i64* %23, align 8
  store i64 %134, i64* %25, align 8
  %154 = icmp eq %"struct.std::__1::pair.1222"* %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %152
  %156 = bitcast %"struct.std::__1::pair.1222"* %153 to i8*
  call void @_ZdlPv(i8* %156) #17
  br label %157

157:                                              ; preds = %100, %152, %155
  %158 = add nsw i32 %31, 1
  br label %159

159:                                              ; preds = %76, %89, %157
  %160 = phi i32 [ %31, %76 ], [ %158, %157 ], [ %31, %89 ]
  %161 = load i32, i32* %27, align 8
  switch i32 %161, label %163 [
    i32 0, label %162
    i32 1, label %164
  ], !prof !31

162:                                              ; preds = %159
  store i8 1, i8* %7, align 8
  br label %28

163:                                              ; preds = %159
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0)) #16
  unreachable

164:                                              ; preds = %159
  call void @_ZN2v88internal16FeedbackIterator18AdvancePolymorphicEv(%"class.v8::internal::FeedbackIterator"* nonnull %5) #9
  %165 = load i8, i8* %7, align 8, !range !30
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %30, label %28
}

; Function Attrs: nounwind ssp uwtable
define hidden { i32, i64* } @_ZNK2v88internal13FeedbackNexus17FindHandlerForMapENS0_6HandleINS0_3MapEEE(%"class.v8::internal::FeedbackNexus"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::FeedbackIterator", align 8
  %4 = bitcast %"class.v8::internal::FeedbackIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #9
  call void @_ZN2v88internal16FeedbackIteratorC2EPKNS0_13FeedbackNexusE(%"class.v8::internal::FeedbackIterator"* nonnull %3, %"class.v8::internal::FeedbackNexus"* %0)
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %3, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !30
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %34

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %3, i64 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %3, i64 0, i32 6
  br label %12

12:                                               ; preds = %8, %31
  %13 = load i64, i64* %9, align 8
  %14 = load i64, i64* %1, align 8
  %15 = trunc i64 %13 to i32
  %16 = trunc i64 %14 to i32
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %12
  %19 = load i64, i64* %10, align 8
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %20, 3
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5
  %24 = tail call { i32, i64* } @_ZNK2v88internal11NexusConfig9NewHandleENS0_11MaybeObjectE(%"class.v8::internal::NexusConfig"* %23, i64 %19)
  %25 = extractvalue { i32, i64* } %24, 0
  %26 = extractvalue { i32, i64* } %24, 1
  br label %34

27:                                               ; preds = %18, %12
  %28 = load i32, i32* %11, align 8
  switch i32 %28, label %30 [
    i32 0, label %29
    i32 1, label %31
  ], !prof !31

29:                                               ; preds = %27
  store i8 1, i8* %5, align 8
  br label %34

30:                                               ; preds = %27
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0)) #16
  unreachable

31:                                               ; preds = %27
  call void @_ZN2v88internal16FeedbackIterator18AdvancePolymorphicEv(%"class.v8::internal::FeedbackIterator"* nonnull %3) #9
  %32 = load i8, i8* %5, align 8, !range !30
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %12, label %34

34:                                               ; preds = %31, %2, %29, %22
  %35 = phi i32 [ %25, %22 ], [ 1, %29 ], [ 1, %2 ], [ 1, %31 ]
  %36 = phi i64* [ %26, %22 ], [ null, %29 ], [ null, %2 ], [ null, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #9
  %37 = insertvalue { i32, i64* } undef, i32 %35, 0
  %38 = insertvalue { i32, i64* } %37, i64* %36, 1
  ret { i32, i64* } %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal13FeedbackNexus7GetNameEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 4
  switch i8 %3, label %64 [
    i8 13, label %4
    i8 3, label %4
    i8 8, label %4
    i8 9, label %4
  ]

4:                                                ; preds = %1, %1, %1, %1
  %5 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %6 = extractvalue { i64, i64 } %5, 0
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 1
  br i1 %8, label %9, label %62

9:                                                ; preds = %4
  %10 = and i64 %6, -4294967296
  %11 = add i64 %6, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp ult i16 %18, 64
  br i1 %19, label %126, label %20

20:                                               ; preds = %9
  %21 = load atomic i32, i32* %12 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %10, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp eq i16 %26, 64
  br i1 %27, label %28, label %62

28:                                               ; preds = %20
  %29 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %30 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %29, i64 0, i32 0, i32 1
  %33 = load i8, i8* %32, align 8, !range !30
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %29, i64 0, i32 1, i64 0
  br label %45

37:                                               ; preds = %31, %28
  %38 = and i64 %6, -262144
  %39 = or i64 %38, 16
  %40 = inttoptr i64 %39 to i64*
  %41 = load i64, i64* %40, align 16
  %42 = add i64 %41, -41416
  %43 = inttoptr i64 %42 to %"class.v8::internal::Isolate"*
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %45

45:                                               ; preds = %37, %35
  %46 = phi i64* [ %44, %37 ], [ %36, %35 ]
  %47 = getelementptr inbounds i64, i64* %46, i64 508
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %6 to i32
  %50 = trunc i64 %48 to i32
  %51 = icmp eq i32 %49, %50
  br i1 %51, label %62, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds i64, i64* %46, i64 487
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  %56 = icmp eq i32 %49, %55
  br i1 %56, label %62, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds i64, i64* %46, i64 488
  %59 = load i64, i64* %58, align 8
  %60 = trunc i64 %59 to i32
  %61 = icmp eq i32 %49, %60
  br i1 %61, label %62, label %126

62:                                               ; preds = %20, %4, %52, %45, %57
  %63 = load i8, i8* %2, align 4
  br label %64

64:                                               ; preds = %62, %1
  %65 = phi i8 [ %63, %62 ], [ %3, %1 ]
  %66 = icmp eq i8 %65, 17
  br i1 %66, label %67, label %125

67:                                               ; preds = %64
  %68 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %69 = extractvalue { i64, i64 } %68, 1
  %70 = and i64 %69, 3
  %71 = icmp eq i64 %70, 1
  br i1 %71, label %72, label %125

72:                                               ; preds = %67
  %73 = and i64 %69, -4294967296
  %74 = add i64 %69, -1
  %75 = inttoptr i64 %74 to i32*
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %73, %77
  %79 = add i64 %78, 7
  %80 = inttoptr i64 %79 to i16*
  %81 = load atomic i16, i16* %80 monotonic, align 2
  %82 = icmp ult i16 %81, 64
  br i1 %82, label %126, label %83

83:                                               ; preds = %72
  %84 = load atomic i32, i32* %75 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %73, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = icmp eq i16 %89, 64
  br i1 %90, label %91, label %125

91:                                               ; preds = %83
  %92 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %93 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %92, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %92, i64 0, i32 0, i32 1
  %96 = load i8, i8* %95, align 8, !range !30
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %92, i64 0, i32 1, i64 0
  br label %108

100:                                              ; preds = %94, %91
  %101 = and i64 %69, -262144
  %102 = or i64 %101, 16
  %103 = inttoptr i64 %102 to i64*
  %104 = load i64, i64* %103, align 16
  %105 = add i64 %104, -41416
  %106 = inttoptr i64 %105 to %"class.v8::internal::Isolate"*
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %106, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %108

108:                                              ; preds = %100, %98
  %109 = phi i64* [ %107, %100 ], [ %99, %98 ]
  %110 = getelementptr inbounds i64, i64* %109, i64 508
  %111 = load i64, i64* %110, align 8
  %112 = trunc i64 %69 to i32
  %113 = trunc i64 %111 to i32
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %125, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds i64, i64* %109, i64 487
  %117 = load i64, i64* %116, align 8
  %118 = trunc i64 %117 to i32
  %119 = icmp eq i32 %112, %118
  br i1 %119, label %125, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds i64, i64* %109, i64 488
  %122 = load i64, i64* %121, align 8
  %123 = trunc i64 %122 to i32
  %124 = icmp eq i32 %112, %123
  br i1 %124, label %125, label %126

125:                                              ; preds = %120, %108, %115, %67, %83, %64
  br label %126

126:                                              ; preds = %57, %120, %72, %9, %125
  %127 = phi i64 [ 0, %125 ], [ %6, %57 ], [ %69, %120 ], [ %6, %9 ], [ %69, %72 ]
  ret i64 %127
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal13FeedbackNexus22GetKeyedAccessLoadModeEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.1220", align 8
  %3 = alloca %"class.std::__1::function", align 8
  %4 = tail call i32 @_ZNK2v88internal13FeedbackNexus10GetKeyTypeEv(%"class.v8::internal::FeedbackNexus"* %0)
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %59, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::vector.1220"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 1, i32 0
  store i64* (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1218"*)* @_ZNSt3__110__function16__policy_invokerIFN2v88internal11MaybeHandleINS3_3MapEEENS3_6HandleIS5_EEEE12__call_emptyEPKNS0_16__policy_storageEOS8_, i64* (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1218"*)** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %9, align 8
  %10 = call i32 @_ZNK2v88internal13FeedbackNexus22ExtractMapsAndHandlersEPNSt3__16vectorINS2_4pairINS0_6HandleINS0_3MapEEENS0_17MaybeObjectHandleEEENS2_9allocatorIS9_EEEENS2_8functionIFNS0_11MaybeHandleIS6_EES7_EEE(%"class.v8::internal::FeedbackNexus"* %0, %"class.std::__1::vector.1220"* nonnull %2, %"class.std::__1::function"* nonnull %3)
  %11 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %9, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %11, i64 0, i32 1
  %13 = load void (i8*)*, void (i8*)** %12, align 8
  %14 = icmp eq void (i8*)* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void %13(i8* %17) #9
  br label %18

18:                                               ; preds = %6, %15
  %19 = getelementptr inbounds %"class.std::__1::vector.1220", %"class.std::__1::vector.1220"* %2, i64 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.1220", %"class.std::__1::vector.1220"* %2, i64 0, i32 0, i32 1
  %22 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %21, align 8
  %23 = icmp eq %"struct.std::__1::pair.1222"* %20, %22
  br i1 %23, label %50, label %24

24:                                               ; preds = %18, %41
  %25 = phi %"struct.std::__1::pair.1222"* [ %45, %41 ], [ %20, %18 ]
  %26 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %25, i64 0, i32 1, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %25, i64 0, i32 1, i32 1, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = icmp eq i32 %27, 0
  %31 = icmp eq i64* %29, null
  br i1 %30, label %32, label %37

32:                                               ; preds = %24
  br i1 %31, label %33, label %34, !prof !2

33:                                               ; preds = %32
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

34:                                               ; preds = %32
  %35 = load i64, i64* %29, align 8
  %36 = or i64 %35, 2
  br label %41

37:                                               ; preds = %24
  br i1 %31, label %38, label %39, !prof !2

38:                                               ; preds = %37
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

39:                                               ; preds = %37
  %40 = load i64, i64* %29, align 8
  br label %41

41:                                               ; preds = %34, %39
  %42 = phi i64 [ %36, %34 ], [ %40, %39 ]
  %43 = call i32 @_ZN2v88internal11LoadHandler22GetKeyedAccessLoadModeENS0_11MaybeObjectE(i64 %42) #9
  %44 = icmp ne i32 %43, 0
  %45 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %25, i64 1
  %46 = icmp eq %"struct.std::__1::pair.1222"* %45, %22
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %24

48:                                               ; preds = %41
  %49 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %19, align 8
  br label %50

50:                                               ; preds = %48, %18
  %51 = phi %"struct.std::__1::pair.1222"* [ %20, %18 ], [ %49, %48 ]
  %52 = phi i32 [ 0, %18 ], [ %43, %48 ]
  %53 = icmp eq %"struct.std::__1::pair.1222"* %51, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %50
  %55 = ptrtoint %"struct.std::__1::pair.1222"* %51 to i64
  %56 = bitcast %"struct.std::__1::pair.1222"** %21 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"struct.std::__1::pair.1222"* %51 to i8*
  call void @_ZdlPv(i8* %57) #17
  br label %58

58:                                               ; preds = %50, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  br label %59

59:                                               ; preds = %1, %58
  %60 = phi i32 [ %52, %58 ], [ 0, %1 ]
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal13FeedbackNexus10GetKeyTypeEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %6, null
  %8 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = select i1 %7, i64* %8, i64* %6
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, -262144
  %12 = or i64 %11, 16
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13, align 16
  %15 = add i64 %14, -41416
  %16 = inttoptr i64 %15 to %"class.v8::internal::Isolate"*
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 0, i32 7, i32 0, i64 488
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %3 to i32
  %20 = trunc i64 %18 to i32
  %21 = icmp eq i32 %19, %20
  br i1 %21, label %22, label %25

22:                                               ; preds = %1
  %23 = trunc i64 %4 to i32
  %24 = ashr i32 %23, 1
  br label %86

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 3
  %27 = load i8, i8* %26, align 4
  %28 = icmp eq i8 %27, 17
  %29 = select i1 %28, i64 %4, i64 %3
  %30 = and i64 %29, 3
  %31 = icmp eq i64 %30, 1
  br i1 %31, label %32, label %86

32:                                               ; preds = %25
  %33 = and i64 %29, -4294967296
  %34 = add i64 %29, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %33, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = icmp ult i16 %41, 64
  br i1 %42, label %86, label %43

43:                                               ; preds = %32
  %44 = load atomic i32, i32* %35 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %33, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp eq i16 %49, 64
  br i1 %50, label %51, label %86

51:                                               ; preds = %43
  %52 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %53 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %52, i64 0, i32 0, i32 1
  %56 = load i8, i8* %55, align 8, !range !30
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %52, i64 0, i32 1, i64 0
  br label %68

60:                                               ; preds = %54, %51
  %61 = and i64 %29, -262144
  %62 = or i64 %61, 16
  %63 = inttoptr i64 %62 to i64*
  %64 = load i64, i64* %63, align 16
  %65 = add i64 %64, -41416
  %66 = inttoptr i64 %65 to %"class.v8::internal::Isolate"*
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %66, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %68

68:                                               ; preds = %60, %58
  %69 = phi i64* [ %67, %60 ], [ %59, %58 ]
  %70 = getelementptr inbounds i64, i64* %69, i64 508
  %71 = load i64, i64* %70, align 8
  %72 = trunc i64 %29 to i32
  %73 = trunc i64 %71 to i32
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %86, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds i64, i64* %69, i64 487
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = icmp eq i32 %72, %78
  br i1 %79, label %86, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds i64, i64* %69, i64 488
  %82 = load i64, i64* %81, align 8
  %83 = trunc i64 %82 to i32
  %84 = icmp ne i32 %72, %83
  %85 = zext i1 %84 to i32
  br label %86

86:                                               ; preds = %80, %75, %68, %43, %32, %25, %22
  %87 = phi i32 [ %24, %22 ], [ 1, %32 ], [ 0, %43 ], [ 0, %25 ], [ 0, %75 ], [ 0, %68 ], [ %85, %80 ]
  ret i32 %87
}

declare i32 @_ZN2v88internal11LoadHandler22GetKeyedAccessLoadModeENS0_11MaybeObjectE(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal13FeedbackNexus23GetKeyedAccessStoreModeEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.1220", align 8
  %3 = alloca %"class.std::__1::function", align 8
  %4 = tail call i32 @_ZNK2v88internal13FeedbackNexus10GetKeyTypeEv(%"class.v8::internal::FeedbackNexus"* %0)
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %166, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::vector.1220"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 1, i32 0
  store i64* (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1218"*)* @_ZNSt3__110__function16__policy_invokerIFN2v88internal11MaybeHandleINS3_3MapEEENS3_6HandleIS5_EEEE12__call_emptyEPKNS0_16__policy_storageEOS8_, i64* (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1218"*)** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %9, align 8
  %10 = call i32 @_ZNK2v88internal13FeedbackNexus22ExtractMapsAndHandlersEPNSt3__16vectorINS2_4pairINS0_6HandleINS0_3MapEEENS0_17MaybeObjectHandleEEENS2_9allocatorIS9_EEEENS2_8functionIFNS0_11MaybeHandleIS6_EES7_EEE(%"class.v8::internal::FeedbackNexus"* %0, %"class.std::__1::vector.1220"* nonnull %2, %"class.std::__1::function"* nonnull %3)
  %11 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %9, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %11, i64 0, i32 1
  %13 = load void (i8*)*, void (i8*)** %12, align 8
  %14 = icmp eq void (i8*)* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void %13(i8* %17) #9
  br label %18

18:                                               ; preds = %6, %15
  %19 = getelementptr inbounds %"class.std::__1::vector.1220", %"class.std::__1::vector.1220"* %2, i64 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.1220", %"class.std::__1::vector.1220"* %2, i64 0, i32 0, i32 1
  %22 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %21, align 8
  %23 = icmp eq %"struct.std::__1::pair.1222"* %20, %22
  br i1 %23, label %157, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %24, %147
  %28 = phi %"struct.std::__1::pair.1222"* [ %20, %24 ], [ %148, %147 ]
  %29 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %28, i64 0, i32 1, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %28, i64 0, i32 1, i32 1, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = icmp eq i64* %32, null
  br i1 %33, label %34, label %35, !prof !2

34:                                               ; preds = %27
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

35:                                               ; preds = %27
  %36 = load i64, i64* %32, align 8
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %91, label %39

39:                                               ; preds = %35
  %40 = and i64 %36, -4294967296
  %41 = add i64 %36, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %40, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = icmp eq i16 %48, 82
  br i1 %49, label %50, label %133

50:                                               ; preds = %39
  %51 = add i64 %36, 3
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %40, %54
  %56 = and i64 %54, 1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %88, label %58

58:                                               ; preds = %50
  %59 = load i64*, i64** %25, align 8
  %60 = icmp eq i64* %59, null
  %61 = select i1 %60, i64* %26, i64* %59
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, -262144
  %64 = or i64 %63, 16
  %65 = inttoptr i64 %64 to i64*
  %66 = load i64, i64* %65, align 16
  %67 = add i64 %66, -41416
  %68 = inttoptr i64 %67 to %"class.v8::internal::Isolate"*
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %68, i64 0, i32 31, i32 4
  %70 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %69, align 8
  %71 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %58
  %73 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %70, i64 %55) #9
  %74 = load i64, i64* %73, align 8
  br label %133

75:                                               ; preds = %58
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %68, i64 0, i32 31, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %68, i64 0, i32 31, i32 1
  %79 = load i64*, i64** %78, align 8
  %80 = icmp eq i64* %77, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %75
  %82 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %68) #9
  br label %83

83:                                               ; preds = %81, %75
  %84 = phi i64* [ %82, %81 ], [ %77, %75 ]
  %85 = ptrtoint i64* %84 to i64
  %86 = add i64 %85, 8
  %87 = inttoptr i64 %86 to i64*
  store i64* %87, i64** %76, align 8
  store i64 %55, i64* %84, align 8
  br label %133

88:                                               ; preds = %50
  %89 = call i32 @_ZN2v88internal12StoreHandler23GetKeyedAccessStoreModeENS0_11MaybeObjectE(i64 %55) #9
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %147, label %154

91:                                               ; preds = %35
  %92 = load i64*, i64** %25, align 8
  %93 = icmp eq i64* %92, null
  %94 = select i1 %93, i64* %26, i64* %92
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, -262144
  %97 = or i64 %96, 16
  %98 = inttoptr i64 %97 to i64*
  %99 = load i64, i64* %98, align 16
  %100 = add i64 %99, -41416
  %101 = inttoptr i64 %100 to %"class.v8::internal::Isolate"*
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %101, i64 0, i32 31, i32 4
  %103 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %102, align 8
  %104 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %103, null
  br i1 %104, label %108, label %105

105:                                              ; preds = %91
  %106 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %103, i64 20) #9
  %107 = load i64, i64* %106, align 8
  br label %121

108:                                              ; preds = %91
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %101, i64 0, i32 31, i32 0
  %110 = load i64*, i64** %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %101, i64 0, i32 31, i32 1
  %112 = load i64*, i64** %111, align 8
  %113 = icmp eq i64* %110, %112
  br i1 %113, label %114, label %116

114:                                              ; preds = %108
  %115 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %101) #9
  br label %116

116:                                              ; preds = %114, %108
  %117 = phi i64* [ %115, %114 ], [ %110, %108 ]
  %118 = ptrtoint i64* %117 to i64
  %119 = add i64 %118, 8
  %120 = inttoptr i64 %119 to i64*
  store i64* %120, i64** %109, align 8
  store i64 20, i64* %117, align 8
  br label %121

121:                                              ; preds = %105, %116
  %122 = phi i64 [ %107, %105 ], [ 20, %116 ]
  %123 = trunc i64 %36 to i32
  %124 = trunc i64 %122 to i32
  %125 = icmp eq i32 %123, %124
  br i1 %125, label %147, label %126

126:                                              ; preds = %121
  %127 = icmp eq i32 %30, 0
  %128 = load i64, i64* %32, align 8
  %129 = or i64 %128, 2
  %130 = select i1 %127, i64 %129, i64 %128
  %131 = call i32 @_ZN2v88internal12StoreHandler23GetKeyedAccessStoreModeENS0_11MaybeObjectE(i64 %130) #9
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %147, label %154

133:                                              ; preds = %83, %72, %39
  %134 = phi i64 [ %36, %39 ], [ %55, %83 ], [ %74, %72 ]
  %135 = add i64 %134, 31
  %136 = inttoptr i64 %135 to i32*
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = icmp eq i32 %137, -1
  br i1 %138, label %147, label %139

139:                                              ; preds = %133
  %140 = load atomic i32, i32* %136 monotonic, align 4
  %141 = add i32 %140, -133
  %142 = icmp ult i32 %141, 12
  br i1 %142, label %143, label %147

143:                                              ; preds = %139
  %144 = add i32 %140, -133
  %145 = icmp ult i32 %144, 12
  br i1 %145, label %150, label %146

146:                                              ; preds = %143
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #16
  unreachable

147:                                              ; preds = %133, %88, %126, %139, %121
  %148 = getelementptr inbounds %"struct.std::__1::pair.1222", %"struct.std::__1::pair.1222"* %28, i64 1
  %149 = icmp eq %"struct.std::__1::pair.1222"* %148, %22
  br i1 %149, label %154, label %27

150:                                              ; preds = %143
  %151 = sext i32 %144 to i64
  %152 = getelementptr inbounds [12 x i32], [12 x i32]* @switch.table._ZNK2v88internal13FeedbackNexus23GetKeyedAccessStoreModeEv, i64 0, i64 %151
  %153 = load i32, i32* %152, align 4
  br label %154

154:                                              ; preds = %147, %88, %126, %150
  %155 = phi i32 [ %153, %150 ], [ 0, %147 ], [ %89, %88 ], [ %131, %126 ]
  %156 = load %"struct.std::__1::pair.1222"*, %"struct.std::__1::pair.1222"** %19, align 8
  br label %157

157:                                              ; preds = %154, %18
  %158 = phi %"struct.std::__1::pair.1222"* [ %156, %154 ], [ %20, %18 ]
  %159 = phi i32 [ %155, %154 ], [ 0, %18 ]
  %160 = icmp eq %"struct.std::__1::pair.1222"* %158, null
  br i1 %160, label %165, label %161

161:                                              ; preds = %157
  %162 = ptrtoint %"struct.std::__1::pair.1222"* %158 to i64
  %163 = bitcast %"struct.std::__1::pair.1222"** %21 to i64*
  store i64 %162, i64* %163, align 8
  %164 = bitcast %"struct.std::__1::pair.1222"* %158 to i8*
  call void @_ZdlPv(i8* %164) #17
  br label %165

165:                                              ; preds = %157, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  br label %166

166:                                              ; preds = %1, %165
  %167 = phi i32 [ %159, %165 ], [ 0, %1 ]
  ret i32 %167
}

declare i32 @_ZN2v88internal12StoreHandler23GetKeyedAccessStoreModeENS0_11MaybeObjectE(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZNK2v88internal13FeedbackNexus22GetConstructorFeedbackEv(%"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %2 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = and i64 %3, 3
  %5 = icmp eq i64 %4, 3
  %6 = trunc i64 %3 to i32
  %7 = icmp ne i32 %6, 3
  %8 = and i1 %5, %7
  br i1 %8, label %9, label %56

9:                                                ; preds = %1
  %10 = and i64 %3, -3
  %11 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 1
  %12 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %11, align 8
  %13 = icmp eq %"class.v8::internal::LocalHeap"* %12, null
  br i1 %13, label %14, label %35

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 5, i32 0
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 4
  %18 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %19 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %14
  %21 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %18, i64 %10) #9
  br label %56

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = icmp eq i64* %24, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %16) #9
  br label %30

30:                                               ; preds = %28, %22
  %31 = phi i64* [ %29, %28 ], [ %24, %22 ]
  %32 = ptrtoint i64* %31 to i64
  %33 = add i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  store i64* %34, i64** %23, align 8
  store i64 %10, i64* %31, align 8
  br label %56

35:                                               ; preds = %9
  %36 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %12, i64 0, i32 1
  %37 = load i8, i8* %36, align 8, !range !30
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* nonnull %12, i64 %10) #9
  br label %56

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %12, i64 0, i32 7, i32 0, i32 0, i32 0
  %43 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %43, i64 0, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %43, i64 0, i32 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = icmp eq i64* %45, %47
  br i1 %48, label %49, label %52

49:                                               ; preds = %41
  %50 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %43) #9
  %51 = load i64*, i64** %44, align 8
  br label %52

52:                                               ; preds = %49, %41
  %53 = phi i64* [ %51, %49 ], [ %45, %41 ]
  %54 = phi i64* [ %50, %49 ], [ %45, %41 ]
  %55 = getelementptr inbounds i64, i64* %53, i64 1
  store i64* %55, i64** %44, align 8
  store i64 %10, i64* %54, align 8
  br label %56

56:                                               ; preds = %52, %39, %30, %20, %1
  %57 = phi i64* [ null, %1 ], [ %21, %20 ], [ %31, %30 ], [ %40, %39 ], [ %54, %52 ]
  ret i64* %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13FeedbackNexus7CollectENS0_6HandleINS0_6StringEEEi(%"class.v8::internal::FeedbackNexus"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %6, null
  %8 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = select i1 %7, i64* %8, i64* %6
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, -262144
  %12 = or i64 %11, 16
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13, align 16
  %15 = add i64 %14, -41416
  %16 = inttoptr i64 %15 to %"class.v8::internal::Isolate"*
  %17 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %0) #9
  %18 = extractvalue { i64, i64 } %17, 0
  %19 = load i64*, i64** %5, align 8
  %20 = icmp eq i64* %19, null
  %21 = select i1 %20, i64* %8, i64* %19
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, -262144
  %24 = or i64 %23, 16
  %25 = inttoptr i64 %24 to i64*
  %26 = load i64, i64* %25, align 16
  %27 = add i64 %26, -41416
  %28 = inttoptr i64 %27 to %"class.v8::internal::Isolate"*
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 0, i32 7, i32 0, i64 508
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %18 to i32
  %32 = trunc i64 %30 to i32
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %3
  %35 = tail call i64* @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %16, i32 1, i8 zeroext 0, i32 0) #9
  br label %55

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 4
  %38 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8
  %39 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %38, i64 %18) #9
  br label %55

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = icmp eq i64* %44, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %42
  %49 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %16) #9
  br label %50

50:                                               ; preds = %48, %42
  %51 = phi i64* [ %49, %48 ], [ %44, %42 ]
  %52 = ptrtoint i64* %51 to i64
  %53 = add i64 %52, 8
  %54 = inttoptr i64 %53 to i64*
  store i64* %54, i64** %43, align 8
  store i64 %18, i64* %51, align 8
  br label %55

55:                                               ; preds = %50, %40, %34
  %56 = phi i64* [ %35, %34 ], [ %41, %40 ], [ %51, %50 ]
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 0, i32 4
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 0, i32 7, i32 0, i64 134
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i64*
  %64 = load i64, i64* %63, align 1
  %65 = zext i32 %2 to i64
  %66 = xor i64 %64, %65
  %67 = xor i64 %66, -1
  %68 = shl i64 %66, 18
  %69 = add i64 %68, %67
  %70 = lshr i64 %69, 31
  %71 = xor i64 %70, %69
  %72 = mul i64 %71, 21
  %73 = lshr i64 %72, 11
  %74 = xor i64 %73, %72
  %75 = mul i64 %74, 65
  %76 = lshr i64 %75, 22
  %77 = xor i64 %76, %75
  %78 = trunc i64 %77 to i32
  %79 = add i64 %57, 15
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = ashr i32 %81, 1
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 0, i32 7, i32 0, i64 4
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 0, i32 7, i32 0, i64 5
  %86 = load i64, i64* %85, align 8
  %87 = add nsw i32 %82, -1
  %88 = and i32 %87, 1073741823
  %89 = and i32 %88, %78
  %90 = shl i32 %89, 3
  %91 = add i32 %90, 12
  %92 = sext i32 %91 to i64
  %93 = add i64 %57, 7
  %94 = add i64 %93, %92
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = trunc i64 %84 to i32
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %133, label %99

99:                                               ; preds = %55
  %100 = trunc i64 %86 to i32
  br label %101

101:                                              ; preds = %122, %99
  %102 = phi i32 [ %96, %99 ], [ %131, %122 ]
  %103 = phi i32 [ %89, %99 ], [ %125, %122 ]
  %104 = phi i32 [ 1, %99 ], [ %123, %122 ]
  %105 = zext i32 %102 to i64
  %106 = or i64 %59, %105
  %107 = icmp eq i32 %102, %100
  br i1 %107, label %122, label %108

108:                                              ; preds = %101
  %109 = and i64 %105, 1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %108
  %112 = ashr i32 %102, 1
  %113 = sitofp i32 %112 to double
  br label %118

114:                                              ; preds = %108
  %115 = add i64 %106, 3
  %116 = inttoptr i64 %115 to double*
  %117 = load double, double* %116, align 1
  br label %118

118:                                              ; preds = %114, %111
  %119 = phi double [ %113, %111 ], [ %117, %114 ]
  %120 = fptoui double %119 to i32
  %121 = icmp eq i32 %120, %2
  br i1 %121, label %137, label %122

122:                                              ; preds = %118, %101
  %123 = add i32 %104, 1
  %124 = add i32 %104, %103
  %125 = and i32 %124, %87
  %126 = shl i32 %125, 3
  %127 = add i32 %126, 12
  %128 = sext i32 %127 to i64
  %129 = add i64 %93, %128
  %130 = inttoptr i64 %129 to i32*
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = icmp eq i32 %131, %97
  br i1 %132, label %133, label %101

133:                                              ; preds = %122, %55
  %134 = tail call i64* @_ZN2v88internal9ArrayList3NewEPNS0_7IsolateEi(%"class.v8::internal::Isolate"* %16, i32 1) #9
  %135 = tail call i64* @_ZN2v88internal9ArrayList3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %16, i64* %134, i64* %1) #9
  %136 = tail call i64* @_ZN2v88internal22SimpleNumberDictionary3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %16, i64* %56, i32 %2, i64* %135) #9
  br label %231

137:                                              ; preds = %118
  %138 = and i64 %57, -4294967296
  %139 = shl i32 %103, 3
  %140 = add i32 %139, 16
  %141 = or i32 %140, 7
  %142 = sext i32 %141 to i64
  %143 = add i64 %57, %142
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %138, %146
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 4
  %149 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %148, align 8
  %150 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %149, null
  br i1 %150, label %153, label %151

151:                                              ; preds = %137
  %152 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %149, i64 %147) #9
  br label %166

153:                                              ; preds = %137
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 0
  %155 = load i64*, i64** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 1
  %157 = load i64*, i64** %156, align 8
  %158 = icmp eq i64* %155, %157
  br i1 %158, label %159, label %161

159:                                              ; preds = %153
  %160 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %16) #9
  br label %161

161:                                              ; preds = %159, %153
  %162 = phi i64* [ %160, %159 ], [ %155, %153 ]
  %163 = ptrtoint i64* %162 to i64
  %164 = add i64 %163, 8
  %165 = inttoptr i64 %164 to i64*
  store i64* %165, i64** %154, align 8
  store i64 %147, i64* %162, align 8
  br label %166

166:                                              ; preds = %151, %161
  %167 = phi i64* [ %152, %151 ], [ %162, %161 ]
  %168 = bitcast %"class.v8::internal::String"* %4 to i8*
  %169 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %170

170:                                              ; preds = %226, %166
  %171 = phi i64 [ %227, %226 ], [ 0, %166 ]
  %172 = load i64, i64* %167, align 8
  %173 = add i64 %172, 3
  %174 = inttoptr i64 %173 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = icmp ult i32 %175, 2
  br i1 %176, label %182, label %177

177:                                              ; preds = %170
  %178 = add i64 %172, 7
  %179 = inttoptr i64 %178 to i32*
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = ashr i32 %180, 1
  br label %182

182:                                              ; preds = %177, %170
  %183 = phi i32 [ %181, %177 ], [ 0, %170 ]
  %184 = sext i32 %183 to i64
  %185 = icmp slt i64 %171, %184
  br i1 %185, label %186, label %228

186:                                              ; preds = %182
  %187 = and i64 %172, -4294967296
  %188 = trunc i64 %171 to i32
  %189 = shl i32 %188, 2
  %190 = add i32 %189, 4
  %191 = sext i32 %190 to i64
  %192 = add i64 %172, 7
  %193 = add i64 %192, %191
  %194 = inttoptr i64 %193 to i32*
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = zext i32 %195 to i64
  %197 = or i64 %187, %196
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #9
  store i64 %197, i64* %169, align 8
  %198 = load i64, i64* %1, align 8
  %199 = trunc i64 %198 to i32
  %200 = icmp eq i32 %195, %199
  br i1 %200, label %201, label %202

201:                                              ; preds = %186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #9
  br label %231

202:                                              ; preds = %186
  %203 = add i64 %197, -1
  %204 = inttoptr i64 %203 to i32*
  %205 = load atomic i32, i32* %204 monotonic, align 4
  %206 = zext i32 %205 to i64
  %207 = or i64 %187, %206
  %208 = add i64 %207, 7
  %209 = inttoptr i64 %208 to i16*
  %210 = load atomic i16, i16* %209 monotonic, align 2
  %211 = icmp ult i16 %210, 32
  br i1 %211, label %212, label %224

212:                                              ; preds = %202
  %213 = and i64 %198, -4294967296
  %214 = add i64 %198, -1
  %215 = inttoptr i64 %214 to i32*
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = zext i32 %216 to i64
  %218 = or i64 %213, %217
  %219 = add i64 %218, 7
  %220 = inttoptr i64 %219 to i16*
  %221 = load atomic i16, i16* %220 monotonic, align 2
  %222 = icmp ult i16 %221, 32
  br i1 %222, label %223, label %224

223:                                              ; preds = %212
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #9
  br label %226

224:                                              ; preds = %212, %202
  %225 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %4, i64 %198) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #9
  br i1 %225, label %231, label %226

226:                                              ; preds = %224, %223
  %227 = add nuw nsw i64 %171, 1
  br label %170

228:                                              ; preds = %182
  %229 = call i64* @_ZN2v88internal9ArrayList3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %16, i64* %167, i64* %1) #9
  %230 = call i64* @_ZN2v88internal22SimpleNumberDictionary3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %16, i64* %56, i32 %2, i64* %229) #9
  br label %231

231:                                              ; preds = %224, %201, %228, %133
  %232 = phi i64* [ %136, %133 ], [ %230, %228 ], [ %56, %201 ], [ %56, %224 ]
  %233 = load i64, i64* %232, align 8
  %234 = load i64*, i64** %5, align 8
  %235 = icmp eq i64* %234, null
  %236 = select i1 %235, i64* %8, i64* %234
  %237 = load i64, i64* %236, align 8
  %238 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %239 = load i32, i32* %238, align 8
  %240 = shl i32 %239, 2
  %241 = sext i32 %240 to i64
  %242 = add i64 %237, 31
  %243 = add i64 %242, %241
  %244 = inttoptr i64 %243 to i32*
  %245 = trunc i64 %233 to i32
  store atomic volatile i32 %245, i32* %244 release, align 4
  %246 = and i64 %233, 1
  %247 = icmp ne i64 %246, 0
  %248 = icmp ne i32 %245, 3
  %249 = and i1 %248, %247
  br i1 %249, label %250, label %278

250:                                              ; preds = %231
  %251 = and i64 %237, -262144
  %252 = or i64 %251, 8
  %253 = inttoptr i64 %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = and i64 %254, 262144
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %262, label %257

257:                                              ; preds = %250
  %258 = and i64 %233, -3
  %259 = or i64 %251, 16
  %260 = inttoptr i64 %259 to %"class.v8::internal::Heap"**
  %261 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %260, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %261, i64 %237, i64 %243, i64 %258) #9
  br label %262

262:                                              ; preds = %257, %250
  %263 = and i64 %233, -3
  %264 = and i64 %233, -262144
  %265 = or i64 %264, 8
  %266 = inttoptr i64 %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = and i64 %267, 24
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %278, label %270

270:                                              ; preds = %262
  %271 = and i64 %237, -262144
  %272 = or i64 %271, 8
  %273 = inttoptr i64 %272 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = and i64 %274, 24
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %270
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %237, i64 %243, i64 %263) #9
  br label %278

278:                                              ; preds = %231, %262, %270, %277
  ret void
}

declare i64* @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal9ArrayList3NewEPNS0_7IsolateEi(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal22SimpleNumberDictionary3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i32, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal13FeedbackNexus18GetSourcePositionsEv(%"class.std::__1::vector.866"* noalias sret, %"class.v8::internal::FeedbackNexus"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::vector.866"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #9
  %4 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = icmp eq i64* %5, null
  %7 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = select i1 %6, i64* %7, i64* %5
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, -262144
  %11 = or i64 %10, 16
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 16
  %14 = add i64 %13, -41416
  %15 = inttoptr i64 %14 to %"class.v8::internal::Isolate"*
  %16 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %1) #9
  %17 = extractvalue { i64, i64 } %16, 0
  %18 = load i64*, i64** %4, align 8
  %19 = icmp eq i64* %18, null
  %20 = select i1 %19, i64* %7, i64* %18
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, -262144
  %23 = or i64 %22, 16
  %24 = inttoptr i64 %23 to i64*
  %25 = load i64, i64* %24, align 16
  %26 = add i64 %25, -41416
  %27 = inttoptr i64 %26 to %"class.v8::internal::Isolate"*
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 0, i32 7, i32 0, i64 508
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %17 to i32
  %31 = trunc i64 %29 to i32
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %139, label %33

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 4
  %35 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %34, align 8
  %36 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %35, i64 %17) #9
  %39 = load i64, i64* %38, align 8
  br label %53

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = icmp eq i64* %42, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #9
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi i64* [ %47, %46 ], [ %42, %40 ]
  %50 = ptrtoint i64* %49 to i64
  %51 = add i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  store i64* %52, i64** %41, align 8
  store i64 %17, i64* %49, align 8
  br label %53

53:                                               ; preds = %37, %48
  %54 = phi i64 [ %39, %37 ], [ %17, %48 ]
  %55 = phi i64* [ %38, %37 ], [ %49, %48 ]
  %56 = add i64 %54, 3
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = icmp sgt i32 %58, 7
  br i1 %59, label %60, label %139

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.std::__1::vector.866", %"class.std::__1::vector.866"* %0, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.std::__1::vector.866", %"class.std::__1::vector.866"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast i32** %61 to i64*
  %64 = bitcast %"class.std::__1::vector.866"* %0 to i64*
  %65 = bitcast i32** %62 to i64*
  br label %66

66:                                               ; preds = %60, %130
  %67 = phi i64 [ 3, %60 ], [ %131, %130 ]
  %68 = phi i64 [ %54, %60 ], [ %132, %130 ]
  %69 = trunc i64 %67 to i32
  %70 = shl i32 %69, 2
  %71 = sext i32 %70 to i64
  %72 = add i64 %68, 7
  %73 = add i64 %72, %71
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %130

78:                                               ; preds = %66
  %79 = ashr i32 %75, 1
  %80 = load i32*, i32** %61, align 8
  %81 = load i32*, i32** %62, align 8
  %82 = icmp eq i32* %80, %81
  %83 = ptrtoint i32* %81 to i64
  br i1 %82, label %87, label %84

84:                                               ; preds = %78
  store i32 %79, i32* %80, align 4
  %85 = getelementptr inbounds i32, i32* %80, i64 1
  %86 = ptrtoint i32* %85 to i64
  store i64 %86, i64* %63, align 8
  br label %130

87:                                               ; preds = %78
  %88 = ptrtoint i32* %80 to i64
  %89 = load i64, i64* %64, align 8
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 2
  %92 = add nsw i64 %91, 1
  %93 = icmp ugt i64 %92, 4611686018427387903
  br i1 %93, label %94, label %96

94:                                               ; preds = %87
  %95 = bitcast %"class.std::__1::vector.866"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %95) #16
  unreachable

96:                                               ; preds = %87
  %97 = sub i64 %83, %89
  %98 = ashr exact i64 %97, 2
  %99 = icmp ult i64 %98, 2305843009213693951
  br i1 %99, label %100, label %108

100:                                              ; preds = %96
  %101 = ashr exact i64 %97, 1
  %102 = icmp ult i64 %101, %92
  %103 = select i1 %102, i64 %92, i64 %101
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %113, label %105

105:                                              ; preds = %100
  %106 = icmp ugt i64 %103, 4611686018427387903
  br i1 %106, label %107, label %108

107:                                              ; preds = %105
  tail call void @abort() #16
  unreachable

108:                                              ; preds = %105, %96
  %109 = phi i64 [ %103, %105 ], [ 4611686018427387903, %96 ]
  %110 = shl i64 %109, 2
  %111 = tail call i8* @_Znwm(i64 %110) #17
  %112 = bitcast i8* %111 to i32*
  br label %113

113:                                              ; preds = %108, %100
  %114 = phi i64 [ %109, %108 ], [ 0, %100 ]
  %115 = phi i8* [ %111, %108 ], [ null, %100 ]
  %116 = phi i32* [ %112, %108 ], [ null, %100 ]
  %117 = getelementptr inbounds i32, i32* %116, i64 %91
  %118 = getelementptr inbounds i32, i32* %116, i64 %114
  %119 = ptrtoint i32* %118 to i64
  store i32 %79, i32* %117, align 4
  %120 = getelementptr inbounds i32, i32* %117, i64 1
  %121 = ptrtoint i32* %120 to i64
  %122 = ptrtoint i32* %116 to i64
  %123 = icmp sgt i64 %90, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %113
  %125 = inttoptr i64 %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* align 4 %125, i64 %90, i1 false) #9
  br label %126

126:                                              ; preds = %124, %113
  store i64 %122, i64* %64, align 8
  store i64 %121, i64* %63, align 8
  store i64 %119, i64* %65, align 8
  %127 = icmp eq i64 %89, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = inttoptr i64 %89 to i8*
  tail call void @_ZdlPv(i8* %129) #17
  br label %130

130:                                              ; preds = %128, %126, %84, %66
  %131 = add nuw nsw i64 %67, 2
  %132 = load i64, i64* %55, align 8
  %133 = add i64 %132, 3
  %134 = inttoptr i64 %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = ashr i32 %135, 1
  %137 = sext i32 %136 to i64
  %138 = icmp slt i64 %131, %137
  br i1 %138, label %66, label %139

139:                                              ; preds = %130, %53, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal13FeedbackNexus26GetTypesForSourcePositionsEj(%"class.std::__1::vector.1242"* noalias sret, %"class.v8::internal::FeedbackNexus"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = icmp eq i64* %5, null
  %7 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = select i1 %6, i64* %7, i64* %5
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, -262144
  %11 = or i64 %10, 16
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 16
  %14 = add i64 %13, -41416
  %15 = inttoptr i64 %14 to %"class.v8::internal::Isolate"*
  %16 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %1) #9
  %17 = extractvalue { i64, i64 } %16, 0
  %18 = bitcast %"class.std::__1::vector.1242"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #9
  %19 = load i64*, i64** %4, align 8
  %20 = icmp eq i64* %19, null
  %21 = select i1 %20, i64* %7, i64* %19
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, -262144
  %24 = or i64 %23, 16
  %25 = inttoptr i64 %24 to i64*
  %26 = load i64, i64* %25, align 16
  %27 = add i64 %26, -41416
  %28 = inttoptr i64 %27 to %"class.v8::internal::Isolate"*
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 0, i32 7, i32 0, i64 508
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %17 to i32
  %32 = trunc i64 %30 to i32
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %268, label %34

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 4
  %36 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %36, i64 %17) #9
  %40 = load i64, i64* %39, align 8
  br label %54

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = icmp eq i64* %43, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #9
  br label %49

49:                                               ; preds = %47, %41
  %50 = phi i64* [ %48, %47 ], [ %43, %41 ]
  %51 = ptrtoint i64* %50 to i64
  %52 = add i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  store i64* %53, i64** %42, align 8
  store i64 %17, i64* %50, align 8
  br label %54

54:                                               ; preds = %38, %49
  %55 = phi i64 [ %40, %38 ], [ %17, %49 ]
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 4
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 7, i32 0, i64 134
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i64*
  %62 = load i64, i64* %61, align 1
  %63 = zext i32 %2 to i64
  %64 = xor i64 %62, %63
  %65 = xor i64 %64, -1
  %66 = shl i64 %64, 18
  %67 = add i64 %66, %65
  %68 = lshr i64 %67, 31
  %69 = xor i64 %68, %67
  %70 = mul i64 %69, 21
  %71 = lshr i64 %70, 11
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, 65
  %74 = lshr i64 %73, 22
  %75 = xor i64 %74, %73
  %76 = trunc i64 %75 to i32
  %77 = add i64 %55, 15
  %78 = inttoptr i64 %77 to i32*
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = ashr i32 %79, 1
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 7, i32 0, i64 4
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 7, i32 0, i64 5
  %84 = load i64, i64* %83, align 8
  %85 = add nsw i32 %80, -1
  %86 = and i32 %85, 1073741823
  %87 = and i32 %86, %76
  %88 = shl i32 %87, 3
  %89 = add i32 %88, 12
  %90 = sext i32 %89 to i64
  %91 = add i64 %55, 7
  %92 = add i64 %91, %90
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = trunc i64 %82 to i32
  %96 = icmp eq i32 %94, %95
  br i1 %96, label %268, label %97

97:                                               ; preds = %54
  %98 = trunc i64 %84 to i32
  br label %99

99:                                               ; preds = %120, %97
  %100 = phi i32 [ %94, %97 ], [ %129, %120 ]
  %101 = phi i32 [ %87, %97 ], [ %123, %120 ]
  %102 = phi i32 [ 1, %97 ], [ %121, %120 ]
  %103 = zext i32 %100 to i64
  %104 = or i64 %57, %103
  %105 = icmp eq i32 %100, %98
  br i1 %105, label %120, label %106

106:                                              ; preds = %99
  %107 = and i64 %103, 1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = ashr i32 %100, 1
  %111 = sitofp i32 %110 to double
  br label %116

112:                                              ; preds = %106
  %113 = add i64 %104, 3
  %114 = inttoptr i64 %113 to double*
  %115 = load double, double* %114, align 1
  br label %116

116:                                              ; preds = %112, %109
  %117 = phi double [ %111, %109 ], [ %115, %112 ]
  %118 = fptoui double %117 to i32
  %119 = icmp eq i32 %118, %2
  br i1 %119, label %131, label %120

120:                                              ; preds = %116, %99
  %121 = add i32 %102, 1
  %122 = add i32 %102, %101
  %123 = and i32 %122, %85
  %124 = shl i32 %123, 3
  %125 = add i32 %124, 12
  %126 = sext i32 %125 to i64
  %127 = add i64 %91, %126
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = icmp eq i32 %129, %95
  br i1 %130, label %268, label %99

131:                                              ; preds = %116
  %132 = and i64 %55, -4294967296
  %133 = shl i32 %101, 3
  %134 = add i32 %133, 16
  %135 = or i32 %134, 7
  %136 = sext i32 %135 to i64
  %137 = add i64 %55, %136
  %138 = inttoptr i64 %137 to i32*
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = zext i32 %139 to i64
  %141 = or i64 %132, %140
  %142 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %143 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %131
  %145 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %142, i64 %141) #9
  br label %159

146:                                              ; preds = %131
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %148 = load i64*, i64** %147, align 8
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %150 = load i64*, i64** %149, align 8
  %151 = icmp eq i64* %148, %150
  br i1 %151, label %152, label %154

152:                                              ; preds = %146
  %153 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #9
  br label %154

154:                                              ; preds = %152, %146
  %155 = phi i64* [ %153, %152 ], [ %148, %146 ]
  %156 = ptrtoint i64* %155 to i64
  %157 = add i64 %156, 8
  %158 = inttoptr i64 %157 to i64*
  store i64* %158, i64** %147, align 8
  store i64 %141, i64* %155, align 8
  br label %159

159:                                              ; preds = %144, %154
  %160 = phi i64* [ %145, %144 ], [ %155, %154 ]
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %163 = getelementptr inbounds %"class.std::__1::vector.1242", %"class.std::__1::vector.1242"* %0, i64 0, i32 0, i32 1
  %164 = getelementptr inbounds %"class.std::__1::vector.1242", %"class.std::__1::vector.1242"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %165 = bitcast %"class.v8::internal::Handle.1240"** %163 to i64*
  %166 = bitcast %"class.std::__1::vector.1242"* %0 to i64*
  %167 = bitcast %"class.v8::internal::Handle.1240"** %164 to i64*
  br label %168

168:                                              ; preds = %266, %159
  %169 = phi i64 [ %267, %266 ], [ 0, %159 ]
  %170 = load i64, i64* %160, align 8
  %171 = add i64 %170, 3
  %172 = inttoptr i64 %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = icmp ult i32 %173, 2
  br i1 %174, label %180, label %175

175:                                              ; preds = %168
  %176 = add i64 %170, 7
  %177 = inttoptr i64 %176 to i32*
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = ashr i32 %178, 1
  br label %180

180:                                              ; preds = %168, %175
  %181 = phi i32 [ %179, %175 ], [ 0, %168 ]
  %182 = sext i32 %181 to i64
  %183 = icmp slt i64 %169, %182
  br i1 %183, label %184, label %268

184:                                              ; preds = %180
  %185 = and i64 %170, -4294967296
  %186 = trunc i64 %169 to i32
  %187 = shl i32 %186, 2
  %188 = add i32 %187, 4
  %189 = sext i32 %188 to i64
  %190 = add i64 %170, 7
  %191 = add i64 %190, %189
  %192 = inttoptr i64 %191 to i32*
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = zext i32 %193 to i64
  %195 = or i64 %185, %194
  %196 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %197 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %196, null
  br i1 %197, label %201, label %198

198:                                              ; preds = %184
  %199 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %196, i64 %195) #9
  %200 = ptrtoint i64* %199 to i64
  br label %212

201:                                              ; preds = %184
  %202 = load i64*, i64** %161, align 8
  %203 = load i64*, i64** %162, align 8
  %204 = icmp eq i64* %202, %203
  br i1 %204, label %205, label %207

205:                                              ; preds = %201
  %206 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #9
  br label %207

207:                                              ; preds = %205, %201
  %208 = phi i64* [ %206, %205 ], [ %202, %201 ]
  %209 = ptrtoint i64* %208 to i64
  %210 = add i64 %209, 8
  %211 = inttoptr i64 %210 to i64*
  store i64* %211, i64** %161, align 8
  store i64 %195, i64* %208, align 8
  br label %212

212:                                              ; preds = %198, %207
  %213 = phi i64 [ %200, %198 ], [ %209, %207 ]
  %214 = load %"class.v8::internal::Handle.1240"*, %"class.v8::internal::Handle.1240"** %163, align 8
  %215 = load %"class.v8::internal::Handle.1240"*, %"class.v8::internal::Handle.1240"** %164, align 8
  %216 = icmp ult %"class.v8::internal::Handle.1240"* %214, %215
  %217 = ptrtoint %"class.v8::internal::Handle.1240"* %215 to i64
  br i1 %216, label %218, label %222

218:                                              ; preds = %212
  %219 = bitcast %"class.v8::internal::Handle.1240"* %214 to i64*
  store i64 %213, i64* %219, align 8
  %220 = getelementptr inbounds %"class.v8::internal::Handle.1240", %"class.v8::internal::Handle.1240"* %214, i64 1
  %221 = ptrtoint %"class.v8::internal::Handle.1240"* %220 to i64
  store i64 %221, i64* %165, align 8
  br label %266

222:                                              ; preds = %212
  %223 = ptrtoint %"class.v8::internal::Handle.1240"* %214 to i64
  %224 = load i64, i64* %166, align 8
  %225 = sub i64 %223, %224
  %226 = ashr exact i64 %225, 3
  %227 = add nsw i64 %226, 1
  %228 = icmp ugt i64 %227, 2305843009213693951
  br i1 %228, label %229, label %231

229:                                              ; preds = %222
  %230 = bitcast %"class.std::__1::vector.1242"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %230) #16
  unreachable

231:                                              ; preds = %222
  %232 = sub i64 %217, %224
  %233 = ashr exact i64 %232, 3
  %234 = icmp ult i64 %233, 1152921504606846975
  br i1 %234, label %235, label %243

235:                                              ; preds = %231
  %236 = ashr exact i64 %232, 2
  %237 = icmp ult i64 %236, %227
  %238 = select i1 %237, i64 %227, i64 %236
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %248, label %240

240:                                              ; preds = %235
  %241 = icmp ugt i64 %238, 2305843009213693951
  br i1 %241, label %242, label %243

242:                                              ; preds = %240
  tail call void @abort() #16
  unreachable

243:                                              ; preds = %240, %231
  %244 = phi i64 [ %238, %240 ], [ 2305843009213693951, %231 ]
  %245 = shl i64 %244, 3
  %246 = tail call i8* @_Znwm(i64 %245) #17
  %247 = bitcast i8* %246 to %"class.v8::internal::Handle.1240"*
  br label %248

248:                                              ; preds = %243, %235
  %249 = phi i64 [ %244, %243 ], [ 0, %235 ]
  %250 = phi i8* [ %246, %243 ], [ null, %235 ]
  %251 = phi %"class.v8::internal::Handle.1240"* [ %247, %243 ], [ null, %235 ]
  %252 = getelementptr inbounds %"class.v8::internal::Handle.1240", %"class.v8::internal::Handle.1240"* %251, i64 %226
  %253 = getelementptr inbounds %"class.v8::internal::Handle.1240", %"class.v8::internal::Handle.1240"* %251, i64 %249
  %254 = ptrtoint %"class.v8::internal::Handle.1240"* %253 to i64
  %255 = bitcast %"class.v8::internal::Handle.1240"* %252 to i64*
  store i64 %213, i64* %255, align 8
  %256 = getelementptr inbounds %"class.v8::internal::Handle.1240", %"class.v8::internal::Handle.1240"* %252, i64 1
  %257 = ptrtoint %"class.v8::internal::Handle.1240"* %256 to i64
  %258 = ptrtoint %"class.v8::internal::Handle.1240"* %251 to i64
  %259 = icmp sgt i64 %225, 0
  br i1 %259, label %260, label %262

260:                                              ; preds = %248
  %261 = inttoptr i64 %224 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %250, i8* align 8 %261, i64 %225, i1 false) #9
  br label %262

262:                                              ; preds = %260, %248
  store i64 %258, i64* %166, align 8
  store i64 %257, i64* %165, align 8
  store i64 %254, i64* %167, align 8
  %263 = icmp eq i64 %224, 0
  br i1 %263, label %266, label %264

264:                                              ; preds = %262
  %265 = inttoptr i64 %224 to i8*
  tail call void @_ZdlPv(i8* %265) #17
  br label %266

266:                                              ; preds = %218, %262, %264
  %267 = add nuw nsw i64 %169, 1
  br label %168

268:                                              ; preds = %120, %180, %54, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13FeedbackNexus16ResetTypeProfileEv(%"class.v8::internal::FeedbackNexus"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = select i1 %4, i64* %5, i64* %3
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -262144
  %9 = or i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 16
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 508
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %0, i64 0, i32 2, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = shl i32 %17, 2
  %19 = sext i32 %18 to i64
  %20 = add i64 %7, 31
  %21 = add i64 %20, %19
  %22 = inttoptr i64 %21 to i32*
  %23 = trunc i64 %15 to i32
  store atomic volatile i32 %23, i32* %22 release, align 4
  %24 = and i64 %15, 1
  %25 = icmp ne i64 %24, 0
  %26 = icmp ne i32 %23, 3
  %27 = and i1 %26, %25
  br i1 %27, label %28, label %53

28:                                               ; preds = %1
  %29 = or i64 %8, 8
  %30 = inttoptr i64 %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 262144
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %28
  %35 = and i64 %15, -3
  %36 = inttoptr i64 %9 to %"class.v8::internal::Heap"**
  %37 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %36, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %37, i64 %7, i64 %21, i64 %35) #9
  br label %38

38:                                               ; preds = %34, %28
  %39 = and i64 %15, -3
  %40 = and i64 %15, -262144
  %41 = or i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, 24
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %38
  %47 = or i64 %8, 8
  %48 = inttoptr i64 %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 24
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %46
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %7, i64 %21, i64 %39) #9
  br label %53

53:                                               ; preds = %1, %38, %46, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16FeedbackIteratorC2EPKNS0_13FeedbackNexusE(%"class.v8::internal::FeedbackIterator"* nocapture, %"class.v8::internal::FeedbackNexus"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %0, i64 0, i32 5
  %8 = bitcast %"class.v8::internal::FeedbackIterator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 25, i1 false)
  store i32 -1, i32* %7, align 4
  %9 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %0, i64 0, i32 6
  store i32 2, i32* %9, align 8
  %10 = tail call { i64, i64 } @_ZNK2v88internal13FeedbackNexus15GetFeedbackPairEv(%"class.v8::internal::FeedbackNexus"* %1)
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  %13 = and i64 %11, 3
  %14 = icmp eq i64 %13, 1
  br i1 %14, label %15, label %172

15:                                               ; preds = %2
  %16 = and i64 %11, -4294967296
  %17 = add i64 %11, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %16, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp ult i16 %24, 64
  br i1 %25, label %68, label %26

26:                                               ; preds = %15
  %27 = load atomic i32, i32* %18 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %16, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 64
  br i1 %33, label %34, label %68

34:                                               ; preds = %26
  %35 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %36 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %35, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8, !range !30
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %35, i64 0, i32 1, i64 0
  br label %51

43:                                               ; preds = %37, %34
  %44 = and i64 %11, -262144
  %45 = or i64 %44, 16
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 16
  %48 = add i64 %47, -41416
  %49 = inttoptr i64 %48 to %"class.v8::internal::Isolate"*
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %49, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %51

51:                                               ; preds = %43, %41
  %52 = phi i64* [ %50, %43 ], [ %42, %41 ]
  %53 = getelementptr inbounds i64, i64* %52, i64 508
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %11 to i32
  %56 = trunc i64 %54 to i32
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds i64, i64* %52, i64 487
  %60 = load i64, i64* %59, align 8
  %61 = trunc i64 %60 to i32
  %62 = icmp eq i32 %55, %61
  br i1 %62, label %68, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds i64, i64* %52, i64 488
  %65 = load i64, i64* %64, align 8
  %66 = trunc i64 %65 to i32
  %67 = icmp ne i32 %55, %66
  br label %68

68:                                               ; preds = %15, %26, %51, %58, %63
  %69 = phi i1 [ true, %15 ], [ false, %26 ], [ false, %58 ], [ false, %51 ], [ %67, %63 ]
  %70 = load atomic i32, i32* %18 monotonic, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %16, %71
  %73 = add i64 %72, 7
  %74 = inttoptr i64 %73 to i16*
  %75 = load atomic i16, i16* %74 monotonic, align 2
  %76 = add i16 %75, -159
  %77 = icmp ult i16 %76, 2
  %78 = or i1 %69, %77
  br i1 %78, label %79, label %179

79:                                               ; preds = %68
  store i32 0, i32* %7, align 4
  store i32 1, i32* %9, align 8
  %80 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %1, i64 0, i32 5
  %81 = getelementptr inbounds %"class.v8::internal::FeedbackNexus", %"class.v8::internal::FeedbackNexus"* %1, i64 0, i32 5, i32 1
  %82 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %81, align 8
  %83 = icmp eq %"class.v8::internal::LocalHeap"* %82, null
  br i1 %69, label %84, label %127

84:                                               ; preds = %79
  br i1 %83, label %85, label %106

85:                                               ; preds = %84
  %86 = getelementptr inbounds %"class.v8::internal::NexusConfig", %"class.v8::internal::NexusConfig"* %80, i64 0, i32 0
  %87 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %87, i64 0, i32 31, i32 4
  %89 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %88, align 8
  %90 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %85
  %92 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %89, i64 %12) #9
  br label %170

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %87, i64 0, i32 31, i32 0
  %95 = load i64*, i64** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %87, i64 0, i32 31, i32 1
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %95, %97
  br i1 %98, label %99, label %101

99:                                               ; preds = %93
  %100 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %87) #9
  br label %101

101:                                              ; preds = %99, %93
  %102 = phi i64* [ %100, %99 ], [ %95, %93 ]
  %103 = ptrtoint i64* %102 to i64
  %104 = add i64 %103, 8
  %105 = inttoptr i64 %104 to i64*
  store i64* %105, i64** %94, align 8
  store i64 %12, i64* %102, align 8
  br label %170

106:                                              ; preds = %84
  %107 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %82, i64 0, i32 1
  %108 = load i8, i8* %107, align 8, !range !30
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %106
  %111 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* nonnull %82, i64 %12) #9
  br label %170

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %82, i64 0, i32 7, i32 0, i32 0, i32 0
  %114 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %114, i64 0, i32 0, i32 0
  %116 = load i64*, i64** %115, align 8
  %117 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %114, i64 0, i32 0, i32 1
  %118 = load i64*, i64** %117, align 8
  %119 = icmp eq i64* %116, %118
  br i1 %119, label %120, label %123

120:                                              ; preds = %112
  %121 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %114) #9
  %122 = load i64*, i64** %115, align 8
  br label %123

123:                                              ; preds = %120, %112
  %124 = phi i64* [ %122, %120 ], [ %116, %112 ]
  %125 = phi i64* [ %121, %120 ], [ %116, %112 ]
  %126 = getelementptr inbounds i64, i64* %124, i64 1
  store i64* %126, i64** %115, align 8
  store i64 %12, i64* %125, align 8
  br label %170

127:                                              ; preds = %79
  br i1 %83, label %128, label %149

128:                                              ; preds = %127
  %129 = getelementptr inbounds %"class.v8::internal::NexusConfig", %"class.v8::internal::NexusConfig"* %80, i64 0, i32 0
  %130 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %130, i64 0, i32 31, i32 4
  %132 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %131, align 8
  %133 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %128
  %135 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %132, i64 %11) #9
  br label %170

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %130, i64 0, i32 31, i32 0
  %138 = load i64*, i64** %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %130, i64 0, i32 31, i32 1
  %140 = load i64*, i64** %139, align 8
  %141 = icmp eq i64* %138, %140
  br i1 %141, label %142, label %144

142:                                              ; preds = %136
  %143 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %130) #9
  br label %144

144:                                              ; preds = %142, %136
  %145 = phi i64* [ %143, %142 ], [ %138, %136 ]
  %146 = ptrtoint i64* %145 to i64
  %147 = add i64 %146, 8
  %148 = inttoptr i64 %147 to i64*
  store i64* %148, i64** %137, align 8
  store i64 %11, i64* %145, align 8
  br label %170

149:                                              ; preds = %127
  %150 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %82, i64 0, i32 1
  %151 = load i8, i8* %150, align 8, !range !30
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %149
  %154 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* nonnull %82, i64 %11) #9
  br label %170

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %82, i64 0, i32 7, i32 0, i32 0, i32 0
  %157 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %156, align 8
  %158 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %157, i64 0, i32 0, i32 0
  %159 = load i64*, i64** %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %157, i64 0, i32 0, i32 1
  %161 = load i64*, i64** %160, align 8
  %162 = icmp eq i64* %159, %161
  br i1 %162, label %163, label %166

163:                                              ; preds = %155
  %164 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %157) #9
  %165 = load i64*, i64** %158, align 8
  br label %166

166:                                              ; preds = %163, %155
  %167 = phi i64* [ %165, %163 ], [ %159, %155 ]
  %168 = phi i64* [ %164, %163 ], [ %159, %155 ]
  %169 = getelementptr inbounds i64, i64* %167, i64 1
  store i64* %169, i64** %158, align 8
  store i64 %11, i64* %168, align 8
  br label %170

170:                                              ; preds = %166, %153, %144, %134, %123, %110, %101, %91
  %171 = phi i64* [ %92, %91 ], [ %102, %101 ], [ %111, %110 ], [ %125, %123 ], [ %135, %134 ], [ %145, %144 ], [ %154, %153 ], [ %168, %166 ]
  store i64* %171, i64** %3, align 8
  tail call void @_ZN2v88internal16FeedbackIterator18AdvancePolymorphicEv(%"class.v8::internal::FeedbackIterator"* %0)
  br label %180

172:                                              ; preds = %2
  %173 = icmp eq i64 %13, 3
  %174 = trunc i64 %11 to i32
  %175 = icmp ne i32 %174, 3
  %176 = and i1 %173, %175
  br i1 %176, label %177, label %179

177:                                              ; preds = %172
  %178 = and i64 %11, -3
  store i32 0, i32* %9, align 8
  store i64 %178, i64* %4, align 8
  store i64 %12, i64* %5, align 8
  br label %180

179:                                              ; preds = %68, %172
  store i8 1, i8* %6, align 8
  br label %180

180:                                              ; preds = %177, %179, %170
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16FeedbackIterator18AdvancePolymorphicEv(%"class.v8::internal::FeedbackIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !30
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5, !prof !29

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #16
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %11, label %10, !prof !29

10:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0)) #16
  unreachable

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 3
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = ashr i32 %17, 1
  %19 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %0, i64 0, i32 5
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, %18
  br i1 %21, label %22, label %76

22:                                               ; preds = %11
  %23 = sext i32 %20 to i64
  %24 = sext i32 %18 to i64
  %25 = shl i32 %20, 2
  %26 = sext i32 %25 to i64
  %27 = add i64 %14, 7
  %28 = add i64 %27, %26
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 3
  %32 = icmp eq i32 %31, 3
  %33 = icmp ne i32 %30, 3
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %56

35:                                               ; preds = %61, %22
  %36 = phi i64 [ %14, %22 ], [ %62, %61 ]
  %37 = phi i64 [ %23, %22 ], [ %58, %61 ]
  %38 = phi i32 [ %25, %22 ], [ %64, %61 ]
  %39 = phi i64 [ %27, %22 ], [ %66, %61 ]
  %40 = phi i32 [ %30, %22 ], [ %69, %61 ]
  %41 = trunc i64 %37 to i32
  %42 = and i64 %36, -4294967296
  %43 = and i32 %40, -3
  %44 = zext i32 %43 to i64
  %45 = or i64 %42, %44
  %46 = add i32 %38, 4
  %47 = sext i32 %46 to i64
  %48 = add i64 %39, %47
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %42, %51
  %53 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %45, i64* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::FeedbackIterator", %"class.v8::internal::FeedbackIterator"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %52, i64* %54, align 8
  %55 = add nsw i32 %41, 2
  store i32 %55, i32* %19, align 4
  br label %81

56:                                               ; preds = %22, %61
  %57 = phi i64 [ %58, %61 ], [ %23, %22 ]
  %58 = add nsw i64 %57, 2
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %19, align 4
  %60 = icmp slt i64 %58, %24
  br i1 %60, label %61, label %74

61:                                               ; preds = %56
  %62 = load i64, i64* %13, align 8
  %63 = trunc i64 %58 to i32
  %64 = shl i32 %63, 2
  %65 = sext i32 %64 to i64
  %66 = add i64 %62, 7
  %67 = add i64 %66, %65
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 3
  %71 = icmp eq i32 %70, 3
  %72 = icmp ne i32 %69, 3
  %73 = and i1 %72, %71
  br i1 %73, label %35, label %56

74:                                               ; preds = %56
  %75 = trunc i64 %58 to i32
  br label %76

76:                                               ; preds = %74, %11
  %77 = phi i32 [ %20, %11 ], [ %75, %74 ]
  %78 = icmp eq i32 %77, %18
  br i1 %78, label %80, label %79, !prof !29

79:                                               ; preds = %76
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.33, i64 0, i64 0)) #16
  unreachable

80:                                               ; preds = %76
  store i8 1, i8* %2, align 8
  br label %81

81:                                               ; preds = %80, %35
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.assume(i1) #9

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"*, i64*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15IsCompiledScopeC2ENS0_18SharedFunctionInfoEPNS0_7IsolateE(%"class.v8::internal::IsCompiledScope"*, i64, %"class.v8::internal::Isolate"*) unnamed_addr #8 comdat align 2 {
  %4 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %5 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = and i64 %1, -4294967296
  %7 = add i64 %1, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 acquire, align 4
  %10 = zext i32 %9 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %60, label %13

13:                                               ; preds = %3
  %14 = or i64 %6, %10
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %6, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 133
  br i1 %23, label %40, label %24

24:                                               ; preds = %13
  %25 = load atomic i32, i32* %16 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %6, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp eq i16 %30, 105
  br i1 %31, label %40, label %32

32:                                               ; preds = %24
  %33 = load atomic i32, i32* %16 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %6, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 94
  br i1 %39, label %40, label %60

40:                                               ; preds = %13, %24, %32
  %41 = call i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"* nonnull %4, %"class.v8::internal::Isolate"* %2)
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %43 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %42, align 8
  %44 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  %46 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %43, i64 %41) #9
  br label %60

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %49, %51
  br i1 %52, label %53, label %55

53:                                               ; preds = %47
  %54 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #9
  br label %55

55:                                               ; preds = %53, %47
  %56 = phi i64* [ %54, %53 ], [ %49, %47 ]
  %57 = ptrtoint i64* %56 to i64
  %58 = add i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  store i64* %59, i64** %48, align 8
  store i64 %41, i64* %56, align 8
  br label %60

60:                                               ; preds = %32, %3, %55, %45
  %61 = phi i64* [ %46, %45 ], [ %56, %55 ], [ null, %3 ], [ null, %32 ]
  %62 = getelementptr inbounds %"class.v8::internal::IsCompiledScope", %"class.v8::internal::IsCompiledScope"* %0, i64 0, i32 0, i32 0
  store i64* %61, i64** %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::IsCompiledScope", %"class.v8::internal::IsCompiledScope"* %0, i64 0, i32 1
  %64 = load i64, i64* %5, align 8
  %65 = and i64 %64, -4294967296
  %66 = add i64 %64, 3
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 acquire, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %65, %69
  %71 = icmp eq i32 %68, 170
  br i1 %71, label %87, label %72

72:                                               ; preds = %60
  %73 = and i64 %69, 1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %87, label %75

75:                                               ; preds = %72
  %76 = add i64 %70, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %65, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = add i16 %83, -157
  %85 = icmp ugt i16 %84, 1
  %86 = zext i1 %85 to i8
  br label %87

87:                                               ; preds = %60, %72, %75
  %88 = phi i8 [ 0, %60 ], [ 1, %72 ], [ %86, %75 ]
  store i8 %88, i8* %63, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp eq i16 %18, 100
  br i1 %19, label %20, label %55

20:                                               ; preds = %2
  %21 = load i64, i64* %3, align 8
  %22 = and i64 %21, -4294967296
  %23 = add i64 %21, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 19
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 acquire, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %22, %31
  %33 = add i64 %32, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %22, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = icmp eq i16 %40, 133
  br i1 %41, label %42, label %55

42:                                               ; preds = %20
  %43 = load i64, i64* %3, align 8
  %44 = and i64 %43, -4294967296
  %45 = add i64 %43, 15
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 acquire, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = add i64 %49, 15
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 acquire, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %44, %53
  br label %120

55:                                               ; preds = %2, %20
  %56 = load i64, i64* %3, align 8
  %57 = and i64 %56, -4294967296
  %58 = add i64 %56, 3
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 acquire, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  %63 = and i64 %61, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %114, label %65

65:                                               ; preds = %55
  %66 = add i64 %62, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %57, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = icmp eq i16 %73, 133
  br i1 %74, label %120, label %75

75:                                               ; preds = %65
  %76 = load atomic i32, i32* %67 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %57, %77
  %79 = add i64 %78, 7
  %80 = inttoptr i64 %79 to i16*
  %81 = load atomic i16, i16* %80 monotonic, align 2
  %82 = icmp eq i16 %81, 94
  br i1 %82, label %83, label %114

83:                                               ; preds = %75
  %84 = load i64, i64* %3, align 8
  %85 = and i64 %84, -4294967296
  %86 = add i64 %84, 3
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 acquire, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %85, %89
  %91 = add i64 %90, 7
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %85, %94
  %96 = and i64 %94, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %83
  %99 = add i64 %95, -1
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %85, %102
  %104 = add i64 %103, 7
  %105 = inttoptr i64 %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = icmp eq i16 %106, 133
  br i1 %107, label %120, label %108

108:                                              ; preds = %98, %83
  %109 = add i64 %95, 3
  %110 = inttoptr i64 %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %85, %112
  br label %120

114:                                              ; preds = %75, %55
  %115 = add i64 %62, 3
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %57, %118
  br label %120

120:                                              ; preds = %114, %108, %98, %65, %42
  %121 = phi i64 [ %54, %42 ], [ %119, %114 ], [ %62, %65 ], [ %113, %108 ], [ %95, %98 ]
  ret i64 %121
}

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"*) local_unnamed_addr #2

declare void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !30
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #17
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #9
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #17
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #10

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #14

declare void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #2

declare void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #2

declare void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZNSt3__110__function16__policy_invokerIFN2v88internal11MaybeHandleINS3_3MapEEENS3_6HandleIS5_EEEE12__call_emptyEPKNS0_16__policy_storageEOS8_(%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::Handle.1218"* dereferenceable(8)) #0 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #18
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #15 comdat {
  tail call void @abort() #16
  unreachable
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !9}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !9}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !9}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !9}
!29 = !{!"branch_weights", i32 2000, i32 1}
!30 = !{i8 0, i8 2}
!31 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
