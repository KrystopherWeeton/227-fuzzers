; ModuleID = '../../third_party/icu/source/common/ustring.cpp'
source_filename = "../../third_party/icu/source/common/ustring.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UCharIterator = type { i8*, i32, i32, i32, i32, i32, i32 (%struct.UCharIterator*, i32)*, i32 (%struct.UCharIterator*, i32, i32)*, i8 (%struct.UCharIterator*)*, i8 (%struct.UCharIterator*)*, i32 (%struct.UCharIterator*)*, i32 (%struct.UCharIterator*)*, i32 (%struct.UCharIterator*)*, i32 (%struct.UCharIterator*, i32)*, i32 (%struct.UCharIterator*)*, void (%struct.UCharIterator*, i32, i32*)* }

@_ZL12UNESCAPE_MAP = internal unnamed_addr constant [16 x i16] [i16 97, i16 7, i16 98, i16 8, i16 101, i16 27, i16 102, i16 12, i16 110, i16 10, i16 114, i16 13, i16 116, i16 9, i16 118, i16 11], align 16

; Function Attrs: nounwind readonly ssp uwtable
define hidden i16* @u_strFindFirst_69(i16* readonly, i32, i16*, i32) local_unnamed_addr #0 {
  %5 = icmp eq i16* %2, null
  %6 = icmp slt i32 %3, -1
  %7 = or i1 %5, %6
  br i1 %7, label %235, label %8

8:                                                ; preds = %4
  %9 = icmp eq i16* %0, null
  %10 = icmp slt i32 %1, -1
  %11 = or i1 %9, %10
  br i1 %11, label %235, label %12

12:                                               ; preds = %8
  %13 = icmp slt i32 %1, 0
  %14 = and i32 %3, %1
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %16, label %85

16:                                               ; preds = %12
  %17 = getelementptr inbounds i16, i16* %2, i64 1
  %18 = load i16, i16* %2, align 2
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %235, label %20

20:                                               ; preds = %16
  %21 = load i16, i16* %17, align 2
  %22 = icmp ne i16 %21, 0
  %23 = and i16 %18, -2048
  %24 = icmp eq i16 %23, -10240
  %25 = or i1 %24, %22
  %26 = load i16, i16* %0, align 2
  br i1 %25, label %29, label %27

27:                                               ; preds = %20
  %28 = icmp eq i16 %26, %18
  br i1 %28, label %235, label %35

29:                                               ; preds = %20
  %30 = icmp eq i16 %26, 0
  br i1 %30, label %235, label %31

31:                                               ; preds = %29
  %32 = icmp eq i16 %21, 0
  %33 = and i16 %18, -1024
  %34 = icmp ne i16 %33, -9216
  br label %43

35:                                               ; preds = %27, %39
  %36 = phi i16 [ %41, %39 ], [ %26, %27 ]
  %37 = phi i16* [ %40, %39 ], [ %0, %27 ]
  %38 = icmp eq i16 %36, 0
  br i1 %38, label %235, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds i16, i16* %37, i64 1
  %41 = load i16, i16* %40, align 2
  %42 = icmp eq i16 %41, %18
  br i1 %42, label %235, label %35

43:                                               ; preds = %31, %82
  %44 = phi i16 [ %83, %82 ], [ %26, %31 ]
  %45 = phi i16* [ %46, %82 ], [ %0, %31 ]
  %46 = getelementptr inbounds i16, i16* %45, i64 1
  %47 = icmp eq i16 %44, %18
  br i1 %47, label %48, label %82

48:                                               ; preds = %43
  br i1 %32, label %49, label %69

49:                                               ; preds = %77, %48
  %50 = phi i16* [ %46, %48 ], [ %78, %77 ]
  %51 = icmp eq i16* %45, %0
  %52 = or i1 %51, %34
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds i16, i16* %45, i64 -1
  %55 = load i16, i16* %54, align 2
  %56 = and i16 %55, -1024
  %57 = icmp eq i16 %56, -10240
  br i1 %57, label %82, label %58

58:                                               ; preds = %53, %49
  %59 = getelementptr inbounds i16, i16* %50, i64 -1
  %60 = load i16, i16* %59, align 2
  %61 = and i16 %60, -1024
  %62 = icmp ne i16 %61, -10240
  %63 = icmp eq i16* %50, null
  %64 = or i1 %63, %62
  br i1 %64, label %235, label %65

65:                                               ; preds = %58
  %66 = load i16, i16* %50, align 2
  %67 = and i16 %66, -1024
  %68 = icmp eq i16 %67, -9216
  br i1 %68, label %82, label %235

69:                                               ; preds = %48, %77
  %70 = phi i16 [ %80, %77 ], [ %21, %48 ]
  %71 = phi i16* [ %79, %77 ], [ %17, %48 ]
  %72 = phi i16* [ %78, %77 ], [ %46, %48 ]
  %73 = load i16, i16* %72, align 2
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %235, label %75

75:                                               ; preds = %69
  %76 = icmp eq i16 %73, %70
  br i1 %76, label %77, label %82

77:                                               ; preds = %75
  %78 = getelementptr inbounds i16, i16* %72, i64 1
  %79 = getelementptr inbounds i16, i16* %71, i64 1
  %80 = load i16, i16* %79, align 2
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %49, label %69

82:                                               ; preds = %75, %65, %53, %43
  %83 = load i16, i16* %46, align 2
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %235, label %43

85:                                               ; preds = %12
  %86 = icmp slt i32 %3, 0
  br i1 %86, label %87, label %98

87:                                               ; preds = %85, %87
  %88 = phi i16* [ %91, %87 ], [ %2, %85 ]
  %89 = load i16, i16* %88, align 2
  %90 = icmp eq i16 %89, 0
  %91 = getelementptr inbounds i16, i16* %88, i64 1
  br i1 %90, label %92, label %87

92:                                               ; preds = %87
  %93 = ptrtoint i16* %88 to i64
  %94 = ptrtoint i16* %2 to i64
  %95 = sub i64 %93, %94
  %96 = lshr exact i64 %95, 1
  %97 = trunc i64 %96 to i32
  br label %98

98:                                               ; preds = %92, %85
  %99 = phi i32 [ %97, %92 ], [ %3, %85 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %235, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds i16, i16* %2, i64 1
  %103 = load i16, i16* %2, align 2
  %104 = add nsw i32 %99, -1
  %105 = sext i32 %104 to i64
  %106 = add nsw i64 %105, 1
  %107 = getelementptr inbounds i16, i16* %2, i64 %106
  %108 = icmp ne i32 %104, 0
  %109 = and i16 %103, -2048
  %110 = icmp eq i16 %109, -10240
  %111 = or i1 %108, %110
  br i1 %111, label %136, label %112

112:                                              ; preds = %101
  br i1 %13, label %113, label %124

113:                                              ; preds = %112
  %114 = load i16, i16* %0, align 2
  %115 = icmp eq i16 %114, %103
  br i1 %115, label %235, label %116

116:                                              ; preds = %113, %120
  %117 = phi i16 [ %122, %120 ], [ %114, %113 ]
  %118 = phi i16* [ %121, %120 ], [ %0, %113 ]
  %119 = icmp eq i16 %117, 0
  br i1 %119, label %235, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds i16, i16* %118, i64 1
  %122 = load i16, i16* %121, align 2
  %123 = icmp eq i16 %122, %103
  br i1 %123, label %235, label %116

124:                                              ; preds = %112
  %125 = icmp eq i32 %1, 0
  br i1 %125, label %235, label %126

126:                                              ; preds = %124
  %127 = sext i32 %1 to i64
  %128 = getelementptr inbounds i16, i16* %0, i64 %127
  br label %129

129:                                              ; preds = %133, %126
  %130 = phi i16* [ %0, %126 ], [ %134, %133 ]
  %131 = load i16, i16* %130, align 2
  %132 = icmp eq i16 %131, %103
  br i1 %132, label %235, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = icmp eq i16* %134, %128
  br i1 %135, label %235, label %129

136:                                              ; preds = %101
  br i1 %13, label %137, label %185

137:                                              ; preds = %136
  %138 = load i16, i16* %0, align 2
  %139 = icmp eq i16 %138, 0
  br i1 %139, label %235, label %140

140:                                              ; preds = %137
  %141 = icmp eq i32 %104, 0
  %142 = and i16 %103, -1024
  %143 = icmp ne i16 %142, -9216
  br label %144

144:                                              ; preds = %140, %182
  %145 = phi i16 [ %138, %140 ], [ %183, %182 ]
  %146 = phi i16* [ %0, %140 ], [ %147, %182 ]
  %147 = getelementptr inbounds i16, i16* %146, i64 1
  %148 = icmp eq i16 %145, %103
  br i1 %148, label %149, label %182

149:                                              ; preds = %144
  br i1 %141, label %150, label %170

150:                                              ; preds = %178, %149
  %151 = phi i16* [ %147, %149 ], [ %179, %178 ]
  %152 = icmp eq i16* %146, %0
  %153 = or i1 %152, %143
  br i1 %153, label %159, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds i16, i16* %146, i64 -1
  %156 = load i16, i16* %155, align 2
  %157 = and i16 %156, -1024
  %158 = icmp eq i16 %157, -10240
  br i1 %158, label %182, label %159

159:                                              ; preds = %154, %150
  %160 = getelementptr inbounds i16, i16* %151, i64 -1
  %161 = load i16, i16* %160, align 2
  %162 = and i16 %161, -1024
  %163 = icmp ne i16 %162, -10240
  %164 = icmp eq i16* %151, null
  %165 = or i1 %164, %163
  br i1 %165, label %235, label %166

166:                                              ; preds = %159
  %167 = load i16, i16* %151, align 2
  %168 = and i16 %167, -1024
  %169 = icmp eq i16 %168, -9216
  br i1 %169, label %182, label %235

170:                                              ; preds = %149, %178
  %171 = phi i16* [ %180, %178 ], [ %102, %149 ]
  %172 = phi i16* [ %179, %178 ], [ %147, %149 ]
  %173 = load i16, i16* %172, align 2
  %174 = icmp eq i16 %173, 0
  br i1 %174, label %235, label %175

175:                                              ; preds = %170
  %176 = load i16, i16* %171, align 2
  %177 = icmp eq i16 %173, %176
  br i1 %177, label %178, label %182

178:                                              ; preds = %175
  %179 = getelementptr inbounds i16, i16* %172, i64 1
  %180 = getelementptr inbounds i16, i16* %171, i64 1
  %181 = icmp eq i16* %180, %107
  br i1 %181, label %150, label %170

182:                                              ; preds = %175, %166, %154, %144
  %183 = load i16, i16* %147, align 2
  %184 = icmp eq i16 %183, 0
  br i1 %184, label %235, label %144

185:                                              ; preds = %136
  %186 = icmp sgt i32 %99, %1
  br i1 %186, label %235, label %187

187:                                              ; preds = %185
  %188 = sext i32 %1 to i64
  %189 = getelementptr inbounds i16, i16* %0, i64 %188
  %190 = sub nsw i64 0, %105
  %191 = getelementptr inbounds i16, i16* %189, i64 %190
  %192 = icmp eq i16* %191, %0
  br i1 %192, label %235, label %193

193:                                              ; preds = %187
  %194 = icmp eq i32 %104, 0
  %195 = and i16 %103, -1024
  %196 = icmp ne i16 %195, -9216
  br label %197

197:                                              ; preds = %193, %233
  %198 = phi i16* [ %0, %193 ], [ %199, %233 ]
  %199 = getelementptr inbounds i16, i16* %198, i64 1
  %200 = load i16, i16* %198, align 2
  %201 = icmp eq i16 %200, %103
  br i1 %201, label %202, label %233

202:                                              ; preds = %197
  br i1 %194, label %203, label %223

203:                                              ; preds = %229, %202
  %204 = phi i16* [ %199, %202 ], [ %230, %229 ]
  %205 = icmp eq i16* %198, %0
  %206 = or i1 %205, %196
  br i1 %206, label %212, label %207

207:                                              ; preds = %203
  %208 = getelementptr inbounds i16, i16* %198, i64 -1
  %209 = load i16, i16* %208, align 2
  %210 = and i16 %209, -1024
  %211 = icmp eq i16 %210, -10240
  br i1 %211, label %233, label %212

212:                                              ; preds = %207, %203
  %213 = getelementptr inbounds i16, i16* %204, i64 -1
  %214 = load i16, i16* %213, align 2
  %215 = and i16 %214, -1024
  %216 = icmp ne i16 %215, -10240
  %217 = icmp eq i16* %204, %189
  %218 = or i1 %217, %216
  br i1 %218, label %235, label %219

219:                                              ; preds = %212
  %220 = load i16, i16* %204, align 2
  %221 = and i16 %220, -1024
  %222 = icmp eq i16 %221, -9216
  br i1 %222, label %233, label %235

223:                                              ; preds = %202, %229
  %224 = phi i16* [ %231, %229 ], [ %102, %202 ]
  %225 = phi i16* [ %230, %229 ], [ %199, %202 ]
  %226 = load i16, i16* %225, align 2
  %227 = load i16, i16* %224, align 2
  %228 = icmp eq i16 %226, %227
  br i1 %228, label %229, label %233

229:                                              ; preds = %223
  %230 = getelementptr inbounds i16, i16* %225, i64 1
  %231 = getelementptr inbounds i16, i16* %224, i64 1
  %232 = icmp eq i16* %231, %107
  br i1 %232, label %203, label %223

233:                                              ; preds = %223, %219, %207, %197
  %234 = icmp eq i16* %199, %191
  br i1 %234, label %235, label %197

235:                                              ; preds = %133, %129, %120, %116, %233, %212, %219, %159, %166, %182, %170, %39, %35, %82, %58, %65, %69, %113, %187, %137, %27, %29, %124, %185, %98, %16, %8, %4
  %236 = phi i16* [ %0, %4 ], [ null, %8 ], [ %0, %16 ], [ %0, %98 ], [ null, %185 ], [ null, %124 ], [ null, %29 ], [ %0, %27 ], [ null, %137 ], [ null, %187 ], [ %0, %113 ], [ null, %69 ], [ null, %82 ], [ %45, %58 ], [ %45, %65 ], [ %40, %39 ], [ null, %35 ], [ null, %170 ], [ %146, %159 ], [ %146, %166 ], [ null, %182 ], [ null, %233 ], [ %198, %212 ], [ %198, %219 ], [ %121, %120 ], [ null, %116 ], [ null, %133 ], [ %130, %129 ]
  ret i16* %236
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i16* @u_strchr_69(i16* readonly, i16 zeroext) local_unnamed_addr #0 {
  %3 = alloca i16, align 2
  store i16 %1, i16* %3, align 2
  %4 = and i16 %1, -2048
  %5 = icmp eq i16 %4, -10240
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = load i16, i16* %0, align 2
  %8 = icmp eq i16 %7, %1
  br i1 %8, label %19, label %11

9:                                                ; preds = %2
  %10 = call i16* @u_strFindFirst_69(i16* %0, i32 -1, i16* nonnull %3, i32 1)
  br label %19

11:                                               ; preds = %6, %15
  %12 = phi i16 [ %17, %15 ], [ %7, %6 ]
  %13 = phi i16* [ %16, %15 ], [ %0, %6 ]
  %14 = icmp eq i16 %12, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds i16, i16* %13, i64 1
  %17 = load i16, i16* %16, align 2
  %18 = icmp eq i16 %17, %1
  br i1 %18, label %19, label %11

19:                                               ; preds = %11, %15, %6, %9
  %20 = phi i16* [ %10, %9 ], [ %0, %6 ], [ null, %11 ], [ %16, %15 ]
  ret i16* %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @u_strlen_69(i16*) local_unnamed_addr #2 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi i16* [ %0, %1 ], [ %6, %2 ]
  %4 = load i16, i16* %3, align 2
  %5 = icmp eq i16 %4, 0
  %6 = getelementptr inbounds i16, i16* %3, i64 1
  br i1 %5, label %7, label %2

7:                                                ; preds = %2
  %8 = ptrtoint i16* %3 to i64
  %9 = ptrtoint i16* %0 to i64
  %10 = sub i64 %8, %9
  %11 = lshr exact i64 %10, 1
  %12 = trunc i64 %11 to i32
  ret i32 %12
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i16* @u_memchr_69(i16* readonly, i16 zeroext, i32) local_unnamed_addr #0 {
  %4 = alloca i16, align 2
  store i16 %1, i16* %4, align 2
  %5 = icmp slt i32 %2, 1
  br i1 %5, label %21, label %6

6:                                                ; preds = %3
  %7 = and i16 %1, -2048
  %8 = icmp eq i16 %7, -10240
  br i1 %8, label %9, label %11

9:                                                ; preds = %6
  %10 = call i16* @u_strFindFirst_69(i16* %0, i32 %2, i16* nonnull %4, i32 1)
  br label %21

11:                                               ; preds = %6
  %12 = sext i32 %2 to i64
  %13 = getelementptr inbounds i16, i16* %0, i64 %12
  br label %14

14:                                               ; preds = %18, %11
  %15 = phi i16* [ %0, %11 ], [ %19, %18 ]
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, %1
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds i16, i16* %15, i64 1
  %20 = icmp eq i16* %19, %13
  br i1 %20, label %21, label %14

21:                                               ; preds = %14, %18, %3, %9
  %22 = phi i16* [ %10, %9 ], [ null, %3 ], [ null, %18 ], [ %15, %14 ]
  ret i16* %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i16* @u_strstr_69(i16* readonly, i16* readonly) local_unnamed_addr #0 {
  %3 = tail call i16* @u_strFindFirst_69(i16* %0, i32 -1, i16* %1, i32 -1)
  ret i16* %3
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i16* @u_strchr32_69(i16* readonly, i32) local_unnamed_addr #0 {
  %3 = alloca i16, align 2
  %4 = icmp ult i32 %1, 65536
  br i1 %4, label %5, label %25

5:                                                ; preds = %2
  %6 = trunc i32 %1 to i16
  %7 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %7)
  store i16 %6, i16* %3, align 2
  %8 = and i16 %6, -2048
  %9 = icmp eq i16 %8, -10240
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = load i16, i16* %0, align 2
  %12 = icmp eq i16 %11, %6
  br i1 %12, label %23, label %15

13:                                               ; preds = %5
  %14 = call i16* @u_strFindFirst_69(i16* %0, i32 -1, i16* nonnull %3, i32 1) #9
  br label %23

15:                                               ; preds = %10, %19
  %16 = phi i16 [ %21, %19 ], [ %11, %10 ]
  %17 = phi i16* [ %20, %19 ], [ %0, %10 ]
  %18 = icmp eq i16 %16, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds i16, i16* %17, i64 1
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, %6
  br i1 %22, label %23, label %15

23:                                               ; preds = %15, %19, %10, %13
  %24 = phi i16* [ %14, %13 ], [ %0, %10 ], [ %20, %19 ], [ null, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %7)
  br label %47

25:                                               ; preds = %2
  %26 = icmp ult i32 %1, 1114112
  br i1 %26, label %27, label %47

27:                                               ; preds = %25
  %28 = and i32 %1, 1023
  %29 = or i32 %28, 56320
  %30 = load i16, i16* %0, align 2
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %47, label %32

32:                                               ; preds = %27
  %33 = lshr i32 %1, 10
  %34 = trunc i32 %33 to i16
  %35 = add nuw nsw i16 %34, -10304
  br label %36

36:                                               ; preds = %32, %45
  %37 = phi i16 [ %30, %32 ], [ %41, %45 ]
  %38 = phi i16* [ %0, %32 ], [ %39, %45 ]
  %39 = getelementptr inbounds i16, i16* %38, i64 1
  %40 = icmp eq i16 %37, %35
  %41 = load i16, i16* %39, align 2
  %42 = zext i16 %41 to i32
  %43 = icmp eq i32 %29, %42
  %44 = and i1 %40, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %36
  %46 = icmp eq i16 %41, 0
  br i1 %46, label %47, label %36

47:                                               ; preds = %45, %36, %27, %25, %23
  %48 = phi i16* [ %24, %23 ], [ null, %25 ], [ null, %27 ], [ null, %45 ], [ %38, %36 ]
  ret i16* %48
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i16* @u_memchr32_69(i16* readonly, i32, i32) local_unnamed_addr #0 {
  %4 = alloca i16, align 2
  %5 = icmp ult i32 %1, 65536
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = trunc i32 %1 to i16
  %8 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %8)
  store i16 %7, i16* %4, align 2
  %9 = icmp slt i32 %2, 1
  br i1 %9, label %25, label %10

10:                                               ; preds = %6
  %11 = and i16 %7, -2048
  %12 = icmp eq i16 %11, -10240
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = call i16* @u_strFindFirst_69(i16* %0, i32 %2, i16* nonnull %4, i32 1) #9
  br label %25

15:                                               ; preds = %10
  %16 = sext i32 %2 to i64
  %17 = getelementptr inbounds i16, i16* %0, i64 %16
  br label %18

18:                                               ; preds = %22, %15
  %19 = phi i16* [ %0, %15 ], [ %23, %22 ]
  %20 = load i16, i16* %19, align 2
  %21 = icmp eq i16 %20, %7
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds i16, i16* %19, i64 1
  %24 = icmp eq i16* %23, %17
  br i1 %24, label %25, label %18

25:                                               ; preds = %18, %22, %6, %13
  %26 = phi i16* [ %14, %13 ], [ null, %6 ], [ %19, %18 ], [ null, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %8)
  br label %52

27:                                               ; preds = %3
  %28 = icmp sgt i32 %2, 1
  %29 = icmp ult i32 %1, 1114112
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %52

31:                                               ; preds = %27
  %32 = sext i32 %2 to i64
  %33 = getelementptr inbounds i16, i16* %0, i64 %32
  %34 = getelementptr inbounds i16, i16* %33, i64 -1
  %35 = lshr i32 %1, 10
  %36 = and i32 %1, 1023
  %37 = or i32 %36, 56320
  %38 = trunc i32 %35 to i16
  %39 = add nuw nsw i16 %38, -10304
  br label %40

40:                                               ; preds = %49, %31
  %41 = phi i16* [ %0, %31 ], [ %50, %49 ]
  %42 = load i16, i16* %41, align 2
  %43 = icmp eq i16 %42, %39
  br i1 %43, label %44, label %49

44:                                               ; preds = %40
  %45 = getelementptr inbounds i16, i16* %41, i64 1
  %46 = load i16, i16* %45, align 2
  %47 = zext i16 %46 to i32
  %48 = icmp eq i32 %37, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %40, %44
  %50 = getelementptr inbounds i16, i16* %41, i64 1
  %51 = icmp eq i16* %50, %34
  br i1 %51, label %52, label %40

52:                                               ; preds = %44, %49, %27, %25
  %53 = phi i16* [ %26, %25 ], [ null, %27 ], [ null, %49 ], [ %41, %44 ]
  ret i16* %53
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i16* @u_strFindLast_69(i16*, i32, i16*, i32) local_unnamed_addr #0 {
  %5 = icmp eq i16* %2, null
  %6 = icmp slt i32 %3, -1
  %7 = or i1 %5, %6
  br i1 %7, label %122, label %8

8:                                                ; preds = %4
  %9 = icmp eq i16* %0, null
  %10 = icmp slt i32 %1, -1
  %11 = or i1 %9, %10
  br i1 %11, label %122, label %12

12:                                               ; preds = %8
  %13 = icmp slt i32 %3, 0
  br i1 %13, label %14, label %25

14:                                               ; preds = %12, %14
  %15 = phi i16* [ %18, %14 ], [ %2, %12 ]
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  %18 = getelementptr inbounds i16, i16* %15, i64 1
  br i1 %17, label %19, label %14

19:                                               ; preds = %14
  %20 = ptrtoint i16* %15 to i64
  %21 = ptrtoint i16* %2 to i64
  %22 = sub i64 %20, %21
  %23 = lshr exact i64 %22, 1
  %24 = trunc i64 %23 to i32
  br label %25

25:                                               ; preds = %19, %12
  %26 = phi i32 [ %24, %19 ], [ %3, %12 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %122, label %28

28:                                               ; preds = %25
  %29 = sext i32 %26 to i64
  %30 = getelementptr inbounds i16, i16* %2, i64 %29
  %31 = getelementptr inbounds i16, i16* %30, i64 -1
  %32 = load i16, i16* %31, align 2
  %33 = add nsw i32 %26, -1
  %34 = icmp ne i32 %33, 0
  %35 = and i16 %32, -2048
  %36 = icmp eq i16 %35, -10240
  %37 = or i1 %34, %36
  %38 = icmp slt i32 %1, 0
  br i1 %37, label %60, label %39

39:                                               ; preds = %28
  br i1 %38, label %40, label %48

40:                                               ; preds = %39, %40
  %41 = phi i16* [ %47, %40 ], [ %0, %39 ]
  %42 = phi i16* [ %45, %40 ], [ null, %39 ]
  %43 = load i16, i16* %41, align 2
  %44 = icmp eq i16 %43, %32
  %45 = select i1 %44, i16* %41, i16* %42
  %46 = icmp eq i16 %43, 0
  %47 = getelementptr inbounds i16, i16* %41, i64 1
  br i1 %46, label %122, label %40

48:                                               ; preds = %39
  %49 = icmp eq i32 %1, 0
  br i1 %49, label %122, label %50

50:                                               ; preds = %48
  %51 = sext i32 %1 to i64
  %52 = getelementptr inbounds i16, i16* %0, i64 %51
  br label %53

53:                                               ; preds = %58, %50
  %54 = phi i16* [ %52, %50 ], [ %55, %58 ]
  %55 = getelementptr inbounds i16, i16* %54, i64 -1
  %56 = load i16, i16* %55, align 2
  %57 = icmp eq i16 %56, %32
  br i1 %57, label %122, label %58

58:                                               ; preds = %53
  %59 = icmp eq i16* %55, %0
  br i1 %59, label %122, label %53

60:                                               ; preds = %28
  br i1 %38, label %61, label %72

61:                                               ; preds = %60, %61
  %62 = phi i16* [ %65, %61 ], [ %0, %60 ]
  %63 = load i16, i16* %62, align 2
  %64 = icmp eq i16 %63, 0
  %65 = getelementptr inbounds i16, i16* %62, i64 1
  br i1 %64, label %66, label %61

66:                                               ; preds = %61
  %67 = ptrtoint i16* %62 to i64
  %68 = ptrtoint i16* %0 to i64
  %69 = sub i64 %67, %68
  %70 = lshr exact i64 %69, 1
  %71 = trunc i64 %70 to i32
  br label %72

72:                                               ; preds = %66, %60
  %73 = phi i32 [ %71, %66 ], [ %1, %60 ]
  %74 = icmp slt i32 %73, %26
  br i1 %74, label %122, label %75

75:                                               ; preds = %72
  %76 = sext i32 %73 to i64
  %77 = getelementptr inbounds i16, i16* %0, i64 %76
  %78 = sext i32 %33 to i64
  %79 = getelementptr inbounds i16, i16* %0, i64 %78
  %80 = icmp eq i32 %33, %73
  br i1 %80, label %122, label %81

81:                                               ; preds = %75
  %82 = and i16 %32, -1024
  %83 = icmp ne i16 %82, -10240
  %84 = icmp eq i16* %31, %2
  br label %85

85:                                               ; preds = %81, %120
  %86 = phi i16* [ %87, %120 ], [ %77, %81 ]
  %87 = getelementptr inbounds i16, i16* %86, i64 -1
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, %32
  br i1 %89, label %90, label %120

90:                                               ; preds = %85
  br i1 %84, label %93, label %112

91:                                               ; preds = %112
  %92 = icmp eq i16* %117, %2
  br i1 %92, label %93, label %112

93:                                               ; preds = %91, %90
  %94 = phi i16 [ %32, %90 ], [ %116, %91 ]
  %95 = phi i16* [ %87, %90 ], [ %115, %91 ]
  %96 = and i16 %94, -1024
  %97 = icmp ne i16 %96, -9216
  %98 = icmp eq i16* %95, %0
  %99 = or i1 %98, %97
  br i1 %99, label %105, label %100

100:                                              ; preds = %93
  %101 = getelementptr inbounds i16, i16* %95, i64 -1
  %102 = load i16, i16* %101, align 2
  %103 = and i16 %102, -1024
  %104 = icmp eq i16 %103, -10240
  br i1 %104, label %120, label %105

105:                                              ; preds = %100, %93
  %106 = icmp eq i16* %86, %77
  %107 = or i1 %106, %83
  br i1 %107, label %122, label %108

108:                                              ; preds = %105
  %109 = load i16, i16* %86, align 2
  %110 = and i16 %109, -1024
  %111 = icmp eq i16 %110, -9216
  br i1 %111, label %120, label %122

112:                                              ; preds = %90, %91
  %113 = phi i16* [ %117, %91 ], [ %31, %90 ]
  %114 = phi i16* [ %115, %91 ], [ %87, %90 ]
  %115 = getelementptr inbounds i16, i16* %114, i64 -1
  %116 = load i16, i16* %115, align 2
  %117 = getelementptr inbounds i16, i16* %113, i64 -1
  %118 = load i16, i16* %117, align 2
  %119 = icmp eq i16 %116, %118
  br i1 %119, label %91, label %120

120:                                              ; preds = %112, %108, %100, %85
  %121 = icmp eq i16* %79, %87
  br i1 %121, label %122, label %85

122:                                              ; preds = %58, %53, %40, %120, %105, %108, %75, %48, %72, %25, %8, %4
  %123 = phi i16* [ %0, %4 ], [ null, %8 ], [ %0, %25 ], [ null, %72 ], [ null, %48 ], [ null, %75 ], [ null, %120 ], [ %95, %105 ], [ %95, %108 ], [ %45, %40 ], [ null, %58 ], [ %55, %53 ]
  ret i16* %123
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i16* @u_strrchr_69(i16* readonly, i16 zeroext) local_unnamed_addr #0 {
  %3 = alloca i16, align 2
  store i16 %1, i16* %3, align 2
  %4 = and i16 %1, -2048
  %5 = icmp eq i16 %4, -10240
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = call i16* @u_strFindLast_69(i16* %0, i32 -1, i16* nonnull %3, i32 1)
  br label %16

8:                                                ; preds = %2, %8
  %9 = phi i16* [ %15, %8 ], [ %0, %2 ]
  %10 = phi i16* [ %13, %8 ], [ null, %2 ]
  %11 = load i16, i16* %9, align 2
  %12 = icmp eq i16 %11, %1
  %13 = select i1 %12, i16* %9, i16* %10
  %14 = icmp eq i16 %11, 0
  %15 = getelementptr inbounds i16, i16* %9, i64 1
  br i1 %14, label %16, label %8

16:                                               ; preds = %8, %6
  %17 = phi i16* [ %7, %6 ], [ %13, %8 ]
  ret i16* %17
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i16* @u_memrchr_69(i16* readonly, i16 zeroext, i32) local_unnamed_addr #0 {
  %4 = alloca i16, align 2
  store i16 %1, i16* %4, align 2
  %5 = icmp slt i32 %2, 1
  br i1 %5, label %21, label %6

6:                                                ; preds = %3
  %7 = and i16 %1, -2048
  %8 = icmp eq i16 %7, -10240
  br i1 %8, label %9, label %11

9:                                                ; preds = %6
  %10 = call i16* @u_strFindLast_69(i16* %0, i32 %2, i16* nonnull %4, i32 1)
  br label %21

11:                                               ; preds = %6
  %12 = sext i32 %2 to i64
  %13 = getelementptr inbounds i16, i16* %0, i64 %12
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i16* [ %13, %11 ], [ %16, %19 ]
  %16 = getelementptr inbounds i16, i16* %15, i64 -1
  %17 = load i16, i16* %16, align 2
  %18 = icmp eq i16 %17, %1
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = icmp eq i16* %16, %0
  br i1 %20, label %21, label %14

21:                                               ; preds = %14, %19, %3, %9
  %22 = phi i16* [ %10, %9 ], [ null, %3 ], [ null, %19 ], [ %16, %14 ]
  ret i16* %22
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i16* @u_strrstr_69(i16* readonly, i16* readonly) local_unnamed_addr #0 {
  %3 = tail call i16* @u_strFindLast_69(i16* %0, i32 -1, i16* %1, i32 -1)
  ret i16* %3
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i16* @u_strrchr32_69(i16* readonly, i32) local_unnamed_addr #0 {
  %3 = alloca i16, align 2
  %4 = icmp ult i32 %1, 65536
  br i1 %4, label %5, label %22

5:                                                ; preds = %2
  %6 = trunc i32 %1 to i16
  %7 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %7)
  store i16 %6, i16* %3, align 2
  %8 = and i16 %6, -2048
  %9 = icmp eq i16 %8, -10240
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = call i16* @u_strFindLast_69(i16* %0, i32 -1, i16* nonnull %3, i32 1) #9
  br label %20

12:                                               ; preds = %5, %12
  %13 = phi i16* [ %19, %12 ], [ %0, %5 ]
  %14 = phi i16* [ %17, %12 ], [ null, %5 ]
  %15 = load i16, i16* %13, align 2
  %16 = icmp eq i16 %15, %6
  %17 = select i1 %16, i16* %13, i16* %14
  %18 = icmp eq i16 %15, 0
  %19 = getelementptr inbounds i16, i16* %13, i64 1
  br i1 %18, label %20, label %12

20:                                               ; preds = %12, %10
  %21 = phi i16* [ %11, %10 ], [ %17, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %7)
  br label %45

22:                                               ; preds = %2
  %23 = icmp ult i32 %1, 1114112
  br i1 %23, label %24, label %45

24:                                               ; preds = %22
  %25 = and i32 %1, 1023
  %26 = or i32 %25, 56320
  %27 = load i16, i16* %0, align 2
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %24
  %30 = lshr i32 %1, 10
  %31 = trunc i32 %30 to i16
  %32 = add nuw nsw i16 %31, -10304
  br label %33

33:                                               ; preds = %29, %33
  %34 = phi i16 [ %27, %29 ], [ %39, %33 ]
  %35 = phi i16* [ %0, %29 ], [ %37, %33 ]
  %36 = phi i16* [ null, %29 ], [ %43, %33 ]
  %37 = getelementptr inbounds i16, i16* %35, i64 1
  %38 = icmp eq i16 %34, %32
  %39 = load i16, i16* %37, align 2
  %40 = zext i16 %39 to i32
  %41 = icmp eq i32 %26, %40
  %42 = and i1 %38, %41
  %43 = select i1 %42, i16* %35, i16* %36
  %44 = icmp eq i16 %39, 0
  br i1 %44, label %45, label %33

45:                                               ; preds = %33, %24, %22, %20
  %46 = phi i16* [ %21, %20 ], [ null, %22 ], [ null, %24 ], [ %43, %33 ]
  ret i16* %46
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i16* @u_memrchr32_69(i16* readonly, i32, i32) local_unnamed_addr #0 {
  %4 = alloca i16, align 2
  %5 = icmp ult i32 %1, 65536
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = trunc i32 %1 to i16
  %8 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %8)
  store i16 %7, i16* %4, align 2
  %9 = icmp slt i32 %2, 1
  br i1 %9, label %25, label %10

10:                                               ; preds = %6
  %11 = and i16 %7, -2048
  %12 = icmp eq i16 %11, -10240
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = call i16* @u_strFindLast_69(i16* %0, i32 %2, i16* nonnull %4, i32 1) #9
  br label %25

15:                                               ; preds = %10
  %16 = sext i32 %2 to i64
  %17 = getelementptr inbounds i16, i16* %0, i64 %16
  br label %18

18:                                               ; preds = %23, %15
  %19 = phi i16* [ %17, %15 ], [ %20, %23 ]
  %20 = getelementptr inbounds i16, i16* %19, i64 -1
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, %7
  br i1 %22, label %25, label %23

23:                                               ; preds = %18
  %24 = icmp eq i16* %20, %0
  br i1 %24, label %25, label %18

25:                                               ; preds = %18, %23, %6, %13
  %26 = phi i16* [ %14, %13 ], [ null, %6 ], [ %20, %18 ], [ null, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %8)
  br label %54

27:                                               ; preds = %3
  %28 = icmp sgt i32 %2, 1
  %29 = icmp ult i32 %1, 1114112
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %54

31:                                               ; preds = %27
  %32 = sext i32 %2 to i64
  %33 = getelementptr inbounds i16, i16* %0, i64 %32
  %34 = getelementptr inbounds i16, i16* %33, i64 -1
  %35 = lshr i32 %1, 10
  %36 = and i32 %1, 1023
  %37 = or i32 %36, 56320
  %38 = trunc i32 %35 to i16
  %39 = add nuw nsw i16 %38, -10304
  br label %40

40:                                               ; preds = %49, %31
  %41 = phi i16* [ %34, %31 ], [ %50, %49 ]
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = icmp eq i32 %37, %43
  br i1 %44, label %45, label %49

45:                                               ; preds = %40
  %46 = getelementptr inbounds i16, i16* %41, i64 -1
  %47 = load i16, i16* %46, align 2
  %48 = icmp eq i16 %47, %39
  br i1 %48, label %52, label %49

49:                                               ; preds = %40, %45
  %50 = getelementptr inbounds i16, i16* %41, i64 -1
  %51 = icmp eq i16* %50, %0
  br i1 %51, label %54, label %40

52:                                               ; preds = %45
  %53 = getelementptr inbounds i16, i16* %41, i64 -1
  br label %54

54:                                               ; preds = %49, %52, %27, %25
  %55 = phi i16* [ %26, %25 ], [ null, %27 ], [ %53, %52 ], [ null, %49 ]
  ret i16* %55
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16* @u_strpbrk_69(i16* readonly, i16* nocapture readonly) local_unnamed_addr #2 {
  %3 = tail call fastcc i32 @_ZL13_matchFromSetPKDsS0_a(i16* %0, i16* %1, i8 signext 1)
  %4 = icmp sgt i32 %3, -1
  %5 = sext i32 %3 to i64
  %6 = getelementptr inbounds i16, i16* %0, i64 %5
  %7 = select i1 %4, i16* %6, i16* null
  ret i16* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc i32 @_ZL13_matchFromSetPKDsS0_a(i16* nocapture readonly, i16* nocapture readonly, i8 signext) unnamed_addr #2 {
  br label %4

4:                                                ; preds = %4, %3
  %5 = phi i64 [ %12, %4 ], [ 0, %3 ]
  %6 = getelementptr inbounds i16, i16* %1, i64 %5
  %7 = load i16, i16* %6, align 2
  %8 = icmp ne i16 %7, 0
  %9 = and i16 %7, -2048
  %10 = icmp ne i16 %9, -10240
  %11 = and i1 %8, %10
  %12 = add nuw i64 %5, 1
  br i1 %11, label %4, label %13

13:                                               ; preds = %4
  %14 = trunc i64 %5 to i32
  %15 = and i64 %5, 4294967295
  br label %16

16:                                               ; preds = %16, %13
  %17 = phi i64 [ %21, %16 ], [ %15, %13 ]
  %18 = getelementptr inbounds i16, i16* %1, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = icmp eq i16 %19, 0
  %21 = add nuw i64 %17, 1
  br i1 %20, label %22, label %16

22:                                               ; preds = %16
  %23 = trunc i64 %17 to i32
  %24 = load i16, i16* %0, align 2
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %147, label %26

26:                                               ; preds = %22
  %27 = icmp eq i8 %2, 0
  %28 = icmp eq i32 %23, 0
  %29 = and i64 %17, 4294967295
  %30 = and i64 %17, 4294967295
  br label %31

31:                                               ; preds = %26, %141
  %32 = phi i16 [ %24, %26 ], [ %145, %141 ]
  %33 = phi i32 [ 0, %26 ], [ %142, %141 ]
  %34 = zext i16 %32 to i32
  %35 = add nsw i32 %33, 1
  %36 = and i32 %34, 63488
  %37 = icmp eq i32 %36, 55296
  br i1 %37, label %57, label %38

38:                                               ; preds = %31
  br i1 %27, label %40, label %39

39:                                               ; preds = %38
  br i1 %28, label %141, label %43

40:                                               ; preds = %38
  br i1 %28, label %150, label %51

41:                                               ; preds = %43
  %42 = icmp eq i64 %48, %29
  br i1 %42, label %141, label %43

43:                                               ; preds = %39, %41
  %44 = phi i64 [ %48, %41 ], [ 0, %39 ]
  %45 = getelementptr inbounds i16, i16* %1, i64 %44
  %46 = load i16, i16* %45, align 2
  %47 = icmp eq i16 %32, %46
  %48 = add nuw nsw i64 %44, 1
  br i1 %47, label %150, label %41

49:                                               ; preds = %51
  %50 = icmp eq i64 %56, %30
  br i1 %50, label %150, label %51

51:                                               ; preds = %40, %49
  %52 = phi i64 [ %56, %49 ], [ 0, %40 ]
  %53 = getelementptr inbounds i16, i16* %1, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = icmp eq i16 %32, %54
  %56 = add nuw nsw i64 %52, 1
  br i1 %55, label %141, label %49

57:                                               ; preds = %31
  %58 = and i32 %34, 1024
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %57
  %61 = sext i32 %35 to i64
  %62 = getelementptr inbounds i16, i16* %0, i64 %61
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = and i32 %64, 64512
  %66 = icmp eq i32 %65, 56320
  br i1 %66, label %67, label %72

67:                                               ; preds = %60
  %68 = add nsw i32 %33, 2
  %69 = shl nuw nsw i32 %34, 10
  %70 = add nsw i32 %69, -56613888
  %71 = add nsw i32 %70, %64
  br label %72

72:                                               ; preds = %57, %60, %67
  %73 = phi i32 [ %68, %67 ], [ %35, %60 ], [ %35, %57 ]
  %74 = phi i32 [ %71, %67 ], [ %34, %60 ], [ %34, %57 ]
  br i1 %27, label %108, label %75

75:                                               ; preds = %72, %100
  %76 = phi i32 [ %101, %100 ], [ %14, %72 ]
  %77 = icmp slt i32 %76, %23
  br i1 %77, label %78, label %141

78:                                               ; preds = %75
  %79 = add nsw i32 %76, 1
  %80 = sext i32 %76 to i64
  %81 = getelementptr inbounds i16, i16* %1, i64 %80
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = and i32 %83, 64512
  %85 = icmp ne i32 %84, 55296
  %86 = icmp eq i32 %79, %23
  %87 = or i1 %86, %85
  br i1 %87, label %100, label %88

88:                                               ; preds = %78
  %89 = sext i32 %79 to i64
  %90 = getelementptr inbounds i16, i16* %1, i64 %89
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %91 to i32
  %93 = and i32 %92, 64512
  %94 = icmp eq i32 %93, 56320
  br i1 %94, label %95, label %100

95:                                               ; preds = %88
  %96 = add nsw i32 %76, 2
  %97 = shl nuw nsw i32 %83, 10
  %98 = add nsw i32 %97, -56613888
  %99 = add nsw i32 %98, %92
  br label %100

100:                                              ; preds = %78, %88, %95
  %101 = phi i32 [ %79, %78 ], [ %96, %95 ], [ %79, %88 ]
  %102 = phi i32 [ %83, %78 ], [ %99, %95 ], [ %83, %88 ]
  %103 = icmp eq i32 %74, %102
  br i1 %103, label %104, label %75

104:                                              ; preds = %100
  %105 = icmp ult i32 %74, 65536
  %106 = select i1 %105, i32 1, i32 2
  %107 = sub nsw i32 %73, %106
  br label %150

108:                                              ; preds = %72, %133
  %109 = phi i32 [ %134, %133 ], [ %14, %72 ]
  %110 = icmp slt i32 %109, %23
  br i1 %110, label %111, label %137

111:                                              ; preds = %108
  %112 = add nsw i32 %109, 1
  %113 = sext i32 %109 to i64
  %114 = getelementptr inbounds i16, i16* %1, i64 %113
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = and i32 %116, 64512
  %118 = icmp ne i32 %117, 55296
  %119 = icmp eq i32 %112, %23
  %120 = or i1 %119, %118
  br i1 %120, label %133, label %121

121:                                              ; preds = %111
  %122 = sext i32 %112 to i64
  %123 = getelementptr inbounds i16, i16* %1, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = zext i16 %124 to i32
  %126 = and i32 %125, 64512
  %127 = icmp eq i32 %126, 56320
  br i1 %127, label %128, label %133

128:                                              ; preds = %121
  %129 = add nsw i32 %109, 2
  %130 = shl nuw nsw i32 %116, 10
  %131 = add nsw i32 %130, -56613888
  %132 = add nsw i32 %131, %125
  br label %133

133:                                              ; preds = %111, %121, %128
  %134 = phi i32 [ %112, %111 ], [ %129, %128 ], [ %112, %121 ]
  %135 = phi i32 [ %116, %111 ], [ %132, %128 ], [ %116, %121 ]
  %136 = icmp eq i32 %74, %135
  br i1 %136, label %141, label %108

137:                                              ; preds = %108
  %138 = icmp ult i32 %74, 65536
  %139 = select i1 %138, i32 1, i32 2
  %140 = sub nsw i32 %73, %139
  br label %150

141:                                              ; preds = %41, %51, %75, %133, %39
  %142 = phi i32 [ %35, %39 ], [ %73, %133 ], [ %73, %75 ], [ %35, %51 ], [ %35, %41 ]
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds i16, i16* %0, i64 %143
  %145 = load i16, i16* %144, align 2
  %146 = icmp eq i16 %145, 0
  br i1 %146, label %147, label %31

147:                                              ; preds = %141, %22
  %148 = phi i32 [ 0, %22 ], [ %142, %141 ]
  %149 = xor i32 %148, -1
  br label %150

150:                                              ; preds = %40, %43, %49, %147, %137, %104
  %151 = phi i32 [ %107, %104 ], [ %140, %137 ], [ %149, %147 ], [ %33, %49 ], [ %33, %43 ], [ %33, %40 ]
  ret i32 %151
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @u_strcspn_69(i16* nocapture readonly, i16* nocapture readonly) local_unnamed_addr #2 {
  %3 = tail call fastcc i32 @_ZL13_matchFromSetPKDsS0_a(i16* %0, i16* %1, i8 signext 1)
  %4 = ashr i32 %3, 31
  %5 = xor i32 %4, %3
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @u_strspn_69(i16* nocapture readonly, i16* nocapture readonly) local_unnamed_addr #2 {
  %3 = tail call fastcc i32 @_ZL13_matchFromSetPKDsS0_a(i16* %0, i16* %1, i8 signext 0)
  %4 = ashr i32 %3, 31
  %5 = xor i32 %4, %3
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i16* @u_strtok_r_69(i16*, i16* nocapture readonly, i16** nocapture) local_unnamed_addr #3 {
  %4 = icmp eq i16* %0, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  store i16* %0, i16** %2, align 8
  br label %9

6:                                                ; preds = %3
  %7 = load i16*, i16** %2, align 8
  %8 = icmp eq i16* %7, null
  br i1 %8, label %30, label %9

9:                                                ; preds = %6, %5
  %10 = phi i16* [ %0, %5 ], [ %7, %6 ]
  %11 = tail call fastcc i32 @_ZL13_matchFromSetPKDsS0_a(i16* nonnull %10, i16* %1, i8 signext 0) #9
  %12 = ashr i32 %11, 31
  %13 = xor i32 %12, %11
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i16, i16* %10, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %9
  %19 = tail call fastcc i32 @_ZL13_matchFromSetPKDsS0_a(i16* %15, i16* %1, i8 signext 1) #9
  %20 = icmp slt i32 %19, 0
  %21 = sext i32 %19 to i64
  %22 = getelementptr inbounds i16, i16* %15, i64 %21
  %23 = icmp eq i16* %22, null
  %24 = or i1 %20, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds i16, i16* %22, i64 1
  store i16 0, i16* %22, align 2
  br label %27

27:                                               ; preds = %9, %18, %25
  %28 = phi i16* [ %26, %25 ], [ null, %18 ], [ null, %9 ]
  %29 = phi i16* [ %15, %25 ], [ %15, %18 ], [ null, %9 ]
  store i16* %28, i16** %2, align 8
  br label %30

30:                                               ; preds = %27, %6
  %31 = phi i16* [ null, %6 ], [ %29, %27 ]
  ret i16* %31
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i16* @u_strcat_69(i16* returned, i16* nocapture readonly) local_unnamed_addr #3 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i16* [ %0, %2 ], [ %7, %3 ]
  %5 = load i16, i16* %4, align 2
  %6 = icmp eq i16 %5, 0
  %7 = getelementptr inbounds i16, i16* %4, i64 1
  br i1 %6, label %8, label %3

8:                                                ; preds = %3, %8
  %9 = phi i16* [ %13, %8 ], [ %4, %3 ]
  %10 = phi i16* [ %11, %8 ], [ %1, %3 ]
  %11 = getelementptr inbounds i16, i16* %10, i64 1
  %12 = load i16, i16* %10, align 2
  %13 = getelementptr inbounds i16, i16* %9, i64 1
  store i16 %12, i16* %9, align 2
  %14 = icmp eq i16 %12, 0
  br i1 %14, label %15, label %8

15:                                               ; preds = %8
  ret i16* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i16* @u_strncat_69(i16* returned, i16* nocapture readonly, i32) local_unnamed_addr #3 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %25

5:                                                ; preds = %3, %5
  %6 = phi i16* [ %9, %5 ], [ %0, %3 ]
  %7 = load i16, i16* %6, align 2
  %8 = icmp eq i16 %7, 0
  %9 = getelementptr inbounds i16, i16* %6, i64 1
  br i1 %8, label %10, label %5

10:                                               ; preds = %5
  %11 = load i16, i16* %1, align 2
  store i16 %11, i16* %6, align 2
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %25, label %16

13:                                               ; preds = %16
  %14 = load i16, i16* %23, align 2
  store i16 %14, i16* %20, align 2
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %10, %13
  %17 = phi i32 [ %21, %13 ], [ %2, %10 ]
  %18 = phi i16* [ %23, %13 ], [ %1, %10 ]
  %19 = phi i16* [ %20, %13 ], [ %6, %10 ]
  %20 = getelementptr inbounds i16, i16* %19, i64 1
  %21 = add nsw i32 %17, -1
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds i16, i16* %18, i64 1
  br i1 %22, label %24, label %13

24:                                               ; preds = %16
  store i16 0, i16* %20, align 2
  br label %25

25:                                               ; preds = %13, %10, %3, %24
  ret i16* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @u_strcmp_69(i16* nocapture readonly, i16* nocapture readonly) local_unnamed_addr #2 {
  br label %3

3:                                                ; preds = %9, %2
  %4 = phi i16* [ %0, %2 ], [ %11, %9 ]
  %5 = phi i16* [ %1, %2 ], [ %10, %9 ]
  %6 = load i16, i16* %4, align 2
  %7 = load i16, i16* %5, align 2
  %8 = icmp eq i16 %6, %7
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = getelementptr inbounds i16, i16* %5, i64 1
  %11 = getelementptr inbounds i16, i16* %4, i64 1
  %12 = icmp eq i16 %6, 0
  br i1 %12, label %13, label %3

13:                                               ; preds = %3, %9
  %14 = phi i16 [ %7, %3 ], [ 0, %9 ]
  %15 = zext i16 %6 to i32
  %16 = zext i16 %14 to i32
  %17 = sub nsw i32 %15, %16
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @uprv_strCompare_69(i16*, i32, i16*, i32, i8 signext, i8 signext) local_unnamed_addr #2 {
  %7 = icmp slt i32 %1, 0
  %8 = icmp slt i32 %3, 0
  %9 = and i32 %3, %1
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %11, label %28

11:                                               ; preds = %6
  %12 = icmp eq i16* %0, %2
  br i1 %12, label %163, label %13

13:                                               ; preds = %11
  %14 = load i16, i16* %0, align 2
  %15 = load i16, i16* %2, align 2
  %16 = icmp eq i16 %14, %15
  br i1 %16, label %17, label %102

17:                                               ; preds = %13, %22
  %18 = phi i16 [ %25, %22 ], [ %14, %13 ]
  %19 = phi i16* [ %23, %22 ], [ %0, %13 ]
  %20 = phi i16* [ %24, %22 ], [ %2, %13 ]
  %21 = icmp eq i16 %18, 0
  br i1 %21, label %163, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds i16, i16* %19, i64 1
  %24 = getelementptr inbounds i16, i16* %20, i64 1
  %25 = load i16, i16* %23, align 2
  %26 = load i16, i16* %24, align 2
  %27 = icmp eq i16 %25, %26
  br i1 %27, label %17, label %102

28:                                               ; preds = %6
  %29 = icmp eq i8 %4, 0
  br i1 %29, label %50, label %30

30:                                               ; preds = %28
  %31 = icmp eq i16* %0, %2
  br i1 %31, label %163, label %32

32:                                               ; preds = %30
  %33 = sext i32 %1 to i64
  %34 = getelementptr inbounds i16, i16* %0, i64 %33
  %35 = icmp eq i32 %1, 0
  br i1 %35, label %163, label %36

36:                                               ; preds = %32, %44
  %37 = phi i16* [ %45, %44 ], [ %0, %32 ]
  %38 = phi i16* [ %46, %44 ], [ %2, %32 ]
  %39 = load i16, i16* %37, align 2
  %40 = load i16, i16* %38, align 2
  %41 = icmp eq i16 %39, %40
  br i1 %41, label %42, label %48

42:                                               ; preds = %36
  %43 = icmp eq i16 %39, 0
  br i1 %43, label %163, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds i16, i16* %37, i64 1
  %46 = getelementptr inbounds i16, i16* %38, i64 1
  %47 = icmp eq i16* %45, %34
  br i1 %47, label %163, label %36

48:                                               ; preds = %36
  %49 = getelementptr inbounds i16, i16* %2, i64 %33
  br label %102

50:                                               ; preds = %28
  br i1 %7, label %51, label %62

51:                                               ; preds = %50, %51
  %52 = phi i16* [ %55, %51 ], [ %0, %50 ]
  %53 = load i16, i16* %52, align 2
  %54 = icmp eq i16 %53, 0
  %55 = getelementptr inbounds i16, i16* %52, i64 1
  br i1 %54, label %56, label %51

56:                                               ; preds = %51
  %57 = ptrtoint i16* %52 to i64
  %58 = ptrtoint i16* %0 to i64
  %59 = sub i64 %57, %58
  %60 = lshr exact i64 %59, 1
  %61 = trunc i64 %60 to i32
  br label %62

62:                                               ; preds = %56, %50
  %63 = phi i32 [ %61, %56 ], [ %1, %50 ]
  br i1 %8, label %64, label %75

64:                                               ; preds = %62, %64
  %65 = phi i16* [ %68, %64 ], [ %2, %62 ]
  %66 = load i16, i16* %65, align 2
  %67 = icmp eq i16 %66, 0
  %68 = getelementptr inbounds i16, i16* %65, i64 1
  br i1 %67, label %69, label %64

69:                                               ; preds = %64
  %70 = ptrtoint i16* %65 to i64
  %71 = ptrtoint i16* %2 to i64
  %72 = sub i64 %70, %71
  %73 = lshr exact i64 %72, 1
  %74 = trunc i64 %73 to i32
  br label %75

75:                                               ; preds = %69, %62
  %76 = phi i32 [ %74, %69 ], [ %3, %62 ]
  %77 = icmp slt i32 %63, %76
  %78 = icmp ne i32 %63, %76
  %79 = zext i1 %78 to i32
  %80 = select i1 %77, i32 %63, i32 %76
  %81 = select i1 %77, i32 -1, i32 %79
  %82 = sext i32 %80 to i64
  %83 = getelementptr inbounds i16, i16* %0, i64 %82
  %84 = icmp eq i16* %0, %2
  %85 = icmp eq i32 %80, 0
  %86 = or i1 %84, %85
  br i1 %86, label %163, label %87

87:                                               ; preds = %75, %93
  %88 = phi i16* [ %94, %93 ], [ %0, %75 ]
  %89 = phi i16* [ %95, %93 ], [ %2, %75 ]
  %90 = load i16, i16* %88, align 2
  %91 = load i16, i16* %89, align 2
  %92 = icmp eq i16 %90, %91
  br i1 %92, label %93, label %97

93:                                               ; preds = %87
  %94 = getelementptr inbounds i16, i16* %88, i64 1
  %95 = getelementptr inbounds i16, i16* %89, i64 1
  %96 = icmp eq i16* %94, %83
  br i1 %96, label %163, label %87

97:                                               ; preds = %87
  %98 = sext i32 %63 to i64
  %99 = getelementptr inbounds i16, i16* %0, i64 %98
  %100 = sext i32 %76 to i64
  %101 = getelementptr inbounds i16, i16* %2, i64 %100
  br label %102

102:                                              ; preds = %22, %13, %97, %48
  %103 = phi i16* [ %38, %48 ], [ %89, %97 ], [ %2, %13 ], [ %24, %22 ]
  %104 = phi i16* [ %37, %48 ], [ %88, %97 ], [ %0, %13 ], [ %23, %22 ]
  %105 = phi i16* [ %34, %48 ], [ %99, %97 ], [ null, %13 ], [ null, %22 ]
  %106 = phi i16* [ %49, %48 ], [ %101, %97 ], [ null, %13 ], [ null, %22 ]
  %107 = phi i16 [ %39, %48 ], [ %90, %97 ], [ %14, %13 ], [ %25, %22 ]
  %108 = phi i16 [ %40, %48 ], [ %91, %97 ], [ %15, %13 ], [ %26, %22 ]
  %109 = icmp ugt i16 %107, -10241
  br i1 %109, label %110, label %157

110:                                              ; preds = %102
  %111 = icmp ugt i16 %108, -10241
  %112 = icmp ne i8 %5, 0
  %113 = and i1 %112, %111
  br i1 %113, label %114, label %157

114:                                              ; preds = %110
  %115 = icmp ult i16 %107, -9216
  br i1 %115, label %116, label %123

116:                                              ; preds = %114
  %117 = getelementptr inbounds i16, i16* %104, i64 1
  %118 = icmp eq i16* %117, %105
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = load i16, i16* %117, align 2
  %121 = and i16 %120, -1024
  %122 = icmp eq i16 %121, -9216
  br i1 %122, label %135, label %123

123:                                              ; preds = %116, %119, %114
  %124 = and i16 %107, -1024
  %125 = icmp ne i16 %124, -9216
  %126 = icmp eq i16* %104, %0
  %127 = or i1 %126, %125
  br i1 %127, label %133, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds i16, i16* %104, i64 -1
  %130 = load i16, i16* %129, align 2
  %131 = and i16 %130, -1024
  %132 = icmp eq i16 %131, -10240
  br i1 %132, label %135, label %133

133:                                              ; preds = %123, %128
  %134 = add nsw i16 %107, -10240
  br label %135

135:                                              ; preds = %119, %128, %133
  %136 = phi i16 [ %107, %119 ], [ %107, %128 ], [ %134, %133 ]
  %137 = icmp ult i16 %108, -9216
  br i1 %137, label %138, label %145

138:                                              ; preds = %135
  %139 = getelementptr inbounds i16, i16* %103, i64 1
  %140 = icmp eq i16* %139, %106
  br i1 %140, label %145, label %141

141:                                              ; preds = %138
  %142 = load i16, i16* %139, align 2
  %143 = and i16 %142, -1024
  %144 = icmp eq i16 %143, -9216
  br i1 %144, label %157, label %145

145:                                              ; preds = %138, %141, %135
  %146 = and i16 %108, -1024
  %147 = icmp ne i16 %146, -9216
  %148 = icmp eq i16* %103, %2
  %149 = or i1 %148, %147
  br i1 %149, label %155, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds i16, i16* %103, i64 -1
  %152 = load i16, i16* %151, align 2
  %153 = and i16 %152, -1024
  %154 = icmp eq i16 %153, -10240
  br i1 %154, label %157, label %155

155:                                              ; preds = %145, %150
  %156 = add nsw i16 %108, -10240
  br label %157

157:                                              ; preds = %155, %150, %141, %110, %102
  %158 = phi i16 [ %136, %141 ], [ %136, %150 ], [ %136, %155 ], [ %107, %110 ], [ %107, %102 ]
  %159 = phi i16 [ %108, %141 ], [ %108, %150 ], [ %156, %155 ], [ %108, %110 ], [ %108, %102 ]
  %160 = zext i16 %158 to i32
  %161 = zext i16 %159 to i32
  %162 = sub nsw i32 %160, %161
  br label %163

163:                                              ; preds = %44, %42, %93, %17, %32, %75, %30, %11, %157
  %164 = phi i32 [ %162, %157 ], [ 0, %11 ], [ 0, %30 ], [ %81, %75 ], [ 0, %32 ], [ 0, %17 ], [ %81, %93 ], [ 0, %42 ], [ 0, %44 ]
  ret i32 %164
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @u_strCompareIter_69(%struct.UCharIterator*, %struct.UCharIterator*, i8 signext) local_unnamed_addr #4 {
  %4 = icmp eq %struct.UCharIterator* %0, null
  %5 = icmp eq %struct.UCharIterator* %1, null
  %6 = or i1 %4, %5
  %7 = icmp eq %struct.UCharIterator* %0, %1
  %8 = or i1 %7, %6
  br i1 %8, label %79, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.UCharIterator, %struct.UCharIterator* %0, i64 0, i32 7
  %11 = load i32 (%struct.UCharIterator*, i32, i32)*, i32 (%struct.UCharIterator*, i32, i32)** %10, align 8
  %12 = tail call i32 %11(%struct.UCharIterator* nonnull %0, i32 0, i32 0) #9
  %13 = getelementptr inbounds %struct.UCharIterator, %struct.UCharIterator* %1, i64 0, i32 7
  %14 = load i32 (%struct.UCharIterator*, i32, i32)*, i32 (%struct.UCharIterator*, i32, i32)** %13, align 8
  %15 = tail call i32 %14(%struct.UCharIterator* nonnull %1, i32 0, i32 0) #9
  %16 = getelementptr inbounds %struct.UCharIterator, %struct.UCharIterator* %0, i64 0, i32 11
  %17 = getelementptr inbounds %struct.UCharIterator, %struct.UCharIterator* %1, i64 0, i32 11
  br label %18

18:                                               ; preds = %24, %9
  %19 = load i32 (%struct.UCharIterator*)*, i32 (%struct.UCharIterator*)** %16, align 8
  %20 = tail call i32 %19(%struct.UCharIterator* %0) #9
  %21 = load i32 (%struct.UCharIterator*)*, i32 (%struct.UCharIterator*)** %17, align 8
  %22 = tail call i32 %21(%struct.UCharIterator* %1) #9
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = icmp eq i32 %20, -1
  br i1 %25, label %79, label %18

26:                                               ; preds = %18
  %27 = icmp sgt i32 %20, 55295
  %28 = icmp sgt i32 %22, 55295
  %29 = and i1 %27, %28
  %30 = icmp ne i8 %2, 0
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %75

32:                                               ; preds = %26
  %33 = icmp slt i32 %20, 56320
  br i1 %33, label %34, label %40

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.UCharIterator, %struct.UCharIterator* %0, i64 0, i32 10
  %36 = load i32 (%struct.UCharIterator*)*, i32 (%struct.UCharIterator*)** %35, align 8
  %37 = tail call i32 %36(%struct.UCharIterator* %0) #9
  %38 = and i32 %37, -1024
  %39 = icmp eq i32 %38, 56320
  br i1 %39, label %53, label %40

40:                                               ; preds = %34, %32
  %41 = and i32 %20, -1024
  %42 = icmp eq i32 %41, 56320
  br i1 %42, label %43, label %51

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.UCharIterator, %struct.UCharIterator* %0, i64 0, i32 12
  %45 = load i32 (%struct.UCharIterator*)*, i32 (%struct.UCharIterator*)** %44, align 8
  %46 = tail call i32 %45(%struct.UCharIterator* %0) #9
  %47 = load i32 (%struct.UCharIterator*)*, i32 (%struct.UCharIterator*)** %44, align 8
  %48 = tail call i32 %47(%struct.UCharIterator* %0) #9
  %49 = and i32 %48, -1024
  %50 = icmp eq i32 %49, 55296
  br i1 %50, label %53, label %51

51:                                               ; preds = %43, %40
  %52 = add nsw i32 %20, -10240
  br label %53

53:                                               ; preds = %34, %43, %51
  %54 = phi i32 [ %20, %34 ], [ %20, %43 ], [ %52, %51 ]
  %55 = icmp slt i32 %22, 56320
  br i1 %55, label %56, label %62

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct.UCharIterator, %struct.UCharIterator* %1, i64 0, i32 10
  %58 = load i32 (%struct.UCharIterator*)*, i32 (%struct.UCharIterator*)** %57, align 8
  %59 = tail call i32 %58(%struct.UCharIterator* %1) #9
  %60 = and i32 %59, -1024
  %61 = icmp eq i32 %60, 56320
  br i1 %61, label %75, label %62

62:                                               ; preds = %56, %53
  %63 = and i32 %22, -1024
  %64 = icmp eq i32 %63, 56320
  br i1 %64, label %65, label %73

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.UCharIterator, %struct.UCharIterator* %1, i64 0, i32 12
  %67 = load i32 (%struct.UCharIterator*)*, i32 (%struct.UCharIterator*)** %66, align 8
  %68 = tail call i32 %67(%struct.UCharIterator* %1) #9
  %69 = load i32 (%struct.UCharIterator*)*, i32 (%struct.UCharIterator*)** %66, align 8
  %70 = tail call i32 %69(%struct.UCharIterator* %1) #9
  %71 = and i32 %70, -1024
  %72 = icmp eq i32 %71, 55296
  br i1 %72, label %75, label %73

73:                                               ; preds = %65, %62
  %74 = add nsw i32 %22, -10240
  br label %75

75:                                               ; preds = %73, %65, %56, %26
  %76 = phi i32 [ %54, %56 ], [ %54, %65 ], [ %54, %73 ], [ %20, %26 ]
  %77 = phi i32 [ %22, %56 ], [ %22, %65 ], [ %74, %73 ], [ %22, %26 ]
  %78 = sub nsw i32 %76, %77
  br label %79

79:                                               ; preds = %24, %3, %75
  %80 = phi i32 [ %78, %75 ], [ 0, %3 ], [ 0, %24 ]
  ret i32 %80
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @u_strCompare_69(i16* readonly, i32, i16* readonly, i32, i8 signext) local_unnamed_addr #2 {
  %6 = icmp eq i16* %0, null
  %7 = icmp slt i32 %1, -1
  %8 = or i1 %6, %7
  %9 = icmp eq i16* %2, null
  %10 = or i1 %8, %9
  %11 = icmp slt i32 %3, -1
  %12 = or i1 %10, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %5
  %14 = tail call i32 @uprv_strCompare_69(i16* nonnull %0, i32 %1, i16* nonnull %2, i32 %3, i8 signext 0, i8 signext %4)
  br label %15

15:                                               ; preds = %5, %13
  %16 = phi i32 [ %14, %13 ], [ 0, %5 ]
  ret i32 %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @u_strcmpCodePointOrder_69(i16* readonly, i16* readonly) local_unnamed_addr #2 {
  %3 = icmp eq i16* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = load i16, i16* %0, align 2
  %6 = load i16, i16* %1, align 2
  %7 = icmp eq i16 %5, %6
  br i1 %7, label %8, label %19

8:                                                ; preds = %4, %13
  %9 = phi i16 [ %16, %13 ], [ %5, %4 ]
  %10 = phi i16* [ %14, %13 ], [ %0, %4 ]
  %11 = phi i16* [ %15, %13 ], [ %1, %4 ]
  %12 = icmp eq i16 %9, 0
  br i1 %12, label %76, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds i16, i16* %10, i64 1
  %15 = getelementptr inbounds i16, i16* %11, i64 1
  %16 = load i16, i16* %14, align 2
  %17 = load i16, i16* %15, align 2
  %18 = icmp eq i16 %16, %17
  br i1 %18, label %8, label %19

19:                                               ; preds = %13, %4
  %20 = phi i16* [ %1, %4 ], [ %15, %13 ]
  %21 = phi i16* [ %0, %4 ], [ %14, %13 ]
  %22 = phi i16 [ %5, %4 ], [ %16, %13 ]
  %23 = phi i16 [ %6, %4 ], [ %17, %13 ]
  %24 = icmp ugt i16 %22, -10241
  %25 = icmp ugt i16 %23, -10241
  %26 = and i1 %24, %25
  br i1 %26, label %27, label %70

27:                                               ; preds = %19
  %28 = icmp ult i16 %22, -9216
  br i1 %28, label %29, label %36

29:                                               ; preds = %27
  %30 = getelementptr inbounds i16, i16* %21, i64 1
  %31 = icmp eq i16* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = load i16, i16* %30, align 2
  %34 = and i16 %33, -1024
  %35 = icmp eq i16 %34, -9216
  br i1 %35, label %48, label %36

36:                                               ; preds = %32, %29, %27
  %37 = and i16 %22, -1024
  %38 = icmp ne i16 %37, -9216
  %39 = icmp eq i16* %21, %0
  %40 = or i1 %39, %38
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds i16, i16* %21, i64 -1
  %43 = load i16, i16* %42, align 2
  %44 = and i16 %43, -1024
  %45 = icmp eq i16 %44, -10240
  br i1 %45, label %48, label %46

46:                                               ; preds = %41, %36
  %47 = add nsw i16 %22, -10240
  br label %48

48:                                               ; preds = %46, %41, %32
  %49 = phi i16 [ %22, %32 ], [ %22, %41 ], [ %47, %46 ]
  %50 = icmp ult i16 %23, -9216
  br i1 %50, label %51, label %58

51:                                               ; preds = %48
  %52 = getelementptr inbounds i16, i16* %20, i64 1
  %53 = icmp eq i16* %52, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %51
  %55 = load i16, i16* %52, align 2
  %56 = and i16 %55, -1024
  %57 = icmp eq i16 %56, -9216
  br i1 %57, label %70, label %58

58:                                               ; preds = %54, %51, %48
  %59 = and i16 %23, -1024
  %60 = icmp ne i16 %59, -9216
  %61 = icmp eq i16* %20, %1
  %62 = or i1 %61, %60
  br i1 %62, label %68, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds i16, i16* %20, i64 -1
  %65 = load i16, i16* %64, align 2
  %66 = and i16 %65, -1024
  %67 = icmp eq i16 %66, -10240
  br i1 %67, label %70, label %68

68:                                               ; preds = %63, %58
  %69 = add nsw i16 %23, -10240
  br label %70

70:                                               ; preds = %68, %63, %54, %19
  %71 = phi i16 [ %49, %54 ], [ %49, %63 ], [ %49, %68 ], [ %22, %19 ]
  %72 = phi i16 [ %23, %54 ], [ %23, %63 ], [ %69, %68 ], [ %23, %19 ]
  %73 = zext i16 %71 to i32
  %74 = zext i16 %72 to i32
  %75 = sub nsw i32 %73, %74
  br label %76

76:                                               ; preds = %8, %2, %70
  %77 = phi i32 [ %75, %70 ], [ 0, %2 ], [ 0, %8 ]
  ret i32 %77
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @u_strncmp_69(i16* nocapture readonly, i16* nocapture readonly, i32) local_unnamed_addr #2 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = load i16, i16* %0, align 2
  %7 = zext i16 %6 to i32
  %8 = load i16, i16* %1, align 2
  %9 = zext i16 %8 to i32
  %10 = sub nsw i32 %7, %9
  %11 = icmp ne i32 %10, 0
  %12 = icmp eq i16 %6, 0
  %13 = or i1 %12, %11
  br i1 %13, label %31, label %14

14:                                               ; preds = %5, %20
  %15 = phi i32 [ %18, %20 ], [ %2, %5 ]
  %16 = phi i16* [ %22, %20 ], [ %1, %5 ]
  %17 = phi i16* [ %21, %20 ], [ %0, %5 ]
  %18 = add nsw i32 %15, -1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds i16, i16* %17, i64 1
  %22 = getelementptr inbounds i16, i16* %16, i64 1
  %23 = load i16, i16* %21, align 2
  %24 = zext i16 %23 to i32
  %25 = load i16, i16* %22, align 2
  %26 = zext i16 %25 to i32
  %27 = sub nsw i32 %24, %26
  %28 = icmp ne i32 %27, 0
  %29 = icmp eq i16 %23, 0
  %30 = or i1 %29, %28
  br i1 %30, label %31, label %14

31:                                               ; preds = %20, %14, %5, %3
  %32 = phi i32 [ 0, %3 ], [ %10, %5 ], [ %27, %20 ], [ 0, %14 ]
  ret i32 %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @u_strncmpCodePointOrder_69(i16* readonly, i16* readonly, i32) local_unnamed_addr #2 {
  %4 = tail call i32 @uprv_strCompare_69(i16* %0, i32 %2, i16* %1, i32 %2, i8 signext 1, i8 signext 1)
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i16* @u_strcpy_69(i16* returned, i16* nocapture readonly) local_unnamed_addr #3 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i16* [ %0, %2 ], [ %8, %3 ]
  %5 = phi i16* [ %1, %2 ], [ %6, %3 ]
  %6 = getelementptr inbounds i16, i16* %5, i64 1
  %7 = load i16, i16* %5, align 2
  %8 = getelementptr inbounds i16, i16* %4, i64 1
  store i16 %7, i16* %4, align 2
  %9 = icmp eq i16 %7, 0
  br i1 %9, label %10, label %3

10:                                               ; preds = %3
  ret i16* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i16* @u_strncpy_69(i16* returned, i16* nocapture readonly, i32) local_unnamed_addr #3 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %16

5:                                                ; preds = %3, %11
  %6 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %7 = phi i16* [ %13, %11 ], [ %1, %3 ]
  %8 = phi i16* [ %12, %11 ], [ %0, %3 ]
  %9 = load i16, i16* %7, align 2
  store i16 %9, i16* %8, align 2
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds i16, i16* %8, i64 1
  %13 = getelementptr inbounds i16, i16* %7, i64 1
  %14 = add nsw i32 %6, -1
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %5, label %16

16:                                               ; preds = %11, %5, %3
  ret i16* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @u_countChar32_69(i16* readonly, i32) local_unnamed_addr #2 {
  %3 = icmp eq i16* %0, null
  %4 = icmp slt i32 %1, -1
  %5 = or i1 %3, %4
  br i1 %5, label %53, label %6

6:                                                ; preds = %2
  %7 = icmp sgt i32 %1, -1
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  %9 = load i16, i16* %0, align 2
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %53, label %35

11:                                               ; preds = %6
  %12 = icmp eq i32 %1, 0
  br i1 %12, label %53, label %13

13:                                               ; preds = %11, %29
  %14 = phi i32 [ %17, %29 ], [ 0, %11 ]
  %15 = phi i32 [ %33, %29 ], [ %1, %11 ]
  %16 = phi i16* [ %32, %29 ], [ %0, %11 ]
  %17 = add nuw nsw i32 %14, 1
  %18 = load i16, i16* %16, align 2
  %19 = and i16 %18, -1024
  %20 = icmp eq i16 %19, -10240
  %21 = icmp ne i32 %15, 1
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %13
  %24 = getelementptr inbounds i16, i16* %16, i64 1
  %25 = load i16, i16* %24, align 2
  %26 = and i16 %25, -1024
  %27 = icmp eq i16 %26, -9216
  br i1 %27, label %29, label %28

28:                                               ; preds = %23, %13
  br label %29

29:                                               ; preds = %23, %28
  %30 = phi i64 [ 1, %28 ], [ 2, %23 ]
  %31 = phi i32 [ -1, %28 ], [ -2, %23 ]
  %32 = getelementptr inbounds i16, i16* %16, i64 %30
  %33 = add nsw i32 %15, %31
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %13, label %53

35:                                               ; preds = %8, %49
  %36 = phi i16 [ %51, %49 ], [ %9, %8 ]
  %37 = phi i16* [ %50, %49 ], [ %0, %8 ]
  %38 = phi i32 [ %40, %49 ], [ 0, %8 ]
  %39 = getelementptr inbounds i16, i16* %37, i64 1
  %40 = add nuw nsw i32 %38, 1
  %41 = and i16 %36, -1024
  %42 = icmp eq i16 %41, -10240
  br i1 %42, label %43, label %49

43:                                               ; preds = %35
  %44 = load i16, i16* %39, align 2
  %45 = and i16 %44, -1024
  %46 = icmp eq i16 %45, -9216
  %47 = getelementptr inbounds i16, i16* %37, i64 2
  %48 = select i1 %46, i16* %47, i16* %39
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i16* [ %39, %35 ], [ %48, %43 ]
  %51 = load i16, i16* %50, align 2
  %52 = icmp eq i16 %51, 0
  br i1 %52, label %53, label %35

53:                                               ; preds = %49, %29, %11, %8, %2
  %54 = phi i32 [ 0, %2 ], [ 0, %11 ], [ 0, %8 ], [ %17, %29 ], [ %40, %49 ]
  ret i32 %54
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @u_strHasMoreChar32Than_69(i16* readonly, i32, i32) local_unnamed_addr #2 {
  %4 = icmp slt i32 %2, 0
  br i1 %4, label %70, label %5

5:                                                ; preds = %3
  %6 = icmp eq i16* %0, null
  %7 = icmp slt i32 %1, -1
  %8 = or i1 %6, %7
  br i1 %8, label %70, label %9

9:                                                ; preds = %5
  %10 = icmp eq i32 %1, -1
  br i1 %10, label %11, label %34

11:                                               ; preds = %9
  %12 = load i16, i16* %0, align 2
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %70, label %14

14:                                               ; preds = %11, %29
  %15 = phi i16 [ %32, %29 ], [ %12, %11 ]
  %16 = phi i16* [ %30, %29 ], [ %0, %11 ]
  %17 = phi i32 [ %31, %29 ], [ %2, %11 ]
  %18 = getelementptr inbounds i16, i16* %16, i64 1
  %19 = icmp eq i32 %17, 0
  br i1 %19, label %70, label %20

20:                                               ; preds = %14
  %21 = and i16 %15, -1024
  %22 = icmp eq i16 %21, -10240
  br i1 %22, label %23, label %29

23:                                               ; preds = %20
  %24 = load i16, i16* %18, align 2
  %25 = and i16 %24, -1024
  %26 = icmp eq i16 %25, -9216
  %27 = getelementptr inbounds i16, i16* %16, i64 2
  %28 = select i1 %26, i16* %27, i16* %18
  br label %29

29:                                               ; preds = %23, %20
  %30 = phi i16* [ %18, %20 ], [ %28, %23 ]
  %31 = add nsw i32 %17, -1
  %32 = load i16, i16* %30, align 2
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %70, label %14

34:                                               ; preds = %9
  %35 = add nuw nsw i32 %1, 1
  %36 = sdiv i32 %35, 2
  %37 = icmp sgt i32 %36, %2
  br i1 %37, label %70, label %38

38:                                               ; preds = %34
  %39 = sub nsw i32 %1, %2
  %40 = icmp slt i32 %39, 1
  br i1 %40, label %70, label %41

41:                                               ; preds = %38
  %42 = sext i32 %1 to i64
  %43 = getelementptr inbounds i16, i16* %0, i64 %42
  %44 = icmp eq i32 %1, 0
  br i1 %44, label %70, label %45

45:                                               ; preds = %41, %65
  %46 = phi i32 [ %67, %65 ], [ %39, %41 ]
  %47 = phi i32 [ %68, %65 ], [ %2, %41 ]
  %48 = phi i16* [ %66, %65 ], [ %0, %41 ]
  %49 = icmp eq i32 %47, 0
  br i1 %49, label %70, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds i16, i16* %48, i64 1
  %52 = load i16, i16* %48, align 2
  %53 = and i16 %52, -1024
  %54 = icmp ne i16 %53, -10240
  %55 = icmp eq i16* %51, %43
  %56 = or i1 %55, %54
  br i1 %56, label %65, label %57

57:                                               ; preds = %50
  %58 = load i16, i16* %51, align 2
  %59 = and i16 %58, -1024
  %60 = icmp eq i16 %59, -9216
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = getelementptr inbounds i16, i16* %48, i64 2
  %63 = add nsw i32 %46, -1
  %64 = icmp slt i32 %46, 2
  br i1 %64, label %70, label %65

65:                                               ; preds = %50, %61, %57
  %66 = phi i16* [ %62, %61 ], [ %51, %57 ], [ %51, %50 ]
  %67 = phi i32 [ %63, %61 ], [ %46, %57 ], [ %46, %50 ]
  %68 = add nsw i32 %47, -1
  %69 = icmp eq i16* %66, %43
  br i1 %69, label %70, label %45

70:                                               ; preds = %61, %45, %65, %14, %29, %41, %11, %34, %38, %5, %3
  %71 = phi i8 [ 1, %3 ], [ 0, %5 ], [ 1, %34 ], [ 0, %38 ], [ 0, %11 ], [ 0, %41 ], [ 1, %14 ], [ 0, %29 ], [ 0, %61 ], [ 1, %45 ], [ 0, %65 ]
  ret i8 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i16* @u_memcpy_69(i16* returned, i16* nocapture readonly, i32) local_unnamed_addr #4 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = bitcast i16* %0 to i8*
  %7 = bitcast i16* %1 to i8*
  %8 = sext i32 %2 to i64
  %9 = shl nsw i64 %8, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %6, i8* align 2 %7, i64 %9, i1 false)
  br label %10

10:                                               ; preds = %5, %3
  ret i16* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i16* @u_memmove_69(i16* returned, i16* nocapture readonly, i32) local_unnamed_addr #4 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = bitcast i16* %0 to i8*
  %7 = bitcast i16* %1 to i8*
  %8 = sext i32 %2 to i64
  %9 = shl nsw i64 %8, 1
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %6, i8* align 2 %7, i64 %9, i1 false)
  br label %10

10:                                               ; preds = %5, %3
  ret i16* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i16* @u_memset_69(i16* returned, i16 zeroext, i32) local_unnamed_addr #5 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %99

5:                                                ; preds = %3
  %6 = ptrtoint i16* %0 to i64
  %7 = sext i32 %2 to i64
  %8 = getelementptr inbounds i16, i16* %0, i64 %7
  %9 = getelementptr i16, i16* %0, i64 1
  %10 = icmp ugt i16* %8, %9
  %11 = select i1 %10, i16* %8, i16* %9
  %12 = bitcast i16* %11 to i8*
  %13 = xor i64 %6, -1
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = ptrtoint i8* %14 to i64
  %16 = lshr i64 %15, 1
  %17 = add nuw i64 %16, 1
  %18 = icmp ult i64 %17, 16
  br i1 %18, label %93, label %19

19:                                               ; preds = %5
  %20 = and i64 %17, -16
  %21 = getelementptr i16, i16* %0, i64 %20
  %22 = insertelement <8 x i16> undef, i16 %1, i32 0
  %23 = shufflevector <8 x i16> %22, <8 x i16> undef, <8 x i32> zeroinitializer
  %24 = insertelement <8 x i16> undef, i16 %1, i32 0
  %25 = shufflevector <8 x i16> %24, <8 x i16> undef, <8 x i32> zeroinitializer
  %26 = add i64 %20, -16
  %27 = lshr exact i64 %26, 4
  %28 = add nuw nsw i64 %27, 1
  %29 = and i64 %28, 7
  %30 = icmp ult i64 %26, 112
  br i1 %30, label %78, label %31

31:                                               ; preds = %19
  %32 = sub nsw i64 %28, %29
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i64 [ 0, %31 ], [ %75, %33 ]
  %35 = phi i64 [ %32, %31 ], [ %76, %33 ]
  %36 = getelementptr i16, i16* %0, i64 %34
  %37 = bitcast i16* %36 to <8 x i16>*
  store <8 x i16> %23, <8 x i16>* %37, align 2
  %38 = getelementptr i16, i16* %36, i64 8
  %39 = bitcast i16* %38 to <8 x i16>*
  store <8 x i16> %25, <8 x i16>* %39, align 2
  %40 = or i64 %34, 16
  %41 = getelementptr i16, i16* %0, i64 %40
  %42 = bitcast i16* %41 to <8 x i16>*
  store <8 x i16> %23, <8 x i16>* %42, align 2
  %43 = getelementptr i16, i16* %41, i64 8
  %44 = bitcast i16* %43 to <8 x i16>*
  store <8 x i16> %25, <8 x i16>* %44, align 2
  %45 = or i64 %34, 32
  %46 = getelementptr i16, i16* %0, i64 %45
  %47 = bitcast i16* %46 to <8 x i16>*
  store <8 x i16> %23, <8 x i16>* %47, align 2
  %48 = getelementptr i16, i16* %46, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  store <8 x i16> %25, <8 x i16>* %49, align 2
  %50 = or i64 %34, 48
  %51 = getelementptr i16, i16* %0, i64 %50
  %52 = bitcast i16* %51 to <8 x i16>*
  store <8 x i16> %23, <8 x i16>* %52, align 2
  %53 = getelementptr i16, i16* %51, i64 8
  %54 = bitcast i16* %53 to <8 x i16>*
  store <8 x i16> %25, <8 x i16>* %54, align 2
  %55 = or i64 %34, 64
  %56 = getelementptr i16, i16* %0, i64 %55
  %57 = bitcast i16* %56 to <8 x i16>*
  store <8 x i16> %23, <8 x i16>* %57, align 2
  %58 = getelementptr i16, i16* %56, i64 8
  %59 = bitcast i16* %58 to <8 x i16>*
  store <8 x i16> %25, <8 x i16>* %59, align 2
  %60 = or i64 %34, 80
  %61 = getelementptr i16, i16* %0, i64 %60
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %23, <8 x i16>* %62, align 2
  %63 = getelementptr i16, i16* %61, i64 8
  %64 = bitcast i16* %63 to <8 x i16>*
  store <8 x i16> %25, <8 x i16>* %64, align 2
  %65 = or i64 %34, 96
  %66 = getelementptr i16, i16* %0, i64 %65
  %67 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %23, <8 x i16>* %67, align 2
  %68 = getelementptr i16, i16* %66, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %25, <8 x i16>* %69, align 2
  %70 = or i64 %34, 112
  %71 = getelementptr i16, i16* %0, i64 %70
  %72 = bitcast i16* %71 to <8 x i16>*
  store <8 x i16> %23, <8 x i16>* %72, align 2
  %73 = getelementptr i16, i16* %71, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %25, <8 x i16>* %74, align 2
  %75 = add i64 %34, 128
  %76 = add i64 %35, -8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %33, !llvm.loop !2

78:                                               ; preds = %33, %19
  %79 = phi i64 [ 0, %19 ], [ %75, %33 ]
  %80 = icmp eq i64 %29, 0
  br i1 %80, label %91, label %81

81:                                               ; preds = %78, %81
  %82 = phi i64 [ %88, %81 ], [ %79, %78 ]
  %83 = phi i64 [ %89, %81 ], [ %29, %78 ]
  %84 = getelementptr i16, i16* %0, i64 %82
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %23, <8 x i16>* %85, align 2
  %86 = getelementptr i16, i16* %84, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %25, <8 x i16>* %87, align 2
  %88 = add i64 %82, 16
  %89 = add i64 %83, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %81, !llvm.loop !4

91:                                               ; preds = %81, %78
  %92 = icmp eq i64 %17, %20
  br i1 %92, label %99, label %93

93:                                               ; preds = %91, %5
  %94 = phi i16* [ %0, %5 ], [ %21, %91 ]
  br label %95

95:                                               ; preds = %93, %95
  %96 = phi i16* [ %97, %95 ], [ %94, %93 ]
  %97 = getelementptr inbounds i16, i16* %96, i64 1
  store i16 %1, i16* %96, align 2
  %98 = icmp ult i16* %97, %8
  br i1 %98, label %95, label %99, !llvm.loop !6

99:                                               ; preds = %95, %91, %3
  ret i16* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @u_memcmp_69(i16* readonly, i16* nocapture readonly, i32) local_unnamed_addr #2 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %21

5:                                                ; preds = %3
  %6 = sext i32 %2 to i64
  %7 = getelementptr inbounds i16, i16* %0, i64 %6
  br label %8

8:                                                ; preds = %5, %17
  %9 = phi i16* [ %19, %17 ], [ %1, %5 ]
  %10 = phi i16* [ %18, %17 ], [ %0, %5 ]
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = load i16, i16* %9, align 2
  %14 = zext i16 %13 to i32
  %15 = sub nsw i32 %12, %14
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %8
  %18 = getelementptr inbounds i16, i16* %10, i64 1
  %19 = getelementptr inbounds i16, i16* %9, i64 1
  %20 = icmp ult i16* %18, %7
  br i1 %20, label %8, label %21

21:                                               ; preds = %8, %17, %3
  %22 = phi i32 [ 0, %3 ], [ %15, %8 ], [ 0, %17 ]
  ret i32 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @u_memcmpCodePointOrder_69(i16* readonly, i16* readonly, i32) local_unnamed_addr #2 {
  %4 = tail call i32 @uprv_strCompare_69(i16* %0, i32 %2, i16* %1, i32 %2, i8 signext 0, i8 signext 1)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @u_unescapeAt_69(i16 (i32, i8*)* nocapture, i32*, i32, i8*) local_unnamed_addr #4 {
  %5 = alloca i32, align 4
  %6 = load i32, i32* %1, align 4
  %7 = icmp sgt i32 %6, -1
  %8 = icmp slt i32 %6, %2
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %191

10:                                               ; preds = %4
  %11 = add nuw nsw i32 %6, 1
  store i32 %11, i32* %1, align 4
  %12 = tail call zeroext i16 %0(i32 %6, i8* %3) #9
  %13 = zext i16 %12 to i32
  switch i16 %12, label %24 [
    i16 117, label %41
    i16 85, label %14
    i16 120, label %15
  ]

14:                                               ; preds = %10
  br label %41

15:                                               ; preds = %10
  %16 = load i32, i32* %1, align 4
  %17 = icmp slt i32 %16, %2
  br i1 %17, label %18, label %41

18:                                               ; preds = %15
  %19 = tail call zeroext i16 %0(i32 %16, i8* %3) #9
  %20 = icmp eq i16 %19, 123
  br i1 %20, label %21, label %41

21:                                               ; preds = %18
  %22 = load i32, i32* %1, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %1, align 4
  br label %41

24:                                               ; preds = %10
  %25 = trunc i16 %12 to i8
  %26 = and i16 %12, -8
  %27 = icmp eq i16 %26, 48
  %28 = add i8 %25, -48
  %29 = select i1 %27, i8 %28, i8 -1
  %30 = icmp sgt i8 %29, -1
  %31 = select i1 %30, i8 %29, i8 0
  %32 = sext i8 %31 to i32
  %33 = lshr i8 %29, 7
  %34 = xor i8 %33, 1
  %35 = zext i8 %34 to i32
  %36 = select i1 %30, i32 3, i32 0
  %37 = select i1 %30, i32 3, i32 4
  %38 = icmp eq i8 %34, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %24
  %40 = icmp eq i16 %12, 97
  br i1 %40, label %140, label %145

41:                                               ; preds = %15, %18, %10, %14, %21, %24
  %42 = phi i8 [ 0, %24 ], [ 0, %15 ], [ 0, %18 ], [ 0, %10 ], [ 0, %14 ], [ 1, %21 ]
  %43 = phi i32 [ %37, %24 ], [ 4, %15 ], [ 4, %18 ], [ 4, %10 ], [ 4, %14 ], [ 4, %21 ]
  %44 = phi i32 [ %36, %24 ], [ 2, %15 ], [ 2, %18 ], [ 4, %10 ], [ 8, %14 ], [ 8, %21 ]
  %45 = phi i32 [ %35, %24 ], [ 1, %15 ], [ 1, %18 ], [ 4, %10 ], [ 8, %14 ], [ 1, %21 ]
  %46 = phi i8 [ %34, %24 ], [ 0, %15 ], [ 0, %18 ], [ 0, %10 ], [ 0, %14 ], [ 0, %21 ]
  %47 = phi i32 [ %32, %24 ], [ 0, %15 ], [ 0, %18 ], [ 0, %10 ], [ 0, %14 ], [ 0, %21 ]
  %48 = load i32, i32* %1, align 4
  %49 = icmp slt i32 %48, %2
  %50 = sext i8 %46 to i32
  %51 = icmp sgt i32 %44, %50
  %52 = and i1 %49, %51
  br i1 %52, label %53, label %94

53:                                               ; preds = %41
  %54 = icmp eq i32 %43, 3
  br label %55

55:                                               ; preds = %53, %83
  %56 = phi i32 [ %50, %53 ], [ %91, %83 ]
  %57 = phi i32 [ %48, %53 ], [ %88, %83 ]
  %58 = phi i8 [ %46, %53 ], [ %89, %83 ]
  %59 = phi i32 [ %47, %53 ], [ %86, %83 ]
  %60 = tail call zeroext i16 %0(i32 %57, i8* %3) #9
  %61 = trunc i16 %60 to i8
  br i1 %54, label %62, label %66

62:                                               ; preds = %55
  %63 = and i16 %60, -8
  %64 = icmp eq i16 %63, 48
  %65 = add i8 %61, -48
  br i1 %64, label %80, label %94

66:                                               ; preds = %55
  %67 = add i16 %60, -48
  %68 = icmp ult i16 %67, 10
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = add i8 %61, -48
  br label %80

71:                                               ; preds = %66
  %72 = add i16 %60, -65
  %73 = icmp ult i16 %72, 6
  br i1 %73, label %74, label %76

74:                                               ; preds = %71
  %75 = add i8 %61, -55
  br label %80

76:                                               ; preds = %71
  %77 = add i16 %60, -97
  %78 = icmp ult i16 %77, 6
  %79 = add i8 %61, -87
  br i1 %78, label %80, label %94

80:                                               ; preds = %76, %62, %74, %69
  %81 = phi i8 [ %70, %69 ], [ %75, %74 ], [ %65, %62 ], [ %79, %76 ]
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %94, label %83

83:                                               ; preds = %80
  %84 = sext i8 %81 to i32
  %85 = shl i32 %59, %43
  %86 = or i32 %85, %84
  %87 = load i32, i32* %1, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %1, align 4
  %89 = add i8 %58, 1
  %90 = icmp slt i32 %88, %2
  %91 = sext i8 %89 to i32
  %92 = icmp sgt i32 %44, %91
  %93 = and i1 %90, %92
  br i1 %93, label %55, label %94

94:                                               ; preds = %80, %83, %62, %76, %41
  %95 = phi i32 [ %47, %41 ], [ %59, %76 ], [ %59, %62 ], [ %86, %83 ], [ %59, %80 ]
  %96 = phi i32 [ %50, %41 ], [ %56, %76 ], [ %56, %62 ], [ %91, %83 ], [ %56, %80 ]
  %97 = phi i16 [ %12, %41 ], [ %60, %76 ], [ %60, %62 ], [ %60, %83 ], [ %60, %80 ]
  %98 = icmp sgt i32 %45, %96
  br i1 %98, label %191, label %99

99:                                               ; preds = %94
  %100 = icmp eq i8 %42, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %99
  %102 = icmp eq i16 %97, 125
  br i1 %102, label %103, label %191

103:                                              ; preds = %101
  %104 = load i32, i32* %1, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %1, align 4
  br label %106

106:                                              ; preds = %99, %103
  %107 = icmp ugt i32 %95, 1114111
  br i1 %107, label %191, label %108

108:                                              ; preds = %106
  %109 = load i32, i32* %1, align 4
  %110 = icmp slt i32 %109, %2
  %111 = and i32 %95, -1024
  %112 = icmp eq i32 %111, 55296
  %113 = and i1 %112, %110
  br i1 %113, label %114, label %192

114:                                              ; preds = %108
  %115 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #9
  %116 = add nsw i32 %109, 1
  store i32 %116, i32* %5, align 4
  %117 = tail call zeroext i16 %0(i32 %109, i8* %3) #9
  %118 = icmp eq i16 %117, 92
  br i1 %118, label %119, label %127

119:                                              ; preds = %114
  %120 = icmp slt i32 %116, %2
  br i1 %120, label %121, label %137

121:                                              ; preds = %119
  %122 = add nsw i32 %109, 6
  %123 = icmp sgt i32 %122, %2
  %124 = select i1 %123, i32 %2, i32 %122
  %125 = call i32 @u_unescapeAt_69(i16 (i32, i8*)* %0, i32* nonnull %5, i32 %124, i8* %3)
  %126 = trunc i32 %125 to i16
  br label %127

127:                                              ; preds = %121, %114
  %128 = phi i16 [ %126, %121 ], [ %117, %114 ]
  %129 = zext i16 %128 to i32
  %130 = and i32 %129, 64512
  %131 = icmp eq i32 %130, 56320
  br i1 %131, label %132, label %137

132:                                              ; preds = %127
  %133 = load i32, i32* %5, align 4
  store i32 %133, i32* %1, align 4
  %134 = shl i32 %95, 10
  %135 = add nsw i32 %134, -56613888
  %136 = add nsw i32 %135, %129
  br label %137

137:                                              ; preds = %119, %132, %127
  %138 = phi i32 [ %136, %132 ], [ %95, %127 ], [ %95, %119 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #9
  br label %192

139:                                              ; preds = %212
  br label %140

140:                                              ; preds = %212, %139, %208, %204, %200, %196, %147, %39
  %141 = phi i64 [ 1, %39 ], [ 3, %147 ], [ 5, %196 ], [ 7, %200 ], [ 9, %204 ], [ 11, %208 ], [ 13, %212 ], [ 15, %139 ]
  %142 = getelementptr inbounds [16 x i16], [16 x i16]* @_ZL12UNESCAPE_MAP, i64 0, i64 %141
  %143 = load i16, i16* %142, align 2
  %144 = zext i16 %143 to i32
  br label %192

145:                                              ; preds = %39
  %146 = icmp ult i16 %12, 97
  br i1 %146, label %174, label %147

147:                                              ; preds = %145
  %148 = icmp eq i16 %12, 98
  br i1 %148, label %140, label %194

149:                                              ; preds = %198
  %150 = icmp eq i16 %12, 99
  br i1 %150, label %151, label %174

151:                                              ; preds = %149
  %152 = load i32, i32* %1, align 4
  %153 = icmp slt i32 %152, %2
  br i1 %153, label %154, label %192

154:                                              ; preds = %151
  %155 = add nsw i32 %152, 1
  store i32 %155, i32* %1, align 4
  %156 = tail call zeroext i16 %0(i32 %152, i8* %3) #9
  %157 = and i16 %156, -1024
  %158 = icmp eq i16 %157, -10240
  br i1 %158, label %159, label %170

159:                                              ; preds = %154
  %160 = load i32, i32* %1, align 4
  %161 = icmp slt i32 %160, %2
  br i1 %161, label %162, label %170

162:                                              ; preds = %159
  %163 = tail call zeroext i16 %0(i32 %160, i8* %3) #9
  %164 = and i16 %163, -1024
  %165 = icmp eq i16 %164, -9216
  br i1 %165, label %166, label %170

166:                                              ; preds = %162
  %167 = load i32, i32* %1, align 4
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %1, align 4
  %169 = add i16 %163, 9216
  br label %170

170:                                              ; preds = %162, %166, %159, %154
  %171 = phi i16 [ %156, %159 ], [ %156, %154 ], [ %169, %166 ], [ %156, %162 ]
  %172 = and i16 %171, 31
  %173 = zext i16 %172 to i32
  br label %192

174:                                              ; preds = %212, %145, %194, %202, %206, %210, %149
  %175 = and i32 %13, 64512
  %176 = icmp eq i32 %175, 55296
  br i1 %176, label %177, label %192

177:                                              ; preds = %174
  %178 = load i32, i32* %1, align 4
  %179 = icmp slt i32 %178, %2
  br i1 %179, label %180, label %192

180:                                              ; preds = %177
  %181 = tail call zeroext i16 %0(i32 %178, i8* %3) #9
  %182 = zext i16 %181 to i32
  %183 = and i32 %182, 64512
  %184 = icmp eq i32 %183, 56320
  br i1 %184, label %185, label %192

185:                                              ; preds = %180
  %186 = load i32, i32* %1, align 4
  %187 = add nsw i32 %186, 1
  store i32 %187, i32* %1, align 4
  %188 = shl nuw nsw i32 %13, 10
  %189 = add nsw i32 %188, -56613888
  %190 = add nsw i32 %189, %182
  br label %192

191:                                              ; preds = %4, %101, %106, %94
  store i32 %6, i32* %1, align 4
  br label %192

192:                                              ; preds = %180, %151, %174, %177, %185, %108, %137, %191, %170, %140
  %193 = phi i32 [ -1, %191 ], [ %144, %140 ], [ %173, %170 ], [ %190, %185 ], [ %138, %137 ], [ %95, %108 ], [ %13, %177 ], [ %13, %174 ], [ 99, %151 ], [ %13, %180 ]
  ret i32 %193

194:                                              ; preds = %147
  %195 = icmp ult i16 %12, 98
  br i1 %195, label %174, label %196

196:                                              ; preds = %194
  %197 = icmp eq i16 %12, 101
  br i1 %197, label %140, label %198

198:                                              ; preds = %196
  %199 = icmp ult i16 %12, 101
  br i1 %199, label %149, label %200

200:                                              ; preds = %198
  %201 = icmp eq i16 %12, 102
  br i1 %201, label %140, label %202

202:                                              ; preds = %200
  %203 = icmp ult i16 %12, 102
  br i1 %203, label %174, label %204

204:                                              ; preds = %202
  %205 = icmp eq i16 %12, 110
  br i1 %205, label %140, label %206

206:                                              ; preds = %204
  %207 = icmp ult i16 %12, 110
  br i1 %207, label %174, label %208

208:                                              ; preds = %206
  %209 = icmp eq i16 %12, 114
  br i1 %209, label %140, label %210

210:                                              ; preds = %208
  %211 = icmp ult i16 %12, 114
  br i1 %211, label %174, label %212

212:                                              ; preds = %210
  switch i16 %12, label %174 [
    i16 116, label %140
    i16 118, label %139
  ]
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @u_unescape_69(i8*, i16*, i32) local_unnamed_addr #4 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  %6 = icmp eq i16* %1, null
  br label %7

7:                                                ; preds = %72, %3
  %8 = phi i8* [ %46, %72 ], [ %0, %3 ]
  %9 = phi i32 [ %74, %72 ], [ 0, %3 ]
  br label %10

10:                                               ; preds = %7, %75
  %11 = phi i8* [ %76, %75 ], [ %8, %7 ]
  %12 = load i8, i8* %11, align 1
  switch i8 %12, label %75 [
    i8 0, label %77
    i8 92, label %13
  ]

13:                                               ; preds = %10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #9
  store i32 0, i32* %4, align 4
  %14 = icmp eq i8* %11, %8
  br i1 %14, label %36, label %15

15:                                               ; preds = %13
  br i1 %6, label %16, label %21

16:                                               ; preds = %15
  %17 = ptrtoint i8* %11 to i64
  %18 = ptrtoint i8* %8 to i64
  %19 = sub i64 %17, %18
  %20 = trunc i64 %19 to i32
  br label %33

21:                                               ; preds = %15
  %22 = sext i32 %9 to i64
  %23 = getelementptr inbounds i16, i16* %1, i64 %22
  %24 = sub nsw i32 %2, %9
  %25 = ptrtoint i8* %11 to i64
  %26 = ptrtoint i8* %8 to i64
  %27 = sub i64 %25, %26
  %28 = trunc i64 %27 to i32
  %29 = icmp sgt i32 %24, 0
  %30 = select i1 %29, i32 %24, i32 0
  %31 = icmp slt i32 %30, %28
  %32 = select i1 %31, i32 %30, i32 %28
  call void @u_charsToUChars_69(i8* %8, i16* %23, i32 %32) #9
  br label %33

33:                                               ; preds = %16, %21
  %34 = phi i32 [ %20, %16 ], [ %28, %21 ]
  %35 = add nsw i32 %9, %34
  br label %36

36:                                               ; preds = %13, %33
  %37 = phi i32 [ %35, %33 ], [ %9, %13 ]
  %38 = getelementptr inbounds i8, i8* %11, i64 1
  %39 = call i64 @strlen(i8* %38) #10
  %40 = trunc i64 %39 to i32
  %41 = call i32 @u_unescapeAt_69(i16 (i32, i8*)* nonnull @_ZL15_charPtr_charAtiPv, i32* nonnull %4, i32 %40, i8* %38)
  %42 = load i32, i32* %4, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %108, label %44

44:                                               ; preds = %36
  %45 = sext i32 %42 to i64
  %46 = getelementptr inbounds i8, i8* %38, i64 %45
  br i1 %6, label %69, label %47

47:                                               ; preds = %44
  %48 = icmp ult i32 %41, 65536
  %49 = select i1 %48, i32 1, i32 2
  %50 = sub nsw i32 %2, %37
  %51 = icmp sgt i32 %49, %50
  br i1 %51, label %69, label %52

52:                                               ; preds = %47
  br i1 %48, label %53, label %57

53:                                               ; preds = %52
  %54 = trunc i32 %41 to i16
  %55 = sext i32 %37 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  store i16 %54, i16* %56, align 2
  br label %72

57:                                               ; preds = %52
  %58 = lshr i32 %41, 10
  %59 = trunc i32 %58 to i16
  %60 = add i16 %59, -10304
  %61 = add nsw i32 %37, 1
  %62 = sext i32 %37 to i64
  %63 = getelementptr inbounds i16, i16* %1, i64 %62
  store i16 %60, i16* %63, align 2
  %64 = trunc i32 %41 to i16
  %65 = and i16 %64, 1023
  %66 = or i16 %65, -9216
  %67 = sext i32 %61 to i64
  %68 = getelementptr inbounds i16, i16* %1, i64 %67
  store i16 %66, i16* %68, align 2
  br label %72

69:                                               ; preds = %44, %47
  %70 = icmp ult i32 %41, 65536
  %71 = select i1 %70, i32 1, i32 2
  br label %72

72:                                               ; preds = %53, %57, %69
  %73 = phi i32 [ %71, %69 ], [ 2, %57 ], [ 1, %53 ]
  %74 = add nsw i32 %73, %37
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9
  br label %7

75:                                               ; preds = %10
  %76 = getelementptr inbounds i8, i8* %11, i64 1
  br label %10

77:                                               ; preds = %10
  %78 = icmp eq i8* %11, %8
  br i1 %78, label %100, label %79

79:                                               ; preds = %77
  br i1 %6, label %80, label %85

80:                                               ; preds = %79
  %81 = ptrtoint i8* %11 to i64
  %82 = ptrtoint i8* %8 to i64
  %83 = sub i64 %81, %82
  %84 = trunc i64 %83 to i32
  br label %97

85:                                               ; preds = %79
  %86 = sext i32 %9 to i64
  %87 = getelementptr inbounds i16, i16* %1, i64 %86
  %88 = sub nsw i32 %2, %9
  %89 = ptrtoint i8* %11 to i64
  %90 = ptrtoint i8* %8 to i64
  %91 = sub i64 %89, %90
  %92 = trunc i64 %91 to i32
  %93 = icmp sgt i32 %88, 0
  %94 = select i1 %93, i32 %88, i32 0
  %95 = icmp slt i32 %94, %92
  %96 = select i1 %95, i32 %94, i32 %92
  call void @u_charsToUChars_69(i8* %8, i16* %87, i32 %96) #9
  br label %97

97:                                               ; preds = %80, %85
  %98 = phi i32 [ %84, %80 ], [ %92, %85 ]
  %99 = add nsw i32 %9, %98
  br label %100

100:                                              ; preds = %77, %97
  %101 = phi i32 [ %99, %97 ], [ %9, %77 ]
  %102 = icmp ne i16* %1, null
  %103 = icmp slt i32 %101, %2
  %104 = and i1 %102, %103
  br i1 %104, label %105, label %113

105:                                              ; preds = %100
  %106 = sext i32 %101 to i64
  %107 = getelementptr inbounds i16, i16* %1, i64 %106
  store i16 0, i16* %107, align 2
  br label %113

108:                                              ; preds = %36
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9
  %109 = icmp ne i16* %1, null
  %110 = icmp sgt i32 %2, 0
  %111 = and i1 %109, %110
  br i1 %111, label %112, label %113

112:                                              ; preds = %108
  store i16 0, i16* %1, align 2
  br label %113

113:                                              ; preds = %108, %112, %105, %100
  %114 = phi i32 [ %101, %100 ], [ %101, %105 ], [ 0, %112 ], [ 0, %108 ]
  ret i32 %114
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i16 @_ZL15_charPtr_charAtiPv(i32, i8*) #4 {
  %3 = alloca i16, align 2
  %4 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4) #9
  store i16 -21846, i16* %3, align 2
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds i8, i8* %1, i64 %5
  call void @u_charsToUChars_69(i8* %6, i16* nonnull %3, i32 1) #9
  %7 = load i16, i16* %3, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4) #9
  ret i16 %7
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @u_asciiToUpper_69(i16 zeroext) local_unnamed_addr #7 {
  %2 = add i16 %0, -97
  %3 = icmp ult i16 %2, 26
  %4 = add i16 %0, -32
  %5 = select i1 %3, i16 %4, i16 %0
  ret i16 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @u_terminateUChars_69(i16* nocapture, i32, i32 returned, i32*) local_unnamed_addr #3 {
  %5 = icmp eq i32* %3, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %4
  %7 = load i32, i32* %3, align 4
  %8 = icmp sgt i32 %7, 0
  %9 = icmp slt i32 %2, 0
  %10 = or i1 %9, %8
  br i1 %10, label %23, label %11

11:                                               ; preds = %6
  %12 = icmp slt i32 %2, %1
  br i1 %12, label %13, label %19

13:                                               ; preds = %11
  %14 = sext i32 %2 to i64
  %15 = getelementptr inbounds i16, i16* %0, i64 %14
  store i16 0, i16* %15, align 2
  %16 = load i32, i32* %3, align 4
  %17 = icmp eq i32 %16, -124
  br i1 %17, label %18, label %23

18:                                               ; preds = %13
  store i32 0, i32* %3, align 4
  br label %23

19:                                               ; preds = %11
  %20 = icmp eq i32 %2, %1
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  store i32 -124, i32* %3, align 4
  br label %23

22:                                               ; preds = %19
  store i32 15, i32* %3, align 4
  br label %23

23:                                               ; preds = %4, %6, %18, %13, %22, %21
  ret i32 %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @u_terminateChars_69(i8* nocapture, i32, i32 returned, i32*) local_unnamed_addr #3 {
  %5 = icmp eq i32* %3, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %4
  %7 = load i32, i32* %3, align 4
  %8 = icmp sgt i32 %7, 0
  %9 = icmp slt i32 %2, 0
  %10 = or i1 %9, %8
  br i1 %10, label %23, label %11

11:                                               ; preds = %6
  %12 = icmp slt i32 %2, %1
  br i1 %12, label %13, label %19

13:                                               ; preds = %11
  %14 = sext i32 %2 to i64
  %15 = getelementptr inbounds i8, i8* %0, i64 %14
  store i8 0, i8* %15, align 1
  %16 = load i32, i32* %3, align 4
  %17 = icmp eq i32 %16, -124
  br i1 %17, label %18, label %23

18:                                               ; preds = %13
  store i32 0, i32* %3, align 4
  br label %23

19:                                               ; preds = %11
  %20 = icmp eq i32 %2, %1
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  store i32 -124, i32* %3, align 4
  br label %23

22:                                               ; preds = %19
  store i32 15, i32* %3, align 4
  br label %23

23:                                               ; preds = %4, %6, %18, %13, %22, %21
  ret i32 %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @u_terminateUChar32s_69(i32* nocapture, i32, i32 returned, i32*) local_unnamed_addr #3 {
  %5 = icmp eq i32* %3, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %4
  %7 = load i32, i32* %3, align 4
  %8 = icmp sgt i32 %7, 0
  %9 = icmp slt i32 %2, 0
  %10 = or i1 %9, %8
  br i1 %10, label %23, label %11

11:                                               ; preds = %6
  %12 = icmp slt i32 %2, %1
  br i1 %12, label %13, label %19

13:                                               ; preds = %11
  %14 = sext i32 %2 to i64
  %15 = getelementptr inbounds i32, i32* %0, i64 %14
  store i32 0, i32* %15, align 4
  %16 = load i32, i32* %3, align 4
  %17 = icmp eq i32 %16, -124
  br i1 %17, label %18, label %23

18:                                               ; preds = %13
  store i32 0, i32* %3, align 4
  br label %23

19:                                               ; preds = %11
  %20 = icmp eq i32 %2, %1
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  store i32 -124, i32* %3, align 4
  br label %23

22:                                               ; preds = %19
  store i32 15, i32* %3, align 4
  br label %23

23:                                               ; preds = %4, %6, %18, %13, %22, %21
  ret i32 %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @u_terminateWChars_69(i32* nocapture, i32, i32 returned, i32*) local_unnamed_addr #3 {
  %5 = icmp eq i32* %3, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %4
  %7 = load i32, i32* %3, align 4
  %8 = icmp sgt i32 %7, 0
  %9 = icmp slt i32 %2, 0
  %10 = or i1 %9, %8
  br i1 %10, label %23, label %11

11:                                               ; preds = %6
  %12 = icmp slt i32 %2, %1
  br i1 %12, label %13, label %19

13:                                               ; preds = %11
  %14 = sext i32 %2 to i64
  %15 = getelementptr inbounds i32, i32* %0, i64 %14
  store i32 0, i32* %15, align 4
  %16 = load i32, i32* %3, align 4
  %17 = icmp eq i32 %16, -124
  br i1 %17, label %18, label %23

18:                                               ; preds = %13
  store i32 0, i32* %3, align 4
  br label %23

19:                                               ; preds = %11
  %20 = icmp eq i32 %2, %1
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  store i32 -124, i32* %3, align 4
  br label %23

22:                                               ; preds = %19
  store i32 15, i32* %3, align 4
  br label %23

23:                                               ; preds = %4, %6, %18, %13, %22, %21
  ret i32 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ustr_hashUCharsN_69(i16* readonly, i32) local_unnamed_addr #2 {
  %3 = icmp eq i16* %0, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds i16, i16* %0, i64 %5
  %7 = icmp sgt i32 %1, 0
  br i1 %7, label %8, label %22

8:                                                ; preds = %4
  %9 = add nsw i32 %1, -32
  %10 = sdiv i32 %9, 32
  %11 = add nuw nsw i32 %10, 1
  %12 = sext i32 %11 to i64
  br label %13

13:                                               ; preds = %8, %13
  %14 = phi i32 [ 0, %8 ], [ %19, %13 ]
  %15 = phi i16* [ %0, %8 ], [ %20, %13 ]
  %16 = mul i32 %14, 37
  %17 = load i16, i16* %15, align 2
  %18 = zext i16 %17 to i32
  %19 = add i32 %16, %18
  %20 = getelementptr inbounds i16, i16* %15, i64 %12
  %21 = icmp ult i16* %20, %6
  br i1 %21, label %13, label %22

22:                                               ; preds = %13, %4, %2
  %23 = phi i32 [ 0, %2 ], [ 0, %4 ], [ %19, %13 ]
  ret i32 %23
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ustr_hashCharsN_69(i8* readonly, i32) local_unnamed_addr #2 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds i8, i8* %0, i64 %5
  %7 = icmp sgt i32 %1, 0
  br i1 %7, label %8, label %22

8:                                                ; preds = %4
  %9 = add nsw i32 %1, -32
  %10 = sdiv i32 %9, 32
  %11 = add nuw nsw i32 %10, 1
  %12 = sext i32 %11 to i64
  br label %13

13:                                               ; preds = %8, %13
  %14 = phi i32 [ 0, %8 ], [ %19, %13 ]
  %15 = phi i8* [ %0, %8 ], [ %20, %13 ]
  %16 = mul i32 %14, 37
  %17 = load i8, i8* %15, align 1
  %18 = zext i8 %17 to i32
  %19 = add i32 %16, %18
  %20 = getelementptr inbounds i8, i8* %15, i64 %12
  %21 = icmp ult i8* %20, %6
  br i1 %21, label %13, label %22

22:                                               ; preds = %13, %4, %2
  %23 = phi i32 [ 0, %2 ], [ 0, %4 ], [ %19, %13 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ustr_hashICharsN_69(i8* readonly, i32) local_unnamed_addr #4 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds i8, i8* %0, i64 %5
  %7 = icmp sgt i32 %1, 0
  br i1 %7, label %8, label %23

8:                                                ; preds = %4
  %9 = add nsw i32 %1, -32
  %10 = sdiv i32 %9, 32
  %11 = add nuw nsw i32 %10, 1
  %12 = sext i32 %11 to i64
  br label %13

13:                                               ; preds = %8, %13
  %14 = phi i32 [ 0, %8 ], [ %20, %13 ]
  %15 = phi i8* [ %0, %8 ], [ %21, %13 ]
  %16 = mul i32 %14, 37
  %17 = load i8, i8* %15, align 1
  %18 = tail call signext i8 @uprv_asciitolower_69(i8 signext %17) #9
  %19 = zext i8 %18 to i32
  %20 = add i32 %16, %19
  %21 = getelementptr inbounds i8, i8* %15, i64 %12
  %22 = icmp ult i8* %21, %6
  br i1 %22, label %13, label %23

23:                                               ; preds = %13, %4, %2
  %24 = phi i32 [ 0, %2 ], [ 0, %4 ], [ %20, %13 ]
  ret i32 %24
}

declare signext i8 @uprv_asciitolower_69(i8 signext) local_unnamed_addr #8

declare void @u_charsToUChars_69(i8*, i16*, i32) local_unnamed_addr #8

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !7, !3}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
