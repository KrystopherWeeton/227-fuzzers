; ModuleID = '../../third_party/webrtc/common_audio/ring_buffer.c'
source_filename = "../../third_party/webrtc/common_audio/ring_buffer.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.RingBuffer = type { i64, i64, i64, i64, i32, i8* }

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.RingBuffer* @WebRtc_CreateBuffer(i64, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %0, 0
  %4 = icmp eq i64 %1, 0
  %5 = or i1 %3, %4
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  %7 = tail call noalias i8* @malloc(i64 48) #6
  %8 = bitcast i8* %7 to %struct.RingBuffer*
  %9 = icmp eq i8* %7, null
  br i1 %9, label %24, label %10

10:                                               ; preds = %6
  %11 = mul i64 %1, %0
  %12 = tail call noalias i8* @malloc(i64 %11) #6
  %13 = getelementptr inbounds i8, i8* %7, i64 40
  %14 = bitcast i8* %13 to i8**
  store i8* %12, i8** %14, align 8
  %15 = icmp eq i8* %12, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %10
  tail call void @free(i8* nonnull %7) #6
  br label %24

17:                                               ; preds = %10
  %18 = getelementptr inbounds i8, i8* %7, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 %0, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %7, i64 24
  %21 = bitcast i8* %20 to i64*
  store i64 %1, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %7, i64 32
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %12, i8 0, i64 %11, i1 false) #6
  br label %24

24:                                               ; preds = %6, %2, %17, %16
  %25 = phi %struct.RingBuffer* [ %8, %17 ], [ null, %16 ], [ null, %2 ], [ null, %6 ]
  ret %struct.RingBuffer* %25
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @WebRtc_InitBuffer(%struct.RingBuffer* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 4
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 5
  %4 = bitcast %struct.RingBuffer* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  %5 = load i8*, i8** %3, align 8
  %6 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = mul i64 %9, %7
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 0, i64 %10, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @WebRtc_FreeBuffer(i8*) local_unnamed_addr #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 40
  %5 = bitcast i8* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void @free(i8* %6) #6
  tail call void @free(i8* nonnull %0) #6
  br label %7

7:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @WebRtc_ReadBuffer(%struct.RingBuffer*, i8**, i8*, i64) local_unnamed_addr #0 {
  %5 = icmp eq %struct.RingBuffer* %0, null
  %6 = icmp eq i8* %2, null
  %7 = or i1 %5, %6
  br i1 %7, label %109, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %16
  br label %30

21:                                               ; preds = %8
  %22 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %26, %28
  br label %30

30:                                               ; preds = %21, %12
  %31 = phi i64 [ %26, %21 ], [ %20, %12 ]
  %32 = phi i64 [ %25, %21 ], [ %16, %12 ]
  %33 = phi i64 [ %29, %21 ], [ %17, %12 ]
  %34 = icmp ult i64 %33, %3
  %35 = select i1 %34, i64 %33, i64 %3
  %36 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 2
  %37 = icmp ugt i64 %35, %31
  %38 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 5
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = mul i64 %41, %32
  %43 = getelementptr inbounds i8, i8* %39, i64 %42
  br i1 %37, label %46, label %44

44:                                               ; preds = %30
  %45 = mul i64 %41, %35
  br label %51

46:                                               ; preds = %30
  %47 = mul i64 %41, %31
  %48 = sub i64 %35, %31
  %49 = mul i64 %41, %48
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %44, %46
  %52 = phi i64 [ %45, %44 ], [ %47, %46 ]
  %53 = icmp eq i8** %1, null
  br i1 %53, label %54, label %58

54:                                               ; preds = %51
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2, i8* align 1 %43, i64 %52, i1 false)
  br label %62

55:                                               ; preds = %46
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2, i8* align 1 %43, i64 %47, i1 false)
  %56 = getelementptr inbounds i8, i8* %2, i64 %47
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %56, i8* align 1 %39, i64 %49, i1 false)
  %57 = icmp eq i8** %1, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %51, %55
  %59 = phi i8* [ %2, %55 ], [ %43, %51 ]
  %60 = icmp eq i64 %35, 0
  %61 = select i1 %60, i8* null, i8* %59
  store i8* %61, i8** %1, align 8
  br label %62

62:                                               ; preds = %54, %58, %55
  %63 = trunc i64 %35 to i32
  %64 = load i64, i64* %36, align 8
  %65 = load i32, i32* %9, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %75

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %64, %69
  %73 = add i64 %72, %71
  %74 = sub i64 %69, %71
  br label %83

75:                                               ; preds = %62
  %76 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %64, %77
  %79 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %78, %80
  %82 = sub i64 %64, %81
  br label %83

83:                                               ; preds = %75, %67
  %84 = phi i64 [ %73, %67 ], [ %82, %75 ]
  %85 = phi i64 [ %71, %67 ], [ %77, %75 ]
  %86 = phi i64 [ %74, %67 ], [ %81, %75 ]
  %87 = trunc i64 %84 to i32
  %88 = trunc i64 %86 to i32
  %89 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 0
  %90 = trunc i64 %85 to i32
  %91 = icmp slt i32 %88, %63
  %92 = select i1 %91, i32 %88, i32 %63
  %93 = sub nsw i32 0, %87
  %94 = icmp slt i32 %92, %93
  %95 = select i1 %94, i32 %93, i32 %92
  %96 = add nsw i32 %95, %90
  %97 = trunc i64 %64 to i32
  %98 = icmp sgt i32 %96, %97
  %99 = select i1 %98, i32 %97, i32 0
  %100 = sub nsw i32 %96, %99
  %101 = icmp slt i32 %100, 0
  %102 = select i1 %101, i32 %97, i32 0
  %103 = add nsw i32 %102, %100
  %104 = or i1 %98, %101
  br i1 %104, label %105, label %107

105:                                              ; preds = %83
  %106 = lshr i32 %100, 31
  store i32 %106, i32* %9, align 8
  br label %107

107:                                              ; preds = %83, %105
  %108 = sext i32 %103 to i64
  store i64 %108, i64* %89, align 8
  br label %109

109:                                              ; preds = %4, %107
  %110 = phi i64 [ %35, %107 ], [ 0, %4 ]
  ret i64 %110
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @WebRtc_MoveReadPtr(%struct.RingBuffer*, i32) local_unnamed_addr #4 {
  %3 = icmp eq %struct.RingBuffer* %0, null
  br i1 %3, label %54, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %12
  %16 = add i64 %6, %15
  %17 = sub i64 %12, %14
  br label %28

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %6, %20
  %22 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %21, %23
  %25 = sub i64 %6, %24
  %26 = sub i64 %6, %20
  %27 = add i64 %26, %23
  br label %28

28:                                               ; preds = %10, %18
  %29 = phi i64 [ %16, %10 ], [ %25, %18 ]
  %30 = phi i64 [ %14, %10 ], [ %20, %18 ]
  %31 = phi i64 [ %17, %10 ], [ %27, %18 ]
  %32 = trunc i64 %29 to i32
  %33 = trunc i64 %31 to i32
  %34 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 0
  %35 = trunc i64 %30 to i32
  %36 = icmp slt i32 %33, %1
  %37 = select i1 %36, i32 %33, i32 %1
  %38 = sub nsw i32 0, %32
  %39 = icmp slt i32 %37, %38
  %40 = select i1 %39, i32 %38, i32 %37
  %41 = add nsw i32 %40, %35
  %42 = trunc i64 %6 to i32
  %43 = icmp sgt i32 %41, %42
  %44 = select i1 %43, i32 %42, i32 0
  %45 = sub nsw i32 %41, %44
  %46 = icmp slt i32 %45, 0
  %47 = select i1 %46, i32 %42, i32 0
  %48 = add nsw i32 %45, %47
  %49 = or i1 %43, %46
  br i1 %49, label %50, label %52

50:                                               ; preds = %28
  %51 = lshr i32 %45, 31
  store i32 %51, i32* %7, align 8
  br label %52

52:                                               ; preds = %28, %50
  %53 = sext i32 %48 to i64
  store i64 %53, i64* %34, align 8
  br label %54

54:                                               ; preds = %2, %52
  %55 = phi i32 [ %40, %52 ], [ 0, %2 ]
  ret i32 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @WebRtc_WriteBuffer(%struct.RingBuffer*, i8* readonly, i64) local_unnamed_addr #0 {
  %4 = icmp eq %struct.RingBuffer* %0, null
  %5 = icmp eq i8* %1, null
  %6 = or i1 %4, %5
  br i1 %6, label %59, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  br label %26

19:                                               ; preds = %7
  %20 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %9, %21
  %23 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %22, %24
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i64 [ %15, %13 ], [ %24, %19 ]
  %28 = phi i64 [ %18, %13 ], [ %25, %19 ]
  %29 = sub i64 %9, %28
  %30 = icmp ult i64 %29, %2
  %31 = select i1 %30, i64 %29, i64 %2
  %32 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 1
  %33 = sub i64 %9, %27
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %44

35:                                               ; preds = %26
  %36 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 5
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 3
  %39 = load i64, i64* %38, align 8
  %40 = mul i64 %39, %27
  %41 = getelementptr inbounds i8, i8* %37, i64 %40
  %42 = mul i64 %39, %33
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* nonnull align 1 %1, i64 %42, i1 false)
  store i64 0, i64* %32, align 8
  %43 = sub i64 %31, %33
  store i32 1, i32* %10, align 8
  br label %44

44:                                               ; preds = %35, %26
  %45 = phi i64 [ 0, %35 ], [ %27, %26 ]
  %46 = phi i64 [ %43, %35 ], [ %31, %26 ]
  %47 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 5
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 3
  %50 = load i64, i64* %49, align 8
  %51 = mul i64 %50, %45
  %52 = getelementptr inbounds i8, i8* %48, i64 %51
  %53 = sub i64 %31, %46
  %54 = mul i64 %50, %53
  %55 = getelementptr inbounds i8, i8* %1, i64 %54
  %56 = mul i64 %50, %46
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %55, i64 %56, i1 false)
  %57 = load i64, i64* %32, align 8
  %58 = add i64 %57, %46
  store i64 %58, i64* %32, align 8
  br label %59

59:                                               ; preds = %3, %44
  %60 = phi i64 [ %31, %44 ], [ 0, %3 ]
  ret i64 %60
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @WebRtc_available_write(%struct.RingBuffer* readonly) local_unnamed_addr #5 {
  %2 = icmp eq %struct.RingBuffer* %0, null
  br i1 %2, label %25, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  br label %22

15:                                               ; preds = %3
  %16 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %5, %17
  %19 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %18, %20
  br label %22

22:                                               ; preds = %9, %15
  %23 = phi i64 [ %14, %9 ], [ %21, %15 ]
  %24 = sub i64 %5, %23
  br label %25

25:                                               ; preds = %1, %22
  %26 = phi i64 [ %24, %22 ], [ 0, %1 ]
  ret i64 %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @WebRtc_available_read(%struct.RingBuffer* readonly) local_unnamed_addr #5 {
  %2 = icmp eq %struct.RingBuffer* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  br label %22

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = getelementptr inbounds %struct.RingBuffer, %struct.RingBuffer* %0, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %18, %20
  br label %22

22:                                               ; preds = %1, %13, %7
  %23 = phi i64 [ %12, %7 ], [ %21, %13 ], [ 0, %1 ]
  ret i64 %23
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
