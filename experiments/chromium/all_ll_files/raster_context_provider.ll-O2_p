; ModuleID = '../../components/viz/common/gpu/raster_context_provider.cc'
source_filename = "../../components/viz/common/gpu/raster_context_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::RasterContextProvider::ScopedRasterContextLock" = type { %"class.viz::RasterContextProvider"*, %"class.base::internal::BasicAutoLock", %"class.std::__1::unique_ptr" }
%"class.base::internal::BasicAutoLock" = type { %"class.base::Lock"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.viz::ContextCacheController" = type { i32 (...)**, %"class.gpu::ContextSupport"*, %class.scoped_refptr, %class.GrDirectContext*, %"class.std::__1::unique_ptr", %"class.base::Lock"*, i32, i32, i8, %"class.base::Lock", i32, %"class.base::WeakPtr", %"class.base::WeakPtrFactory" }
%"class.gpu::ContextSupport" = type opaque
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GrDirectContext = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.3", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.gpu::raster::RasterInterface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }

@_ZN3viz21RasterContextProvider23ScopedRasterContextLockC1EPS0_PKc = hidden unnamed_addr alias void (%"class.viz::RasterContextProvider::ScopedRasterContextLock"*, %"class.viz::RasterContextProvider"*, i8*), void (%"class.viz::RasterContextProvider::ScopedRasterContextLock"*, %"class.viz::RasterContextProvider"*, i8*)* @_ZN3viz21RasterContextProvider23ScopedRasterContextLockC2EPS0_PKc
@_ZN3viz21RasterContextProvider23ScopedRasterContextLockD1Ev = hidden unnamed_addr alias void (%"class.viz::RasterContextProvider::ScopedRasterContextLock"*), void (%"class.viz::RasterContextProvider::ScopedRasterContextLock"*)* @_ZN3viz21RasterContextProvider23ScopedRasterContextLockD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21RasterContextProvider23ScopedRasterContextLockC2EPS0_PKc(%"class.viz::RasterContextProvider::ScopedRasterContextLock"* nocapture, %"class.viz::RasterContextProvider"*, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.viz::RasterContextProvider::ScopedRasterContextLock", %"class.viz::RasterContextProvider::ScopedRasterContextLock"* %0, i64 0, i32 0
  store %"class.viz::RasterContextProvider"* %1, %"class.viz::RasterContextProvider"** %4, align 8
  %5 = bitcast %"class.viz::RasterContextProvider"* %1 to %"class.base::Lock"* (%"class.viz::RasterContextProvider"*)***
  %6 = load %"class.base::Lock"* (%"class.viz::RasterContextProvider"*)**, %"class.base::Lock"* (%"class.viz::RasterContextProvider"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.base::Lock"* (%"class.viz::RasterContextProvider"*)*, %"class.base::Lock"* (%"class.viz::RasterContextProvider"*)** %6, i64 5
  %8 = load %"class.base::Lock"* (%"class.viz::RasterContextProvider"*)*, %"class.base::Lock"* (%"class.viz::RasterContextProvider"*)** %7, align 8
  %9 = tail call %"class.base::Lock"* %8(%"class.viz::RasterContextProvider"* %1) #4
  %10 = getelementptr inbounds %"class.viz::RasterContextProvider::ScopedRasterContextLock", %"class.viz::RasterContextProvider::ScopedRasterContextLock"* %0, i64 0, i32 1, i32 0
  store %"class.base::Lock"* %9, %"class.base::Lock"** %10, align 8
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %9, i64 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #4
  br label %16

16:                                               ; preds = %3, %14
  %17 = getelementptr inbounds %"class.viz::RasterContextProvider::ScopedRasterContextLock", %"class.viz::RasterContextProvider::ScopedRasterContextLock"* %0, i64 0, i32 2
  %18 = bitcast %"class.std::__1::unique_ptr"* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = load %"class.viz::RasterContextProvider"*, %"class.viz::RasterContextProvider"** %4, align 8
  %20 = bitcast %"class.viz::RasterContextProvider"* %19 to %"class.viz::ContextCacheController"* (%"class.viz::RasterContextProvider"*)***
  %21 = load %"class.viz::ContextCacheController"* (%"class.viz::RasterContextProvider"*)**, %"class.viz::ContextCacheController"* (%"class.viz::RasterContextProvider"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.viz::ContextCacheController"* (%"class.viz::RasterContextProvider"*)*, %"class.viz::ContextCacheController"* (%"class.viz::RasterContextProvider"*)** %21, i64 6
  %23 = load %"class.viz::ContextCacheController"* (%"class.viz::RasterContextProvider"*)*, %"class.viz::ContextCacheController"* (%"class.viz::RasterContextProvider"*)** %22, align 8
  %24 = tail call %"class.viz::ContextCacheController"* %23(%"class.viz::RasterContextProvider"* %19) #4
  %25 = tail call %"class.viz::ContextCacheController::ScopedToken"* @_ZN3viz22ContextCacheController16ClientBecameBusyEv(%"class.viz::ContextCacheController"* %24) #4
  %26 = ptrtoint %"class.viz::ContextCacheController::ScopedToken"* %25 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.viz::ContextCacheController::ScopedToken"*, %"class.viz::ContextCacheController::ScopedToken"** %27, align 8
  store i64 %26, i64* %18, align 8
  %29 = icmp eq %"class.viz::ContextCacheController::ScopedToken"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %16
  tail call void @_ZN3viz22ContextCacheController11ScopedTokenD1Ev(%"class.viz::ContextCacheController::ScopedToken"* nonnull %28) #4
  %31 = getelementptr inbounds %"class.viz::ContextCacheController::ScopedToken", %"class.viz::ContextCacheController::ScopedToken"* %28, i64 0, i32 0
  tail call void @_ZdlPv(i8* %31) #5
  br label %32

32:                                               ; preds = %30, %16
  %33 = icmp eq i8* %2, null
  br i1 %33, label %45, label %34

34:                                               ; preds = %32
  %35 = load %"class.viz::RasterContextProvider"*, %"class.viz::RasterContextProvider"** %4, align 8
  %36 = bitcast %"class.viz::RasterContextProvider"* %35 to %"class.gpu::raster::RasterInterface"* (%"class.viz::RasterContextProvider"*)***
  %37 = load %"class.gpu::raster::RasterInterface"* (%"class.viz::RasterContextProvider"*)**, %"class.gpu::raster::RasterInterface"* (%"class.viz::RasterContextProvider"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.gpu::raster::RasterInterface"* (%"class.viz::RasterContextProvider"*)*, %"class.gpu::raster::RasterInterface"* (%"class.viz::RasterContextProvider"*)** %37, i64 13
  %39 = load %"class.gpu::raster::RasterInterface"* (%"class.viz::RasterContextProvider"*)*, %"class.gpu::raster::RasterInterface"* (%"class.viz::RasterContextProvider"*)** %38, align 8
  %40 = tail call %"class.gpu::raster::RasterInterface"* %39(%"class.viz::RasterContextProvider"* %35) #4
  %41 = bitcast %"class.gpu::raster::RasterInterface"* %40 to void (%"class.gpu::raster::RasterInterface"*, i8*)***
  %42 = load void (%"class.gpu::raster::RasterInterface"*, i8*)**, void (%"class.gpu::raster::RasterInterface"*, i8*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i8*)*, void (%"class.gpu::raster::RasterInterface"*, i8*)** %42, i64 41
  %44 = load void (%"class.gpu::raster::RasterInterface"*, i8*)*, void (%"class.gpu::raster::RasterInterface"*, i8*)** %43, align 8
  tail call void %44(%"class.gpu::raster::RasterInterface"* %40, i8* nonnull %2) #4
  br label %45

45:                                               ; preds = %32, %34
  ret void
}

declare %"class.viz::ContextCacheController::ScopedToken"* @_ZN3viz22ContextCacheController16ClientBecameBusyEv(%"class.viz::ContextCacheController"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21RasterContextProvider23ScopedRasterContextLockD2Ev(%"class.viz::RasterContextProvider::ScopedRasterContextLock"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::RasterContextProvider::ScopedRasterContextLock", %"class.viz::RasterContextProvider::ScopedRasterContextLock"* %0, i64 0, i32 0
  %3 = load %"class.viz::RasterContextProvider"*, %"class.viz::RasterContextProvider"** %2, align 8
  %4 = bitcast %"class.viz::RasterContextProvider"* %3 to %"class.viz::ContextCacheController"* (%"class.viz::RasterContextProvider"*)***
  %5 = load %"class.viz::ContextCacheController"* (%"class.viz::RasterContextProvider"*)**, %"class.viz::ContextCacheController"* (%"class.viz::RasterContextProvider"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::ContextCacheController"* (%"class.viz::RasterContextProvider"*)*, %"class.viz::ContextCacheController"* (%"class.viz::RasterContextProvider"*)** %5, i64 6
  %7 = load %"class.viz::ContextCacheController"* (%"class.viz::RasterContextProvider"*)*, %"class.viz::ContextCacheController"* (%"class.viz::RasterContextProvider"*)** %6, align 8
  %8 = tail call %"class.viz::ContextCacheController"* %7(%"class.viz::RasterContextProvider"* %3) #4
  %9 = getelementptr inbounds %"class.viz::RasterContextProvider::ScopedRasterContextLock", %"class.viz::RasterContextProvider::ScopedRasterContextLock"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.viz::ContextCacheController::ScopedToken"*, %"class.viz::ContextCacheController::ScopedToken"** %9, align 8
  store %"class.viz::ContextCacheController::ScopedToken"* null, %"class.viz::ContextCacheController::ScopedToken"** %9, align 8
  tail call void @_ZN3viz22ContextCacheController19ClientBecameNotBusyENSt3__110unique_ptrINS0_11ScopedTokenENS1_14default_deleteIS3_EEEE(%"class.viz::ContextCacheController"* %8, %"class.viz::ContextCacheController::ScopedToken"* %10) #4
  %11 = load %"class.viz::ContextCacheController::ScopedToken"*, %"class.viz::ContextCacheController::ScopedToken"** %9, align 8
  store %"class.viz::ContextCacheController::ScopedToken"* null, %"class.viz::ContextCacheController::ScopedToken"** %9, align 8
  %12 = icmp eq %"class.viz::ContextCacheController::ScopedToken"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %1
  tail call void @_ZN3viz22ContextCacheController11ScopedTokenD1Ev(%"class.viz::ContextCacheController::ScopedToken"* nonnull %11) #4
  %14 = getelementptr inbounds %"class.viz::ContextCacheController::ScopedToken", %"class.viz::ContextCacheController::ScopedToken"* %11, i64 0, i32 0
  tail call void @_ZdlPv(i8* %14) #5
  br label %15

15:                                               ; preds = %1, %13
  %16 = getelementptr inbounds %"class.viz::RasterContextProvider::ScopedRasterContextLock", %"class.viz::RasterContextProvider::ScopedRasterContextLock"* %0, i64 0, i32 1, i32 0
  %17 = load %"class.base::Lock"*, %"class.base::Lock"** %16, align 8
  %18 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %17, i64 0, i32 0, i32 0
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %18) #4
  ret void
}

declare void @_ZN3viz22ContextCacheController19ClientBecameNotBusyENSt3__110unique_ptrINS0_11ScopedTokenENS1_14default_deleteIS3_EEEE(%"class.viz::ContextCacheController"*, %"class.viz::ContextCacheController::ScopedToken"*) local_unnamed_addr #1

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3viz22ContextCacheController11ScopedTokenD1Ev(%"class.viz::ContextCacheController::ScopedToken"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
