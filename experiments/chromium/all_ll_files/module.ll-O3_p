; ModuleID = '../../v8/src/objects/module.cc'
source_filename = "../../v8/src/objects/module.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::Module" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.648", %"class.std::__1::unique_ptr.669", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.679", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.818", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.831", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.841", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.852", %"struct.std::__1::atomic.155", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.927", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.970"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.982", i32, i8, i8, i32, i32, %"class.std::__1::vector.988", %"class.std::__1::vector.988", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.995", i64, %"class.std::__1::unordered_map.996", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.544", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.163", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1052", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1090", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1124", %"class.std::__1::vector.1128", %"class.std::__1::vector.1128", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.22", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.22", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.22", i64, i64, %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.32", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.164", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.22", i64, i8, %"struct.std::__1::atomic.22", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.168", %"class.std::__1::vector.168", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.317", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.401", %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.437", %"class.std::__1::unique_ptr.447", %"class.std::__1::unique_ptr.453", %"class.std::__1::unique_ptr.453", %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.465", %"class.std::__1::unique_ptr.465", %"class.std::__1::unique_ptr.471", %"class.std::__1::unique_ptr.477", %"class.std::__1::shared_ptr.483", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.506", %"class.std::__1::unique_ptr.532", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.538", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.551", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.333", i8, [7 x i8], %"class.std::__1::unordered_map.557", %"class.std::__1::unordered_map.583", %"class.std::__1::unordered_map.557", %"class.std::__1::unordered_map.607", %"class.std::__1::vector.635", i8, %"class.std::__1::unique_ptr.642", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.5", %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.19", [4 x i8] }>
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.27" }
%"struct.std::__1::atomic.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl.30" }
%"struct.std::__1::__cxx_atomic_impl.30" = type { %"struct.std::__1::__cxx_atomic_base_impl.31" }
%"struct.std::__1::__cxx_atomic_base_impl.31" = type { i64 }
%"struct.std::__1::atomic.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl.34" }
%"struct.std::__1::__cxx_atomic_impl.34" = type { %"struct.std::__1::__cxx_atomic_base_impl.35" }
%"struct.std::__1::__cxx_atomic_base_impl.35" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.36" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.106" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.22"*, %"class.std::__1::unique_ptr.100" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.22", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.41", %"class.std::__1::vector.41", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.43" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.48" }
%"class.std::__1::__hash_table.48" = type <{ %"class.std::__1::unique_ptr.49", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.66", [4 x i8] }>
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51", %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::__hash_node_base.52"** }
%"struct.std::__1::__hash_node_base.52" = type { %"struct.std::__1::__hash_node_base.52"* }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::__bucket_list_deallocator.54" }
%"class.std::__1::__bucket_list_deallocator.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::__hash_node_base.52" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.27", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.89", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.22"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.27", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.71", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__cxx_atomic_impl.73" }
%"struct.std::__1::__cxx_atomic_impl.73" = type { %"struct.std::__1::__cxx_atomic_base_impl.74" }
%"struct.std::__1::__cxx_atomic_base_impl.74" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.75" }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.77" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::atomic.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__cxx_atomic_impl.91" }
%"struct.std::__1::__cxx_atomic_impl.91" = type { %"struct.std::__1::__cxx_atomic_base_impl.92" }
%"struct.std::__1::__cxx_atomic_base_impl.92" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.93", i8, [7 x i8] }>
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { i64*, i64*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.22", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %"struct.std::__1::pair.108"*, %"struct.std::__1::pair.108"*, %"class.std::__1::__compressed_pair.109" }
%"struct.std::__1::pair.108" = type { i32, i64 }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::pair.108"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.22", i64, %"struct.std::__1::atomic.22" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.22", i32, %"struct.std::__1::atomic.22", %"class.v8::base::Mutex", %"struct.std::__1::atomic.22" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.114" }
%"class.std::__1::unordered_map.114" = type { %"class.std::__1::__hash_table.115" }
%"class.std::__1::__hash_table.115" = type <{ %"class.std::__1::unique_ptr.116", %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", [4 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118", %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.std::__1::__hash_node_base.119"** }
%"struct.std::__1::__hash_node_base.119" = type { %"struct.std::__1::__hash_node_base.119"* }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.std::__1::__bucket_list_deallocator.121" }
%"class.std::__1::__bucket_list_deallocator.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::__hash_node_base.119" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.142", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.144" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1057", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1061", %"class.std::__1::unique_ptr.1067", %"class.std::__1::unique_ptr.477", %"class.std::__1::vector.1073", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1057" = type { %"struct.std::__1::__atomic_base.1058" }
%"struct.std::__1::__atomic_base.1058" = type { %"struct.std::__1::__cxx_atomic_impl.1059" }
%"struct.std::__1::__cxx_atomic_impl.1059" = type { %"struct.std::__1::__cxx_atomic_base_impl.1060" }
%"struct.std::__1::__cxx_atomic_base_impl.1060" = type { i32 }
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.811" }
%"class.std::__1::vector.811" = type { %"class.std::__1::__vector_base.812" }
%"class.std::__1::__vector_base.812" = type { i64**, i64**, %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { i64** }
%"class.std::__1::unique_ptr.1067" = type { %"class.std::__1::__compressed_pair.1068" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.1069" }
%"struct.std::__1::__compressed_pair_elem.1069" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.811", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1073" = type { %"class.std::__1::__vector_base.1074" }
%"class.std::__1::__vector_base.1074" = type { %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"*, %"class.std::__1::__compressed_pair.1076" }
%"struct.std::__1::pair.1075" = type opaque
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"struct.std::__1::pair.1075"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.155", %"struct.std::__1::atomic.159", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.22" }
%"struct.std::__1::atomic.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__cxx_atomic_impl.161" }
%"struct.std::__1::__cxx_atomic_impl.161" = type { %"struct.std::__1::__cxx_atomic_base_impl.162" }
%"struct.std::__1::__cxx_atomic_base_impl.162" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.22", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.163" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.164" = type { %"struct.std::__1::__atomic_base.165" }
%"struct.std::__1::__atomic_base.165" = type { %"struct.std::__1::__cxx_atomic_impl.166" }
%"struct.std::__1::__cxx_atomic_impl.166" = type { %"struct.std::__1::__cxx_atomic_base_impl.167" }
%"struct.std::__1::__cxx_atomic_base_impl.167" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i64 }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.170" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.283", %"class.std::__1::vector.283", %"class.std::__1::vector.283", %"class.std::__1::vector.290", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.184", %"class.std::__1::vector.185", %"class.std::__1::vector.192", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.184" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.185" = type { %"class.std::__1::__vector_base.186" }
%"class.std::__1::__vector_base.186" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.187" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"*, %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::unique_ptr.194" = type opaque
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.std::__1::unique_ptr.194"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212", %"class.v8::internal::Worklist.214" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.202" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.214" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.216", i8, i64 }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.232" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.184"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.232" = type { %"class.std::__1::__hash_table.233" }
%"class.std::__1::__hash_table.233" = type <{ %"class.std::__1::unique_ptr.234", %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.249", %"class.std::__1::__compressed_pair.252", [4 x i8] }>
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236", %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::__hash_node_base.237"** }
%"struct.std::__1::__hash_node_base.237" = type { %"struct.std::__1::__hash_node_base.237"* }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.std::__1::__bucket_list_deallocator.239" }
%"class.std::__1::__bucket_list_deallocator.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base.237" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.259" }
%"class.std::__1::unordered_map.259" = type { %"class.std::__1::__hash_table.260" }
%"class.std::__1::__hash_table.260" = type <{ %"class.std::__1::unique_ptr.261", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.279", [4 x i8] }>
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263", %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.std::__1::__hash_node_base.264"** }
%"struct.std::__1::__hash_node_base.264" = type { %"struct.std::__1::__hash_node_base.264"* }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.std::__1::__bucket_list_deallocator.266" }
%"class.std::__1::__bucket_list_deallocator.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.std::__1::__hash_node_base.264" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::vector.283" = type { %"class.std::__1::__vector_base.284" }
%"class.std::__1::__vector_base.284" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.290" = type { %"class.std::__1::__vector_base.291" }
%"class.std::__1::__vector_base.291" = type { %"struct.std::__1::pair.292"*, %"struct.std::__1::pair.292"*, %"class.std::__1::__compressed_pair.293" }
%"struct.std::__1::pair.292" = type opaque
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::pair.292"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.298", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.283"], [3 x %"class.std::__1::vector.283"], i8, %"struct.std::__1::atomic.155", [6 x i8], %"class.std::__1::vector.283", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.308"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.283", %"class.std::__1::vector.283", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.308" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.333", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.326"], %"class.std::__1::unique_ptr.298" }
%"class.std::__1::vector.326" = type { %"class.std::__1::__vector_base.327" }
%"class.std::__1::__vector_base.327" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.365", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.369", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.374" }
%"struct.std::__1::atomic.365" = type { %"struct.std::__1::__atomic_base.366" }
%"struct.std::__1::__atomic_base.366" = type { %"struct.std::__1::__cxx_atomic_impl.367" }
%"struct.std::__1::__cxx_atomic_impl.367" = type { %"struct.std::__1::__cxx_atomic_base_impl.368" }
%"struct.std::__1::__cxx_atomic_base_impl.368" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.369" = type { %"struct.std::__1::__atomic_base.370" }
%"struct.std::__1::__atomic_base.370" = type { %"struct.std::__1::__cxx_atomic_impl.371" }
%"struct.std::__1::__cxx_atomic_impl.371" = type { %"struct.std::__1::__cxx_atomic_base_impl.372" }
%"struct.std::__1::__cxx_atomic_base_impl.372" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.374" = type { %"class.std::__1::__hash_table.375" }
%"class.std::__1::__hash_table.375" = type <{ %"class.std::__1::unique_ptr.376", %"class.std::__1::__compressed_pair.386", %"class.std::__1::__compressed_pair.391", %"class.std::__1::__compressed_pair.394", [4 x i8] }>
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378", %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.std::__1::__hash_node_base.379"** }
%"struct.std::__1::__hash_node_base.379" = type { %"struct.std::__1::__hash_node_base.379"* }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.std::__1::__bucket_list_deallocator.381" }
%"class.std::__1::__bucket_list_deallocator.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"struct.std::__1::__hash_node_base.379" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.298", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.155", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.404", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.404" = type { %"class.std::__1::__hash_table.405" }
%"class.std::__1::__hash_table.405" = type <{ %"class.std::__1::unique_ptr.406", %"class.std::__1::__compressed_pair.416", %"class.std::__1::__compressed_pair.421", %"class.std::__1::__compressed_pair.424", [4 x i8] }>
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408", %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"struct.std::__1::__hash_node_base.409"** }
%"struct.std::__1::__hash_node_base.409" = type { %"struct.std::__1::__hash_node_base.409"* }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.std::__1::__bucket_list_deallocator.411" }
%"class.std::__1::__bucket_list_deallocator.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"struct.std::__1::__hash_node_base.409" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.440" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.483" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.502", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.484", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.487", %"class.std::__1::set.495" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.487" = type { %"class.std::__1::__tree.488" }
%"class.std::__1::__tree.488" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.489", %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::set.495" = type { %"class.std::__1::__tree.496" }
%"class.std::__1::__tree.496" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.489", %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::atomic.502" = type { %"struct.std::__1::__atomic_base.503" }
%"struct.std::__1::__atomic_base.503" = type { %"struct.std::__1::__cxx_atomic_impl.504" }
%"struct.std::__1::__cxx_atomic_impl.504" = type { %"struct.std::__1::__cxx_atomic_base_impl.505" }
%"struct.std::__1::__cxx_atomic_base_impl.505" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.506" = type { %"class.std::__1::__hash_table.507" }
%"class.std::__1::__hash_table.507" = type <{ %"class.std::__1::unique_ptr.508", %"class.std::__1::__compressed_pair.518", %"class.std::__1::__compressed_pair.523", %"class.std::__1::__compressed_pair.526", [4 x i8] }>
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510", %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"struct.std::__1::__hash_node_base.511"** }
%"struct.std::__1::__hash_node_base.511" = type { %"struct.std::__1::__hash_node_base.511"* }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.std::__1::__bucket_list_deallocator.513" }
%"class.std::__1::__bucket_list_deallocator.513" = type { %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"struct.std::__1::__hash_node_base.511" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.544", %"class.std::__1::vector.544" }
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.333" = type { %"class.std::__1::__hash_table.334" }
%"class.std::__1::__hash_table.334" = type <{ %"class.std::__1::unique_ptr.335", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.350", %"class.std::__1::__compressed_pair.354", [4 x i8] }>
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337", %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"struct.std::__1::__hash_node_base.338"** }
%"struct.std::__1::__hash_node_base.338" = type { %"struct.std::__1::__hash_node_base.338"* }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.std::__1::__bucket_list_deallocator.340" }
%"class.std::__1::__bucket_list_deallocator.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"struct.std::__1::__hash_node_base.338" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unordered_map.583" = type { %"class.std::__1::__hash_table.584" }
%"class.std::__1::__hash_table.584" = type <{ %"class.std::__1::unique_ptr.585", %"class.std::__1::__compressed_pair.595", %"class.std::__1::__compressed_pair.600", %"class.std::__1::__compressed_pair.603", [4 x i8] }>
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587", %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"struct.std::__1::__hash_node_base.588"** }
%"struct.std::__1::__hash_node_base.588" = type { %"struct.std::__1::__hash_node_base.588"* }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.std::__1::__bucket_list_deallocator.590" }
%"class.std::__1::__bucket_list_deallocator.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"struct.std::__1::__hash_node_base.588" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unordered_map.557" = type { %"class.std::__1::__hash_table.558" }
%"class.std::__1::__hash_table.558" = type <{ %"class.std::__1::unique_ptr.559", %"class.std::__1::__compressed_pair.569", %"class.std::__1::__compressed_pair.574", %"class.std::__1::__compressed_pair.577", [4 x i8] }>
%"class.std::__1::unique_ptr.559" = type { %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561", %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"struct.std::__1::__hash_node_base.562"** }
%"struct.std::__1::__hash_node_base.562" = type { %"struct.std::__1::__hash_node_base.562"* }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.std::__1::__bucket_list_deallocator.564" }
%"class.std::__1::__bucket_list_deallocator.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.562" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unordered_map.607" = type { %"class.std::__1::__hash_table.608" }
%"class.std::__1::__hash_table.608" = type <{ %"class.std::__1::unique_ptr.609", %"class.std::__1::__compressed_pair.619", %"class.std::__1::__compressed_pair.624", %"class.std::__1::__compressed_pair.629", [4 x i8] }>
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611", %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"struct.std::__1::__hash_node_base.612"** }
%"struct.std::__1::__hash_node_base.612" = type { %"struct.std::__1::__hash_node_base.612"* }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.std::__1::__bucket_list_deallocator.614" }
%"class.std::__1::__bucket_list_deallocator.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"struct.std::__1::__hash_node_base.612" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::vector.635" = type { %"class.std::__1::__vector_base.636" }
%"class.std::__1::__vector_base.636" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.637" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.642" = type { %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.544" }
%"class.std::__1::shared_ptr.648" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.142", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.649", %"class.std::__1::unique_ptr.663" }
%"class.std::__1::unique_ptr.649" = type { %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.652" }
%"class.std::__1::vector.652" = type { %"class.std::__1::__vector_base.653" }
%"class.std::__1::__vector_base.653" = type { %"class.std::__1::unique_ptr.654"*, %"class.std::__1::unique_ptr.654"*, %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::unique_ptr.654" = type { %"class.std::__1::__compressed_pair.1214" }
%"class.std::__1::__compressed_pair.1214" = type { %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"class.std::__1::unique_ptr.654"* }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.672", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.672" = type { %"struct.std::__1::__atomic_base.673" }
%"struct.std::__1::__atomic_base.673" = type { %"struct.std::__1::__cxx_atomic_impl.674" }
%"struct.std::__1::__cxx_atomic_impl.674" = type { %"struct.std::__1::__cxx_atomic_base_impl.675" }
%"struct.std::__1::__cxx_atomic_base_impl.675" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.679" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.680", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.680" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.681", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.681" = type { %"class.std::__1::__vector_base.682" }
%"class.std::__1::__vector_base.682" = type { %"class.std::__1::unique_ptr.683"*, %"class.std::__1::unique_ptr.683"*, %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::unique_ptr.683" = type opaque
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.std::__1::unique_ptr.683"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.689", %"class.std::__1::unique_ptr.695", %"struct.std::__1::atomic.155", %"class.std::__1::unique_ptr.701", %"class.std::__1::unique_ptr.707", %"class.std::__1::unique_ptr.713", %"class.std::__1::unique_ptr.719", %"class.std::__1::unique_ptr.725", %"class.std::__1::set.731", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.731" = type { %"class.std::__1::__tree.732" }
%"class.std::__1::__tree.732" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.733", %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.740" }
%"class.v8::internal::TaggedImpl.740" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.739" }
%"class.v8::internal::TaggedImpl.739" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.747", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.753", %"class.v8::internal::DetachableVector.754", %"class.v8::internal::DetachableVector.753", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.754" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.753" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", %"class.std::__1::unique_ptr.741", %"class.std::__1::unique_ptr.484" }
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.755", %"class.std::__1::vector.761", %"class.std::__1::unique_ptr.768", %"class.std::__1::vector.775", %"class.std::__1::unique_ptr.782", i64, %"class.std::__1::vector.788", %"class.std::__1::vector.796", %"class.std::__1::vector.804", i8, i8, i32 }
%"class.std::__1::unique_ptr.755" = type { %"class.std::__1::__compressed_pair.756" }
%"class.std::__1::__compressed_pair.756" = type { %"struct.std::__1::__compressed_pair_elem.757" }
%"struct.std::__1::__compressed_pair_elem.757" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.761" = type { %"class.std::__1::__vector_base.762" }
%"class.std::__1::__vector_base.762" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.763" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.v8::internal::GlobalHandles::NodeSpace.771"* }
%"class.v8::internal::GlobalHandles::NodeSpace.771" = type opaque
%"class.std::__1::vector.775" = type { %"class.std::__1::__vector_base.776" }
%"class.std::__1::__vector_base.776" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.777" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.788" = type { %"class.std::__1::__vector_base.789" }
%"class.std::__1::__vector_base.789" = type { %"struct.std::__1::pair.790"*, %"struct.std::__1::pair.790"*, %"class.std::__1::__compressed_pair.791" }
%"struct.std::__1::pair.790" = type opaque
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"struct.std::__1::pair.790"* }
%"class.std::__1::vector.796" = type { %"class.std::__1::__vector_base.797" }
%"class.std::__1::__vector_base.797" = type { %"struct.std::__1::pair.798"*, %"struct.std::__1::pair.798"*, %"class.std::__1::__compressed_pair.799" }
%"struct.std::__1::pair.798" = type opaque
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"struct.std::__1::pair.798"* }
%"class.std::__1::vector.804" = type { %"class.std::__1::__vector_base.805" }
%"class.std::__1::__vector_base.805" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.806" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.811", %"class.std::__1::vector.818" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.825" }
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.818" = type { %"class.std::__1::__vector_base.819" }
%"class.std::__1::__vector_base.819" = type { i32*, i32*, %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.831" = type { %"struct.std::__1::__atomic_base.832" }
%"struct.std::__1::__atomic_base.832" = type { %"struct.std::__1::__cxx_atomic_impl.833" }
%"struct.std::__1::__cxx_atomic_impl.833" = type { %"struct.std::__1::__cxx_atomic_base_impl.834" }
%"struct.std::__1::__cxx_atomic_base_impl.834" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.841" = type { %"struct.std::__1::__atomic_base.842" }
%"struct.std::__1::__atomic_base.842" = type { %"struct.std::__1::__cxx_atomic_impl.843" }
%"struct.std::__1::__cxx_atomic_impl.843" = type { %"struct.std::__1::__cxx_atomic_base_impl.844" }
%"struct.std::__1::__cxx_atomic_base_impl.844" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.848 }
%union.anon.848 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.852" = type { %"class.std::__1::__hash_table.853" }
%"class.std::__1::__hash_table.853" = type <{ %"class.std::__1::unique_ptr.854", %"class.std::__1::__compressed_pair.864", %"class.std::__1::__compressed_pair.869", %"class.std::__1::__compressed_pair.872", [4 x i8] }>
%"class.std::__1::unique_ptr.854" = type { %"class.std::__1::__compressed_pair.855" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856", %"struct.std::__1::__compressed_pair_elem.858" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"struct.std::__1::__hash_node_base.857"** }
%"struct.std::__1::__hash_node_base.857" = type { %"struct.std::__1::__hash_node_base.857"* }
%"struct.std::__1::__compressed_pair_elem.858" = type { %"class.std::__1::__bucket_list_deallocator.859" }
%"class.std::__1::__bucket_list_deallocator.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"struct.std::__1::__hash_node_base.857" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::atomic.155" = type { %"struct.std::__1::__atomic_base.156" }
%"struct.std::__1::__atomic_base.156" = type { %"struct.std::__1::__cxx_atomic_impl.157" }
%"struct.std::__1::__cxx_atomic_impl.157" = type { %"struct.std::__1::__cxx_atomic_base_impl.158" }
%"struct.std::__1::__cxx_atomic_base_impl.158" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.878", %"class.v8::internal::Handle.884", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.885", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.884" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.885" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.886", %"class.std::__1::vector.892", %"class.std::__1::unique_ptr.900", %"class.std::__1::unique_ptr.906", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.912", %"class.std::__1::vector.918", %"struct.std::__1::pair.926" }
%"class.std::__1::unique_ptr.886" = type { %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.892" = type { %"class.std::__1::__vector_base.893" }
%"class.std::__1::__vector_base.893" = type { %"class.std::__1::unique_ptr.894"*, %"class.std::__1::unique_ptr.894"*, %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::unique_ptr.894" = type opaque
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.std::__1::unique_ptr.894"* }
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.918" = type { %"class.std::__1::__vector_base.919" }
%"class.std::__1::__vector_base.919" = type { %"struct.std::__1::pair.920"*, %"struct.std::__1::pair.920"*, %"class.std::__1::__compressed_pair.921" }
%"struct.std::__1::pair.920" = type opaque
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"struct.std::__1::pair.920"* }
%"struct.std::__1::pair.926" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.3"*, i16, i8*)*, i8* }
%"class.v8::Local.3" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.927" = type { %"class.std::__1::__compressed_pair.928" }
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.930", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.930" = type { %"class.std::__1::__hash_table.931" }
%"class.std::__1::__hash_table.931" = type <{ %"class.std::__1::unique_ptr.932", %"class.std::__1::__compressed_pair.942", %"class.std::__1::__compressed_pair.947", %"class.std::__1::__compressed_pair.951", [4 x i8] }>
%"class.std::__1::unique_ptr.932" = type { %"class.std::__1::__compressed_pair.933" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934", %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"struct.std::__1::__hash_node_base.935"** }
%"struct.std::__1::__hash_node_base.935" = type { %"struct.std::__1::__hash_node_base.935"* }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"class.std::__1::__bucket_list_deallocator.937" }
%"class.std::__1::__bucket_list_deallocator.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"struct.std::__1::__hash_node_base.935" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.965" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.959"**, %"struct.std::__1::pair.959"**, %"struct.std::__1::pair.959"**, %"class.std::__1::__compressed_pair.960" }
%"struct.std::__1::pair.959" = type opaque
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"struct.std::__1::pair.959"** }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.970" = type { %"class.std::__1::__vector_base.971" }
%"class.std::__1::__vector_base.971" = type { %"class.v8::internal::Handle.972"*, %"class.v8::internal::Handle.972"*, %"class.std::__1::__compressed_pair.973" }
%"class.v8::internal::Handle.972" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.v8::internal::Handle.972"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.978" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.978" = type { %"class.std::__1::__vector_base.979" }
%"class.std::__1::__vector_base.979" = type { %"struct.std::__1::pair.959"*, %"struct.std::__1::pair.959"*, %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"struct.std::__1::pair.959"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.836", i32, %"class.v8::Local.3" }
%"class.v8::Local.836" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.988" = type { %"class.std::__1::__vector_base.989" }
%"class.std::__1::__vector_base.989" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.995" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.996" = type { %"class.std::__1::__hash_table.997" }
%"class.std::__1::__hash_table.997" = type <{ %"class.std::__1::unique_ptr.998", %"class.std::__1::__compressed_pair.1008", %"class.std::__1::__compressed_pair.1013", %"class.std::__1::__compressed_pair.1016", [4 x i8] }>
%"class.std::__1::unique_ptr.998" = type { %"class.std::__1::__compressed_pair.999" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.1000", %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1000" = type { %"struct.std::__1::__hash_node_base.1001"** }
%"struct.std::__1::__hash_node_base.1001" = type { %"struct.std::__1::__hash_node_base.1001"* }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"class.std::__1::__bucket_list_deallocator.1003" }
%"class.std::__1::__bucket_list_deallocator.1003" = type { %"class.std::__1::__compressed_pair.1004" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.1009" }
%"struct.std::__1::__compressed_pair_elem.1009" = type { %"struct.std::__1::__hash_node_base.1001" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.544" = type { %"class.std::__1::__vector_base.545" }
%"class.std::__1::__vector_base.545" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.163" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1020", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1049", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1050", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1020" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1045, %union.anon.1047, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1045 = type { i64 }
%union.anon.1047 = type { i64 }
%"class.std::__1::weak_ptr.1049" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1050" = type { %"class.v8::PersistentBase.1051" }
%"class.v8::PersistentBase.1051" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1021", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1021" = type { %"class.std::__1::__hash_table.1022" }
%"class.std::__1::__hash_table.1022" = type <{ %"class.std::__1::unique_ptr.1023", %"class.std::__1::__compressed_pair.1033", %"class.std::__1::__compressed_pair.1038", %"class.std::__1::__compressed_pair.1041", [4 x i8] }>
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025", %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"struct.std::__1::__hash_node_base.1026"** }
%"struct.std::__1::__hash_node_base.1026" = type { %"struct.std::__1::__hash_node_base.1026"* }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.std::__1::__bucket_list_deallocator.1028" }
%"class.std::__1::__bucket_list_deallocator.1028" = type { %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"struct.std::__1::__hash_node_base.1026" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1052" = type { %"class.std::__1::__compressed_pair.1053" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.1054" }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1081", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.837", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.837" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1098" }
%"class.std::__1::unordered_map.1098" = type { %"class.std::__1::__hash_table.1099" }
%"class.std::__1::__hash_table.1099" = type <{ %"class.std::__1::unique_ptr.1100", %"class.std::__1::__compressed_pair.1110", %"class.std::__1::__compressed_pair.1115", %"class.std::__1::__compressed_pair.1118", [4 x i8] }>
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102", %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"struct.std::__1::__hash_node_base.1103"** }
%"struct.std::__1::__hash_node_base.1103" = type { %"struct.std::__1::__hash_node_base.1103"* }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.std::__1::__bucket_list_deallocator.1105" }
%"class.std::__1::__bucket_list_deallocator.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"struct.std::__1::__hash_node_base.1103" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1124" = type { %"struct.std::__1::__atomic_base.1125" }
%"struct.std::__1::__atomic_base.1125" = type { %"struct.std::__1::__cxx_atomic_impl.1126" }
%"struct.std::__1::__cxx_atomic_impl.1126" = type { %"struct.std::__1::__cxx_atomic_base_impl.1127" }
%"struct.std::__1::__cxx_atomic_base_impl.1127" = type { %"class.std::__1::vector.1128"* }
%"class.std::__1::vector.1128" = type { %"class.std::__1::__vector_base.1129" }
%"class.std::__1::__vector_base.1129" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1130" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::SourceTextModule" = type { %"class.v8::internal::TorqueGeneratedSourceTextModule" }
%"class.v8::internal::TorqueGeneratedSourceTextModule" = type { %"class.v8::internal::Module" }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1142", i32, i32, i32, %"class.v8::internal::Handle.1143" }
%"class.v8::internal::Handle.1142" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1143" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Module::ResolveSet" = type opaque
%"class.v8::internal::ZoneForwardList" = type { %"class.std::__1::forward_list" }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.1146" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.1147", %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.v8::internal::Handle.1140" }
%"class.v8::internal::Handle.1140" = type { %"class.v8::internal::HandleBase" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Factory" = type { i8 }
%class.anon = type { %"class.v8::internal::Isolate"** }
%"class.v8::internal::UnorderedModuleSet" = type { %"class.std::__1::unordered_set.1152" }
%"class.std::__1::unordered_set.1152" = type { %"class.std::__1::__hash_table.1153" }
%"class.std::__1::__hash_table.1153" = type <{ %"class.std::__1::unique_ptr.1154", %"class.std::__1::__compressed_pair.1163", %"class.std::__1::__compressed_pair.1167", %"class.std::__1::__compressed_pair.1169", [4 x i8] }>
%"class.std::__1::unique_ptr.1154" = type { %"class.std::__1::__compressed_pair.1155" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.1156", %"struct.std::__1::__compressed_pair_elem.1158" }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"struct.std::__1::__hash_node_base.1157"** }
%"struct.std::__1::__hash_node_base.1157" = type { %"struct.std::__1::__hash_node_base.1157"* }
%"struct.std::__1::__compressed_pair_elem.1158" = type { %"class.std::__1::__bucket_list_deallocator.1159" }
%"class.std::__1::__bucket_list_deallocator.1159" = type { %"class.std::__1::__compressed_pair.1160" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"class.v8::internal::ZoneAllocator.1162" }
%"class.v8::internal::ZoneAllocator.1162" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164", %"struct.std::__1::__compressed_pair_elem.1165" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"struct.std::__1::__hash_node_base.1157" }
%"struct.std::__1::__compressed_pair_elem.1165" = type { %"class.v8::internal::ZoneAllocator.1166" }
%"class.v8::internal::ZoneAllocator.1166" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.1172" }
%"class.std::__1::vector.1172" = type { %"class.std::__1::__vector_base.1173" }
%"class.std::__1::__vector_base.1173" = type { %"class.v8::internal::Handle.1141"*, %"class.v8::internal::Handle.1141"*, %"class.std::__1::__compressed_pair.1174" }
%"class.v8::internal::Handle.1141" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.1175", %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"class.v8::internal::Handle.1141"* }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"class.v8::internal::ZoneAllocator.1177" }
%"class.v8::internal::ZoneAllocator.1177" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::JSModuleNamespace" = type { %"class.v8::internal::TorqueGeneratedJSModuleNamespace" }
%"class.v8::internal::TorqueGeneratedJSModuleNamespace" = type { %"class.v8::internal::JSSpecialObject" }
%"class.v8::internal::JSSpecialObject" = type { %"class.v8::internal::TorqueGeneratedJSSpecialObject" }
%"class.v8::internal::TorqueGeneratedJSSpecialObject" = type { %"class.v8::internal::JSCustomElementsObject" }
%"class.v8::internal::JSCustomElementsObject" = type { %"class.v8::internal::TorqueGeneratedJSCustomElementsObject" }
%"class.v8::internal::TorqueGeneratedJSCustomElementsObject" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::ObjectHashTable" = type { %"class.v8::internal::ObjectHashTableBase" }
%"class.v8::internal::ObjectHashTableBase" = type { %"class.v8::internal::HashTable" }
%"class.v8::internal::HashTable" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::HashTableBase" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1178", %"class.v8::internal::Handle.1136", %"class.v8::internal::Handle.1136", %"class.v8::internal::Handle.1182", %"class.v8::internal::Handle.1136", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1178" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1182" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1136" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::ZoneUnorderedSet" = type { %"class.std::__1::unordered_set.1184" }
%"class.std::__1::unordered_set.1184" = type { %"class.std::__1::__hash_table.1185" }
%"class.std::__1::__hash_table.1185" = type <{ %"class.std::__1::unique_ptr.1186", %"class.std::__1::__compressed_pair.1195", %"class.std::__1::__compressed_pair.1199", %"class.std::__1::__compressed_pair.1201", [4 x i8] }>
%"class.std::__1::unique_ptr.1186" = type { %"class.std::__1::__compressed_pair.1187" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188", %"struct.std::__1::__compressed_pair_elem.1190" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"struct.std::__1::__hash_node_base.1189"** }
%"struct.std::__1::__hash_node_base.1189" = type { %"struct.std::__1::__hash_node_base.1189"* }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"class.std::__1::__bucket_list_deallocator.1191" }
%"class.std::__1::__bucket_list_deallocator.1191" = type { %"class.std::__1::__compressed_pair.1192" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"class.v8::internal::ZoneAllocator.1194" }
%"class.v8::internal::ZoneAllocator.1194" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196", %"struct.std::__1::__compressed_pair_elem.1197" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"struct.std::__1::__hash_node_base.1189" }
%"struct.std::__1::__compressed_pair_elem.1197" = type { %"class.v8::internal::ZoneAllocator.1198" }
%"class.v8::internal::ZoneAllocator.1198" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::ZoneVector.1206" = type { %"class.std::__1::vector.1207" }
%"class.std::__1::vector.1207" = type { %"class.std::__1::__vector_base.1208" }
%"class.std::__1::__vector_base.1208" = type { %"class.v8::internal::SourceTextModule"*, %"class.v8::internal::SourceTextModule"*, %"class.std::__1::__compressed_pair.1209" }
%"class.std::__1::__compressed_pair.1209" = type { %"struct.std::__1::__compressed_pair_elem.1210", %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1210" = type { %"class.v8::internal::SourceTextModule"* }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.v8::internal::ZoneAllocator.1212" }
%"class.v8::internal::ZoneAllocator.1212" = type { %"class.v8::internal::Zone"* }
%"struct.std::__1::__hash_node.1237" = type { %"struct.std::__1::__hash_node_base.1189", i64, %"class.v8::internal::Module" }

$_ZNSt3__112__hash_tableIN2v88internal6ModuleENS3_4HashENS_8equal_toIS3_EENS2_13ZoneAllocatorIS3_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIN2v88internal6ModuleENS3_4HashENS_8equal_toIS3_EENS2_13ZoneAllocatorIS3_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIN2v88internal6ModuleENS3_4HashENS_8equal_toIS3_EENS2_13ZoneAllocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_ = comdat any

@__func__._ZN2v88internal6Module11InstantiateEPNS0_7IsolateENS0_6HandleIS1_EENS_5LocalINS_7ContextEEEPFNS_10MaybeLocalINS_6ModuleEEES8_NS6_INS_6StringEEENS6_INS_10FixedArrayEEENS6_ISA_EEEPFSB_S8_SD_SG_E = private unnamed_addr constant [12 x i8] c"Instantiate\00", align 1
@_ZN2v88internal28FLAG_harmony_top_level_awaitE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [68 x i8] c"module->status() == kInstantiated || module->status() == kEvaluated\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"module->status() == kInstantiated\00", align 1
@__func__._ZN2v88internal6Module18GetModuleNamespaceEPNS0_7IsolateENS0_6HandleIS1_EE = private unnamed_addr constant [19 x i8] c"GetModuleNamespace\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"JSModuleNamespace\00", align 1
@__func__._ZNK2v88internal6Module12IsGraphAsyncEPNS0_7IsolateE = private unnamed_addr constant [13 x i8] c"IsGraphAsync\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"status() >= kEvaluated\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Module9SetStatusENS1_6StatusE(%"class.v8::internal::Module"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Module", %"class.v8::internal::Module"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = shl i32 %1, 1
  %6 = add i64 %4, 11
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 %5, i32* %7 monotonic, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Module32RecordErrorUsingPendingExceptionEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %6 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %5, align 8
  %7 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %6, i64 %4) #7
  br label %23

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = icmp eq i64* %12, %14
  br i1 %15, label %16, label %18

16:                                               ; preds = %10
  %17 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %18

18:                                               ; preds = %16, %10
  %19 = phi i64* [ %17, %16 ], [ %12, %10 ]
  %20 = ptrtoint i64* %19 to i64
  %21 = add i64 %20, 8
  %22 = inttoptr i64 %21 to i64*
  store i64* %22, i64** %11, align 8
  store i64 %4, i64* %19, align 8
  br label %23

23:                                               ; preds = %8, %18
  %24 = phi i64* [ %9, %8 ], [ %19, %18 ]
  tail call void @_ZN2v88internal6Module11RecordErrorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %24)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Module11RecordErrorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::SourceTextModule", align 8
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = icmp eq i16 %14, 155
  br i1 %15, label %16, label %60

16:                                               ; preds = %3
  %17 = bitcast %"class.v8::internal::SourceTextModule"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  %18 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %18, align 8
  %19 = call i64 @_ZNK2v88internal16SourceTextModule21GetSharedFunctionInfoEv(%"class.v8::internal::SourceTextModule"* nonnull %4) #7
  %20 = load i64, i64* %18, align 8
  %21 = add i64 %20, 27
  %22 = inttoptr i64 %21 to i32*
  %23 = trunc i64 %19 to i32
  store atomic volatile i32 %23, i32* %22 monotonic, align 4
  %24 = load i64, i64* %18, align 8
  %25 = add i64 %24, 27
  %26 = and i64 %19, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %16
  %29 = and i64 %24, -262144
  %30 = or i64 %29, 8
  %31 = inttoptr i64 %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 262144
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %28
  %36 = or i64 %29, 16
  %37 = inttoptr i64 %36 to %"class.v8::internal::Heap"**
  %38 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %37, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %38, i64 %24, i64 %25, i64 %19) #7
  %39 = load i64, i64* %18, align 8
  %40 = add i64 %39, 27
  br label %41

41:                                               ; preds = %35, %28, %16
  %42 = phi i64 [ %40, %35 ], [ %25, %28 ], [ %25, %16 ]
  %43 = phi i64 [ %39, %35 ], [ %24, %28 ], [ %24, %16 ]
  %44 = and i64 %19, -262144
  %45 = or i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 24
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %41
  %51 = and i64 %43, -262144
  %52 = or i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, 24
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %50
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %43, i64 %42, i64 %19) #7
  br label %58

58:                                               ; preds = %41, %50, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  %59 = load i64, i64* %1, align 8
  br label %60

60:                                               ; preds = %58, %3
  %61 = phi i64 [ %59, %58 ], [ %5, %3 ]
  %62 = add i64 %61, 11
  %63 = inttoptr i64 %62 to i32*
  store atomic volatile i32 12, i32* %63 monotonic, align 4
  %64 = load i64, i64* %2, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  %66 = ptrtoint %"class.v8::internal::Heap"* %65 to i64
  %67 = add i64 %66, -41416
  %68 = inttoptr i64 %67 to %"class.v8::internal::Isolate"*
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %68, i64 0, i32 0, i32 7, i32 0, i64 33
  %70 = load i64, i64* %69, align 8
  %71 = trunc i64 %64 to i32
  %72 = trunc i64 %70 to i32
  %73 = icmp eq i32 %71, %72
  %74 = load i64, i64* %1, align 8
  br i1 %73, label %103, label %75

75:                                               ; preds = %60
  %76 = add i64 %74, 19
  %77 = inttoptr i64 %76 to i32*
  store atomic volatile i32 %71, i32* %77 monotonic, align 4
  %78 = and i64 %64, 1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %134, label %80

80:                                               ; preds = %75
  %81 = and i64 %74, -262144
  %82 = or i64 %81, 8
  %83 = inttoptr i64 %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 262144
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %91, label %87

87:                                               ; preds = %80
  %88 = or i64 %81, 16
  %89 = inttoptr i64 %88 to %"class.v8::internal::Heap"**
  %90 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %89, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %90, i64 %74, i64 %76, i64 %64) #7
  br label %91

91:                                               ; preds = %87, %80
  %92 = and i64 %64, -262144
  %93 = or i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 24
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %134, label %98

98:                                               ; preds = %91
  %99 = load i64, i64* %83, align 8
  %100 = and i64 %99, 24
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %134

102:                                              ; preds = %98
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %74, i64 %76, i64 %64) #7
  br label %134

103:                                              ; preds = %60
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %74, 19
  %107 = inttoptr i64 %106 to i32*
  %108 = trunc i64 %105 to i32
  store atomic volatile i32 %108, i32* %107 monotonic, align 4
  %109 = and i64 %105, 1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %134, label %111

111:                                              ; preds = %103
  %112 = and i64 %74, -262144
  %113 = or i64 %112, 8
  %114 = inttoptr i64 %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = and i64 %115, 262144
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %122, label %118

118:                                              ; preds = %111
  %119 = or i64 %112, 16
  %120 = inttoptr i64 %119 to %"class.v8::internal::Heap"**
  %121 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %120, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %121, i64 %74, i64 %106, i64 %105) #7
  br label %122

122:                                              ; preds = %118, %111
  %123 = and i64 %105, -262144
  %124 = or i64 %123, 8
  %125 = inttoptr i64 %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = and i64 %126, 24
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %122
  %130 = load i64, i64* %114, align 8
  %131 = and i64 %130, 24
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %129
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %74, i64 %106, i64 %105) #7
  br label %134

134:                                              ; preds = %133, %129, %122, %103, %102, %98, %91, %75
  ret void
}

declare i64 @_ZNK2v88internal16SourceTextModule21GetSharedFunctionInfoEv(%"class.v8::internal::SourceTextModule"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Module10ResetGraphEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = add i64 %3, 11
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = ashr i32 %6, 1
  %8 = add nsw i32 %7, -1
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %10, label %124

10:                                               ; preds = %2
  %11 = and i64 %3, -4294967296
  %12 = add i64 %3, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp eq i16 %19, 155
  br i1 %20, label %21, label %45

21:                                               ; preds = %10
  %22 = add i64 %3, 39
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %11, %25
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %28 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %27, align 8
  %29 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %21
  %31 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %28, i64 %26) #7
  br label %45

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %34, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %40

40:                                               ; preds = %38, %32
  %41 = phi i64* [ %39, %38 ], [ %34, %32 ]
  %42 = ptrtoint i64* %41 to i64
  %43 = add i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  store i64* %44, i64** %33, align 8
  store i64 %26, i64* %41, align 8
  br label %45

45:                                               ; preds = %10, %40, %30
  %46 = phi i64* [ %31, %30 ], [ %41, %40 ], [ null, %10 ]
  tail call void @_ZN2v88internal6Module5ResetEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1)
  %47 = load i64, i64* %1, align 8
  %48 = and i64 %47, -4294967296
  %49 = add i64 %47, -1
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %48, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = icmp eq i16 %56, 155
  br i1 %57, label %58, label %124

58:                                               ; preds = %45
  %59 = load i64, i64* %46, align 8
  %60 = add i64 %59, 3
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %124

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  br label %68

68:                                               ; preds = %64, %115
  %69 = phi i64 [ 0, %64 ], [ %116, %115 ]
  %70 = phi i64 [ %59, %64 ], [ %117, %115 ]
  %71 = and i64 %70, -4294967296
  %72 = trunc i64 %69 to i32
  %73 = shl i32 %72, 2
  %74 = sext i32 %73 to i64
  %75 = add i64 %70, 7
  %76 = add i64 %75, %74
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %71, %79
  %81 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %65, align 8
  %82 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %81, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %68
  %84 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %81, i64 %80) #7
  %85 = load i64, i64* %84, align 8
  br label %97

86:                                               ; preds = %68
  %87 = load i64*, i64** %66, align 8
  %88 = load i64*, i64** %67, align 8
  %89 = icmp eq i64* %87, %88
  br i1 %89, label %90, label %92

90:                                               ; preds = %86
  %91 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %92

92:                                               ; preds = %90, %86
  %93 = phi i64* [ %91, %90 ], [ %87, %86 ]
  %94 = ptrtoint i64* %93 to i64
  %95 = add i64 %94, 8
  %96 = inttoptr i64 %95 to i64*
  store i64* %96, i64** %66, align 8
  store i64 %80, i64* %93, align 8
  br label %97

97:                                               ; preds = %83, %92
  %98 = phi i64 [ %85, %83 ], [ %80, %92 ]
  %99 = phi i64* [ %84, %83 ], [ %93, %92 ]
  %100 = and i64 %98, 1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = and i64 %98, -4294967296
  %104 = add i64 %98, -1
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %103, %107
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load atomic i16, i16* %110 monotonic, align 2
  %112 = add i16 %111, -155
  %113 = icmp ult i16 %112, 2
  br i1 %113, label %114, label %115

114:                                              ; preds = %102
  tail call void @_ZN2v88internal6Module10ResetGraphEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %99)
  br label %115

115:                                              ; preds = %97, %102, %114
  %116 = add nuw nsw i64 %69, 1
  %117 = load i64, i64* %46, align 8
  %118 = add i64 %117, 3
  %119 = inttoptr i64 %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = ashr i32 %120, 1
  %122 = sext i32 %121 to i64
  %123 = icmp slt i64 %116, %122
  br i1 %123, label %68, label %124

124:                                              ; preds = %115, %58, %2, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Module5ResetEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = add i64 %3, 31
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %4, %16
  %18 = add i64 %17, 3
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = ashr i32 %20, 1
  %22 = tail call i64* @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %0, i32 %21, i8 zeroext 0, i32 0) #7
  %23 = load i64, i64* %1, align 8
  %24 = and i64 %23, -4294967296
  %25 = add i64 %23, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 155
  br i1 %33, label %34, label %36

34:                                               ; preds = %2
  tail call void @_ZN2v88internal16SourceTextModule5ResetEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1) #7
  %35 = load i64, i64* %1, align 8
  br label %36

36:                                               ; preds = %34, %2
  %37 = phi i64 [ %35, %34 ], [ %23, %2 ]
  %38 = load i64, i64* %22, align 8
  %39 = add i64 %37, 3
  %40 = inttoptr i64 %39 to i32*
  %41 = trunc i64 %38 to i32
  store atomic volatile i32 %41, i32* %40 monotonic, align 4
  %42 = and i64 %38, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %36
  %45 = and i64 %37, -262144
  %46 = or i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 262144
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %44
  %52 = or i64 %45, 16
  %53 = inttoptr i64 %52 to %"class.v8::internal::Heap"**
  %54 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %53, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %54, i64 %37, i64 %39, i64 %38) #7
  br label %55

55:                                               ; preds = %51, %44, %36
  %56 = and i64 %38, -262144
  %57 = or i64 %56, 8
  %58 = inttoptr i64 %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, 24
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %55
  %63 = and i64 %37, -262144
  %64 = or i64 %63, 8
  %65 = inttoptr i64 %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 24
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %62
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %37, i64 %39, i64 %38) #7
  br label %70

70:                                               ; preds = %55, %62, %69
  %71 = load i64, i64* %1, align 8
  %72 = add i64 %71, 11
  %73 = inttoptr i64 %72 to i32*
  store atomic volatile i32 0, i32* %73 monotonic, align 4
  ret void
}

declare i64* @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #2

declare void @_ZN2v88internal16SourceTextModule5ResetEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal6Module12GetExceptionEv(%"class.v8::internal::Module"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Module", %"class.v8::internal::Module"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 19
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Module13ResolveExportEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEES7_NS0_15MessageLocationEbPNS1_10ResolveSetE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, %"class.v8::internal::MessageLocation"* nocapture readonly byval(%"class.v8::internal::MessageLocation") align 8, i1 zeroext, %"class.v8::internal::Module::ResolveSet"*) local_unnamed_addr #0 align 2 {
  %8 = load i64, i64* %1, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp eq i16 %17, 155
  br i1 %18, label %19, label %21

19:                                               ; preds = %7
  %20 = tail call i64* @_ZN2v88internal16SourceTextModule13ResolveExportEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEES7_NS0_15MessageLocationEbPNS0_6Module10ResolveSetE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i64* %3, %"class.v8::internal::MessageLocation"* nonnull byval(%"class.v8::internal::MessageLocation") align 8 %4, i1 zeroext %5, %"class.v8::internal::Module::ResolveSet"* %6) #7
  br label %23

21:                                               ; preds = %7
  %22 = tail call i64* @_ZN2v88internal15SyntheticModule13ResolveExportEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEES7_NS0_15MessageLocationEb(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i64* %3, %"class.v8::internal::MessageLocation"* nonnull byval(%"class.v8::internal::MessageLocation") align 8 %4, i1 zeroext %5) #7
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i64* [ %20, %19 ], [ %22, %21 ]
  ret i64* %24
}

declare i64* @_ZN2v88internal16SourceTextModule13ResolveExportEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEES7_NS0_15MessageLocationEbPNS0_6Module10ResolveSetE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, %"class.v8::internal::MessageLocation"* byval(%"class.v8::internal::MessageLocation") align 8, i1 zeroext, %"class.v8::internal::Module::ResolveSet"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal15SyntheticModule13ResolveExportEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEES7_NS0_15MessageLocationEb(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, %"class.v8::internal::MessageLocation"* byval(%"class.v8::internal::MessageLocation") align 8, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6Module11InstantiateEPNS0_7IsolateENS0_6HandleIS1_EENS_5LocalINS_7ContextEEEPFNS_10MaybeLocalINS_6ModuleEEES8_NS6_INS_6StringEEENS6_INS_10FixedArrayEEENS6_ISA_EEEPFSB_S8_SD_SG_E(%"class.v8::internal::Isolate"*, i64*, %"class.v8::Context"*, {}*, {}*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::Zone", align 8
  %7 = alloca %"class.v8::internal::ZoneForwardList", align 8
  %8 = alloca i32, align 4
  %9 = tail call zeroext i1 @_ZN2v88internal6Module18PrepareInstantiateEPNS0_7IsolateENS0_6HandleIS1_EENS_5LocalINS_7ContextEEEPFNS_10MaybeLocalINS_6ModuleEEES8_NS6_INS_6StringEEENS6_INS_10FixedArrayEEENS6_ISA_EEEPFSB_S8_SD_SG_E(%"class.v8::internal::Isolate"* %0, i64* %1, %"class.v8::Context"* %2, {}* %3, {}* %4)
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  tail call void @_ZN2v88internal6Module10ResetGraphEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1)
  br label %32

11:                                               ; preds = %5
  %12 = bitcast %"class.v8::internal::Zone"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %12) #7
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 34
  %14 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %13, align 8
  call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %6, %"class.v8::internal::AccountingAllocator"* %14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__._ZN2v88internal6Module11InstantiateEPNS0_7IsolateENS0_6HandleIS1_EENS_5LocalINS_7ContextEEEPFNS_10MaybeLocalINS_6ModuleEEES8_NS6_INS_6StringEEENS6_INS_10FixedArrayEEENS6_ISA_EEEPFSB_S8_SD_SG_E, i64 0, i64 0), i1 zeroext false) #7
  %15 = bitcast %"class.v8::internal::ZoneForwardList"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #7
  %16 = ptrtoint %"class.v8::internal::Zone"* %6 to i64
  %17 = bitcast %"class.v8::internal::ZoneForwardList"* %7 to i64*
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::ZoneForwardList", %"class.v8::internal::ZoneForwardList"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::__compressed_pair_elem.1148"* %18 to i64*
  store i64 %16, i64* %19, align 8
  %20 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #7
  store i32 0, i32* %8, align 4
  %21 = call zeroext i1 @_ZN2v88internal6Module17FinishInstantiateEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_15ZoneForwardListINS4_INS0_16SourceTextModuleEEEEEPjPNS0_4ZoneE(%"class.v8::internal::Isolate"* %0, i64* %1, %"class.v8::internal::ZoneForwardList"* nonnull %7, i32* nonnull %8, %"class.v8::internal::Zone"* nonnull %6)
  br i1 %21, label %23, label %22

22:                                               ; preds = %11
  call void @_ZN2v88internal6Module10ResetGraphEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1)
  br label %23

23:                                               ; preds = %11, %22
  %24 = phi i1 [ false, %22 ], [ true, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #7
  %25 = getelementptr inbounds %"class.v8::internal::ZoneForwardList", %"class.v8::internal::ZoneForwardList"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %26

26:                                               ; preds = %26, %23
  %27 = phi %"struct.std::__1::__forward_list_node"** [ %25, %23 ], [ %30, %26 ]
  %28 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__forward_list_node"* %28, null
  %30 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %28, i64 0, i32 0, i32 0
  br i1 %29, label %31, label %26

31:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #7
  call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %12) #7
  br label %32

32:                                               ; preds = %31, %10
  %33 = phi i1 [ %24, %31 ], [ false, %10 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6Module18PrepareInstantiateEPNS0_7IsolateENS0_6HandleIS1_EENS_5LocalINS_7ContextEEEPFNS_10MaybeLocalINS_6ModuleEEES8_NS6_INS_6StringEEENS6_INS_10FixedArrayEEENS6_ISA_EEEPFSB_S8_SD_SG_E(%"class.v8::internal::Isolate"*, i64*, %"class.v8::Context"*, {}*, {}*) local_unnamed_addr #0 align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 1
  br i1 %10, label %44, label %11

11:                                               ; preds = %5
  store atomic volatile i32 2, i32* %8 monotonic, align 4
  %12 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #7
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 3
  %14 = load atomic i64, i64* %13 monotonic, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #7
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %17, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #7
  br label %44

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6
  %25 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %24) #7
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %0) #7
  br label %44

28:                                               ; preds = %11, %23
  %29 = load i64, i64* %1, align 8
  %30 = and i64 %29, -4294967296
  %31 = add i64 %29, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 155
  br i1 %39, label %40, label %42

40:                                               ; preds = %28
  %41 = tail call zeroext i1 @_ZN2v88internal16SourceTextModule18PrepareInstantiateEPNS0_7IsolateENS0_6HandleIS1_EENS_5LocalINS_7ContextEEEPFNS_10MaybeLocalINS_6ModuleEEES8_NS6_INS_6StringEEENS6_INS_10FixedArrayEEENS6_ISA_EEEPFSB_S8_SD_SG_E(%"class.v8::internal::Isolate"* %0, i64* %1, %"class.v8::Context"* %2, {}* %3, {}* %4) #7
  br label %44

42:                                               ; preds = %28
  %43 = tail call zeroext i1 @_ZN2v88internal15SyntheticModule18PrepareInstantiateEPNS0_7IsolateENS0_6HandleIS1_EENS_5LocalINS_7ContextEEE(%"class.v8::internal::Isolate"* %0, i64* %1, %"class.v8::Context"* %2) #7
  br label %44

44:                                               ; preds = %26, %21, %5, %42, %40
  %45 = phi i1 [ %41, %40 ], [ %43, %42 ], [ true, %5 ], [ false, %21 ], [ false, %26 ]
  ret i1 %45
}

declare void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"*, %"class.v8::internal::AccountingAllocator"*, i8*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6Module17FinishInstantiateEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_15ZoneForwardListINS4_INS0_16SourceTextModuleEEEEEPjPNS0_4ZoneE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::ZoneForwardList"*, i32*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 3
  br i1 %10, label %44, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #7
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 3
  %14 = load atomic i64, i64* %13 monotonic, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #7
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %17, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #7
  br label %44

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6
  %25 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %24) #7
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %0) #7
  br label %44

28:                                               ; preds = %11, %23
  %29 = load i64, i64* %1, align 8
  %30 = and i64 %29, -4294967296
  %31 = add i64 %29, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 155
  br i1 %39, label %40, label %42

40:                                               ; preds = %28
  %41 = tail call zeroext i1 @_ZN2v88internal16SourceTextModule17FinishInstantiateEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_15ZoneForwardListIS5_EEPjPNS0_4ZoneE(%"class.v8::internal::Isolate"* %0, i64* %1, %"class.v8::internal::ZoneForwardList"* %2, i32* %3, %"class.v8::internal::Zone"* %4) #7
  br label %44

42:                                               ; preds = %28
  %43 = tail call zeroext i1 @_ZN2v88internal15SyntheticModule17FinishInstantiateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1) #7
  br label %44

44:                                               ; preds = %26, %21, %5, %42, %40
  %45 = phi i1 [ %41, %40 ], [ %43, %42 ], [ true, %5 ], [ false, %21 ], [ false, %26 ]
  ret i1 %45
}

; Function Attrs: nounwind
declare void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"*) unnamed_addr #4

declare i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"*) local_unnamed_addr #2

declare i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal16SourceTextModule18PrepareInstantiateEPNS0_7IsolateENS0_6HandleIS1_EENS_5LocalINS_7ContextEEEPFNS_10MaybeLocalINS_6ModuleEEES8_NS6_INS_6StringEEENS6_INS_10FixedArrayEEENS6_ISA_EEEPFSB_S8_SD_SG_E(%"class.v8::internal::Isolate"*, i64*, %"class.v8::Context"*, {}*, {}*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal15SyntheticModule18PrepareInstantiateEPNS0_7IsolateENS0_6HandleIS1_EENS_5LocalINS_7ContextEEE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::Context"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal16SourceTextModule17FinishInstantiateEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_15ZoneForwardListIS5_EEPjPNS0_4ZoneE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::ZoneForwardList"*, i32*, %"class.v8::internal::Zone"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal15SyntheticModule17FinishInstantiateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Module8EvaluateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #7
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 3
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp ult i64 %3, %5
  br i1 %6, label %7, label %19

7:                                                ; preds = %2
  %8 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #7
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #7
  br label %60

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6
  %16 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %15) #7
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %0) #7
  br label %60

19:                                               ; preds = %2, %14
  %20 = load i8, i8* @_ZN2v88internal28FLAG_harmony_top_level_awaitE, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = tail call i64* @_ZN2v88internal6Module18EvaluateMaybeAsyncEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1)
  %24 = ptrtoint i64* %23 to i64
  br label %60

25:                                               ; preds = %19
  %26 = load i64, i64* %1, align 8
  %27 = add i64 %26, 11
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = ashr i32 %29, 1
  switch i32 %30, label %42 [
    i32 6, label %31
    i32 5, label %39
    i32 3, label %43
  ], !prof !3

31:                                               ; preds = %25
  %32 = and i64 %26, -4294967296
  %33 = add i64 %26, 19
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %32, %36
  %38 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %37, %"class.v8::internal::MessageLocation"* null) #7
  br label %60

39:                                               ; preds = %25
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %41 = ptrtoint i64* %40 to i64
  br label %60

42:                                               ; preds = %25
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0)) #8
  unreachable

43:                                               ; preds = %25
  %44 = and i64 %26, -4294967296
  %45 = add i64 %26, -1
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = icmp eq i16 %52, 155
  br i1 %53, label %54, label %57

54:                                               ; preds = %43
  %55 = tail call i64* @_ZN2v88internal16SourceTextModule8EvaluateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1) #7
  %56 = ptrtoint i64* %55 to i64
  br label %60

57:                                               ; preds = %43
  %58 = tail call i64* @_ZN2v88internal15SyntheticModule8EvaluateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1) #7
  %59 = ptrtoint i64* %58 to i64
  br label %60

60:                                               ; preds = %57, %54, %39, %31, %17, %12, %22
  %61 = phi i64 [ 0, %12 ], [ 0, %17 ], [ %24, %22 ], [ 0, %31 ], [ %41, %39 ], [ %56, %54 ], [ %59, %57 ]
  %62 = inttoptr i64 %61 to i64*
  ret i64* %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Module18EvaluateMaybeAsyncEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = add i64 %3, 11
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = ashr i32 %6, 1
  switch i32 %7, label %74 [
    i32 6, label %8
    i32 3, label %114
    i32 5, label %75
  ], !prof !3

8:                                                ; preds = %2
  %9 = and i64 %3, -4294967296
  %10 = add i64 %3, 23
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %9, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 1101
  br i1 %23, label %24, label %43

24:                                               ; preds = %8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %26 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %25, align 8
  %27 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %26, i64 %14) #7
  br label %165

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %34 = load i64*, i64** %33, align 8
  %35 = icmp eq i64* %32, %34
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  %37 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %38

38:                                               ; preds = %36, %30
  %39 = phi i64* [ %37, %36 ], [ %32, %30 ]
  %40 = ptrtoint i64* %39 to i64
  %41 = add i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  store i64* %42, i64** %31, align 8
  store i64 %14, i64* %39, align 8
  br label %165

43:                                               ; preds = %8
  %44 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %45 = tail call i64* @_ZN2v88internal7Factory12NewJSPromiseEv(%"class.v8::internal::Factory"* %44) #7
  %46 = load i64, i64* %1, align 8
  %47 = and i64 %46, -4294967296
  %48 = add i64 %46, 19
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %47, %51
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %54 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %53, align 8
  %55 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %43
  %57 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %54, i64 %52) #7
  br label %71

58:                                               ; preds = %43
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %62 = load i64*, i64** %61, align 8
  %63 = icmp eq i64* %60, %62
  br i1 %63, label %64, label %66

64:                                               ; preds = %58
  %65 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %66

66:                                               ; preds = %64, %58
  %67 = phi i64* [ %65, %64 ], [ %60, %58 ]
  %68 = ptrtoint i64* %67 to i64
  %69 = add i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  store i64* %70, i64** %59, align 8
  store i64 %52, i64* %67, align 8
  br label %71

71:                                               ; preds = %56, %66
  %72 = phi i64* [ %57, %56 ], [ %67, %66 ]
  %73 = tail call i64* @_ZN2v88internal9JSPromise6RejectENS0_6HandleIS1_EENS2_INS0_6ObjectEEEb(i64* %45, i64* %72, i1 zeroext true) #7
  br label %165

74:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0)) #8
  unreachable

75:                                               ; preds = %2
  %76 = and i64 %3, -4294967296
  %77 = add i64 %3, -1
  %78 = inttoptr i64 %77 to i32*
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %76, %80
  %82 = add i64 %81, 7
  %83 = inttoptr i64 %82 to i16*
  %84 = load atomic i16, i16* %83 monotonic, align 2
  %85 = icmp eq i16 %84, 155
  br i1 %85, label %86, label %114

86:                                               ; preds = %75
  %87 = icmp sgt i32 %6, -1
  br i1 %87, label %89, label %88, !prof !4

88:                                               ; preds = %86
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0)) #8
  unreachable

89:                                               ; preds = %86
  %90 = add i64 %3, 47
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %76, %93
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %96 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %95, align 8
  %97 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %96, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %89
  %99 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %96, i64 %94) #7
  %100 = load i64, i64* %99, align 8
  br label %114

101:                                              ; preds = %89
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %103 = load i64*, i64** %102, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %105 = load i64*, i64** %104, align 8
  %106 = icmp eq i64* %103, %105
  br i1 %106, label %107, label %109

107:                                              ; preds = %101
  %108 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %109

109:                                              ; preds = %107, %101
  %110 = phi i64* [ %108, %107 ], [ %103, %101 ]
  %111 = ptrtoint i64* %110 to i64
  %112 = add i64 %111, 8
  %113 = inttoptr i64 %112 to i64*
  store i64* %113, i64** %102, align 8
  store i64 %94, i64* %110, align 8
  br label %114

114:                                              ; preds = %109, %98, %2, %75
  %115 = phi i64 [ %3, %75 ], [ %3, %2 ], [ %100, %98 ], [ %94, %109 ]
  %116 = phi i64* [ %1, %75 ], [ %1, %2 ], [ %99, %98 ], [ %110, %109 ]
  %117 = and i64 %115, -4294967296
  %118 = add i64 %115, 23
  %119 = inttoptr i64 %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, -1
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %117, %126
  %128 = add i64 %127, 7
  %129 = inttoptr i64 %128 to i16*
  %130 = load atomic i16, i16* %129 monotonic, align 2
  %131 = icmp eq i16 %130, 1101
  br i1 %131, label %132, label %151

132:                                              ; preds = %114
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %134 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %133, align 8
  %135 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %134, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %132
  %137 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %134, i64 %122) #7
  br label %165

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %140 = load i64*, i64** %139, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %142 = load i64*, i64** %141, align 8
  %143 = icmp eq i64* %140, %142
  br i1 %143, label %144, label %146

144:                                              ; preds = %138
  %145 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %146

146:                                              ; preds = %144, %138
  %147 = phi i64* [ %145, %144 ], [ %140, %138 ]
  %148 = ptrtoint i64* %147 to i64
  %149 = add i64 %148, 8
  %150 = inttoptr i64 %149 to i64*
  store i64* %150, i64** %139, align 8
  store i64 %122, i64* %147, align 8
  br label %165

151:                                              ; preds = %114
  %152 = add i64 %115, -1
  %153 = inttoptr i64 %152 to i32*
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %117, %155
  %157 = add i64 %156, 7
  %158 = inttoptr i64 %157 to i16*
  %159 = load atomic i16, i16* %158 monotonic, align 2
  %160 = icmp eq i16 %159, 155
  br i1 %160, label %161, label %163

161:                                              ; preds = %151
  %162 = tail call i64* @_ZN2v88internal16SourceTextModule18EvaluateMaybeAsyncEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %116) #7
  br label %165

163:                                              ; preds = %151
  %164 = tail call i64* @_ZN2v88internal15SyntheticModule8EvaluateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %116) #7
  br label %165

165:                                              ; preds = %146, %136, %38, %28, %163, %161, %71
  %166 = phi i64* [ %45, %71 ], [ %162, %161 ], [ %164, %163 ], [ %29, %28 ], [ %39, %38 ], [ %137, %136 ], [ %147, %146 ]
  ret i64* %166
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Module13InnerEvaluateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = add i64 %3, 11
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = ashr i32 %6, 1
  switch i32 %7, label %19 [
    i32 6, label %8
    i32 5, label %16
    i32 3, label %20
  ], !prof !3

8:                                                ; preds = %2
  %9 = and i64 %3, -4294967296
  %10 = add i64 %3, 19
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %14, %"class.v8::internal::MessageLocation"* null) #7
  br label %37

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %18 = ptrtoint i64* %17 to i64
  br label %37

19:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0)) #8
  unreachable

20:                                               ; preds = %2
  %21 = and i64 %3, -4294967296
  %22 = add i64 %3, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp eq i16 %29, 155
  br i1 %30, label %31, label %34

31:                                               ; preds = %20
  %32 = tail call i64* @_ZN2v88internal16SourceTextModule8EvaluateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1) #7
  %33 = ptrtoint i64* %32 to i64
  br label %37

34:                                               ; preds = %20
  %35 = tail call i64* @_ZN2v88internal15SyntheticModule8EvaluateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1) #7
  %36 = ptrtoint i64* %35 to i64
  br label %37

37:                                               ; preds = %34, %31, %16, %8
  %38 = phi i64 [ 0, %8 ], [ %18, %16 ], [ %33, %31 ], [ %36, %34 ]
  %39 = inttoptr i64 %38 to i64*
  ret i64* %39
}

declare i64* @_ZN2v88internal7Factory12NewJSPromiseEv(%"class.v8::internal::Factory"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal9JSPromise6RejectENS0_6HandleIS1_EENS2_INS0_6ObjectEEEb(i64*, i64*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

declare i64* @_ZN2v88internal16SourceTextModule18EvaluateMaybeAsyncEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal15SyntheticModule8EvaluateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal16SourceTextModule8EvaluateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Module18GetModuleNamespaceEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.anon, align 8
  %4 = alloca %"class.v8::internal::Isolate"*, align 8
  %5 = alloca %"class.v8::internal::Zone", align 8
  %6 = alloca %"class.v8::internal::UnorderedModuleSet", align 8
  %7 = alloca %"class.v8::internal::ZoneVector", align 8
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %4, align 8
  %8 = load i64, i64* %1, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, 15
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %16 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %17 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %2
  %19 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %16, i64 %14) #7
  %20 = load i64, i64* %19, align 8
  br label %35

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi i64* [ %28, %27 ], [ %23, %21 ]
  %31 = ptrtoint i64* %30 to i64
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  store i64* %33, i64** %22, align 8
  store i64 %14, i64* %30, align 8
  %34 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  br label %35

35:                                               ; preds = %18, %29
  %36 = phi i64 [ %20, %18 ], [ %14, %29 ]
  %37 = phi %"class.v8::internal::Isolate"* [ %0, %18 ], [ %34, %29 ]
  %38 = phi i64* [ %19, %18 ], [ %30, %29 ]
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 0, i32 7, i32 0, i64 4
  %40 = load i64, i64* %39, align 8
  %41 = trunc i64 %36 to i32
  %42 = trunc i64 %40 to i32
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %44, label %849

44:                                               ; preds = %35
  %45 = bitcast %"class.v8::internal::Zone"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %45) #7
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 34
  %47 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %46, align 8
  call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %5, %"class.v8::internal::AccountingAllocator"* %47, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__._ZN2v88internal6Module18GetModuleNamespaceEPNS0_7IsolateENS0_6HandleIS1_EE, i64 0, i64 0), i1 zeroext false) #7
  %48 = bitcast %"class.v8::internal::UnorderedModuleSet"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %48) #7
  %49 = ptrtoint %"class.v8::internal::Zone"* %5 to i64
  %50 = getelementptr inbounds %"class.v8::internal::UnorderedModuleSet", %"class.v8::internal::UnorderedModuleSet"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %51 = bitcast %"struct.std::__1::__compressed_pair_elem.1161"* %50 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #7
  store i64 %49, i64* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::UnorderedModuleSet", %"class.v8::internal::UnorderedModuleSet"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1157"* null, %"struct.std::__1::__hash_node_base.1157"** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::UnorderedModuleSet", %"class.v8::internal::UnorderedModuleSet"* %6, i64 0, i32 0, i32 0, i32 1, i32 1
  %54 = bitcast %"struct.std::__1::__compressed_pair_elem.1165"* %53 to i64*
  store i64 %49, i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::UnorderedModuleSet", %"class.v8::internal::UnorderedModuleSet"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::UnorderedModuleSet", %"class.v8::internal::UnorderedModuleSet"* %6, i64 0, i32 0, i32 0, i32 3
  %57 = bitcast %"class.std::__1::__compressed_pair.1169"* %56 to i32*
  store i32 1065353216, i32* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 2
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 3
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %61, %59
  %63 = icmp ult i64 %62, 16
  br i1 %63, label %64, label %66, !prof !5

64:                                               ; preds = %44
  %65 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* nonnull %5, i64 16) #7
  br label %68

66:                                               ; preds = %44
  %67 = add i64 %59, 16
  store i64 %67, i64* %58, align 8
  br label %68

68:                                               ; preds = %66, %64
  %69 = phi i64 [ %65, %64 ], [ %59, %66 ]
  %70 = inttoptr i64 %69 to %"struct.std::__1::__hash_node_base.1157"**
  %71 = getelementptr inbounds %"class.v8::internal::UnorderedModuleSet", %"class.v8::internal::UnorderedModuleSet"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1157"** %70, %"struct.std::__1::__hash_node_base.1157"*** %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::UnorderedModuleSet", %"class.v8::internal::UnorderedModuleSet"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 2, i64* %72, align 8
  store %"struct.std::__1::__hash_node_base.1157"* null, %"struct.std::__1::__hash_node_base.1157"** %70, align 8
  %73 = load %"struct.std::__1::__hash_node_base.1157"**, %"struct.std::__1::__hash_node_base.1157"*** %71, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1157"*, %"struct.std::__1::__hash_node_base.1157"** %73, i64 1
  store %"struct.std::__1::__hash_node_base.1157"* null, %"struct.std::__1::__hash_node_base.1157"** %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::UnorderedModuleSet", %"class.v8::internal::UnorderedModuleSet"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1157", %"struct.std::__1::__hash_node_base.1157"* %75, i64 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base.1157"*, %"struct.std::__1::__hash_node_base.1157"** %76, align 8
  %78 = icmp eq %"struct.std::__1::__hash_node_base.1157"* %77, null
  br i1 %78, label %140, label %79

79:                                               ; preds = %68
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1157", %"struct.std::__1::__hash_node_base.1157"* %77, i64 1
  %81 = bitcast %"struct.std::__1::__hash_node_base.1157"* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 1
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1157"*, %"struct.std::__1::__hash_node_base.1157"** %73, i64 %83
  store %"struct.std::__1::__hash_node_base.1157"* %75, %"struct.std::__1::__hash_node_base.1157"** %84, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1157", %"struct.std::__1::__hash_node_base.1157"* %77, i64 0, i32 0
  %86 = load %"struct.std::__1::__hash_node_base.1157"*, %"struct.std::__1::__hash_node_base.1157"** %85, align 8
  %87 = icmp eq %"struct.std::__1::__hash_node_base.1157"* %86, null
  br i1 %87, label %140, label %88

88:                                               ; preds = %79, %134
  %89 = phi %"struct.std::__1::__hash_node_base.1157"* [ %138, %134 ], [ %86, %79 ]
  %90 = phi i64 [ %135, %134 ], [ %83, %79 ]
  %91 = phi %"struct.std::__1::__hash_node_base.1157"* [ %136, %134 ], [ %77, %79 ]
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1157", %"struct.std::__1::__hash_node_base.1157"* %89, i64 1
  %93 = bitcast %"struct.std::__1::__hash_node_base.1157"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = and i64 %94, 1
  %96 = icmp eq i64 %95, %90
  br i1 %96, label %134, label %97

97:                                               ; preds = %88
  %98 = load %"struct.std::__1::__hash_node_base.1157"**, %"struct.std::__1::__hash_node_base.1157"*** %71, align 8
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1157"*, %"struct.std::__1::__hash_node_base.1157"** %98, i64 %95
  %100 = load %"struct.std::__1::__hash_node_base.1157"*, %"struct.std::__1::__hash_node_base.1157"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1157"* %100, null
  br i1 %101, label %105, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1157", %"struct.std::__1::__hash_node_base.1157"* %89, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1157"* %103 to i64**
  br label %106

105:                                              ; preds = %97
  store %"struct.std::__1::__hash_node_base.1157"* %91, %"struct.std::__1::__hash_node_base.1157"** %99, align 8
  br label %134

106:                                              ; preds = %111, %102
  %107 = phi %"struct.std::__1::__hash_node_base.1157"* [ %109, %111 ], [ %89, %102 ]
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1157", %"struct.std::__1::__hash_node_base.1157"* %107, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.1157"*, %"struct.std::__1::__hash_node_base.1157"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.1157"* %109, null
  br i1 %110, label %121, label %111

111:                                              ; preds = %106
  %112 = load i64*, i64** %104, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1157", %"struct.std::__1::__hash_node_base.1157"* %109, i64 2
  %114 = bitcast %"struct.std::__1::__hash_node_base.1157"* %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %112, align 8
  %117 = load i64, i64* %115, align 8
  %118 = trunc i64 %116 to i32
  %119 = trunc i64 %117 to i32
  %120 = icmp eq i32 %118, %119
  br i1 %120, label %106, label %121

121:                                              ; preds = %111, %106
  %122 = ptrtoint %"struct.std::__1::__hash_node_base.1157"* %109 to i64
  %123 = bitcast %"struct.std::__1::__hash_node_base.1157"* %107 to i64*
  %124 = bitcast %"struct.std::__1::__hash_node_base.1157"* %91 to i64*
  store i64 %122, i64* %124, align 8
  %125 = load %"struct.std::__1::__hash_node_base.1157"**, %"struct.std::__1::__hash_node_base.1157"*** %71, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1157"*, %"struct.std::__1::__hash_node_base.1157"** %125, i64 %95
  %127 = bitcast %"struct.std::__1::__hash_node_base.1157"** %126 to i64**
  %128 = load i64*, i64** %127, align 8
  %129 = load i64, i64* %128, align 8
  store i64 %129, i64* %123, align 8
  %130 = load %"struct.std::__1::__hash_node_base.1157"**, %"struct.std::__1::__hash_node_base.1157"*** %71, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1157"*, %"struct.std::__1::__hash_node_base.1157"** %130, i64 %95
  %132 = load %"struct.std::__1::__hash_node_base.1157"*, %"struct.std::__1::__hash_node_base.1157"** %131, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1157", %"struct.std::__1::__hash_node_base.1157"* %132, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1157"* %89, %"struct.std::__1::__hash_node_base.1157"** %133, align 8
  br label %134

134:                                              ; preds = %121, %105, %88
  %135 = phi i64 [ %95, %105 ], [ %90, %121 ], [ %90, %88 ]
  %136 = phi %"struct.std::__1::__hash_node_base.1157"* [ %89, %105 ], [ %91, %121 ], [ %89, %88 ]
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1157", %"struct.std::__1::__hash_node_base.1157"* %136, i64 0, i32 0
  %138 = load %"struct.std::__1::__hash_node_base.1157"*, %"struct.std::__1::__hash_node_base.1157"** %137, align 8
  %139 = icmp eq %"struct.std::__1::__hash_node_base.1157"* %138, null
  br i1 %139, label %140, label %88

140:                                              ; preds = %134, %68, %79
  %141 = load i64, i64* %1, align 8
  %142 = and i64 %141, -4294967296
  %143 = add i64 %141, -1
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %142, %146
  %148 = add i64 %147, 7
  %149 = inttoptr i64 %148 to i16*
  %150 = load atomic i16, i16* %149 monotonic, align 2
  %151 = icmp eq i16 %150, 155
  br i1 %151, label %152, label %156

152:                                              ; preds = %140
  %153 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  call void @_ZN2v88internal16SourceTextModule16FetchStarExportsEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_4ZoneEPNS0_18UnorderedModuleSetE(%"class.v8::internal::Isolate"* %153, i64* %1, %"class.v8::internal::Zone"* nonnull %5, %"class.v8::internal::UnorderedModuleSet"* nonnull %6) #7
  %154 = load i64, i64* %1, align 8
  %155 = and i64 %154, -4294967296
  br label %156

156:                                              ; preds = %152, %140
  %157 = phi i64 [ %155, %152 ], [ %142, %140 ]
  %158 = phi i64 [ %154, %152 ], [ %141, %140 ]
  %159 = add i64 %158, 3
  %160 = inttoptr i64 %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = zext i32 %161 to i64
  %163 = or i64 %157, %162
  %164 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %164, i64 0, i32 31, i32 4
  %166 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %165, align 8
  %167 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %166, null
  br i1 %167, label %170, label %168

168:                                              ; preds = %156
  %169 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %166, i64 %163) #7
  br label %183

170:                                              ; preds = %156
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %164, i64 0, i32 31, i32 0
  %172 = load i64*, i64** %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %164, i64 0, i32 31, i32 1
  %174 = load i64*, i64** %173, align 8
  %175 = icmp eq i64* %172, %174
  br i1 %175, label %176, label %178

176:                                              ; preds = %170
  %177 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %164) #7
  br label %178

178:                                              ; preds = %176, %170
  %179 = phi i64* [ %177, %176 ], [ %172, %170 ]
  %180 = ptrtoint i64* %179 to i64
  %181 = add i64 %180, 8
  %182 = inttoptr i64 %181 to i64*
  store i64* %182, i64** %171, align 8
  store i64 %163, i64* %179, align 8
  br label %183

183:                                              ; preds = %168, %178
  %184 = phi i64* [ %169, %168 ], [ %179, %178 ]
  %185 = bitcast %"class.v8::internal::ZoneVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %185) #7
  %186 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %7, i64 0, i32 0, i32 0, i32 2, i32 1
  %187 = bitcast %"struct.std::__1::__compressed_pair_elem.1176"* %186 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 0, i64 24, i1 false) #7
  store i64 %49, i64* %187, align 8
  %188 = load i64, i64* %184, align 8
  %189 = add i64 %188, 7
  %190 = inttoptr i64 %189 to i32*
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = ashr i32 %191, 1
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %7, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %195 = bitcast %"class.v8::internal::Handle.1141"** %194 to i64*
  %196 = bitcast %"class.v8::internal::ZoneVector"* %7 to i64*
  %197 = icmp eq i32 %192, 0
  br i1 %197, label %400, label %198

198:                                              ; preds = %183
  %199 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %7, i64 0, i32 0, i32 0, i32 1
  %200 = bitcast %"class.v8::internal::Handle.1141"** %199 to i64*
  %201 = shl nsw i64 %193, 3
  %202 = load i64, i64* %58, align 8
  %203 = load i64, i64* %60, align 8
  %204 = sub i64 %203, %202
  %205 = icmp ugt i64 %201, %204
  br i1 %205, label %211, label %206, !prof !5

206:                                              ; preds = %198
  %207 = add i64 %202, %201
  store i64 %207, i64* %58, align 8
  %208 = inttoptr i64 %202 to %"class.v8::internal::Handle.1141"*
  %209 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %208, i64 %193
  %210 = ptrtoint %"class.v8::internal::Handle.1141"* %209 to i64
  br label %393

211:                                              ; preds = %198
  %212 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* nonnull %5, i64 %201) #7
  %213 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %7, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.v8::internal::Handle.1141"*, %"class.v8::internal::Handle.1141"** %213, align 8
  %215 = ptrtoint %"class.v8::internal::Handle.1141"* %214 to i64
  %216 = load %"class.v8::internal::Handle.1141"*, %"class.v8::internal::Handle.1141"** %199, align 8
  %217 = inttoptr i64 %212 to %"class.v8::internal::Handle.1141"*
  %218 = inttoptr i64 %212 to i8*
  %219 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %217, i64 %193
  %220 = ptrtoint %"class.v8::internal::Handle.1141"* %219 to i64
  %221 = icmp eq %"class.v8::internal::Handle.1141"* %216, %214
  br i1 %221, label %393, label %222

222:                                              ; preds = %211
  %223 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %216, i64 -1, i32 0, i32 0
  %224 = ptrtoint i64** %223 to i64
  %225 = sub i64 %224, %215
  %226 = lshr i64 %225, 3
  %227 = add nuw nsw i64 %226, 1
  %228 = icmp ult i64 %227, 4
  br i1 %228, label %320, label %229

229:                                              ; preds = %222
  %230 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %216, i64 -1, i32 0, i32 0
  %231 = ptrtoint i64** %230 to i64
  %232 = sub i64 %231, %215
  %233 = lshr i64 %232, 3
  %234 = xor i64 %233, -1
  %235 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %217, i64 %234
  %236 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %216, i64 %234
  %237 = bitcast %"class.v8::internal::Handle.1141"* %236 to i8*
  %238 = icmp ult %"class.v8::internal::Handle.1141"* %235, %216
  %239 = icmp ult i8* %237, %218
  %240 = and i1 %238, %239
  br i1 %240, label %320, label %241

241:                                              ; preds = %229
  %242 = and i64 %227, 4611686018427387900
  %243 = sub nsw i64 0, %242
  %244 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %217, i64 %243
  %245 = sub nsw i64 0, %242
  %246 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %216, i64 %245
  %247 = add nsw i64 %242, -4
  %248 = lshr exact i64 %247, 2
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 1
  %251 = icmp eq i64 %247, 0
  br i1 %251, label %296, label %252

252:                                              ; preds = %241
  %253 = sub nuw nsw i64 %249, %250
  %254 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %217, i64 -1
  %255 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %216, i64 -1
  %256 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %217, i64 -1
  %257 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %216, i64 -1
  br label %258

258:                                              ; preds = %258, %252
  %259 = phi i64 [ 0, %252 ], [ %293, %258 ]
  %260 = phi i64 [ %253, %252 ], [ %294, %258 ]
  %261 = sub i64 0, %259
  %262 = sub i64 0, %259
  %263 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %254, i64 %261
  %264 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %255, i64 %262
  %265 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %264, i64 -1
  %266 = bitcast %"class.v8::internal::Handle.1141"* %265 to <2 x i64>*
  %267 = load <2 x i64>, <2 x i64>* %266, align 8, !alias.scope !6
  %268 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %264, i64 -2
  %269 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %268, i64 -1
  %270 = bitcast %"class.v8::internal::Handle.1141"* %269 to <2 x i64>*
  %271 = load <2 x i64>, <2 x i64>* %270, align 8, !alias.scope !6
  %272 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %263, i64 -1
  %273 = bitcast %"class.v8::internal::Handle.1141"* %272 to <2 x i64>*
  store <2 x i64> %267, <2 x i64>* %273, align 8, !alias.scope !9, !noalias !6
  %274 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %263, i64 -2
  %275 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %274, i64 -1
  %276 = bitcast %"class.v8::internal::Handle.1141"* %275 to <2 x i64>*
  store <2 x i64> %271, <2 x i64>* %276, align 8, !alias.scope !9, !noalias !6
  %277 = sub nuw nsw i64 -4, %259
  %278 = sub nuw nsw i64 -4, %259
  %279 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %256, i64 %277
  %280 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %257, i64 %278
  %281 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %280, i64 -1
  %282 = bitcast %"class.v8::internal::Handle.1141"* %281 to <2 x i64>*
  %283 = load <2 x i64>, <2 x i64>* %282, align 8, !alias.scope !6
  %284 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %280, i64 -2
  %285 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %284, i64 -1
  %286 = bitcast %"class.v8::internal::Handle.1141"* %285 to <2 x i64>*
  %287 = load <2 x i64>, <2 x i64>* %286, align 8, !alias.scope !6
  %288 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %279, i64 -1
  %289 = bitcast %"class.v8::internal::Handle.1141"* %288 to <2 x i64>*
  store <2 x i64> %283, <2 x i64>* %289, align 8, !alias.scope !9, !noalias !6
  %290 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %279, i64 -2
  %291 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %290, i64 -1
  %292 = bitcast %"class.v8::internal::Handle.1141"* %291 to <2 x i64>*
  store <2 x i64> %287, <2 x i64>* %292, align 8, !alias.scope !9, !noalias !6
  %293 = add i64 %259, 8
  %294 = add i64 %260, -2
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %258, !llvm.loop !11

296:                                              ; preds = %258, %241
  %297 = phi i64 [ 0, %241 ], [ %293, %258 ]
  %298 = icmp eq i64 %250, 0
  br i1 %298, label %318, label %299

299:                                              ; preds = %296
  %300 = sub i64 0, %297
  %301 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %217, i64 -1
  %302 = sub i64 0, %297
  %303 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %216, i64 -1
  %304 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %301, i64 %300
  %305 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %303, i64 %302
  %306 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %305, i64 -1
  %307 = bitcast %"class.v8::internal::Handle.1141"* %306 to <2 x i64>*
  %308 = load <2 x i64>, <2 x i64>* %307, align 8, !alias.scope !6
  %309 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %305, i64 -2
  %310 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %309, i64 -1
  %311 = bitcast %"class.v8::internal::Handle.1141"* %310 to <2 x i64>*
  %312 = load <2 x i64>, <2 x i64>* %311, align 8, !alias.scope !6
  %313 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %304, i64 -1
  %314 = bitcast %"class.v8::internal::Handle.1141"* %313 to <2 x i64>*
  store <2 x i64> %308, <2 x i64>* %314, align 8, !alias.scope !9, !noalias !6
  %315 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %304, i64 -2
  %316 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %315, i64 -1
  %317 = bitcast %"class.v8::internal::Handle.1141"* %316 to <2 x i64>*
  store <2 x i64> %312, <2 x i64>* %317, align 8, !alias.scope !9, !noalias !6
  br label %318

318:                                              ; preds = %296, %299
  %319 = icmp eq i64 %227, %242
  br i1 %319, label %390, label %320

320:                                              ; preds = %318, %229, %222
  %321 = phi %"class.v8::internal::Handle.1141"* [ %217, %229 ], [ %217, %222 ], [ %244, %318 ]
  %322 = phi %"class.v8::internal::Handle.1141"* [ %216, %229 ], [ %216, %222 ], [ %246, %318 ]
  %323 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %322, i64 -1, i32 0, i32 0
  %324 = ptrtoint i64** %323 to i64
  %325 = sub i64 %324, %215
  %326 = lshr i64 %325, 3
  %327 = add nuw nsw i64 %326, 1
  %328 = and i64 %327, 7
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %341, label %330

330:                                              ; preds = %320, %330
  %331 = phi %"class.v8::internal::Handle.1141"* [ %334, %330 ], [ %321, %320 ]
  %332 = phi %"class.v8::internal::Handle.1141"* [ %335, %330 ], [ %322, %320 ]
  %333 = phi i64 [ %339, %330 ], [ %328, %320 ]
  %334 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %331, i64 -1
  %335 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %332, i64 -1
  %336 = bitcast %"class.v8::internal::Handle.1141"* %335 to i64*
  %337 = bitcast %"class.v8::internal::Handle.1141"* %334 to i64*
  %338 = load i64, i64* %336, align 8
  store i64 %338, i64* %337, align 8
  %339 = add i64 %333, -1
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %341, label %330, !llvm.loop !13

341:                                              ; preds = %330, %320
  %342 = phi %"class.v8::internal::Handle.1141"* [ undef, %320 ], [ %334, %330 ]
  %343 = phi %"class.v8::internal::Handle.1141"* [ %321, %320 ], [ %334, %330 ]
  %344 = phi %"class.v8::internal::Handle.1141"* [ %322, %320 ], [ %335, %330 ]
  %345 = icmp ult i64 %325, 56
  br i1 %345, label %390, label %346

346:                                              ; preds = %341, %346
  %347 = phi %"class.v8::internal::Handle.1141"* [ %384, %346 ], [ %343, %341 ]
  %348 = phi %"class.v8::internal::Handle.1141"* [ %385, %346 ], [ %344, %341 ]
  %349 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %347, i64 -1
  %350 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %348, i64 -1
  %351 = bitcast %"class.v8::internal::Handle.1141"* %350 to i64*
  %352 = bitcast %"class.v8::internal::Handle.1141"* %349 to i64*
  %353 = load i64, i64* %351, align 8
  store i64 %353, i64* %352, align 8
  %354 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %347, i64 -2
  %355 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %348, i64 -2
  %356 = bitcast %"class.v8::internal::Handle.1141"* %355 to i64*
  %357 = bitcast %"class.v8::internal::Handle.1141"* %354 to i64*
  %358 = load i64, i64* %356, align 8
  store i64 %358, i64* %357, align 8
  %359 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %347, i64 -3
  %360 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %348, i64 -3
  %361 = bitcast %"class.v8::internal::Handle.1141"* %360 to i64*
  %362 = bitcast %"class.v8::internal::Handle.1141"* %359 to i64*
  %363 = load i64, i64* %361, align 8
  store i64 %363, i64* %362, align 8
  %364 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %347, i64 -4
  %365 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %348, i64 -4
  %366 = bitcast %"class.v8::internal::Handle.1141"* %365 to i64*
  %367 = bitcast %"class.v8::internal::Handle.1141"* %364 to i64*
  %368 = load i64, i64* %366, align 8
  store i64 %368, i64* %367, align 8
  %369 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %347, i64 -5
  %370 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %348, i64 -5
  %371 = bitcast %"class.v8::internal::Handle.1141"* %370 to i64*
  %372 = bitcast %"class.v8::internal::Handle.1141"* %369 to i64*
  %373 = load i64, i64* %371, align 8
  store i64 %373, i64* %372, align 8
  %374 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %347, i64 -6
  %375 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %348, i64 -6
  %376 = bitcast %"class.v8::internal::Handle.1141"* %375 to i64*
  %377 = bitcast %"class.v8::internal::Handle.1141"* %374 to i64*
  %378 = load i64, i64* %376, align 8
  store i64 %378, i64* %377, align 8
  %379 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %347, i64 -7
  %380 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %348, i64 -7
  %381 = bitcast %"class.v8::internal::Handle.1141"* %380 to i64*
  %382 = bitcast %"class.v8::internal::Handle.1141"* %379 to i64*
  %383 = load i64, i64* %381, align 8
  store i64 %383, i64* %382, align 8
  %384 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %347, i64 -8
  %385 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %348, i64 -8
  %386 = bitcast %"class.v8::internal::Handle.1141"* %385 to i64*
  %387 = bitcast %"class.v8::internal::Handle.1141"* %384 to i64*
  %388 = load i64, i64* %386, align 8
  store i64 %388, i64* %387, align 8
  %389 = icmp eq %"class.v8::internal::Handle.1141"* %385, %214
  br i1 %389, label %390, label %346, !llvm.loop !15

390:                                              ; preds = %341, %346, %318
  %391 = phi %"class.v8::internal::Handle.1141"* [ %244, %318 ], [ %342, %341 ], [ %384, %346 ]
  %392 = ptrtoint %"class.v8::internal::Handle.1141"* %391 to i64
  br label %393

393:                                              ; preds = %206, %390, %211
  %394 = phi i64 [ %220, %390 ], [ %220, %211 ], [ %210, %206 ]
  %395 = phi %"class.v8::internal::Handle.1141"* [ %217, %390 ], [ %217, %211 ], [ %208, %206 ]
  %396 = phi i64 [ %212, %390 ], [ %212, %211 ], [ %202, %206 ]
  %397 = phi %"class.v8::internal::Handle.1141"* [ %391, %390 ], [ %217, %211 ], [ %208, %206 ]
  %398 = phi i64 [ %392, %390 ], [ %212, %211 ], [ %202, %206 ]
  store i64 %398, i64* %196, align 8
  store i64 %396, i64* %200, align 8
  store i64 %394, i64* %195, align 8
  %399 = load i64, i64* %184, align 8
  br label %400

400:                                              ; preds = %183, %393
  %401 = phi %"class.v8::internal::Handle.1141"* [ null, %183 ], [ %395, %393 ]
  %402 = phi %"class.v8::internal::Handle.1141"* [ null, %183 ], [ %397, %393 ]
  %403 = phi i64 [ %188, %183 ], [ %399, %393 ]
  %404 = add i64 %403, 15
  %405 = inttoptr i64 %404 to i32*
  %406 = load atomic i32, i32* %405 monotonic, align 4
  %407 = ashr i32 %406, 1
  %408 = sext i32 %407 to i64
  %409 = icmp eq i32 %407, 0
  br i1 %409, label %418, label %410

410:                                              ; preds = %400
  %411 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 0, i32 7, i32 0, i64 5
  %412 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %7, i64 0, i32 0, i32 0, i32 1
  %413 = bitcast %"class.v8::internal::Handle.1141"** %412 to i64*
  %414 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %7, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %415 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %7, i64 0, i32 0, i32 0, i32 0
  br label %506

416:                                              ; preds = %780
  %417 = load %"class.v8::internal::Handle.1141"*, %"class.v8::internal::Handle.1141"** %415, align 8
  br label %418

418:                                              ; preds = %416, %400
  %419 = phi %"class.v8::internal::Handle.1141"* [ %781, %416 ], [ %401, %400 ]
  %420 = phi %"class.v8::internal::Handle.1141"* [ %417, %416 ], [ %402, %400 ]
  %421 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %7, i64 0, i32 0, i32 0, i32 0
  %422 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %7, i64 0, i32 0, i32 0, i32 1
  %423 = bitcast %class.anon* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %423)
  %424 = getelementptr inbounds %class.anon, %class.anon* %3, i64 0, i32 0
  store %"class.v8::internal::Isolate"** %4, %"class.v8::internal::Isolate"*** %424, align 8
  call fastcc void @"_ZNSt3__16__sortIRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEvT0_SD_T_"(%"class.v8::internal::Handle.1141"* %420, %"class.v8::internal::Handle.1141"* %419, %class.anon* nonnull dereferenceable(8) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %423)
  %425 = bitcast %"class.v8::internal::Isolate"** %4 to %"class.v8::internal::Factory"**
  %426 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %425, align 8
  %427 = call i64* @_ZN2v88internal7Factory20NewJSModuleNamespaceEv(%"class.v8::internal::Factory"* %426) #7
  %428 = load i64, i64* %427, align 8
  %429 = load i64, i64* %1, align 8
  %430 = add i64 %428, 11
  %431 = inttoptr i64 %430 to i32*
  %432 = trunc i64 %429 to i32
  store atomic volatile i32 %432, i32* %431 monotonic, align 4
  %433 = and i64 %429, 1
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %446, label %435

435:                                              ; preds = %418
  %436 = and i64 %428, -262144
  %437 = or i64 %436, 8
  %438 = inttoptr i64 %437 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = and i64 %439, 262144
  %441 = icmp eq i64 %440, 0
  br i1 %441, label %446, label %442

442:                                              ; preds = %435
  %443 = or i64 %436, 16
  %444 = inttoptr i64 %443 to %"class.v8::internal::Heap"**
  %445 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %444, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %445, i64 %428, i64 %430, i64 %429) #7
  br label %446

446:                                              ; preds = %442, %435, %418
  %447 = and i64 %429, -262144
  %448 = or i64 %447, 8
  %449 = inttoptr i64 %448 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = and i64 %450, 24
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %461, label %453

453:                                              ; preds = %446
  %454 = and i64 %428, -262144
  %455 = or i64 %454, 8
  %456 = inttoptr i64 %455 to i64*
  %457 = load i64, i64* %456, align 8
  %458 = and i64 %457, 24
  %459 = icmp eq i64 %458, 0
  br i1 %459, label %460, label %461

460:                                              ; preds = %453
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %428, i64 %430, i64 %429) #7
  br label %461

461:                                              ; preds = %446, %453, %460
  %462 = load i64, i64* %1, align 8
  %463 = load i64, i64* %427, align 8
  %464 = add i64 %462, 15
  %465 = inttoptr i64 %464 to i32*
  %466 = trunc i64 %463 to i32
  store atomic volatile i32 %466, i32* %465 monotonic, align 4
  %467 = and i64 %463, 1
  %468 = icmp eq i64 %467, 0
  br i1 %468, label %480, label %469

469:                                              ; preds = %461
  %470 = and i64 %462, -262144
  %471 = or i64 %470, 8
  %472 = inttoptr i64 %471 to i64*
  %473 = load i64, i64* %472, align 8
  %474 = and i64 %473, 262144
  %475 = icmp eq i64 %474, 0
  br i1 %475, label %480, label %476

476:                                              ; preds = %469
  %477 = or i64 %470, 16
  %478 = inttoptr i64 %477 to %"class.v8::internal::Heap"**
  %479 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %478, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %479, i64 %462, i64 %464, i64 %463) #7
  br label %480

480:                                              ; preds = %476, %469, %461
  %481 = and i64 %463, -262144
  %482 = or i64 %481, 8
  %483 = inttoptr i64 %482 to i64*
  %484 = load i64, i64* %483, align 8
  %485 = and i64 %484, 24
  %486 = icmp eq i64 %485, 0
  br i1 %486, label %495, label %487

487:                                              ; preds = %480
  %488 = and i64 %462, -262144
  %489 = or i64 %488, 8
  %490 = inttoptr i64 %489 to i64*
  %491 = load i64, i64* %490, align 8
  %492 = and i64 %491, 24
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %495

494:                                              ; preds = %487
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %462, i64 %464, i64 %463) #7
  br label %495

495:                                              ; preds = %480, %487, %494
  %496 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %497 = bitcast %"class.v8::internal::Handle.1141"** %422 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = load i64, i64* %196, align 8
  %500 = sub i64 %498, %499
  %501 = lshr exact i64 %500, 3
  %502 = trunc i64 %501 to i32
  call void @_ZN2v88internal8JSObject19NormalizePropertiesEPNS0_7IsolateENS0_6HandleIS1_EENS0_25PropertyNormalizationModeEiPKc(%"class.v8::internal::Isolate"* %496, i64* %427, i32 0, i32 %502, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0)) #7
  %503 = load %"class.v8::internal::Handle.1141"*, %"class.v8::internal::Handle.1141"** %421, align 8
  %504 = load %"class.v8::internal::Handle.1141"*, %"class.v8::internal::Handle.1141"** %422, align 8
  %505 = icmp eq %"class.v8::internal::Handle.1141"* %503, %504
  br i1 %505, label %786, label %841

506:                                              ; preds = %784, %410
  %507 = phi %"class.v8::internal::Handle.1141"* [ %401, %410 ], [ %781, %784 ]
  %508 = phi i64 [ %403, %410 ], [ %785, %784 ]
  %509 = phi i64 [ 0, %410 ], [ %782, %784 ]
  %510 = and i64 %508, -4294967296
  %511 = trunc i64 %509 to i32
  %512 = shl i32 %511, 3
  %513 = add i32 %512, 12
  %514 = sext i32 %513 to i64
  %515 = add nsw i64 %514, 7
  %516 = add i64 %515, %508
  %517 = inttoptr i64 %516 to i32*
  %518 = load atomic i32, i32* %517 monotonic, align 4
  %519 = zext i32 %518 to i64
  %520 = or i64 %510, %519
  %521 = load i64, i64* %39, align 8
  %522 = trunc i64 %521 to i32
  %523 = icmp eq i32 %518, %522
  br i1 %523, label %780, label %524

524:                                              ; preds = %506
  %525 = load i64, i64* %411, align 8
  %526 = trunc i64 %525 to i32
  %527 = icmp eq i32 %518, %526
  br i1 %527, label %780, label %528

528:                                              ; preds = %524
  %529 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %530 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %529, i64 0, i32 31, i32 4
  %531 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %530, align 8
  %532 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %531, null
  br i1 %532, label %536, label %533

533:                                              ; preds = %528
  %534 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %531, i64 %520) #7
  %535 = ptrtoint i64* %534 to i64
  br label %549

536:                                              ; preds = %528
  %537 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %529, i64 0, i32 31, i32 0
  %538 = load i64*, i64** %537, align 8
  %539 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %529, i64 0, i32 31, i32 1
  %540 = load i64*, i64** %539, align 8
  %541 = icmp eq i64* %538, %540
  br i1 %541, label %542, label %544

542:                                              ; preds = %536
  %543 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %529) #7
  br label %544

544:                                              ; preds = %542, %536
  %545 = phi i64* [ %543, %542 ], [ %538, %536 ]
  %546 = ptrtoint i64* %545 to i64
  %547 = add i64 %546, 8
  %548 = inttoptr i64 %547 to i64*
  store i64* %548, i64** %537, align 8
  store i64 %520, i64* %545, align 8
  br label %549

549:                                              ; preds = %533, %544
  %550 = phi i64 [ %535, %533 ], [ %546, %544 ]
  %551 = load %"class.v8::internal::Handle.1141"*, %"class.v8::internal::Handle.1141"** %412, align 8
  %552 = load %"class.v8::internal::Handle.1141"*, %"class.v8::internal::Handle.1141"** %194, align 8
  %553 = icmp ult %"class.v8::internal::Handle.1141"* %551, %552
  %554 = ptrtoint %"class.v8::internal::Handle.1141"* %552 to i64
  br i1 %553, label %555, label %559

555:                                              ; preds = %549
  %556 = bitcast %"class.v8::internal::Handle.1141"* %551 to i64*
  store i64 %550, i64* %556, align 8
  %557 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %551, i64 1
  %558 = ptrtoint %"class.v8::internal::Handle.1141"* %557 to i64
  store i64 %558, i64* %413, align 8
  br label %780

559:                                              ; preds = %549
  %560 = ptrtoint %"class.v8::internal::Handle.1141"* %551 to i64
  %561 = load i64, i64* %196, align 8
  %562 = sub i64 %560, %561
  %563 = ashr exact i64 %562, 3
  %564 = add nsw i64 %563, 1
  %565 = icmp ugt i64 %564, 268435455
  br i1 %565, label %566, label %568

566:                                              ; preds = %559
  %567 = bitcast %"class.v8::internal::ZoneVector"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %567) #8
  unreachable

568:                                              ; preds = %559
  %569 = sub i64 %554, %561
  %570 = ashr exact i64 %569, 3
  %571 = icmp ult i64 %570, 134217727
  br i1 %571, label %572, label %577

572:                                              ; preds = %568
  %573 = ashr exact i64 %569, 2
  %574 = icmp ult i64 %573, %564
  %575 = select i1 %574, i64 %564, i64 %573
  %576 = icmp eq i64 %575, 0
  br i1 %576, label %594, label %577

577:                                              ; preds = %572, %568
  %578 = phi i64 [ %575, %572 ], [ 268435455, %568 ]
  %579 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %414, align 8
  %580 = shl i64 %578, 3
  %581 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %579, i64 0, i32 2
  %582 = load i64, i64* %581, align 8
  %583 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %579, i64 0, i32 3
  %584 = load i64, i64* %583, align 8
  %585 = sub i64 %584, %582
  %586 = icmp ugt i64 %580, %585
  br i1 %586, label %587, label %589, !prof !5

587:                                              ; preds = %577
  %588 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %579, i64 %580) #7
  br label %591

589:                                              ; preds = %577
  %590 = add i64 %582, %580
  store i64 %590, i64* %581, align 8
  br label %591

591:                                              ; preds = %589, %587
  %592 = phi i64 [ %588, %587 ], [ %582, %589 ]
  %593 = inttoptr i64 %592 to %"class.v8::internal::Handle.1141"*
  br label %594

594:                                              ; preds = %591, %572
  %595 = phi i64 [ %578, %591 ], [ 0, %572 ]
  %596 = phi %"class.v8::internal::Handle.1141"* [ %593, %591 ], [ null, %572 ]
  %597 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %596, i64 %563
  %598 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %596, i64 %595
  %599 = ptrtoint %"class.v8::internal::Handle.1141"* %598 to i64
  %600 = bitcast %"class.v8::internal::Handle.1141"* %597 to i64*
  store i64 %550, i64* %600, align 8
  %601 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %597, i64 1
  %602 = ptrtoint %"class.v8::internal::Handle.1141"* %601 to i64
  %603 = load %"class.v8::internal::Handle.1141"*, %"class.v8::internal::Handle.1141"** %415, align 8
  %604 = ptrtoint %"class.v8::internal::Handle.1141"* %603 to i64
  %605 = load %"class.v8::internal::Handle.1141"*, %"class.v8::internal::Handle.1141"** %412, align 8
  %606 = icmp eq %"class.v8::internal::Handle.1141"* %605, %603
  br i1 %606, label %777, label %607

607:                                              ; preds = %594
  %608 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %605, i64 -1
  %609 = ptrtoint %"class.v8::internal::Handle.1141"* %608 to i64
  %610 = sub i64 %609, %604
  %611 = lshr i64 %610, 3
  %612 = add nuw nsw i64 %611, 1
  %613 = icmp ult i64 %612, 4
  br i1 %613, label %707, label %614

614:                                              ; preds = %607
  %615 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %596, i64 -1
  %616 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %605, i64 -1
  %617 = ptrtoint %"class.v8::internal::Handle.1141"* %616 to i64
  %618 = sub i64 %617, %604
  %619 = lshr i64 %618, 3
  %620 = sub nsw i64 %563, %619
  %621 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %615, i64 %620
  %622 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %605, i64 -1
  %623 = sub nsw i64 0, %619
  %624 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %622, i64 %623
  %625 = icmp ult %"class.v8::internal::Handle.1141"* %621, %605
  %626 = icmp ult %"class.v8::internal::Handle.1141"* %624, %597
  %627 = and i1 %625, %626
  br i1 %627, label %707, label %628

628:                                              ; preds = %614
  %629 = and i64 %612, 4611686018427387900
  %630 = sub nsw i64 0, %629
  %631 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %597, i64 %630
  %632 = sub nsw i64 0, %629
  %633 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %605, i64 %632
  %634 = add nsw i64 %629, -4
  %635 = lshr exact i64 %634, 2
  %636 = add nuw nsw i64 %635, 1
  %637 = and i64 %636, 1
  %638 = icmp eq i64 %634, 0
  br i1 %638, label %683, label %639

639:                                              ; preds = %628
  %640 = sub nuw nsw i64 %636, %637
  %641 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %597, i64 -1
  %642 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %605, i64 -1
  %643 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %597, i64 -1
  %644 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %605, i64 -1
  br label %645

645:                                              ; preds = %645, %639
  %646 = phi i64 [ 0, %639 ], [ %680, %645 ]
  %647 = phi i64 [ %640, %639 ], [ %681, %645 ]
  %648 = sub i64 0, %646
  %649 = sub i64 0, %646
  %650 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %641, i64 %648
  %651 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %642, i64 %649
  %652 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %651, i64 -1
  %653 = bitcast %"class.v8::internal::Handle.1141"* %652 to <2 x i64>*
  %654 = load <2 x i64>, <2 x i64>* %653, align 8, !alias.scope !16
  %655 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %651, i64 -2
  %656 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %655, i64 -1
  %657 = bitcast %"class.v8::internal::Handle.1141"* %656 to <2 x i64>*
  %658 = load <2 x i64>, <2 x i64>* %657, align 8, !alias.scope !16
  %659 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %650, i64 -1
  %660 = bitcast %"class.v8::internal::Handle.1141"* %659 to <2 x i64>*
  store <2 x i64> %654, <2 x i64>* %660, align 8, !alias.scope !19, !noalias !16
  %661 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %650, i64 -2
  %662 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %661, i64 -1
  %663 = bitcast %"class.v8::internal::Handle.1141"* %662 to <2 x i64>*
  store <2 x i64> %658, <2 x i64>* %663, align 8, !alias.scope !19, !noalias !16
  %664 = sub nuw nsw i64 -4, %646
  %665 = sub nuw nsw i64 -4, %646
  %666 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %643, i64 %664
  %667 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %644, i64 %665
  %668 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %667, i64 -1
  %669 = bitcast %"class.v8::internal::Handle.1141"* %668 to <2 x i64>*
  %670 = load <2 x i64>, <2 x i64>* %669, align 8, !alias.scope !16
  %671 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %667, i64 -2
  %672 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %671, i64 -1
  %673 = bitcast %"class.v8::internal::Handle.1141"* %672 to <2 x i64>*
  %674 = load <2 x i64>, <2 x i64>* %673, align 8, !alias.scope !16
  %675 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %666, i64 -1
  %676 = bitcast %"class.v8::internal::Handle.1141"* %675 to <2 x i64>*
  store <2 x i64> %670, <2 x i64>* %676, align 8, !alias.scope !19, !noalias !16
  %677 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %666, i64 -2
  %678 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %677, i64 -1
  %679 = bitcast %"class.v8::internal::Handle.1141"* %678 to <2 x i64>*
  store <2 x i64> %674, <2 x i64>* %679, align 8, !alias.scope !19, !noalias !16
  %680 = add i64 %646, 8
  %681 = add i64 %647, -2
  %682 = icmp eq i64 %681, 0
  br i1 %682, label %683, label %645, !llvm.loop !21

683:                                              ; preds = %645, %628
  %684 = phi i64 [ 0, %628 ], [ %680, %645 ]
  %685 = icmp eq i64 %637, 0
  br i1 %685, label %705, label %686

686:                                              ; preds = %683
  %687 = sub i64 0, %684
  %688 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %597, i64 -1
  %689 = sub i64 0, %684
  %690 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %605, i64 -1
  %691 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %688, i64 %687
  %692 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %690, i64 %689
  %693 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %692, i64 -1
  %694 = bitcast %"class.v8::internal::Handle.1141"* %693 to <2 x i64>*
  %695 = load <2 x i64>, <2 x i64>* %694, align 8, !alias.scope !16
  %696 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %692, i64 -2
  %697 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %696, i64 -1
  %698 = bitcast %"class.v8::internal::Handle.1141"* %697 to <2 x i64>*
  %699 = load <2 x i64>, <2 x i64>* %698, align 8, !alias.scope !16
  %700 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %691, i64 -1
  %701 = bitcast %"class.v8::internal::Handle.1141"* %700 to <2 x i64>*
  store <2 x i64> %695, <2 x i64>* %701, align 8, !alias.scope !19, !noalias !16
  %702 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %691, i64 -2
  %703 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %702, i64 -1
  %704 = bitcast %"class.v8::internal::Handle.1141"* %703 to <2 x i64>*
  store <2 x i64> %699, <2 x i64>* %704, align 8, !alias.scope !19, !noalias !16
  br label %705

705:                                              ; preds = %683, %686
  %706 = icmp eq i64 %612, %629
  br i1 %706, label %777, label %707

707:                                              ; preds = %705, %614, %607
  %708 = phi %"class.v8::internal::Handle.1141"* [ %597, %614 ], [ %597, %607 ], [ %631, %705 ]
  %709 = phi %"class.v8::internal::Handle.1141"* [ %605, %614 ], [ %605, %607 ], [ %633, %705 ]
  %710 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %709, i64 -1
  %711 = ptrtoint %"class.v8::internal::Handle.1141"* %710 to i64
  %712 = sub i64 %711, %604
  %713 = lshr i64 %712, 3
  %714 = add nuw nsw i64 %713, 1
  %715 = and i64 %714, 7
  %716 = icmp eq i64 %715, 0
  br i1 %716, label %728, label %717

717:                                              ; preds = %707, %717
  %718 = phi %"class.v8::internal::Handle.1141"* [ %721, %717 ], [ %708, %707 ]
  %719 = phi %"class.v8::internal::Handle.1141"* [ %722, %717 ], [ %709, %707 ]
  %720 = phi i64 [ %726, %717 ], [ %715, %707 ]
  %721 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %718, i64 -1
  %722 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %719, i64 -1
  %723 = bitcast %"class.v8::internal::Handle.1141"* %722 to i64*
  %724 = bitcast %"class.v8::internal::Handle.1141"* %721 to i64*
  %725 = load i64, i64* %723, align 8
  store i64 %725, i64* %724, align 8
  %726 = add i64 %720, -1
  %727 = icmp eq i64 %726, 0
  br i1 %727, label %728, label %717, !llvm.loop !22

728:                                              ; preds = %717, %707
  %729 = phi %"class.v8::internal::Handle.1141"* [ undef, %707 ], [ %721, %717 ]
  %730 = phi %"class.v8::internal::Handle.1141"* [ %708, %707 ], [ %721, %717 ]
  %731 = phi %"class.v8::internal::Handle.1141"* [ %709, %707 ], [ %722, %717 ]
  %732 = icmp ult i64 %712, 56
  br i1 %732, label %777, label %733

733:                                              ; preds = %728, %733
  %734 = phi %"class.v8::internal::Handle.1141"* [ %771, %733 ], [ %730, %728 ]
  %735 = phi %"class.v8::internal::Handle.1141"* [ %772, %733 ], [ %731, %728 ]
  %736 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %734, i64 -1
  %737 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %735, i64 -1
  %738 = bitcast %"class.v8::internal::Handle.1141"* %737 to i64*
  %739 = bitcast %"class.v8::internal::Handle.1141"* %736 to i64*
  %740 = load i64, i64* %738, align 8
  store i64 %740, i64* %739, align 8
  %741 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %734, i64 -2
  %742 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %735, i64 -2
  %743 = bitcast %"class.v8::internal::Handle.1141"* %742 to i64*
  %744 = bitcast %"class.v8::internal::Handle.1141"* %741 to i64*
  %745 = load i64, i64* %743, align 8
  store i64 %745, i64* %744, align 8
  %746 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %734, i64 -3
  %747 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %735, i64 -3
  %748 = bitcast %"class.v8::internal::Handle.1141"* %747 to i64*
  %749 = bitcast %"class.v8::internal::Handle.1141"* %746 to i64*
  %750 = load i64, i64* %748, align 8
  store i64 %750, i64* %749, align 8
  %751 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %734, i64 -4
  %752 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %735, i64 -4
  %753 = bitcast %"class.v8::internal::Handle.1141"* %752 to i64*
  %754 = bitcast %"class.v8::internal::Handle.1141"* %751 to i64*
  %755 = load i64, i64* %753, align 8
  store i64 %755, i64* %754, align 8
  %756 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %734, i64 -5
  %757 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %735, i64 -5
  %758 = bitcast %"class.v8::internal::Handle.1141"* %757 to i64*
  %759 = bitcast %"class.v8::internal::Handle.1141"* %756 to i64*
  %760 = load i64, i64* %758, align 8
  store i64 %760, i64* %759, align 8
  %761 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %734, i64 -6
  %762 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %735, i64 -6
  %763 = bitcast %"class.v8::internal::Handle.1141"* %762 to i64*
  %764 = bitcast %"class.v8::internal::Handle.1141"* %761 to i64*
  %765 = load i64, i64* %763, align 8
  store i64 %765, i64* %764, align 8
  %766 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %734, i64 -7
  %767 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %735, i64 -7
  %768 = bitcast %"class.v8::internal::Handle.1141"* %767 to i64*
  %769 = bitcast %"class.v8::internal::Handle.1141"* %766 to i64*
  %770 = load i64, i64* %768, align 8
  store i64 %770, i64* %769, align 8
  %771 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %734, i64 -8
  %772 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %735, i64 -8
  %773 = bitcast %"class.v8::internal::Handle.1141"* %772 to i64*
  %774 = bitcast %"class.v8::internal::Handle.1141"* %771 to i64*
  %775 = load i64, i64* %773, align 8
  store i64 %775, i64* %774, align 8
  %776 = icmp eq %"class.v8::internal::Handle.1141"* %772, %603
  br i1 %776, label %777, label %733, !llvm.loop !23

777:                                              ; preds = %728, %733, %705, %594
  %778 = phi %"class.v8::internal::Handle.1141"* [ %597, %594 ], [ %631, %705 ], [ %729, %728 ], [ %771, %733 ]
  %779 = ptrtoint %"class.v8::internal::Handle.1141"* %778 to i64
  store i64 %779, i64* %196, align 8
  store i64 %602, i64* %413, align 8
  store i64 %599, i64* %195, align 8
  br label %780

780:                                              ; preds = %506, %524, %777, %555
  %781 = phi %"class.v8::internal::Handle.1141"* [ %507, %506 ], [ %507, %524 ], [ %601, %777 ], [ %557, %555 ]
  %782 = add i64 %509, 1
  %783 = icmp eq i64 %782, %408
  br i1 %783, label %416, label %784

784:                                              ; preds = %780
  %785 = load i64, i64* %184, align 8
  br label %506

786:                                              ; preds = %841, %495
  %787 = call i16 @_ZN2v88internal8JSObject17PreventExtensionsENS0_6HandleIS1_EENS0_11ShouldThrowE(i64* %427, i32 0) #7
  %788 = trunc i16 %787 to i8
  %789 = icmp eq i8 %788, 0
  br i1 %789, label %790, label %791, !prof !5

790:                                              ; preds = %786
  call void @_ZN2v82V817FromJustIsNothingEv() #7
  br label %791

791:                                              ; preds = %786, %790
  call void @_ZN2v88internal8JSObject19OptimizeAsPrototypeENS0_6HandleIS1_EEb(i64* %427, i1 zeroext true) #7
  %792 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %793 = call i64* @_ZN2v88internal3Map24GetOrCreatePrototypeInfoENS0_6HandleINS0_8JSObjectEEEPNS0_7IsolateE(i64* %427, %"class.v8::internal::Isolate"* %792) #7
  %794 = load i64, i64* %793, align 8
  %795 = load i64, i64* %427, align 8
  %796 = add i64 %794, 3
  %797 = inttoptr i64 %796 to i32*
  %798 = trunc i64 %795 to i32
  store atomic volatile i32 %798, i32* %797 monotonic, align 4
  %799 = and i64 %795, 1
  %800 = icmp eq i64 %799, 0
  br i1 %800, label %812, label %801

801:                                              ; preds = %791
  %802 = and i64 %794, -262144
  %803 = or i64 %802, 8
  %804 = inttoptr i64 %803 to i64*
  %805 = load i64, i64* %804, align 8
  %806 = and i64 %805, 262144
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %812, label %808

808:                                              ; preds = %801
  %809 = or i64 %802, 16
  %810 = inttoptr i64 %809 to %"class.v8::internal::Heap"**
  %811 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %810, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %811, i64 %794, i64 %796, i64 %795) #7
  br label %812

812:                                              ; preds = %808, %801, %791
  %813 = and i64 %795, -262144
  %814 = or i64 %813, 8
  %815 = inttoptr i64 %814 to i64*
  %816 = load i64, i64* %815, align 8
  %817 = and i64 %816, 24
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %827, label %819

819:                                              ; preds = %812
  %820 = and i64 %794, -262144
  %821 = or i64 %820, 8
  %822 = inttoptr i64 %821 to i64*
  %823 = load i64, i64* %822, align 8
  %824 = and i64 %823, 24
  %825 = icmp eq i64 %824, 0
  br i1 %825, label %826, label %827

826:                                              ; preds = %819
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %794, i64 %796, i64 %795) #7
  br label %827

827:                                              ; preds = %812, %819, %826
  %828 = load %"class.v8::internal::Handle.1141"*, %"class.v8::internal::Handle.1141"** %421, align 8
  %829 = icmp eq %"class.v8::internal::Handle.1141"* %828, null
  br i1 %829, label %832, label %830

830:                                              ; preds = %827
  %831 = ptrtoint %"class.v8::internal::Handle.1141"* %828 to i64
  store i64 %831, i64* %497, align 8
  br label %832

832:                                              ; preds = %827, %830
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %185) #7
  %833 = load %"struct.std::__1::__hash_node_base.1157"*, %"struct.std::__1::__hash_node_base.1157"** %52, align 8
  %834 = icmp eq %"struct.std::__1::__hash_node_base.1157"* %833, null
  br i1 %834, label %840, label %835

835:                                              ; preds = %832, %835
  %836 = phi %"struct.std::__1::__hash_node_base.1157"* [ %838, %835 ], [ %833, %832 ]
  %837 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1157", %"struct.std::__1::__hash_node_base.1157"* %836, i64 0, i32 0
  %838 = load %"struct.std::__1::__hash_node_base.1157"*, %"struct.std::__1::__hash_node_base.1157"** %837, align 8
  %839 = icmp eq %"struct.std::__1::__hash_node_base.1157"* %838, null
  br i1 %839, label %840, label %835

840:                                              ; preds = %835, %832
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %48) #7
  call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %45) #7
  br label %849

841:                                              ; preds = %495, %841
  %842 = phi %"class.v8::internal::Handle.1141"* [ %847, %841 ], [ %503, %495 ]
  %843 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %842, i64 0, i32 0, i32 0
  %844 = load i64*, i64** %843, align 8
  %845 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %846 = call i64* @_ZN2v88internal9Accessors28MakeModuleNamespaceEntryInfoEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::Isolate"* %845, i64* %844) #7
  call void @_ZN2v88internal8JSObject21SetNormalizedPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEENS0_15PropertyDetailsE(i64* %427, i64* %844, i64* %846, i32 33) #7
  %847 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %842, i64 1
  %848 = icmp eq %"class.v8::internal::Handle.1141"* %847, %504
  br i1 %848, label %786, label %841

849:                                              ; preds = %35, %840
  %850 = phi i64* [ %427, %840 ], [ %38, %35 ]
  ret i64* %850
}

declare void @_ZN2v88internal16SourceTextModule16FetchStarExportsEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_4ZoneEPNS0_18UnorderedModuleSetE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::Zone"*, %"class.v8::internal::UnorderedModuleSet"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory20NewJSModuleNamespaceEv(%"class.v8::internal::Factory"*) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject19NormalizePropertiesEPNS0_7IsolateENS0_6HandleIS1_EENS0_25PropertyNormalizationModeEiPKc(%"class.v8::internal::Isolate"*, i64*, i32, i32, i8*) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject21SetNormalizedPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEENS0_15PropertyDetailsE(i64*, i64*, i64*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal9Accessors28MakeModuleNamespaceEntryInfoEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i16 @_ZN2v88internal8JSObject17PreventExtensionsENS0_6HandleIS1_EENS0_11ShouldThrowE(i64*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject19OptimizeAsPrototypeENS0_6HandleIS1_EEb(i64*, i1 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal3Map24GetOrCreatePrototypeInfoENS0_6HandleINS0_8JSObjectEEEPNS0_7IsolateE(i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal17JSModuleNamespace9GetExportEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JSModuleNamespace"* nocapture readonly, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::ObjectHashTable", align 8
  %5 = bitcast %"class.v8::internal::ObjectHashTable"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.v8::internal::JSModuleNamespace", %"class.v8::internal::JSModuleNamespace"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, 11
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 3
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %8, %17
  %19 = getelementptr inbounds %"class.v8::internal::ObjectHashTable", %"class.v8::internal::ObjectHashTable"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::ObjectHashTable", %"class.v8::internal::ObjectHashTable"* %4, i64 0, i32 0
  %21 = call i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::ObjectHashTableBase"* nonnull %20, i64* %2) #7
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %23 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %22, align 8
  %24 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %3
  %26 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %23, i64 %21) #7
  br label %40

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %31 = load i64*, i64** %30, align 8
  %32 = icmp eq i64* %29, %31
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #7
  br label %35

35:                                               ; preds = %33, %27
  %36 = phi i64* [ %34, %33 ], [ %29, %27 ]
  %37 = ptrtoint i64* %36 to i64
  %38 = add i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  store i64* %39, i64** %28, align 8
  store i64 %21, i64* %36, align 8
  br label %40

40:                                               ; preds = %25, %35
  %41 = phi i64* [ %26, %25 ], [ %36, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %42 to i32
  %46 = trunc i64 %44 to i32
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %87

50:                                               ; preds = %40
  %51 = and i64 %42, -4294967296
  %52 = add i64 %42, 3
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %51, %55
  %57 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %22, align 8
  %58 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %50
  %60 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %57, i64 %56) #7
  %61 = load i64, i64* %60, align 8
  br label %75

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %64, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %62
  %69 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #7
  br label %70

70:                                               ; preds = %68, %62
  %71 = phi i64* [ %69, %68 ], [ %64, %62 ]
  %72 = ptrtoint i64* %71 to i64
  %73 = add i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  store i64* %74, i64** %63, align 8
  store i64 %56, i64* %71, align 8
  br label %75

75:                                               ; preds = %59, %70
  %76 = phi i64 [ %61, %59 ], [ %56, %70 ]
  %77 = phi i64* [ %60, %59 ], [ %71, %70 ]
  %78 = load i64, i64* %43, align 8
  %79 = trunc i64 %76 to i32
  %80 = trunc i64 %78 to i32
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %82, label %87

82:                                               ; preds = %75
  %83 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %84 = call i64* @_ZN2v88internal7Factory17NewReferenceErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %83, i32 184, i64* %2, i64* null, i64* null) #7
  %85 = load i64, i64* %84, align 8
  %86 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %1, i64 %85, %"class.v8::internal::MessageLocation"* null) #7
  br label %87

87:                                               ; preds = %82, %75, %48
  %88 = phi i64* [ %49, %48 ], [ null, %82 ], [ %77, %75 ]
  ret i64* %88
}

declare i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::ObjectHashTableBase"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory17NewReferenceErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17JSModuleNamespace21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::ObjectHashTable", align 8
  %3 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"class.v8::internal::Handle.1178", %"class.v8::internal::Handle.1178"* %5, i64 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %9, label %18

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %11 = bitcast %"class.v8::internal::Isolate"** %10 to %"class.v8::internal::Factory"**
  %12 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %14 = load i64, i64* %13, align 8
  %15 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %12, i64 %14, i1 zeroext true) #7
  %16 = ptrtoint i64* %15 to i64
  %17 = bitcast %"class.v8::internal::Handle.1178"* %5 to i64*
  store i64 %16, i64* %17, align 8
  br label %18

18:                                               ; preds = %1, %9
  %19 = phi i64* [ %15, %9 ], [ %7, %1 ]
  %20 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %21 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  %22 = bitcast %"class.v8::internal::ObjectHashTable"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7
  %23 = load i64, i64* %4, align 8
  %24 = and i64 %23, -4294967296
  %25 = add i64 %23, 11
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = add i64 %29, 3
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %24, %33
  %35 = getelementptr inbounds %"class.v8::internal::ObjectHashTable", %"class.v8::internal::ObjectHashTable"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::ObjectHashTable", %"class.v8::internal::ObjectHashTable"* %2, i64 0, i32 0
  %37 = call i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::ObjectHashTableBase"* nonnull %36, i64* %19) #7
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 4
  %39 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %38, align 8
  %40 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %18
  %42 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %39, i64 %37) #7
  br label %56

43:                                               ; preds = %18
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = icmp eq i64* %45, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  %50 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #7
  br label %51

51:                                               ; preds = %49, %43
  %52 = phi i64* [ %50, %49 ], [ %45, %43 ]
  %53 = ptrtoint i64* %52 to i64
  %54 = add i64 %53, 8
  %55 = inttoptr i64 %54 to i64*
  store i64* %55, i64** %44, align 8
  store i64 %37, i64* %52, align 8
  br label %56

56:                                               ; preds = %41, %51
  %57 = phi i64* [ %42, %41 ], [ %52, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 5
  %60 = load i64, i64* %59, align 8
  %61 = trunc i64 %58 to i32
  %62 = trunc i64 %60 to i32
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %108, label %64

64:                                               ; preds = %56
  %65 = and i64 %58, -4294967296
  %66 = add i64 %58, 3
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %65, %69
  %71 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %38, align 8
  %72 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %64
  %74 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %71, i64 %70) #7
  %75 = load i64, i64* %74, align 8
  br label %89

76:                                               ; preds = %64
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 1
  %80 = load i64*, i64** %79, align 8
  %81 = icmp eq i64* %78, %80
  br i1 %81, label %82, label %84

82:                                               ; preds = %76
  %83 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #7
  br label %84

84:                                               ; preds = %82, %76
  %85 = phi i64* [ %83, %82 ], [ %78, %76 ]
  %86 = ptrtoint i64* %85 to i64
  %87 = add i64 %86, 8
  %88 = inttoptr i64 %87 to i64*
  store i64* %88, i64** %77, align 8
  store i64 %70, i64* %85, align 8
  br label %89

89:                                               ; preds = %73, %84
  %90 = phi i64 [ %75, %73 ], [ %70, %84 ]
  %91 = load i64, i64* %59, align 8
  %92 = trunc i64 %90 to i32
  %93 = trunc i64 %91 to i32
  %94 = icmp eq i32 %92, %93
  br i1 %94, label %95, label %100

95:                                               ; preds = %89
  %96 = bitcast %"class.v8::internal::Isolate"* %21 to %"class.v8::internal::Factory"*
  %97 = call i64* @_ZN2v88internal7Factory17NewReferenceErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %96, i32 184, i64* %19, i64* null, i64* null) #7
  %98 = load i64, i64* %97, align 8
  %99 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %21, i64 %98, %"class.v8::internal::MessageLocation"* null) #7
  br label %108

100:                                              ; preds = %89
  %101 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = lshr i32 %102, 3
  %104 = and i32 %103, 7
  %105 = zext i32 %104 to i64
  %106 = shl nuw nsw i64 %105, 32
  %107 = or i64 %106, 1
  br label %108

108:                                              ; preds = %95, %100, %56
  %109 = phi i64 [ 274877906945, %56 ], [ 0, %95 ], [ %107, %100 ]
  ret i64 %109
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal6Module12IsGraphAsyncEPNS0_7IsolateE(%"class.v8::internal::Module"* nocapture readonly, %"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::SourceTextModule", align 8
  %4 = alloca %"class.v8::internal::Zone", align 8
  %5 = alloca %"class.v8::internal::ZoneUnorderedSet", align 8
  %6 = alloca %"class.v8::internal::ZoneVector.1206", align 8
  %7 = alloca %"class.v8::internal::Module", align 8
  %8 = getelementptr inbounds %"class.v8::internal::Module", %"class.v8::internal::Module"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, -4294967296
  %11 = add i64 %9, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp eq i16 %18, 155
  br i1 %19, label %20, label %600

20:                                               ; preds = %2
  %21 = bitcast %"class.v8::internal::SourceTextModule"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  %22 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %9, i64* %22, align 8
  %23 = bitcast %"class.v8::internal::Zone"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %23) #7
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 34
  %25 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %24, align 8
  call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %4, %"class.v8::internal::AccountingAllocator"* %25, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__._ZNK2v88internal6Module12IsGraphAsyncEPNS0_7IsolateE, i64 0, i64 0), i1 zeroext false) #7
  %26 = bitcast %"class.v8::internal::ZoneUnorderedSet"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %26) #7
  %27 = ptrtoint %"class.v8::internal::Zone"* %4 to i64
  %28 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %5, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %30 = bitcast %"struct.std::__1::__compressed_pair_elem.1193"* %29 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false) #7
  store i64 %27, i64* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1189"* null, %"struct.std::__1::__hash_node_base.1189"** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %5, i64 0, i32 0, i32 0, i32 1, i32 1
  %33 = bitcast %"struct.std::__1::__compressed_pair_elem.1197"* %32 to i64*
  store i64 %27, i64* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %5, i64 0, i32 0, i32 0, i32 3
  %36 = bitcast %"class.std::__1::__compressed_pair.1201"* %35 to i32*
  store i32 1065353216, i32* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %41, %39
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %44, label %46, !prof !5

44:                                               ; preds = %20
  %45 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* nonnull %4, i64 16) #7
  br label %48

46:                                               ; preds = %20
  %47 = add i64 %39, 16
  store i64 %47, i64* %38, align 8
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi i64 [ %45, %44 ], [ %39, %46 ]
  %50 = inttoptr i64 %49 to %"struct.std::__1::__hash_node_base.1189"**
  %51 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1189"** %50, %"struct.std::__1::__hash_node_base.1189"*** %51, align 8
  store i64 2, i64* %37, align 8
  store %"struct.std::__1::__hash_node_base.1189"* null, %"struct.std::__1::__hash_node_base.1189"** %50, align 8
  %52 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %52, i64 1
  store %"struct.std::__1::__hash_node_base.1189"* null, %"struct.std::__1::__hash_node_base.1189"** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %56, null
  br i1 %57, label %117, label %58

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %56, i64 1
  %60 = bitcast %"struct.std::__1::__hash_node_base.1189"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 1
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %52, i64 %62
  store %"struct.std::__1::__hash_node_base.1189"* %54, %"struct.std::__1::__hash_node_base.1189"** %63, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %56, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %65, null
  br i1 %66, label %117, label %67

67:                                               ; preds = %58, %111
  %68 = phi %"struct.std::__1::__hash_node_base.1189"* [ %115, %111 ], [ %65, %58 ]
  %69 = phi i64 [ %113, %111 ], [ %62, %58 ]
  %70 = phi %"struct.std::__1::__hash_node_base.1189"* [ %112, %111 ], [ %56, %58 ]
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %68, i64 1
  %72 = bitcast %"struct.std::__1::__hash_node_base.1189"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, 1
  %75 = icmp eq i64 %74, %69
  br i1 %75, label %111, label %76

76:                                               ; preds = %67
  %77 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %51, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %77, i64 %74
  %79 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %68, i64 2
  %83 = bitcast %"struct.std::__1::__hash_node_base.1189"* %82 to i64*
  br label %85

84:                                               ; preds = %76
  store %"struct.std::__1::__hash_node_base.1189"* %70, %"struct.std::__1::__hash_node_base.1189"** %78, align 8
  br label %111

85:                                               ; preds = %90, %81
  %86 = phi %"struct.std::__1::__hash_node_base.1189"* [ %88, %90 ], [ %68, %81 ]
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %86, i64 0, i32 0
  %88 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %87, align 8
  %89 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %88, null
  br i1 %89, label %98, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %88, i64 2
  %92 = bitcast %"struct.std::__1::__hash_node_base.1189"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = load i64, i64* %83, align 8
  %95 = trunc i64 %94 to i32
  %96 = trunc i64 %93 to i32
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %85, label %98

98:                                               ; preds = %90, %85
  %99 = ptrtoint %"struct.std::__1::__hash_node_base.1189"* %88 to i64
  %100 = bitcast %"struct.std::__1::__hash_node_base.1189"* %86 to i64*
  %101 = bitcast %"struct.std::__1::__hash_node_base.1189"* %70 to i64*
  store i64 %99, i64* %101, align 8
  %102 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %51, align 8
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %102, i64 %74
  %104 = bitcast %"struct.std::__1::__hash_node_base.1189"** %103 to i64**
  %105 = load i64*, i64** %104, align 8
  %106 = load i64, i64* %105, align 8
  store i64 %106, i64* %100, align 8
  %107 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %51, align 8
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %107, i64 %74
  %109 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %109, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1189"* %68, %"struct.std::__1::__hash_node_base.1189"** %110, align 8
  br label %111

111:                                              ; preds = %98, %84, %67
  %112 = phi %"struct.std::__1::__hash_node_base.1189"* [ %68, %84 ], [ %70, %98 ], [ %68, %67 ]
  %113 = phi i64 [ %74, %84 ], [ %69, %98 ], [ %69, %67 ]
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %112, i64 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %115, null
  br i1 %116, label %117, label %67

117:                                              ; preds = %111, %58, %48
  %118 = bitcast %"class.v8::internal::ZoneVector.1206"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %118) #7
  %119 = getelementptr inbounds %"class.v8::internal::ZoneVector.1206", %"class.v8::internal::ZoneVector.1206"* %6, i64 0, i32 0, i32 0, i32 2, i32 1
  %120 = bitcast %"struct.std::__1::__compressed_pair_elem.1211"* %119 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 0, i64 24, i1 false) #7
  store i64 %27, i64* %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %3, i64 0, i32 0, i32 0
  %122 = call { %"struct.std::__1::__hash_node_base.1189"*, i8 } @_ZNSt3__112__hash_tableIN2v88internal6ModuleENS3_4HashENS_8equal_toIS3_EENS2_13ZoneAllocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1185"* nonnull %28, %"class.v8::internal::Module"* nonnull dereferenceable(8) %121, %"class.v8::internal::Module"* nonnull dereferenceable(8) %121) #7
  %123 = getelementptr inbounds %"class.v8::internal::ZoneVector.1206", %"class.v8::internal::ZoneVector.1206"* %6, i64 0, i32 0, i32 0, i32 1
  %124 = getelementptr inbounds %"class.v8::internal::ZoneVector.1206", %"class.v8::internal::ZoneVector.1206"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %125 = bitcast %"class.v8::internal::SourceTextModule"** %123 to i64*
  %126 = bitcast %"class.v8::internal::ZoneVector.1206"* %6 to i64*
  %127 = bitcast %"class.v8::internal::SourceTextModule"** %124 to i64*
  %128 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  %131 = load i64, i64* %130, align 8
  %132 = sub i64 %131, %129
  %133 = icmp ult i64 %132, 8
  br i1 %133, label %134, label %136, !prof !5

134:                                              ; preds = %117
  %135 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* nonnull %4, i64 8) #7
  br label %138

136:                                              ; preds = %117
  %137 = add i64 %129, 8
  store i64 %137, i64* %128, align 8
  br label %138

138:                                              ; preds = %134, %136
  %139 = phi i64 [ %135, %134 ], [ %129, %136 ]
  %140 = inttoptr i64 %139 to %"class.v8::internal::SourceTextModule"*
  %141 = inttoptr i64 %139 to i8*
  %142 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %140, i64 1
  %143 = ptrtoint %"class.v8::internal::SourceTextModule"* %142 to i64
  %144 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i64, i64* %22, align 8
  store i64 %145, i64* %144, align 8
  %146 = getelementptr inbounds %"class.v8::internal::ZoneVector.1206", %"class.v8::internal::ZoneVector.1206"* %6, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.v8::internal::SourceTextModule"*, %"class.v8::internal::SourceTextModule"** %146, align 8
  %148 = ptrtoint %"class.v8::internal::SourceTextModule"* %147 to i64
  %149 = load %"class.v8::internal::SourceTextModule"*, %"class.v8::internal::SourceTextModule"** %123, align 8
  %150 = icmp eq %"class.v8::internal::SourceTextModule"* %149, %147
  br i1 %150, label %302, label %151

151:                                              ; preds = %138
  %152 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %149, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = ptrtoint i64* %152 to i64
  %154 = sub i64 %153, %148
  %155 = lshr i64 %154, 3
  %156 = add nuw nsw i64 %155, 1
  %157 = icmp ult i64 %156, 4
  br i1 %157, label %246, label %158

158:                                              ; preds = %151
  %159 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %149, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = ptrtoint i64* %159 to i64
  %161 = sub i64 %160, %148
  %162 = lshr i64 %161, 3
  %163 = xor i64 %162, -1
  %164 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %140, i64 %163
  %165 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %149, i64 %163
  %166 = bitcast %"class.v8::internal::SourceTextModule"* %165 to i8*
  %167 = icmp ult %"class.v8::internal::SourceTextModule"* %164, %149
  %168 = icmp ult i8* %166, %141
  %169 = and i1 %167, %168
  br i1 %169, label %246, label %170

170:                                              ; preds = %158
  %171 = and i64 %156, 4611686018427387900
  %172 = sub nsw i64 0, %171
  %173 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %140, i64 %172
  %174 = sub nsw i64 0, %171
  %175 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %149, i64 %174
  %176 = add nsw i64 %171, -4
  %177 = lshr exact i64 %176, 2
  %178 = add nuw nsw i64 %177, 1
  %179 = and i64 %178, 1
  %180 = icmp eq i64 %176, 0
  br i1 %180, label %225, label %181

181:                                              ; preds = %170
  %182 = sub nuw nsw i64 %178, %179
  %183 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %149, i64 -1
  %184 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %149, i64 -1
  br label %185

185:                                              ; preds = %185, %181
  %186 = phi i64 [ 0, %181 ], [ %220, %185 ]
  %187 = phi i64 [ %182, %181 ], [ %221, %185 ]
  %188 = sub i64 0, %186
  %189 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %140, i64 %188
  %190 = sub i64 0, %186
  %191 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %183, i64 %190
  %192 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %191, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %189, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = getelementptr inbounds i64, i64* %192, i64 -1
  %195 = bitcast i64* %194 to <2 x i64>*
  %196 = load <2 x i64>, <2 x i64>* %195, align 8, !alias.scope !24
  %197 = getelementptr inbounds i64, i64* %192, i64 -3
  %198 = bitcast i64* %197 to <2 x i64>*
  %199 = load <2 x i64>, <2 x i64>* %198, align 8, !alias.scope !24
  %200 = getelementptr inbounds i64, i64* %193, i64 -1
  %201 = bitcast i64* %200 to <2 x i64>*
  store <2 x i64> %196, <2 x i64>* %201, align 8, !alias.scope !27, !noalias !24
  %202 = getelementptr inbounds i64, i64* %193, i64 -3
  %203 = bitcast i64* %202 to <2 x i64>*
  store <2 x i64> %199, <2 x i64>* %203, align 8, !alias.scope !27, !noalias !24
  %204 = sub nuw nsw i64 -4, %186
  %205 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %140, i64 %204
  %206 = sub nuw nsw i64 -4, %186
  %207 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %184, i64 %206
  %208 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %207, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %205, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = getelementptr inbounds i64, i64* %208, i64 -1
  %211 = bitcast i64* %210 to <2 x i64>*
  %212 = load <2 x i64>, <2 x i64>* %211, align 8, !alias.scope !24
  %213 = getelementptr inbounds i64, i64* %208, i64 -3
  %214 = bitcast i64* %213 to <2 x i64>*
  %215 = load <2 x i64>, <2 x i64>* %214, align 8, !alias.scope !24
  %216 = getelementptr inbounds i64, i64* %209, i64 -1
  %217 = bitcast i64* %216 to <2 x i64>*
  store <2 x i64> %212, <2 x i64>* %217, align 8, !alias.scope !27, !noalias !24
  %218 = getelementptr inbounds i64, i64* %209, i64 -3
  %219 = bitcast i64* %218 to <2 x i64>*
  store <2 x i64> %215, <2 x i64>* %219, align 8, !alias.scope !27, !noalias !24
  %220 = add i64 %186, 8
  %221 = add i64 %187, -2
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %185, !llvm.loop !29

223:                                              ; preds = %185
  %224 = sub nuw nsw i64 -8, %186
  br label %225

225:                                              ; preds = %223, %170
  %226 = phi i64 [ 0, %170 ], [ %224, %223 ]
  %227 = icmp eq i64 %179, 0
  br i1 %227, label %244, label %228

228:                                              ; preds = %225
  %229 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %140, i64 %226
  %230 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %149, i64 -1
  %231 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %230, i64 %226
  %232 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %231, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %229, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = getelementptr inbounds i64, i64* %232, i64 -1
  %235 = bitcast i64* %234 to <2 x i64>*
  %236 = load <2 x i64>, <2 x i64>* %235, align 8, !alias.scope !24
  %237 = getelementptr inbounds i64, i64* %232, i64 -3
  %238 = bitcast i64* %237 to <2 x i64>*
  %239 = load <2 x i64>, <2 x i64>* %238, align 8, !alias.scope !24
  %240 = getelementptr inbounds i64, i64* %233, i64 -1
  %241 = bitcast i64* %240 to <2 x i64>*
  store <2 x i64> %236, <2 x i64>* %241, align 8, !alias.scope !27, !noalias !24
  %242 = getelementptr inbounds i64, i64* %233, i64 -3
  %243 = bitcast i64* %242 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %243, align 8, !alias.scope !27, !noalias !24
  br label %244

244:                                              ; preds = %225, %228
  %245 = icmp eq i64 %156, %171
  br i1 %245, label %302, label %246

246:                                              ; preds = %244, %158, %151
  %247 = phi %"class.v8::internal::SourceTextModule"* [ %140, %158 ], [ %140, %151 ], [ %173, %244 ]
  %248 = phi %"class.v8::internal::SourceTextModule"* [ %149, %158 ], [ %149, %151 ], [ %175, %244 ]
  %249 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %248, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = ptrtoint i64* %249 to i64
  %251 = sub i64 %250, %148
  %252 = lshr i64 %251, 3
  %253 = add nuw nsw i64 %252, 1
  %254 = and i64 %253, 7
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %267, label %256

256:                                              ; preds = %246, %256
  %257 = phi %"class.v8::internal::SourceTextModule"* [ %264, %256 ], [ %247, %246 ]
  %258 = phi %"class.v8::internal::SourceTextModule"* [ %260, %256 ], [ %248, %246 ]
  %259 = phi i64 [ %265, %256 ], [ %254, %246 ]
  %260 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %258, i64 -1
  %261 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %260, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %257, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load i64, i64* %261, align 8
  store i64 %263, i64* %262, align 8
  %264 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %257, i64 -1
  %265 = add i64 %259, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %256, !llvm.loop !30

267:                                              ; preds = %256, %246
  %268 = phi %"class.v8::internal::SourceTextModule"* [ undef, %246 ], [ %264, %256 ]
  %269 = phi %"class.v8::internal::SourceTextModule"* [ %247, %246 ], [ %264, %256 ]
  %270 = phi %"class.v8::internal::SourceTextModule"* [ %248, %246 ], [ %260, %256 ]
  %271 = icmp ult i64 %251, 56
  br i1 %271, label %302, label %272

272:                                              ; preds = %267, %272
  %273 = phi %"class.v8::internal::SourceTextModule"* [ %300, %272 ], [ %269, %267 ]
  %274 = phi %"class.v8::internal::SourceTextModule"* [ %296, %272 ], [ %270, %267 ]
  %275 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %274, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %273, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load i64, i64* %275, align 8
  store i64 %277, i64* %276, align 8
  %278 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %274, i64 -2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %273, i64 -2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load i64, i64* %278, align 8
  store i64 %280, i64* %279, align 8
  %281 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %274, i64 -3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %273, i64 -3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load i64, i64* %281, align 8
  store i64 %283, i64* %282, align 8
  %284 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %274, i64 -4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %273, i64 -4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load i64, i64* %284, align 8
  store i64 %286, i64* %285, align 8
  %287 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %274, i64 -5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %273, i64 -5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load i64, i64* %287, align 8
  store i64 %289, i64* %288, align 8
  %290 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %274, i64 -6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %273, i64 -6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load i64, i64* %290, align 8
  store i64 %292, i64* %291, align 8
  %293 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %274, i64 -7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %273, i64 -7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i64, i64* %293, align 8
  store i64 %295, i64* %294, align 8
  %296 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %274, i64 -8
  %297 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %296, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %298 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %273, i64 -8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load i64, i64* %297, align 8
  store i64 %299, i64* %298, align 8
  %300 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %273, i64 -8
  %301 = icmp eq %"class.v8::internal::SourceTextModule"* %296, %147
  br i1 %301, label %302, label %272, !llvm.loop !31

302:                                              ; preds = %267, %272, %244, %138
  %303 = phi %"class.v8::internal::SourceTextModule"* [ %140, %138 ], [ %173, %244 ], [ %268, %267 ], [ %300, %272 ]
  %304 = ptrtoint %"class.v8::internal::SourceTextModule"* %303 to i64
  store i64 %304, i64* %126, align 8
  store i64 %143, i64* %125, align 8
  store i64 %143, i64* %127, align 8
  %305 = bitcast %"class.v8::internal::Module"* %7 to i8*
  %306 = getelementptr inbounds %"class.v8::internal::Module", %"class.v8::internal::Module"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %307 = getelementptr inbounds %"class.v8::internal::ZoneVector.1206", %"class.v8::internal::ZoneVector.1206"* %6, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %308 = getelementptr inbounds %"class.v8::internal::ZoneVector.1206", %"class.v8::internal::ZoneVector.1206"* %6, i64 0, i32 0, i32 0, i32 0
  br label %309

309:                                              ; preds = %339, %302
  %310 = phi %"class.v8::internal::SourceTextModule"* [ %340, %339 ], [ %303, %302 ]
  %311 = phi %"class.v8::internal::SourceTextModule"* [ %342, %339 ], [ %303, %302 ]
  %312 = phi %"class.v8::internal::SourceTextModule"* [ %341, %339 ], [ %142, %302 ]
  %313 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %312, i64 -1
  %314 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %313, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = load i64, i64* %314, align 8
  store %"class.v8::internal::SourceTextModule"* %313, %"class.v8::internal::SourceTextModule"** %123, align 8
  %316 = add i64 %315, 67
  %317 = inttoptr i64 %316 to i32*
  %318 = load i32, i32* %317, align 4
  %319 = and i32 %318, 2
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %585

321:                                              ; preds = %309
  %322 = and i64 %315, -4294967296
  %323 = add i64 %315, 39
  %324 = inttoptr i64 %323 to i32*
  %325 = load i32, i32* %324, align 4
  %326 = zext i32 %325 to i64
  %327 = or i64 %322, %326
  %328 = add i64 %327, 3
  %329 = inttoptr i64 %328 to i32*
  %330 = load i32, i32* %329, align 4
  %331 = icmp sgt i32 %330, 1
  br i1 %331, label %332, label %339

332:                                              ; preds = %321
  %333 = lshr i32 %330, 1
  %334 = add i64 %327, 7
  %335 = zext i32 %333 to i64
  br label %344

336:                                              ; preds = %582
  %337 = load %"class.v8::internal::SourceTextModule"*, %"class.v8::internal::SourceTextModule"** %308, align 8
  %338 = load %"class.v8::internal::SourceTextModule"*, %"class.v8::internal::SourceTextModule"** %123, align 8
  br label %339

339:                                              ; preds = %336, %321
  %340 = phi %"class.v8::internal::SourceTextModule"* [ %337, %336 ], [ %310, %321 ]
  %341 = phi %"class.v8::internal::SourceTextModule"* [ %338, %336 ], [ %313, %321 ]
  %342 = phi %"class.v8::internal::SourceTextModule"* [ %337, %336 ], [ %311, %321 ]
  %343 = icmp eq %"class.v8::internal::SourceTextModule"* %342, %341
  br i1 %343, label %585, label %309

344:                                              ; preds = %332, %582
  %345 = phi i64 [ 0, %332 ], [ %583, %582 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #7
  %346 = trunc i64 %345 to i32
  %347 = shl i32 %346, 2
  %348 = sext i32 %347 to i64
  %349 = add i64 %334, %348
  %350 = inttoptr i64 %349 to i32*
  %351 = load atomic i32, i32* %350 monotonic, align 4
  %352 = zext i32 %351 to i64
  %353 = or i64 %322, %352
  store i64 %353, i64* %306, align 8
  %354 = add i64 %353, -1
  %355 = inttoptr i64 %354 to i32*
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = zext i32 %356 to i64
  %358 = or i64 %322, %357
  %359 = add i64 %358, 7
  %360 = inttoptr i64 %359 to i16*
  %361 = load atomic i16, i16* %360 monotonic, align 2
  %362 = icmp eq i16 %361, 155
  br i1 %362, label %363, label %582

363:                                              ; preds = %344
  %364 = call { %"struct.std::__1::__hash_node_base.1189"*, i8 } @_ZNSt3__112__hash_tableIN2v88internal6ModuleENS3_4HashENS_8equal_toIS3_EENS2_13ZoneAllocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1185"* nonnull %28, %"class.v8::internal::Module"* nonnull dereferenceable(8) %7, %"class.v8::internal::Module"* nonnull dereferenceable(8) %7) #7
  %365 = extractvalue { %"struct.std::__1::__hash_node_base.1189"*, i8 } %364, 1
  %366 = and i8 %365, 1
  %367 = icmp eq i8 %366, 0
  br i1 %367, label %582, label %368

368:                                              ; preds = %363
  %369 = load i64, i64* %306, align 8
  %370 = load %"class.v8::internal::SourceTextModule"*, %"class.v8::internal::SourceTextModule"** %123, align 8
  %371 = load %"class.v8::internal::SourceTextModule"*, %"class.v8::internal::SourceTextModule"** %124, align 8
  %372 = icmp ult %"class.v8::internal::SourceTextModule"* %370, %371
  %373 = ptrtoint %"class.v8::internal::SourceTextModule"* %371 to i64
  br i1 %372, label %374, label %378

374:                                              ; preds = %368
  %375 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %370, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %369, i64* %375, align 8
  %376 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %370, i64 1
  %377 = ptrtoint %"class.v8::internal::SourceTextModule"* %376 to i64
  store i64 %377, i64* %125, align 8
  br label %582

378:                                              ; preds = %368
  %379 = ptrtoint %"class.v8::internal::SourceTextModule"* %370 to i64
  %380 = load i64, i64* %126, align 8
  %381 = sub i64 %379, %380
  %382 = ashr exact i64 %381, 3
  %383 = add nsw i64 %382, 1
  %384 = icmp ugt i64 %383, 268435455
  br i1 %384, label %385, label %387

385:                                              ; preds = %378
  %386 = bitcast %"class.v8::internal::ZoneVector.1206"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %386) #8
  unreachable

387:                                              ; preds = %378
  %388 = sub i64 %373, %380
  %389 = ashr exact i64 %388, 3
  %390 = icmp ult i64 %389, 134217727
  br i1 %390, label %391, label %396

391:                                              ; preds = %387
  %392 = ashr exact i64 %388, 2
  %393 = icmp ult i64 %392, %383
  %394 = select i1 %393, i64 %383, i64 %392
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %413, label %396

396:                                              ; preds = %391, %387
  %397 = phi i64 [ %394, %391 ], [ 268435455, %387 ]
  %398 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %307, align 8
  %399 = shl i64 %397, 3
  %400 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %398, i64 0, i32 2
  %401 = load i64, i64* %400, align 8
  %402 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %398, i64 0, i32 3
  %403 = load i64, i64* %402, align 8
  %404 = sub i64 %403, %401
  %405 = icmp ugt i64 %399, %404
  br i1 %405, label %406, label %408, !prof !5

406:                                              ; preds = %396
  %407 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %398, i64 %399) #7
  br label %410

408:                                              ; preds = %396
  %409 = add i64 %401, %399
  store i64 %409, i64* %400, align 8
  br label %410

410:                                              ; preds = %408, %406
  %411 = phi i64 [ %407, %406 ], [ %401, %408 ]
  %412 = inttoptr i64 %411 to %"class.v8::internal::SourceTextModule"*
  br label %413

413:                                              ; preds = %410, %391
  %414 = phi i64 [ %397, %410 ], [ 0, %391 ]
  %415 = phi %"class.v8::internal::SourceTextModule"* [ %412, %410 ], [ null, %391 ]
  %416 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %415, i64 %382
  %417 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %415, i64 %414
  %418 = ptrtoint %"class.v8::internal::SourceTextModule"* %417 to i64
  %419 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %416, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %369, i64* %419, align 8
  %420 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %416, i64 1
  %421 = ptrtoint %"class.v8::internal::SourceTextModule"* %420 to i64
  %422 = load %"class.v8::internal::SourceTextModule"*, %"class.v8::internal::SourceTextModule"** %308, align 8
  %423 = ptrtoint %"class.v8::internal::SourceTextModule"* %422 to i64
  %424 = load %"class.v8::internal::SourceTextModule"*, %"class.v8::internal::SourceTextModule"** %123, align 8
  %425 = icmp eq %"class.v8::internal::SourceTextModule"* %424, %422
  br i1 %425, label %579, label %426

426:                                              ; preds = %413
  %427 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %424, i64 -1
  %428 = ptrtoint %"class.v8::internal::SourceTextModule"* %427 to i64
  %429 = sub i64 %428, %423
  %430 = lshr i64 %429, 3
  %431 = add nuw nsw i64 %430, 1
  %432 = icmp ult i64 %431, 4
  br i1 %432, label %523, label %433

433:                                              ; preds = %426
  %434 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %415, i64 -1
  %435 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %424, i64 -1
  %436 = ptrtoint %"class.v8::internal::SourceTextModule"* %435 to i64
  %437 = sub i64 %436, %423
  %438 = lshr i64 %437, 3
  %439 = sub nsw i64 %382, %438
  %440 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %434, i64 %439
  %441 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %424, i64 -1
  %442 = sub nsw i64 0, %438
  %443 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %441, i64 %442
  %444 = icmp ult %"class.v8::internal::SourceTextModule"* %440, %424
  %445 = icmp ult %"class.v8::internal::SourceTextModule"* %443, %416
  %446 = and i1 %444, %445
  br i1 %446, label %523, label %447

447:                                              ; preds = %433
  %448 = and i64 %431, 4611686018427387900
  %449 = sub nsw i64 0, %448
  %450 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %416, i64 %449
  %451 = sub nsw i64 0, %448
  %452 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %424, i64 %451
  %453 = add nsw i64 %448, -4
  %454 = lshr exact i64 %453, 2
  %455 = add nuw nsw i64 %454, 1
  %456 = and i64 %455, 1
  %457 = icmp eq i64 %453, 0
  br i1 %457, label %500, label %458

458:                                              ; preds = %447
  %459 = sub nuw nsw i64 %455, %456
  %460 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %424, i64 -1
  %461 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %424, i64 -1
  br label %462

462:                                              ; preds = %462, %458
  %463 = phi i64 [ 0, %458 ], [ %497, %462 ]
  %464 = phi i64 [ %459, %458 ], [ %498, %462 ]
  %465 = sub i64 0, %463
  %466 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %416, i64 %465
  %467 = sub i64 0, %463
  %468 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %460, i64 %467
  %469 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %468, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %470 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %466, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %471 = getelementptr inbounds i64, i64* %469, i64 -1
  %472 = bitcast i64* %471 to <2 x i64>*
  %473 = load <2 x i64>, <2 x i64>* %472, align 8, !alias.scope !32
  %474 = getelementptr inbounds i64, i64* %469, i64 -3
  %475 = bitcast i64* %474 to <2 x i64>*
  %476 = load <2 x i64>, <2 x i64>* %475, align 8, !alias.scope !32
  %477 = getelementptr inbounds i64, i64* %470, i64 -1
  %478 = bitcast i64* %477 to <2 x i64>*
  store <2 x i64> %473, <2 x i64>* %478, align 8, !alias.scope !35, !noalias !32
  %479 = getelementptr inbounds i64, i64* %470, i64 -3
  %480 = bitcast i64* %479 to <2 x i64>*
  store <2 x i64> %476, <2 x i64>* %480, align 8, !alias.scope !35, !noalias !32
  %481 = sub nuw nsw i64 -4, %463
  %482 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %416, i64 %481
  %483 = sub nuw nsw i64 -4, %463
  %484 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %461, i64 %483
  %485 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %484, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %486 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %482, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %487 = getelementptr inbounds i64, i64* %485, i64 -1
  %488 = bitcast i64* %487 to <2 x i64>*
  %489 = load <2 x i64>, <2 x i64>* %488, align 8, !alias.scope !32
  %490 = getelementptr inbounds i64, i64* %485, i64 -3
  %491 = bitcast i64* %490 to <2 x i64>*
  %492 = load <2 x i64>, <2 x i64>* %491, align 8, !alias.scope !32
  %493 = getelementptr inbounds i64, i64* %486, i64 -1
  %494 = bitcast i64* %493 to <2 x i64>*
  store <2 x i64> %489, <2 x i64>* %494, align 8, !alias.scope !35, !noalias !32
  %495 = getelementptr inbounds i64, i64* %486, i64 -3
  %496 = bitcast i64* %495 to <2 x i64>*
  store <2 x i64> %492, <2 x i64>* %496, align 8, !alias.scope !35, !noalias !32
  %497 = add i64 %463, 8
  %498 = add i64 %464, -2
  %499 = icmp eq i64 %498, 0
  br i1 %499, label %500, label %462, !llvm.loop !37

500:                                              ; preds = %462, %447
  %501 = phi i64 [ 0, %447 ], [ %497, %462 ]
  %502 = icmp eq i64 %456, 0
  br i1 %502, label %521, label %503

503:                                              ; preds = %500
  %504 = sub i64 0, %501
  %505 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %416, i64 %504
  %506 = sub i64 0, %501
  %507 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %424, i64 -1
  %508 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %507, i64 %506
  %509 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %508, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %510 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %505, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %511 = getelementptr inbounds i64, i64* %509, i64 -1
  %512 = bitcast i64* %511 to <2 x i64>*
  %513 = load <2 x i64>, <2 x i64>* %512, align 8, !alias.scope !32
  %514 = getelementptr inbounds i64, i64* %509, i64 -3
  %515 = bitcast i64* %514 to <2 x i64>*
  %516 = load <2 x i64>, <2 x i64>* %515, align 8, !alias.scope !32
  %517 = getelementptr inbounds i64, i64* %510, i64 -1
  %518 = bitcast i64* %517 to <2 x i64>*
  store <2 x i64> %513, <2 x i64>* %518, align 8, !alias.scope !35, !noalias !32
  %519 = getelementptr inbounds i64, i64* %510, i64 -3
  %520 = bitcast i64* %519 to <2 x i64>*
  store <2 x i64> %516, <2 x i64>* %520, align 8, !alias.scope !35, !noalias !32
  br label %521

521:                                              ; preds = %500, %503
  %522 = icmp eq i64 %431, %448
  br i1 %522, label %579, label %523

523:                                              ; preds = %521, %433, %426
  %524 = phi %"class.v8::internal::SourceTextModule"* [ %416, %433 ], [ %416, %426 ], [ %450, %521 ]
  %525 = phi %"class.v8::internal::SourceTextModule"* [ %424, %433 ], [ %424, %426 ], [ %452, %521 ]
  %526 = getelementptr %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %525, i64 -1
  %527 = ptrtoint %"class.v8::internal::SourceTextModule"* %526 to i64
  %528 = sub i64 %527, %423
  %529 = lshr i64 %528, 3
  %530 = add nuw nsw i64 %529, 1
  %531 = and i64 %530, 7
  %532 = icmp eq i64 %531, 0
  br i1 %532, label %544, label %533

533:                                              ; preds = %523, %533
  %534 = phi %"class.v8::internal::SourceTextModule"* [ %541, %533 ], [ %524, %523 ]
  %535 = phi %"class.v8::internal::SourceTextModule"* [ %537, %533 ], [ %525, %523 ]
  %536 = phi i64 [ %542, %533 ], [ %531, %523 ]
  %537 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %535, i64 -1
  %538 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %537, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %539 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %534, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %540 = load i64, i64* %538, align 8
  store i64 %540, i64* %539, align 8
  %541 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %534, i64 -1
  %542 = add i64 %536, -1
  %543 = icmp eq i64 %542, 0
  br i1 %543, label %544, label %533, !llvm.loop !38

544:                                              ; preds = %533, %523
  %545 = phi %"class.v8::internal::SourceTextModule"* [ undef, %523 ], [ %541, %533 ]
  %546 = phi %"class.v8::internal::SourceTextModule"* [ %524, %523 ], [ %541, %533 ]
  %547 = phi %"class.v8::internal::SourceTextModule"* [ %525, %523 ], [ %537, %533 ]
  %548 = icmp ult i64 %528, 56
  br i1 %548, label %579, label %549

549:                                              ; preds = %544, %549
  %550 = phi %"class.v8::internal::SourceTextModule"* [ %577, %549 ], [ %546, %544 ]
  %551 = phi %"class.v8::internal::SourceTextModule"* [ %573, %549 ], [ %547, %544 ]
  %552 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %551, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %553 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %550, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %554 = load i64, i64* %552, align 8
  store i64 %554, i64* %553, align 8
  %555 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %551, i64 -2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %556 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %550, i64 -2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %557 = load i64, i64* %555, align 8
  store i64 %557, i64* %556, align 8
  %558 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %551, i64 -3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %559 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %550, i64 -3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %560 = load i64, i64* %558, align 8
  store i64 %560, i64* %559, align 8
  %561 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %551, i64 -4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %562 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %550, i64 -4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %563 = load i64, i64* %561, align 8
  store i64 %563, i64* %562, align 8
  %564 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %551, i64 -5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %565 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %550, i64 -5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %566 = load i64, i64* %564, align 8
  store i64 %566, i64* %565, align 8
  %567 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %551, i64 -6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %568 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %550, i64 -6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %569 = load i64, i64* %567, align 8
  store i64 %569, i64* %568, align 8
  %570 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %551, i64 -7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %571 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %550, i64 -7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %572 = load i64, i64* %570, align 8
  store i64 %572, i64* %571, align 8
  %573 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %551, i64 -8
  %574 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %573, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %575 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %550, i64 -8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %576 = load i64, i64* %574, align 8
  store i64 %576, i64* %575, align 8
  %577 = getelementptr inbounds %"class.v8::internal::SourceTextModule", %"class.v8::internal::SourceTextModule"* %550, i64 -8
  %578 = icmp eq %"class.v8::internal::SourceTextModule"* %573, %422
  br i1 %578, label %579, label %549, !llvm.loop !39

579:                                              ; preds = %544, %549, %521, %413
  %580 = phi %"class.v8::internal::SourceTextModule"* [ %416, %413 ], [ %450, %521 ], [ %545, %544 ], [ %577, %549 ]
  %581 = ptrtoint %"class.v8::internal::SourceTextModule"* %580 to i64
  store i64 %581, i64* %126, align 8
  store i64 %421, i64* %125, align 8
  store i64 %418, i64* %127, align 8
  br label %582

582:                                              ; preds = %579, %374, %363, %344
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #7
  %583 = add nuw nsw i64 %345, 1
  %584 = icmp ult i64 %583, %335
  br i1 %584, label %344, label %336

585:                                              ; preds = %309, %339
  %586 = phi %"class.v8::internal::SourceTextModule"* [ %340, %339 ], [ %310, %309 ]
  %587 = phi i1 [ false, %339 ], [ true, %309 ]
  %588 = icmp eq %"class.v8::internal::SourceTextModule"* %586, null
  br i1 %588, label %591, label %589

589:                                              ; preds = %585
  %590 = ptrtoint %"class.v8::internal::SourceTextModule"* %586 to i64
  store i64 %590, i64* %125, align 8
  br label %591

591:                                              ; preds = %585, %589
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %118) #7
  %592 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %31, align 8
  %593 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %592, null
  br i1 %593, label %599, label %594

594:                                              ; preds = %591, %594
  %595 = phi %"struct.std::__1::__hash_node_base.1189"* [ %597, %594 ], [ %592, %591 ]
  %596 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %595, i64 0, i32 0
  %597 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %596, align 8
  %598 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %597, null
  br i1 %598, label %599, label %594

599:                                              ; preds = %594, %591
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %26) #7
  call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %23) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  br label %600

600:                                              ; preds = %2, %599
  %601 = phi i1 [ %587, %599 ], [ false, %2 ]
  ret i1 %601
}

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

declare i64 @_ZN2v88internal23GetCurrentStackPositionEv() local_unnamed_addr #2

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #2

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #6

declare i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"*, i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEvT0_SD_T_"(%"class.v8::internal::Handle.1141"*, %"class.v8::internal::Handle.1141"*, %class.anon* readonly dereferenceable(8)) unnamed_addr #0 {
  %4 = getelementptr %class.anon, %class.anon* %2, i64 0, i32 0
  br label %5

5:                                                ; preds = %263, %3
  %6 = phi %"class.v8::internal::Handle.1141"* [ %1, %3 ], [ %236, %263 ]
  %7 = phi %"class.v8::internal::Handle.1141"* [ %0, %3 ], [ %16, %263 ]
  %8 = ptrtoint %"class.v8::internal::Handle.1141"* %6 to i64
  %9 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %6, i64 -1
  %10 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %6, i64 -1, i32 0, i32 0
  %11 = bitcast %"class.v8::internal::Handle.1141"* %9 to i64*
  %12 = ptrtoint %"class.v8::internal::Handle.1141"* %6 to i64
  br label %13

13:                                               ; preds = %272, %5
  %14 = phi %"class.v8::internal::Handle.1141"* [ %7, %5 ], [ %273, %272 ]
  br label %15

15:                                               ; preds = %172, %13
  %16 = phi %"class.v8::internal::Handle.1141"* [ %14, %13 ], [ %153, %172 ]
  %17 = ptrtoint %"class.v8::internal::Handle.1141"* %16 to i64
  %18 = sub i64 %8, %17
  %19 = ashr exact i64 %18, 3
  switch i64 %19, label %50 [
    i64 0, label %276
    i64 1, label %276
    i64 2, label %20
    i64 3, label %35
    i64 4, label %39
    i64 5, label %44
  ]

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %6, i64 -1, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %16, i64 0, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %4, align 8
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %27 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %26, i64* %22, i64* %24) #7
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %276

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %6, i64 -1
  %31 = bitcast %"class.v8::internal::Handle.1141"* %16 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.v8::internal::Handle.1141"* %30 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %31, align 8
  store i64 %32, i64* %33, align 8
  br label %276

35:                                               ; preds = %15
  %36 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %16, i64 1
  %37 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %6, i64 -1
  %38 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEjT0_SD_SD_T_"(%"class.v8::internal::Handle.1141"* %16, %"class.v8::internal::Handle.1141"* %36, %"class.v8::internal::Handle.1141"* %37, %class.anon* dereferenceable(8) %2)
  br label %276

39:                                               ; preds = %15
  %40 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %16, i64 1
  %41 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %16, i64 2
  %42 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %6, i64 -1
  %43 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEjT0_SD_SD_SD_T_"(%"class.v8::internal::Handle.1141"* %16, %"class.v8::internal::Handle.1141"* %40, %"class.v8::internal::Handle.1141"* %41, %"class.v8::internal::Handle.1141"* %42, %class.anon* dereferenceable(8) %2)
  br label %276

44:                                               ; preds = %15
  %45 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %16, i64 1
  %46 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %16, i64 2
  %47 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %16, i64 3
  %48 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %6, i64 -1
  %49 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEjT0_SD_SD_SD_SD_T_"(%"class.v8::internal::Handle.1141"* %16, %"class.v8::internal::Handle.1141"* %45, %"class.v8::internal::Handle.1141"* %46, %"class.v8::internal::Handle.1141"* %47, %"class.v8::internal::Handle.1141"* %48, %class.anon* dereferenceable(8) %2)
  br label %276

50:                                               ; preds = %15
  %51 = icmp slt i64 %18, 248
  br i1 %51, label %52, label %94

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %16, i64 2
  %54 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %16, i64 1
  %55 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEjT0_SD_SD_T_"(%"class.v8::internal::Handle.1141"* %16, %"class.v8::internal::Handle.1141"* %54, %"class.v8::internal::Handle.1141"* %53, %class.anon* dereferenceable(8) %2) #7
  %56 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %16, i64 3
  %57 = icmp eq %"class.v8::internal::Handle.1141"* %56, %6
  br i1 %57, label %276, label %58

58:                                               ; preds = %52, %91
  %59 = phi %"class.v8::internal::Handle.1141"* [ %60, %91 ], [ %53, %52 ]
  %60 = phi %"class.v8::internal::Handle.1141"* [ %92, %91 ], [ %56, %52 ]
  %61 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %60, i64 0, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %59, i64 0, i32 0, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %4, align 8
  %66 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %65, align 8
  %67 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %66, i64* %62, i64* %64) #7
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %91

69:                                               ; preds = %58
  %70 = bitcast %"class.v8::internal::Handle.1141"* %60 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = inttoptr i64 %71 to i64*
  br label %73

73:                                               ; preds = %80, %69
  %74 = phi %"class.v8::internal::Handle.1141"* [ %59, %69 ], [ %81, %80 ]
  %75 = phi %"class.v8::internal::Handle.1141"* [ %60, %69 ], [ %74, %80 ]
  %76 = bitcast %"class.v8::internal::Handle.1141"* %74 to i64*
  %77 = bitcast %"class.v8::internal::Handle.1141"* %75 to i64*
  %78 = load i64, i64* %76, align 8
  store i64 %78, i64* %77, align 8
  %79 = icmp eq %"class.v8::internal::Handle.1141"* %74, %16
  br i1 %79, label %88, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %74, i64 -1
  %82 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %74, i64 -1, i32 0, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %4, align 8
  %85 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %84, align 8
  %86 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %85, i64* %72, i64* %83) #7
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %73, label %88

88:                                               ; preds = %73, %80
  %89 = phi %"class.v8::internal::Handle.1141"* [ %74, %80 ], [ %16, %73 ]
  %90 = bitcast %"class.v8::internal::Handle.1141"* %89 to i64*
  store i64 %71, i64* %90, align 8
  br label %91

91:                                               ; preds = %88, %58
  %92 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %60, i64 1
  %93 = icmp eq %"class.v8::internal::Handle.1141"* %92, %6
  br i1 %93, label %276, label %58

94:                                               ; preds = %50
  %95 = icmp sgt i64 %18, 7992
  %96 = sdiv i64 %19, 2
  %97 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %16, i64 %96
  br i1 %95, label %98, label %103

98:                                               ; preds = %94
  %99 = sdiv i64 %19, 4
  %100 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %16, i64 %99
  %101 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %97, i64 %99
  %102 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEjT0_SD_SD_SD_SD_T_"(%"class.v8::internal::Handle.1141"* %16, %"class.v8::internal::Handle.1141"* %100, %"class.v8::internal::Handle.1141"* %97, %"class.v8::internal::Handle.1141"* %101, %"class.v8::internal::Handle.1141"* %9, %class.anon* dereferenceable(8) %2)
  br label %105

103:                                              ; preds = %94
  %104 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEjT0_SD_SD_T_"(%"class.v8::internal::Handle.1141"* %16, %"class.v8::internal::Handle.1141"* %97, %"class.v8::internal::Handle.1141"* %9, %class.anon* dereferenceable(8) %2)
  br label %105

105:                                              ; preds = %103, %98
  %106 = phi i32 [ %102, %98 ], [ %104, %103 ]
  %107 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %16, i64 0, i32 0, i32 0
  %108 = load i64*, i64** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %97, i64 0, i32 0, i32 0
  %110 = load i64*, i64** %109, align 8
  %111 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %4, align 8
  %112 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %111, align 8
  %113 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %112, i64* %108, i64* %110) #7
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %193, label %115

115:                                              ; preds = %105, %179
  %116 = phi %"class.v8::internal::Handle.1141"* [ %117, %179 ], [ %9, %105 ]
  %117 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %116, i64 -1
  %118 = icmp eq %"class.v8::internal::Handle.1141"* %16, %117
  br i1 %118, label %119, label %179

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %16, i64 1
  %121 = load i64*, i64** %107, align 8
  %122 = load i64*, i64** %10, align 8
  %123 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %4, align 8
  %124 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %123, align 8
  %125 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %124, i64* %121, i64* %122) #7
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %146, label %127

127:                                              ; preds = %119
  %128 = icmp eq %"class.v8::internal::Handle.1141"* %120, %9
  br i1 %128, label %276, label %129

129:                                              ; preds = %127, %143
  %130 = phi %"class.v8::internal::Handle.1141"* [ %144, %143 ], [ %120, %127 ]
  %131 = load i64*, i64** %107, align 8
  %132 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %130, i64 0, i32 0, i32 0
  %133 = load i64*, i64** %132, align 8
  %134 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %4, align 8
  %135 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %134, align 8
  %136 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %135, i64* %131, i64* %133) #7
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %143

138:                                              ; preds = %129
  %139 = bitcast %"class.v8::internal::Handle.1141"* %130 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = load i64, i64* %11, align 8
  store i64 %141, i64* %139, align 8
  store i64 %140, i64* %11, align 8
  %142 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %130, i64 1
  br label %146

143:                                              ; preds = %129
  %144 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %130, i64 1
  %145 = icmp eq %"class.v8::internal::Handle.1141"* %144, %9
  br i1 %145, label %276, label %129

146:                                              ; preds = %138, %119
  %147 = phi %"class.v8::internal::Handle.1141"* [ %120, %119 ], [ %142, %138 ]
  %148 = icmp eq %"class.v8::internal::Handle.1141"* %147, %9
  br i1 %148, label %276, label %149

149:                                              ; preds = %146, %174
  %150 = phi %"class.v8::internal::Handle.1141"* [ %165, %174 ], [ %9, %146 ]
  %151 = phi %"class.v8::internal::Handle.1141"* [ %161, %174 ], [ %147, %146 ]
  br label %152

152:                                              ; preds = %152, %149
  %153 = phi %"class.v8::internal::Handle.1141"* [ %151, %149 ], [ %161, %152 ]
  %154 = load i64*, i64** %107, align 8
  %155 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %153, i64 0, i32 0, i32 0
  %156 = load i64*, i64** %155, align 8
  %157 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %4, align 8
  %158 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %157, align 8
  %159 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %158, i64* %154, i64* %156) #7
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %153, i64 1
  br i1 %160, label %162, label %152

162:                                              ; preds = %152, %162
  %163 = phi %"class.v8::internal::Handle.1141"* [ %165, %162 ], [ %150, %152 ]
  %164 = load i64*, i64** %107, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %163, i64 -1
  %166 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %163, i64 -1, i32 0, i32 0
  %167 = load i64*, i64** %166, align 8
  %168 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %4, align 8
  %169 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %168, align 8
  %170 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %169, i64* %164, i64* %167) #7
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %162, label %172

172:                                              ; preds = %162
  %173 = icmp ult %"class.v8::internal::Handle.1141"* %153, %165
  br i1 %173, label %174, label %15

174:                                              ; preds = %172
  %175 = bitcast %"class.v8::internal::Handle.1141"* %153 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %"class.v8::internal::Handle.1141"* %165 to i64*
  %178 = load i64, i64* %177, align 8
  store i64 %178, i64* %175, align 8
  store i64 %176, i64* %177, align 8
  br label %149

179:                                              ; preds = %115
  %180 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %117, i64 0, i32 0, i32 0
  %181 = load i64*, i64** %180, align 8
  %182 = load i64*, i64** %109, align 8
  %183 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %4, align 8
  %184 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %183, align 8
  %185 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %184, i64* %181, i64* %182) #7
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %115

187:                                              ; preds = %179
  %188 = bitcast %"class.v8::internal::Handle.1141"* %16 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.v8::internal::Handle.1141"* %117 to i64*
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %188, align 8
  store i64 %189, i64* %190, align 8
  %192 = add i32 %106, 1
  br label %193

193:                                              ; preds = %105, %187
  %194 = phi %"class.v8::internal::Handle.1141"* [ %117, %187 ], [ %9, %105 ]
  %195 = phi i32 [ %192, %187 ], [ %106, %105 ]
  %196 = ptrtoint %"class.v8::internal::Handle.1141"* %16 to i64
  %197 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %16, i64 1
  %198 = icmp ult %"class.v8::internal::Handle.1141"* %197, %194
  br i1 %198, label %199, label %235

199:                                              ; preds = %193, %227
  %200 = phi %"class.v8::internal::Handle.1141"* [ %217, %227 ], [ %194, %193 ]
  %201 = phi %"class.v8::internal::Handle.1141"* [ %214, %227 ], [ %197, %193 ]
  %202 = phi i32 [ %232, %227 ], [ %195, %193 ]
  %203 = phi %"class.v8::internal::Handle.1141"* [ %234, %227 ], [ %97, %193 ]
  %204 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %203, i64 0, i32 0, i32 0
  br label %205

205:                                              ; preds = %205, %199
  %206 = phi %"class.v8::internal::Handle.1141"* [ %201, %199 ], [ %214, %205 ]
  %207 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %206, i64 0, i32 0, i32 0
  %208 = load i64*, i64** %207, align 8
  %209 = load i64*, i64** %204, align 8
  %210 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %4, align 8
  %211 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %210, align 8
  %212 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %211, i64* %208, i64* %209) #7
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %206, i64 1
  br i1 %213, label %205, label %215

215:                                              ; preds = %205, %215
  %216 = phi %"class.v8::internal::Handle.1141"* [ %217, %215 ], [ %200, %205 ]
  %217 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %216, i64 -1
  %218 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %216, i64 -1, i32 0, i32 0
  %219 = load i64*, i64** %218, align 8
  %220 = load i64*, i64** %204, align 8
  %221 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %4, align 8
  %222 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %221, align 8
  %223 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %222, i64* %219, i64* %220) #7
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %215

225:                                              ; preds = %215
  %226 = icmp ugt %"class.v8::internal::Handle.1141"* %206, %217
  br i1 %226, label %235, label %227

227:                                              ; preds = %225
  %228 = bitcast %"class.v8::internal::Handle.1141"* %206 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %"class.v8::internal::Handle.1141"* %217 to i64*
  %231 = load i64, i64* %230, align 8
  store i64 %231, i64* %228, align 8
  store i64 %229, i64* %230, align 8
  %232 = add i32 %202, 1
  %233 = icmp eq %"class.v8::internal::Handle.1141"* %203, %206
  %234 = select i1 %233, %"class.v8::internal::Handle.1141"* %217, %"class.v8::internal::Handle.1141"* %203
  br label %199

235:                                              ; preds = %225, %193
  %236 = phi %"class.v8::internal::Handle.1141"* [ %197, %193 ], [ %206, %225 ]
  %237 = phi i32 [ %195, %193 ], [ %202, %225 ]
  %238 = phi %"class.v8::internal::Handle.1141"* [ %97, %193 ], [ %203, %225 ]
  %239 = icmp eq %"class.v8::internal::Handle.1141"* %236, %238
  br i1 %239, label %255, label %240

240:                                              ; preds = %235
  %241 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %238, i64 0, i32 0, i32 0
  %242 = load i64*, i64** %241, align 8
  %243 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %236, i64 0, i32 0, i32 0
  %244 = load i64*, i64** %243, align 8
  %245 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %4, align 8
  %246 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %245, align 8
  %247 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %246, i64* %242, i64* %244) #7
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %255

249:                                              ; preds = %240
  %250 = bitcast %"class.v8::internal::Handle.1141"* %236 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = bitcast %"class.v8::internal::Handle.1141"* %238 to i64*
  %253 = load i64, i64* %252, align 8
  store i64 %253, i64* %250, align 8
  store i64 %251, i64* %252, align 8
  %254 = add i32 %237, 1
  br label %255

255:                                              ; preds = %235, %249, %240
  %256 = phi i32 [ %254, %249 ], [ %237, %240 ], [ %237, %235 ]
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %265

258:                                              ; preds = %255
  %259 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEbT0_SD_T_"(%"class.v8::internal::Handle.1141"* %16, %"class.v8::internal::Handle.1141"* %236, %class.anon* dereferenceable(8) %2)
  %260 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %236, i64 1
  %261 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEbT0_SD_T_"(%"class.v8::internal::Handle.1141"* %260, %"class.v8::internal::Handle.1141"* %6, %class.anon* dereferenceable(8) %2)
  br i1 %261, label %262, label %264

262:                                              ; preds = %258
  br i1 %259, label %276, label %263

263:                                              ; preds = %262, %274
  br label %5

264:                                              ; preds = %258
  br i1 %259, label %272, label %265

265:                                              ; preds = %264, %255
  %266 = ptrtoint %"class.v8::internal::Handle.1141"* %236 to i64
  %267 = sub i64 %266, %196
  %268 = sub i64 %12, %266
  %269 = icmp slt i64 %267, %268
  br i1 %269, label %270, label %274

270:                                              ; preds = %265
  tail call fastcc void @"_ZNSt3__16__sortIRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEvT0_SD_T_"(%"class.v8::internal::Handle.1141"* %16, %"class.v8::internal::Handle.1141"* %236, %class.anon* dereferenceable(8) %2)
  %271 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %236, i64 1
  br label %272

272:                                              ; preds = %270, %264
  %273 = phi %"class.v8::internal::Handle.1141"* [ %260, %264 ], [ %271, %270 ]
  br label %13

274:                                              ; preds = %265
  %275 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %236, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEvT0_SD_T_"(%"class.v8::internal::Handle.1141"* %275, %"class.v8::internal::Handle.1141"* %6, %class.anon* dereferenceable(8) %2)
  br label %263

276:                                              ; preds = %262, %146, %15, %15, %127, %143, %91, %52, %20, %29, %35, %39, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEjT0_SD_SD_T_"(%"class.v8::internal::Handle.1141"* nocapture, %"class.v8::internal::Handle.1141"* nocapture, %"class.v8::internal::Handle.1141"* nocapture, %class.anon* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %5 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %1, i64 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %0, i64 0, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr %class.anon, %class.anon* %3, i64 0, i32 0
  %10 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %9, align 8
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %11, i64* %6, i64* %8) #7
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %2, i64 0, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = load i64*, i64** %5, align 8
  %17 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %9, align 8
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %18, i64* %15, i64* %16) #7
  %20 = icmp eq i32 %19, 0
  br i1 %13, label %37, label %21

21:                                               ; preds = %4
  br i1 %20, label %22, label %56

22:                                               ; preds = %21
  %23 = bitcast %"class.v8::internal::Handle.1141"* %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.v8::internal::Handle.1141"* %2 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %23, align 8
  store i64 %24, i64* %25, align 8
  %27 = load i64*, i64** %5, align 8
  %28 = load i64*, i64** %7, align 8
  %29 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %9, align 8
  %30 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %29, align 8
  %31 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %30, i64* %27, i64* %28) #7
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %56

33:                                               ; preds = %22
  %34 = bitcast %"class.v8::internal::Handle.1141"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = load i64, i64* %23, align 8
  store i64 %36, i64* %34, align 8
  store i64 %35, i64* %23, align 8
  br label %56

37:                                               ; preds = %4
  %38 = bitcast %"class.v8::internal::Handle.1141"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  br i1 %20, label %40, label %43

40:                                               ; preds = %37
  %41 = bitcast %"class.v8::internal::Handle.1141"* %2 to i64*
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %38, align 8
  store i64 %39, i64* %41, align 8
  br label %56

43:                                               ; preds = %37
  %44 = bitcast %"class.v8::internal::Handle.1141"* %1 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %38, align 8
  store i64 %39, i64* %44, align 8
  %46 = load i64*, i64** %14, align 8
  %47 = inttoptr i64 %39 to i64*
  %48 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %9, align 8
  %49 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %48, align 8
  %50 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %49, i64* %46, i64* %47) #7
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %43
  %53 = load i64, i64* %44, align 8
  %54 = bitcast %"class.v8::internal::Handle.1141"* %2 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %44, align 8
  store i64 %53, i64* %54, align 8
  br label %56

56:                                               ; preds = %43, %52, %22, %33, %21, %40
  %57 = phi i32 [ 1, %40 ], [ 0, %21 ], [ 2, %33 ], [ 1, %22 ], [ 2, %52 ], [ 1, %43 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEjT0_SD_SD_SD_T_"(%"class.v8::internal::Handle.1141"* nocapture, %"class.v8::internal::Handle.1141"* nocapture, %"class.v8::internal::Handle.1141"* nocapture, %"class.v8::internal::Handle.1141"* nocapture, %class.anon* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEjT0_SD_SD_T_"(%"class.v8::internal::Handle.1141"* %0, %"class.v8::internal::Handle.1141"* %1, %"class.v8::internal::Handle.1141"* %2, %class.anon* dereferenceable(8) %4)
  %7 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %3, i64 0, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %2, i64 0, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr %class.anon, %class.anon* %4, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %11, align 8
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %14 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %13, i64* %8, i64* %10) #7
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %46

16:                                               ; preds = %5
  %17 = bitcast %"class.v8::internal::Handle.1141"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.v8::internal::Handle.1141"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %17, align 8
  store i64 %18, i64* %19, align 8
  %21 = add i32 %6, 1
  %22 = load i64*, i64** %9, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %1, i64 0, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %11, align 8
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %27 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %26, i64* %22, i64* %24) #7
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %46

29:                                               ; preds = %16
  %30 = bitcast %"class.v8::internal::Handle.1141"* %1 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = load i64, i64* %17, align 8
  store i64 %32, i64* %30, align 8
  store i64 %31, i64* %17, align 8
  %33 = add i32 %6, 2
  %34 = load i64*, i64** %23, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %0, i64 0, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %11, align 8
  %38 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %37, align 8
  %39 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %38, i64* %34, i64* %36) #7
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %29
  %42 = bitcast %"class.v8::internal::Handle.1141"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = load i64, i64* %30, align 8
  store i64 %44, i64* %42, align 8
  store i64 %43, i64* %30, align 8
  %45 = add i32 %6, 3
  br label %46

46:                                               ; preds = %16, %41, %29, %5
  %47 = phi i32 [ %45, %41 ], [ %33, %29 ], [ %21, %16 ], [ %6, %5 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEjT0_SD_SD_SD_SD_T_"(%"class.v8::internal::Handle.1141"* nocapture, %"class.v8::internal::Handle.1141"* nocapture, %"class.v8::internal::Handle.1141"* nocapture, %"class.v8::internal::Handle.1141"* nocapture, %"class.v8::internal::Handle.1141"* nocapture, %class.anon* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %7 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEjT0_SD_SD_SD_T_"(%"class.v8::internal::Handle.1141"* %0, %"class.v8::internal::Handle.1141"* %1, %"class.v8::internal::Handle.1141"* %2, %"class.v8::internal::Handle.1141"* %3, %class.anon* dereferenceable(8) %5)
  %8 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %4, i64 0, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %3, i64 0, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr %class.anon, %class.anon* %5, i64 0, i32 0
  %13 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %12, align 8
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %14, i64* %9, i64* %11) #7
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %59

17:                                               ; preds = %6
  %18 = bitcast %"class.v8::internal::Handle.1141"* %3 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::Handle.1141"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %18, align 8
  store i64 %19, i64* %20, align 8
  %22 = add i32 %7, 1
  %23 = load i64*, i64** %10, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %2, i64 0, i32 0, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %12, align 8
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %26, align 8
  %28 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %27, i64* %23, i64* %25) #7
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %59

30:                                               ; preds = %17
  %31 = bitcast %"class.v8::internal::Handle.1141"* %2 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = load i64, i64* %18, align 8
  store i64 %33, i64* %31, align 8
  store i64 %32, i64* %18, align 8
  %34 = add i32 %7, 2
  %35 = load i64*, i64** %24, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %1, i64 0, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %12, align 8
  %39 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %38, align 8
  %40 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %39, i64* %35, i64* %37) #7
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %59

42:                                               ; preds = %30
  %43 = bitcast %"class.v8::internal::Handle.1141"* %1 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = load i64, i64* %31, align 8
  store i64 %45, i64* %43, align 8
  store i64 %44, i64* %31, align 8
  %46 = add i32 %7, 3
  %47 = load i64*, i64** %36, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %0, i64 0, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %12, align 8
  %51 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %50, align 8
  %52 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %51, i64* %47, i64* %49) #7
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %42
  %55 = bitcast %"class.v8::internal::Handle.1141"* %0 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = load i64, i64* %43, align 8
  store i64 %57, i64* %55, align 8
  store i64 %56, i64* %43, align 8
  %58 = add i32 %7, 4
  br label %59

59:                                               ; preds = %17, %42, %54, %30, %6
  %60 = phi i32 [ %58, %54 ], [ %46, %42 ], [ %34, %30 ], [ %22, %17 ], [ %7, %6 ]
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEbT0_SD_T_"(%"class.v8::internal::Handle.1141"*, %"class.v8::internal::Handle.1141"*, %class.anon* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %4 = ptrtoint %"class.v8::internal::Handle.1141"* %1 to i64
  %5 = ptrtoint %"class.v8::internal::Handle.1141"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %39 [
    i64 0, label %90
    i64 1, label %90
    i64 2, label %8
    i64 3, label %24
    i64 4, label %28
    i64 5, label %33
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %1, i64 -1, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %0, i64 0, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr %class.anon, %class.anon* %2, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %13, align 8
  %15 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %14, align 8
  %16 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %15, i64* %10, i64* %12) #7
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %90

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %1, i64 -1
  %20 = bitcast %"class.v8::internal::Handle.1141"* %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.v8::internal::Handle.1141"* %19 to i64*
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %20, align 8
  store i64 %21, i64* %22, align 8
  br label %90

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %0, i64 1
  %26 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %1, i64 -1
  %27 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEjT0_SD_SD_T_"(%"class.v8::internal::Handle.1141"* %0, %"class.v8::internal::Handle.1141"* %25, %"class.v8::internal::Handle.1141"* %26, %class.anon* dereferenceable(8) %2)
  br label %90

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %0, i64 1
  %30 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %0, i64 2
  %31 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %1, i64 -1
  %32 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEjT0_SD_SD_SD_T_"(%"class.v8::internal::Handle.1141"* %0, %"class.v8::internal::Handle.1141"* %29, %"class.v8::internal::Handle.1141"* %30, %"class.v8::internal::Handle.1141"* %31, %class.anon* dereferenceable(8) %2)
  br label %90

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %0, i64 1
  %35 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %0, i64 2
  %36 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %0, i64 3
  %37 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %1, i64 -1
  %38 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEjT0_SD_SD_SD_SD_T_"(%"class.v8::internal::Handle.1141"* %0, %"class.v8::internal::Handle.1141"* %34, %"class.v8::internal::Handle.1141"* %35, %"class.v8::internal::Handle.1141"* %36, %"class.v8::internal::Handle.1141"* %37, %class.anon* dereferenceable(8) %2)
  br label %90

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %0, i64 2
  %41 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %0, i64 1
  %42 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2v88internal6Module18GetModuleNamespaceEPNS2_7IsolateENS2_6HandleIS3_EEE3$_0PNS6_INS2_6StringEEEEEjT0_SD_SD_T_"(%"class.v8::internal::Handle.1141"* %0, %"class.v8::internal::Handle.1141"* %41, %"class.v8::internal::Handle.1141"* %40, %class.anon* dereferenceable(8) %2)
  %43 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %0, i64 3
  %44 = icmp eq %"class.v8::internal::Handle.1141"* %43, %1
  br i1 %44, label %90, label %45

45:                                               ; preds = %39
  %46 = getelementptr %class.anon, %class.anon* %2, i64 0, i32 0
  br label %47

47:                                               ; preds = %45, %83
  %48 = phi %"class.v8::internal::Handle.1141"* [ %40, %45 ], [ %50, %83 ]
  %49 = phi i32 [ 0, %45 ], [ %84, %83 ]
  %50 = phi %"class.v8::internal::Handle.1141"* [ %43, %45 ], [ %85, %83 ]
  %51 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %50, i64 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %48, i64 0, i32 0, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %46, align 8
  %56 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %55, align 8
  %57 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %56, i64* %52, i64* %54) #7
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %83

59:                                               ; preds = %47
  %60 = bitcast %"class.v8::internal::Handle.1141"* %50 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = inttoptr i64 %61 to i64*
  br label %63

63:                                               ; preds = %70, %59
  %64 = phi %"class.v8::internal::Handle.1141"* [ %50, %59 ], [ %65, %70 ]
  %65 = phi %"class.v8::internal::Handle.1141"* [ %48, %59 ], [ %71, %70 ]
  %66 = bitcast %"class.v8::internal::Handle.1141"* %65 to i64*
  %67 = bitcast %"class.v8::internal::Handle.1141"* %64 to i64*
  %68 = load i64, i64* %66, align 8
  store i64 %68, i64* %67, align 8
  %69 = icmp eq %"class.v8::internal::Handle.1141"* %65, %0
  br i1 %69, label %78, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %65, i64 -1
  %72 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %65, i64 -1, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %46, align 8
  %75 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %74, align 8
  %76 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %75, i64* %62, i64* %73) #7
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %63, label %78

78:                                               ; preds = %63, %70
  %79 = phi %"class.v8::internal::Handle.1141"* [ %65, %70 ], [ %0, %63 ]
  %80 = bitcast %"class.v8::internal::Handle.1141"* %79 to i64*
  store i64 %61, i64* %80, align 8
  %81 = add i32 %49, 1
  %82 = icmp eq i32 %81, 8
  br i1 %82, label %87, label %83

83:                                               ; preds = %78, %47
  %84 = phi i32 [ %81, %78 ], [ %49, %47 ]
  %85 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %50, i64 1
  %86 = icmp eq %"class.v8::internal::Handle.1141"* %85, %1
  br i1 %86, label %90, label %47

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %50, i64 1
  %89 = icmp eq %"class.v8::internal::Handle.1141"* %88, %1
  br label %90

90:                                               ; preds = %83, %87, %39, %8, %18, %3, %3, %33, %28, %24
  %91 = phi i1 [ true, %33 ], [ true, %28 ], [ true, %24 ], [ true, %3 ], [ true, %3 ], [ true, %18 ], [ true, %8 ], [ true, %39 ], [ %89, %87 ], [ true, %83 ]
  ret i1 %91
}

declare i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2v88internal6ModuleENS3_4HashENS_8equal_toIS3_EENS2_13ZoneAllocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table.1185"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !40
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #7
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1185", %"class.std::__1::__hash_table.1185"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN2v88internal6ModuleENS3_4HashENS_8equal_toIS3_EENS2_13ZoneAllocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.1185"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #7, !range !40
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1185", %"class.std::__1::__hash_table.1185"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1185", %"class.std::__1::__hash_table.1185"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #7
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #7, !range !40
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #7
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN2v88internal6ModuleENS3_4HashENS_8equal_toIS3_EENS2_13ZoneAllocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.1185"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2v88internal6ModuleENS3_4HashENS_8equal_toIS3_EENS2_13ZoneAllocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.1185"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %190, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.1185", %"class.std::__1::__hash_table.1185"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = shl i64 %1, 3
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ugt i64 %7, %12
  br i1 %13, label %14, label %16, !prof !5

14:                                               ; preds = %4
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %7) #7
  br label %18

16:                                               ; preds = %4
  %17 = add i64 %9, %7
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__hash_node_base.1189"**
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1185", %"class.std::__1::__hash_table.1185"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1189"** %20, %"struct.std::__1::__hash_node_base.1189"*** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1185", %"class.std::__1::__hash_table.1185"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %22, align 8
  store %"struct.std::__1::__hash_node_base.1189"* null, %"struct.std::__1::__hash_node_base.1189"** %20, align 8
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %42, label %24

24:                                               ; preds = %18
  %25 = add i64 %1, -1
  %26 = add i64 %1, -2
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %25, %27
  br label %47

31:                                               ; preds = %47, %24
  %32 = phi i64 [ 1, %24 ], [ %61, %47 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %21, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.1189"* null, %"struct.std::__1::__hash_node_base.1189"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !41

42:                                               ; preds = %31, %34, %18
  %43 = getelementptr inbounds %"class.std::__1::__hash_table.1185", %"class.std::__1::__hash_table.1185"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %45, null
  br i1 %46, label %192, label %64

47:                                               ; preds = %47, %29
  %48 = phi i64 [ 1, %29 ], [ %61, %47 ]
  %49 = phi i64 [ %30, %29 ], [ %62, %47 ]
  %50 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %21, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %50, i64 %48
  store %"struct.std::__1::__hash_node_base.1189"* null, %"struct.std::__1::__hash_node_base.1189"** %51, align 8
  %52 = add nuw nsw i64 %48, 1
  %53 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %21, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.1189"* null, %"struct.std::__1::__hash_node_base.1189"** %54, align 8
  %55 = add nuw nsw i64 %48, 2
  %56 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %21, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.1189"* null, %"struct.std::__1::__hash_node_base.1189"** %57, align 8
  %58 = add nuw i64 %48, 3
  %59 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %21, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base.1189"* null, %"struct.std::__1::__hash_node_base.1189"** %60, align 8
  %61 = add nuw i64 %48, 4
  %62 = add i64 %49, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %31, label %47

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %45, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.1189"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = tail call i64 @llvm.ctpop.i64(i64 %1) #7, !range !40
  %69 = icmp ugt i64 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = add i64 %1, -1
  %72 = and i64 %67, %71
  br label %77

73:                                               ; preds = %64
  %74 = icmp ult i64 %67, %1
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %67, %1
  br label %77

77:                                               ; preds = %70, %73, %75
  %78 = phi i64 [ %72, %70 ], [ %76, %75 ], [ %67, %73 ]
  %79 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %21, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %79, i64 %78
  store %"struct.std::__1::__hash_node_base.1189"* %43, %"struct.std::__1::__hash_node_base.1189"** %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %45, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %82, null
  br i1 %83, label %192, label %84

84:                                               ; preds = %77
  %85 = add i64 %1, -1
  br i1 %69, label %86, label %140

86:                                               ; preds = %84, %131
  %87 = phi %"struct.std::__1::__hash_node_base.1189"* [ %135, %131 ], [ %82, %84 ]
  %88 = phi i64 [ %133, %131 ], [ %78, %84 ]
  %89 = phi %"struct.std::__1::__hash_node_base.1189"* [ %132, %131 ], [ %45, %84 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %87, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base.1189"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %92, %1
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = urem i64 %92, %1
  br label %96

96:                                               ; preds = %94, %86
  %97 = phi i64 [ %95, %94 ], [ %92, %86 ]
  %98 = icmp eq i64 %97, %88
  br i1 %98, label %131, label %99

99:                                               ; preds = %96
  %100 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %21, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %100, i64 %97
  %102 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %102, null
  br i1 %103, label %130, label %137

104:                                              ; preds = %137, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1189"* [ %107, %109 ], [ %87, %137 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %107, null
  br i1 %108, label %117, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1189"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = load i64, i64* %139, align 8
  %114 = trunc i64 %113 to i32
  %115 = trunc i64 %112 to i32
  %116 = icmp eq i32 %114, %115
  br i1 %116, label %104, label %117

117:                                              ; preds = %109, %104
  %118 = ptrtoint %"struct.std::__1::__hash_node_base.1189"* %107 to i64
  %119 = bitcast %"struct.std::__1::__hash_node_base.1189"* %105 to i64*
  %120 = bitcast %"struct.std::__1::__hash_node_base.1189"* %89 to i64*
  store i64 %118, i64* %120, align 8
  %121 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %21, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %121, i64 %97
  %123 = bitcast %"struct.std::__1::__hash_node_base.1189"** %122 to i64**
  %124 = load i64*, i64** %123, align 8
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %119, align 8
  %126 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %21, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %126, i64 %97
  %128 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %128, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1189"* %87, %"struct.std::__1::__hash_node_base.1189"** %129, align 8
  br label %131

130:                                              ; preds = %99
  store %"struct.std::__1::__hash_node_base.1189"* %89, %"struct.std::__1::__hash_node_base.1189"** %101, align 8
  br label %131

131:                                              ; preds = %130, %117, %96
  %132 = phi %"struct.std::__1::__hash_node_base.1189"* [ %87, %130 ], [ %89, %117 ], [ %87, %96 ]
  %133 = phi i64 [ %97, %130 ], [ %88, %117 ], [ %88, %96 ]
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %132, i64 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %135, null
  br i1 %136, label %192, label %86

137:                                              ; preds = %99
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %87, i64 2
  %139 = bitcast %"struct.std::__1::__hash_node_base.1189"* %138 to i64*
  br label %104

140:                                              ; preds = %84, %184
  %141 = phi %"struct.std::__1::__hash_node_base.1189"* [ %188, %184 ], [ %82, %84 ]
  %142 = phi i64 [ %186, %184 ], [ %78, %84 ]
  %143 = phi %"struct.std::__1::__hash_node_base.1189"* [ %185, %184 ], [ %45, %84 ]
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %141, i64 1
  %145 = bitcast %"struct.std::__1::__hash_node_base.1189"* %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = and i64 %146, %85
  %148 = icmp eq i64 %147, %142
  br i1 %148, label %184, label %149

149:                                              ; preds = %140
  %150 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %21, align 8
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %150, i64 %147
  %152 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %152, null
  br i1 %153, label %157, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %141, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.1189"* %155 to i64*
  br label %158

157:                                              ; preds = %149
  store %"struct.std::__1::__hash_node_base.1189"* %143, %"struct.std::__1::__hash_node_base.1189"** %151, align 8
  br label %184

158:                                              ; preds = %154, %163
  %159 = phi %"struct.std::__1::__hash_node_base.1189"* [ %161, %163 ], [ %141, %154 ]
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %159, i64 0, i32 0
  %161 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %160, align 8
  %162 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %161, null
  br i1 %162, label %171, label %163

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %161, i64 2
  %165 = bitcast %"struct.std::__1::__hash_node_base.1189"* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = load i64, i64* %156, align 8
  %168 = trunc i64 %167 to i32
  %169 = trunc i64 %166 to i32
  %170 = icmp eq i32 %168, %169
  br i1 %170, label %158, label %171

171:                                              ; preds = %158, %163
  %172 = ptrtoint %"struct.std::__1::__hash_node_base.1189"* %161 to i64
  %173 = bitcast %"struct.std::__1::__hash_node_base.1189"* %159 to i64*
  %174 = bitcast %"struct.std::__1::__hash_node_base.1189"* %143 to i64*
  store i64 %172, i64* %174, align 8
  %175 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %21, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %175, i64 %147
  %177 = bitcast %"struct.std::__1::__hash_node_base.1189"** %176 to i64**
  %178 = load i64*, i64** %177, align 8
  %179 = load i64, i64* %178, align 8
  store i64 %179, i64* %173, align 8
  %180 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %21, align 8
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %180, i64 %147
  %182 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %181, align 8
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %182, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1189"* %141, %"struct.std::__1::__hash_node_base.1189"** %183, align 8
  br label %184

184:                                              ; preds = %140, %171, %157
  %185 = phi %"struct.std::__1::__hash_node_base.1189"* [ %141, %157 ], [ %143, %171 ], [ %141, %140 ]
  %186 = phi i64 [ %147, %157 ], [ %142, %171 ], [ %142, %140 ]
  %187 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %185, i64 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %188, null
  br i1 %189, label %192, label %140

190:                                              ; preds = %2
  %191 = bitcast %"class.std::__1::__hash_table.1185"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 16, i1 false)
  br label %192

192:                                              ; preds = %184, %131, %77, %42, %190
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1189"*, i8 } @_ZNSt3__112__hash_tableIN2v88internal6ModuleENS3_4HashENS_8equal_toIS3_EENS2_13ZoneAllocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1185"*, %"class.v8::internal::Module"* dereferenceable(8), %"class.v8::internal::Module"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Module", %"class.v8::internal::Module"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 7
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = ashr i32 %8, 1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1185", %"class.std::__1::__hash_table.1185"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %76, label %14

14:                                               ; preds = %3
  %15 = tail call i64 @llvm.ctpop.i64(i64 %12) #7, !range !40
  %16 = icmp ugt i64 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = add i64 %12, -1
  %19 = and i64 %18, %10
  br label %24

20:                                               ; preds = %14
  %21 = icmp ugt i64 %12, %10
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = urem i64 %10, %12
  br label %24

24:                                               ; preds = %17, %20, %22
  %25 = phi i64 [ %19, %17 ], [ %23, %22 ], [ %10, %20 ]
  %26 = getelementptr inbounds %"class.std::__1::__hash_table.1185", %"class.std::__1::__hash_table.1185"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %27, i64 %25
  %29 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %29, null
  br i1 %30, label %76, label %31

31:                                               ; preds = %24
  %32 = add i64 %12, -1
  %33 = trunc i64 %5 to i32
  br i1 %16, label %34, label %57

34:                                               ; preds = %31, %51
  %35 = phi %"struct.std::__1::__hash_node_base.1189"* [ %37, %51 ], [ %29, %31 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %35, i64 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %37, null
  br i1 %38, label %76, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %37, i64 1
  %41 = bitcast %"struct.std::__1::__hash_node_base.1189"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, %10
  br i1 %43, label %51, label %44

44:                                               ; preds = %39
  %45 = icmp ult i64 %42, %12
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %42, %12
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi i64 [ %47, %46 ], [ %42, %44 ]
  %50 = icmp eq i64 %49, %25
  br i1 %50, label %51, label %76

51:                                               ; preds = %48, %39
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %37, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base.1189"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  %56 = icmp eq i32 %55, %33
  br i1 %56, label %177, label %34

57:                                               ; preds = %31, %70
  %58 = phi %"struct.std::__1::__hash_node_base.1189"* [ %60, %70 ], [ %29, %31 ]
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %58, i64 0, i32 0
  %60 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %60, null
  br i1 %61, label %76, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %60, i64 1
  %64 = bitcast %"struct.std::__1::__hash_node_base.1189"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, %10
  %67 = and i64 %65, %32
  %68 = icmp eq i64 %67, %25
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %76

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %60, i64 2
  %72 = bitcast %"struct.std::__1::__hash_node_base.1189"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = trunc i64 %73 to i32
  %75 = icmp eq i32 %74, %33
  br i1 %75, label %177, label %57

76:                                               ; preds = %62, %57, %48, %34, %24, %3
  %77 = phi i64 [ %25, %24 ], [ undef, %3 ], [ %25, %34 ], [ %25, %48 ], [ %25, %57 ], [ %25, %62 ]
  %78 = getelementptr inbounds %"class.std::__1::__hash_table.1185", %"class.std::__1::__hash_table.1185"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %79 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %78, align 8, !noalias !42
  %80 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %79, i64 0, i32 2
  %81 = load i64, i64* %80, align 8, !noalias !42
  %82 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %79, i64 0, i32 3
  %83 = load i64, i64* %82, align 8, !noalias !42
  %84 = sub i64 %83, %81
  %85 = icmp ult i64 %84, 24
  br i1 %85, label %86, label %88, !prof !5

86:                                               ; preds = %76
  %87 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %79, i64 24) #7, !noalias !42
  br label %90

88:                                               ; preds = %76
  %89 = add i64 %81, 24
  store i64 %89, i64* %80, align 8, !noalias !42
  br label %90

90:                                               ; preds = %86, %88
  %91 = phi i64 [ %87, %86 ], [ %81, %88 ]
  %92 = inttoptr i64 %91 to %"struct.std::__1::__hash_node.1237"*
  %93 = getelementptr inbounds %"class.v8::internal::Module", %"class.v8::internal::Module"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node.1237", %"struct.std::__1::__hash_node.1237"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %95 = load i64, i64* %93, align 8, !noalias !42
  store i64 %95, i64* %94, align 8, !noalias !42
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node.1237", %"struct.std::__1::__hash_node.1237"* %92, i64 0, i32 1
  store i64 %10, i64* %96, align 8, !noalias !42
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node.1237", %"struct.std::__1::__hash_node.1237"* %92, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1189"* null, %"struct.std::__1::__hash_node_base.1189"** %97, align 8, !noalias !42
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.1185", %"class.std::__1::__hash_table.1185"* %0, i64 0, i32 2, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 1
  %101 = uitofp i64 %100 to float
  %102 = uitofp i64 %12 to float
  %103 = getelementptr inbounds %"class.std::__1::__hash_table.1185", %"class.std::__1::__hash_table.1185"* %0, i64 0, i32 3, i32 0, i32 0
  %104 = load float, float* %103, align 4
  %105 = fmul float %104, %102
  %106 = fcmp olt float %105, %101
  %107 = or i1 %13, %106
  br i1 %107, label %108, label %131

108:                                              ; preds = %90
  %109 = shl i64 %12, 1
  %110 = icmp ult i64 %12, 3
  %111 = tail call i64 @llvm.ctpop.i64(i64 %12) #7, !range !40
  %112 = icmp ugt i64 %111, 1
  %113 = or i1 %110, %112
  %114 = zext i1 %113 to i64
  %115 = or i64 %109, %114
  %116 = fdiv float %101, %104
  %117 = tail call float @llvm.ceil.f32(float %116) #7
  %118 = fptoui float %117 to i64
  %119 = icmp ult i64 %115, %118
  %120 = select i1 %119, i64 %118, i64 %115
  tail call void @_ZNSt3__112__hash_tableIN2v88internal6ModuleENS3_4HashENS_8equal_toIS3_EENS2_13ZoneAllocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table.1185"* %0, i64 %120)
  %121 = load i64, i64* %11, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %121) #7, !range !40
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %108
  %125 = add i64 %121, -1
  %126 = and i64 %125, %10
  br label %131

127:                                              ; preds = %108
  %128 = icmp ugt i64 %121, %10
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %10, %121
  br label %131

131:                                              ; preds = %129, %127, %124, %90
  %132 = phi i64 [ %12, %90 ], [ %121, %124 ], [ %121, %127 ], [ %121, %129 ]
  %133 = phi i64 [ %77, %90 ], [ %126, %124 ], [ %10, %127 ], [ %130, %129 ]
  %134 = getelementptr inbounds %"class.std::__1::__hash_table.1185", %"class.std::__1::__hash_table.1185"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %134, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %135, i64 %133
  %137 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %137, null
  br i1 %138, label %139, label %167

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"class.std::__1::__hash_table.1185", %"class.std::__1::__hash_table.1185"* %0, i64 0, i32 1, i32 0, i32 0
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %140, i64 0, i32 0
  %142 = bitcast %"struct.std::__1::__hash_node_base.1189"* %140 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = inttoptr i64 %91 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node.1237", %"struct.std::__1::__hash_node.1237"* %92, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1189"* %145, %"struct.std::__1::__hash_node_base.1189"** %141, align 8
  %146 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %134, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %146, i64 %133
  store %"struct.std::__1::__hash_node_base.1189"* %140, %"struct.std::__1::__hash_node_base.1189"** %147, align 8
  %148 = load %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %97, align 8
  %149 = icmp eq %"struct.std::__1::__hash_node_base.1189"* %148, null
  br i1 %149, label %173, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %148, i64 1
  %152 = bitcast %"struct.std::__1::__hash_node_base.1189"* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = tail call i64 @llvm.ctpop.i64(i64 %132) #7, !range !40
  %155 = icmp ugt i64 %154, 1
  br i1 %155, label %159, label %156

156:                                              ; preds = %150
  %157 = add i64 %132, -1
  %158 = and i64 %153, %157
  br label %163

159:                                              ; preds = %150
  %160 = icmp ult i64 %153, %132
  br i1 %160, label %163, label %161

161:                                              ; preds = %159
  %162 = urem i64 %153, %132
  br label %163

163:                                              ; preds = %156, %159, %161
  %164 = phi i64 [ %158, %156 ], [ %162, %161 ], [ %153, %159 ]
  %165 = load %"struct.std::__1::__hash_node_base.1189"**, %"struct.std::__1::__hash_node_base.1189"*** %134, align 8
  %166 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189"*, %"struct.std::__1::__hash_node_base.1189"** %165, i64 %164
  store %"struct.std::__1::__hash_node_base.1189"* %145, %"struct.std::__1::__hash_node_base.1189"** %166, align 8
  br label %173

167:                                              ; preds = %131
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1189", %"struct.std::__1::__hash_node_base.1189"* %137, i64 0, i32 0
  %169 = bitcast %"struct.std::__1::__hash_node_base.1189"* %137 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = inttoptr i64 %91 to i64*
  store i64 %170, i64* %171, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node.1237", %"struct.std::__1::__hash_node.1237"* %92, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1189"* %172, %"struct.std::__1::__hash_node_base.1189"** %168, align 8
  br label %173

173:                                              ; preds = %139, %163, %167
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node.1237", %"struct.std::__1::__hash_node.1237"* %92, i64 0, i32 0
  %175 = load i64, i64* %98, align 8
  %176 = add i64 %175, 1
  store i64 %176, i64* %98, align 8
  br label %177

177:                                              ; preds = %70, %51, %173
  %178 = phi i8 [ 1, %173 ], [ 0, %51 ], [ 0, %70 ]
  %179 = phi %"struct.std::__1::__hash_node_base.1189"* [ %174, %173 ], [ %37, %51 ], [ %60, %70 ]
  %180 = insertvalue { %"struct.std::__1::__hash_node_base.1189"*, i8 } undef, %"struct.std::__1::__hash_node_base.1189"* %179, 0
  %181 = insertvalue { %"struct.std::__1::__hash_node_base.1189"*, i8 } %180, i8 %178, 1
  ret { %"struct.std::__1::__hash_node_base.1189"*, i8 } %181
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2001, i32 2001, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !12}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !12}
!22 = distinct !{!22, !14}
!23 = distinct !{!23, !12}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !12}
!30 = distinct !{!30, !14}
!31 = distinct !{!31, !12}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !12}
!38 = distinct !{!38, !14}
!39 = distinct !{!39, !12}
!40 = !{i64 0, i64 65}
!41 = distinct !{!41, !14}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__112__hash_tableIN2v88internal6ModuleENS3_4HashENS_8equal_toIS3_EENS2_13ZoneAllocatorIS3_EEE21__construct_node_hashIRKS3_JEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__112__hash_tableIN2v88internal6ModuleENS3_4HashENS_8equal_toIS3_EENS2_13ZoneAllocatorIS3_EEE21__construct_node_hashIRKS3_JEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_"}
