; ModuleID = '../../third_party/blink/renderer/modules/gamepad/gamepad_comparisons.cc'
source_filename = "../../third_party/blink/renderer/modules/gamepad/gamepad_comparisons.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::GamepadStateCompareResult" = type { i8, %"class.std::__1::bitset", %"class.std::__1::bitset", [4 x %"class.std::__1::bitset.11"], [4 x %"class.std::__1::bitset.13"], [4 x %"class.std::__1::bitset.13"], [4 x %"class.std::__1::bitset.13"] }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.std::__1::bitset.11" = type { %"class.std::__1::__bitset.12" }
%"class.std::__1::__bitset.12" = type { i64 }
%"class.std::__1::bitset.13" = type { %"class.std::__1::__bitset.14" }
%"class.std::__1::__bitset.14" = type { i64 }
%"class.blink::GamepadList" = type { %"class.blink::ScriptWrappable", [4 x %"class.blink::Member"] }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Gamepad"* }
%"class.blink::Gamepad" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.WTF::String", i32, i8, double, %"class.WTF::String", %"class.WTF::Vector", %"class.blink::HeapVector", i8, i32, i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::Gamepad::Client"* }
%"class.blink::Gamepad::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { double*, i32, i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.5" }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { %"class.blink::Member.8"*, i32, i32 }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::GamepadButton"* }
%"class.blink::GamepadButton" = type <{ %"class.blink::ScriptWrappable", double, i8, i8, [6 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_13GamepadButtonEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink25GamepadStateCompareResultC1EPNS_11GamepadListES2_bb = hidden unnamed_addr alias void (%"class.blink::GamepadStateCompareResult"*, %"class.blink::GamepadList"*, %"class.blink::GamepadList"*, i1, i1), void (%"class.blink::GamepadStateCompareResult"*, %"class.blink::GamepadList"*, %"class.blink::GamepadList"*, i1, i1)* @_ZN5blink25GamepadStateCompareResultC2EPNS_11GamepadListES2_bb

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18GamepadComparisons17HasUserActivationEPNS_11GamepadListE(%"class.blink::GamepadList"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::GamepadList"* %0, null
  br i1 %2, label %28, label %3

3:                                                ; preds = %1
  %4 = tail call %"class.blink::Gamepad"* @_ZN5blink11GamepadList4itemEj(%"class.blink::GamepadList"* nonnull %0, i32 0) #7
  %5 = icmp eq %"class.blink::Gamepad"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %3
  %7 = tail call dereferenceable(16) %"class.blink::HeapVector"* @_ZN5blink7Gamepad7buttonsEv(%"class.blink::Gamepad"* nonnull %4) #7
  %8 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %25, label %17

15:                                               ; preds = %17
  %16 = icmp eq %"class.blink::Member.8"* %24, %13
  br i1 %16, label %25, label %17

17:                                               ; preds = %6, %15
  %18 = phi %"class.blink::Member.8"* [ %24, %15 ], [ %9, %6 ]
  %19 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::GamepadButton"*, %"class.blink::GamepadButton"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::GamepadButton", %"class.blink::GamepadButton"* %20, i64 0, i32 1
  %22 = load double, double* %21, align 8
  %23 = fcmp ule double %22, 9.000000e-01
  %24 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %18, i64 1
  br i1 %23, label %15, label %28

25:                                               ; preds = %15, %6, %3
  %26 = tail call %"class.blink::Gamepad"* @_ZN5blink11GamepadList4itemEj(%"class.blink::GamepadList"* nonnull %0, i32 1) #7
  %27 = icmp eq %"class.blink::Gamepad"* %26, null
  br i1 %27, label %49, label %30

28:                                               ; preds = %17, %39, %61, %91, %83, %71, %74, %1
  %29 = phi i1 [ false, %1 ], [ false, %74 ], [ false, %71 ], [ false, %91 ], [ true, %83 ], [ true, %61 ], [ true, %39 ], [ true, %17 ]
  ret i1 %29

30:                                               ; preds = %25
  %31 = tail call dereferenceable(16) %"class.blink::HeapVector"* @_ZN5blink7Gamepad7buttonsEv(%"class.blink::Gamepad"* nonnull %26) #7
  %32 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %31, i64 0, i32 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %33, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %30, %47
  %40 = phi %"class.blink::Member.8"* [ %46, %47 ], [ %33, %30 ]
  %41 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.blink::GamepadButton"*, %"class.blink::GamepadButton"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::GamepadButton", %"class.blink::GamepadButton"* %42, i64 0, i32 1
  %44 = load double, double* %43, align 8
  %45 = fcmp ule double %44, 9.000000e-01
  %46 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %40, i64 1
  br i1 %45, label %47, label %28

47:                                               ; preds = %39
  %48 = icmp eq %"class.blink::Member.8"* %46, %37
  br i1 %48, label %49, label %39

49:                                               ; preds = %47, %30, %25
  %50 = tail call %"class.blink::Gamepad"* @_ZN5blink11GamepadList4itemEj(%"class.blink::GamepadList"* nonnull %0, i32 2) #7
  %51 = icmp eq %"class.blink::Gamepad"* %50, null
  br i1 %51, label %71, label %52

52:                                               ; preds = %49
  %53 = tail call dereferenceable(16) %"class.blink::HeapVector"* @_ZN5blink7Gamepad7buttonsEv(%"class.blink::Gamepad"* nonnull %50) #7
  %54 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %53, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %53, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %55, i64 %58
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %71, label %61

61:                                               ; preds = %52, %69
  %62 = phi %"class.blink::Member.8"* [ %68, %69 ], [ %55, %52 ]
  %63 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::GamepadButton"*, %"class.blink::GamepadButton"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::GamepadButton", %"class.blink::GamepadButton"* %64, i64 0, i32 1
  %66 = load double, double* %65, align 8
  %67 = fcmp ule double %66, 9.000000e-01
  %68 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %62, i64 1
  br i1 %67, label %69, label %28

69:                                               ; preds = %61
  %70 = icmp eq %"class.blink::Member.8"* %68, %59
  br i1 %70, label %71, label %61

71:                                               ; preds = %69, %52, %49
  %72 = tail call %"class.blink::Gamepad"* @_ZN5blink11GamepadList4itemEj(%"class.blink::GamepadList"* nonnull %0, i32 3) #7
  %73 = icmp eq %"class.blink::Gamepad"* %72, null
  br i1 %73, label %28, label %74

74:                                               ; preds = %71
  %75 = tail call dereferenceable(16) %"class.blink::HeapVector"* @_ZN5blink7Gamepad7buttonsEv(%"class.blink::Gamepad"* nonnull %72) #7
  %76 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %75, i64 0, i32 0, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %77, i64 %80
  %82 = icmp eq i32 %79, 0
  br i1 %82, label %28, label %83

83:                                               ; preds = %74, %91
  %84 = phi %"class.blink::Member.8"* [ %90, %91 ], [ %77, %74 ]
  %85 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.blink::GamepadButton"*, %"class.blink::GamepadButton"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::GamepadButton", %"class.blink::GamepadButton"* %86, i64 0, i32 1
  %88 = load double, double* %87, align 8
  %89 = fcmp ule double %88, 9.000000e-01
  %90 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %84, i64 1
  br i1 %89, label %91, label %28

91:                                               ; preds = %83
  %92 = icmp eq %"class.blink::Member.8"* %90, %81
  br i1 %92, label %28, label %83
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::Gamepad"* @_ZN5blink11GamepadList4itemEj(%"class.blink::GamepadList"*, i32) local_unnamed_addr #2

declare dereferenceable(16) %"class.blink::HeapVector"* @_ZN5blink7Gamepad7buttonsEv(%"class.blink::Gamepad"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18GamepadComparisons27HasGamepadConnectionChangedEbbbPbS1_(i1 zeroext, i1 zeroext, i1 zeroext, i8*, i8*) local_unnamed_addr #3 align 2 {
  %6 = icmp eq i8* %3, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %5
  br i1 %2, label %12, label %8

8:                                                ; preds = %7
  %9 = xor i1 %0, true
  %10 = and i1 %9, %1
  %11 = zext i1 %10 to i8
  br label %12

12:                                               ; preds = %8, %7
  %13 = phi i8 [ 1, %7 ], [ %11, %8 ]
  store i8 %13, i8* %3, align 1
  br label %14

14:                                               ; preds = %5, %12
  %15 = icmp eq i8* %4, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %14
  %17 = xor i1 %0, true
  %18 = or i1 %17, %2
  %19 = xor i1 %1, true
  %20 = select i1 %18, i1 %2, i1 %19
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %4, align 1
  br label %22

22:                                               ; preds = %14, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25GamepadStateCompareResultC2EPNS_11GamepadListES2_bb(%"class.blink::GamepadStateCompareResult"*, %"class.blink::GamepadList"*, %"class.blink::GamepadList"*, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 144, i1 false)
  %9 = tail call zeroext i1 @_ZN5blink25GamepadStateCompareResult15CompareGamepadsEPNS_11GamepadListES2_bb(%"class.blink::GamepadStateCompareResult"* %0, %"class.blink::GamepadList"* %1, %"class.blink::GamepadList"* %2, i1 zeroext %3, i1 zeroext %4)
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink25GamepadStateCompareResult15CompareGamepadsEPNS_11GamepadListES2_bb(%"class.blink::GamepadStateCompareResult"* nocapture, %"class.blink::GamepadList"*, %"class.blink::GamepadList"*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = icmp eq %"class.blink::GamepadList"* %2, null
  br i1 %6, label %73, label %7

7:                                                ; preds = %5
  %8 = icmp eq %"class.blink::GamepadList"* %1, null
  %9 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 2, i32 0, i32 0
  br label %14

11:                                               ; preds = %66
  %12 = and i8 %70, 1
  %13 = icmp ne i8 %12, 0
  br label %73

14:                                               ; preds = %66, %7
  %15 = phi i64 [ 0, %7 ], [ %71, %66 ]
  %16 = phi i8 [ 0, %7 ], [ %70, %66 ]
  %17 = trunc i64 %15 to i32
  br i1 %8, label %18, label %20

18:                                               ; preds = %14
  %19 = tail call %"class.blink::Gamepad"* @_ZN5blink11GamepadList4itemEj(%"class.blink::GamepadList"* nonnull %2, i32 %17) #7
  br label %28

20:                                               ; preds = %14
  %21 = tail call %"class.blink::Gamepad"* @_ZN5blink11GamepadList4itemEj(%"class.blink::GamepadList"* nonnull %1, i32 %17) #7
  %22 = tail call %"class.blink::Gamepad"* @_ZN5blink11GamepadList4itemEj(%"class.blink::GamepadList"* nonnull %2, i32 %17) #7
  %23 = icmp eq %"class.blink::Gamepad"* %21, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::Gamepad", %"class.blink::Gamepad"* %21, i64 0, i32 4
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = icmp ne i8 %26, 0
  br label %28

28:                                               ; preds = %20, %18, %24
  %29 = phi i1 [ false, %20 ], [ true, %24 ], [ false, %18 ]
  %30 = phi %"class.blink::Gamepad"* [ %22, %20 ], [ %22, %24 ], [ %19, %18 ]
  %31 = phi %"class.blink::Gamepad"* [ null, %20 ], [ %21, %24 ], [ null, %18 ]
  %32 = phi i1 [ false, %20 ], [ %27, %24 ], [ false, %18 ]
  %33 = icmp eq %"class.blink::Gamepad"* %30, null
  br i1 %33, label %52, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::Gamepad", %"class.blink::Gamepad"* %30, i64 0, i32 4
  %36 = load i8, i8* %35, align 4, !range !2
  %37 = icmp ne i8 %36, 0
  br i1 %29, label %38, label %52

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::Gamepad", %"class.blink::Gamepad"* %31, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::Gamepad", %"class.blink::Gamepad"* %30, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"* %42) #7
  %44 = xor i1 %43, true
  %45 = xor i1 %32, true
  %46 = and i1 %37, %45
  %47 = xor i1 %43, true
  %48 = or i1 %46, %47
  %49 = or i1 %45, %44
  %50 = xor i1 %37, true
  %51 = select i1 %49, i1 %44, i1 %50
  br label %52

52:                                               ; preds = %34, %28, %38
  %53 = phi i1 [ %48, %38 ], [ %37, %34 ], [ false, %28 ]
  %54 = phi i1 [ %51, %38 ], [ %32, %34 ], [ %32, %28 ]
  %55 = tail call zeroext i1 @_ZN5blink25GamepadStateCompareResult11CompareAxesEPNS_7GamepadES2_mb(%"class.blink::GamepadStateCompareResult"* %0, %"class.blink::Gamepad"* %31, %"class.blink::Gamepad"* %30, i64 %15, i1 zeroext %3)
  %56 = tail call zeroext i1 @_ZN5blink25GamepadStateCompareResult14CompareButtonsEPNS_7GamepadES2_mb(%"class.blink::GamepadStateCompareResult"* %0, %"class.blink::Gamepad"* %31, %"class.blink::Gamepad"* %30, i64 %15, i1 zeroext %4)
  br i1 %53, label %57, label %61

57:                                               ; preds = %52
  %58 = shl i64 1, %15
  %59 = load i64, i64* %9, align 8
  %60 = or i64 %59, %58
  store i64 %60, i64* %9, align 8
  br label %61

61:                                               ; preds = %52, %57
  br i1 %54, label %62, label %66

62:                                               ; preds = %61
  %63 = shl i64 1, %15
  %64 = load i64, i64* %10, align 8
  %65 = or i64 %64, %63
  store i64 %65, i64* %10, align 8
  br label %66

66:                                               ; preds = %61, %62
  %67 = or i1 %54, %53
  %68 = or i1 %67, %55
  %69 = or i1 %68, %56
  %70 = select i1 %69, i8 1, i8 %16
  %71 = add nuw nsw i64 %15, 1
  %72 = icmp eq i64 %71, 4
  br i1 %72, label %11, label %14

73:                                               ; preds = %5, %11
  %74 = phi i1 [ %13, %11 ], [ false, %5 ]
  ret i1 %74
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink25GamepadStateCompareResult11IsDifferentEv(%"class.blink::GamepadStateCompareResult"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink25GamepadStateCompareResult18IsGamepadConnectedEm(%"class.blink::GamepadStateCompareResult"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp ugt i64 %1, 3
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @abort() #8
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = shl i64 1, %1
  %8 = load i64, i64* %6, align 8
  %9 = and i64 %8, %7
  %10 = icmp ne i64 %9, 0
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink25GamepadStateCompareResult21IsGamepadDisconnectedEm(%"class.blink::GamepadStateCompareResult"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp ugt i64 %1, 3
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @abort() #8
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = shl i64 1, %1
  %8 = load i64, i64* %6, align 8
  %9 = and i64 %8, %7
  %10 = icmp ne i64 %9, 0
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink25GamepadStateCompareResult13IsAxisChangedEmm(%"class.blink::GamepadStateCompareResult"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp ugt i64 %2, 15
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @abort() #8
  unreachable

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 3, i64 %1, i32 0, i32 0
  %8 = shl i64 1, %2
  %9 = load i64, i64* %7, align 8
  %10 = and i64 %9, %8
  %11 = icmp ne i64 %10, 0
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink25GamepadStateCompareResult15IsButtonChangedEmm(%"class.blink::GamepadStateCompareResult"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp ugt i64 %2, 31
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @abort() #8
  unreachable

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 4, i64 %1, i32 0, i32 0
  %8 = shl i64 1, %2
  %9 = load i64, i64* %7, align 8
  %10 = and i64 %9, %8
  %11 = icmp ne i64 %10, 0
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink25GamepadStateCompareResult12IsButtonDownEmm(%"class.blink::GamepadStateCompareResult"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp ugt i64 %2, 31
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @abort() #8
  unreachable

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 5, i64 %1, i32 0, i32 0
  %8 = shl i64 1, %2
  %9 = load i64, i64* %7, align 8
  %10 = and i64 %9, %8
  %11 = icmp ne i64 %10, 0
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink25GamepadStateCompareResult10IsButtonUpEmm(%"class.blink::GamepadStateCompareResult"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp ugt i64 %2, 31
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @abort() #8
  unreachable

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 6, i64 %1, i32 0, i32 0
  %8 = shl i64 1, %2
  %9 = load i64, i64* %7, align 8
  %10 = and i64 %9, %8
  %11 = icmp ne i64 %10, 0
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink25GamepadStateCompareResult11CompareAxesEPNS_7GamepadES2_mb(%"class.blink::GamepadStateCompareResult"* nocapture, %"class.blink::Gamepad"*, %"class.blink::Gamepad"*, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = icmp eq %"class.blink::Gamepad"* %2, null
  br i1 %6, label %65, label %7

7:                                                ; preds = %5
  %8 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink7Gamepad4axesEv(%"class.blink::Gamepad"* nonnull %2) #7
  %9 = icmp eq %"class.blink::Gamepad"* %1, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink7Gamepad4axesEv(%"class.blink::Gamepad"* nonnull %1) #7
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi %"class.WTF::Vector"* [ %11, %10 ], [ null, %7 ]
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %61, label %17

17:                                               ; preds = %12
  %18 = icmp eq %"class.WTF::Vector"* %13, null
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %13, i64 0, i32 0, i32 0, i32 2
  %20 = xor i1 %4, true
  %21 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 3, i64 %3, i32 0, i32 0
  br label %22

22:                                               ; preds = %17, %55
  %23 = phi i64 [ 0, %17 ], [ %57, %55 ]
  %24 = phi i8 [ 0, %17 ], [ %56, %55 ]
  %25 = trunc i64 %23 to i32
  %26 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 %25) #7
  %27 = load double, double* %26, align 8
  br i1 %18, label %45, label %28

28:                                               ; preds = %22
  %29 = load i32, i32* %19, align 4
  %30 = zext i32 %29 to i64
  %31 = icmp ult i64 %23, %30
  br i1 %31, label %32, label %45

32:                                               ; preds = %28
  %33 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %13, i32 %25)
  %34 = load double, double* %33, align 8
  %35 = fcmp oeq double %34, %27
  %36 = or i1 %35, %20
  br i1 %36, label %44, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %23, 15
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #8
  unreachable

40:                                               ; preds = %37
  %41 = shl i64 1, %23
  %42 = load i64, i64* %21, align 8
  %43 = or i64 %42, %41
  store i64 %43, i64* %21, align 8
  br label %55

44:                                               ; preds = %32
  br i1 %35, label %55, label %61

45:                                               ; preds = %22, %28
  %46 = fcmp une double %27, 0.000000e+00
  br i1 %46, label %47, label %55

47:                                               ; preds = %45
  br i1 %4, label %48, label %61

48:                                               ; preds = %47
  %49 = icmp ugt i64 %23, 15
  br i1 %49, label %50, label %51

50:                                               ; preds = %48
  tail call void @abort() #8
  unreachable

51:                                               ; preds = %48
  %52 = shl i64 1, %23
  %53 = load i64, i64* %21, align 8
  %54 = or i64 %53, %52
  store i64 %54, i64* %21, align 8
  br label %55

55:                                               ; preds = %44, %51, %45, %40
  %56 = phi i8 [ %24, %44 ], [ 1, %51 ], [ %24, %45 ], [ 1, %40 ]
  %57 = add nuw nsw i64 %23, 1
  %58 = load i32, i32* %14, align 4
  %59 = zext i32 %58 to i64
  %60 = icmp ult i64 %57, %59
  br i1 %60, label %22, label %61

61:                                               ; preds = %55, %47, %44, %12
  %62 = phi i8 [ 0, %12 ], [ 1, %44 ], [ 1, %47 ], [ %56, %55 ]
  %63 = and i8 %62, 1
  %64 = icmp ne i8 %63, 0
  br label %65

65:                                               ; preds = %5, %61
  %66 = phi i1 [ %64, %61 ], [ false, %5 ]
  ret i1 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink25GamepadStateCompareResult14CompareButtonsEPNS_7GamepadES2_mb(%"class.blink::GamepadStateCompareResult"* nocapture, %"class.blink::Gamepad"*, %"class.blink::Gamepad"*, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = icmp eq %"class.blink::Gamepad"* %2, null
  br i1 %6, label %115, label %7

7:                                                ; preds = %5
  %8 = tail call dereferenceable(16) %"class.blink::HeapVector"* @_ZN5blink7Gamepad7buttonsEv(%"class.blink::Gamepad"* nonnull %2) #7
  %9 = icmp eq %"class.blink::Gamepad"* %1, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = tail call dereferenceable(16) %"class.blink::HeapVector"* @_ZN5blink7Gamepad7buttonsEv(%"class.blink::Gamepad"* nonnull %1) #7
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi %"class.blink::HeapVector"* [ %11, %10 ], [ null, %7 ]
  %14 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %111, label %18

18:                                               ; preds = %12
  %19 = icmp eq %"class.blink::HeapVector"* %13, null
  %20 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %13, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %13, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 4, i64 %3, i32 0, i32 0
  %23 = xor i1 %4, true
  %24 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 6, i64 %3, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 5, i64 %3, i32 0, i32 0
  br label %26

26:                                               ; preds = %18, %105
  %27 = phi i64 [ 0, %18 ], [ %107, %105 ]
  %28 = phi i8 [ 0, %18 ], [ %106, %105 ]
  %29 = trunc i64 %27 to i32
  %30 = tail call dereferenceable(8) %"class.blink::Member.8"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13GamepadButtonEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.5"* %14, i32 %29) #7
  %31 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::GamepadButton"*, %"class.blink::GamepadButton"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::GamepadButton", %"class.blink::GamepadButton"* %32, i64 0, i32 1
  %34 = load double, double* %33, align 8
  %35 = tail call dereferenceable(8) %"class.blink::Member.8"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13GamepadButtonEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.5"* %14, i32 %29) #7
  %36 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::GamepadButton"*, %"class.blink::GamepadButton"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::GamepadButton", %"class.blink::GamepadButton"* %37, i64 0, i32 2
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp ne i8 %39, 0
  br i1 %19, label %85, label %41

41:                                               ; preds = %26
  %42 = load i32, i32* %21, align 4
  %43 = zext i32 %42 to i64
  %44 = icmp ult i64 %27, %43
  br i1 %44, label %45, label %85

45:                                               ; preds = %41
  %46 = tail call dereferenceable(8) %"class.blink::Member.8"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13GamepadButtonEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.5"* %20, i32 %29)
  %47 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::GamepadButton"*, %"class.blink::GamepadButton"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::GamepadButton", %"class.blink::GamepadButton"* %48, i64 0, i32 1
  %50 = load double, double* %49, align 8
  %51 = tail call dereferenceable(8) %"class.blink::Member.8"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13GamepadButtonEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.5"* %20, i32 %29)
  %52 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.blink::GamepadButton"*, %"class.blink::GamepadButton"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::GamepadButton", %"class.blink::GamepadButton"* %53, i64 0, i32 2
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  %57 = fcmp une double %50, %34
  br i1 %57, label %58, label %66

58:                                               ; preds = %45
  br i1 %4, label %59, label %111

59:                                               ; preds = %58
  %60 = icmp ugt i64 %27, 31
  br i1 %60, label %61, label %62

61:                                               ; preds = %59
  tail call void @abort() #8
  unreachable

62:                                               ; preds = %59
  %63 = shl i64 1, %27
  %64 = load i64, i64* %22, align 8
  %65 = or i64 %64, %63
  store i64 %65, i64* %22, align 8
  br label %66

66:                                               ; preds = %62, %45
  %67 = phi i8 [ 1, %62 ], [ %28, %45 ]
  %68 = xor i1 %40, %56
  %69 = or i1 %68, %23
  br i1 %69, label %84, label %70

70:                                               ; preds = %66
  %71 = icmp ugt i64 %27, 31
  br i1 %40, label %72, label %78

72:                                               ; preds = %70
  br i1 %71, label %73, label %74

73:                                               ; preds = %72
  tail call void @abort() #8
  unreachable

74:                                               ; preds = %72
  %75 = shl i64 1, %27
  %76 = load i64, i64* %25, align 8
  %77 = or i64 %76, %75
  store i64 %77, i64* %25, align 8
  br label %105

78:                                               ; preds = %70
  br i1 %71, label %79, label %80

79:                                               ; preds = %78
  tail call void @abort() #8
  unreachable

80:                                               ; preds = %78
  %81 = shl i64 1, %27
  %82 = load i64, i64* %24, align 8
  %83 = or i64 %82, %81
  store i64 %83, i64* %24, align 8
  br label %105

84:                                               ; preds = %66
  br i1 %68, label %105, label %111

85:                                               ; preds = %26, %41
  %86 = fcmp ogt double %34, 0.000000e+00
  br i1 %86, label %87, label %95

87:                                               ; preds = %85
  br i1 %4, label %88, label %111

88:                                               ; preds = %87
  %89 = icmp ugt i64 %27, 31
  br i1 %89, label %90, label %91

90:                                               ; preds = %88
  tail call void @abort() #8
  unreachable

91:                                               ; preds = %88
  %92 = shl i64 1, %27
  %93 = load i64, i64* %22, align 8
  %94 = or i64 %93, %92
  store i64 %94, i64* %22, align 8
  br label %95

95:                                               ; preds = %91, %85
  %96 = phi i8 [ 1, %91 ], [ %28, %85 ]
  br i1 %40, label %97, label %105

97:                                               ; preds = %95
  br i1 %4, label %98, label %111

98:                                               ; preds = %97
  %99 = icmp ugt i64 %27, 31
  br i1 %99, label %100, label %101

100:                                              ; preds = %98
  tail call void @abort() #8
  unreachable

101:                                              ; preds = %98
  %102 = shl i64 1, %27
  %103 = load i64, i64* %25, align 8
  %104 = or i64 %103, %102
  store i64 %104, i64* %25, align 8
  br label %105

105:                                              ; preds = %80, %74, %84, %101, %95
  %106 = phi i8 [ %67, %84 ], [ 1, %101 ], [ %96, %95 ], [ 1, %74 ], [ 1, %80 ]
  %107 = add nuw nsw i64 %27, 1
  %108 = load i32, i32* %15, align 4
  %109 = zext i32 %108 to i64
  %110 = icmp ult i64 %107, %109
  br i1 %110, label %26, label %111

111:                                              ; preds = %105, %84, %87, %97, %58, %12
  %112 = phi i8 [ 0, %12 ], [ 1, %58 ], [ 1, %97 ], [ 1, %87 ], [ 1, %84 ], [ %106, %105 ]
  %113 = and i8 %112, 1
  %114 = icmp ne i8 %113, 0
  br label %115

115:                                              ; preds = %5, %111
  %116 = phi i1 [ %114, %111 ], [ false, %5 ]
  ret i1 %116
}

declare dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink7Gamepad4axesEv(%"class.blink::Gamepad"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) double* @_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load double*, double** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds double, double* %24, i64 %25
  ret double* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.8"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13GamepadButtonEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.5"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %24, i64 %25
  ret %"class.blink::Member.8"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18GamepadComparisons7CompareEPNS_11GamepadListES2_bb(%"class.blink::GamepadStateCompareResult"* noalias nocapture sret, %"class.blink::GamepadList"*, %"class.blink::GamepadList"*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::GamepadStateCompareResult", %"class.blink::GamepadStateCompareResult"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = bitcast i64* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 144, i1 false) #7
  %9 = tail call zeroext i1 @_ZN5blink25GamepadStateCompareResult15CompareGamepadsEPNS_11GamepadListES2_bb(%"class.blink::GamepadStateCompareResult"* %0, %"class.blink::GamepadList"* %1, %"class.blink::GamepadList"* %2, i1 zeroext %3, i1 zeroext %4) #7
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %6, align 8
  ret void
}

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
