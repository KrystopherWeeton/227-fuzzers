; ModuleID = '../../third_party/ffmpeg/libavutil/bprint.c'
source_filename = "../../third_party/ffmpeg/libavutil/bprint.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVBPrint = type { i8*, i32, i32, i32, [1 x i8], [1000 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }

@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@av_bprint_strftime.txt = internal unnamed_addr constant [28 x i8] c"[truncated strftime output]\00", align 16
@.str.1 = private unnamed_addr constant [5 x i8] c"'\5C''\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"&amp;\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"&lt;\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"&gt;\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"&apos;\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"&quot;\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"'\5C\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @av_bprint_init(%struct.AVBPrint*, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 4, i64 0
  %5 = icmp eq i32 %2, 1
  %6 = select i1 %5, i32 1004, i32 %2
  %7 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = icmp ult i32 %6, 1004
  %10 = select i1 %9, i32 %6, i32 1004
  %11 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 2
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 3
  store i32 %6, i32* %12, align 8
  store i8 0, i8* %4, align 1
  %13 = icmp ult i32 %10, %1
  br i1 %13, label %14, label %35

14:                                               ; preds = %3
  %15 = icmp ult i32 %6, 1005
  %16 = icmp eq i32 %10, 0
  %17 = or i1 %15, %16
  br i1 %17, label %35, label %18

18:                                               ; preds = %14
  %19 = lshr i32 %6, 1
  %20 = icmp ugt i32 %10, %19
  %21 = shl nuw nsw i32 %10, 1
  %22 = select i1 %20, i32 %6, i32 %21
  %23 = icmp ult i32 %22, %1
  %24 = icmp ugt i32 %6, %1
  %25 = select i1 %24, i32 %1, i32 %6
  %26 = select i1 %23, i32 %25, i32 %22
  %27 = zext i32 %26 to i64
  %28 = tail call i8* @av_realloc(i8* null, i64 %27) #3
  %29 = icmp eq i8* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %18
  %31 = load i8*, i8** %7, align 8
  %32 = load i32, i32* %8, align 8
  %33 = add i32 %32, 1
  %34 = zext i32 %33 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %31, i64 %34, i1 false) #3
  store i8* %28, i8** %7, align 8
  store i32 %26, i32* %11, align 4
  br label %35

35:                                               ; preds = %30, %18, %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @av_bprint_init_for_buffer(%struct.AVBPrint* nocapture, i8*, i32) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 2
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 3
  store i32 %2, i32* %7, align 8
  store i8 0, i8* %1, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_bprintf(%struct.AVBPrint*, i8* nocapture readonly, ...) local_unnamed_addr #0 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #3
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 1
  %8 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 0
  %9 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 3
  %10 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 4, i64 0
  %11 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 24, i1 false)
  %12 = load i32, i32* %6, align 4
  br label %13

13:                                               ; preds = %65, %2
  %14 = phi i32 [ %51, %65 ], [ %12, %2 ]
  %15 = load i32, i32* %7, align 8
  %16 = icmp ugt i32 %15, %14
  %17 = select i1 %16, i32 %14, i32 %15
  %18 = sub i32 %14, %17
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  %21 = load i8*, i8** %8, align 8
  %22 = zext i32 %15 to i64
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  br label %24

24:                                               ; preds = %13, %20
  %25 = phi i8* [ %23, %20 ], [ null, %13 ]
  call void @llvm.va_start(i8* nonnull %4)
  %26 = zext i32 %18 to i64
  %27 = call i32 @vsnprintf(i8* %25, i64 %26, i8* %1, %struct.__va_list_tag* nonnull %5) #3
  call void @llvm.va_end(i8* nonnull %4)
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %83, label %29

29:                                               ; preds = %24
  %30 = icmp ult i32 %27, %18
  br i1 %30, label %66, label %31

31:                                               ; preds = %29
  %32 = load i32, i32* %6, align 4
  %33 = load i32, i32* %9, align 8
  %34 = icmp eq i32 %32, %33
  br i1 %34, label %68, label %35

35:                                               ; preds = %31
  %36 = load i32, i32* %7, align 8
  %37 = icmp ult i32 %36, %32
  br i1 %37, label %38, label %66

38:                                               ; preds = %35
  %39 = add nuw i32 %36, 1
  %40 = sub nuw i32 -2, %36
  %41 = icmp ugt i32 %40, %27
  %42 = select i1 %41, i32 %27, i32 %40
  %43 = add i32 %39, %42
  %44 = lshr i32 %33, 1
  %45 = icmp ugt i32 %32, %44
  %46 = shl i32 %32, 1
  %47 = select i1 %45, i32 %33, i32 %46
  %48 = icmp ult i32 %47, %43
  %49 = icmp ugt i32 %33, %43
  %50 = select i1 %49, i32 %43, i32 %33
  %51 = select i1 %48, i32 %50, i32 %47
  %52 = load i8*, i8** %8, align 8
  %53 = icmp eq i8* %52, %10
  %54 = select i1 %53, i8* null, i8* %52
  %55 = zext i32 %51 to i64
  %56 = call i8* @av_realloc(i8* %54, i64 %55) #3
  %57 = icmp eq i8* %56, null
  br i1 %57, label %66, label %58

58:                                               ; preds = %38
  %59 = icmp eq i8* %54, null
  br i1 %59, label %60, label %65

60:                                               ; preds = %58
  %61 = load i8*, i8** %8, align 8
  %62 = load i32, i32* %7, align 8
  %63 = add i32 %62, 1
  %64 = zext i32 %63 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %56, i8* align 1 %61, i64 %64, i1 false) #3
  br label %65

65:                                               ; preds = %58, %60
  store i8* %56, i8** %8, align 8
  store i32 %51, i32* %6, align 4
  br label %13

66:                                               ; preds = %29, %35, %38
  %67 = load i32, i32* %6, align 4
  br label %68

68:                                               ; preds = %31, %66
  %69 = phi i32 [ %67, %66 ], [ %32, %31 ]
  %70 = load i32, i32* %7, align 8
  %71 = sub i32 -6, %70
  %72 = icmp ult i32 %71, %27
  %73 = select i1 %72, i32 %71, i32 %27
  %74 = add i32 %73, %70
  store i32 %74, i32* %7, align 8
  %75 = icmp eq i32 %69, 0
  br i1 %75, label %83, label %76

76:                                               ; preds = %68
  %77 = load i8*, i8** %8, align 8
  %78 = add i32 %69, -1
  %79 = icmp ugt i32 %74, %78
  %80 = select i1 %79, i32 %78, i32 %74
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i8, i8* %77, i64 %81
  store i8 0, i8* %82, align 1
  br label %83

83:                                               ; preds = %24, %76, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #3
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #3

; Function Attrs: nofree nounwind
declare i32 @vsnprintf(i8* nocapture, i64, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av_vbprintf(%struct.AVBPrint*, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #0 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #3
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %7 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 2
  %8 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 1
  %9 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 0
  %10 = bitcast %struct.__va_list_tag* %2 to i8*
  %11 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 3
  %12 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 4, i64 0
  %13 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 24, i1 false)
  %14 = load i32, i32* %7, align 4
  br label %15

15:                                               ; preds = %67, %3
  %16 = phi i32 [ %53, %67 ], [ %14, %3 ]
  %17 = load i32, i32* %8, align 8
  %18 = icmp ugt i32 %17, %16
  %19 = select i1 %18, i32 %16, i32 %17
  %20 = sub i32 %16, %19
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = load i8*, i8** %9, align 8
  %24 = zext i32 %17 to i64
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  br label %26

26:                                               ; preds = %15, %22
  %27 = phi i8* [ %25, %22 ], [ null, %15 ]
  call void @llvm.va_copy(i8* nonnull %5, i8* %10)
  %28 = zext i32 %20 to i64
  %29 = call i32 @vsnprintf(i8* %27, i64 %28, i8* %1, %struct.__va_list_tag* nonnull %6) #3
  call void @llvm.va_end(i8* nonnull %5)
  %30 = icmp slt i32 %29, 1
  br i1 %30, label %85, label %31

31:                                               ; preds = %26
  %32 = icmp ult i32 %29, %20
  br i1 %32, label %68, label %33

33:                                               ; preds = %31
  %34 = load i32, i32* %7, align 4
  %35 = load i32, i32* %11, align 8
  %36 = icmp eq i32 %34, %35
  br i1 %36, label %70, label %37

37:                                               ; preds = %33
  %38 = load i32, i32* %8, align 8
  %39 = icmp ult i32 %38, %34
  br i1 %39, label %40, label %68

40:                                               ; preds = %37
  %41 = add nuw i32 %38, 1
  %42 = sub nuw i32 -2, %38
  %43 = icmp ugt i32 %42, %29
  %44 = select i1 %43, i32 %29, i32 %42
  %45 = add i32 %41, %44
  %46 = lshr i32 %35, 1
  %47 = icmp ugt i32 %34, %46
  %48 = shl i32 %34, 1
  %49 = select i1 %47, i32 %35, i32 %48
  %50 = icmp ult i32 %49, %45
  %51 = icmp ugt i32 %35, %45
  %52 = select i1 %51, i32 %45, i32 %35
  %53 = select i1 %50, i32 %52, i32 %49
  %54 = load i8*, i8** %9, align 8
  %55 = icmp eq i8* %54, %12
  %56 = select i1 %55, i8* null, i8* %54
  %57 = zext i32 %53 to i64
  %58 = call i8* @av_realloc(i8* %56, i64 %57) #3
  %59 = icmp eq i8* %58, null
  br i1 %59, label %68, label %60

60:                                               ; preds = %40
  %61 = icmp eq i8* %56, null
  br i1 %61, label %62, label %67

62:                                               ; preds = %60
  %63 = load i8*, i8** %9, align 8
  %64 = load i32, i32* %8, align 8
  %65 = add i32 %64, 1
  %66 = zext i32 %65 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %58, i8* align 1 %63, i64 %66, i1 false) #3
  br label %67

67:                                               ; preds = %60, %62
  store i8* %58, i8** %9, align 8
  store i32 %53, i32* %7, align 4
  br label %15

68:                                               ; preds = %31, %37, %40
  %69 = load i32, i32* %7, align 4
  br label %70

70:                                               ; preds = %33, %68
  %71 = phi i32 [ %69, %68 ], [ %34, %33 ]
  %72 = load i32, i32* %8, align 8
  %73 = sub i32 -6, %72
  %74 = icmp ult i32 %73, %29
  %75 = select i1 %74, i32 %73, i32 %29
  %76 = add i32 %75, %72
  store i32 %76, i32* %8, align 8
  %77 = icmp eq i32 %71, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %70
  %79 = load i8*, i8** %9, align 8
  %80 = add i32 %71, -1
  %81 = icmp ugt i32 %76, %80
  %82 = select i1 %81, i32 %80, i32 %76
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %79, i64 %83
  store i8 0, i8* %84, align 1
  br label %85

85:                                               ; preds = %26, %78, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #3
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_copy(i8*, i8*) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av_bprint_chars(%struct.AVBPrint*, i8 signext, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ugt i32 %7, %5
  %9 = select i1 %8, i32 %5, i32 %7
  %10 = sub i32 %5, %9
  %11 = icmp ugt i32 %10, %2
  br i1 %11, label %67, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 3
  %14 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 0
  %15 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 4, i64 0
  %16 = load i32, i32* %13, align 8
  %17 = icmp ne i32 %5, %16
  %18 = icmp ult i32 %7, %5
  %19 = and i1 %18, %17
  br i1 %19, label %25, label %62

20:                                               ; preds = %56
  %21 = load i32, i32* %13, align 8
  %22 = icmp ne i32 %42, %21
  %23 = icmp ult i32 %57, %42
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %62

25:                                               ; preds = %12, %20
  %26 = phi i32 [ %21, %20 ], [ %16, %12 ]
  %27 = phi i32 [ %42, %20 ], [ %5, %12 ]
  %28 = phi i32 [ %57, %20 ], [ %7, %12 ]
  %29 = phi i32 [ %60, %20 ], [ %10, %12 ]
  %30 = add nuw i32 %28, 1
  %31 = sub nuw i32 -2, %28
  %32 = icmp ugt i32 %31, %2
  %33 = select i1 %32, i32 %2, i32 %31
  %34 = add i32 %30, %33
  %35 = lshr i32 %26, 1
  %36 = icmp ugt i32 %27, %35
  %37 = shl i32 %27, 1
  %38 = select i1 %36, i32 %26, i32 %37
  %39 = icmp ult i32 %38, %34
  %40 = icmp ugt i32 %26, %34
  %41 = select i1 %40, i32 %34, i32 %26
  %42 = select i1 %39, i32 %41, i32 %38
  %43 = load i8*, i8** %14, align 8
  %44 = icmp eq i8* %43, %15
  %45 = select i1 %44, i8* null, i8* %43
  %46 = zext i32 %42 to i64
  %47 = tail call i8* @av_realloc(i8* %45, i64 %46) #3
  %48 = icmp eq i8* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %25
  %50 = icmp eq i8* %45, null
  br i1 %50, label %51, label %56

51:                                               ; preds = %49
  %52 = load i8*, i8** %14, align 8
  %53 = load i32, i32* %6, align 8
  %54 = add i32 %53, 1
  %55 = zext i32 %54 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %47, i8* align 1 %52, i64 %55, i1 false) #3
  br label %56

56:                                               ; preds = %49, %51
  store i8* %47, i8** %14, align 8
  store i32 %42, i32* %4, align 4
  %57 = load i32, i32* %6, align 8
  %58 = icmp ugt i32 %57, %42
  %59 = select i1 %58, i32 %42, i32 %57
  %60 = sub i32 %42, %59
  %61 = icmp ugt i32 %60, %2
  br i1 %61, label %67, label %20

62:                                               ; preds = %25, %20, %12
  %63 = phi i32 [ %10, %12 ], [ %29, %25 ], [ %60, %20 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = load i32, i32* %6, align 8
  br label %67

67:                                               ; preds = %56, %65, %3
  %68 = phi i32 [ %66, %65 ], [ %7, %3 ], [ %57, %56 ]
  %69 = phi i32 [ %63, %65 ], [ %10, %3 ], [ %60, %56 ]
  %70 = add i32 %69, -1
  %71 = icmp ult i32 %70, %2
  %72 = select i1 %71, i32 %70, i32 %2
  %73 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = zext i32 %68 to i64
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  %77 = zext i32 %72 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %76, i8 %1, i64 %77, i1 false)
  br label %78

78:                                               ; preds = %62, %67
  %79 = load i32, i32* %6, align 8
  %80 = sub i32 -6, %79
  %81 = icmp ult i32 %80, %2
  %82 = select i1 %81, i32 %80, i32 %2
  %83 = add i32 %82, %79
  store i32 %83, i32* %6, align 8
  %84 = load i32, i32* %4, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %94, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = add i32 %84, -1
  %90 = icmp ugt i32 %83, %89
  %91 = select i1 %90, i32 %89, i32 %83
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %88, i64 %92
  store i8 0, i8* %93, align 1
  br label %94

94:                                               ; preds = %78, %86
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av_bprint_append_data(%struct.AVBPrint*, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ugt i32 %7, %5
  %9 = select i1 %8, i32 %5, i32 %7
  %10 = sub i32 %5, %9
  %11 = icmp ugt i32 %10, %2
  br i1 %11, label %67, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 3
  %14 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 0
  %15 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 4, i64 0
  %16 = load i32, i32* %13, align 8
  %17 = icmp ne i32 %5, %16
  %18 = icmp ult i32 %7, %5
  %19 = and i1 %18, %17
  br i1 %19, label %25, label %62

20:                                               ; preds = %56
  %21 = load i32, i32* %13, align 8
  %22 = icmp ne i32 %42, %21
  %23 = icmp ult i32 %57, %42
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %62

25:                                               ; preds = %12, %20
  %26 = phi i32 [ %21, %20 ], [ %16, %12 ]
  %27 = phi i32 [ %42, %20 ], [ %5, %12 ]
  %28 = phi i32 [ %57, %20 ], [ %7, %12 ]
  %29 = phi i32 [ %60, %20 ], [ %10, %12 ]
  %30 = add nuw i32 %28, 1
  %31 = sub nuw i32 -2, %28
  %32 = icmp ugt i32 %31, %2
  %33 = select i1 %32, i32 %2, i32 %31
  %34 = add i32 %30, %33
  %35 = lshr i32 %26, 1
  %36 = icmp ugt i32 %27, %35
  %37 = shl i32 %27, 1
  %38 = select i1 %36, i32 %26, i32 %37
  %39 = icmp ult i32 %38, %34
  %40 = icmp ugt i32 %26, %34
  %41 = select i1 %40, i32 %34, i32 %26
  %42 = select i1 %39, i32 %41, i32 %38
  %43 = load i8*, i8** %14, align 8
  %44 = icmp eq i8* %43, %15
  %45 = select i1 %44, i8* null, i8* %43
  %46 = zext i32 %42 to i64
  %47 = tail call i8* @av_realloc(i8* %45, i64 %46) #3
  %48 = icmp eq i8* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %25
  %50 = icmp eq i8* %45, null
  br i1 %50, label %51, label %56

51:                                               ; preds = %49
  %52 = load i8*, i8** %14, align 8
  %53 = load i32, i32* %6, align 8
  %54 = add i32 %53, 1
  %55 = zext i32 %54 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %47, i8* align 1 %52, i64 %55, i1 false) #3
  br label %56

56:                                               ; preds = %49, %51
  store i8* %47, i8** %14, align 8
  store i32 %42, i32* %4, align 4
  %57 = load i32, i32* %6, align 8
  %58 = icmp ugt i32 %57, %42
  %59 = select i1 %58, i32 %42, i32 %57
  %60 = sub i32 %42, %59
  %61 = icmp ugt i32 %60, %2
  br i1 %61, label %67, label %20

62:                                               ; preds = %25, %20, %12
  %63 = phi i32 [ %10, %12 ], [ %29, %25 ], [ %60, %20 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = load i32, i32* %6, align 8
  br label %67

67:                                               ; preds = %56, %65, %3
  %68 = phi i32 [ %66, %65 ], [ %7, %3 ], [ %57, %56 ]
  %69 = phi i32 [ %63, %65 ], [ %10, %3 ], [ %60, %56 ]
  %70 = add i32 %69, -1
  %71 = icmp ult i32 %70, %2
  %72 = select i1 %71, i32 %70, i32 %2
  %73 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = zext i32 %68 to i64
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  %77 = zext i32 %72 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* align 1 %1, i64 %77, i1 false)
  br label %78

78:                                               ; preds = %62, %67
  %79 = load i32, i32* %6, align 8
  %80 = sub i32 -6, %79
  %81 = icmp ult i32 %80, %2
  %82 = select i1 %81, i32 %80, i32 %2
  %83 = add i32 %82, %79
  store i32 %83, i32* %6, align 8
  %84 = load i32, i32* %4, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %94, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = add i32 %84, -1
  %90 = icmp ugt i32 %83, %89
  %91 = select i1 %90, i32 %89, i32 %83
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %88, i64 %92
  store i8 0, i8* %93, align 1
  br label %94

94:                                               ; preds = %78, %86
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av_bprint_strftime(%struct.AVBPrint*, i8*, %struct.tm*) local_unnamed_addr #0 {
  %4 = alloca [1024 x i8], align 16
  %5 = load i8, i8* %1, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %134, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 2
  %9 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 1
  %10 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 0
  %11 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 3
  %12 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 4, i64 0
  %13 = load i32, i32* %8, align 4
  br label %14

14:                                               ; preds = %7, %75
  %15 = phi i32 [ %13, %7 ], [ %59, %75 ]
  %16 = load i32, i32* %9, align 8
  %17 = icmp ugt i32 %16, %15
  %18 = select i1 %17, i32 %15, i32 %16
  %19 = sub i32 %15, %18
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %14
  %22 = load i8*, i8** %10, align 8
  %23 = zext i32 %16 to i64
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = zext i32 %19 to i64
  %26 = tail call i64 @strftime(i8* %24, i64 %25, i8* %1, %struct.tm* %2) #3
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %31, label %118

28:                                               ; preds = %14
  %29 = tail call i64 @strlen(i8* %1) #10
  %30 = add i64 %29, 1
  br label %37

31:                                               ; preds = %21
  %32 = icmp ult i32 %19, 1073741824
  %33 = shl i32 %19, 1
  %34 = select i1 %32, i32 %33, i32 2147483647
  %35 = zext i32 %34 to i64
  %36 = load i32, i32* %8, align 4
  br label %37

37:                                               ; preds = %31, %28
  %38 = phi i32 [ %15, %28 ], [ %36, %31 ]
  %39 = phi i64 [ %30, %28 ], [ %35, %31 ]
  %40 = trunc i64 %39 to i32
  %41 = load i32, i32* %11, align 8
  %42 = icmp eq i32 %38, %41
  br i1 %42, label %76, label %43

43:                                               ; preds = %37
  %44 = load i32, i32* %9, align 8
  %45 = icmp ult i32 %44, %38
  br i1 %45, label %46, label %76

46:                                               ; preds = %43
  %47 = add nuw i32 %44, 1
  %48 = sub nuw i32 -2, %44
  %49 = icmp ugt i32 %48, %40
  %50 = select i1 %49, i32 %40, i32 %48
  %51 = add i32 %47, %50
  %52 = lshr i32 %41, 1
  %53 = icmp ugt i32 %38, %52
  %54 = shl i32 %38, 1
  %55 = select i1 %53, i32 %41, i32 %54
  %56 = icmp ult i32 %55, %51
  %57 = icmp ugt i32 %41, %51
  %58 = select i1 %57, i32 %51, i32 %41
  %59 = select i1 %56, i32 %58, i32 %55
  %60 = load i8*, i8** %10, align 8
  %61 = icmp eq i8* %60, %12
  %62 = select i1 %61, i8* null, i8* %60
  %63 = zext i32 %59 to i64
  %64 = tail call i8* @av_realloc(i8* %62, i64 %63) #3
  %65 = icmp eq i8* %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %46
  %67 = load i32, i32* %8, align 4
  br label %76

68:                                               ; preds = %46
  %69 = icmp eq i8* %62, null
  br i1 %69, label %70, label %75

70:                                               ; preds = %68
  %71 = load i8*, i8** %10, align 8
  %72 = load i32, i32* %9, align 8
  %73 = add i32 %72, 1
  %74 = zext i32 %73 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* align 1 %71, i64 %74, i1 false) #3
  br label %75

75:                                               ; preds = %68, %70
  store i8* %64, i8** %10, align 8
  store i32 %59, i32* %8, align 4
  br label %14

76:                                               ; preds = %37, %43, %66
  %77 = phi i32 [ %67, %66 ], [ %38, %43 ], [ %38, %37 ]
  %78 = load i32, i32* %9, align 8
  %79 = icmp ugt i32 %78, %77
  %80 = select i1 %79, i32 %77, i32 %78
  %81 = sub i32 %77, %80
  %82 = icmp ult i32 %81, 1024
  br i1 %82, label %83, label %92

83:                                               ; preds = %76
  %84 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %84) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %84, i8 -86, i64 1024, i1 false)
  %85 = call i64 @strftime(i8* nonnull %84, i64 1024, i8* %1, %struct.tm* %2) #3
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %84)
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %84) #3
  br label %134

88:                                               ; preds = %83
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %84) #3
  %89 = icmp eq i32 %81, 0
  br i1 %89, label %134, label %90

90:                                               ; preds = %88
  %91 = load i32, i32* %9, align 8
  br label %92

92:                                               ; preds = %90, %76
  %93 = phi i32 [ %91, %90 ], [ %78, %76 ]
  %94 = load i8*, i8** %10, align 8
  %95 = zext i32 %93 to i64
  %96 = getelementptr inbounds i8, i8* %94, i64 %95
  %97 = zext i32 %81 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %96, i8 33, i64 %97, i1 false)
  %98 = load i8*, i8** %10, align 8
  %99 = load i32, i32* %9, align 8
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds i8, i8* %98, i64 %100
  %102 = icmp ult i64 %97, 27
  %103 = select i1 %102, i64 %97, i64 27
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %101, i8* align 16 getelementptr inbounds ([28 x i8], [28 x i8]* @av_bprint_strftime.txt, i64 0, i64 0), i64 %103, i1 false)
  %104 = load i32, i32* %9, align 8
  %105 = sub i32 -6, %104
  %106 = icmp ult i32 %105, %81
  %107 = select i1 %106, i32 %105, i32 %81
  %108 = add i32 %107, %104
  store i32 %108, i32* %9, align 8
  %109 = load i32, i32* %8, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %134, label %111

111:                                              ; preds = %92
  %112 = load i8*, i8** %10, align 8
  %113 = add i32 %109, -1
  %114 = icmp ugt i32 %108, %113
  %115 = select i1 %114, i32 %113, i32 %108
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds i8, i8* %112, i64 %116
  store i8 0, i8* %117, align 1
  br label %134

118:                                              ; preds = %21
  %119 = trunc i64 %26 to i32
  %120 = load i32, i32* %9, align 8
  %121 = sub i32 -6, %120
  %122 = icmp ult i32 %121, %119
  %123 = select i1 %122, i32 %121, i32 %119
  %124 = add i32 %123, %120
  store i32 %124, i32* %9, align 8
  %125 = load i32, i32* %8, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %134, label %127

127:                                              ; preds = %118
  %128 = load i8*, i8** %10, align 8
  %129 = add i32 %125, -1
  %130 = icmp ugt i32 %124, %129
  %131 = select i1 %130, i32 %129, i32 %124
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %128, i64 %132
  store i8 0, i8* %133, align 1
  br label %134

134:                                              ; preds = %127, %118, %111, %92, %88, %87, %3
  ret void
}

; Function Attrs: nounwind
declare i64 @strftime(i8*, i64, i8*, %struct.tm*) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @av_bprint_get_buffer(%struct.AVBPrint*, i32, i8** nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ugt i32 %8, %6
  %10 = select i1 %9, i32 %6, i32 %8
  %11 = sub i32 %6, %10
  %12 = icmp ult i32 %11, %1
  br i1 %12, label %13, label %51

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = icmp ne i32 %6, %15
  %17 = icmp ult i32 %8, %6
  %18 = and i1 %17, %16
  br i1 %18, label %19, label %51

19:                                               ; preds = %13
  %20 = add nuw i32 %8, 1
  %21 = sub nuw i32 -2, %8
  %22 = icmp ugt i32 %21, %1
  %23 = select i1 %22, i32 %1, i32 %21
  %24 = add i32 %20, %23
  %25 = lshr i32 %15, 1
  %26 = icmp ugt i32 %6, %25
  %27 = shl i32 %6, 1
  %28 = select i1 %26, i32 %15, i32 %27
  %29 = icmp ult i32 %28, %24
  %30 = icmp ugt i32 %15, %24
  %31 = select i1 %30, i32 %24, i32 %15
  %32 = select i1 %29, i32 %31, i32 %28
  %33 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 4, i64 0
  %36 = icmp eq i8* %34, %35
  %37 = select i1 %36, i8* null, i8* %34
  %38 = zext i32 %32 to i64
  %39 = tail call i8* @av_realloc(i8* %37, i64 %38) #3
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %19
  %42 = load i32, i32* %5, align 4
  br label %51

43:                                               ; preds = %19
  %44 = icmp eq i8* %37, null
  br i1 %44, label %45, label %50

45:                                               ; preds = %43
  %46 = load i8*, i8** %33, align 8
  %47 = load i32, i32* %7, align 8
  %48 = add i32 %47, 1
  %49 = zext i32 %48 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 %46, i64 %49, i1 false) #3
  br label %50

50:                                               ; preds = %45, %43
  store i8* %39, i8** %33, align 8
  store i32 %32, i32* %5, align 4
  br label %51

51:                                               ; preds = %41, %13, %50, %4
  %52 = phi i32 [ %42, %41 ], [ %6, %13 ], [ %32, %50 ], [ %6, %4 ]
  %53 = load i32, i32* %7, align 8
  %54 = icmp ugt i32 %53, %52
  %55 = select i1 %54, i32 %52, i32 %53
  %56 = sub i32 %52, %55
  store i32 %56, i32* %3, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %64, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = load i32, i32* %7, align 8
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %60, i64 %62
  br label %64

64:                                               ; preds = %51, %58
  %65 = phi i8* [ %63, %58 ], [ null, %51 ]
  store i8* %65, i8** %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @av_bprint_clear(%struct.AVBPrint* nocapture) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  store i8 0, i8* %7, align 1
  store i32 0, i32* %2, align 8
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_bprint_finalize(%struct.AVBPrint*, i8**) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ugt i32 %5, %7
  %9 = select i1 %8, i32 %7, i32 %5
  %10 = icmp eq i8** %1, null
  %11 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %0, i64 0, i32 4, i64 0
  %14 = icmp ne i8* %12, %13
  br i1 %10, label %32, label %15

15:                                               ; preds = %2
  %16 = zext i32 %9 to i64
  br i1 %14, label %17, label %24

17:                                               ; preds = %15
  %18 = tail call i8* @av_realloc(i8* %12, i64 %16) #3
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = load i8*, i8** %11, align 8
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i8* [ %18, %17 ], [ %21, %20 ]
  store i8* null, i8** %11, align 8
  br label %29

24:                                               ; preds = %15
  %25 = tail call noalias i8* @av_malloc(i64 %16) #3
  %26 = icmp eq i8* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  %28 = load i8*, i8** %11, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %25, i8* align 1 %28, i64 %16, i1 false)
  br label %29

29:                                               ; preds = %24, %27, %22
  %30 = phi i8* [ %23, %22 ], [ %25, %27 ], [ null, %24 ]
  %31 = phi i32 [ 0, %22 ], [ 0, %27 ], [ -12, %24 ]
  store i8* %30, i8** %1, align 8
  br label %35

32:                                               ; preds = %2
  br i1 %14, label %33, label %35

33:                                               ; preds = %32
  %34 = bitcast %struct.AVBPrint* %0 to i8*
  tail call void @av_freep(i8* %34) #3
  br label %35

35:                                               ; preds = %32, %33, %29
  %36 = phi i32 [ %31, %29 ], [ 0, %33 ], [ 0, %32 ]
  store i32 %9, i32* %6, align 4
  ret i32 %36
}

declare i8* @av_realloc(i8*, i64) local_unnamed_addr #7

declare noalias i8* @av_malloc(i64) local_unnamed_addr #7

declare void @av_freep(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @av_bprint_escape(%struct.AVBPrint*, i8* readonly, i8* readonly, i32, i32) local_unnamed_addr #0 {
  %6 = icmp eq i32 %3, 0
  %7 = select i1 %6, i32 1, i32 %3
  switch i32 %7, label %16 [
    i32 2, label %25
    i32 3, label %8
  ]

8:                                                ; preds = %5
  %9 = load i8, i8* %1, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %88, label %11

11:                                               ; preds = %8
  %12 = and i32 %4, 8
  %13 = icmp eq i32 %12, 0
  %14 = and i32 %4, 4
  %15 = icmp eq i32 %14, 0
  br label %34

16:                                               ; preds = %5
  %17 = load i8, i8* %1, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %88, label %19

19:                                               ; preds = %16
  %20 = icmp eq i8* %2, null
  %21 = and i32 %4, 1
  %22 = icmp ne i32 %21, 0
  %23 = and i32 %4, 2
  %24 = icmp eq i32 %23, 0
  br label %50

25:                                               ; preds = %5
  tail call void @av_bprint_chars(%struct.AVBPrint* %0, i8 signext 39, i32 1)
  br label %26

26:                                               ; preds = %31, %25
  %27 = phi i8* [ %1, %25 ], [ %32, %31 ]
  %28 = load i8, i8* %27, align 1
  switch i8 %28, label %30 [
    i8 0, label %33
    i8 39, label %29
  ]

29:                                               ; preds = %26
  tail call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  br label %31

30:                                               ; preds = %26
  tail call void @av_bprint_chars(%struct.AVBPrint* %0, i8 signext %28, i32 1)
  br label %31

31:                                               ; preds = %29, %30
  %32 = getelementptr inbounds i8, i8* %27, i64 1
  br label %26

33:                                               ; preds = %26
  tail call void @av_bprint_chars(%struct.AVBPrint* %0, i8 signext 39, i32 1)
  br label %88

34:                                               ; preds = %11, %46
  %35 = phi i8 [ %9, %11 ], [ %48, %46 ]
  %36 = phi i8* [ %1, %11 ], [ %47, %46 ]
  %37 = sext i8 %35 to i32
  switch i32 %37, label %45 [
    i32 38, label %38
    i32 60, label %39
    i32 62, label %40
    i32 39, label %41
    i32 34, label %43
  ]

38:                                               ; preds = %34
  tail call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0))
  br label %46

39:                                               ; preds = %34
  tail call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0))
  br label %46

40:                                               ; preds = %34
  tail call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0))
  br label %46

41:                                               ; preds = %34
  br i1 %15, label %45, label %42

42:                                               ; preds = %41
  tail call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0))
  br label %46

43:                                               ; preds = %34
  br i1 %13, label %45, label %44

44:                                               ; preds = %43
  tail call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0))
  br label %46

45:                                               ; preds = %41, %43, %34
  tail call void @av_bprint_chars(%struct.AVBPrint* %0, i8 signext %35, i32 1)
  br label %46

46:                                               ; preds = %38, %39, %40, %42, %44, %45
  %47 = getelementptr inbounds i8, i8* %36, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %88, label %34

50:                                               ; preds = %19, %83
  %51 = phi i8 [ %17, %19 ], [ %86, %83 ]
  %52 = phi i8* [ %1, %19 ], [ %85, %83 ]
  %53 = icmp eq i8* %52, %1
  br i1 %53, label %58, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds i8, i8* %52, i64 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  br label %58

58:                                               ; preds = %54, %50
  %59 = phi i1 [ true, %50 ], [ %57, %54 ]
  %60 = sext i8 %51 to i32
  %61 = and i32 %60, 255
  %62 = zext i32 %61 to i64
  %63 = icmp ult i32 %61, 64
  %64 = shl i64 1, %62
  %65 = and i64 %64, 4294977025
  %66 = icmp ne i64 %65, 0
  %67 = and i1 %63, %66
  br i1 %20, label %71, label %68

68:                                               ; preds = %58
  %69 = tail call i8* @strchr(i8* nonnull %2, i32 %60) #10
  %70 = icmp eq i8* %69, null
  br i1 %70, label %71, label %81

71:                                               ; preds = %68, %58
  %72 = tail call i8* @memchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i32 %60, i64 3)
  %73 = icmp ne i8* %72, null
  %74 = and i1 %63, %66
  %75 = xor i1 %74, true
  %76 = or i1 %73, %75
  %77 = select i1 %76, i1 %73, i1 %22
  %78 = and i1 %67, %59
  %79 = or i1 %78, %77
  %80 = and i1 %24, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %68, %71
  tail call void @av_bprint_chars(%struct.AVBPrint* %0, i8 signext 92, i32 1)
  %82 = load i8, i8* %52, align 1
  br label %83

83:                                               ; preds = %71, %81
  %84 = phi i8 [ %51, %71 ], [ %82, %81 ]
  tail call void @av_bprint_chars(%struct.AVBPrint* %0, i8 signext %84, i32 1)
  %85 = getelementptr inbounds i8, i8* %52, i64 1
  %86 = load i8, i8* %85, align 1
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %50

88:                                               ; preds = %46, %83, %8, %16, %33
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
