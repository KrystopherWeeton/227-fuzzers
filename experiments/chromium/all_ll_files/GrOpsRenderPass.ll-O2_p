; ModuleID = '../../third_party/skia/src/gpu/GrOpsRenderPass.cpp'
source_filename = "../../third_party/skia/src/gpu/GrOpsRenderPass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.137, %class.sk_sp.137, %class.sk_sp.137, i32, i32 }
%class.GrRenderTarget = type <{ i32 (...)**, %class.sk_sp, %class.sk_sp, i32, [4 x i8], %class.GrSurface }>
%class.sk_sp = type { %class.GrAttachment* }
%class.GrAttachment = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.135 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.1, i8* }
%class.sk_sp.1 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.2, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.2 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.3, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.3 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63", %class.sk_sp.69, %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.109", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.6", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.5 }
%class.sk_sp.5 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.16, %class.SkTArray.25, %class.SkTArray.27, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.9"*, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.27, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.28 }
%class.sk_sp.28 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.16 = type { %class.SkTHashTable.17 }
%class.SkTHashTable.17 = type { i32, i32, %class.SkAutoTArray.18 }
%class.SkAutoTArray.18 = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.179" }
%"struct.std::__1::pair.179" = type { i32, %class.SkTArray.180* }
%class.SkTArray.180 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.25 = type { %"class.std::__1::unique_ptr.26"*, i64 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.180, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.27 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.41 }
%class.SkFibBlockSizes.41 = type { i32 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.69 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.81, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.97, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.73 }
%class.SkTHashTable.73 = type { i32, i32, %class.SkAutoTArray.74 }
%class.SkAutoTArray.74 = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.81 = type { %class.SkTHashTable.82 }
%class.SkTHashTable.82 = type { i32, i32, %class.SkAutoTArray.83 }
%class.SkAutoTArray.83 = type { %"class.std::__1::unique_ptr.84" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.90, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.90 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.91" }
%"struct.std::__1::atomic.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__cxx_atomic_impl.94" }
%"struct.std::__1::__cxx_atomic_impl.94" = type { %"struct.std::__1::__cxx_atomic_base_impl.95" }
%"struct.std::__1::__cxx_atomic_base_impl.95" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.96, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.96 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.97 = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.2, %class.sk_sp.112, %class.sk_sp.112 }
%class.sk_sp.112 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.134 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.134 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.135 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.136, void (i8*)*, i8* }
%class.SkNVRefCnt.136 = type { %"struct.std::__1::atomic" }
%class.sk_sp.137 = type { %class.GrBuffer* }
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.SkDrawable::GpuDrawHandler" = type { i32 (...)** }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.144, i32, [4 x i8] }
%union.anon.144 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.155, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.146, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.146 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.147, %class.sk_sp.148, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.149" }
%class.SkNVRefCnt.147 = type { %"struct.std::__1::atomic" }
%class.sk_sp.148 = type { %class.GrSurface* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.148, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.149" = type { %"struct.std::__1::__atomic_base.150" }
%"struct.std::__1::__atomic_base.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__cxx_atomic_impl.152" }
%"struct.std::__1::__cxx_atomic_impl.152" = type { %"struct.std::__1::__cxx_atomic_base_impl.153" }
%"struct.std::__1::__cxx_atomic_base_impl.153" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.154 }
%union.anon.154 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%class.sk_sp.155 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.156, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef.156 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.157"*, [24 x i8] }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.160, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.160 = type { %class.SkAlignedSTStorage.161, %class.SkTArray.162 }
%class.SkAlignedSTStorage.161 = type { [8 x i8] }
%class.SkTArray.162 = type { %"class.std::__1::unique_ptr.163"*, i64 }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.172, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.172 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrDrawIndirectCommand = type { i32, i32, i32, i32 }
%struct.GrDrawIndexedIndirectCommand = type { i32, i32, i32, i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass5beginEv(%class.GrOpsRenderPass*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  store i32 1, i32* %2, align 8
  %3 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*)***
  %4 = load void (%class.GrOpsRenderPass*)**, void (%class.GrOpsRenderPass*)*** %3, align 8
  %5 = getelementptr inbounds void (%class.GrOpsRenderPass*)*, void (%class.GrOpsRenderPass*)** %4, i64 4
  %6 = load void (%class.GrOpsRenderPass*)*, void (%class.GrOpsRenderPass*)** %5, align 8
  tail call void %6(%class.GrOpsRenderPass* %0) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass3endEv(%class.GrOpsRenderPass*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*)***
  %3 = load void (%class.GrOpsRenderPass*)**, void (%class.GrOpsRenderPass*)*** %2, align 8
  %4 = getelementptr inbounds void (%class.GrOpsRenderPass*)*, void (%class.GrOpsRenderPass*)** %3, i64 5
  %5 = load void (%class.GrOpsRenderPass*)*, void (%class.GrOpsRenderPass*)** %4, align 8
  tail call void %5(%class.GrOpsRenderPass* %0) #3
  %6 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 3, i32 0
  %7 = load %class.GrBuffer*, %class.GrBuffer** %6, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %6, align 8
  %8 = icmp eq %class.GrBuffer* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = bitcast %class.GrBuffer* %7 to void (%class.GrBuffer*)***
  %11 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %11, i64 3
  %13 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %12, align 8
  tail call void %13(%class.GrBuffer* nonnull %7) #3
  br label %14

14:                                               ; preds = %9, %1
  %15 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 5, i32 0
  %16 = load %class.GrBuffer*, %class.GrBuffer** %15, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %15, align 8
  %17 = icmp eq %class.GrBuffer* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = bitcast %class.GrBuffer* %16 to void (%class.GrBuffer*)***
  %20 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %20, i64 3
  %22 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %21, align 8
  tail call void %22(%class.GrBuffer* nonnull %16) #3
  br label %23

23:                                               ; preds = %18, %14
  %24 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 4, i32 0
  %25 = load %class.GrBuffer*, %class.GrBuffer** %24, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %24, align 8
  %26 = icmp eq %class.GrBuffer* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %class.GrBuffer* %25 to void (%class.GrBuffer*)***
  %29 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %29, i64 3
  %31 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %30, align 8
  tail call void %31(%class.GrBuffer* nonnull %25) #3
  br label %32

32:                                               ; preds = %23, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass5clearERK14GrScissorStateNSt3__15arrayIfLm4EEE(%class.GrOpsRenderPass*, %class.GrScissorState* dereferenceable(24), <2 x float>, <2 x float>) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  store i32 1, i32* %5, align 8
  %6 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*, %class.GrScissorState*, <2 x float>, <2 x float>)***
  %7 = load void (%class.GrOpsRenderPass*, %class.GrScissorState*, <2 x float>, <2 x float>)**, void (%class.GrOpsRenderPass*, %class.GrScissorState*, <2 x float>, <2 x float>)*** %6, align 8
  %8 = getelementptr inbounds void (%class.GrOpsRenderPass*, %class.GrScissorState*, <2 x float>, <2 x float>)*, void (%class.GrOpsRenderPass*, %class.GrScissorState*, <2 x float>, <2 x float>)** %7, i64 16
  %9 = load void (%class.GrOpsRenderPass*, %class.GrScissorState*, <2 x float>, <2 x float>)*, void (%class.GrOpsRenderPass*, %class.GrScissorState*, <2 x float>, <2 x float>)** %8, align 8
  tail call void %9(%class.GrOpsRenderPass* %0, %class.GrScissorState* dereferenceable(24) %1, <2 x float> %2, <2 x float> %3) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass16clearStencilClipERK14GrScissorStateb(%class.GrOpsRenderPass*, %class.GrScissorState* dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  store i32 1, i32* %4, align 8
  %5 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*, %class.GrScissorState*, i1)***
  %6 = load void (%class.GrOpsRenderPass*, %class.GrScissorState*, i1)**, void (%class.GrOpsRenderPass*, %class.GrScissorState*, i1)*** %5, align 8
  %7 = getelementptr inbounds void (%class.GrOpsRenderPass*, %class.GrScissorState*, i1)*, void (%class.GrOpsRenderPass*, %class.GrScissorState*, i1)** %6, i64 17
  %8 = load void (%class.GrOpsRenderPass*, %class.GrScissorState*, i1)*, void (%class.GrOpsRenderPass*, %class.GrScissorState*, i1)** %7, align 8
  tail call void %8(%class.GrOpsRenderPass* %0, %class.GrScissorState* dereferenceable(24) %1, i1 zeroext %2) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass15executeDrawableENSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEE(%class.GrOpsRenderPass*, %"class.SkDrawable::GpuDrawHandler"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  store i32 1, i32* %3, align 8
  %4 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*, %"class.SkDrawable::GpuDrawHandler"*)***
  %5 = load void (%class.GrOpsRenderPass*, %"class.SkDrawable::GpuDrawHandler"*)**, void (%class.GrOpsRenderPass*, %"class.SkDrawable::GpuDrawHandler"*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.GrOpsRenderPass*, %"class.SkDrawable::GpuDrawHandler"*)*, void (%class.GrOpsRenderPass*, %"class.SkDrawable::GpuDrawHandler"*)** %5, i64 18
  %7 = load void (%class.GrOpsRenderPass*, %"class.SkDrawable::GpuDrawHandler"*)*, void (%class.GrOpsRenderPass*, %"class.SkDrawable::GpuDrawHandler"*)** %6, align 8
  tail call void %7(%class.GrOpsRenderPass* %0, %"class.SkDrawable::GpuDrawHandler"* %1) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass*, %class.GrProgramInfo* dereferenceable(128), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 3, i32 0
  %5 = load %class.GrBuffer*, %class.GrBuffer** %4, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %4, align 8
  %6 = icmp eq %class.GrBuffer* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = bitcast %class.GrBuffer* %5 to void (%class.GrBuffer*)***
  %9 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %9, i64 3
  %11 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %10, align 8
  tail call void %11(%class.GrBuffer* nonnull %5) #3
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 5, i32 0
  %14 = load %class.GrBuffer*, %class.GrBuffer** %13, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %13, align 8
  %15 = icmp eq %class.GrBuffer* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %class.GrBuffer* %14 to void (%class.GrBuffer*)***
  %18 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %18, i64 3
  %20 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %19, align 8
  tail call void %20(%class.GrBuffer* nonnull %14) #3
  br label %21

21:                                               ; preds = %16, %12
  %22 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 4, i32 0
  %23 = load %class.GrBuffer*, %class.GrBuffer** %22, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %22, align 8
  %24 = icmp eq %class.GrBuffer* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = bitcast %class.GrBuffer* %23 to void (%class.GrBuffer*)***
  %27 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %27, i64 3
  %29 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %28, align 8
  tail call void %29(%class.GrBuffer* nonnull %23) #3
  br label %30

30:                                               ; preds = %21, %25
  %31 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %1, i64 0, i32 7
  %32 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %31, align 8
  %33 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %32, i64 0, i32 3, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  %36 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %35, align 8
  %37 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %36, i64 3
  %38 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %37, align 8
  %39 = tail call %class.GrGpu* %38(%class.GrOpsRenderPass* %0) #3
  %40 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %39, i64 0, i32 2, i32 0
  %41 = load %class.GrCaps*, %class.GrCaps** %40, align 8
  %42 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %41, i64 0, i32 10
  %43 = load i32, i32* %42, align 8
  %44 = icmp sgt i32 %34, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %30
  %46 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  store i32 2, i32* %46, align 8
  br label %66

47:                                               ; preds = %30
  %48 = bitcast %class.GrOpsRenderPass* %0 to i1 (%class.GrOpsRenderPass*, %class.GrProgramInfo*, %struct.SkRect*)***
  %49 = load i1 (%class.GrOpsRenderPass*, %class.GrProgramInfo*, %struct.SkRect*)**, i1 (%class.GrOpsRenderPass*, %class.GrProgramInfo*, %struct.SkRect*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%class.GrOpsRenderPass*, %class.GrProgramInfo*, %struct.SkRect*)*, i1 (%class.GrOpsRenderPass*, %class.GrProgramInfo*, %struct.SkRect*)** %49, i64 6
  %51 = load i1 (%class.GrOpsRenderPass*, %class.GrProgramInfo*, %struct.SkRect*)*, i1 (%class.GrOpsRenderPass*, %class.GrProgramInfo*, %struct.SkRect*)** %50, align 8
  %52 = tail call zeroext i1 %51(%class.GrOpsRenderPass* %0, %class.GrProgramInfo* dereferenceable(128) %1, %struct.SkRect* dereferenceable(16) %2) #3
  %53 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  br i1 %52, label %55, label %54

54:                                               ; preds = %47
  store i32 2, i32* %53, align 8
  br label %66

55:                                               ; preds = %47
  store i32 0, i32* %53, align 8
  %56 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %1, i64 0, i32 5
  %57 = load %class.GrPipeline*, %class.GrPipeline** %56, align 8
  %58 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %35, align 8
  %59 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %58, i64 3
  %60 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %59, align 8
  %61 = tail call %class.GrGpu* %60(%class.GrOpsRenderPass* %0) #3
  %62 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %61, i64 0, i32 2, i32 0
  %63 = load %class.GrCaps*, %class.GrCaps** %62, align 8
  %64 = tail call i32 @_ZNK10GrPipeline15xferBarrierTypeERK6GrCaps(%class.GrPipeline* %57, %class.GrCaps* dereferenceable(232) %63) #3
  %65 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 7
  store i32 %64, i32* %65, align 4
  br label %66

66:                                               ; preds = %55, %54, %45
  ret void
}

declare i32 @_ZNK10GrPipeline15xferBarrierTypeERK6GrCaps(%class.GrPipeline*, %class.GrCaps* dereferenceable(232)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*, %struct.SkIRect*)***
  %8 = load void (%class.GrOpsRenderPass*, %struct.SkIRect*)**, void (%class.GrOpsRenderPass*, %struct.SkIRect*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrOpsRenderPass*, %struct.SkIRect*)*, void (%class.GrOpsRenderPass*, %struct.SkIRect*)** %8, i64 7
  %10 = load void (%class.GrOpsRenderPass*, %struct.SkIRect*)*, void (%class.GrOpsRenderPass*, %struct.SkIRect*)** %9, align 8
  tail call void %10(%class.GrOpsRenderPass* %0, %struct.SkIRect* dereferenceable(16) %1) #3
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy**, %class.GrPipeline* dereferenceable(128)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %4
  %9 = bitcast %class.GrOpsRenderPass* %0 to i1 (%class.GrOpsRenderPass*, %class.GrGeometryProcessor*, %class.GrSurfaceProxy**, %class.GrPipeline*)***
  %10 = load i1 (%class.GrOpsRenderPass*, %class.GrGeometryProcessor*, %class.GrSurfaceProxy**, %class.GrPipeline*)**, i1 (%class.GrOpsRenderPass*, %class.GrGeometryProcessor*, %class.GrSurfaceProxy**, %class.GrPipeline*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%class.GrOpsRenderPass*, %class.GrGeometryProcessor*, %class.GrSurfaceProxy**, %class.GrPipeline*)*, i1 (%class.GrOpsRenderPass*, %class.GrGeometryProcessor*, %class.GrSurfaceProxy**, %class.GrPipeline*)** %10, i64 8
  %12 = load i1 (%class.GrOpsRenderPass*, %class.GrGeometryProcessor*, %class.GrSurfaceProxy**, %class.GrPipeline*)*, i1 (%class.GrOpsRenderPass*, %class.GrGeometryProcessor*, %class.GrSurfaceProxy**, %class.GrPipeline*)** %11, align 8
  %13 = tail call zeroext i1 %12(%class.GrOpsRenderPass* %0, %class.GrGeometryProcessor* dereferenceable(80) %1, %class.GrSurfaceProxy** %2, %class.GrPipeline* dereferenceable(128) %3) #3
  br i1 %13, label %15, label %14

14:                                               ; preds = %8
  store i32 2, i32* %5, align 8
  br label %15

15:                                               ; preds = %4, %14, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass11bindBuffersE5sk_spIK8GrBufferES3_S3_18GrPrimitiveRestart(%class.GrOpsRenderPass*, %class.sk_sp.137* nocapture, %class.sk_sp.137* nocapture, %class.sk_sp.137* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp.137, align 8
  %7 = alloca %class.sk_sp.137, align 8
  %8 = alloca %class.sk_sp.137, align 8
  %9 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %55

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.sk_sp.137, %class.sk_sp.137* %1, i64 0, i32 0
  %14 = bitcast %class.sk_sp.137* %1 to i64*
  %15 = load i64, i64* %14, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %13, align 8
  %16 = bitcast %class.sk_sp.137* %6 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %class.sk_sp.137, %class.sk_sp.137* %2, i64 0, i32 0
  %18 = bitcast %class.sk_sp.137* %2 to i64*
  %19 = load i64, i64* %18, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %17, align 8
  %20 = bitcast %class.sk_sp.137* %7 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %class.sk_sp.137, %class.sk_sp.137* %3, i64 0, i32 0
  %22 = bitcast %class.sk_sp.137* %3 to i64*
  %23 = load i64, i64* %22, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %21, align 8
  %24 = bitcast %class.sk_sp.137* %8 to i64*
  store i64 %23, i64* %24, align 8
  %25 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*, %class.sk_sp.137*, %class.sk_sp.137*, %class.sk_sp.137*, i1)***
  %26 = load void (%class.GrOpsRenderPass*, %class.sk_sp.137*, %class.sk_sp.137*, %class.sk_sp.137*, i1)**, void (%class.GrOpsRenderPass*, %class.sk_sp.137*, %class.sk_sp.137*, %class.sk_sp.137*, i1)*** %25, align 8
  %27 = getelementptr inbounds void (%class.GrOpsRenderPass*, %class.sk_sp.137*, %class.sk_sp.137*, %class.sk_sp.137*, i1)*, void (%class.GrOpsRenderPass*, %class.sk_sp.137*, %class.sk_sp.137*, %class.sk_sp.137*, i1)** %26, i64 9
  %28 = load void (%class.GrOpsRenderPass*, %class.sk_sp.137*, %class.sk_sp.137*, %class.sk_sp.137*, i1)*, void (%class.GrOpsRenderPass*, %class.sk_sp.137*, %class.sk_sp.137*, %class.sk_sp.137*, i1)** %27, align 8
  call void %28(%class.GrOpsRenderPass* %0, %class.sk_sp.137* nonnull %6, %class.sk_sp.137* nonnull %7, %class.sk_sp.137* nonnull %8, i1 zeroext %4) #3
  %29 = getelementptr inbounds %class.sk_sp.137, %class.sk_sp.137* %8, i64 0, i32 0
  %30 = load %class.GrBuffer*, %class.GrBuffer** %29, align 8
  %31 = icmp eq %class.GrBuffer* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %12
  %33 = bitcast %class.GrBuffer* %30 to void (%class.GrBuffer*)***
  %34 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %33, align 8
  %35 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %34, i64 3
  %36 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %35, align 8
  call void %36(%class.GrBuffer* nonnull %30) #3
  br label %37

37:                                               ; preds = %12, %32
  %38 = getelementptr inbounds %class.sk_sp.137, %class.sk_sp.137* %7, i64 0, i32 0
  %39 = load %class.GrBuffer*, %class.GrBuffer** %38, align 8
  %40 = icmp eq %class.GrBuffer* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = bitcast %class.GrBuffer* %39 to void (%class.GrBuffer*)***
  %43 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %43, i64 3
  %45 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %44, align 8
  call void %45(%class.GrBuffer* nonnull %39) #3
  br label %46

46:                                               ; preds = %37, %41
  %47 = getelementptr inbounds %class.sk_sp.137, %class.sk_sp.137* %6, i64 0, i32 0
  %48 = load %class.GrBuffer*, %class.GrBuffer** %47, align 8
  %49 = icmp eq %class.GrBuffer* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %class.GrBuffer* %48 to void (%class.GrBuffer*)***
  %52 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %52, i64 3
  %54 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %53, align 8
  call void %54(%class.GrBuffer* nonnull %48) #3
  br label %55

55:                                               ; preds = %50, %46, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15GrOpsRenderPass13prepareToDrawEv(%class.GrOpsRenderPass*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  %7 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %6, align 8
  %8 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %7, i64 3
  %9 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %8, align 8
  %10 = tail call %class.GrGpu* %9(%class.GrOpsRenderPass* %0) #3
  br label %28

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  %17 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %16, align 8
  %18 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %17, i64 3
  %19 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %18, align 8
  %20 = tail call %class.GrGpu* %19(%class.GrOpsRenderPass* %0) #3
  %21 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 2
  %22 = load %class.GrRenderTarget*, %class.GrRenderTarget** %21, align 8
  %23 = load i32, i32* %12, align 4
  %24 = bitcast %class.GrGpu* %20 to void (%class.GrGpu*, %class.GrRenderTarget*, i32)***
  %25 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)**, void (%class.GrGpu*, %class.GrRenderTarget*, i32)*** %24, align 8
  %26 = getelementptr inbounds void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %25, i64 33
  %27 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %26, align 8
  tail call void %27(%class.GrGpu* %20, %class.GrRenderTarget* %22, i32 %23) #3
  br label %28

28:                                               ; preds = %15, %11, %5
  %29 = phi i1 [ false, %5 ], [ true, %11 ], [ true, %15 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass4drawEii(%class.GrOpsRenderPass*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %24

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 7
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  %13 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %12, align 8
  %14 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %13, i64 3
  %15 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %14, align 8
  %16 = tail call %class.GrGpu* %15(%class.GrOpsRenderPass* %0) #3
  %17 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 2
  %18 = load %class.GrRenderTarget*, %class.GrRenderTarget** %17, align 8
  %19 = load i32, i32* %8, align 4
  %20 = bitcast %class.GrGpu* %16 to void (%class.GrGpu*, %class.GrRenderTarget*, i32)***
  %21 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)**, void (%class.GrGpu*, %class.GrRenderTarget*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %21, i64 33
  %23 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %22, align 8
  tail call void %23(%class.GrGpu* %16, %class.GrRenderTarget* %18, i32 %19) #3
  br label %30

24:                                               ; preds = %3
  %25 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  %26 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %25, align 8
  %27 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %26, i64 3
  %28 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %27, align 8
  %29 = tail call %class.GrGpu* %28(%class.GrOpsRenderPass* %0) #3
  br label %35

30:                                               ; preds = %7, %11
  %31 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*, i32, i32)***
  %32 = load void (%class.GrOpsRenderPass*, i32, i32)**, void (%class.GrOpsRenderPass*, i32, i32)*** %31, align 8
  %33 = getelementptr inbounds void (%class.GrOpsRenderPass*, i32, i32)*, void (%class.GrOpsRenderPass*, i32, i32)** %32, i64 10
  %34 = load void (%class.GrOpsRenderPass*, i32, i32)*, void (%class.GrOpsRenderPass*, i32, i32)** %33, align 8
  tail call void %34(%class.GrOpsRenderPass* %0, i32 %1, i32 %2) #3
  br label %35

35:                                               ; preds = %24, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass11drawIndexedEiitti(%class.GrOpsRenderPass*, i32, i32, i16 zeroext, i16 zeroext, i32) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %27

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 7
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %33, label %14

14:                                               ; preds = %10
  %15 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  %16 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %15, align 8
  %17 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %16, i64 3
  %18 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %17, align 8
  %19 = tail call %class.GrGpu* %18(%class.GrOpsRenderPass* %0) #3
  %20 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 2
  %21 = load %class.GrRenderTarget*, %class.GrRenderTarget** %20, align 8
  %22 = load i32, i32* %11, align 4
  %23 = bitcast %class.GrGpu* %19 to void (%class.GrGpu*, %class.GrRenderTarget*, i32)***
  %24 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)**, void (%class.GrGpu*, %class.GrRenderTarget*, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %24, i64 33
  %26 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %25, align 8
  tail call void %26(%class.GrGpu* %19, %class.GrRenderTarget* %21, i32 %22) #3
  br label %33

27:                                               ; preds = %6
  %28 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  %29 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %28, align 8
  %30 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %29, i64 3
  %31 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %30, align 8
  %32 = tail call %class.GrGpu* %31(%class.GrOpsRenderPass* %0) #3
  br label %38

33:                                               ; preds = %10, %14
  %34 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*, i32, i32, i16, i16, i32)***
  %35 = load void (%class.GrOpsRenderPass*, i32, i32, i16, i16, i32)**, void (%class.GrOpsRenderPass*, i32, i32, i16, i16, i32)*** %34, align 8
  %36 = getelementptr inbounds void (%class.GrOpsRenderPass*, i32, i32, i16, i16, i32)*, void (%class.GrOpsRenderPass*, i32, i32, i16, i16, i32)** %35, i64 11
  %37 = load void (%class.GrOpsRenderPass*, i32, i32, i16, i16, i32)*, void (%class.GrOpsRenderPass*, i32, i32, i16, i16, i32)** %36, align 8
  tail call void %37(%class.GrOpsRenderPass* %0, i32 %1, i32 %2, i16 zeroext %3, i16 zeroext %4, i32 %5) #3
  br label %38

38:                                               ; preds = %27, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass13drawInstancedEiiii(%class.GrOpsRenderPass*, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %26

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 7
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %32, label %13

13:                                               ; preds = %9
  %14 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  %15 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %14, align 8
  %16 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %15, i64 3
  %17 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %16, align 8
  %18 = tail call %class.GrGpu* %17(%class.GrOpsRenderPass* %0) #3
  %19 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 2
  %20 = load %class.GrRenderTarget*, %class.GrRenderTarget** %19, align 8
  %21 = load i32, i32* %10, align 4
  %22 = bitcast %class.GrGpu* %18 to void (%class.GrGpu*, %class.GrRenderTarget*, i32)***
  %23 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)**, void (%class.GrGpu*, %class.GrRenderTarget*, i32)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %23, i64 33
  %25 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %24, align 8
  tail call void %25(%class.GrGpu* %18, %class.GrRenderTarget* %20, i32 %21) #3
  br label %32

26:                                               ; preds = %5
  %27 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  %28 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %27, align 8
  %29 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %28, i64 3
  %30 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %29, align 8
  %31 = tail call %class.GrGpu* %30(%class.GrOpsRenderPass* %0) #3
  br label %37

32:                                               ; preds = %9, %13
  %33 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*, i32, i32, i32, i32)***
  %34 = load void (%class.GrOpsRenderPass*, i32, i32, i32, i32)**, void (%class.GrOpsRenderPass*, i32, i32, i32, i32)*** %33, align 8
  %35 = getelementptr inbounds void (%class.GrOpsRenderPass*, i32, i32, i32, i32)*, void (%class.GrOpsRenderPass*, i32, i32, i32, i32)** %34, i64 12
  %36 = load void (%class.GrOpsRenderPass*, i32, i32, i32, i32)*, void (%class.GrOpsRenderPass*, i32, i32, i32, i32)** %35, align 8
  tail call void %36(%class.GrOpsRenderPass* %0, i32 %1, i32 %2, i32 %3, i32 %4) #3
  br label %37

37:                                               ; preds = %26, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass20drawIndexedInstancedEiiiii(%class.GrOpsRenderPass*, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %27

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 7
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %33, label %14

14:                                               ; preds = %10
  %15 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  %16 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %15, align 8
  %17 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %16, i64 3
  %18 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %17, align 8
  %19 = tail call %class.GrGpu* %18(%class.GrOpsRenderPass* %0) #3
  %20 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 2
  %21 = load %class.GrRenderTarget*, %class.GrRenderTarget** %20, align 8
  %22 = load i32, i32* %11, align 4
  %23 = bitcast %class.GrGpu* %19 to void (%class.GrGpu*, %class.GrRenderTarget*, i32)***
  %24 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)**, void (%class.GrGpu*, %class.GrRenderTarget*, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %24, i64 33
  %26 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %25, align 8
  tail call void %26(%class.GrGpu* %19, %class.GrRenderTarget* %21, i32 %22) #3
  br label %33

27:                                               ; preds = %6
  %28 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  %29 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %28, align 8
  %30 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %29, i64 3
  %31 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %30, align 8
  %32 = tail call %class.GrGpu* %31(%class.GrOpsRenderPass* %0) #3
  br label %38

33:                                               ; preds = %10, %14
  %34 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*, i32, i32, i32, i32, i32)***
  %35 = load void (%class.GrOpsRenderPass*, i32, i32, i32, i32, i32)**, void (%class.GrOpsRenderPass*, i32, i32, i32, i32, i32)*** %34, align 8
  %36 = getelementptr inbounds void (%class.GrOpsRenderPass*, i32, i32, i32, i32, i32)*, void (%class.GrOpsRenderPass*, i32, i32, i32, i32, i32)** %35, i64 13
  %37 = load void (%class.GrOpsRenderPass*, i32, i32, i32, i32, i32)*, void (%class.GrOpsRenderPass*, i32, i32, i32, i32, i32)** %36, align 8
  tail call void %37(%class.GrOpsRenderPass* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #3
  br label %38

38:                                               ; preds = %27, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass12drawIndirectEPK8GrBuffermi(%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 7
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  br i1 %11, label %31, label %13

13:                                               ; preds = %8
  %14 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %12, align 8
  %15 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %14, i64 3
  %16 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %15, align 8
  %17 = tail call %class.GrGpu* %16(%class.GrOpsRenderPass* %0) #3
  %18 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 2
  %19 = load %class.GrRenderTarget*, %class.GrRenderTarget** %18, align 8
  %20 = load i32, i32* %9, align 4
  %21 = bitcast %class.GrGpu* %17 to void (%class.GrGpu*, %class.GrRenderTarget*, i32)***
  %22 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)**, void (%class.GrGpu*, %class.GrRenderTarget*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %22, i64 33
  %24 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %23, align 8
  tail call void %24(%class.GrGpu* %17, %class.GrRenderTarget* %19, i32 %20) #3
  br label %31

25:                                               ; preds = %4
  %26 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  %27 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %26, align 8
  %28 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %27, i64 3
  %29 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %28, align 8
  %30 = tail call %class.GrGpu* %29(%class.GrOpsRenderPass* %0) #3
  br label %73

31:                                               ; preds = %8, %13
  %32 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %12, align 8
  %33 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %32, i64 3
  %34 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %33, align 8
  %35 = tail call %class.GrGpu* %34(%class.GrOpsRenderPass* %0) #3
  %36 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %35, i64 0, i32 2, i32 0
  %37 = load %class.GrCaps*, %class.GrCaps** %36, align 8
  %38 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %37, i64 0, i32 3
  %39 = bitcast i48* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 1024
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %68

43:                                               ; preds = %31
  %44 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %1, i64 2
  %45 = bitcast %class.GrBuffer* %44 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 %2
  %48 = bitcast i8* %47 to %struct.GrDrawIndirectCommand*
  %49 = icmp sgt i32 %3, 0
  br i1 %49, label %50, label %73

50:                                               ; preds = %43
  %51 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*, i32, i32, i32, i32)***
  %52 = zext i32 %3 to i64
  br label %53

53:                                               ; preds = %53, %50
  %54 = phi i64 [ 0, %50 ], [ %66, %53 ]
  %55 = getelementptr inbounds %struct.GrDrawIndirectCommand, %struct.GrDrawIndirectCommand* %48, i64 %54, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %struct.GrDrawIndirectCommand, %struct.GrDrawIndirectCommand* %48, i64 %54, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %struct.GrDrawIndirectCommand, %struct.GrDrawIndirectCommand* %48, i64 %54, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %struct.GrDrawIndirectCommand, %struct.GrDrawIndirectCommand* %48, i64 %54, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = load void (%class.GrOpsRenderPass*, i32, i32, i32, i32)**, void (%class.GrOpsRenderPass*, i32, i32, i32, i32)*** %51, align 8
  %64 = getelementptr inbounds void (%class.GrOpsRenderPass*, i32, i32, i32, i32)*, void (%class.GrOpsRenderPass*, i32, i32, i32, i32)** %63, i64 12
  %65 = load void (%class.GrOpsRenderPass*, i32, i32, i32, i32)*, void (%class.GrOpsRenderPass*, i32, i32, i32, i32)** %64, align 8
  tail call void %65(%class.GrOpsRenderPass* %0, i32 %58, i32 %62, i32 %56, i32 %60) #3
  %66 = add nuw nsw i64 %54, 1
  %67 = icmp eq i64 %66, %52
  br i1 %67, label %73, label %53

68:                                               ; preds = %31
  %69 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)***
  %70 = load void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)**, void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)*** %69, align 8
  %71 = getelementptr inbounds void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)*, void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)** %70, i64 14
  %72 = load void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)*, void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)** %71, align 8
  tail call void %72(%class.GrOpsRenderPass* %0, %class.GrBuffer* %1, i64 %2, i32 %3) #3
  br label %73

73:                                               ; preds = %53, %43, %25, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass19drawIndexedIndirectEPK8GrBuffermi(%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 7
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  br i1 %11, label %31, label %13

13:                                               ; preds = %8
  %14 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %12, align 8
  %15 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %14, i64 3
  %16 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %15, align 8
  %17 = tail call %class.GrGpu* %16(%class.GrOpsRenderPass* %0) #3
  %18 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 2
  %19 = load %class.GrRenderTarget*, %class.GrRenderTarget** %18, align 8
  %20 = load i32, i32* %9, align 4
  %21 = bitcast %class.GrGpu* %17 to void (%class.GrGpu*, %class.GrRenderTarget*, i32)***
  %22 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)**, void (%class.GrGpu*, %class.GrRenderTarget*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %22, i64 33
  %24 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %23, align 8
  tail call void %24(%class.GrGpu* %17, %class.GrRenderTarget* %19, i32 %20) #3
  br label %31

25:                                               ; preds = %4
  %26 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  %27 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %26, align 8
  %28 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %27, i64 3
  %29 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %28, align 8
  %30 = tail call %class.GrGpu* %29(%class.GrOpsRenderPass* %0) #3
  br label %87

31:                                               ; preds = %8, %13
  %32 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %12, align 8
  %33 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %32, i64 3
  %34 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %33, align 8
  %35 = tail call %class.GrGpu* %34(%class.GrOpsRenderPass* %0) #3
  %36 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %35, i64 0, i32 2, i32 0
  %37 = load %class.GrCaps*, %class.GrCaps** %36, align 8
  %38 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %37, i64 0, i32 3
  %39 = bitcast i48* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 1024
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %31
  %44 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %12, align 8
  %45 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %44, i64 3
  %46 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %45, align 8
  %47 = tail call %class.GrGpu* %46(%class.GrOpsRenderPass* %0) #3
  %48 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %47, i64 0, i32 2, i32 0
  %49 = load %class.GrCaps*, %class.GrCaps** %48, align 8
  %50 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %49, i64 0, i32 3
  %51 = bitcast i48* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %52, 549755813888
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %82, label %55

55:                                               ; preds = %43, %31
  %56 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %1, i64 2
  %57 = bitcast %class.GrBuffer* %56 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %2
  %60 = bitcast i8* %59 to %struct.GrDrawIndexedIndirectCommand*
  %61 = icmp sgt i32 %3, 0
  br i1 %61, label %62, label %87

62:                                               ; preds = %55
  %63 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*, i32, i32, i32, i32, i32)***
  %64 = zext i32 %3 to i64
  br label %65

65:                                               ; preds = %65, %62
  %66 = phi i64 [ 0, %62 ], [ %80, %65 ]
  %67 = getelementptr inbounds %struct.GrDrawIndexedIndirectCommand, %struct.GrDrawIndexedIndirectCommand* %60, i64 %66, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %struct.GrDrawIndexedIndirectCommand, %struct.GrDrawIndexedIndirectCommand* %60, i64 %66, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %struct.GrDrawIndexedIndirectCommand, %struct.GrDrawIndexedIndirectCommand* %60, i64 %66, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %struct.GrDrawIndexedIndirectCommand, %struct.GrDrawIndexedIndirectCommand* %60, i64 %66, i32 3
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %struct.GrDrawIndexedIndirectCommand, %struct.GrDrawIndexedIndirectCommand* %60, i64 %66, i32 4
  %76 = load i32, i32* %75, align 4
  %77 = load void (%class.GrOpsRenderPass*, i32, i32, i32, i32, i32)**, void (%class.GrOpsRenderPass*, i32, i32, i32, i32, i32)*** %63, align 8
  %78 = getelementptr inbounds void (%class.GrOpsRenderPass*, i32, i32, i32, i32, i32)*, void (%class.GrOpsRenderPass*, i32, i32, i32, i32, i32)** %77, i64 13
  %79 = load void (%class.GrOpsRenderPass*, i32, i32, i32, i32, i32)*, void (%class.GrOpsRenderPass*, i32, i32, i32, i32, i32)** %78, align 8
  tail call void %79(%class.GrOpsRenderPass* %0, i32 %68, i32 %72, i32 %70, i32 %76, i32 %74) #3
  %80 = add nuw nsw i64 %66, 1
  %81 = icmp eq i64 %80, %64
  br i1 %81, label %87, label %65

82:                                               ; preds = %43
  %83 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)***
  %84 = load void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)**, void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)*** %83, align 8
  %85 = getelementptr inbounds void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)*, void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)** %84, i64 15
  %86 = load void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)*, void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)** %85, align 8
  tail call void %86(%class.GrOpsRenderPass* %0, %class.GrBuffer* %1, i64 %2, i32 %3) #3
  br label %87

87:                                               ; preds = %65, %55, %25, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrOpsRenderPass16drawIndexPatternEiiiii(%class.GrOpsRenderPass*, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %53

8:                                                ; preds = %6
  %9 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 6
  %10 = bitcast %class.GrOpsRenderPass* %0 to %class.GrGpu* (%class.GrOpsRenderPass*)***
  %11 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 7
  %12 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 2
  %13 = bitcast %class.GrOpsRenderPass* %0 to void (%class.GrOpsRenderPass*, i32, i32, i16, i16, i32)***
  br label %14

14:                                               ; preds = %8, %50
  %15 = phi i32 [ 0, %8 ], [ %51, %50 ]
  %16 = sub nsw i32 %2, %15
  %17 = icmp sgt i32 %16, %3
  %18 = select i1 %17, i32 %3, i32 %16
  %19 = mul nsw i32 %18, %1
  %20 = mul nsw i32 %18, %4
  %21 = trunc i32 %20 to i16
  %22 = add i16 %21, -1
  %23 = mul nsw i32 %15, %4
  %24 = add nsw i32 %23, %5
  %25 = load i32, i32* %9, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %41

27:                                               ; preds = %14
  %28 = load i32, i32* %11, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %46, label %30

30:                                               ; preds = %27
  %31 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %10, align 8
  %32 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %31, i64 3
  %33 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %32, align 8
  %34 = tail call %class.GrGpu* %33(%class.GrOpsRenderPass* %0) #3
  %35 = load %class.GrRenderTarget*, %class.GrRenderTarget** %12, align 8
  %36 = load i32, i32* %11, align 4
  %37 = bitcast %class.GrGpu* %34 to void (%class.GrGpu*, %class.GrRenderTarget*, i32)***
  %38 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)**, void (%class.GrGpu*, %class.GrRenderTarget*, i32)*** %37, align 8
  %39 = getelementptr inbounds void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %38, i64 33
  %40 = load void (%class.GrGpu*, %class.GrRenderTarget*, i32)*, void (%class.GrGpu*, %class.GrRenderTarget*, i32)** %39, align 8
  tail call void %40(%class.GrGpu* %34, %class.GrRenderTarget* %35, i32 %36) #3
  br label %46

41:                                               ; preds = %14
  %42 = load %class.GrGpu* (%class.GrOpsRenderPass*)**, %class.GrGpu* (%class.GrOpsRenderPass*)*** %10, align 8
  %43 = getelementptr inbounds %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %42, i64 3
  %44 = load %class.GrGpu* (%class.GrOpsRenderPass*)*, %class.GrGpu* (%class.GrOpsRenderPass*)** %43, align 8
  %45 = tail call %class.GrGpu* %44(%class.GrOpsRenderPass* %0) #3
  br label %50

46:                                               ; preds = %30, %27
  %47 = load void (%class.GrOpsRenderPass*, i32, i32, i16, i16, i32)**, void (%class.GrOpsRenderPass*, i32, i32, i16, i16, i32)*** %13, align 8
  %48 = getelementptr inbounds void (%class.GrOpsRenderPass*, i32, i32, i16, i16, i32)*, void (%class.GrOpsRenderPass*, i32, i32, i16, i16, i32)** %47, i64 11
  %49 = load void (%class.GrOpsRenderPass*, i32, i32, i16, i16, i32)*, void (%class.GrOpsRenderPass*, i32, i32, i16, i16, i32)** %48, align 8
  tail call void %49(%class.GrOpsRenderPass* %0, i32 %19, i32 0, i16 zeroext 0, i16 zeroext %22, i32 %24) #3
  br label %50

50:                                               ; preds = %41, %46
  %51 = add nsw i32 %18, %15
  %52 = icmp slt i32 %51, %2
  br i1 %52, label %14, label %53

53:                                               ; preds = %50, %6
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
