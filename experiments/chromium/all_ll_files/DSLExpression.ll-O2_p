; ModuleID = '../../third_party/skia/src/sksl/dsl/DSLExpression.cpp'
source_filename = "../../third_party/skia/src/sksl/dsl/DSLExpression.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::dsl::DSLExpression" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.8", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.10" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkSL::Type::Field"* }
%"class.SkSL::dsl::DSLVar" = type <{ %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLType", i32, [4 x i8], %"class.std::__1::unique_ptr.213", %"class.SkSL::Variable"*, i8*, i8*, %"class.SkSL::dsl::DSLExpression", i8, i8, [6 x i8] }>
%"class.SkSL::dsl::DSLModifiers" = type { %"struct.SkSL::Modifiers" }
%"class.SkSL::dsl::DSLType" = type <{ %"class.SkSL::Type"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr" }
%"class.SkSL::dsl::DSLPossibleExpression" = type { %"class.std::__1::unique_ptr" }
%"class.SkSL::dsl::DSLWriter" = type { %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.259", %"class.SkSL::Compiler"*, %"class.std::__1::unique_ptr.265", %"struct.SkSL::ProgramConfig"*, %"class.SkSL::ModifiersPool"*, %"class.std::__1::vector.136", %"class.std::__1::vector.149", %"class.SkSL::dsl::ErrorHandler"*, %"struct.SkSL::ProgramSettings", %"class.SkSL::Mangler", %"class.std::__1::stack" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"struct.SkSL::ProgramConfig"* }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.SkSL::ModifiersPool"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.43", %"class.std::__1::shared_ptr.43", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.69", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.159" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.SkSL::Type"* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.43" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.43", %"class.std::__1::vector.166", i8, %"class.std::__1::vector.174", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"class.std::__1::unique_ptr.168"*, %"class.std::__1::unique_ptr.168"*, %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.std::__1::unique_ptr.168"* }
%"class.std::__1::vector.174" = type { %"class.std::__1::__vector_base.175" }
%"class.std::__1::__vector_base.175" = type { %"class.std::__1::unique_ptr.176"*, %"class.std::__1::unique_ptr.176"*, %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.std::__1::unique_ptr.176"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.187" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.43", %"class.std::__1::shared_ptr.44" }
%"class.std::__1::shared_ptr.44" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type { %"class.std::__1::unordered_map", %"class.SkSL::IRIntrinsicMap"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.64", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.23", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type <{ %"class.SkSL::Context"*, %"struct.SkSL::Program::Inputs", [6 x i8], %"class.std::__1::unique_ptr.72", %"class.std::__1::shared_ptr.43", %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::unordered_set.85", i32, [4 x i8], %"class.std::__1::unordered_set.110", %"class.std::__1::vector.136"*, %"class.std::__1::vector.149"*, %"class.SkSL::Variable"*, %"class.SkSL::Variable"*, i32, i8, [3 x i8] }>
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.SkSL::ASTFile"* }
%"struct.SkSL::ASTFile" = type <{ %"class.std::__1::vector.75", %"class.SkSL::ASTNode::ID", [4 x i8] }>
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.77" }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector.75"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.SkSL::ASTNode"* }
%"class.SkSL::ASTNode::ID" = type { i32 }
%"class.std::__1::unordered_set.85" = type { %"class.std::__1::__hash_table.86" }
%"class.std::__1::__hash_table.86" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base.90"** }
%"struct.std::__1::__hash_node_base.90" = type { %"struct.std::__1::__hash_node_base.90"* }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::__bucket_list_deallocator.92" }
%"class.std::__1::__bucket_list_deallocator.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base.90" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::unordered_set.110" = type { %"class.std::__1::__hash_table.111" }
%"class.std::__1::__hash_table.111" = type <{ %"class.std::__1::unique_ptr.112", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.131", [4 x i8] }>
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114", %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::__hash_node_base.115"** }
%"struct.std::__1::__hash_node_base.115" = type { %"struct.std::__1::__hash_node_base.115"* }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::__bucket_list_deallocator.117" }
%"class.std::__1::__bucket_list_deallocator.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base.115" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::vector.159" = type { %"class.std::__1::__vector_base.160" }
%"class.std::__1::__vector_base.160" = type { i64*, i64*, %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { i64* }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.SkSL::Pool"* }
%"class.SkSL::Pool" = type { %"class.std::__1::unique_ptr.268" }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %class.GrMemoryPool* }
%class.GrMemoryPool = type { %class.GrBlockAllocator }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %"class.std::__1::unique_ptr.138"*, %"class.std::__1::unique_ptr.138"*, %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.SkSL::ProgramElement"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.std::__1::unique_ptr.138"* }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**, %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.SkSL::ProgramElement"** }
%"class.SkSL::dsl::ErrorHandler" = type { i32 (...)** }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.42"* }
%"class.std::__1::vector.42" = type opaque
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::stack" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.277" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.SkSL::dsl::PositionInfo" = type <{ i8*, i32, [4 x i8] }>
%"class.SkSL::VariableReference" = type <{ %"class.SkSL::Expression", %"class.SkSL::Variable"*, i8, [7 x i8] }>
%"class.SkSL::dsl::DSLStatement" = type { %"class.std::__1::unique_ptr.213" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.SkSL::dsl::DSLWriter::StackFrame" }
%"struct.SkSL::dsl::DSLWriter::StackFrame" = type { %class.GrGLSLFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*, %class.SkSTArray.225 }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.281 }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTArray.281 = type { %"class.std::__1::unique_ptr.282"*, i64 }
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %class.GrGLSLFragmentProcessor* }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.225, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.228], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [120 x i8] }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.228 = type { %class.SkAlignedSTStorage.229, %class.SkTArray }
%class.SkAlignedSTStorage.229 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.230, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.230 = type { %class.SkAlignedSTStorage.231, %class.SkTArray.232 }
%class.SkAlignedSTStorage.231 = type { [8 x i8] }
%class.SkTArray.232 = type { %"class.std::__1::unique_ptr.233"*, i64 }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%class.SkSTArray.225 = type { %class.SkAlignedSTStorage.226, %class.SkTArray.227 }
%class.SkAlignedSTStorage.226 = type { [16 x i8] }
%class.SkTArray.227 = type { %"class.std::__1::unique_ptr.213"*, i64 }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.225, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.228], i32, i8, [3 x i8], i32, [12 x i8] }>
%class.SkTArray.239 = type { %"class.SkSL::dsl::DSLWrapper"*, i64 }
%"class.SkSL::dsl::DSLWrapper" = type { %"class.SkSL::dsl::DSLExpression" }
%class.SkSTArray.240 = type { %class.SkAlignedSTStorage.241, %class.SkTArray.242 }
%class.SkAlignedSTStorage.241 = type { [16 x i8] }
%class.SkTArray.242 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.SkSL::Literal" = type <{ %"class.SkSL::Expression", float, [4 x i8] }>
%"class.SkSL::Literal.202" = type { %"class.SkSL::Expression", i64 }
%"class.SkSL::Literal.209" = type <{ %"class.SkSL::Expression", i8, [7 x i8] }>

$_ZN8SkTArrayIN4SkSL3dsl10DSLWrapperINS1_13DSLExpressionEEELb0EEC2EOS5_ = comdat any

$_ZN4SkSL7LiteralIfED0Ev = comdat any

$_ZNK4SkSL7LiteralIfE11descriptionEv = comdat any

$_ZNK4SkSL10Expression4typeEv = comdat any

$_ZNK4SkSL7LiteralIfE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIfE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL10Expression19isConstantOrUniformEv = comdat any

$_ZNK4SkSL7LiteralIfE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIfE12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL7LiteralIfE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIfE5cloneEv = comdat any

$_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE = comdat any

$_ZN4SkSL7LiteralIlED0Ev = comdat any

$_ZNK4SkSL7LiteralIlE11descriptionEv = comdat any

$_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIlE5cloneEv = comdat any

$_ZN4SkSL6IRNodeD2Ev = comdat any

$_ZN4SkSL7LiteralIbED0Ev = comdat any

$_ZNK4SkSL7LiteralIbE11descriptionEv = comdat any

$_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIbE5cloneEv = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZTVN4SkSL7LiteralIfEE = comdat any

$_ZTVN4SkSL7LiteralIlEE = comdat any

$_ZTVN4SkSL7LiteralIbEE = comdat any

@.str = private unnamed_addr constant [41 x i8] c"error: floating point value is infinite\0A\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"error: floating point value is NaN\0A\00", align 1
@.str.2 = private unnamed_addr constant [54 x i8] c"../../third_party/skia/src/sksl/dsl/DSLExpression.cpp\00", align 1
@_ZTVN4SkSL7LiteralIfEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal"*)* @_ZN4SkSL7LiteralIfED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIfE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIfE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIfE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIfE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Literal"*, %"class.SkSL::Type"*)* @_ZNK4SkSL7LiteralIfE12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIfE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIfE5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL7LiteralIlEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal.202"*)* @_ZN4SkSL7LiteralIlED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal.202"*)* @_ZNK4SkSL7LiteralIlE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.202"*)* @_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal.202"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.202"*, i32)* @_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Literal.202"*, %"class.SkSL::Type"*)* @_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.202"*, i32)* @_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.202"*)* @_ZNK4SkSL7LiteralIlE5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL7LiteralIbEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal.209"*)* @_ZN4SkSL7LiteralIbED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal.209"*)* @_ZNK4SkSL7LiteralIbE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.209"*)* @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal.209"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.209"*, i32)* @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.209"*, i32)* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.209"*)* @_ZNK4SkSL7LiteralIbE5cloneEv to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"false\00", align 1

@_ZN4SkSL3dsl13DSLExpressionC1Ev = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLExpression"*), void (%"class.SkSL::dsl::DSLExpression"*)* @_ZN4SkSL3dsl13DSLExpressionC2Ev
@_ZN4SkSL3dsl13DSLExpressionC1EOS1_ = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*), void (%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*)* @_ZN4SkSL3dsl13DSLExpressionC2EOS1_
@_ZN4SkSL3dsl13DSLExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::Expression"*), void (%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::Expression"*)* @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE
@_ZN4SkSL3dsl13DSLExpressionC1Ef = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLExpression"*, float), void (%"class.SkSL::dsl::DSLExpression"*, float)* @_ZN4SkSL3dsl13DSLExpressionC2Ef
@_ZN4SkSL3dsl13DSLExpressionC1Ei = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLExpression"*, i32), void (%"class.SkSL::dsl::DSLExpression"*, i32)* @_ZN4SkSL3dsl13DSLExpressionC2Ei
@_ZN4SkSL3dsl13DSLExpressionC1Ej = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLExpression"*, i32), void (%"class.SkSL::dsl::DSLExpression"*, i32)* @_ZN4SkSL3dsl13DSLExpressionC2Ej
@_ZN4SkSL3dsl13DSLExpressionC1Eb = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLExpression"*, i1), void (%"class.SkSL::dsl::DSLExpression"*, i1)* @_ZN4SkSL3dsl13DSLExpressionC2Eb
@_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLVar"*), void (%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLVar"*)* @_ZN4SkSL3dsl13DSLExpressionC2ERNS0_6DSLVarE
@_ZN4SkSL3dsl13DSLExpressionC1EONS0_6DSLVarE = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLVar"*), void (%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLVar"*)* @_ZN4SkSL3dsl13DSLExpressionC2EONS0_6DSLVarE
@_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLPossibleExpression"*, i8*, i32), void (%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLPossibleExpression"*, i8*, i32)* @_ZN4SkSL3dsl13DSLExpressionC2ENS0_21DSLPossibleExpressionENS0_12PositionInfoE
@_ZN4SkSL3dsl13DSLExpressionD1Ev = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLExpression"*), void (%"class.SkSL::dsl::DSLExpression"*)* @_ZN4SkSL3dsl13DSLExpressionD2Ev
@_ZN4SkSL3dsl21DSLPossibleExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLPossibleExpression"*, %"class.SkSL::Expression"*), void (%"class.SkSL::dsl::DSLPossibleExpression"*, %"class.SkSL::Expression"*)* @_ZN4SkSL3dsl21DSLPossibleExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE
@_ZN4SkSL3dsl21DSLPossibleExpressionC1EOS1_ = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLPossibleExpression"*, %"class.SkSL::dsl::DSLPossibleExpression"*), void (%"class.SkSL::dsl::DSLPossibleExpression"*, %"class.SkSL::dsl::DSLPossibleExpression"*)* @_ZN4SkSL3dsl21DSLPossibleExpressionC2EOS1_
@_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLPossibleExpression"*), void (%"class.SkSL::dsl::DSLPossibleExpression"*)* @_ZN4SkSL3dsl21DSLPossibleExpressionD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4SkSL3dsl13DSLExpressionC2Ev(%"class.SkSL::dsl::DSLExpression"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.SkSL::dsl::DSLExpression"* %0 to i64*
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpressionC2EOS1_(%"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.SkSL::dsl::DSLExpression"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %6 = bitcast %"class.SkSL::dsl::DSLExpression"* %0 to i64*
  store i64 %5, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::Expression"*) unnamed_addr #2 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = ptrtoint %"class.SkSL::Expression"* %1 to i64
  %5 = bitcast %"class.SkSL::dsl::DSLExpression"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = tail call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #9
  %7 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %6, i64 0, i32 2
  %8 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %7, align 8
  %9 = bitcast %"class.SkSL::Compiler"* %8 to i32 (%"class.SkSL::Compiler"*)***
  %10 = load i32 (%"class.SkSL::Compiler"*)**, i32 (%"class.SkSL::Compiler"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.SkSL::Compiler"*)*, i32 (%"class.SkSL::Compiler"*)** %10, i64 3
  %12 = load i32 (%"class.SkSL::Compiler"*)*, i32 (%"class.SkSL::Compiler"*)** %11, align 8
  %13 = tail call i32 %12(%"class.SkSL::Compiler"* %8) #9
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  %17 = tail call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #9
  %18 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %17, i64 0, i32 2
  %19 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %18, align 8
  call void @_ZN4SkSL8Compiler9errorTextEb(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::Compiler"* %19, i1 zeroext false) #9
  %20 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* %16
  call void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8* %26, %"class.SkSL::dsl::PositionInfo"* null) #9
  %27 = load i8, i8* %21, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %15
  %30 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %30) #10
  br label %31

31:                                               ; preds = %15, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  %32 = call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #9
  %33 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %32, i64 0, i32 2
  %34 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %33, align 8
  %35 = bitcast %"class.SkSL::Compiler"* %34 to void (%"class.SkSL::Compiler"*, i32)***
  %36 = load void (%"class.SkSL::Compiler"*, i32)**, void (%"class.SkSL::Compiler"*, i32)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.SkSL::Compiler"*, i32)*, void (%"class.SkSL::Compiler"*, i32)** %36, i64 4
  %38 = load void (%"class.SkSL::Compiler"*, i32)*, void (%"class.SkSL::Compiler"*, i32)** %37, align 8
  call void %38(%"class.SkSL::Compiler"* %34, i32 0) #9
  br label %39

39:                                               ; preds = %31, %2
  ret void
}

declare void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8*, %"class.SkSL::dsl::PositionInfo"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4SkSL8Compiler9errorTextEb(%"class.SkSL::String"* sret, %"class.SkSL::Compiler"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpressionC2Ef(%"class.SkSL::dsl::DSLExpression"* nocapture, float) unnamed_addr #2 align 2 {
  %3 = tail call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #9
  %4 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %3, i64 0, i32 0, i32 30, i32 0, i32 0, i32 0
  %5 = bitcast %"class.SkSL::Type"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #9
  %8 = bitcast i8* %7 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 -1, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 45, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %7, i64 16
  %14 = bitcast i8* %13 to i64*
  store i64 %6, i64* %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 24
  %16 = bitcast i8* %15 to float*
  store float %1, float* %16, align 8
  %17 = ptrtoint i8* %7 to i64
  %18 = bitcast %"class.SkSL::dsl::DSLExpression"* %0 to i64*
  store i64 %17, i64* %18, align 8
  %19 = tail call float @llvm.fabs.f32(float %1) #11
  %20 = fcmp ueq float %19, 0x7FF0000000000000
  br i1 %20, label %21, label %27

21:                                               ; preds = %2
  %22 = fcmp oeq float %19, 0x7FF0000000000000
  br i1 %22, label %23, label %24

23:                                               ; preds = %21
  tail call void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), %"class.SkSL::dsl::PositionInfo"* null) #9
  br label %27

24:                                               ; preds = %21
  %25 = fcmp uno float %1, 0.000000e+00
  br i1 %25, label %26, label %27

26:                                               ; preds = %24
  tail call void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), %"class.SkSL::dsl::PositionInfo"* null) #9
  br label %27

27:                                               ; preds = %2, %23, %26, %24
  ret void
}

declare dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpressionC2Ei(%"class.SkSL::dsl::DSLExpression"* nocapture, i32) unnamed_addr #2 align 2 {
  %3 = tail call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #9
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %3, i64 0, i32 0, i32 31, i32 0, i32 0, i32 0
  %6 = bitcast %"class.SkSL::Type"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #9
  %9 = bitcast i8* %8 to i32 (...)***
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 -1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 43, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %8, i64 16
  %15 = bitcast i8* %14 to i64*
  store i64 %7, i64* %15, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %16 = getelementptr inbounds i8, i8* %8, i64 24
  %17 = bitcast i8* %16 to i64*
  store i64 %4, i64* %17, align 8
  %18 = ptrtoint i8* %8 to i64
  %19 = bitcast %"class.SkSL::dsl::DSLExpression"* %0 to i64*
  store i64 %18, i64* %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpressionC2Ej(%"class.SkSL::dsl::DSLExpression"* nocapture, i32) unnamed_addr #2 align 2 {
  %3 = tail call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #9
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %3, i64 0, i32 0, i32 31, i32 0, i32 0, i32 0
  %6 = bitcast %"class.SkSL::Type"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #9
  %9 = bitcast i8* %8 to i32 (...)***
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 -1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 43, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %8, i64 16
  %15 = bitcast i8* %14 to i64*
  store i64 %7, i64* %15, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %16 = getelementptr inbounds i8, i8* %8, i64 24
  %17 = bitcast i8* %16 to i64*
  store i64 %4, i64* %17, align 8
  %18 = ptrtoint i8* %8 to i64
  %19 = bitcast %"class.SkSL::dsl::DSLExpression"* %0 to i64*
  store i64 %18, i64* %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpressionC2Eb(%"class.SkSL::dsl::DSLExpression"* nocapture, i1 zeroext) unnamed_addr #2 align 2 {
  %3 = tail call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #9
  %4 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %3, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %5 = bitcast %"class.SkSL::Type"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #9
  %8 = zext i1 %1 to i8
  %9 = bitcast i8* %7 to i32 (...)***
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 -1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 31, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %7, i64 16
  %15 = bitcast i8* %14 to i64*
  store i64 %6, i64* %15, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 24
  store i8 %8, i8* %16, align 8
  %17 = ptrtoint i8* %7 to i64
  %18 = bitcast %"class.SkSL::dsl::DSLExpression"* %0 to i64*
  store i64 %17, i64* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpressionC2ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLVar"* dereferenceable(152)) unnamed_addr #2 align 2 {
  %3 = tail call dereferenceable(64) %"class.SkSL::Variable"* @_ZN4SkSL3dsl9DSLWriter3VarERNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152) %1) #9
  %4 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #9
  %5 = bitcast i8* %4 to %"class.SkSL::VariableReference"*
  tail call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %5, i32 -1, %"class.SkSL::Variable"* %3, i8 signext 0) #9
  %6 = ptrtoint i8* %4 to i64
  %7 = bitcast %"class.SkSL::dsl::DSLExpression"* %0 to i64*
  store i64 %6, i64* %7, align 8
  ret void
}

declare dereferenceable(64) %"class.SkSL::Variable"* @_ZN4SkSL3dsl9DSLWriter3VarERNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpressionC2EONS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLVar"* dereferenceable(152)) unnamed_addr #2 align 2 {
  %3 = tail call dereferenceable(64) %"class.SkSL::Variable"* @_ZN4SkSL3dsl9DSLWriter3VarERNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152) %1) #9
  %4 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #9
  %5 = bitcast i8* %4 to %"class.SkSL::VariableReference"*
  tail call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %5, i32 -1, %"class.SkSL::Variable"* %3, i8 signext 0) #9
  %6 = ptrtoint i8* %4 to i64
  %7 = bitcast %"class.SkSL::dsl::DSLExpression"* %0 to i64*
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpressionC2ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, i8*, i32) unnamed_addr #2 align 2 {
  %5 = alloca { i8*, i32 }, align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i64 0, i32 0
  store i8* %2, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i64 0, i32 1
  store i32 %3, i32* %8, align 8
  %9 = bitcast %"class.SkSL::dsl::DSLExpression"* %0 to i64*
  store i64 0, i64* %9, align 8
  %10 = tail call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #9
  %11 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %10, i64 0, i32 2
  %12 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %11, align 8
  %13 = bitcast %"class.SkSL::Compiler"* %12 to i32 (%"class.SkSL::Compiler"*)***
  %14 = load i32 (%"class.SkSL::Compiler"*)**, i32 (%"class.SkSL::Compiler"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.SkSL::Compiler"*)*, i32 (%"class.SkSL::Compiler"*)** %14, i64 3
  %16 = load i32 (%"class.SkSL::Compiler"*)*, i32 (%"class.SkSL::Compiler"*)** %15, align 8
  %17 = tail call i32 %16(%"class.SkSL::Compiler"* %12) #9
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %44, label %19

19:                                               ; preds = %4
  %20 = bitcast { i8*, i32 }* %5 to %"class.SkSL::dsl::PositionInfo"*
  %21 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #9
  %22 = tail call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #9
  %23 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %22, i64 0, i32 2
  %24 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %23, align 8
  call void @_ZN4SkSL8Compiler9errorTextEb(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::Compiler"* %24, i1 zeroext false) #9
  %25 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = select i1 %28, i8* %30, i8* %21
  call void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8* %31, %"class.SkSL::dsl::PositionInfo"* nonnull %20) #9
  %32 = load i8, i8* %26, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %19
  %35 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %35) #10
  br label %36

36:                                               ; preds = %19, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #9
  %37 = call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #9
  %38 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %37, i64 0, i32 2
  %39 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %38, align 8
  %40 = bitcast %"class.SkSL::Compiler"* %39 to void (%"class.SkSL::Compiler"*, i32)***
  %41 = load void (%"class.SkSL::Compiler"*, i32)**, void (%"class.SkSL::Compiler"*, i32)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::Compiler"*, i32)*, void (%"class.SkSL::Compiler"*, i32)** %41, i64 4
  %43 = load void (%"class.SkSL::Compiler"*, i32)*, void (%"class.SkSL::Compiler"*, i32)** %42, align 8
  call void %43(%"class.SkSL::Compiler"* %39, i32 0) #9
  br label %44

44:                                               ; preds = %4, %36
  %45 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %1 to i64*
  %47 = load i64, i64* %46, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %45, align 8
  %48 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %48, align 8
  store i64 %47, i64* %9, align 8
  %50 = icmp eq %"class.SkSL::Expression"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %44
  %52 = bitcast %"class.SkSL::Expression"* %49 to void (%"class.SkSL::Expression"*)***
  %53 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %53, i64 1
  %55 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %54, align 8
  call void %55(%"class.SkSL::Expression"* nonnull %49) #9
  br label %56

56:                                               ; preds = %44, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nocapture) unnamed_addr #2 align 2 {
  %2 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  br label %41

7:                                                ; preds = %1
  %8 = tail call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #9
  %9 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %8, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %33, label %12

12:                                               ; preds = %7
  %13 = tail call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #9
  %14 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %13, i64 0, i32 11
  %15 = bitcast %"class.std::__1::stack"* %14 to %"struct.std::__1::__list_node"**
  %16 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %16, i64 0, i32 1, i32 1
  %18 = load %"struct.GrGLSLFragmentProcessor::EmitArgs"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"** %17, align 8
  %19 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %18, i64 0, i32 0
  %20 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %19, align 8
  %21 = bitcast %class.GrGLSLFPFragmentBuilder* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %class.GrGLSLFPFragmentBuilder* %20 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 %25
  %28 = bitcast i8* %27 to %class.GrGLSLShaderBuilder*
  %29 = bitcast %"class.SkSL::dsl::DSLStatement"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  %30 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  call void @_ZN4SkSL3dsl12DSLStatementC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLStatement"* nonnull %2, %"class.SkSL::Expression"* %30) #9
  %31 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %31, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %31, align 8
  call void @_ZN19GrGLSLShaderBuilder10codeAppendENSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEE(%class.GrGLSLShaderBuilder* %28, %"class.SkSL::Statement"* %32) #9
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br label %33

33:                                               ; preds = %7, %12
  %34 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %35 = icmp eq %"class.SkSL::Expression"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = bitcast %"class.SkSL::Expression"* %34 to void (%"class.SkSL::Expression"*)***
  %38 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %38, i64 1
  %40 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %39, align 8
  call void %40(%"class.SkSL::Expression"* nonnull %34) #9
  br label %41

41:                                               ; preds = %6, %33, %36
  ret void
}

declare void @_ZN19GrGLSLShaderBuilder10codeAppendENSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEE(%class.GrGLSLShaderBuilder*, %"class.SkSL::Statement"*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %2, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %2, align 8
  ret %"class.SkSL::Expression"* %3
}

declare void @_ZN4SkSL3dsl12DSLStatementC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLStatement"*, %"class.SkSL::Expression"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"*) unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpression4swapERS1_(%"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.SkSL::dsl::DSLExpression"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.SkSL::dsl::DSLExpression"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %3, align 8
  store i64 %4, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.SkSL::Type"*, i8 } @_ZN4SkSL3dsl13DSLExpression4typeEv(%"class.SkSL::dsl::DSLExpression"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %2, align 8
  %4 = bitcast %"class.SkSL::Expression"* %3 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %5 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %5, i64 3
  %7 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %6, align 8
  %8 = tail call dereferenceable(184) %"class.SkSL::Type"* %7(%"class.SkSL::Expression"* %3) #9
  %9 = insertvalue { %"class.SkSL::Type"*, i8 } undef, %"class.SkSL::Type"* %8, 0
  ret { %"class.SkSL::Type"*, i8 } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpression1xENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %7)
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 0, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  ret void
}

declare void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, i8 signext, i8*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpression1yENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %7)
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 1, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpression1zENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %7)
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 2, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpression1wENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %7)
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 3, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpression1rENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %7)
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 0, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpression1gENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %7)
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 1, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpression1bENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %7)
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 2, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpression1aENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %7)
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 3, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpression5fieldEPKcNS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, i8*, i8*, i32) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %8 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %8, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %8, align 8
  %10 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter12ConvertFieldENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEEPKc(%"class.SkSL::Expression"* %9, i8* %2) #9
  %11 = ptrtoint %"class.SkSL::Expression"* %10 to i64
  %12 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %7 to i64*
  store i64 %11, i64* %12, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, i8* %3, i32 %4)
  %13 = bitcast %"class.SkSL::dsl::DSLExpression"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %14, align 8
  %16 = icmp eq %"class.SkSL::Expression"* %15, null
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %14, align 8
  br i1 %16, label %18, label %17

17:                                               ; preds = %5
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::Expression"* nonnull %15) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #9
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %14, align 8
  br label %18

18:                                               ; preds = %17, %5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  ret void
}

declare %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter12ConvertFieldENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEEPKc(%"class.SkSL::Expression"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpressionaSES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 64, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

declare %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"*, i32, %"class.SkSL::Expression"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpressionixES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter12ConvertIndexENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEES7_(%"class.SkSL::Expression"* %5, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

declare %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter12ConvertIndexENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEES7_(%"class.SkSL::Expression"*, %"class.SkSL::Expression"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DSLExpressionclE8SkTArrayINS0_10DSLWrapperIS1_EELb0EE(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %class.SkTArray.239* nocapture readonly) local_unnamed_addr #2 align 2 {
  %4 = alloca %class.SkSTArray.240, align 8
  %5 = alloca %class.SkSTArray.240, align 8
  %6 = getelementptr inbounds %class.SkSTArray.240, %class.SkSTArray.240* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  %7 = getelementptr inbounds %class.SkSTArray.240, %class.SkSTArray.240* %4, i64 0, i32 0, i32 0, i64 16
  %8 = getelementptr inbounds %class.SkSTArray.240, %class.SkSTArray.240* %4, i64 0, i32 0, i32 0, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = bitcast i8* %7 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  store i8* %6, i8** %10, align 8
  store i64 17179869184, i64* %9, align 8
  %11 = bitcast i8* %7 to %class.SkTArray.242*
  %12 = getelementptr inbounds %class.SkTArray.239, %class.SkTArray.239* %2, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = lshr i64 %13, 1
  %15 = trunc i64 %14 to i32
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %3
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.242* %11, i32 %16, i32 0) #9
  %19 = load i64, i64* %9, align 8
  %20 = shl i64 %19, 32
  %21 = and i64 %20, 4294967296
  %22 = and i64 %19, -4294967297
  %23 = or i64 %21, %22
  br label %24

24:                                               ; preds = %3, %18
  %25 = phi i64 [ %23, %18 ], [ 17179869184, %3 ]
  store i64 %25, i64* %9, align 8
  %26 = getelementptr inbounds %class.SkTArray.239, %class.SkTArray.239* %2, i64 0, i32 0
  %27 = load %"class.SkSL::dsl::DSLWrapper"*, %"class.SkSL::dsl::DSLWrapper"** %26, align 8
  %28 = icmp eq %"class.SkSL::dsl::DSLWrapper"* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %24
  %30 = load i64, i64* %12, align 8
  %31 = lshr i64 %30, 1
  %32 = and i64 %31, 2147483647
  %33 = getelementptr inbounds %"class.SkSL::dsl::DSLWrapper", %"class.SkSL::dsl::DSLWrapper"* %27, i64 %32
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  %36 = bitcast i8* %7 to %"class.std::__1::unique_ptr"**
  br label %108

37:                                               ; preds = %108, %24, %29
  %38 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %38, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %38, align 8
  %40 = getelementptr inbounds %class.SkSTArray.240, %class.SkSTArray.240* %5, i64 0, i32 0, i32 0, i64 16
  %41 = getelementptr inbounds %class.SkSTArray.240, %class.SkSTArray.240* %5, i64 0, i32 0, i32 0, i64 0
  %42 = getelementptr inbounds %class.SkSTArray.240, %class.SkSTArray.240* %5, i64 0, i32 0, i32 0, i64 24
  %43 = bitcast i8* %42 to i64*
  %44 = bitcast i8* %40 to i8**
  store i8* %41, i8** %44, align 8
  store i64 17179869184, i64* %43, align 8
  %45 = bitcast i8* %40 to %class.SkTArray.242*
  %46 = call dereferenceable(16) %class.SkTArray.242* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.242* %45, %class.SkTArray.242* dereferenceable(16) %11) #9
  %47 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter4CallENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE9SkSTArrayILi2ES7_Lb0EE(%"class.SkSL::Expression"* %39, %class.SkSTArray.240* nonnull %5) #9
  %48 = ptrtoint %"class.SkSL::Expression"* %47 to i64
  %49 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %48, i64* %49, align 8
  %50 = load i64, i64* %43, align 8
  %51 = and i64 %50, 4294967294
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %37
  %54 = bitcast i8* %40 to %"class.std::__1::unique_ptr"**
  br label %59

55:                                               ; preds = %70, %37
  %56 = phi i64 [ %50, %37 ], [ %72, %70 ]
  %57 = and i64 %56, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %78, label %76

59:                                               ; preds = %70, %53
  %60 = phi i64 [ 0, %53 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %54, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %62, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %62, align 8
  %64 = icmp eq %"class.SkSL::Expression"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Expression"* %63 to void (%"class.SkSL::Expression"*)***
  %67 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %68, align 8
  call void %69(%"class.SkSL::Expression"* nonnull %63) #9
  br label %70

70:                                               ; preds = %65, %59
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %43, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %55

76:                                               ; preds = %55
  %77 = load i8*, i8** %44, align 8
  call void @_Z7sk_freePv(i8* %77) #9
  br label %78

78:                                               ; preds = %55, %76
  %79 = load i64, i64* %9, align 8
  %80 = and i64 %79, 4294967294
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = bitcast i8* %7 to %"class.std::__1::unique_ptr"**
  br label %88

84:                                               ; preds = %99, %78
  %85 = phi i64 [ %79, %78 ], [ %101, %99 ]
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %107, label %105

88:                                               ; preds = %99, %82
  %89 = phi i64 [ 0, %82 ], [ %100, %99 ]
  %90 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %83, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 %89, i32 0, i32 0, i32 0
  %92 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %91, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %91, align 8
  %93 = icmp eq %"class.SkSL::Expression"* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %88
  %95 = bitcast %"class.SkSL::Expression"* %92 to void (%"class.SkSL::Expression"*)***
  %96 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %96, i64 1
  %98 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %97, align 8
  call void %98(%"class.SkSL::Expression"* nonnull %92) #9
  br label %99

99:                                               ; preds = %94, %88
  %100 = add nuw nsw i64 %89, 1
  %101 = load i64, i64* %9, align 8
  %102 = lshr i64 %101, 1
  %103 = and i64 %102, 2147483647
  %104 = icmp ult i64 %100, %103
  br i1 %104, label %88, label %84

105:                                              ; preds = %84
  %106 = load i8*, i8** %10, align 8
  call void @_Z7sk_freePv(i8* %106) #9
  br label %107

107:                                              ; preds = %84, %105
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void

108:                                              ; preds = %35, %108
  %109 = phi %"class.SkSL::dsl::DSLWrapper"* [ %27, %35 ], [ %123, %108 ]
  %110 = getelementptr inbounds %"class.SkSL::dsl::DSLWrapper", %"class.SkSL::dsl::DSLWrapper"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = bitcast %"class.SkSL::dsl::DSLWrapper"* %109 to i64*
  %112 = load i64, i64* %111, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %110, align 8
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.242* %11, i32 1, i32 1) #9
  %113 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %36, align 8
  %114 = load i64, i64* %9, align 8
  %115 = lshr i64 %114, 1
  %116 = and i64 %115, 2147483647
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %113, i64 %116
  %118 = add i64 %114, 2
  %119 = and i64 %118, 4294967294
  %120 = and i64 %114, -4294967295
  %121 = or i64 %119, %120
  store i64 %121, i64* %9, align 8
  %122 = bitcast %"class.std::__1::unique_ptr"* %117 to i64*
  store i64 %112, i64* %122, align 8
  %123 = getelementptr inbounds %"class.SkSL::dsl::DSLWrapper", %"class.SkSL::dsl::DSLWrapper"* %109, i64 1
  %124 = icmp eq %"class.SkSL::dsl::DSLWrapper"* %123, %33
  br i1 %124, label %37, label %108
}

declare %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter4CallENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE9SkSTArrayILi2ES7_Lb0EE(%"class.SkSL::Expression"*, %class.SkSTArray.240*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslplENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 46, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslpLENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 71, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslmiENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 47, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslmIENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 72, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslmlENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 48, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslmLENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 73, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsldvENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 49, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsldVENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 74, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslrmENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 50, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslrMENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 75, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsllsENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 51, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsllSENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 76, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslrsENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 52, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslrSENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 77, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslaaENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 59, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslooENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 57, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslanENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 55, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslaNENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 80, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslorENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 53, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsloRENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 78, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsleoENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 54, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsleOENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 79, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsleqENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 65, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslneENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 66, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslgtENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 67, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslltENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 68, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslgeENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 69, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslleENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 70, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslpsENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertPrefixENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(i32 46, %"class.SkSL::Expression"* %4) #9
  %6 = ptrtoint %"class.SkSL::Expression"* %5 to i64
  %7 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %6, i64* %7, align 8
  ret void
}

declare %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertPrefixENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(i32, %"class.SkSL::Expression"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslngENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertPrefixENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(i32 47, %"class.SkSL::Expression"* %4) #9
  %6 = ptrtoint %"class.SkSL::Expression"* %5 to i64
  %7 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslntENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertPrefixENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(i32 60, %"class.SkSL::Expression"* %4) #9
  %6 = ptrtoint %"class.SkSL::Expression"* %5 to i64
  %7 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslcoENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertPrefixENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(i32 56, %"class.SkSL::Expression"* %4) #9
  %6 = ptrtoint %"class.SkSL::Expression"* %5 to i64
  %7 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslppENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertPrefixENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(i32 44, %"class.SkSL::Expression"* %4) #9
  %6 = ptrtoint %"class.SkSL::Expression"* %5 to i64
  %7 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslppENS0_13DSLExpressionEi(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, i32) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter14ConvertPostfixENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorE(%"class.SkSL::Expression"* %5, i32 44) #9
  %7 = ptrtoint %"class.SkSL::Expression"* %6 to i64
  %8 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %7, i64* %8, align 8
  ret void
}

declare %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter14ConvertPostfixENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorE(%"class.SkSL::Expression"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslmmENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertPrefixENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(i32 45, %"class.SkSL::Expression"* %4) #9
  %6 = ptrtoint %"class.SkSL::Expression"* %5 to i64
  %7 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslmmENS0_13DSLExpressionEi(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, i32) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter14ConvertPostfixENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorE(%"class.SkSL::Expression"* %5, i32 45) #9
  %7 = ptrtoint %"class.SkSL::Expression"* %6 to i64
  %8 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %7, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslcmENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %5, i32 43, %"class.SkSL::Expression"* %7) #9
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslcmENS0_21DSLPossibleExpressionENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 {
  %4 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %8, align 8
  %11 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %6 to i64*
  store i64 %10, i64* %11, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0), i32 228)
  %12 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %12, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %14, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %14, align 8
  %16 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %13, i32 43, %"class.SkSL::Expression"* %15) #9
  %17 = ptrtoint %"class.SkSL::Expression"* %16 to i64
  %18 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %17, i64* %18, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  %19 = bitcast %"class.SkSL::dsl::DSLExpression"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %20, align 8
  %22 = icmp eq %"class.SkSL::Expression"* %21, null
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %20, align 8
  br i1 %22, label %24, label %23

23:                                               ; preds = %3
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %4, %"class.SkSL::Expression"* nonnull %21) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %4) #9
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %20, align 8
  br label %24

24:                                               ; preds = %23, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslcmENS0_13DSLExpressionENS0_21DSLPossibleExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture) local_unnamed_addr #2 {
  %4 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %7, align 8
  %9 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %10, align 8
  %13 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %6 to i64*
  store i64 %12, i64* %13, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0), i32 234)
  %14 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %14, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %14, align 8
  %16 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %8, i32 43, %"class.SkSL::Expression"* %15) #9
  %17 = ptrtoint %"class.SkSL::Expression"* %16 to i64
  %18 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %17, i64* %18, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  %19 = bitcast %"class.SkSL::dsl::DSLExpression"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %20, align 8
  %22 = icmp eq %"class.SkSL::Expression"* %21, null
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %20, align 8
  br i1 %22, label %24, label %23

23:                                               ; preds = %3
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %4, %"class.SkSL::Expression"* nonnull %21) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %4) #9
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %20, align 8
  br label %24

24:                                               ; preds = %23, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dslcmENS0_21DSLPossibleExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture) local_unnamed_addr #2 {
  %4 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %9 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %10 = bitcast %"class.SkSL::dsl::DSLExpression"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %11, align 8
  %14 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %7 to i64*
  store i64 %13, i64* %14, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0), i32 238)
  %15 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %15, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %15, align 8
  %17 = bitcast %"class.SkSL::dsl::DSLExpression"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %2 to i64*
  %20 = load i64, i64* %19, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %18, align 8
  %21 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %9 to i64*
  store i64 %20, i64* %21, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %9, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0), i32 240)
  %22 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %22, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %22, align 8
  %24 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %16, i32 43, %"class.SkSL::Expression"* %23) #9
  %25 = ptrtoint %"class.SkSL::Expression"* %24 to i64
  %26 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %25, i64* %26, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #9
  %27 = bitcast %"class.SkSL::dsl::DSLExpression"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %28, align 8
  %30 = icmp eq %"class.SkSL::Expression"* %29, null
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %28, align 8
  br i1 %30, label %32, label %31

31:                                               ; preds = %3
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %4, %"class.SkSL::Expression"* nonnull %29) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %4) #9
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %28, align 8
  br label %32

32:                                               ; preds = %31, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #9
  %33 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %34, align 8
  %36 = icmp eq %"class.SkSL::Expression"* %35, null
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %34, align 8
  br i1 %36, label %38, label %37

37:                                               ; preds = %32
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* nonnull %35) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %34, align 8
  br label %38

38:                                               ; preds = %37, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression16coerceAndReleaseERKNS_4TypeE(%"class.SkSL::dsl::DSLExpression"* nocapture, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %4 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %5, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %5, align 8
  call void @_ZN4SkSL3dsl9DSLWriter6CoerceENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEERKNS_4TypeE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %3, %"class.SkSL::Expression"* %6, %"class.SkSL::Type"* dereferenceable(184) %1) #9
  %7 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret %"class.SkSL::Expression"* %8
}

declare void @_ZN4SkSL3dsl9DSLWriter6CoerceENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEERKNS_4TypeE(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::Expression"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL3dsl21DSLPossibleExpression7releaseEv(%"class.SkSL::dsl::DSLPossibleExpression"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %2, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %2, align 8
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleExpression"* nocapture, %"class.SkSL::Expression"*) unnamed_addr #2 align 2 {
  %3 = ptrtoint %"class.SkSL::Expression"* %1 to i64
  %4 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %3, i64* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpressionC2EOS1_(%"class.SkSL::dsl::DSLPossibleExpression"* nocapture, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %6 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %5, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpressionD2Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nocapture) unnamed_addr #2 align 2 {
  %2 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %2, %"class.SkSL::Expression"* nonnull %4)
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %2) #9
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %8 = icmp eq %"class.SkSL::Expression"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.SkSL::Expression"* %7 to void (%"class.SkSL::Expression"*)***
  %11 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %11, i64 1
  %13 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %12, align 8
  tail call void %13(%"class.SkSL::Expression"* nonnull %7) #9
  br label %14

14:                                               ; preds = %1, %6, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.SkSL::Type"*, i8 } @_ZN4SkSL3dsl21DSLPossibleExpression4typeEv(%"class.SkSL::dsl::DSLPossibleExpression"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %2, align 8
  %4 = bitcast %"class.SkSL::Expression"* %3 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %5 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %5, i64 3
  %7 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %6, align 8
  %8 = tail call dereferenceable(184) %"class.SkSL::Type"* %7(%"class.SkSL::Expression"* %3) #9
  %9 = insertvalue { %"class.SkSL::Type"*, i8 } undef, %"class.SkSL::Type"* %8, 0
  ret { %"class.SkSL::Type"*, i8 } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpression1xENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = bitcast %"class.SkSL::dsl::DSLExpression"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %8, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %8, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::Expression"* %9)
  %10 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %11, align 8, !noalias !2
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %11, align 8, !noalias !2
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %12) #9, !noalias !2
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 0, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpression1yENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = bitcast %"class.SkSL::dsl::DSLExpression"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %8, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %8, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::Expression"* %9)
  %10 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %11, align 8, !noalias !5
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %11, align 8, !noalias !5
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %12) #9, !noalias !5
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 1, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpression1zENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = bitcast %"class.SkSL::dsl::DSLExpression"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %8, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %8, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::Expression"* %9)
  %10 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %11, align 8, !noalias !8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %11, align 8, !noalias !8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %12) #9, !noalias !8
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 2, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpression1wENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = bitcast %"class.SkSL::dsl::DSLExpression"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %8, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %8, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::Expression"* %9)
  %10 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %11, align 8, !noalias !11
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %11, align 8, !noalias !11
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %12) #9, !noalias !11
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 3, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpression1rENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = bitcast %"class.SkSL::dsl::DSLExpression"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %8, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %8, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::Expression"* %9)
  %10 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %11, align 8, !noalias !14
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %11, align 8, !noalias !14
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %12) #9, !noalias !14
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 0, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpression1gENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = bitcast %"class.SkSL::dsl::DSLExpression"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %8, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %8, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::Expression"* %9)
  %10 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %11, align 8, !noalias !17
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %11, align 8, !noalias !17
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %12) #9, !noalias !17
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 1, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpression1bENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = bitcast %"class.SkSL::dsl::DSLExpression"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %8, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %8, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::Expression"* %9)
  %10 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %11, align 8, !noalias !20
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %11, align 8, !noalias !20
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %12) #9, !noalias !20
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 2, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpression1aENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = bitcast %"class.SkSL::dsl::DSLExpression"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %8, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %8, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::Expression"* %9)
  %10 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %11, align 8, !noalias !23
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %11, align 8, !noalias !23
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %12) #9, !noalias !23
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %5, i8 signext 3, i8* %2, i32 %3) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpression5fieldEPKcNS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, i8*, i8*, i32) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %9 = bitcast %"class.SkSL::dsl::DSLExpression"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %10, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %10, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::Expression"* %11)
  %12 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %13, align 8, !noalias !26
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %13, align 8, !noalias !26
  %15 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter12ConvertFieldENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEEPKc(%"class.SkSL::Expression"* %14, i8* %2) #9, !noalias !26
  %16 = ptrtoint %"class.SkSL::Expression"* %15 to i64
  %17 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %7 to i64*
  store i64 %16, i64* %17, align 8, !noalias !26
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, i8* %3, i32 %4) #9
  %18 = bitcast %"class.SkSL::dsl::DSLExpression"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9, !noalias !26
  %19 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %19, align 8, !noalias !26
  %21 = icmp eq %"class.SkSL::Expression"* %20, null
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %19, align 8, !noalias !26
  br i1 %21, label %23, label %22

22:                                               ; preds = %5
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::Expression"* nonnull %20) #9, !noalias !26
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #9, !noalias !26
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %19, align 8, !noalias !26
  br label %23

23:                                               ; preds = %5, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9, !noalias !26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpressionaSENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8
  %9 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %10, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %10, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %11)
  %12 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %12, align 8, !noalias !29
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %12, align 8, !noalias !29
  %14 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %14, align 8, !noalias !29
  %15 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %13, i32 64, %"class.SkSL::Expression"* %8) #9, !noalias !29
  %16 = ptrtoint %"class.SkSL::Expression"* %15 to i64
  %17 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %16, i64* %17, align 8, !alias.scope !29
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpressionaSEi(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = tail call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #9
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %7, i64 0, i32 0, i32 31, i32 0, i32 0, i32 0
  %10 = bitcast %"class.SkSL::Type"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #9
  %13 = bitcast i8* %12 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 -1, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 12
  %17 = bitcast i8* %16 to i32*
  store i32 43, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %12, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 %11, i64* %19, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %20 = getelementptr inbounds i8, i8* %12, i64 24
  %21 = bitcast i8* %20 to i64*
  store i64 %8, i64* %21, align 8
  %22 = bitcast %"class.SkSL::dsl::DSLExpression"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast i8* %12 to %"class.SkSL::Expression"*
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %23, align 8, !noalias !32
  %25 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9, !noalias !32
  %26 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %26, align 8, !noalias !32
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %26, align 8, !noalias !32
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %27) #9, !noalias !32
  %28 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %28, align 8, !noalias !35
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %28, align 8, !noalias !35
  %30 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %30, align 8, !noalias !35
  %31 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %29, i32 64, %"class.SkSL::Expression"* %24) #9, !noalias !35
  %32 = ptrtoint %"class.SkSL::Expression"* %31 to i64
  %33 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %32, i64* %33, align 8, !alias.scope !35
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9, !noalias !32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9, !noalias !32
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %4) #9, !noalias !32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpressionaSEf(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, float) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = tail call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #9
  %8 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %7, i64 0, i32 0, i32 30, i32 0, i32 0, i32 0
  %9 = bitcast %"class.SkSL::Type"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #9
  %12 = bitcast i8* %11 to i32 (...)***
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 -1, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 45, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %11, i64 16
  %18 = bitcast i8* %17 to i64*
  store i64 %10, i64* %18, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 24
  %20 = bitcast i8* %19 to float*
  store float %2, float* %20, align 8
  %21 = ptrtoint i8* %11 to i64
  %22 = bitcast %"class.SkSL::dsl::DSLExpression"* %6 to i64*
  store i64 %21, i64* %22, align 8
  %23 = tail call float @llvm.fabs.f32(float %2) #11
  %24 = fcmp ueq float %23, 0x7FF0000000000000
  %25 = bitcast i8* %11 to %"class.SkSL::Expression"*
  br i1 %24, label %26, label %32

26:                                               ; preds = %3
  %27 = fcmp oeq float %23, 0x7FF0000000000000
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), %"class.SkSL::dsl::PositionInfo"* null) #9
  br label %32

29:                                               ; preds = %26
  %30 = fcmp uno float %2, 0.000000e+00
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  tail call void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), %"class.SkSL::dsl::PositionInfo"* null) #9
  br label %32

32:                                               ; preds = %3, %28, %29, %31
  %33 = bitcast %"class.SkSL::dsl::DSLExpression"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %34, align 8, !noalias !38
  %35 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9, !noalias !38
  %36 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %36, align 8, !noalias !38
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %36, align 8, !noalias !38
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %37) #9, !noalias !38
  %38 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %38, align 8, !noalias !41
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %38, align 8, !noalias !41
  %40 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %40, align 8, !noalias !41
  %41 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %39, i32 64, %"class.SkSL::Expression"* %25) #9, !noalias !41
  %42 = ptrtoint %"class.SkSL::Expression"* %41 to i64
  %43 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %42, i64* %43, align 8, !alias.scope !41
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9, !noalias !38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9, !noalias !38
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %4) #9, !noalias !38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpressionaSEd(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, double) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = fptrunc double %2 to float
  %8 = tail call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #9
  %9 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %8, i64 0, i32 0, i32 30, i32 0, i32 0, i32 0
  %10 = bitcast %"class.SkSL::Type"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #9
  %13 = bitcast i8* %12 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 -1, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 12
  %17 = bitcast i8* %16 to i32*
  store i32 45, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %12, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 %11, i64* %19, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %20 = getelementptr inbounds i8, i8* %12, i64 24
  %21 = bitcast i8* %20 to float*
  store float %7, float* %21, align 8
  %22 = ptrtoint i8* %12 to i64
  %23 = bitcast %"class.SkSL::dsl::DSLExpression"* %6 to i64*
  store i64 %22, i64* %23, align 8
  %24 = tail call float @llvm.fabs.f32(float %7) #11
  %25 = fcmp ueq float %24, 0x7FF0000000000000
  %26 = bitcast i8* %12 to %"class.SkSL::Expression"*
  br i1 %25, label %27, label %33

27:                                               ; preds = %3
  %28 = fcmp oeq float %24, 0x7FF0000000000000
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), %"class.SkSL::dsl::PositionInfo"* null) #9
  br label %33

30:                                               ; preds = %27
  %31 = fcmp uno float %7, 0.000000e+00
  br i1 %31, label %32, label %33

32:                                               ; preds = %30
  tail call void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), %"class.SkSL::dsl::PositionInfo"* null) #9
  br label %33

33:                                               ; preds = %3, %29, %30, %32
  %34 = bitcast %"class.SkSL::dsl::DSLExpression"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %35, align 8, !noalias !44
  %36 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9, !noalias !44
  %37 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %37, align 8, !noalias !44
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %37, align 8, !noalias !44
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %5, %"class.SkSL::Expression"* %38) #9, !noalias !44
  %39 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %39, align 8, !noalias !47
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %39, align 8, !noalias !47
  %41 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %41, align 8, !noalias !47
  %42 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"* %40, i32 64, %"class.SkSL::Expression"* %26) #9, !noalias !47
  %43 = ptrtoint %"class.SkSL::Expression"* %42 to i64
  %44 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %43, i64* %44, align 8, !alias.scope !47
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9, !noalias !44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9, !noalias !44
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %4) #9, !noalias !44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpressionixENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, %"class.SkSL::dsl::DSLExpression"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = bitcast %"class.SkSL::dsl::DSLExpression"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %7, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %4, %"class.SkSL::Expression"* %8)
  %9 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %10, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %9, align 8
  %12 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %12, align 8, !noalias !50
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %12, align 8, !noalias !50
  %14 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %14, align 8, !noalias !50
  %15 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter12ConvertIndexENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEES7_(%"class.SkSL::Expression"* %13, %"class.SkSL::Expression"* %11) #9, !noalias !50
  %16 = ptrtoint %"class.SkSL::Expression"* %15 to i64
  %17 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %16, i64* %17, align 8, !alias.scope !50
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #9
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpressionclE8SkTArrayINS0_10DSLWrapperINS0_13DSLExpressionEEELb0EE(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, %class.SkTArray.239*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %5 = alloca %class.SkTArray.239, align 8
  %6 = bitcast %"class.SkSL::dsl::DSLExpression"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %7, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %4, %"class.SkSL::Expression"* %8)
  call void @_ZN8SkTArrayIN4SkSL3dsl10DSLWrapperINS1_13DSLExpressionEEELb0EEC2EOS5_(%class.SkTArray.239* nonnull %5, %class.SkTArray.239* dereferenceable(16) %2)
  call void @_ZN4SkSL3dsl13DSLExpressionclE8SkTArrayINS0_10DSLWrapperIS1_EELb0EE(%"class.SkSL::dsl::DSLPossibleExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %4, %class.SkTArray.239* nonnull %5)
  %9 = getelementptr inbounds %class.SkTArray.239, %class.SkTArray.239* %5, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 4294967294
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %class.SkTArray.239, %class.SkTArray.239* %5, i64 0, i32 0
  br label %19

15:                                               ; preds = %19, %3
  %16 = phi i64 [ %10, %3 ], [ %24, %19 ]
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %31, label %28

19:                                               ; preds = %19, %13
  %20 = phi i64 [ 0, %13 ], [ %23, %19 ]
  %21 = load %"class.SkSL::dsl::DSLWrapper"*, %"class.SkSL::dsl::DSLWrapper"** %14, align 8
  %22 = getelementptr inbounds %"class.SkSL::dsl::DSLWrapper", %"class.SkSL::dsl::DSLWrapper"* %21, i64 %20, i32 0
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* %22) #9
  %23 = add nuw nsw i64 %20, 1
  %24 = load i64, i64* %9, align 8
  %25 = lshr i64 %24, 1
  %26 = and i64 %25, 2147483647
  %27 = icmp ult i64 %23, %26
  br i1 %27, label %19, label %15

28:                                               ; preds = %15
  %29 = bitcast %class.SkTArray.239* %5 to i8**
  %30 = load i8*, i8** %29, align 8
  call void @_Z7sk_freePv(i8* %30) #9
  br label %31

31:                                               ; preds = %15, %28
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN4SkSL3dsl10DSLWrapperINS1_13DSLExpressionEEELb0EEC2EOS5_(%class.SkTArray.239*, %class.SkTArray.239* dereferenceable(16)) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray.239, %class.SkTArray.239* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTArray.239, %class.SkTArray.239* %1, i64 0, i32 0
  %9 = bitcast %class.SkTArray.239* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.SkTArray.239* %0 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load i64, i64* %3, align 8
  %13 = and i64 %12, 4294967294
  %14 = getelementptr inbounds %class.SkTArray.239, %class.SkTArray.239* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -4294967295
  %17 = or i64 %16, %13
  store i64 %17, i64* %14, align 8
  %18 = load i64, i64* %3, align 8
  %19 = and i64 %18, -8589934592
  %20 = and i64 %17, 8589934590
  %21 = or i64 %19, %20
  %22 = or i64 %21, 1
  store i64 %22, i64* %14, align 8
  %23 = load i64, i64* %3, align 8
  %24 = and i64 %23, 4294967296
  %25 = and i64 %22, -4294967297
  %26 = or i64 %25, %24
  store i64 %26, i64* %14, align 8
  store %"class.SkSL::dsl::DSLWrapper"* null, %"class.SkSL::dsl::DSLWrapper"** %8, align 8
  br label %79

27:                                               ; preds = %2
  %28 = lshr i64 %4, 1
  %29 = trunc i64 %28 to i32
  %30 = and i32 %29, 2147483647
  %31 = getelementptr inbounds %class.SkTArray.239, %class.SkTArray.239* %0, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %4, 4294967294
  %34 = and i64 %32, -4294967295
  %35 = or i64 %34, %33
  store i64 %35, i64* %31, align 8
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %27
  %38 = and i64 %35, 8589934591
  store i64 %38, i64* %31, align 8
  %39 = getelementptr inbounds %class.SkTArray.239, %class.SkTArray.239* %0, i64 0, i32 0
  store %"class.SkSL::dsl::DSLWrapper"* null, %"class.SkSL::dsl::DSLWrapper"** %39, align 8
  br label %50

40:                                               ; preds = %27
  %41 = icmp ugt i32 %30, 8
  %42 = select i1 %41, i32 %30, i32 8
  %43 = zext i32 %42 to i64
  %44 = shl nuw i64 %43, 33
  %45 = and i64 %35, 8589934591
  %46 = or i64 %45, %44
  store i64 %46, i64* %31, align 8
  %47 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #9
  %48 = bitcast %class.SkTArray.239* %0 to i8**
  store i8* %47, i8** %48, align 8
  %49 = load i64, i64* %31, align 8
  br label %50

50:                                               ; preds = %37, %40
  %51 = phi i8* [ %47, %40 ], [ null, %37 ]
  %52 = phi i64 [ %49, %40 ], [ %38, %37 ]
  %53 = and i64 %52, -4294967298
  %54 = or i64 %53, 1
  store i64 %54, i64* %31, align 8
  %55 = load i64, i64* %3, align 8
  %56 = and i64 %55, 4294967294
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %76, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %class.SkTArray.239, %class.SkTArray.239* %1, i64 0, i32 0
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %71, %60 ]
  %62 = shl nuw nsw i64 %61, 3
  %63 = getelementptr inbounds i8, i8* %51, i64 %62
  %64 = load %"class.SkSL::dsl::DSLWrapper"*, %"class.SkSL::dsl::DSLWrapper"** %59, align 8
  %65 = getelementptr inbounds %"class.SkSL::dsl::DSLWrapper", %"class.SkSL::dsl::DSLWrapper"* %64, i64 %61
  %66 = bitcast i8* %63 to i64*
  store i64 0, i64* %66, align 8
  %67 = bitcast %"class.SkSL::dsl::DSLWrapper"* %65 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %66, align 8
  store i64 0, i64* %67, align 8
  %69 = load %"class.SkSL::dsl::DSLWrapper"*, %"class.SkSL::dsl::DSLWrapper"** %59, align 8
  %70 = getelementptr inbounds %"class.SkSL::dsl::DSLWrapper", %"class.SkSL::dsl::DSLWrapper"* %69, i64 %61, i32 0
  tail call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* %70) #9
  %71 = add nuw nsw i64 %61, 1
  %72 = load i64, i64* %3, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %60, label %76

76:                                               ; preds = %60, %50
  %77 = phi i64 [ %55, %50 ], [ %72, %60 ]
  %78 = and i64 %77, -4294967295
  br label %79

79:                                               ; preds = %76, %7
  %80 = phi i64 [ %78, %76 ], [ 1, %7 ]
  store i64 %80, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpressionppEv(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %3, %"class.SkSL::Expression"* %5)
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8, !noalias !53
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8, !noalias !53
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertPrefixENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(i32 44, %"class.SkSL::Expression"* %7) #9, !noalias !53
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8, !alias.scope !53
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpressionppEi(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %5 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %5, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %5, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %4, %"class.SkSL::Expression"* %6)
  %7 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8, !noalias !56
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %7, align 8, !noalias !56
  %9 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter14ConvertPostfixENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorE(%"class.SkSL::Expression"* %8, i32 44) #9, !noalias !56
  %10 = ptrtoint %"class.SkSL::Expression"* %9 to i64
  %11 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %10, i64* %11, align 8, !alias.scope !56
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpressionmmEv(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %4, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %3, %"class.SkSL::Expression"* %5)
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8, !noalias !59
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %6, align 8, !noalias !59
  %8 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertPrefixENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(i32 45, %"class.SkSL::Expression"* %7) #9, !noalias !59
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %9, i64* %10, align 8, !alias.scope !59
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl21DSLPossibleExpressionmmEi(%"class.SkSL::dsl::DSLPossibleExpression"* noalias nocapture sret, %"class.SkSL::dsl::DSLPossibleExpression"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %5 = getelementptr inbounds %"class.SkSL::dsl::DSLPossibleExpression", %"class.SkSL::dsl::DSLPossibleExpression"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %5, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %5, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %4, %"class.SkSL::Expression"* %6)
  %7 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8, !noalias !62
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %7, align 8, !noalias !62
  %9 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter14ConvertPostfixENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorE(%"class.SkSL::Expression"* %8, i32 45) #9, !noalias !62
  %10 = ptrtoint %"class.SkSL::Expression"* %9 to i64
  %11 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %0 to i64*
  store i64 %10, i64* %11, align 8, !alias.scope !62
  call void @_ZN4SkSL3dsl13DSLExpressionD2Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %4) #9
  ret void
}

declare dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIfED0Ev(%"class.SkSL::Literal"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIfE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal"*) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %1, i64 0, i32 1
  %4 = load float, float* %3, align 8
  %5 = fpext float %4 to double
  tail call void @_ZN4SkSL9to_stringEd(%"class.SkSL::String"* sret %0, double %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL10Expression4typeEv(%"class.SkSL::Expression"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %0, i64 0, i32 1
  %3 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %2, align 8
  ret %"class.SkSL::Type"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIfE21isCompileTimeConstantEv(%"class.SkSL::Literal"*) unnamed_addr #2 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIfE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 45
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 1
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %10 = bitcast %"class.SkSL::Expression"* %9 to float*
  %11 = load float, float* %10, align 8
  %12 = fcmp oeq float %8, %11
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i32 [ %13, %6 ], [ -1, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL10Expression19isConstantOrUniformEv(%"class.SkSL::Expression"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.SkSL::Expression"* %0 to i1 (%"class.SkSL::Expression"*)***
  %3 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %3, i64 4
  %5 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.SkSL::Expression"* %0) #9
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIfE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal"*, i32) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL7LiteralIfE12coercionCostERKNS_4TypeE(%"class.SkSL::Literal"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0
  %8 = bitcast %"class.SkSL::Literal"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %9 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %9, i64 3
  %11 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.SkSL::Type"* %11(%"class.SkSL::Expression"* %7) #9
  %13 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %12, %"class.SkSL::Type"* dereferenceable(184) %1) #9
  %14 = extractvalue { i64, i8 } %13, 0
  %15 = extractvalue { i64, i8 } %13, 1
  br label %16

16:                                               ; preds = %2, %6
  %17 = phi i64 [ %14, %6 ], [ 0, %2 ]
  %18 = phi i8 [ %15, %6 ], [ 0, %2 ]
  %19 = insertvalue { i64, i8 } undef, i64 %17, 0
  %20 = insertvalue { i64, i8 } %19, i8 %18, 1
  ret { i64, i8 } %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIfE24getConstantSubexpressionEi(%"class.SkSL::Literal"*, i32) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIfE5cloneEv(%"class.SkSL::Literal"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 1
  %4 = bitcast float* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.SkSL::Type"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #9
  %10 = load i32, i32* %2, align 4
  %11 = bitcast i8* %9 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 45, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %9, i64 16
  %17 = bitcast i8* %16 to i64*
  store i64 %8, i64* %17, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 24
  %19 = bitcast i8* %18 to i32*
  store i32 %5, i32* %19, align 8
  %20 = bitcast i8* %9 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE(%"class.SkSL::Expression"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"class.SkSL::Expression"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %4 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %4, i64 3
  %6 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %5, align 8
  %7 = tail call dereferenceable(184) %"class.SkSL::Type"* %6(%"class.SkSL::Expression"* %0) #9
  %8 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %7, %"class.SkSL::Type"* dereferenceable(184) %1) #9
  ret { i64, i8 } %8
}

declare { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #3

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #3

declare void @_ZN4SkSL9to_stringEd(%"class.SkSL::String"* sret, double) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIlED0Ev(%"class.SkSL::Literal.202"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal.202"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIlE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal.202"*) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.202", %"class.SkSL::Literal.202"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  tail call void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* sret %0, i64 %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv(%"class.SkSL::Literal.202"*) unnamed_addr #2 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal.202"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 43
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal.202", %"class.SkSL::Literal.202"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %10 = bitcast %"class.SkSL::Expression"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %8, %11
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i32 [ %13, %6 ], [ -1, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal.202"*, i32) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE(%"class.SkSL::Literal.202"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, 3
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::Literal.202", %"class.SkSL::Literal.202"* %0, i64 0, i32 0
  %12 = bitcast %"class.SkSL::Literal.202"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %13 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %13, i64 3
  %15 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %14, align 8
  %16 = tail call dereferenceable(184) %"class.SkSL::Type"* %15(%"class.SkSL::Expression"* %11) #9
  %17 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %16, %"class.SkSL::Type"* dereferenceable(184) %1) #9
  %18 = extractvalue { i64, i8 } %17, 0
  %19 = extractvalue { i64, i8 } %17, 1
  br label %20

20:                                               ; preds = %2, %6, %10
  %21 = phi i64 [ %18, %10 ], [ 0, %6 ], [ 0, %2 ]
  %22 = phi i8 [ %19, %10 ], [ 0, %6 ], [ 0, %2 ]
  %23 = insertvalue { i64, i8 } undef, i64 %21, 0
  %24 = insertvalue { i64, i8 } %23, i8 %22, 1
  ret { i64, i8 } %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi(%"class.SkSL::Literal.202"*, i32) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.202", %"class.SkSL::Literal.202"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIlE5cloneEv(%"class.SkSL::Literal.202"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal.202", %"class.SkSL::Literal.202"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal.202", %"class.SkSL::Literal.202"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.SkSL::Type"** %3 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #9
  %7 = load i32, i32* %2, align 4
  %8 = bitcast i8* %6 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 %7, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 43, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %14, align 8
  %15 = bitcast i8* %6 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %15
}

declare void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* sret, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL6IRNodeD2Ev(%"class.SkSL::IRNode"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIbED0Ev(%"class.SkSL::Literal.209"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal.209"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIbE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal.209"*) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.209", %"class.SkSL::Literal.209"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !65
  %5 = icmp eq i8 %4, 0
  %6 = select i1 %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)
  %7 = select i1 %5, i64 5, i64 4
  %8 = trunc i64 %7 to i8
  %9 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 %8, i8* %10, align 1
  %11 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 %6, i64 %7, i1 false) #9
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv(%"class.SkSL::Literal.209"*) unnamed_addr #2 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal.209"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 31
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal.209", %"class.SkSL::Literal.209"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !65
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %11 = bitcast %"class.SkSL::Expression"* %10 to i8*
  %12 = load i8, i8* %11, align 8, !range !65
  %13 = icmp ne i8 %12, 0
  %14 = xor i1 %9, %13
  %15 = zext i1 %14 to i32
  br label %16

16:                                               ; preds = %2, %6
  %17 = phi i32 [ %15, %6 ], [ -1, %2 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal.209"*, i32) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi(%"class.SkSL::Literal.209"*, i32) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.209", %"class.SkSL::Literal.209"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE5cloneEv(%"class.SkSL::Literal.209"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal.209", %"class.SkSL::Literal.209"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal.209", %"class.SkSL::Literal.209"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !65
  %5 = getelementptr inbounds %"class.SkSL::Literal.209", %"class.SkSL::Literal.209"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.SkSL::Type"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #9
  %9 = load i32, i32* %2, align 4
  %10 = bitcast i8* %8 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %9, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 31, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %7, i64* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  store i8 %4, i8* %17, align 8
  %18 = bitcast i8* %8 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %18
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray.242* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.242*, %class.SkTArray.242* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %class.SkTArray.242* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.242* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray.242* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %42, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %42, align 8
  %44 = icmp eq %"class.SkSL::Expression"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Expression"* %43 to void (%"class.SkSL::Expression"*)***
  %47 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %48, align 8
  tail call void %49(%"class.SkSL::Expression"* nonnull %43) #9
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %62, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %62, align 8
  %64 = icmp eq %"class.SkSL::Expression"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Expression"* %63 to void (%"class.SkSL::Expression"*)***
  %67 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %68, align 8
  tail call void %69(%"class.SkSL::Expression"* nonnull %63) #9
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray.242* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.242*, i32, i32) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #9
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %61, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %61, align 8
  %63 = icmp eq %"class.SkSL::Expression"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Expression"* %62 to void (%"class.SkSL::Expression"*)***
  %66 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, align 8
  tail call void %68(%"class.SkSL::Expression"* nonnull %62) #9
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.242* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #9
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

declare void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"*, i32, %"class.SkSL::Variable"*, i8 signext) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4SkSL3dsl13DSLExpression1xENS0_12PositionInfoE: argument 0"}
!4 = distinct !{!4, !"_ZN4SkSL3dsl13DSLExpression1xENS0_12PositionInfoE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4SkSL3dsl13DSLExpression1yENS0_12PositionInfoE: argument 0"}
!7 = distinct !{!7, !"_ZN4SkSL3dsl13DSLExpression1yENS0_12PositionInfoE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN4SkSL3dsl13DSLExpression1zENS0_12PositionInfoE: argument 0"}
!10 = distinct !{!10, !"_ZN4SkSL3dsl13DSLExpression1zENS0_12PositionInfoE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN4SkSL3dsl13DSLExpression1wENS0_12PositionInfoE: argument 0"}
!13 = distinct !{!13, !"_ZN4SkSL3dsl13DSLExpression1wENS0_12PositionInfoE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN4SkSL3dsl13DSLExpression1rENS0_12PositionInfoE: argument 0"}
!16 = distinct !{!16, !"_ZN4SkSL3dsl13DSLExpression1rENS0_12PositionInfoE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN4SkSL3dsl13DSLExpression1gENS0_12PositionInfoE: argument 0"}
!19 = distinct !{!19, !"_ZN4SkSL3dsl13DSLExpression1gENS0_12PositionInfoE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN4SkSL3dsl13DSLExpression1bENS0_12PositionInfoE: argument 0"}
!22 = distinct !{!22, !"_ZN4SkSL3dsl13DSLExpression1bENS0_12PositionInfoE"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN4SkSL3dsl13DSLExpression1aENS0_12PositionInfoE: argument 0"}
!25 = distinct !{!25, !"_ZN4SkSL3dsl13DSLExpression1aENS0_12PositionInfoE"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN4SkSL3dsl13DSLExpression5fieldEPKcNS0_12PositionInfoE: argument 0"}
!28 = distinct !{!28, !"_ZN4SkSL3dsl13DSLExpression5fieldEPKcNS0_12PositionInfoE"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN4SkSL3dsl13DSLExpressionaSES1_: argument 0"}
!31 = distinct !{!31, !"_ZN4SkSL3dsl13DSLExpressionaSES1_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN4SkSL3dsl21DSLPossibleExpressionaSENS0_13DSLExpressionE: argument 0"}
!34 = distinct !{!34, !"_ZN4SkSL3dsl21DSLPossibleExpressionaSENS0_13DSLExpressionE"}
!35 = !{!36, !33}
!36 = distinct !{!36, !37, !"_ZN4SkSL3dsl13DSLExpressionaSES1_: argument 0"}
!37 = distinct !{!37, !"_ZN4SkSL3dsl13DSLExpressionaSES1_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN4SkSL3dsl21DSLPossibleExpressionaSENS0_13DSLExpressionE: argument 0"}
!40 = distinct !{!40, !"_ZN4SkSL3dsl21DSLPossibleExpressionaSENS0_13DSLExpressionE"}
!41 = !{!42, !39}
!42 = distinct !{!42, !43, !"_ZN4SkSL3dsl13DSLExpressionaSES1_: argument 0"}
!43 = distinct !{!43, !"_ZN4SkSL3dsl13DSLExpressionaSES1_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN4SkSL3dsl21DSLPossibleExpressionaSENS0_13DSLExpressionE: argument 0"}
!46 = distinct !{!46, !"_ZN4SkSL3dsl21DSLPossibleExpressionaSENS0_13DSLExpressionE"}
!47 = !{!48, !45}
!48 = distinct !{!48, !49, !"_ZN4SkSL3dsl13DSLExpressionaSES1_: argument 0"}
!49 = distinct !{!49, !"_ZN4SkSL3dsl13DSLExpressionaSES1_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN4SkSL3dsl13DSLExpressionixES1_: argument 0"}
!52 = distinct !{!52, !"_ZN4SkSL3dsl13DSLExpressionixES1_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN4SkSL3dslppENS0_13DSLExpressionE: argument 0"}
!55 = distinct !{!55, !"_ZN4SkSL3dslppENS0_13DSLExpressionE"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN4SkSL3dslppENS0_13DSLExpressionEi: argument 0"}
!58 = distinct !{!58, !"_ZN4SkSL3dslppENS0_13DSLExpressionEi"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN4SkSL3dslmmENS0_13DSLExpressionE: argument 0"}
!61 = distinct !{!61, !"_ZN4SkSL3dslmmENS0_13DSLExpressionE"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN4SkSL3dslmmENS0_13DSLExpressionEi: argument 0"}
!64 = distinct !{!64, !"_ZN4SkSL3dslmmENS0_13DSLExpressionEi"}
!65 = !{i8 0, i8 2}
